void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U65 = 0;
    StrCopy( ref l_U75, "Ambient_Lightning_Flash_BG_S", 32 );
    StrCopy( ref l_U83, "Ambient_Lightning_Flash_FG_S", 32 );
    l_U91 = {0.00000000, 0.00000000, 0.00000000};
    l_U94 = {0.00000000, 0.00000000, 0.00000000};
    l_U97 = 1.00000000;
    l_U98 = {0.00000000, 0.00000000, 0.00000000};
    l_U101 = {0.00000000, 0.00000000, 0.00000000};
    l_U104 = 1.00000000;
    l_U105 = 0;
    l_U106 = 0;
    l_U107 = 0;
    l_U108 = 0;
    l_U109 = 0.50000000;
    l_U111 = 0;
    l_U112 = 0;
    l_U113 = {0, 0, 0};
    StrCopy( ref l_U116, "DUMMY", 32 );
    l_U124 = 1;
    l_U129 = 0;
    l_U130 = 0;
    l_U131 = 0;
    l_U134 = 0;
    l_U179 = -1;
    l_U180 = {64536, 64536, 64536};
    l_U183 = 0;
    l_U184 = 1;
    l_U185 = 0;
    l_U186 = 1.00000000;
    l_U187 = -5.00000000;
    l_U188 = 0;
    l_U189 = 0;
    l_U190 = 0;
    l_U194 = 42;
    l_U195 = 0;
    l_U196 = 0;
    l_U197 = 0;
    l_U198 = 0;
    l_U199 = 0;
    l_U200 = 90.00000000;
    l_U201 = {0.00000000, 0.00000000, 0.00000000};
    l_U204 = {0.00000000, 0.00000000, 0.00000000};
    l_U207 = 0;
    l_U208 = 0;
    l_U209 = 0;
    l_U210 = 0;
    l_U211 = 0;
    l_U212 = 0;
    l_U213 = nil;
    l_U214 = {0.00000000, 0.00000000, 0.00000000};
    l_U217 = 0;
    l_U218 = 0;
    l_U219 = 0;
    l_U221 = 0;
    l_U222 = 0;
    l_U223 = 1500;
    l_U275 = "PED_DEF";
    l_U317 = 1.00000000;
    l_U329 = 0;
    l_U370 = 0;
    l_U426 = "SCRIPT_MISSION\S_MARINA_DRY_DOCKS";
    l_U427 = 1;
    l_U428 = {43.62408000, 144.42020000, 1.80030500};
    l_U431 = {10.99219000, 175.80090000, 1.60013900};
    l_U434 = 0;
    l_U568 = {32.29411000, 154.07850000, 1.49000000};
    l_U571 = {30.93410000, 153.36850000, 2.77000000};
    l_U574 = 1;
    l_U575 = 0;
    l_U726 = 0;
    l_U727 = 0;
    l_U728 = 0;
    l_U729 = 0;
    l_U730 = 0;
    l_U731 = 0;
    l_U790 = 0;
    l_U813 = {44.24000000, 130.44800000, 2.80000400};
    l_U816 = {44.22000000, 131.63710000, 2.80000500};
    l_U819 = {50.05997000, 128.40880000, 2.80017400};
    l_U822 = {48.90389000, 131.03120000, 2.80012600};
    l_U825 = 209.65550000;
    l_U826 = 214.78920000;
    l_U852 = {47.42900000, 129.94300000, 5.34300000};
    l_U958 = 0;
    l_U1037 = 0;
    l_U1047 = 0;
    l_U1177 = {61.53165000, 139.75380000, 1.88425400};
    l_U1180 = 303.80630000;
    l_U1181 = -23.89964000;
    l_U1182 = -34.19735000;
    l_U1282 = {49.55333000, 139.98970000, 2.80004600};
    l_U1285 = 91.57090000;
    l_U1286 = 3.36716700;
    l_U1287 = -18.36352000;
    l_U1288 = 0;
    l_U1289 = 0;
    l_U1486 = -2011297806;
    l_U1860 = {64.95000000, 125.52000000, 2.13000000};
    l_U1863 = {64.04170000, 141.66970000, 6.60013900};
    l_U1866 = {25.20194000, 141.84540000, 2.80031500};
    l_U1869 = {30.43312000, 139.08150000, 2.74098700};
    l_U1872 = {23.11000000, 153.13000000, 1.79000000};
    l_U1875 = {26.04583000, 153.30480000, 1.63178800};
    l_U1878 = {26.75000000, 163.14000000, 1.57000000};
    l_U1881 = {38.82993000, 156.68290000, 1.80013200};
    l_U1884 = {28.96000000, 163.81000000, 1.58000000};
    l_U1887 = {25.17000000, 153.24000000, 1.67000000};
    l_U1890 = {44.82000000, 160.38000000, 2.19000000};
    l_U1893 = {28.02834000, 158.13140000, 1.56017100};
    l_U1896 = {37.33002000, 156.20840000, 1.63207800};
    l_U1899 = {36.33030000, 160.48590000, 1.80013200};
    l_U1902 = {46.63000000, 156.21000000, 2.16000000};
    l_U1905 = {24.11818000, 158.61830000, 1.66993400};
    l_U1908 = {1.42566600, 174.12820000, 1.52259400};
    l_U1911 = {1.42186300, 172.48590000, 1.51474700};
    l_U1914 = {1.25414600, 171.10180000, 1.51244700};
    l_U1917 = {5.87099800, 166.65610000, 1.54390000};
    l_U1920 = {8.65555300, 170.31970000, 1.59260400};
    l_U1923 = {6.38234200, 171.45900000, 1.51583900};
    l_U1926 = {33.12000000, 159.96000000, 1.57000000};
    l_U1929 = {26.22000000, 161.47000000, 1.53000000};
    l_U1932 = {24.29000000, 158.43000000, 1.66000000};
    l_U1935 = "LEVEL_S_MARINA_CP_07";
    l_U1936 = "BLUEPRINT_CAM";
    l_U1937 = "NEWSPAPER_CAM";
    l_U1948 = 0;
    l_U1958 = 0;
    l_U1959 = 0;
    l_U1960 = 0;
    l_U1961 = 0;
    l_U1962 = 1.00000000;
    l_U1963 = 1;
    l_U1964 = 1;
    sub_1775( "GA", "Script s_marina_DryDocks.sc is starting...", 0 );
    sub_1824();
    sub_3178( 7, 1 );
    sub_3613();
    sub_3667();
    sub_7872();
    if (g_U788 == 8)
    {
        sub_8660();
        sub_8694();
        sub_16827();
        sub_20085( 1 );
        sub_20085( 0 );
        sub_20709();
        sub_20939();
        sub_21916( 1 );
        sub_22127( ref g_U1502, 1 );
        sub_22127( ref g_U1509, 1 );
        sub_22267( ref g_U1502, 1 );
        sub_22267( ref g_U1509, 1 );
        sub_22127( ref l_U561, 1 );
        sub_22267( ref l_U561, 1 );
        l_U574 = 6;
        g_U789 = 8;
        sub_13163( ref l_U471, g_U789, sub_8842(), g_U790[8], g_U899[8], g_U936[8], g_U973[8], 0 );
        sub_22493( 1000 );
        l_U434 = 4;
    }
    else
    {
        sub_22582();
        sub_22807();
        sub_23535();
        l_U574 = 1;
        if (g_U788 == 7)
        {
            sub_23783( 0, 0 );
            sub_24052();
            g_U1229 = 1;
            g_U1228 = 1;
        }
    }
    while (NOT IS_EXITFLAG_SET())
    {
        if (l_U427 == 0)
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        else
        {
            sub_24312();
            sub_25717();
            sub_34996();
            sub_57286();
            WAIT( 0 );
        }
    }
    sub_28192();
    sub_57449();
    sub_57706();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_marina_DryDocks" );
    SET_EXITFLAG_RESPONSE();
    sub_1775( "GA", "Script s_marina_DryDocks.sc is terminating...", 0 );
    return;
}

void sub_1775(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1824()
{
    sub_1775( "GA", "LOAD_ASSETS start", 0 );
    REQUEST_ANIM_DICT( "npc_pstl_cover_grenade", 0 );
    "[doubled result, dropped if not asigned]";
    REQUEST_ANIM_DICT( "npc_rifle_cover_grenade", 0 );
    "[doubled result, dropped if not asigned]";
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "S_MAR_BLUEPRINT", 1 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "VIG_07_DOCKS_GATE_OPEN_PSTL_MAX_FWD", 1 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "smar_Newspaper", 1 );
    if (g_U788 == 7)
    {
        sub_2050( g_U1033 );
        sub_2050( g_U1088 );
        sub_2050( g_U1066 );
        sub_2050( g_U1103 );
        sub_2050( g_U1101 );
        sub_2050( g_U1109 );
        sub_2050( g_U1110 );
        sub_2050( g_U1055 );
        sub_2050( g_U1056 );
        sub_2050( g_U1064 );
    }
    else if (g_U788 == 8)
    {
        sub_2354( 1 );
    }
    else
    {
        sub_2422( g_U1033, 1 );
        sub_2422( g_U1088, 1 );
        sub_2422( g_U1066, 1 );
        sub_2422( g_U1103, 1 );
        sub_2422( g_U1101, 1 );
        sub_2422( g_U1109, 1 );
        sub_2422( g_U1110, 1 );
        sub_2422( g_U1055, 1 );
        sub_2422( g_U1056, 1 );
        sub_2422( g_U1064, 1 );
    }
    sub_2754();
    sub_2942( "SMARAUD" );
    sub_3060( l_U426, 1 );
    sub_2849( l_U1935, 0, 1 );
    sub_1775( "GA", "LOAD_ASSETS end", 0 );
    return;
}

void sub_2050(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_2166( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        WAIT( 0 );
    }
    return;
}

void sub_2166(unknown uParam0)
{
    return;
}

void sub_2354(boolean bParam0)
{
    if (bParam0)
    {
        sub_2050( g_U1034 );
        sub_2050( 1474909793 );
        sub_2050( g_U1055 );
        sub_2050( g_U1056 );
    }
    else
    {
        sub_2422( g_U1034, 1 );
        sub_2422( 1474909793, 1 );
        sub_2422( g_U1055, 1 );
        sub_2422( g_U1056, 1 );
    }
    sub_2422( g_U776, 1 );
    return;
}

void sub_2422(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_2166( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_2754()
{
    if (l_U3)
    {
        sub_2166( "Water Respawn: Anim dictionary 'SWIM' already requested" );
    }
    else
    {
        sub_2849( "SWIM", 0, 1 );
        l_U3 = 1;
    }
    return;
}

void sub_2849(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_2942(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_2962();
    return;
}

void sub_2962()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_3060(unknown uParam0, int iParam1)
{
    LOAD_SCRIPT_AUDIO_BANK( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3178(unknown uParam0, unknown uParam1)
{
    sub_3195( 68019059, uParam1 );
    switch (uParam0)
    {
        case 0:
        case 1:
        sub_3195( -1074756423, uParam1 );
        break;
        case 2:
        sub_3195( -612753081, uParam1 );
        break;
        case 3:
        sub_3195( 1194438308, uParam1 );
        sub_3195( -612753081, uParam1 );
        break;
        case 4:
        sub_3195( 1194438308, uParam1 );
        sub_3195( -612753081, uParam1 );
        sub_3195( -168327769, uParam1 );
        sub_3195( -1074756423, uParam1 );
        break;
        case 5:
        case 6:
        sub_3195( 1194438308, uParam1 );
        sub_3195( -168327769, uParam1 );
        sub_3195( -612753081, uParam1 );
        sub_3195( -1074756423, uParam1 );
        break;
        case 7:
        case 8:
        case 9:
        sub_3195( -110877124, uParam1 );
        sub_3195( -1980065396, uParam1 );
        sub_3195( -168327769, uParam1 );
        sub_3195( 1194438308, uParam1 );
        sub_3195( -612753081, uParam1 );
        sub_3195( -1074756423, uParam1 );
        sub_3195( 1308526797, uParam1 );
        break;
    }
    return;
}

void sub_3195(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3613()
{
    l_U1854 = GET_SOUND_ID();
    l_U1856 = GET_SOUND_ID();
    l_U1855 = GET_SOUND_ID();
    return;
}

void sub_3667()
{
    sub_1775( "TEH", "P_SETUP_STATIC_DATA start", 0 );
    sub_3753( ref l_U531[0], 64.20631000, 129.85020000, 1.79958700, 65386, -1244118273, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U531[1], 65.56209000, 127.85700000, 1.80008500, 65386, 332782896, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U583[0], 50.00550000, 140.56000000, 2.80004600, -116.00000000, 1460535969, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U583[1], 48.28809000, 141.28010000, 6.60014400, -144.00000000, -778943171, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U583[2], 51.43140000, 134.54530000, 1.80016600, 227.38300000, 663091021, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U627, 41.65018000, 136.85210000, 6.68448100, 294.22420000, 1193030432, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U732[0], l_U813, l_U825, 1117488492, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U732[1], l_U816, l_U826, -2113123984, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U759[0], l_U819, l_U825, 691221294, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U759[1], l_U822, l_U826, 1566030438, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U1709, l_U1866, 270.00000000, 321795157, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U1498[0], l_U1872, 144.99000000, -186514083, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U1498[1], l_U1878, 185.00000000, 1706176076, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U1498[2], l_U1884, 185.00000000, 596754385, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U1498[3], l_U1887, 185.00000000, 244341666, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U1498[4], l_U1902, 185.00000000, -1563292726, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U1570[0], 10.45647000, 181.46320000, 1.60013900, 159.14000000, 507906917, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U1570[1], 13.62502000, 170.74340000, 1.59261500, 78.83000000, -2026096640, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U1570[2], 9.00286300, 169.28370000, 1.59162900, 168.53000000, 2053826403, 7, 3, 2, 0, 0 );
    l_U1667[0] = {6.97185000, 161.15520000, 1.89844300};
    l_U1680[0] = 299.82400000;
    l_U1667[1] = {0.75311900, 172.22570000, 1.53109800};
    l_U1680[1] = 153.00000000;
    l_U1667[2] = {8.34468800, 160.51970000, 1.89660100};
    l_U1680[2] = 288.66520000;
    l_U1667[3] = {17.03408000, 156.55480000, 2.52549600};
    l_U1680[3] = 288.66520000;
    sub_3753( ref l_U1614[0], l_U1667[0], l_U1680[0], 112352182, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U1614[1], l_U1667[1], l_U1680[1], -1670332742, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U1614[2], l_U1667[2], l_U1680[2], -1421239225, 7, 3, 2, 0, 0 );
    sub_3753( ref l_U1614[3], l_U1667[3], l_U1680[3], -529783422, 7, 3, 2, 0, 0 );
    l_U1685[0] = {43.60426000, 150.65680000, 1.80030500};
    l_U1698[0] = 65.06000000;
    l_U1685[1] = {42.32448000, 144.78270000, 1.80030500};
    l_U1698[1] = 11.00000000;
    l_U1685[2] = {43.60426000, 150.65680000, 1.80030500};
    l_U1698[2] = 65.06000000;
    l_U1685[3] = {49.60281000, 149.75800000, 1.88245800};
    l_U1698[3] = 110.00000000;
    sub_5044( ref l_U1048, "TRIGGER_WRONG_ROOM", 43.97037000, 131.00390000, 2.80013800, 6.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U641, "TRIGGER_START_CATWALK_ATTACKER", 64.79000000, 128.10000000, 1.80000000, 8.00000000, 17.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U791, "TRIGGERBOX_MECH_TOP_CATWALK", 63.81703000, 141.77350000, 6.60014000, 3.00000000, 2.95000000, 3.51000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U1317, "TRIGGER_SETUP_CS_SHIPPING", 48.59000000, 133.85000000, 5.95000000, 3.00000000, 8.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U1738, "RELEASE_COVER_CS", 32.58816000, 147.93150000, 1.43649400, 45.00000000, 5.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U1759, "LOCK_CAGE_DOOR", 37.56000000, 138.96000000, 5.95000000, 5.00000000, 5.00000000, 2.68000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U1780, "Start_Slipway", 30.86905000, 138.69790000, 2.64272400, 5.00000000, 6.00000000, 10.68000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U1801, "DISABLE_DD_SLIP_SDODGE", 18.45000000, 183.63000000, -3.78000000, 18.00000000, 10.00000000, 8.00000000, 0.00000000, 0.00000000, 65446, 1 );
    sub_5044( ref l_U1822, "TRIGGER_INSIDE_WAREHOUSE_ONE", 58.68155000, 136.59230000, 1.80016700, 21.00000000, 17.00000000, 15.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U855, "TRIGGER_THUNDER_AND_LIGHTNING", 59.15000000, 115.88000000, 1.07000000, 26.28000000, 4.94000000, 5.46000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U897, "TRIGGER_BEGIN_FIRST_DRY_DOCSK_GAMEPLAY", 59.15000000, 114.88000000, 1.07000000, 26.28000000, 4.94000000, 5.46000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U876, "TRIGGER_UNSAFE_GARAGE_SPAWN", 59.15000000, 111.88000000, 1.07000000, 26.28000000, 8.50000000, 5.46000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U663, "TRIGGER_DROPDOWN_START", 33.37378000, 139.20340000, 2.77065400, 2.00000000, 4.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U684, "TRIGGER_DROPDOWN_END", 28.37378000, 139.20340000, 2.77065400, 2.00000000, 4.00000000, 8.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U705, "AT_THE_OUTSIDE_DOOR", 25.64981000, 140.51730000, 2.80013800, 2.00000000, 2.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U1359, "TRIGGER_OPEN_SLUICE_DRY_DOCKS", 3.77732100, 172.83500000, 1.48548400, 15.58000000, 15.91000000, 5.76000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U1380, "TRIGGER_CLOSE_SLUICE_DRY_DOCKS", -22.98458000, 179.37750000, 1.60013000, 2.00000000, 2.00000000, 5.76000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U1401, "TRIGGER_LATCH_DOOR_DRY_DOCKS", 65.02749000, 124.73970000, 1.78114800, 2.00000000, 2.00000000, 5.76000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U1422, "TRIGGER_ENTER_WAREHOUSE", 65.09730000, 126.94680000, 1.80016600, 3.00000000, 3.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U1338, "TRIGGER_FINAL_WAVE_AND_CLOSE_GATE", 29.24418000, 153.41230000, 1.51729200, 4.00000000, 32.00000000, 6.00000000, 0.00000000, 0.00000000, -70.00000000, 1 );
    sub_5044( ref l_U918, "TRIGGER_GATE_SAFETY", 10.50464000, 171.98640000, 0.00000000, 6.00000000, 28.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U1443, "TRIG_DD_GATE_POI_ACTION", -1.22416000, 171.96650000, 1.57593900, 10.00000000, 10.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5044( ref l_U1464, "TRIG_DD_GATE_POI_AREA", -1.22416000, 171.96650000, 1.57593900, 4.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7015( ref l_U1497, "TETHER_WAREHOUSE_DOOR", 23.08826000, 145.01390000, 0.00000000, 8.00000000, 6.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7015( ref l_U1723, "TETHER_BOAT_ON_SUPPORTS", 24.79000000, 159.23000000, 1.62000000, 44.00000000, 22.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7015( ref l_U812, "TETHER_DD_WAREHOUSE", 55.34500000, 131.27000000, 1.00000000, 15.00000000, 8.50000000, 4.70000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7015( ref l_U662, "TETHER_CATWALK", 56.35000000, 141.10000000, 6.59000000, 13.71000000, 1.55000000, 2.41000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7338( ref l_U561, g_U1049, 42.87917000, 137.43970000, 7.73429000, 0.00000000, 0.00000000, 0.00000000 );
    sub_7396( ref l_U561, -85.00000000, 85.00000000 );
    sub_7594( 21.84000000, 180.13000000, 0.20000000, 120.00000000, 8.00000000, -4.00000000 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "C9C331C9_7780FC92_Corner1", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "C9C331C9_7780FC92_Corner2", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "C9C331C9_47334F5_Popover2", 1 );
    sub_1775( "GA", "P_SETUP_STATIC_DATA end", 0 );
    return;
}

void sub_3753(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_5044(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_7015(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_7338(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_7396(int iParam0, float fParam1, float fParam2)
{
    if ((sub_7408( iParam0 )) == 0)
    {
        sub_7474( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

int sub_7408(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_7474(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

int sub_7594(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    if (l_U2 >= 10)
    {
        return 0;
    }
    l_U4[l_U2]._fU0 = {uParam0};
    l_U4[l_U2]._fU12 = uParam3;
    l_U4[l_U2]._fU16 = uParam4;
    l_U4[l_U2]._fU20 = uParam5;
    l_U2++;
    return 1;
}

void sub_7872()
{
    sub_1775( "GA", "INITIALIZE_SCRIPT_DATA start", 0 );
    l_U726 = 0;
    l_U427 = 1;
    l_U727 = 0;
    l_U728 = 0;
    l_U729 = 0;
    l_U730 = 0;
    l_U731 = 0;
    l_U789 = 0;
    l_U790 = 0;
    l_U827 = 0;
    l_U829 = 0;
    l_U830 = 0;
    l_U831 = 0;
    l_U832 = 0;
    l_U1858 = 0;
    l_U1852 = 0;
    l_U1047 = 0;
    l_U1288 = 0;
    l_U1289 = 0;
    sub_8048( ref l_U525, 1.00000000, 0 );
    l_U1485 = -1;
    l_U1486 = -2011297806;
    l_U1156 = 0;
    l_U1280 = 0;
    l_U1037 = 0;
    sub_8258( ref l_U1038 );
    l_U1708 = 0;
    l_U958 = 0;
    sub_8048( ref l_U1299, 1.00000000, 0 );
    sub_8048( ref l_U1305, 1.00000000, 0 );
    sub_8048( ref l_U1311, 1.00000000, 0 );
    l_U1853 = 0;
    l_U1857 = 0;
    l_U1859 = 0;
    g_U1017 = 0;
    sub_8459( ref l_U1949, 1000, 1, 0 );
    sub_8258( ref l_U969 );
    sub_1775( "GA", "INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_8048(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_8258(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_8459(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_8660()
{
    sub_2422( g_U1064, 1 );
    sub_2754();
    return;
}

void sub_8694()
{
    unknown uVar2;
    unknown uVar3;

    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    if (NOT (sub_8717( ref l_U471 )))
    {
        if ((IS_PED_DEAD( sub_8842() )) == 0)
        {
            uVar2 = sub_11093( sub_8842(), 1194438308, 300, 0, 1 );
            uVar3 = sub_10461( sub_8842(), 68019059, 1, 300, 1 );
            if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
            {
                ENABLE_WEAPON_ATTACHMENT( uVar3, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar3, 14, 0 );
                ENABLE_WEAPON_ATTACHMENT( uVar3, 8, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar3, 8, 1 );
            }
        }
    }
    g_U789 = 8;
    if (NOT l_U471._fU0)
    {
        sub_13163( ref l_U471, g_U789, sub_8842(), g_U790[8], g_U899[8], g_U936[8], g_U973[8], 0 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U936[8], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U973[8], 1065353216, 0 );
    return;
}

int sub_8717(unknown uParam0)
{
    sub_1775( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_8908( uParam0, sub_8842() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_8842()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_8864() );
    }
    return 0;
}

void sub_8864()
{
    return GET_PLAYER_ID();
}

void sub_8908(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1775( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_9092( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_10169( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_10461( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_10808( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_10461( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_10808( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_10461( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_10808( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_11093( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_10808( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_11093( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_10808( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_11586( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_11747( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_8842(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1775( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_9092(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_9124( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_9124(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_10169(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_10461(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_2166( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_10808(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_11093(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_2166( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_11586(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_11747(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_9124( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_11819( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_11819(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_13163(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1775( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1775( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_11747( iParam1 );
        sub_13422( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_13873( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_13873( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_14105( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_13873( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_14105( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_14105( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_13873( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_14105( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_14105( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_14105( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_13873( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_14105( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_14105( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_14105( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_14105( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_15663( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1775( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_13422(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_9124( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1775( "TEH", "Ending context", 0 );
        sub_1775( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_13873(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_14105(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_15663(int iParam0)
{
    sub_2166( "CHECKPOINT DATA" );
    sub_15702( iParam0->_fU4 );
    sub_15725( iParam0->_fU16 );
    sub_15725( iParam0->_fU20 );
    sub_15725( iParam0->_fU24 );
    sub_15768( iParam0->_fU28 );
    sub_15768( iParam0->_fU56 );
    sub_15768( iParam0->_fU60 );
    sub_15768( iParam0->_fU64 );
    sub_15768( iParam0->_fU68 );
    sub_15768( iParam0->_fU72 );
    sub_15768( iParam0->_fU76 );
    sub_15768( iParam0->_fU80 );
    sub_15768( iParam0->_fU84 );
    sub_15768( iParam0->_fU88 );
    sub_15768( iParam0->_fU92 );
    sub_15725( iParam0->_fU32 );
    sub_15768( iParam0->_fU36 );
    sub_15768( iParam0->_fU40 );
    sub_15768( iParam0->_fU44 );
    sub_15725( iParam0->_fU136 );
    sub_15973( iParam0->_fU140 );
    sub_15768( iParam0->_fU52 );
    sub_2166( "---nRightHolsterAttachmentEnabled: " );
    sub_15768( iParam0->_fU96 );
    sub_2166( "---nRightHolsterAttachmentToggled: " );
    sub_15768( iParam0->_fU100 );
    sub_2166( "---nLeftHolsterAttachmentEnabled: " );
    sub_15768( iParam0->_fU104 );
    sub_2166( "---nLeftHolsterAttachmentToggled: " );
    sub_15768( iParam0->_fU108 );
    sub_2166( "---nRifleHolsterAttachmentEnabled: " );
    sub_15768( iParam0->_fU112 );
    sub_2166( "---nRifleHolsterAttachmentToggled: " );
    sub_15768( iParam0->_fU116 );
    sub_2166( "---nRightHandAttachmentEnabled: " );
    sub_15768( iParam0->_fU120 );
    sub_2166( "---nRightHandAttachmentToggled: " );
    sub_15768( iParam0->_fU124 );
    sub_2166( "---nLeftHandAttachmentEnabled: " );
    sub_15768( iParam0->_fU128 );
    sub_2166( "---nLeftHandAttachmentToggled: " );
    sub_15768( iParam0->_fU132 );
    sub_15768( l_U1 );
    sub_15768( 144 );
    return;
}

void sub_15702(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_15725(unknown uParam0)
{
    return;
}

void sub_15768(unknown uParam0)
{
    return;
}

void sub_15973(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_16827()
{
    int I;

    sub_1775( "GA", "P_SETUP_DRYDOCKS_CS start", 0 );
    l_U1722 = sub_16880( ref l_U1709 );
    if (NOT (IS_PED_DEAD( l_U1722 )))
    {
        sub_17559( l_U1722 );
        SET_PED_CAN_AVOID_DEATH_ZONES( l_U1722, 0 );
        SET_PED_DIES_INSTANTLY_IN_WATER( l_U1722, 1 );
        sub_11093( l_U1722, 1194438308, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1722, "warning guy" );
    sub_17729();
    sub_17834( 1194438308, 0, 25000, 25000 );
    sub_17944( 0, 1308526797, -612753081, 25000, 25000 );
    sub_17944( 3, -168327769, -612753081, 25000, 25000 );
    sub_17944( 4, 1194438308, 0, 25000, 25000 );
    sub_18129( ref l_U1498, ref l_U1564, ref l_U1299, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, "pi_cs_drydocks" );
    sub_19704( ref l_U1564, l_U1723, 1 );
    sub_17729();
    for ( I = 0; I <= 4; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1564[I] )))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( l_U1564[I] );
            SET_PED_COMBAT_ATTRIBUTES( l_U1564[I], 131072, 0 );
            sub_10461( l_U1564[I], -1980065396, 5, 3, 1 );
            SET_PED_CAN_AVOID_DEATH_ZONES( l_U1564[I], 0 );
            SET_PED_DIES_INSTANTLY_IN_WATER( l_U1564[I], 1 );
        }
    }
    SET_GROUP_GRENADE_PARAMS( l_U1299._fU0, 4000 );
    sub_1775( "GA", "P_SETUP_DRYDOCKS_CS end", 0 );
    return;
}

void sub_16880(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_2422( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_17359( iParam0->_fU40 );
    sub_17439( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_17359(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_17439(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_17559(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_17729()
{
    int I;

    for ( I = 0; I < 10; I++ )
    {
        l_U276[I]._fU0 = 0;
        l_U276[I]._fU4 = 25000;
        l_U276[I]._fU8 = 0;
        l_U276[I]._fU12 = 25000;
    }
    return;
}

void sub_17834(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < 10; I++ )
    {
        l_U276[I]._fU0 = uParam0;
        l_U276[I]._fU4 = uParam2;
        l_U276[I]._fU8 = uParam1;
        l_U276[I]._fU12 = uParam3;
    }
    return;
}

int sub_17944(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (iParam0 < 10)
    {
        l_U276[iParam0]._fU0 = uParam1;
        l_U276[iParam0]._fU4 = uParam3;
        l_U276[iParam0]._fU8 = uParam2;
        l_U276[iParam0]._fU12 = uParam4;
        return 1;
    }
    return 0;
}

void sub_18129(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5, boolean bParam6, unknown uParam7, unknown uParam8, unknown uParam9, int iParam10, unknown uParam11, unknown uParam12)
{
    int I;
    unknown uVar16;
    int iVar17;

    if ((uParam0^) != (uParam1^))
    {
        SCRIPT_ASSERT( "PED_ARRAY_INITIALIZE - Array sizes don't match!!", 0 );
        return;
    }
    sub_8048( uParam2, uParam4, 0 );
    if (IS_STRING_NULL( uParam12 ))
    {
        uParam12 = l_U275;
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_18272( (uParam1^)[I] );
        (uParam1^)[I] = sub_16880( ref (uParam0^)[I] );
        if (sub_18374( (uParam1^)[I] ))
        {
            sub_17559( (uParam1^)[I] );
            SET_PED_AI_TEMPLATE( (uParam1^)[I], uParam5 );
            SET_PED_ALERTNESS( (uParam1^)[I], uParam9 );
            SET_PED_ALLOWED_TO_SURRENDER( (uParam1^)[I], 0 );
            sub_18501( (uParam1^)[I], uParam2 );
            if (iParam3 != 0)
            {
                if (iParam3 != -1569615261)
                {
                    uVar16 = sub_11093( (uParam1^)[I], iParam3, uParam8, 0, 0 );
                }
                if (iParam10 != 0)
                {
                    sub_10461( (uParam1^)[I], iParam10, 0, uParam11, 0 );
                }
            }
            else if (I < 10)
            {
                iVar17 = l_U276[I]._fU0;
                if ((iVar17 != -1569615261) AND (iVar17 != 0))
                {
                    sub_11093( (uParam1^)[I], iVar17, l_U276[I]._fU4, 0, 0 );
                }
                if (l_U276[I]._fU8 != 0)
                {
                    sub_10461( (uParam1^)[I], l_U276[I]._fU8, 0, l_U276[I]._fU12, 0 );
                }
            }
            if (bParam6)
            {
                sub_18996( (uParam1^)[I], iParam3 );
            }
            switch (uParam7)
            {
                case 0: break;
                case 1:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                break;
                case 2:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                break;
                case 3:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                break;
            }
        }
        WAIT( 1 );
    }
    sub_19592( uParam1, uParam12 );
    return;
}

void sub_18272(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

int sub_18374(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

void sub_18501(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_2166( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_8048( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_8048( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_18996(unknown uParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case -1569615261:
        case 406496141:
        case -862236369:
        case 456708483:
        case -1464892298:
        case 68019059:
        case -612753081:
        case -820634585:
        SET_PED_COMBAT_RANGE_MAX( uParam0, 10.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 434544317:
        case 1845102363:
        case -168327769:
        case -184942895:
        case 514118749:
        case 1964270085:
        case -691403429:
        case 1478009203:
        case -1404433099:
        case 1194438308:
        SET_PED_COMBAT_RANGE( uParam0, 1 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 20.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case -1013714740:
        case -1074756423:
        case 1308526797:
        case 840671040:
        case 57534114:
        case 724901397:
        case 1992962408:
        SET_PED_COMBAT_RANGE( uParam0, 2 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 30.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 1224272620:
        case 10648147:
        case 377623895:
        case 319712764:
        case -110877124:
        case -1659006841:
        SET_PED_COMBAT_RANGE( uParam0, 3 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 50.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 5.00000000 );
        break;
    }
    return;
}

void sub_19592(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_19704(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_19740( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

void sub_19740(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (sub_18374( (uParam0^) ))
    {
        RESET_PED_TETHERING( (uParam0^) );
        sub_19779( ref uParam1, (uParam0^), uParam2 );
    }
    return;
}

void sub_19779(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_20085(boolean bParam0)
{
    int I;
    unknown uVar4;

    if (bParam0)
    {
        sub_17729();
        sub_17834( 1194438308, 0, 25000, 25000 );
        sub_17944( 0, 1308526797, 0, 25000, 25000 );
        sub_18129( ref l_U1570, ref l_U1610, ref l_U1305, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, "reinf Wave 1" );
        sub_17729();
        for ( I = 0; I <= 2; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U1610[I] )))
            {
                SET_PED_COMBAT_ATTRIBUTES( l_U1610[I], 131072, 0 );
                sub_10461( l_U1610[I], -1980065396, 5, 3, 1 );
                SET_PED_EMOTION_STATE( l_U1610[I], 1 );
                SET_PED_OBLIVIOUS_TO_DANGER( l_U1610[I], 1 );
                SET_PED_CAN_AVOID_DEATH_ZONES( l_U1610[I], 0 );
                SET_PED_DIES_INSTANTLY_IN_WATER( l_U1610[I], 1 );
            }
        }
        SET_GROUP_GRENADE_PARAMS( l_U1305._fU0, 4000 );
    }
    else
    {
        sub_17729();
        sub_17834( 1194438308, 0, 25000, 25000 );
        sub_17944( 0, 1308526797, -612753081, 25000, 25000 );
        sub_18129( ref l_U1614, ref l_U1703, ref l_U1311, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, "reinf Wave 2" );
        sub_17729();
        for ( I = 0; I <= 3; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U1703[I] )))
            {
                SET_PED_COMBAT_ATTRIBUTES( l_U1703[I], 131072, 0 );
                sub_10461( l_U1703[I], -1980065396, 5, 3, 1 );
                SET_PED_EMOTION_STATE( l_U1703[I], 1 );
                SET_PED_OBLIVIOUS_TO_DANGER( l_U1703[I], 1 );
                SET_PED_CAN_AVOID_DEATH_ZONES( l_U1703[I], 0 );
                SET_PED_DIES_INSTANTLY_IN_WATER( l_U1703[I], 1 );
                SET_PED_COMBAT_ATTRIBUTES( l_U1703[I], 8192, 1 );
            }
        }
        SET_GROUP_GRENADE_PARAMS( l_U1311._fU0, 4000 );
    }
    return;
}

void sub_20709()
{
    if ((IS_PED_DEAD( l_U1722 )) == 0)
    {
        sub_1775( "BSW", "P_ACTIVATE_WARNING_GUY start", 0 );
        sub_20786( l_U1722 );
        SET_PED_SEEING_RANGE( l_U1722, 4.50000000, 75 );
        TASK_ATTACK_MOVE( l_U1722, l_U1869, 10.00000000, 20, -1, 2 );
    }
    return;
}

void sub_20786(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_20939()
{
    int I;

    l_U1729[0] = {30.82000000, 161.88000000, 2.49000000};
    l_U1729[1] = {21.87000000, 162.56000000, 2.64000000};
    for ( I = 0; I <= 1; I++ )
    {
        l_U1726[I] = sub_21033( g_U1055, l_U1729[I], 0, 0, 0, 0, 1, 0 );
        if (DOES_OBJECT_EXIST( l_U1726[I] ))
        {
            SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( l_U1726[I], 1 );
            SET_OBJECT_AS_PATH_OBSTACLE( l_U1726[I] );
            SET_OBJECT_PROOFS( l_U1726[I], 0, 0, 0, 1, 0 );
            CAMERA_CAN_TARGET_OBJECT( 1, l_U1726[I] );
            SET_OBJECT_TARGETTABLE( l_U1726[I], 1 );
        }
        else
        {
            sub_1775( "BSW", "this one failed to create", 0 );
            sub_15768( I );
        }
    }
    sub_21436( l_U1737 );
    l_U1737 = sub_21033( g_U1056, l_U571, 0.00000000, 90.00000000, -55.00000000, 0, 1, 0 );
    SET_OBJECT_TARGETTABLE( l_U1737, 1 );
    CAMERA_CAN_TARGET_OBJECT( 1, l_U1737 );
    SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( l_U1737, 1 );
    SET_OBJECT_PROOFS( l_U1737, 0, 0, 0, 1, 0 );
    FREEZE_OBJECT_POSITION( l_U1737, 1 );
    sub_21436( l_U1736 );
    l_U1736 = sub_21625( g_U1064, l_U568, 0.00000000, 0.00000000, -55.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( l_U1736 )) == 1)
    {
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( l_U1736, 1 );
        SET_OBJECT_AS_PATH_OBSTACLE( l_U1736 );
        SET_OBJECT_HEALTH( l_U1736, 200 );
    }
    return;
}

void sub_21033(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_2422( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_21436(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_21625(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_2422( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_21916(boolean bParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    sub_1775( "GA", "P_CREATE_SLIDING_GATE start", 0 );
    if (bParam0)
    {
        uVar3 = {g_U1542};
    }
    else
    {
        uVar3 = {g_U1554};
    }
    sub_21436( g_U1541 );
    sub_2422( 1474909793, 1 );
    g_U1541 = sub_21033( 1474909793, uVar3, g_U1548, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( g_U1541 ))
    {
        FREEZE_OBJECT_POSITION( g_U1541, 1 );
    }
    sub_1775( "GA", "P_CREATE_SLIDING_GATE end", 0 );
    return;
}

void sub_22127(int iParam0, int iParam1)
{
    if ((sub_7408( iParam0 )) == 0)
    {
        sub_7474( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_22267(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_7408( iParam0 )) == 0)
    {
        sub_7474( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_22493(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_22582()
{
    int I;

    sub_17729();
    sub_17834( 1194438308, 0, 25000, 25000 );
    sub_17944( 0, -168327769, -612753081, 25000, 25000 );
    sub_18129( ref l_U531, ref l_U558, ref l_U525, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, "Mech oUTside" );
    sub_17729();
    for ( I = 0; I < 2; I++ )
    {
        if (sub_18374( l_U1564[I] ))
        {
            SET_PED_CAN_AVOID_DEATH_ZONES( l_U1564[I], 0 );
            SET_ROOM_FOR_PED_BY_NAME( l_U558[I], ref g_U1208 );
        }
    }
    SET_GROUP_GRENADE_PARAMS( l_U1299._fU0, 4000 );
    return;
}

void sub_22807()
{
    sub_1775( "SP", "START - P_CREATE_BOAT_REPAIR_PICKUPS", "###" );
    sub_22872();
    g_U1581[0] = CREATE_PLACEMENT_ROTATE( 1699359515, 55.08000000, 116.33000000, 2.12000000, 1.49000000, -1.80000000, -0.70000000, 0, 0, 0, 1119092736 );
    g_U1581[1] = CREATE_PLACEMENT_ROTATE( -46756431, 55.48000000, 116.93000000, 2.02000000, 1.49000000, -1.97000000, 0.00000000, 0, 0, 0, 1119092736 );
    g_U1581[2] = CREATE_AMMOBAG_PLACEMENT_ROTATE( 56.09000000, 117.90000000, 2.89000000, 0.00000000, 0, -1.38000000, 0, -1.00000000, 0, 1119092736 );
    sub_23151( g_U1581[2] );
    sub_1775( "SP", "END - P_CREATE_BOAT_REPAIR_PICKUPS", "###" );
    return;
}

void sub_22872()
{
    sub_22890( g_U1581[0] );
    sub_22890( g_U1581[1] );
    sub_22890( g_U1581[2] );
    return;
}

void sub_22890(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_23151(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        SET_AMMOBAG_REGEN_TIME( uParam0, 10.00000000 );
        SET_AMMOBAG_REGEN_RANGE( uParam0, 3.00000000 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1088031219, 45 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 954369040, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1138793073, 95 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1087746638, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1295933220, 30 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1383321053, 85 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1481241171, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1889644301, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -790090695, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1742569970, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1575030772, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1622373246, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 558118158, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1701914198, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1126469201, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 936600426, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 205668857, 0 );
    }
    return;
}

void sub_23535()
{
    sub_1775( "GA", "P_DD_SETUP_ENTRY_DOORS start", 0 );
    sub_7338( ref g_U1502, 1853418955, 63.85340000, 126.70280000, 2.89940000, 0.00000000, 0.00000000, 180.00000000 );
    sub_7338( ref g_U1509, -516559282, 66.25360000, 126.70000000, 2.89940000, 0.00000000, 0.00000000, 0.00000000 );
    sub_22127( ref g_U1502, 1 );
    sub_22127( ref g_U1509, 1 );
    sub_22267( ref g_U1502, 1 );
    sub_22267( ref g_U1509, 1 );
    sub_1775( "GA", "P_DD_SETUP_ENTRY_DOORS end", 0 );
    return;
}

void sub_23783(int iParam0, boolean bParam1)
{
    sub_1775( "SP", "P_CREATE_BR_GARAGE_GATE", "###" );
    sub_21436( g_U1659 );
    g_U1659 = sub_21033( g_U1088, g_U785, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( g_U1659 )) == 1)
    {
        if (iParam0 == 1)
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1659, ref g_U1200 );
        }
        if (bParam1)
        {
            SET_OBJECT_VISIBLE( g_U1659, 0 );
            PLAY_OBJECT_ANIM( g_U1659, "p_ma_botdor_aa_h", ref g_U1138, 1000.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U1659, "p_ma_botdor_aa_h", ref g_U1138, 1.00000000 );
        }
        FREEZE_OBJECT_POSITION( g_U1659, 1 );
    }
    return;
}

void sub_24052()
{
    unknown uVar2;
    unknown uVar3;

    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U936[7], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U973[7], 1065353216, 0 );
    if (NOT (sub_8717( ref l_U435 )))
    {
        if ((IS_PED_DEAD( g_U779._fU4 )) == 0)
        {
            uVar2 = sub_11093( g_U779._fU4, 1194438308, 300, 0, 1 );
            uVar3 = sub_10461( g_U779._fU4, 68019059, 1, 300, 1 );
            if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
            {
                ENABLE_WEAPON_ATTACHMENT( uVar3, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar3, 14, 0 );
                ENABLE_WEAPON_ATTACHMENT( uVar3, 8, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar3, 8, 1 );
            }
        }
    }
    return;
}

void sub_24312()
{
    switch (l_U574)
    {
        case 1:
        sub_1775( "TEH", "playing music: DOCKS_SUSPENSE_SONG_01 DOCKS_SUSPENSE_1 ", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_2_3", "", 0, 3000, 5000, -1082130432, 0 );
        l_U576 = 0;
        l_U574 = 2;
        l_U575 = 2;
        break;
        case 3:
        sub_1775( "TEH", "playing music: Warehouse Restart DOCKS_02_2", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_2_3", "", 0, 3000, 5000, -1082130432, 0 );
        l_U576 = 0;
        l_U574 = 2;
        l_U575 = 2;
        break;
        case 2:
        if (l_U575 == 2)
        {
            if (l_U576 == 0)
            {
                AUDIO_MUSIC_PRELOAD_ONESHOT( "DOCKS_ONESHOT_10", 0 );
                if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
                {
                    sub_1775( "TEH", "playing music: Sussesfully preloaded DOCKS_ONESHOT_10", 0 );
                    l_U576 = 1;
                    l_U574 = 4;
                }
            }
        }
        break;
        case 4:
        if (l_U575 == 4)
        {
            if (l_U576 == 1)
            {
                if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
                {
                    sub_1775( "TEH", "playing music: MC_SHOOTING_STARTS", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_1_2_3", "", 0, 3000, 5000, -1082130432, 0 );
                    sub_1775( "TEH", "playing music: Sussesfully played MC_ONESHOT_PLAY_ONESHOT_10", 0 );
                    AUDIO_MUSIC_PLAY_ONESHOT();
                    l_U576 = 0;
                    l_U574 = 5;
                }
            }
        }
        break;
        case 5:
        if (l_U575 == 5)
        {
            sub_1775( "TEH", "playing music:DOCKS_02_1_2", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_1_2", "", 0, 5000, 5000, -1082130432, 0 );
            l_U574 = 7;
        }
        break;
        case 6:
        sub_1775( "TEH", "playing music:DOCKS_02_1_2", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_1_2", "", 0, 5000, 5000, -1082130432, 0 );
        l_U574 = 7;
        break;
        case 7:
        if (l_U575 == 7)
        {
            sub_1775( "TEH", "playing music: DOCKS_02 DOCKS_02_1_3_5 ", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_1_3_5", "", 0, 5000, 5000, -1082130432, 0 );
            l_U574 = 8;
        }
        break;
        case 8:
        if (l_U575 == 8)
        {
            sub_1775( "TEH", "playing music: DOCKS_SONG_02   DOCKS_02_3_5", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_3_5", "", 0, 5000, 8000, -1082130432, 0 );
            l_U574 = 9;
        }
        break;
        case 9:
        if (l_U575 == 9)
        {
            sub_1775( "TEH", "playing music: DOCKS_SONG_02   DOCKS_02_3", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_3", "", 0, 8000, 5000, -1082130432, 0 );
            l_U574 = 10;
        }
        break;
    }
    return;
}

void sub_25717()
{
    if ((g_U789 == 8) || (g_U789 == 7))
    {
        if (l_U1948 == 0)
        {
            if ((IS_PED_DEAD( sub_8842() )) == 1)
            {
                sub_1775( "SBA", "Player died in Dry Docks checkpoint", 0 );
                l_U1948 = 1;
                sub_25835( 1 );
            }
            else if (sub_25902())
            {
                sub_1775( "SBA", "HANDLE_CHECKPOINTS - Restart Drydocks, setting eFailure = STATE_FAIL_WAITING", 0 );
                l_U1948 = 1;
            }
        }
        sub_26431();
    }
    return;
}

void sub_25835(unknown uParam0)
{
    sub_1775( "NS", "P_SETUP_PLAYER_DEATH_CAM()", 0 );
    uParam0 = uParam0;
    return;
}

int sub_25902()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_8842() )))
        {
            SET_PED_FORCED_TO_WALK( sub_8842(), 0 );
            SET_PLAYER_FORCED_AIM( sub_8864(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_8864(), 1 );
            if ((IS_PED_VISIBLE( sub_8842() )) == 0)
            {
                SET_PED_VISIBLE( sub_8842(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_26431()
{
    switch (l_U1948)
    {
        case 0: break;
        case 1:
        if (sub_26514())
        {
            l_U1948 = 2;
        }
        else if ((sub_26554( 0 )) == 1)
        {
            l_U1948 = 2;
        }
        break;
        case 2:
        if ((g_U1236[9]._fU40 != 4) AND (g_U1236[9]._fU40 != 0))
        {
            if (g_U1360 != 1)
            {
                sub_1775( "SBA", "Shutting down script for wetdocks.", 0 );
                g_U1230 = 1;
                sub_27763( ref g_U1236[9] );
                SET_EXITFLAG_FOR_SCRIPT( g_U1236[9]._fU32 );
                sub_1775( "SBA", "Going to: eFailure = STATE_FAIL_WAITING_PLAYER_RESPAWN...", 0 );
                l_U1948 = 3;
            }
        }
        else
        {
            sub_1775( "SBA", "Going to: eFailure = STATE_FAIL_WAITING_PLAYER_RESPAWN...", 0 );
            l_U1948 = 3;
        }
        break;
        case 3:
        if (NOT (IS_PED_DEAD( sub_8842() )))
        {
            sub_1775( "CCB", "Deactivating bullettime...", 0 );
            DEACTIVATE_BULLET_TIME( 0, 0 );
            END_POSTFX_BLENDER( 3, 0 );
            l_U1948 = 4;
            sub_1775( "CCB", "eFailure - STATE_FAIL_CLEANUP", 0 );
        }
        break;
        case 4:
        if (NOT (IS_PLAYER_DEAD( sub_8864() )))
        {
            if (NOT (IS_PED_DEAD( sub_8842() )))
            {
                SET_PLAYER_CONTROL( sub_8864(), 0, 0 );
            }
        }
        DO_SCREEN_FADE_OUT( 0 );
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        sub_28192();
        if (g_U789 == 7)
        {
            sub_29052();
        }
        ISEQ_UNREGISTER_ENTITY( -2011297806, "max_open_gate" );
        ISEQ_UNREGISTER_ENTITY( -2011297806, "slip_gate" );
        sub_28345( -2011297806, 1 );
        ISEQ_UNREGISTER_ENTITY( 284403121, "max_open_gate_rifle" );
        ISEQ_UNREGISTER_ENTITY( 284403121, "slip_gate" );
        sub_28345( 284403121, 1 );
        if (sub_29373())
        {
            CLEAR_PED_TASKS_IMMEDIATELY( sub_8842() );
            PED_ACTION_TREE_PLAY_NODE( sub_8842(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        }
        sub_21436( g_U1541 );
        l_U1948 = 5;
        sub_1775( "CCB", "eFailure - STATE_FAIL_RESTORE", 0 );
        break;
        case 5:
        sub_1775( "SP", "eFailure = STATE_FAIL_RESTORE", 0 );
        sub_29600();
        sub_3667();
        sub_7872();
        if (g_U789 == 7)
        {
            sub_8908( ref l_U435, sub_8842() );
            SET_HELPER_TRACKING_MODE( 1 );
            l_U574 = 3;
            sub_29790();
            sub_22582();
            sub_22807();
            sub_23783( 0, 0 );
            sub_23535();
            g_U789 = 7;
            sub_30219();
            sub_30538();
            l_U434 = 1;
            g_U1228 = 1;
            g_U1229 = 1;
        }
        else
        {
            sub_8908( ref l_U471, sub_8842() );
            if (sub_29373())
            {
                SET_ROOM_FOR_PED_BY_NAME( sub_8842(), ref g_U1216 );
                FREEZE_PED_POSITION( sub_8842(), 1 );
            }
            sub_8660();
            sub_16827();
            sub_20085( 1 );
            sub_20085( 0 );
            sub_20939();
            sub_21916( 1 );
            l_U574 = 6;
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U936[8], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U973[8], 1065353216, 0 );
            SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
            l_U434 = 4;
            if (IS_DEATH_PANEL_WIPE_ALLOWED())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
        }
        if (g_U1618._fU64)
        {
            g_U1618._fU64 = 0;
        }
        l_U1948 = 6;
        sub_1775( "CCB", "eFailure - STATE_FAIL_RESTART", 0 );
        break;
        case 6:
        if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
        {
            if (sub_29373())
            {
                SET_PED_VISIBLE( sub_8842(), 1 );
                SET_PED_INVINCIBLE( sub_8842(), 0 );
                FREEZE_PED_POSITION( sub_8842(), 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_8864() )))
            {
                SET_PLAYER_CONTROL( sub_8864(), 1, 0 );
            }
            SET_HELPER_TRACKING_MODE( 0 );
            if (g_U789 == 8)
            {
                sub_20709();
            }
            DO_SCREEN_FADE_IN( 500 );
            sub_1775( "CCB", "eFailure - STATE_FAIL_IDLE", 0 );
            l_U1948 = 0;
            sub_1775( "CCB", "eCheckpoint - STATE_CHECKPOINT_INIT", 0 );
        }
        else
        {
            sub_1775( "CCB", "Waiting for stream requests...", 0 );
        }
        break;
    }
    return;
}

void sub_26514()
{
    return g_U648;
}

int sub_26554(int iParam0)
{
    iParam0 = 1;
    switch (l_U222)
    {
        case 0:
        if (NOT (sub_26615( ref l_U224 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_8842() )))
            {
                l_U223 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_8459( ref l_U224, l_U223, 1, 1 );
            sub_26734( ref l_U224 );
        }
        if (sub_26854( ref l_U224 ))
        {
            sub_1775( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_8842() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_8864() )))
            {
                SET_PLAYER_CONTROL( sub_8864(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U222 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U222 = 2;
            }
            else
            {
                l_U222 = 3;
            }
        }
        break;
        case 2:
        sub_1775( "NS", "Player will QUIT", 0 );
        sub_27341();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1775( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_27341();
        return 1;
        break;
    }
    return 0;
}

int sub_26615(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_26734(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_26854(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_27341()
{
    sub_1775( "NS", "P_PostFailRetryCleanup", 0 );
    sub_8258( ref l_U224 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_8864() )))
    {
        SET_PLAYER_CONTROL( sub_8864(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U221 = 0;
    l_U221 = l_U221;
    l_U222 = 0;
    return;
}

void sub_27763(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_28192()
{
    sub_1775( "GA", "P_CLEANUP_ALL start", 0 );
    sub_8258( ref l_U988 );
    sub_8258( ref l_U1008 );
    sub_28253();
    l_U997 = 0;
    l_U1017 = 0;
    ISEQ_UNREGISTER_ENTITY( -2011297806, "max_open_gate" );
    ISEQ_UNREGISTER_ENTITY( -2011297806, "slip_gate" );
    sub_28345( -2011297806, 0 );
    ISEQ_UNREGISTER_ENTITY( 284403121, "max_open_gate_rifle" );
    ISEQ_UNREGISTER_ENTITY( 284403121, "slip_gate" );
    sub_28345( 284403121, 0 );
    sub_22890( g_U719._fU0 );
    STOP_SOUND( l_U1855, 0 );
    STOP_SOUND( l_U1856, 0 );
    STOP_SOUND( l_U1854, 0 );
    ENABLE_WALLA_ZONE( "S_MARINA_WZ_DRY_DOCK", 0 );
    sub_28699( ref l_U558 );
    sub_28699( ref l_U623 );
    sub_18272( l_U1722 );
    sub_28699( ref l_U786 );
    sub_28699( ref l_U1564 );
    sub_28699( ref l_U1610 );
    sub_28699( ref l_U1703 );
    sub_21436( l_U828 );
    sub_21436( l_U1298 );
    sub_21436( l_U1736 );
    sub_21436( l_U1737 );
    sub_21436( l_U1069 );
    sub_21436( l_U1183 );
    sub_28876( ref l_U1726 );
    sub_21436( l_U851 );
    sub_22890( l_U1290[0] );
    sub_22890( l_U1290[1] );
    sub_22890( l_U1297 );
    sub_8258( ref l_U939 );
    sub_22872();
    SET_HELPER_TRACKING_MODE( 0 );
    sub_1775( "GA", "P_CLEANUP_ALL end", 0 );
    return;
}

void sub_28253()
{
    l_U2 = 0;
    return;
}

void sub_28345(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_28699(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_18272( (uParam0^)[I] );
    }
    return;
}

void sub_28876(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_21436( (uParam0^)[I] );
    }
    return;
}

void sub_29052()
{
    sub_29067( g_U1034 );
    sub_29067( 1474909793 );
    sub_29067( g_U1056 );
    sub_29067( g_U776 );
    return;
}

void sub_29067(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_2166( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

int sub_29373()
{
    if (sub_18374( sub_8842() ))
    {
        return 1;
    }
    return 0;
}

void sub_29600()
{
    sub_1775( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", "###" );
    if ((IS_PED_DEAD( sub_8842() )) == 0)
    {
        SET_PED_RELATIONSHIP( sub_8842(), 0, 1 );
        SET_PED_RELATIONSHIP( sub_8842(), 0, 2 );
        SET_PED_RELATIONSHIP( sub_8842(), 0, 6 );
        SET_PED_RELATIONSHIP( sub_8842(), 0, 7 );
    }
    return;
}

void sub_29790()
{
    sub_1775( "GA", "P_DD_CREATE_WAREHOUSE_PLACEMENTS start", 0 );
    l_U1290[0] = sub_29886( -4072149, 49.95000000, 136.35000000, 4.41500000, 0, 0, 1, 0, 1, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1290[0], ref g_U1208 );
    l_U1290[1] = sub_29886( -4072149, 49.95000000, 136.42000000, 4.12000000, 0, 0, 2.20000000, 0, 1, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1290[1], ref g_U1208 );
    l_U1297 = sub_29886( 1699359515, 51.36848000, 137.37140000, 2.85000000, 1.70000000, 0, 1, 0, 1, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1297, ref g_U1208 );
    sub_1775( "GA", "P_DD_CREATE_WAREHOUSE_PLACEMENTS end", 0 );
    return;
}

void sub_29886(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_30219()
{
    vector vVar2;
    vector vVar5;

    sub_1775( "GA", "P_DD_CREATE_MID_WAREHOUSE_DOOR start", 0 );
    vVar2 = {47.07000000, 131.00000000, 2.80000000};
    vVar5 = {0.00000000, 0.00000000, 0.00000000};
    l_U828 = sub_21033( g_U1066, vVar2, vVar5, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U828 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U828, ref g_U1208 );
        SET_OBJECT_AS_PATH_OBSTACLE( l_U828 );
        FREEZE_OBJECT_POSITION( l_U828, 1 );
    }
    l_U851 = sub_21625( g_U1109, l_U852, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U851 ))
    {
        FREEZE_OBJECT_POSITION( l_U851, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U851, ref g_U1208 );
    }
    sub_1775( "GA", "P_DD_CREATE_MID_WAREHOUSE_DOOR end", 0 );
    return;
}

void sub_30538()
{
    sub_1775( "GA", "P_START_GAMEPLAY start", 0 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    sub_30593();
    sub_30913();
    sub_32967();
    sub_33242();
    sub_34197();
    sub_1775( "GA", "P_START_GAMEPLAY end", 0 );
    return;
}

void sub_30593()
{
    sub_1775( "BSW", "[GA] P_START_CS_MECH_OUTSIDE_1 start", 0 );
    sub_22267( ref g_U1502, 0 );
    sub_22267( ref g_U1509, 0 );
    sub_30679( ref g_U1502, 0 );
    sub_30679( ref g_U1509, 0 );
    sub_7396( ref g_U1502, 65446, 90 );
    sub_7396( ref g_U1509, 65446, 90 );
    sub_20786( l_U558[0] );
    CLEAR_PED_TASKS_IMMEDIATELY( l_U558[0] );
    TASK_ATTACK_MOVE( l_U558[0], 53.90667000, 116.47840000, 1.78130700, 10.00000000, 30.00000000, -1082130432, 3 );
    sub_1775( "BSW", "[GA] P_START_CS_MECH_OUTSIDE_1 end", 0 );
    return;
}

void sub_30679(int iParam0, unknown uParam1)
{
    if ((sub_7408( iParam0 )) == 0)
    {
        sub_7474( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_30913()
{
    sub_1775( "GA", "P_DD_CREATE_INVESTIGATE_PROPS start", 0 );
    l_U1069 = sub_21033( g_U1103, 62.68000000, 140.39000000, 2.09000000, -3.54000000, -3.53000000, 135.11000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( l_U1069 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U1069, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1069, ref g_U1208 );
    }
    sub_31109( ref l_U1070, 2, 62.64000000, 140.35000000, 2.21000000, l_U1069, 1, 0, 2.00000000, 3.25000000, 1, 0 );
    sub_32115( ref l_U1070, 30, "POI_DOCKNEWS" );
    sub_32276( ref l_U1070, 1 );
    sub_32308( ref l_U1070, 0 );
    sub_32340( ref l_U1070, 0 );
    l_U1183 = sub_21033( g_U1101, 48.21700000, 140.22000000, 3.75200000, 0.00000000, 0.00000000, -80.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U1183 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U1183, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1183, ref g_U1208 );
    }
    sub_31109( ref l_U1184, 2, 48.21700000, 140.22000000, 3.75200000, l_U1183, 1, 0, 2.00000000, 3.25000000, 1, 0 );
    sub_32115( ref l_U1184, 30, "POI_DOCKBPRINT" );
    sub_32276( ref l_U1184, 1 );
    sub_32308( ref l_U1184, 0 );
    sub_32340( ref l_U1184, 0 );
    sub_1775( "GA", "P_DD_CREATE_INVESTIGATE_PROPS end", 0 );
    return;
}

void sub_31109(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;

    sub_31124( iParam0, uParam10 );
    if ((DOES_OBJECT_EXIST( uParam5 )) == 1)
    {
        uVar14 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( uParam5 )};
        iParam0->_fU4 = uParam1;
        iParam0->_fU308 = uParam7;
        if (iParam0->_fU308 == 0)
        {
            iParam0->_fU100 = {uVar14};
            iParam0->_fU200 = {uVar14};
        }
        iParam0->_fU112 = uParam8;
        iParam0->_fU212 = uParam9;
        iParam0->_fU300 = uParam6;
        iParam0->_fU312 = uParam5;
        iParam0->_fU320 = uParam11;
        iParam0->_fU20 = {uParam2};
        sub_31563( iParam0 );
    }
    else
    {
        SCRIPT_ASSERT( "[SP]### WARNING!!! (P_CreateObjectPOIStruct): Object doesn't exist! ###", 0 );
    }
    return;
}

void sub_31124(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_31563(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_31642( iParam0 );
    return;
}

void sub_31642(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_31701( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_31701( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_31701( iParam0, 1 );
            }
            else
            {
                sub_31701( iParam0, 0 );
            };;;
        }
        else
        {
            sub_31701( iParam0, 0 );
        }
    }
    else
    {
        sub_31701( iParam0, 0 );
    }
    return;
}

void sub_31701(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_32115(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_32146( iParam0 );
    return;
}

void sub_32146(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_32276(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_32308(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_32340(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_32382( iParam0 );
    return;
}

void sub_32382(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_32443( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_32443( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_32443(int iParam0)
{
    if (((IS_PED_DEAD( sub_8842() )) == 0) AND ((IS_PLAYER_DEAD( sub_8864() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_8842() )) == 1) || (((IS_PED_GETTING_UP( sub_8842() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_8842() )) == 1) || (((IS_PED_IN_COVER( sub_8842() )) == 1) || (((IS_PED_DUCKING( sub_8842() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_8842() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_32967()
{
    sub_1775( "GA", "P_DD_CREATE_WAREHOUSE_PROPANE start", 0 );
    l_U1298 = sub_21625( g_U1055, 52.23500000, 133.66200000, 2.70700000, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1298 ))
    {
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( l_U1298, 1 );
        SET_OBJECT_AS_PATH_OBSTACLE( l_U1298 );
        SET_OBJECT_HEALTH( l_U1298, 60 );
        SET_OBJECT_TARGETTABLE( l_U1298, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, l_U1298 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1298, ref g_U1208 );
        FREEZE_OBJECT_POSITION( l_U1298, 1 );
    }
    sub_1775( "GA", "P_DD_CREATE_WAREHOUSE_PROPANE end", 0 );
    return;
}

void sub_33242()
{
    int I;

    sub_1775( "GA", "P_SETUP_CS_CATWALK_ATTACKER start", 0 );
    sub_17729();
    sub_17834( 1308526797, -612753081, 25000, 25000 );
    sub_17944( 0, 1194438308, 0, 25000, 25000 );
    sub_18129( ref l_U583, ref l_U623, ref l_U577, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, "Catwalk attackers" );
    sub_17729();
    for ( I = 0; I <= 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U623[I] )))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( l_U623[I] );
            SET_BULLET_CAM_PREF( l_U623[I], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", "", 0, 0, 0, 0, 0, 0, 0, 0 );
            SET_ROOM_FOR_PED_BY_NAME( l_U623[I], ref g_U1208 );
            sub_10461( l_U623[I], -1980065396, 5, 3, 1 );
            SET_PED_CAN_AVOID_DEATH_ZONES( l_U623[I], 0 );
        }
    }
    if (sub_18374( l_U623[1] ))
    {
        SET_PED_ACCURACY( l_U623[1], 31186664 );
    }
    SET_PED_COMBAT_ATTRIBUTES( l_U623[1], 1, 0 );
    sub_19592( ref l_U623, "pi_cs_CatwalkAttackers " );
    SET_GROUP_GRENADE_PARAMS( l_U577._fU0, 4000 );
    sub_33744( ref l_U627, ref l_U640, 1308526797, "AIT_EXPERT", 0, 25000, 2, 0, 25000 );
    if (NOT (IS_PED_DEAD( l_U640 )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( l_U640 );
        SET_PED_ACCURACY( l_U640, 31186664 );
        SET_PED_COMBAT_ATTRIBUTES( l_U640, 1, 0 );
        sub_10461( l_U640, -1980065396, 5, 3, 1 );
        SET_ROOM_FOR_PED_BY_NAME( l_U640, ref g_U1216 );
        SET_PED_NAME_DEBUG( l_U640, "pi_cs_CatwalkReinf" );
        SET_PED_CAN_AVOID_DEATH_ZONES( l_U640, 0 );
    }
    sub_17559( l_U640 );
    sub_1775( "GA", "P_SETUP_CS_CATWALK_ATTACKER end", 0 );
    return;
}

void sub_33744(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, int iParam7, unknown uParam8)
{
    unknown uVar11;

    sub_18272( (uParam1^) );
    (uParam1^) = sub_16880( uParam0 );
    if (sub_18374( (uParam1^) ))
    {
        uVar11 = sub_11093( (uParam1^), uParam2, uParam5, 0, 1 );
        if (iParam7 != 0)
        {
            sub_10461( (uParam1^), iParam7, 0, uParam8, 0 );
        }
        SET_PED_AI_TEMPLATE( (uParam1^), uParam3 );
        SET_PED_ALERTNESS( (uParam1^), uParam6 );
        switch (uParam4)
        {
            case 0: break;
            case 1:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            break;
            case 2:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            break;
            case 3:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            break;
        }
    }
    return;
}

void sub_34197()
{
    sub_1775( "BSW", "[GA] P_START_CS_MECH_OUTSIDE start", 0 );
    sub_20786( l_U558[1] );
    CLEAR_PED_TASKS_IMMEDIATELY( l_U558[1] );
    TASK_ATTACK_MOVE( l_U558[1], 57.69262000, 112.88020000, 1.78130700, 10.00000000, 30.00000000, -1082130432, 3 );
    sub_1775( "BSW", "[GA] P_START_CS_MECH_OUTSIDE end", 0 );
    return;
}

void sub_34996()
{
    unknown uVar2;
    int iVar3;

    if ((g_U789 == 8) || (g_U789 == 7))
    {
        sub_35026();
        sub_36263( ref l_U507 );
        if (sub_36344( ref l_U855, 0 ))
        {
            sub_36490();
        }
    }
    if (l_U1948 == 0)
    {
        switch (l_U434)
        {
            case 0:
            if (g_U1229)
            {
                sub_30538();
                sub_23783( 0, 1 );
                sub_30219();
                sub_29790();
                g_U789 = 7;
                if (g_U788 == 7)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 25 );
                    }
                }
                if (NOT l_U435._fU0)
                {
                    sub_13163( ref l_U435, g_U789, sub_8842(), g_U790[7], g_U899[7], g_U936[7], g_U973[7], 1 );
                }
                l_U434 = 1;
            }
            break;
            case 1:
            if ((l_U731 == 0) AND (NOT (sub_37331( g_U1659, ref g_U1138, "p_ma_botdor_aa_h" ))))
            {
                SET_OBJECT_VISIBLE( g_U1659, 1 );
                l_U731 = 1;
                sub_37422( 0 );
            }
            if ((l_U731 == 1) AND (DOES_OBJECT_EXIST( g_U1659 )))
            {
                if (NOT (sub_37331( g_U1659, ref g_U1138, "p_ma_botdor_aa_h" )))
                {
                    STOP_SOUND( l_U1856, 0 );
                }
            }
            if (((sub_38076( ref l_U558 )) < 2) || ((sub_37960( ref l_U1401, l_U558[1], 0 )) || (sub_37960( ref l_U1401, l_U558[0], 0 ))))
            {
                if (l_U574 == 4)
                {
                    l_U575 = 4;
                    sub_38193( ref g_U1502, 0, 0, 1065353216 );
                    sub_38193( ref g_U1509, 1, 0, 1065353216 );
                    sub_38360( ref g_U1502, 1 );
                    sub_38360( ref g_U1509, 1 );
                    sub_8459( ref l_U390, 20000, 1, 0 );
                    sub_26734( ref l_U390 );
                    ENABLE_WALLA_ZONE( "S_MARINA_WZ_DRY_DOCK", 1 );
                    sub_38483();
                    l_U434 = 2;
                }
            }
            break;
            case 2:
            if ((l_U731 == 1) AND (DOES_OBJECT_EXIST( g_U1659 )))
            {
                if (NOT (sub_37331( g_U1659, ref g_U1138, "p_ma_botdor_aa_h" )))
                {
                    STOP_SOUND( l_U1856, 0 );
                }
            }
            sub_39278();
            if (sub_37960( ref l_U641, sub_8842(), 0 ))
            {
                sub_8258( ref l_U390 );
                sub_45036();
                sub_38193( ref l_U561, 1, 1, 0.15000000 );
                sub_22267( ref l_U561, 0 );
                sub_2354( 0 );
                sub_1775( "BSW", "DD_OUTSIDE_FIGHT player in trigger box, advancing to DD_FIRST_ROOM", 0 );
                l_U434 = 3;
            }
            if ((NOT l_U827) AND (sub_26854( ref l_U390 )))
            {
                sub_45036();
                if (sub_18374( l_U623[0] ))
                {
                    TASK_COMBAT_MOVE_TO_COVER_COORDS( l_U623[0], 65.89376000, 130.13740000, 1.80016600, 0 );
                }
            }
            break;
            case 3:
            sub_39278();
            if ((NOT l_U831) AND ((NOT l_U829) AND ((sub_39288() < 4) AND (sub_45504( l_U1822 )))))
            {
                sub_45562();
                sub_45917();
                if (sub_18374( l_U623[0] ))
                {
                    TASK_COMBAT_MOVE_TO_COVER_COORDS( l_U623[0], 65.89376000, 130.13740000, 1.80016600, 0 );
                }
            }
            if ((NOT l_U831) AND (l_U829))
            {
                sub_46557( 1 );
            }
            if ((NOT l_U832) AND (l_U831 == 1))
            {
                sub_47174();
            }
            if (l_U790 == 0)
            {
                if (((sub_45504( l_U791 )) || ((sub_38076( ref l_U623 )) < 1)) AND (sub_45504( l_U1822 )))
                {
                    sub_47612();
                    l_U790 = 1;
                }
            }
            if ((sub_36344( ref l_U1317, 0 )) == 1)
            {
                sub_2354( 0 );
                sub_16827();
                sub_20939();
                sub_21916( 1 );
            }
            if (sub_36344( ref l_U1759, 0 ))
            {
                sub_22127( ref g_U1502, 1 );
                sub_22127( ref g_U1509, 1 );
                sub_22267( ref g_U1502, 1 );
                sub_22267( ref g_U1509, 1 );
                sub_22127( ref l_U561, 1 );
                sub_22267( ref l_U561, 1 );
                sub_8459( ref l_U408, 10000, 1, 0 );
                sub_26734( ref l_U408 );
                g_U789 = 8;
                if (NOT l_U471._fU0)
                {
                    sub_13163( ref l_U471, g_U789, sub_8842(), g_U790[8], g_U899[8], g_U936[8], g_U973[8], 1 );
                }
                sub_20709();
                sub_28699( ref l_U786 );
                sub_28699( ref l_U558 );
                sub_28699( ref l_U623 );
                sub_18272( l_U640 );
                sub_48088();
                sub_48307( 7 );
                sub_8660();
                sub_20085( 1 );
                sub_20085( 0 );
                l_U574 = 5;
                l_U575 = 5;
                l_U434 = 4;
            }
            else if (l_U1047 == 0)
            {
                if (IS_PED_DEAD( l_U640 ))
                {
                    if ((sub_38076( ref l_U786 )) == 0)
                    {
                        if ((sub_38076( ref l_U623 )) == 0)
                        {
                            if ((sub_38076( ref l_U558 )) == 0)
                            {
                                l_U1047 = 1;
                            }
                        }
                    }
                }
            }
            if (l_U1047 == 1)
            {
                if (l_U1288 == 0)
                {
                    sub_48857( ref l_U1290, ref l_U1293 );
                    if ((GET_RANDOM_FLOAT_IN_RANGE( 0, 1065353216 )) < 0.50000000)
                    {
                        l_U1296 = "SMAR_MXFNPL5";
                    }
                    else
                    {
                        l_U1296 = "SMAR_MXFNPL3";
                    }
                    l_U1288 = 1;
                }
                if ((g_U1642 == 0) AND (l_U1289 == 0))
                {
                    l_U1289 = sub_49148( l_U1296, ref l_U1290, ref l_U1293 );
                    if (l_U1289)
                    {
                        g_U1643 = 1;
                    }
                }
                if ((l_U1017 == 0) || (l_U997 == 0))
                {
                    if (sub_36344( ref l_U791, 0 ))
                    {
                        sub_49435( ref l_U988 );
                        l_U997 = 1;
                        sub_49435( ref l_U1008 );
                        l_U1017 = 1;
                    }
                    if ((sub_45504( l_U1822 )) == 1)
                    {
                        sub_8258( ref l_U1038 );
                        if (l_U997 == 0)
                        {
                            if (l_U988._fU20 == 0)
                            {
                                sub_49548( ref l_U988, 40000 );
                            }
                            else if (IS_SPHERE_VISIBLE( 48.84719000, 133.97190000, 6.60014400, 2.00000000, 0 ))
                            {
                                if (sub_26854( ref l_U988 ))
                                {
                                    sub_41830( "SMAR_FRRMDWA", ref l_U978 );
                                    l_U997 = 1;
                                }
                            }
                        }
                        else if (l_U1017 == 0)
                        {
                            if (l_U1008._fU20 == 0)
                            {
                                sub_49548( ref l_U1008, 50000 );
                            }
                            else if (IS_SPHERE_VISIBLE( 48.84719000, 133.97190000, 6.60014400, 2.00000000, 0 ))
                            {
                                if (sub_26854( ref l_U1008 ))
                                {
                                    sub_41830( "SMAR_FRRMDWB", ref l_U998 );
                                    l_U1017 = 1;
                                }
                            }
                        }
                    }
                    else
                    {
                        sub_8258( ref l_U988 );
                        sub_8258( ref l_U1008 );
                    }
                }
                if (l_U1037 == 0)
                {
                    if (sub_45504( l_U1048 ))
                    {
                        if (l_U1038._fU20 == 0)
                        {
                            sub_49548( ref l_U1038, 35000 );
                        }
                    }
                    if (sub_26854( ref l_U1038 ))
                    {
                        sub_41830( "SMAR_SCRMDWA", ref l_U948 );
                        l_U1037 = 1;
                    }
                }
                if (l_U1288 == 0)
                {
                    sub_48857( ref l_U1290, ref l_U1293 );
                    if ((GET_RANDOM_FLOAT_IN_RANGE( 0, 1065353216 )) < 0.50000000)
                    {
                        l_U1296 = "SMAR_MXFNPL5";
                    }
                    else
                    {
                        l_U1296 = "SMAR_MXFNPL3";
                    }
                    l_U1288 = 1;
                }
                if ((g_U1642 == 0) AND (l_U1289 == 0))
                {
                    l_U1289 = sub_49148( l_U1296, ref l_U1290, ref l_U1293 );
                    if (l_U1289)
                    {
                        g_U1643 = 1;
                    }
                }
            }
            break;
            case 4:
            if (l_U727 == 0)
            {
                sub_50092();
            }
            sub_50422( ref l_U1564, -5.00000000, 0, 1 );
            sub_50422( ref l_U1610, -5.00000000, 0, 1 );
            if (sub_26854( ref l_U408 ))
            {
                ENABLE_WALLA_ZONE( "S_MARINA_WZ_DRY_DOCK", 0 );
            }
            if ((sub_37960( ref l_U705, l_U1722, 0 )) || ((sub_36344( ref l_U1780, 0 )) || ((sub_50666( l_U1722, sub_8842() )) || ((IS_PED_IN_COMBAT( l_U1722 )) || (IS_PED_DEAD( l_U1722 ))))))
            {
                sub_50802();
                sub_50912( 1 );
                SET_PED_SEEING_RANGE( l_U1722, 60.00000000, 75 );
                sub_19740( ref l_U1722, l_U1497, 1 );
                l_U434 = 5;
            }
            break;
            case 5:
            sub_51540();
            if (sub_26854( ref l_U408 ))
            {
                ENABLE_WALLA_ZONE( "S_MARINA_WZ_DRY_DOCK", 0 );
            }
            if (l_U574 == 7)
            {
                l_U575 = 7;
            }
            if ((((sub_38076( ref l_U1564 )) + (sub_38076( ref l_U1610 ))) < 3) AND (l_U730 == 0))
            {
                ENABLE_WALLA_ZONE( "S_MARINA_WZ_DRY_DOCK", 0 );
                sub_51832();
                sub_50912( 0 );
                l_U730 = 1;
            }
            if (NOT l_U1852)
            {
                if (sub_45504( l_U1801 ))
                {
                    sub_1775( "RJM", "Disabling shootdodge", 0 );
                    SET_PLAYER_CAN_USE_SHOOTDODGE( sub_8864(), 0 );
                    l_U1852 = 1;
                }
            }
            else if (NOT (sub_45504( l_U1801 )))
            {
                sub_1775( "RJM", "Enabling shootdodge", 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_8864(), 1 );
                l_U1852 = 0;
            }
            if ((sub_45504( l_U1338 )) AND (l_U730))
            {
                sub_52285( -2011297806, 1 );
                sub_52285( 284403121, 1 );
                sub_52520( "SMAR_CHAINLINK_GATE_OPEN", 1, 1 );
                sub_1775( "RJM", "Going to DD_OUTSIDE", 0 );
                l_U434 = 6;
            }
            break;
            case 6:
            sub_50422( ref l_U1564, -5.00000000, 0, 1 );
            sub_50422( ref l_U1610, -5.00000000, 0, 1 );
            sub_50422( ref l_U1703, -5.00000000, 0, 1 );
            sub_51540();
            iVar3 = ((sub_38076( ref l_U1564 )) + (sub_38076( ref l_U1610 ))) + (sub_38076( ref l_U1703 ));
            if (NOT l_U1852)
            {
                if (sub_45504( l_U1801 ))
                {
                    sub_1775( "RJM", "Disabling shootdodge", 0 );
                    SET_PLAYER_CAN_USE_SHOOTDODGE( sub_8864(), 0 );
                    l_U1852 = 1;
                }
            }
            else if (NOT (sub_45504( l_U1801 )))
            {
                sub_1775( "RJM", "Enabling shootdodge", 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_8864(), 1 );
                l_U1852 = 0;
            }
            if ((l_U1859 == 0) AND (iVar3 == 0))
            {
                g_U1017 = 1;
                l_U575 = 8;
                sub_8459( ref l_U417, 7000, 1, 0 );
                sub_26734( ref l_U417 );
                sub_49548( ref l_U1028, 50000 );
                sub_1775( "RJM", "Going to DD_SLUICE_GATE", 0 );
                l_U434 = 7;
            }
            else if (iVar3 == 1)
            {
                if (NOT l_U1708)
                {
                    sub_1775( "TEH", "last living drydocks CS, sending him to the player.", 0 );
                    sub_53093( ref l_U1564, 5, 6, 1 );
                    sub_53093( ref l_U1610, 5, 6, 1 );
                    sub_53093( ref l_U1703, 5, 6, 1 );
                    if ((sub_38076( ref l_U1564 )) == 1)
                    {
                        sub_53509( ref l_U1564 );
                    }
                    else if ((sub_38076( ref l_U1610 )) == 1)
                    {
                        sub_53509( ref l_U1610 );
                    }
                    else
                    {
                        sub_53509( ref l_U1703 );
                    }
                    l_U1708 = 1;
                }
            }
            break;
            case 7:
            sub_51540();
            if (NOT (sub_26615( ref l_U969 )))
            {
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    sub_49548( ref l_U969, 2000 );
                }
            }
            if ((l_U574 == 9) AND (sub_26854( ref l_U417 )))
            {
                l_U575 = 9;
            }
            if (NOT l_U1852)
            {
                if (sub_45504( l_U1801 ))
                {
                    sub_1775( "RJM", "Disabling shootdodge", 0 );
                    SET_PLAYER_CAN_USE_SHOOTDODGE( sub_8864(), 0 );
                    l_U1852 = 1;
                }
            }
            else if (NOT (sub_45504( l_U1801 )))
            {
                sub_1775( "RJM", "Enabling shootdodge", 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_8864(), 1 );
                l_U1852 = 0;
            }
            if (sub_36344( ref l_U1443, 0 ))
            {
                if ((IS_PLAYER_DEAD( sub_8864() )) == 0)
                {
                    sub_1775( "TEH", "Forcing ped to walk", 0 );
                    SET_PED_FORCED_TO_WALK( sub_8842(), 1 );
                    SET_PLAYER_CAN_USE_SHOOTDODGE( sub_8864(), 0 );
                }
                sub_8459( ref l_U939, 1500, 1, 0 );
                sub_26734( ref l_U939 );
            }
            if (l_U1485 == -1)
            {
                if ((sub_26854( ref l_U939 )) || (sub_36344( ref l_U1464, 0 )))
                {
                    GAMEPLAY_HELPER_BOX_SET_ENABLED( ref l_U1464._fU0, 0 );
                    g_U1360 = 1;
                    l_U1485 = 0;
                }
                else if ((l_U939._fU20 == 0) AND (sub_26854( ref l_U969 )))
                {
                    sub_41830( "SMAR_AFKEVRA", ref l_U959 );
                }
                if ((l_U939._fU20 == 0) AND (sub_26854( ref l_U1028 )))
                {
                    sub_41830( "SMAR_WDWGNA", ref l_U1018 );
                }
            }
            else if (l_U1485 != 6)
            {
                sub_54427();
            }
            else
            {
                l_U434 = 9;
            }
            break;
            case 8: break;
            case 9:
            if ((l_U427) AND (NOT g_U1016))
            {
                DISABLE_RESTART_CHECKPOINT( 0 );
                l_U427 = 0;
            }
            break;
        }
    }
    return;
}

void sub_35026()
{
    unknown uVar2;
    int I;
    int iVar4;
    float fVar5;
    float fVar6;
    float fVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    uVar2 = sub_8842();
    iVar4 = -1;
    fVar5 = 0.00000000;
    fVar6 = 9999.00000000;
    fVar7 = 0.00000000;
    switch (l_U65)
    {
        case 0:
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (IS_PED_IN_WATER( uVar2 )))
        {
            if (NOT (PED_ACTION_TREE_PLAY_NODE( sub_8842(), "/Global/Player/PlayerLoco/PlayerLoco_WATER/TreadWater" )))
            {
                ;
            }
            sub_35204( 1, 0, 0, 1 );
            sub_8459( ref l_U66, 3000, 1, 0 );
            sub_26734( ref l_U66 );
            l_U65 = 1;
            sub_2166( "Water Respawn: Timer started" );
        }
        break;
        case 1:
        if (sub_26854( ref l_U66 ))
        {
            sub_35450( 1000 );
            l_U65 = 2;
            sub_2166( "Water Respawn: Timer expired, fading out" );
        }
        break;
        case 2:
        if (IS_SCREEN_FADED_OUT())
        {
            for ( I = 0; I <= (l_U2 - 1); I++ )
            {
                fVar7 = GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uVar2 ), l_U4[I]._fU0, 1 );
                if (fVar7 < fVar6)
                {
                    iVar4 = I;
                    fVar6 = fVar7;
                }
            }
            GET_GROUND_Z_FOR_3D_COORD( l_U4[iVar4]._fU0, ref fVar5 );
            uVar8 = {l_U4[iVar4]._fU0._fU0, l_U4[iVar4]._fU0._fU4, fVar5};
            sub_35738( sub_8842(), uVar8, l_U4[iVar4]._fU12 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U4[iVar4]._fU16, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U4[iVar4]._fU20, 1065353216, 0 );
            if (NOT (PED_ACTION_TREE_PLAY_NODE( sub_8842(), "/Global/Player/PlayerLoco/PlayerLoco_WATER/DryOff" )))
            {
                ;
            }
            l_U65 = 0;
            DO_SCREEN_FADE_IN( 1000 );
            sub_35927( 1, 1 );
            sub_2166( "Water Respawn: Player respawned, fading in" );
        }
        break;
        default: break;
    }
    return;
}

void sub_35204(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_8842() )))
        {
            SET_PLAYER_CONTROL( sub_8864(), 0, uParam2 );
            SET_PED_DUCKING( sub_8842(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_8842() );
            }
            SET_PED_INVINCIBLE( sub_8842(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_35450(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_35738(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_35927(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_8842() )))
    {
        SET_PLAYER_CONTROL( sub_8864(), 1, 0 );
        SET_PED_INVINCIBLE( sub_8842(), 0 );
        if (bParam0)
        {
            sub_36008();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_36008()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_8842() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_8842(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_8842(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_8842(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_8842(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_36263(int iParam0)
{
    if ((sub_26854( iParam0 + 24 )) == 1)
    {
        if (iParam0->_fU68 == 0)
        {
            TRIGGER_THUNDER( iParam0->_fU64, 1 );
        }
        else
        {
            TRIGGER_LIGHTNING( 0 );
        }
    }
    return;
}

void sub_36344(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_36386( sub_8842(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_36386(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_36490()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    sub_1775( "BSW", "[MSWW]### P_THUNDER_AND_LIGHTNING_VERY_VERY_FRIGHTENING Starting ###", 0 );
    if (NOT (IS_PED_DEAD( g_U779._fU4 )))
    {
        uVar2 = {(vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U779._fU4 ))) + (vector( 0, 2, 2))};
        sub_36650( ref l_U507, 1.00000000, uVar2, 0, 1, 500, 0.20000000, 1 );
        sub_36775( ref l_U507 );
    }
    sub_1775( "BSW", "[MSWW]### P_THUNDER_AND_LIGHTNING_VERY_VERY_FRIGHTENING Exiting ###", 0 );
    return;
}

void sub_36650(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_1775( "BSW", "[SP]### P_CreateLightning ###", 0 );
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = uParam5;
    iParam0->_fU20 = uParam6;
    iParam0->_fU60 = uParam7;
    iParam0->_fU64 = uParam8;
    iParam0->_fU68 = uParam9;
    return;
}

void sub_36775(int iParam0)
{
    vector vVar3;

    sub_1775( "BSW", "[SP]### P_StartLightning ###", 0 );
    vVar3 = {0.00000000, 0.00000000, 0.00000000};
    if (iParam0->_fU16 == 1)
    {
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( ref l_U75, iParam0->_fU4, vVar3, iParam0->_fU0 );
    }
    else
    {
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( ref l_U83, iParam0->_fU4, vVar3, iParam0->_fU0 );
    }
    if (iParam0->_fU20 == 1)
    {
        sub_8459( iParam0 + 24, iParam0->_fU60, 1, 0 );
        sub_26734( iParam0 + 24 );
    }
    return;
}

int sub_37331(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if ((DOES_OBJECT_EXIST( uParam0 )) == 1)
    {
        if (IS_OBJECT_PLAYING_ANIM( uParam0, uParam2, uParam1 ))
        {
            return 1;
        }
    }
    return 0;
}

void sub_37422(int iParam0)
{
    sub_1775( "MF", "START - P_CLOSE_GARAGE_DOORS", "###" );
    if (iParam0 == 0)
    {
        if ((DOES_OBJECT_EXIST( g_U1659 )) == 1)
        {
            sub_1775( "MF", "Play open anim in reverse", "###" );
            PLAY_SOUND_FROM_OBJECT( l_U1856, "S_MARINA_BOAT_TO_DRY_GARAGE_DOOR_CLOSE", g_U1659 );
            PLAY_OBJECT_ANIM( g_U1659, "p_ma_botdor_aa_h", ref g_U1138, 1000.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U1659, "p_ma_botdor_aa_h", ref g_U1138, 1.00000000 );
            SET_OBJECT_ANIM_SPEED( g_U1659, "p_ma_botdor_aa_h", ref g_U1138, -1.00000000 );
        }
    }
    else
    {
        PLAY_OBJECT_ANIM( g_U1659, "p_ma_botdor_aa_h", ref g_U1138, 1000.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U1659, "p_ma_botdor_aa_h", ref g_U1138, 0.10000000 );
        SET_OBJECT_ANIM_SPEED( g_U1659, "p_ma_botdor_aa_h", ref g_U1138, -1.00000000 );
    }
    return;
}

void sub_37960(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_36386( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_38076(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_38193(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_7408( iParam0 )) == 0)
    {
        sub_7474( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_38360(int iParam0, unknown uParam1)
{
    if ((sub_7408( iParam0 )) == 0)
    {
        sub_7474( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_38483()
{
    sub_1775( "CO", "P_CREATE_S_MAR_GG_LM_01", 0 );
    sub_38596( ref g_U719, g_U776, -1437795952, -218464856, 30.59000000, 134.70000000, 1.94000000, 0.00000000, 0.00000000, 2.00000000, "Room_WareSec02" );
    sub_38725( ref g_U719 );
    return;
}

void sub_38596(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_1775( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_38725(int iParam0)
{
    sub_1775( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_38786( iParam0->_fU12 )) == 1)
        {
            sub_1775( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_1775( "CO", "has never been collected.", 0 );
        }
        if ((sub_38786( iParam0->_fU12 )) == 0)
        {
            sub_22890( iParam0->_fU0 );
            iParam0->_fU0 = sub_29886( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_1775( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_1775( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_38786(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_39278()
{
    if (sub_39288() == 0)
    {
        sub_32340( ref l_U1070, 1 );
        sub_32340( ref l_U1184, 1 );
    }
    if (sub_39429( ref l_U1070 ))
    {
        l_U1156 = 1;
    }
    if ((sub_41594( ref l_U1070 )) == 1)
    {
        sub_41830( "EXPLORE_ITEM", ref l_U1938 );
    }
    if (l_U1156 != 0)
    {
        sub_43004();
    }
    if (sub_39429( ref l_U1184 ))
    {
        l_U1280 = 1;
    }
    if ((sub_41594( ref l_U1184 )) == 1)
    {
        sub_41830( "EXPLORE_ITEM", ref l_U1938 );
    }
    if (l_U1280 != 0)
    {
        sub_44268();
    }
    return;
}

void sub_39288()
{
    int Result;

    Result = 0;
    if (NOT (IS_PED_DEAD( l_U640 )))
    {
        Result++;
    }
    Result += sub_38076( ref l_U623 );
    Result += sub_38076( ref l_U786 );
    Result += sub_38076( ref l_U558 );
    if (sub_18374( l_U640 ))
    {
        Result++;
    }
    return Result;
}

int sub_39429(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_8842() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_8842() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_36386( sub_8842(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_36386( sub_8842(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_32382( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_32443( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_40311() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_40388( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_31701( iParam0, 0 );
                            sub_40459( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_31701( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_8842() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_8842(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_31701( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_40459( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_8842() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_8842(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_8842() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_8842(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_8842() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_8842(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_31701( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_40459( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_8842() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_8842() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_8842() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_8842(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_40459( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_40311()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_40388(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_31701( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_31701( iParam0, 0 );
        sub_40459( iParam0, 0 );
        if ((IS_PED_DEAD( sub_8842() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_8842() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_8842(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_40459(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_32382( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

int sub_41594(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_41606( iParam0 )) == 0)))
    {
        if ((sub_40311() == 1) AND (((IS_PED_RELOADING( sub_8842() )) == 0) AND (((IS_PED_GETTING_UP( sub_8842() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_8842() )) == 0) AND (((IS_PED_IN_COVER( sub_8842() )) == 0) AND (((IS_PED_DUCKING( sub_8842() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_41606(int iParam0)
{
    return iParam0->_fU56;
}

void sub_41830(unknown uParam0, unknown uParam1)
{
    sub_1775( "SBA", "P_SPEECH_PLAY_MAX_MONOLOGUE", "***" );
    if (sub_29373())
    {
        sub_41899( uParam1 );
        sub_41979( 0, sub_8842(), "MAX", uParam1, 2, 0 );
        sub_41979( 1, sub_8842(), "MAX", uParam1, 2, 0 );
        sub_42204( uParam0, uParam1, 8, 1 );
    }
    return;
}

void sub_41899(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_41979(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_42204(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_42228( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_42228(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_42283( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_42283(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_42318( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_42812( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_42318(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_42812(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_43004()
{
    switch (l_U1156)
    {
        case 1:
        sub_1775( "BSW", "[GA] P_STORY_NEWSPAPER_NIS start", 0 );
        sub_35204( 1, 0, 0, 1 );
        if (sub_29373())
        {
            SET_PED_VISIBLE( sub_8842(), 0 );
            CLEAR_PED_TASKS_IMMEDIATELY( sub_8842() );
            RESET_PLAYER_INPUT_GAIT( 0 );
            sub_35738( sub_8842(), l_U1177, l_U1180 );
            sub_8459( ref l_U1168, 2000, 1, 0 );
            sub_26734( ref l_U1168 );
        }
        sub_43198( sub_8842() );
        CAMERA_PLAY_ANIMATED( l_U1935, l_U1937, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U1181, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U1182, 1065353216, 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "smar_Newspaper" )))
        {
            sub_43479( 0 );
            sub_43571();
            l_U1167 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            SETUP_BULLET_CAMERA_SCENE( l_U1167, "S_MAR_NEWSPAPER", 61.46000000, 139.96000000, 2.72000000, 61.46000000, 138.96000000, 2.72000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "" );
            SET_CAM_ACTIVE( l_U1167, 1 );
            RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
        }
        l_U1156 = 2;
        break;
        case 2:
        if ((sub_26854( ref l_U1168 )) AND (sub_29373()))
        {
            sub_35738( sub_8842(), l_U1177, l_U1180 );
            SET_PED_VISIBLE( sub_8842(), 1 );
        }
        if (NOT IS_ANIMATED_CAMERA_PLAYING())
        {
            l_U1156 = 5;
        }
        break;
        case 5:
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "smar_Newspaper" )))
        {
            FOUND_EXPLORATION_ITEM( "smar_Newspaper" );
        }
        sub_35927( 1, 1 );
        sub_44044( ref l_U1167 );
        sub_40388( ref l_U1070, 1 );
        l_U1156 = 0;
        sub_1775( "BSW", "[GA] P_STORY_NEWSPAPER_NIS end", 0 );
        break;
    }
    return;
}

void sub_43198(unknown uParam0)
{
    if (sub_18374( uParam0 ))
    {
        PED_FINISH_ACTION_INTENTION( uParam0, 47 );
        PED_FINISH_ACTION_INTENTION( uParam0, 48 );
        PED_FINISH_ACTION_INTENTION( uParam0, 49 );
        PED_FINISH_ACTION_INTENTION( uParam0, 50 );
        PED_FINISH_ACTION_INTENTION( uParam0, 51 );
        PED_FINISH_ACTION_INTENTION( uParam0, 52 );
        PED_FINISH_ACTION_INTENTION( uParam0, 53 );
        PED_FINISH_ACTION_INTENTION( uParam0, 54 );
        PED_FINISH_ACTION_INTENTION( uParam0, 55 );
        PED_FINISH_ACTION_INTENTION( uParam0, 56 );
        PED_FINISH_ACTION_INTENTION( uParam0, 57 );
        PED_FINISH_ACTION_INTENTION( uParam0, 58 );
    }
    return;
}

void sub_43479(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_43571()
{
    sub_1775( "GA", "P_BH_DIAG_DDMAA start", 0 );
    sub_41899( ref l_U1157 );
    sub_41979( 0, sub_8842(), "MAX", ref l_U1157, 2, 0 );
    sub_41979( 1, sub_8842(), "MAX", ref l_U1157, 2, 0 );
    sub_42204( "SMAR_DDMB", ref l_U1157, 8, 1 );
    sub_1775( "GA", "P_BH_DIAG_DDMAA end", 0 );
    return;
}

void sub_44044(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_44268()
{
    switch (l_U1280)
    {
        case 1:
        sub_1775( "BSW", "[GA] P_STORY_MAP_NIS start", 0 );
        sub_35204( 1, 0, 0, 1 );
        sub_35738( sub_8842(), l_U1282, l_U1285 );
        sub_43198( sub_8842() );
        CAMERA_PLAY_ANIMATED( l_U1935, l_U1936, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "smar_FloorPlan" )))
        {
            sub_43479( 0 );
            sub_44471();
            l_U1281 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            SETUP_BULLET_CAMERA_SCENE( l_U1281, "S_MAR_BLUEPRINT", 49.30000000, 139.62000000, 3.87000000, 48.30000000, 139.62000000, 3.87000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "" );
            SET_CAM_ACTIVE( l_U1281, 1 );
            RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U1286, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U1287, 1065353216, 0 );
        l_U1280 = 2;
        break;
        case 2:
        if (NOT IS_ANIMATED_CAMERA_PLAYING())
        {
            l_U1280 = 5;
        }
        break;
        case 5:
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "smar_FloorPlan" )))
        {
            FOUND_EXPLORATION_ITEM( "smar_FloorPlan" );
        }
        sub_35927( 1, 1 );
        sub_44044( ref l_U1281 );
        sub_40388( ref l_U1184, 1 );
        l_U1280 = 0;
        sub_1775( "BSW", "[GA] P_STORY_MAP_NIS end", 0 );
        break;
    }
    return;
}

void sub_44471()
{
    sub_1775( "GA", "P_BH_DIAG_DDMBA start", 0 );
    sub_41899( ref l_U1270 );
    sub_41979( 0, sub_8842(), "MAX", ref l_U1270, 2, 0 );
    sub_41979( 1, sub_8842(), "MAX", ref l_U1270, 2, 0 );
    sub_42204( "SMAR_DDMA", ref l_U1270, 8, 1 );
    sub_1775( "GA", "P_BH_DIAG_DDMBA end", 0 );
    return;
}

void sub_45036()
{
    sub_1775( "GA", "P_START_CS_CATWALK_ATTACKER start", 0 );
    l_U827 = 1;
    sub_45103( ref l_U623 );
    TASK_ATTACK_MOVE( l_U623[0], 48.56631000, 133.70960000, 6.60014400, 1092616192, 1101004800, -1082130432, 3 );
    TASK_ATTACK_MOVE( l_U623[1], 63.73343000, 141.29350000, 6.60014500, 10, 20, -1, 2 );
    sub_1775( "GA", "P_START_CS_CATWALK_ATTACKER end", 0 );
    return;
}

void sub_45103(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_20786( (uParam0^)[I] );
    }
    return;
}

void sub_45504(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_36386( sub_8842(), uParam0 );
}

void sub_45562()
{
    sub_1775( "GA", "P_DD_START_MID_GARAGE_DOOR_OPENING start", 0 );
    sub_45626();
    l_U829 = 1;
    sub_1775( "GA", "P_DD_START_MID_GARAGE_DOOR_OPENING end", 0 );
    return;
}

void sub_45626()
{
    unknown uVar2;

    sub_1775( "GA", "P_WH_SWAP_DOOR_LIGHT start", 0 );
    uVar2 = l_U851;
    l_U851 = sub_21625( g_U1110, l_U852, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U851 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U851, ref g_U1208 );
        PLAY_OBJECT_ANIM( l_U851, "P_EL_AmbLgt_Da_H", ref g_U1154, 1000.00000000, 1, 0 );
    }
    sub_21436( uVar2 );
    sub_1775( "GA", "P_WH_SWAP_DOOR_LIGHT end", 0 );
    return;
}

void sub_45917()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    sub_1775( "BSW", "[GA] P_SETUP_CS_MECH_GARAGE_DOOR start", 0 );
    sub_17729();
    sub_17729();
    sub_17834( 1308526797, -612753081, 25000, 25000 );
    sub_17944( 0, 1194438308, 0, 25000, 25000 );
    if (sub_45504( l_U876 ))
    {
        sub_18129( ref l_U759, ref l_U786, ref l_U525, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, "Catwalk attackers" );
        uVar3 = {g_U1208};
    }
    else
    {
        sub_18129( ref l_U732, ref l_U786, ref l_U525, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, "Mech door" );
        uVar3 = {g_U1216};
    }
    for ( I = 0; I <= 1; I++ )
    {
        SET_LOAD_COLLISION_FOR_PED_FLAG( l_U786[I], 1 );
        if (NOT (IS_PED_DEAD( l_U786[I] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U786[I], ref uVar3 );
            SET_PED_EMOTION_STATE( l_U786[I], 1 );
            sub_46293( ref l_U786[I] );
        }
    }
    sub_19592( ref l_U786, "Mech door" );
    sub_45103( ref l_U786 );
    sub_1775( "BSW", "[GA] P_SETUP_CS_MECH_GARAGE_DOOR end", 0 );
    return;
}

void sub_46293(unknown uParam0)
{
    if ((sub_29373()) AND (sub_18374( (uParam0^) )))
    {
        sub_46329( uParam0, sub_8842() );
    }
    return;
}

void sub_46329(unknown uParam0, unknown uParam1)
{
    if ((sub_18374( uParam1 )) AND (sub_18374( (uParam0^) )))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_46557(boolean bParam0)
{
    vector vVar3;
    vector vVar6;
    float fVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;

    vVar3 = {47.07000000, 131.00000000, 5.00000000};
    vVar6 = {47.07000000, 131.00000000, 2.80000000};
    fVar9 = 0.03500000;
    if (DOES_OBJECT_EXIST( l_U828 ))
    {
        if ((bParam0) AND (l_U829))
        {
            uVar10 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( l_U828 )};
            uVar10._fU8 += fVar9;
            SET_OBJECT_COORDS( l_U828, uVar10 );
            if (NOT l_U1858)
            {
                PLAY_SOUND_FROM_OBJECT( l_U1855, "S_MARINA_DRY_DOCKS_GARAGE_DOOR_OPEN", l_U828 );
                l_U1858 = 1;
            }
            if (uVar10._fU8 > vVar3.z)
            {
                sub_1775( "TEH", "[GA] Garage door opened.", 0 );
                SET_OBJECT_COORDS( l_U828, vVar3 );
                FREEZE_OBJECT_POSITION( l_U828, 1 );
                STOP_SOUND( l_U1855, 0 );
                l_U1858 = 0;
                SET_OBJECT_AS_PATH_OBSTACLE( l_U828 );
                l_U829 = 0;
                l_U831 = 1;
            }
        }
        else if ((NOT bParam0) AND (l_U830))
        {
            uVar13 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( l_U828 )};
            uVar13._fU8 -= fVar9;
            SET_OBJECT_COORDS( l_U828, uVar13 );
            if (NOT l_U1858)
            {
                PLAY_SOUND_FROM_OBJECT( l_U1855, "S_MARINA_DRY_DOCKS_GARAGE_DOOR_CLOSE", l_U828 );
                l_U1858 = 1;
            }
            if (uVar13._fU8 < vVar6.z)
            {
                sub_1775( "BSW", "[GA] Garage door Closed.", 0 );
                SET_OBJECT_COORDS( l_U828, vVar6 );
                FREEZE_OBJECT_POSITION( l_U828, 1 );
                STOP_SOUND( l_U1855, 0 );
                l_U1858 = 0;
                SET_OBJECT_AS_PATH_OBSTACLE( l_U828 );
                l_U830 = 0;
                l_U831 = 0;
            }
        }
    }
    return;
}

void sub_47174()
{
    unknown uVar2;
    vector vVar3;
    vector vVar6;
    int I;

    sub_1775( "BSW", "[GA] P_MOVEIN_CS_MECH_GARAGE_DOOR start", 0 );
    l_U832 = 1;
    vVar3 = {51.13095000, 127.81940000, 2.80018300};
    vVar6 = {49.02278000, 131.83890000, 2.80007800};
    for ( I = 0; I <= 1; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U786[I] )))
        {
            FREEZE_PED_POSITION( l_U786[I], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U786[I], 0 );
            SET_PED_COMBAT_MOVEMENT( l_U786[I], 2 );
        }
    }
    CLEAR_PED_TASKS_IMMEDIATELY( l_U786[0] );
    TASK_ATTACK_MOVE( l_U786[0], 49.17798000, 128.96340000, 2.80004700, 15.00000000, 30.00000000, -1, 3 );
    CLEAR_PED_TASKS_IMMEDIATELY( l_U786[1] );
    TASK_ATTACK_MOVE( l_U786[1], 49.58166000, 134.04840000, 2.80004700, 15.00000000, 30.00000000, -1, 3 );
    sub_1775( "BSW", "[GA] P_MOVEIN_CS_MECH_GARAGE_DOOR end", 0 );
    return;
}

void sub_47612()
{
    sub_1775( "GA", "P_START_CS_CATWALK_REINF start", 0 );
    sub_20786( l_U640 );
    SET_BULLET_CAM_PREF( l_U640, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", "", 0, 0, 0, 0, 0, 0, 0, 0 );
    TASK_ATTACK_MOVE( l_U640, 48.56631000, 133.70960000, 6.60014400, 1092616192, 1101004800, -1082130432, 3 );
    sub_1775( "GA", "P_START_CS_CATWALK_REINF end", 0 );
    return;
}

void sub_48088()
{
    sub_29067( g_U1033 );
    sub_29067( g_U1088 );
    sub_29067( g_U1066 );
    sub_29067( g_U1103 );
    sub_29067( g_U1101 );
    sub_29067( g_U1109 );
    sub_29067( g_U1110 );
    sub_48173( l_U1935 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "S_MAR_BLUEPRINT", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "VIG_07_DOCKS_GATE_OPEN_PSTL_MAX_FWD", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "smar_Newspaper", 0 );
    return;
}

void sub_48173(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_48307(unknown uParam0)
{
    sub_1775( "SP", "P_SETUP_WEATHER_TIMEOFDAY", 0 );
    FREEZE_TIME_OF_DAY( 22, 0 );
    switch (uParam0)
    {
        case 0:
        case 1:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.00000000, 0.07000000, 0.00000000, 0.11000000 );
        break;
        case 2:
        case 4:
        case 5:
        SET_WEATHER_TYPE_NOW_PERSIST( "RAIN" );
        SET_PUDDLES( 0.00000000, 0.07000000, 0.00000000, 0.67000000 );
        break;
        case 6:
        case 7:
        case 8:
        SET_WEATHER_TYPE_NOW_PERSIST( "STORMY" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.90000000 );
        break;
        case 9:
        SET_WEATHER_TYPE_NOW_PERSIST( "STORMY" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 1.00000000 );
        break;
        case 10:
        SET_WEATHER_TYPE_NOW_PERSIST( "STORMY" );
        FREEZE_TIME_OF_DAY( 21, 0 );
        break;
        default:
        SET_WEATHER_TYPE_NOW_PERSIST( "RAIN" );
        break;
    }
    return;
}

void sub_48857(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_PLACEMENT_EXIST( (uParam0^)[I] ))
        {
            sub_1775( "RJM", "DO_ANY_PAINKILLERS_STILL_EXIST - Found a pill in there, we can still play some V.O.", 0 );
            (uParam1^)[I] = 1;
        }
        else
        {
            (uParam1^)[I] = 0;
        }
    }
    return;
}

int sub_49148(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    if ((IS_PLAYER_DEAD( sub_8864() )) == 0)
    {
        if (sub_49177() == 0)
        {
            for ( I = 0; I <= ((uParam1^) - 1); I++ )
            {
                if ((uParam2^)[I])
                {
                    if ((HAS_PLACEMENT_BEEN_COLLECTED( (uParam1^)[I] )) || (NOT (DOES_PLACEMENT_EXIST( (uParam1^)[I] ))))
                    {
                        (uParam2^)[I] = 0;
                        if (TIME_SINCE_LAST_MONOLOGUE() > 5000)
                        {
                            sub_41899( ref l_U380 );
                            sub_41830( uParam0, ref l_U380 );
                            return 1;
                        }
                    }
                }
            }
        }
    }
    return 0;
}

void sub_49177()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_49435(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_49548(unknown uParam0, unknown uParam1)
{
    sub_8459( uParam0, uParam1, 1, 0 );
    sub_26734( uParam0 );
    return;
}

void sub_50092()
{
    int iVar2;

    if (sub_36344( ref l_U684, 0 ))
    {
        l_U727 = 1;
        sub_1775( "BSW", "Handle_drop - setting cam mode to VIEW_MODE_MEDIUM", 0 );
        SET_CAM_VIEW_MODE( 1 );
    }
    else
    {
        iVar2 = GET_CAM_VIEW_MODE();
        if ((sub_45504( l_U663 )) AND (iVar2 == 1))
        {
            sub_1775( "BSW", "Handle_drop - setting cam mode to VIEW_MODE_NEAR", 0 );
            SET_CAM_VIEW_MODE( 0 );
        }
        else if ((NOT (sub_45504( l_U663 ))) AND (iVar2 == 0))
        {
            sub_1775( "BSW", "Handle_drop - setting cam mode to VIEW_MODE_MEDIUM", 0 );
            SET_CAM_VIEW_MODE( 1 );
        }
    }
    return;
}

void sub_50422(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_50459( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_50459(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_18272( uParam0 );
            }
        }
    }
    return;
}

int sub_50666(unknown uParam0, unknown uParam1)
{
    if (GET_PED_AWARENESS_STATE( uParam0, uParam1, 1 ))
    {
        return 1;
    }
    if (GET_PED_AWARENESS_STATE( uParam0, uParam1, 2 ))
    {
        return 1;
    }
    if (GET_PED_AWARENESS_STATE( uParam0, uParam1, 4 ))
    {
        return 1;
    }
    if (GET_PED_AWARENESS_STATE( uParam0, uParam1, 8 ))
    {
        return 1;
    }
    return 0;
}

void sub_50802()
{
    sub_1775( "TEH", "P_ACTIVATE_COVER_GUYS start", 0 );
    sub_45103( ref l_U1564 );
    sub_1775( "TEH", "P_ACTIVATE_COVER_GUYS end", 0 );
    return;
}

void sub_50912(boolean bParam0)
{
    int I;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    boolean bVar7;

    if (bParam0)
    {
        sub_45103( ref l_U1610 );
        sub_1775( "TEH", "Activate first wave reinfrcements", 0 );
        for ( I = 0; I <= 2; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U1610[I] )))
            {
                CLEAR_PED_TASKS_IMMEDIATELY( l_U1610[I] );
                if (NOT (IS_PED_DEAD( g_U779._fU4 )))
                {
                    REGISTER_TARGET( l_U1610[I], g_U779._fU4 );
                    sub_46293( ref l_U1610[I] );
                }
            }
        }
    }
    else
    {
        sub_1775( "TEH", "Activate second wave reinfrcements", 0 );
        uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_8842() )};
        bVar7 = false;
        if ((GET_DISTANCE_BETWEEN_COORDS( l_U428, uVar4, 1 )) < (GET_DISTANCE_BETWEEN_COORDS( l_U431, uVar4, 1 )))
        {
            bVar7 = true;
        }
        for ( I = 0; I <= 3; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U1703[I] )))
            {
                if (bVar7 == 0)
                {
                    sub_35738( l_U1703[I], l_U1685[I], l_U1698[I] );
                }
                if (IS_PED_ON_SCREEN( l_U1703[I], 0 ))
                {
                    if (bVar7)
                    {
                        sub_35738( l_U1703[I], l_U1667[I], l_U1680[I] );
                    }
                    else
                    {
                        sub_35738( l_U1703[I], l_U1685[I], l_U1698[I] );
                    }
                }
                CLEAR_PED_TASKS_IMMEDIATELY( l_U1703[I] );
                if (NOT (IS_PED_DEAD( g_U779._fU4 )))
                {
                    REGISTER_TARGET( l_U1703[I], g_U779._fU4 );
                    sub_46293( ref l_U1703[I] );
                }
            }
        }
        sub_45103( ref l_U1703 );
    }
    return;
}

void sub_51540()
{
    if (DOES_OBJECT_EXIST( l_U1737 ))
    {
        if ((GET_OBJECT_HEALTH( l_U1736 )) <= 30)
        {
            sub_1775( "TEH", "chain reaction blowing up of forklift tank", "xxxxxxxxxxxxxx" );
            sub_21436( l_U1737 );
            ADD_EXPLOSION( l_U571, 11, 1.00000000, 0, 0, 1065353216 );
        }
    }
    return;
}

void sub_51832()
{
    int I;

    sub_1775( "TEH", "P_RELEASE_COVER_CS start", 0 );
    SET_PED_COMBAT_ATTRIBUTES( l_U1722, 131072, 1 );
    for ( I = 0; I <= 4; I++ )
    {
        if (sub_18374( l_U1564[I] ))
        {
            SET_PED_FLAG_LOCK_TO_COVER( l_U1564[I], 0 );
            SET_PED_COMBAT_ATTRIBUTES( l_U1564[I], 131072, 1 );
        }
    }
    for ( I = 0; I <= 2; I++ )
    {
        if (sub_18374( l_U1610[I] ))
        {
            SET_PED_COMBAT_ATTRIBUTES( l_U1610[I], 131072, 1 );
        }
    }
    sub_1775( "TEH", "P_RELEASE_COVER_CS end", 0 );
    return;
}

void sub_52285(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_52520(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_53093(unknown uParam0, float fParam1, float fParam2, int iParam3)
{
    int I;
    unknown uVar7;

    if (fParam2 < fParam1)
    {
        fParam2 = fParam1 + 3.00000000;
        sub_1775( "MF", "No or invalid combat range passed, adjusting to minCombatRange + 3.0 meters.", 0 );
    }
    OPEN_SEQUENCE_TASK( ref uVar7 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    if (NOT (IS_PED_DEAD( sub_8842() )))
    {
        TASK_COMBAT_PED( 0, sub_8842() );
    }
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    CLOSE_SEQUENCE_TASK( uVar7 );
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            SET_PED_COMBAT_MOVEMENT( (uParam0^)[I], 2 );
            SET_PED_COMBAT_RANGE_MIN( (uParam0^)[I], fParam1 );
            SET_PED_COMBAT_RANGE_MAX( (uParam0^)[I], fParam2 );
            SET_PED_EMOTION_STATE( (uParam0^)[I], 1 );
            REGISTER_TARGET( (uParam0^)[I], sub_8842() );
            TASK_PERFORM_SEQUENCE( (uParam0^)[I], uVar7 );
            if (iParam3 == 1)
            {
                RESET_PED_TETHERING( (uParam0^)[I] );
            }
        }
    }
    CLEAR_SEQUENCE_TASK( uVar7 );
    return;
}

void sub_53509(unknown uParam0)
{
    int I;

    if ((sub_38076( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (sub_53557( (uParam0^)[I], 1 ))
            {
                return (uParam0^)[I];
            }
        }
    }
    return nil;
}

int sub_53557(unknown uParam0, boolean bParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (bParam1)
        {
            if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 )))
            {
                sub_53672( "MAL_SetCanTriggerBulletCam: Ped is not able to trigger BC, adding" );
                SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
                return 1;
            }
        }
        else if (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 ))
        {
            sub_53672( "MAL_SetCanTriggerBulletCam turning off BC" );
            SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
            return 1;
        }
    }
    return 0;
}

void sub_53672(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_54427()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    switch (l_U1485)
    {
        case -1: break;
        case 0:
        sub_1775( "SBA", "P_HANDLE_DRY_TO_WET_DOCKS_GATE_ANIM: assDryToWet = ASS_SETUP", "*****" );
        sub_54585( 1 );
        uVar5 = GET_WEAPON_FROM_HAND( sub_8842(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar5 ))
        {
            if (NOT (sub_55147( uVar5 )))
            {
                uVar5 = GET_WEAPON_FROM_HOLSTER( sub_8842(), 1 );
                if (GET_DOES_WEAPON_EXIST( uVar5 ))
                {
                    SET_WEAPON_VISIBLE( uVar5, 0 );
                }
                l_U1486 = -2011297806;
                uVar2 = {g_U1560};
            }
            else
            {
                l_U1486 = 284403121;
                uVar2 = {g_U1557};
            }
        }
        sub_35204( 1, 0, 0, 1 );
        SET_PLAYER_CAN_USE_SHOOTDODGE( sub_8864(), 1 );
        DISABLE_RESTART_CHECKPOINT( 1 );
        if (sub_29373())
        {
            SET_PED_FORCED_TO_WALK( sub_8842(), 0 );
            CLEAR_PED_TASKS_IMMEDIATELY( sub_8842() );
            sub_35738( sub_8842(), uVar2, g_U1563 );
            ISEQ_REGISTER_ENTITY( l_U1486, "max_open_gate", sub_8842(), 0 );
            sub_43198( sub_8842() );
        }
        sub_21916( 1 );
        ISEQ_REGISTER_ENTITY( l_U1486, "slip_gate", g_U1541, 1 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_MARINA_CP_05", "VIG_07_DOCKS_GATE_OPEN_PSTL_GATE_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        ISEQ_START( l_U1486 );
        sub_44044( ref l_U1496 );
        l_U1496 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
        SETUP_BULLET_CAMERA_SCENE( l_U1496, "VIG_07_DOCKS_GATE_OPEN_PSTL_MAX_FWD", 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "" );
        SET_CAM_ACTIVE( l_U1496, 1 );
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
        if (DOES_OBJECT_EXIST( g_U1541 ))
        {
            PLAY_SCRIPT_STREAM_FROM_OBJECT( g_U1541, 1 );
        }
        l_U1485 = 2;
        break;
        case 2:
        if (NOT (IS_BULLET_CAMERA_SCENE_ACTIVE( l_U1496 )))
        {
            SETUP_BULLET_CAMERA_ANIM_SCENE( l_U1496, sub_8842(), sub_8842() );
        }
        if (NOT l_U1949._fU20)
        {
            if (CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_MARINA_CP_05", "VIG_07_DOCKS_GATE_OPEN_PSTL_GATE_CAM" )) - 10))
            {
                sub_53672( "CAMERA DONE" );
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( -3, 1065353216, 0 );
                CAMERA_ANIMATED_STOP( 1000, 1 );
                sub_49548( ref l_U1949, 1000 );
            }
        }
        uVar6 = sub_8842();
        if (sub_56228( ref uVar6, 58, 1 ))
        {
            sub_53672( "SIMULATING GAIT" );
            SIMULATE_PLAYER_INPUT_GAIT( sub_8864(), 2, 2000, 0 );
        }
        if (sub_26854( ref l_U1949 ))
        {
            sub_1775( "SBA", "UPDATE_DRY_DOCKS_GATE: assDryToWet = ASS_PLAYING", "*****" );
            l_U1485 = 4;
        }
        break;
        case 4:
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_8842(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar5 ))
        {
            SET_WEAPON_VISIBLE( uVar5, 1 );
        }
        sub_43198( sub_8842() );
        sub_35927( 1, 1 );
        sub_44044( ref l_U1496 );
        sub_28253();
        sub_7594( -19.06497000, 189.26130000, 0.67625000, 176.24710000, 5.24323600, -6.80663600 );
        l_U1853 = 1;
        sub_21916( 0 );
        l_U1485 = 5;
        break;
        case 5:
        if (l_U1853)
        {
            sub_56651( 0, 1 );
        }
        else
        {
            STOP_SOUND( l_U1854, 0 );
            l_U1485 = 6;
        }
        break;
        case 6: break;
    }
    return;
}

void sub_54585(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_8842() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_8842(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_54665( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_54874();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_8842(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_54665(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_54874()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_8842() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_8842(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_54665( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_8842(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_8842(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_8842(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

int sub_55147(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_56228(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if ((sub_56243( (uParam0^), uParam1 )) == 1)
    {
        if (bParam2)
        {
            sub_56309( uParam0, uParam1 );
        }
        return 1;
    }
    return 0;
}

int sub_56243(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

void sub_56309(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

int sub_56651(boolean bParam0, boolean bParam1)
{
    float fVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if ((l_U1853 != bParam0) AND ((DOES_OBJECT_EXIST( g_U1541 )) == 1))
    {
        if (bParam0)
        {
            fVar4 = 0.05000000;
            uVar8 = g_U1551._fU4;
        }
        else
        {
            fVar4 = -0.05000000;
            if (bParam1)
            {
                uVar8 = g_U1542._fU4;
            }
            else
            {
                uVar8 = g_U1545._fU4;
            }
        }
        if (NOT l_U1857)
        {
            l_U1857 = 1;
            PLAY_SOUND_FROM_OBJECT( l_U1854, "S_MARINA_DRY_DOCKS_METAL_GATE", g_U1541 );
        }
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( g_U1541 )};
        if ((uVar5._fU4 <= (uVar8 + 0.10000000)) AND (uVar5._fU4 >= (uVar8 - 0.10000000)))
        {
            if (bParam0)
            {
                sub_1775( "TEH", "### Sliding Gate to SluiceIs Opening ###", 0 );
                SET_OBJECT_COORDS( g_U1541, g_U1551 );
            }
            else
            {
                sub_1775( "TEH", "### Sliding Gate to Sluice Button Is shutting ###", 0 );
                if (bParam1)
                {
                    SET_OBJECT_COORDS( g_U1541, g_U1545 );
                }
                else
                {
                    SET_OBJECT_COORDS( g_U1541, g_U1542 );
                }
            }
            STOP_SOUND( l_U1854, 0 );
            FREEZE_OBJECT_POSITION( g_U1541, 1 );
            SET_OBJECT_AS_PATH_OBSTACLE( g_U1541 );
            SET_OBJECT_COLLISION( g_U1541, 1 );
            l_U1853 = bParam0;
            l_U1857 = 0;
            return 1;
        }
        else
        {
            uVar5._fU4 += fVar4;
            SET_OBJECT_COORDS( g_U1541, uVar5 );
        }
    }
    return 0;
}

void sub_57286()
{
    if (NOT l_U1958)
    {
        START_WIDGET_GROUP( "Explosion Widget" );
        ADD_WIDGET_BOOL( "Test with Explosion", ref l_U1959 );
        ADD_WIDGET_FLOAT_SLIDER( "Explosion fx scale", ref l_U1962, 0, 10, 0.10000000 );
        STOP_WIDGET_GROUP();
        l_U1958 = 1;
    }
    return;
}

void sub_57449()
{
    sub_1775( "GA", "P_UNLOAD_ASSETS start", 0 );
    sub_57499( -1980065396 );
    REMOVE_ANIM_DICT( "npc_pstl_cover_grenade", 0 );
    REMOVE_ANIM_DICT( "npc_rifle_cover_grenade", 0 );
    sub_29052();
    sub_48088();
    sub_29067( g_U1055 );
    sub_57499( -168327769 );
    sub_29067( g_U1088 );
    sub_29067( g_U1066 );
    sub_29067( g_U1064 );
    RELEASE_NAMED_SCRIPT_AUDIO_BANK( l_U426 );
    sub_1775( "GA", "P_UNLOAD_ASSETS end", 0 );
    return;
}

void sub_57499(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}

void sub_57706()
{
    RELEASE_SOUND_ID( l_U1854 );
    RELEASE_SOUND_ID( l_U1855 );
    RELEASE_SOUND_ID( l_U1856 );
    return;
}


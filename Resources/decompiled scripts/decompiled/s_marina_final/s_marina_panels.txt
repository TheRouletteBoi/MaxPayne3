void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = {50.90000000, -151.83500000, 3.65000000};
    l_U40 = 0.00000000;
    l_U41 = {51.14000000, -163.37000000, 4.55000000};
    l_U44 = {55.31000000, -116.59000000, 1.35000000};
    l_U47 = {62.41000000, -132.64000000, 1.85000000};
    l_U50 = {58.55000000, -152.27000000, 4.49000000};
    StrCopy( ref l_U73, "SMAR_GVYRD_NIS", 32 );
    l_U81 = 0;
    sub_392( "SP", "Script s_marina_Panels.sc is starting...", "###" );
    sub_444( 1000 );
    while (true)
    {
        sub_528();
        WAIT( 0 );
    }
    sub_392( "SP", "Script s_marina_Panels.sc is terminating...", "###" );
    return;
}

void sub_392(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_444(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_528()
{
    if (l_U81 == 0)
    {
        START_WIDGET_GROUP( "Comic Panel Helper" );
        START_WIDGET_GROUP( "WallHop Comic Panel" );
        START_WIDGET_GROUP( "max" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U37._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U37._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U37._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U40, -360.00000000, 360.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Bullet Cam tunables" );
        START_WIDGET_GROUP( "Start" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U41._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U41._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U41._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "End" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U44._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U44._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U44._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Victim" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U47._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U47._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U47._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Weapon" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U50._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U50._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U50._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U81 = 1;
    }
    sub_1387();
    return;
}

void sub_1387()
{
    int iVar2;
    int iVar3;
    vector vVar4;
    float fVar7;

    if (sub_1397() == 1)
    {
        sub_392( "SP", "Starting WallHop comic panel...", "###" );
        sub_1526( 0 );
        sub_1681( sub_1604(), l_U37, l_U40 );
        if (((IS_PED_DEAD( sub_1604() )) == 0) AND ((IS_PLAYER_DEAD( sub_1626() )) == 0))
        {
            FREEZE_PED_POSITION( sub_1604(), 1 );
        }
        LOAD_SCENE( l_U37 );
        if (((IS_PED_DEAD( sub_1604() )) == 0) AND ((IS_PLAYER_DEAD( sub_1626() )) == 0))
        {
            SET_PLAYER_CONTROL( sub_1626(), 0, 0 );
            CLEAR_PED_TASKS_IMMEDIATELY( sub_1604() );
            FREEZE_PED_POSITION( sub_1604(), 0 );
            REMOVE_ALL_PED_WEAPONS( sub_1604() );
        }
        l_U72 = sub_1898( sub_1604(), 68019059, 25000, 0, 1 );
        if ((GET_DOES_WEAPON_EXIST( l_U72 )) == 1)
        {
            ENABLE_WEAPON_ATTACHMENT( l_U72, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( l_U72, 14, 0 );
            ENABLE_WEAPON_ATTACHMENT( l_U72, 8, 1 );
            TOGGLE_WEAPON_ATTACHMENT( l_U72, 8, 1 );
        }
        sub_2318( -1116313523, 1 );
        sub_2523( -1116313523, 1 );
        STOP_SCRIPT_STREAM( 0 );
        sub_2732( ref l_U73, 0, 1 );
        sub_1681( sub_1604(), l_U37, l_U40 );
        ISEQ_REGISTER_ENTITY( -1116313523, "max", sub_1604(), 0 );
        ISEQ_START( -1116313523 );
        PLAY_SCRIPT_STREAM_FRONTEND( 0 );
        iVar2 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
        SETUP_BULLET_CAMERA_SCENE( iVar2, "CUT_04", l_U41, l_U44, l_U47, 0.00000000, 0.00000000, 0.00000000, l_U50, 0.00000000, 0.00000000, 0.00000000, "", "" );
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
        while ((IS_BULLET_CAMERA_SCENE_ACTIVE( iVar2 )) == 0)
        {
            WAIT( 0 );
        }
        sub_444( 0 );
        iVar3 = 99;
        while ((sub_3041( iVar2 )) == 0)
        {
            if (iVar3 != (GET_BULLET_CAMERA_MARKER( iVar2 )))
            {
                iVar3 = GET_BULLET_CAMERA_MARKER( iVar2 );
                switch (iVar3)
                {
                    case 0:
                    sub_3185( ref l_U53, 4000, 1, 0 );
                    sub_3321( ref l_U53 );
                    break;
                    default:
                }
            }
            if ((sub_3446( ref l_U53 )) == 1)
            {
                if (((IS_PED_DEAD( sub_1604() )) == 0) AND ((IS_PLAYER_DEAD( sub_1626() )) == 0))
                {
                    SET_WEAPON_LIGHT_DATA_BY_NAME( l_U72, "Flashlight_Docks" );
                    ENABLE_WEAPON_ATTACHMENT( l_U72, 14, 1 );
                    TOGGLE_WEAPON_ATTACHMENT( l_U72, 14, 1 );
                }
            }
            WAIT( 0 );
        }
        if (iVar2 != nil)
        {
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            sub_3744( ref iVar2 );
            sub_2318( -1116313523, 1 );
            vVar4 = {50.79518000, -147.47680000, 1.24499100};
            fVar7 = 347.65390000;
            sub_1681( sub_1604(), vVar4, fVar7 );
            if ((IS_PED_DEAD( sub_1604() )) == 0)
            {
                CLEAR_PED_TASKS( sub_1604() );
                CLEAR_PED_DEFAULT_AIM( sub_1604() );
                PED_ACTION_TREE_PLAY_NODE( sub_1604(), "/Global/Player/PlayerLoco/PlayerLoco_IDLE/DEFAULT/AIM_IDLE/aim_idle_modes" );
            }
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 1.64487400, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -7.87499600, 1065353216, 0 );
            if (((IS_PED_DEAD( sub_1604() )) == 0) AND ((IS_PLAYER_DEAD( sub_1626() )) == 0))
            {
                SET_PLAYER_CONTROL( sub_1626(), 1, 0 );
            }
        }
        STOP_SCRIPT_STREAM( 0 );
        DESTROY_ALL_CAMS();
    }
    return;
}

int sub_1397()
{
    if ((((IS_BUTTON_PRESSED( 0, 6 )) AND (IS_BUTTON_JUST_PRESSED( 0, 4 ))) == 1) || (((IS_BUTTON_JUST_PRESSED( 0, 6 )) AND (IS_BUTTON_PRESSED( 0, 4 ))) == 1))
    {
        return 1;
    }
    return 0;
}

void sub_1526(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_1604()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1626() );
    }
    return 0;
}

void sub_1626()
{
    return GET_PLAYER_ID();
}

void sub_1681(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_1898(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_2204( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_2204(unknown uParam0)
{
    return;
}

void sub_2318(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_2523(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_2732(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_3041(unknown uParam0)
{
    if ((((IS_BUTTON_PRESSED( 0, 6 )) AND (IS_BUTTON_JUST_PRESSED( 0, 4 ))) == 1) || ((((IS_BUTTON_JUST_PRESSED( 0, 6 )) AND (IS_BUTTON_PRESSED( 0, 4 ))) == 1) || ((IS_BULLET_CAMERA_SCENE_ACTIVE( uParam0 )) == 0)))
    {
        return 1;
    }
    return 0;
}

void sub_3185(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_3321(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_3446(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_3744(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}


void main()
{
    unknown uVar2;

    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U79 = "PED_DEF";
    l_U121 = 1.00000000;
    l_U133 = 0;
    l_U174 = 0;
    l_U194 = 0;
    l_U227 = {-30.41140000, 289.55910000, 4.01081300};
    l_U230 = {-14.43771000, 0.00000100, -51.31666000};
    l_U233 = 3000;
    l_U234 = {-29.58045000, 292.94960000, 1.70018900};
    l_U237 = 284.49990000;
    l_U238 = {55.96000000, -34.27000000, 2.00000000};
    l_U241 = {56.50000000, -34.27000000, 2.00000000};
    l_U253 = 3200;
    l_U254 = 0;
    l_U255 = 0.01000000;
    l_U265 = 1;
    l_U266 = 180.00000000;
    l_U267 = 179.50000000;
    l_U282 = {69.92500000, -25.55000000, 2.26000000};
    l_U299 = {67.85000000, -24.27000000, 2.26000000};
    l_U302 = 0;
    l_U313 = 0;
    l_U314 = 0;
    l_U315 = 0;
    l_U316 = 1;
    l_U317 = 1;
    l_U327 = "LEVEL_S_MARINA_CP_02";
    l_U328 = "B_IN_05_02_DOCKS_CAM";
    l_U330 = 0;
    l_U331 = 0;
    l_U332 = 0;
    l_U333 = 0;
    l_U334 = 0;
    l_U335 = "LEVEL_S_MARINA_CP_07";
    l_U336 = "BLUEPRINT_CAM";
    l_U337 = "NEWSPAPER_CAM";
    l_U342 = 0;
    l_U363 = 0;
    l_U364 = 0;
    l_U365 = 0;
    l_U366 = 0;
    l_U367 = 0;
    l_U368 = 0;
    l_U369 = 0;
    l_U370 = 0;
    l_U371 = {54.66000000, -44.19000000, 2.02200000};
    l_U374 = 20.00000000;
    l_U375 = 0;
    l_U376 = {54.47300000, -35.50700000, 2.00000000};
    l_U379 = {0.00000000, 0.00000000, -180.00000000};
    l_U382 = 0.00000000;
    l_U383 = 0;
    l_U384 = 0;
    l_U385 = 0;
    l_U386 = 0;
    l_U387 = 0;
    l_U388 = 0;
    l_U389 = 0;
    l_U390 = 0;
    l_U391 = 0;
    l_U432 = 0;
    l_U433 = 0;
    l_U434 = 0;
    l_U479 = {62.43300000, 6.63100000, 2.01900000};
    l_U482 = {63.04000000, 17.22000000, 2.10000000};
    l_U485 = {64.15000000, 17.36000000, 2.10000000};
    l_U488 = {65.05700000, 15.55500000, 2.00000000};
    l_U491 = 190.00000000;
    l_U492 = 180.00000000;
    l_U493 = 145.50000000;
    l_U494 = 0;
    l_U495 = 0;
    l_U496 = {71.38217000, 53.38212000, 2.01000000};
    l_U499 = {g_U1663};
    l_U619 = 0;
    l_U620 = 0;
    l_U621 = 0;
    l_U622 = 1;
    l_U624 = {54.00000000, 90.65000000, 2.45000000};
    l_U627 = {0.00000000, 0.00000000, 0.00000000};
    l_U630 = {53.80200000, 91.61900000, 2.00000000};
    l_U633 = 90.00000000;
    l_U635 = 0;
    l_U636 = 0;
    l_U637 = {55.40000000, 93.30000000, 2.20000000};
    l_U640 = {0.00000000, 0.00000000, 0.00000000};
    l_U643 = {55.24900000, 93.33800000, 2.00000000};
    l_U646 = 90.00000000;
    l_U647 = 0;
    l_U648 = 0;
    l_U649 = 0;
    l_U650 = 0;
    l_U651 = 0;
    l_U652 = 0;
    l_U683 = 0;
    l_U684 = 0;
    l_U685 = 0;
    l_U687 = {48.59875000, -36.83268000, 1.82873400};
    l_U690 = 273.90910000;
    l_U692 = {50.22000000, -37.80000000, 2.05000000};
    l_U695 = {0.00000000, 0.00000000, 102.56000000};
    l_U698 = {45.62400000, -36.87500000, 1.24900000};
    l_U701 = {46.69500000, -37.47600000, 2.28300000};
    l_U704 = -86.17000000;
    l_U705 = 87.21000000;
    l_U706 = 0;
    l_U707 = 0;
    l_U708 = 0;
    l_U740 = {49.66400000, -34.64000000, 2.00500000};
    l_U743 = 270.00000000;
    l_U744 = {-2.11700000, 1.79100000, -0.80000000};
    l_U747 = 182.72300000;
    StrCopy( ref l_U748, "level_s_marina_cp_02", 32 );
    StrCopy( ref l_U756, "DOCKS_02_TRUCK_IN", 32 );
    l_U764 = 0;
    l_U765 = 0;
    l_U766 = 0;
    l_U767 = 0;
    l_U768 = 0;
    l_U769 = 0;
    l_U770 = 0;
    l_U771 = 1;
    l_U772 = "level_s_marina_cp_02";
    l_U773 = 0;
    l_U774 = 0;
    l_U775 = {67.46000000, -53.19000000, 2.01000000};
    l_U778 = {0.00000000, 0.00000000, 0.00000000};
    l_U783 = 0;
    l_U784 = 0;
    l_U785 = 0;
    l_U786 = 0;
    l_U787 = 0;
    l_U788 = 0;
    l_U790 = 0;
    l_U791 = 0;
    l_U792 = 0;
    l_U794 = 0;
    sub_1730();
    sub_1912( 0, 1 );
    sub_2357( "SMARAUD" );
    uVar2 = GIVE_WEAPON_TO_PED_HAND( g_U779._fU4, 68019059, 90, 0 );
    ENABLE_WEAPON_ATTACHMENT( uVar2, 14, 1 );
    TOGGLE_WEAPON_ATTACHMENT( uVar2, 14, 0 );
    ENABLE_WEAPON_ATTACHMENT( uVar2, 8, 1 );
    TOGGLE_WEAPON_ATTACHMENT( uVar2, 8, 1 );
    DO_SCREEN_FADE_IN( 500 );
    while (NOT IS_SCREEN_FADED_IN())
    {
        WAIT( 0 );
    }
    while (true)
    {
        sub_2580();
        sub_4710();
        sub_5505();
        sub_30268();
        sub_31763();
        sub_33387();
        sub_36037();
        sub_37479();
        WAIT( 0 );
    }
    return;
}

void sub_1730()
{
    sub_1777( "SBA", "P_INITIALIZE_ISEQ_DATA", "***" );
    l_U422[0] = {58.76800000, -3.90600000, 2.00000000};
    l_U422[1] = {59.80800000, -4.16400000, 2.00000000};
    l_U429[0] = 270.00000000;
    l_U429[1] = 90.00000000;
    return;
}

void sub_1777(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1912(unknown uParam0, unknown uParam1)
{
    sub_1929( 68019059, uParam1 );
    switch (uParam0)
    {
        case 0:
        case 1:
        sub_1929( -1074756423, uParam1 );
        break;
        case 2:
        sub_1929( -612753081, uParam1 );
        break;
        case 3:
        sub_1929( 1194438308, uParam1 );
        sub_1929( -612753081, uParam1 );
        break;
        case 4:
        sub_1929( 1194438308, uParam1 );
        sub_1929( -612753081, uParam1 );
        sub_1929( -168327769, uParam1 );
        sub_1929( -1074756423, uParam1 );
        break;
        case 5:
        case 6:
        sub_1929( 1194438308, uParam1 );
        sub_1929( -168327769, uParam1 );
        sub_1929( -612753081, uParam1 );
        sub_1929( -1074756423, uParam1 );
        break;
        case 7:
        case 8:
        case 9:
        sub_1929( -110877124, uParam1 );
        sub_1929( -1980065396, uParam1 );
        sub_1929( -168327769, uParam1 );
        sub_1929( 1194438308, uParam1 );
        sub_1929( -612753081, uParam1 );
        sub_1929( -1074756423, uParam1 );
        sub_1929( 1308526797, uParam1 );
        break;
    }
    return;
}

void sub_1929(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_2357(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_2377();
    return;
}

void sub_2377()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_2580()
{
    if (l_U771)
    {
        l_U771 = 0;
        sub_2613( l_U772, 0, 1 );
        if (DOES_OBJECT_EXIST( l_U781 ))
        {
            sub_2706( l_U781 );
        }
        if (DOES_OBJECT_EXIST( g_U1530 ))
        {
            sub_2706( g_U1530 );
        }
        START_WIDGET_GROUP( "Gate Test Widget" );
        ADD_WIDGET_BOOL( "Teleport to Slipway", ref l_U773 );
        ADD_WIDGET_FLOAT_SLIDER( "Blenda Delta", ref l_U774, 0, 9000, 500 );
        ADD_WIDGET_BOOL( "Reset Gate A", ref l_U784 );
        ADD_WIDGET_BOOL( "Play Gate A:DOCKS_02_REINF_2B_GATE_A", ref l_U785 );
        ADD_WIDGET_BOOL( "Play Gate A:DOCKS_02_GRD_GATE_A", ref l_U786 );
        ADD_WIDGET_BOOL( "Play Gate A:DOCKS_02_MAX_GATE_A_01", ref l_U787 );
        ADD_WIDGET_BOOL( "Play Gate A:DOCKS_02_MAX_GATE_A_02", ref l_U788 );
        ADD_WIDGET_BOOL( "Reset Gate B", ref l_U791 );
        ADD_WIDGET_BOOL( "Play Gate B:DOCKS_02_GRD_GATE_B", ref l_U792 );
        STOP_WIDGET_GROUP();
    }
    if (l_U783)
    {
        sub_1777( "BSW", "[MSWW]### Trying to spawn gate a", 0 );
        l_U783 = 0;
        sub_1777( "BSW", "[MSWW]### Reset gate rest bool", 0 );
        sub_2706( l_U782 );
        sub_1777( "BSW", "[MSWW]### Cleaned old gate", 0 );
        sub_3338( g_U1046, 1 );
        sub_1777( "BSW", "[MSWW]### Loaded model", 0 );
        l_U782 = sub_3573( g_U1046, l_U238, l_U379, 0, 0, 0 );
        sub_1777( "BSW", "[MSWW]### Created new gate(?)", 0 );
        while (NOT (DOES_OBJECT_EXIST( l_U782 )))
        {
            WAIT( 0 );
        }
    }
    if (l_U790)
    {
        sub_1777( "BSW", "[MSWW]### Trying to spawn gate b", 0 );
        l_U790 = 0;
        sub_2706( l_U789 );
        sub_3338( g_U1045, 1 );
        l_U789 = sub_3573( g_U1045, l_U775, l_U778, 0, 0, 0 );
        while (NOT (DOES_OBJECT_EXIST( l_U789 )))
        {
            WAIT( 0 );
        }
    }
    if (l_U773)
    {
        l_U773 = 0;
        SET_PED_COORDS( g_U779._fU4, 59.65940000, -41.76813000, 1.74392800, 1 );
    }
    if (l_U784)
    {
        l_U784 = 0;
        l_U783 = 1;
    }
    if (l_U785)
    {
        l_U785 = 0;
        sub_1777( "BSW", "[MSWW]### Trying to play Gate A Anim 01", 0 );
        PLAY_OBJECT_ANIM( l_U782, "DOCKS_02_REINF_2B_GATE_A", l_U772, l_U774, 0, 1 );
    }
    if (l_U786)
    {
        l_U786 = 0;
        sub_1777( "BSW", "[MSWW]### Trying to play Gate A Anim 02", 0 );
        PLAY_OBJECT_ANIM( l_U782, "DOCKS_02_GRD_GATE_A", l_U772, l_U774, 0, 1 );
    }
    if (l_U787)
    {
        l_U787 = 0;
        sub_1777( "BSW", "[MSWW]### Trying to play Gate A Anim 03", 0 );
        PLAY_OBJECT_ANIM( l_U782, "DOCKS_02_MAX_GATE_A_01", l_U772, l_U774, 0, 1 );
    }
    if (l_U788)
    {
        l_U788 = 0;
        sub_1777( "BSW", "[MSWW]### Trying to play Gate A Anim 04", 0 );
        PLAY_OBJECT_ANIM( l_U782, "DOCKS_02_MAX_GATE_A_02", l_U772, l_U774, 0, 1 );
    }
    if (l_U791)
    {
        l_U791 = 0;
        l_U790 = 1;
    }
    if (l_U792)
    {
        l_U792 = 0;
        sub_1777( "BSW", "[MSWW]### Trying to play Gate B Anim 01", 0 );
        PLAY_OBJECT_ANIM( l_U789, "DOCKS_02_GRD_GATE_B", l_U772, l_U774, 0, 1 );
    }
    return;
}

void sub_2613(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_2706(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_3338(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_3443( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3443(unknown uParam0)
{
    return;
}

void sub_3573(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_3338( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_4710()
{
    if (l_U708 == 0)
    {
        START_WIDGET_GROUP( "Test Sequence" );
        ADD_WIDGET_BOOL( "bStartTestSequence", ref l_U706 );
        ADD_WIDGET_BOOL( "bKillTestSequence", ref l_U707 );
        STOP_WIDGET_GROUP();
        l_U708 = 1;
    }
    if (l_U706)
    {
        sub_1777( "BSW", "[SP]### Cleaning up any existing sequence assets... ###", 0 );
        ISEQ_TERMINATE( 1575581456 );
        while (ISEQ_IS_LOADED( 1575581456 ))
        {
            sub_1777( "BSW", "[SP]### WAITING... ###", 0 );
            WAIT( 0 );
        }
        sub_1777( "BSW", "[SP]### Loading the Slipway interactive sequence... ###", 0 );
        sub_5069( 1575581456, 1 );
        sub_1777( "BSW", "[SP]### tarting Slipway Interactive Sequence... ###", 0 );
        ISEQ_START( 1575581456 );
        l_U706 = 0;
    }
    if (l_U707)
    {
        sub_1777( "BSW", "[SP]### Killing Slipway sequence... ###", 0 );
        ISEQ_TERMINATE( 1575581456 );
        while (ISEQ_IS_LOADED( 1575581456 ))
        {
            sub_1777( "BSW", "[SP]### WAITING... ###", 0 );
            WAIT( 0 );
        }
        l_U707 = 0;
    }
    return;
}

void sub_5069(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_5505()
{
    vector vVar2;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;
    unknown uVar51;
    unknown uVar52;
    unknown uVar53;
    unknown uVar54;
    unknown uVar55;
    unknown uVar56;
    unknown uVar57;
    unknown uVar58;
    unknown uVar59;

    if (NOT l_U767)
    {
        START_WIDGET_GROUP( "Interactive Sequence Test Helper" );
        START_WIDGET_GROUP( "JUNGLE JUMP" );
        ADD_WIDGET_STRING( "Jungle Interactive Sequence" );
        ADD_WIDGET_BOOL( "Teleport Player To the Jungle", ref l_U363 );
        ADD_WIDGET_BOOL( "Start Jungle Interactive Sequence", ref l_U364 );
        ADD_WIDGET_BOOL( "Kill Jungle Interactive Sequence", ref l_U365 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "SLIPWAY" );
        ADD_WIDGET_STRING( "Slipway Interactive Sequence" );
        ADD_WIDGET_BOOL( "Teleport Player To the Slipway", ref l_U366 );
        ADD_WIDGET_FLOAT_SLIDER( "Max Start Pos X", ref l_U371._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Max Start Pos Y", ref l_U371._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Max Start Pos Z", ref l_U371._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Max Start Heading", ref l_U374, -360.00000000, 360.00000000, 0.10000000 );
        START_WIDGET_GROUP( "TRUCK LOADERS" );
        ADD_WIDGET_FLOAT_SLIDER( "Parking Block Pos X", ref l_U692._fU0, -1000.00000000, 1000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Parking Block Pos Y", ref l_U692._fU4, -1000.00000000, 1000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Parking Block Pos Z", ref l_U692._fU8, -1000.00000000, 1000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Unloader 1 X", ref l_U698._fU0, -1000.00000000, 1000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Unloader 1 Y", ref l_U698._fU4, -1000.00000000, 1000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Unloader 1 Z", ref l_U698._fU8, -1000.00000000, 1000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Unloader 1 Heading", ref l_U704, -1000.00000000, 1000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Unloader 2 X", ref l_U701._fU0, -1000.00000000, 1000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Unloader 2 Y", ref l_U701._fU4, -1000.00000000, 1000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Unloader 2 Z", ref l_U701._fU8, -1000.00000000, 1000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Unloader 2 Heading", ref l_U705, -1000.00000000, 1000.00000000, 0.10000000 );
        ADD_WIDGET_BOOL( "Reset Slipway Objects", ref l_U367 );
        ADD_WIDGET_BOOL( "Start Slipway Interactive Sequence", ref l_U368 );
        ADD_WIDGET_BOOL( "Kill Slipway Interactive Sequence", ref l_U370 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "TASK_GET_ON_CUSTOM_VEHILCE" );
        ADD_WIDGET_FLOAT_SLIDER( "Task Start Pos X", ref l_U744._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Task Start Pos Y", ref l_U744._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Task Start Pos Z", ref l_U744._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Task Start Heading", ref l_U747, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_BOOL( "bCreateTestPed", ref l_U386 );
        ADD_WIDGET_BOOL( "bRunTaskTest", ref l_U387 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "MAX OPEN GATE" );
        ADD_WIDGET_BOOL( "Teleport Max and Setup", ref l_U375 );
        ADD_WIDGET_BOOL( "Start Max Open Gate Interactive Sequence", ref l_U384 );
        ADD_WIDGET_BOOL( "Kill Max Open Gate Interactive Sequence", ref l_U385 );
        START_WIDGET_GROUP( "Gate Parameters" );
        ADD_WIDGET_BOOL( "Reset Gate", ref l_U383 );
        ADD_WIDGET_INT_SLIDER( "Time Until Gate Moves", ref l_U253, 0, 10000, 1 );
        ADD_WIDGET_FLOAT_SLIDER( "Gate Movement Increment", ref l_U255, 0.00000000, 1.00000000, 0.00100000 );
        START_WIDGET_GROUP( "Gate End Position" );
        ADD_WIDGET_FLOAT_SLIDER( "Max Start Pos X", ref l_U241._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Max Start Pos Y", ref l_U241._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Max Start Pos Z", ref l_U241._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "MAX Position by Gate" );
        ADD_WIDGET_FLOAT_SLIDER( "Max Start Pos X", ref l_U376._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Max Start Pos Y", ref l_U376._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Max Start Pos Z", ref l_U376._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Max Start Heading", ref l_U382, -360.00000000, 360.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "VIGNETTE 02" );
        sub_7839( ref l_U256, 71.79350000, -30.71715000, 2.20361900, 108.25780000, 0 );
        ADD_WIDGET_BOOL( "Gate closed?", ref l_U265 );
        sub_8159( ref l_U282, "gmed3 pos:", 1036831949 );
        ADD_WIDGET_FLOAT_SLIDER( "gmed3 rot:", ref l_U266, 0, 360, 0.50000000 );
        sub_8159( ref l_U299, "gmed4 pos:", 1036831949 );
        ADD_WIDGET_FLOAT_SLIDER( "gmed4 rot:", ref l_U267, 0, 360, 0.50000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "S_MAR_05_02_BLEND" );
        ADD_WIDGET_STRING( "Max sneaks through a door into the slipway." );
        ADD_WIDGET_BOOL( "Teleport To Sequence", ref l_U313 );
        ADD_WIDGET_BOOL( "Start Sequence", ref l_U314 );
        ADD_WIDGET_BOOL( "Stop Sequence", ref l_U315 );
        ADD_WIDGET_BOOL( "Use Animated Cam", ref l_U316 );
        ADD_WIDGET_BOOL( "Play Image FX", ref l_U317 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "STORAGE WAREHOUSE" );
        ADD_WIDGET_STRING( "Warehouse Interactive Sequence" );
        ADD_WIDGET_BOOL( "Teleport Player To the Warehouse", ref l_U388 );
        ADD_WIDGET_BOOL( "Reset Warehouse Thugs", ref l_U389 );
        ADD_WIDGET_BOOL( "Start Warehouse Interactive Sequence", ref l_U390 );
        ADD_WIDGET_BOOL( "Kill Warehouse Interactive Sequence", ref l_U391 );
        START_WIDGET_GROUP( "Enemy CS1" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U422[0]._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U422[0]._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U422[0]._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U429[0], 0.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Enemy CS2" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U422[1]._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U422[1]._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U422[1]._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U429[1], 0.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "CONTAINER YARD" );
        START_WIDGET_GROUP( "Container Yard Interactive Sequence" );
        ADD_WIDGET_BOOL( "Teleport Player To the Container Yard", ref l_U432 );
        ADD_WIDGET_BOOL( "Start Container Yard Interactive Sequence", ref l_U433 );
        ADD_WIDGET_BOOL( "Kill Container Yard Interactive Sequence", ref l_U434 );
        START_WIDGET_GROUP( "Cardplayer 01" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U482._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U482._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U482._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U491, 0.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Cardplayer 02" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U485._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U485._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U485._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U492, 0.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Cardplayer 03" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U488._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U488._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U488._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U493, 0.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Garage Door Placement" );
        ADD_WIDGET_BOOL( "Teleport Player To the Garage Door Location", ref l_U494 );
        ADD_WIDGET_BOOL( "Create the Garage Door", ref l_U495 );
        START_WIDGET_GROUP( "Garage Door Location" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U499._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U499._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U499._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "BOATHOUSE" );
        ADD_WIDGET_STRING( "Boathouse Interactive Sequence" );
        ADD_WIDGET_BOOL( "Teleport Player To the Boathouse", ref l_U619 );
        ADD_WIDGET_BOOL( "Start Boathouse Interactive Sequence", ref l_U620 );
        ADD_WIDGET_BOOL( "Kill Boathouse Interactive Sequence", ref l_U621 );
        START_WIDGET_GROUP( "Crowbar Object" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U624._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U624._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U624._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U627._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U627._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U627._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Skillsaw Guy" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U643._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U643._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U643._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U646, -5000.00000000, 5000.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Skillsaw Object" );
        ADD_WIDGET_BOOL( "Toggle Skill Saw Light", ref l_U636 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U637._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U637._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U637._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U640._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U640._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U640._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "BOATHOUSE HQ 2" );
        ADD_WIDGET_STRING( "Boathouse HQ 2 Interactive Sequence" );
        ADD_WIDGET_BOOL( "Teleport Player To the Boathouse HQ 2", ref l_U647 );
        ADD_WIDGET_BOOL( "Start Boathouse HQ 2 Interactive Sequence", ref l_U648 );
        ADD_WIDGET_BOOL( "Kill Boathouse HQ 2 Interactive Sequence", ref l_U649 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "BOATHOUSE GARGE DOOR" );
        ADD_WIDGET_STRING( "Boathouse garage door Interactive Sequence" );
        ADD_WIDGET_BOOL( "Teleport Player in to the Boathouse", ref l_U650 );
        ADD_WIDGET_BOOL( "Start Boathouse garage door Interactive Sequence", ref l_U651 );
        ADD_WIDGET_BOOL( "Kill Boathouse garge door Interactive Sequence", ref l_U652 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "BOATHOUSE PROP TEST" );
        ADD_WIDGET_STRING( "Boathouse prop test Interactive Sequence" );
        ADD_WIDGET_BOOL( "Teleport Player in to the Boathouse", ref l_U683 );
        ADD_WIDGET_BOOL( "Start Boathouse Prop test Interactive Sequence", ref l_U684 );
        ADD_WIDGET_BOOL( "Kill Boathouse Prop test Interactive Sequence", ref l_U685 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "WET DOCKS" );
        START_WIDGET_GROUP( "Old iSequence Stuff" );
        ADD_WIDGET_STRING( "Docks Interactive Sequence" );
        ADD_WIDGET_BOOL( "Teleport Player To the Docks", ref l_U764 );
        ADD_WIDGET_BOOL( "Start Docks Interactive Sequence", ref l_U765 );
        ADD_WIDGET_BOOL( "Kill Docks Interactive Sequence", ref l_U766 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "VIGNETTE 08" );
        sub_7839( ref l_U304, -30.27370000, 290.25650000, 1.40020700, 189.00000000, 0 );
        sub_8159( ref l_U234, "Vig08 Player Pos", 1036831949 );
        ADD_WIDGET_FLOAT_SLIDER( "Vig08 Player Rot", ref l_U237, 0, 360, 0.10000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "DOCK EXPLOSION JUMP" );
        ADD_WIDGET_STRING( "Dock Explosion Jump Interactive Sequence" );
        ADD_WIDGET_BOOL( "Teleport to Dock Jump", ref l_U768 );
        ADD_WIDGET_BOOL( "Start Dock Jump IS", ref l_U769 );
        ADD_WIDGET_BOOL( "Kill Dock Jump IS", ref l_U770 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Dry Docks Exporation Items" );
        ADD_WIDGET_BOOL( "Teleport to Dry Docks", ref l_U330 );
        ADD_WIDGET_BOOL( "Loop scene", ref l_U333 );
        ADD_WIDGET_BOOL( "Kill Scene", ref l_U334 );
        ADD_WIDGET_BOOL( "Play Newspaper Scene", ref l_U331 );
        ADD_WIDGET_BOOL( "Play Blueprints Scene", ref l_U332 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U767 = 1;
    }
    if (l_U363)
    {
        sub_1777( "BSW", "[SP]### Teleporting player to the Jungle ###", 0 );
        sub_12913( 1000 );
        vVar2 = {55.59356000, -158.10440000, 3.54560200};
        LOAD_SCENE( vVar2 );
        if ((IS_PED_DEAD( g_U779._fU4 )) == 0)
        {
            SET_PED_COORDS( g_U779._fU4, vVar2, 1 );
            SET_PED_HEADING( g_U779._fU4, 0.00000000 );
        }
        sub_13081( 1000 );
        l_U363 = 0;
    }
    if (l_U364)
    {
        sub_1777( "BSW", "[SP]###  Cleaning up any existing sequence assets. ###", 0 );
        ISEQ_TERMINATE( -1116313523 );
        while (ISEQ_IS_LOADED( -1116313523 ))
        {
            sub_1777( "BSW", "Waiting for Jungle sequence termination.", 0 );
            WAIT( 0 );
        }
        sub_1777( "BSW", "[SP]### Loading the Jungle interactive sequence. ###", 0 );
        sub_5069( -1116313523, 1 );
        sub_1777( "BSW", "[SP]### Starting Jungle Interactive Sequence ###", 0 );
        ISEQ_START( -1116313523 );
        l_U364 = 0;
    }
    if (l_U365)
    {
        sub_1777( "BSW", "Killing Jungle sequence.", 0 );
        ISEQ_TERMINATE( -1116313523 );
        while (ISEQ_IS_LOADED( -1116313523 ))
        {
            sub_1777( "BSW", "Waiting for Jungle sequence termination.", 0 );
            WAIT( 0 );
        }
        l_U365 = 0;
    }
    if (l_U366)
    {
        sub_1777( "BSW", "[GA] Teleporting player to the Slipway", 0 );
        sub_12913( 1000 );
        LOAD_SCENE( l_U371 );
        sub_13813( sub_13736(), l_U371, l_U374 );
        sub_2613( ref l_U748, 0, 1 );
        sub_13081( 1000 );
        l_U366 = 0;
    }
    if (l_U367 == 1)
    {
        sub_13907();
        l_U367 = 0;
    }
    if (l_U368)
    {
        sub_1777( "BSW", "Slipway Interactive Sequence", 0 );
        sub_1777( "BSW", "Cleaning up any existing sequence assets.", 0 );
        ISEQ_TERMINATE( -1043438555 );
        while (ISEQ_IS_LOADED( -1043438555 ))
        {
            sub_1777( "BSW", "Waiting for Slipway sequence termination.", 0 );
            WAIT( 0 );
        }
        sub_1777( "BSW", "Loading the Slipway interactive sequence.", 0 );
        sub_5069( -1043438555, 1 );
        if ((IS_PED_DEAD( g_U779._fU4 )) == 0)
        {
            ;
        }
        sub_14677( l_U709[0] );
        sub_14677( l_U709[1] );
        sub_14792( ref l_U712[0], l_U698, l_U704, g_U1030, 4, 1, 0, 0, 0 );
        sub_14792( ref l_U712[1], l_U701, l_U705, g_U1030, 4, 1, 0, 0, 0 );
        l_U709[0] = sub_14925( ref l_U712[0] );
        l_U709[1] = sub_14925( ref l_U712[1] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U709[0], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U709[1], 1 );
        SET_PED_PROP_INDEX( l_U709[0], 13, 0, 0, 255 );
        SET_PED_PROP_INDEX( l_U709[1], 13, 0, 0, 255 );
        ISEQ_REGISTER_ENTITY( -1043438555, "cs1", l_U709[0], 0 );
        ISEQ_REGISTER_ENTITY( -1043438555, "cs2", l_U709[1], 0 );
        sub_1777( "BSW", "Starting Slipway Interactive Sequence", 0 );
        ISEQ_START( -1043438555 );
        l_U369 = 1;
        l_U368 = 0;
    }
    if (l_U369 == 1)
    {
        if ((ISEQ_IS_LOADED( -1043438555 )) == 1)
        {
            if (ISEQ_QUERY_ENTITY_STATE( -1043438555, "slip_player", 4 ))
            {
                l_U369 = 0;
            }
            else if (ISEQ_QUERY_ENTITY_STATE( -1043438555, "slip_player", 6 ))
            {
                l_U369 = 0;
            }
        }
        else
        {
            l_U369 = 0;
        }
    }
    if (l_U370)
    {
        sub_1777( "BSW", "Killing Slipway sequence.", 0 );
        ISEQ_TERMINATE( -1043438555 );
        while (ISEQ_IS_LOADED( -1043438555 ))
        {
            sub_1777( "BSW", "Waiting for Boathouse sequence termination.", 0 );
            WAIT( 0 );
        }
        l_U369 = 0;
        l_U370 = 0;
        sub_14677( l_U709[0] );
        sub_14677( l_U709[1] );
    }
    if (l_U386 == 1)
    {
        sub_14677( l_U739 );
        sub_14792( ref uVar5, l_U740, l_U743, g_U1030, 4, 1, 0, 0, 0 );
        l_U739 = sub_14925( ref uVar5 );
        if (((IS_PED_DEAD( l_U739 )) == 0) AND ((DOES_PED_EXIST( l_U739 )) == 1))
        {
            ;
        }
        l_U386 = 0;
    }
    if (l_U387 == 1)
    {
        if (((IS_PED_DEAD( l_U739 )) == 0) AND ((DOES_PED_EXIST( l_U739 )) == 1))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( l_U739 );
            TASK_GET_ON_CUSTOM_VEHICLE( l_U686, l_U739, l_U744, l_U747, ref l_U748, ref l_U756 );
        }
        l_U387 = 0;
    }
    if (l_U375)
    {
        sub_12913( 500 );
        sub_13813( sub_13736(), l_U376, l_U382 );
        sub_16360();
        sub_13081( 500 );
        l_U375 = 0;
    }
    if (l_U383 == 1)
    {
        sub_16360();
        l_U383 = 0;
    }
    if (l_U384)
    {
        sub_1777( "BSW", "[SP]### Cleaning up any existing sequence assets. ###", 0 );
        ISEQ_UNREGISTER_ENTITY( 1760319867, "max_open_gate" );
        ISEQ_UNREGISTER_ENTITY( 1760319867, "slip_gate" );
        sub_16753( 1760319867, 1 );
        sub_1777( "BSW", "[SP]### Loading the MaxOpenGate interactive sequence. ###", 0 );
        sub_5069( 1760319867, 1 );
        ISEQ_REGISTER_ENTITY( 1760319867, "max_open_gate", g_U779._fU4, 0 );
        ISEQ_REGISTER_ENTITY( 1760319867, "slip_gate", g_U1530, 1 );
        sub_13813( sub_13736(), l_U376, l_U382 );
        sub_1777( "BSW", "[SP]### Starting MaxOpenGate Interactive Sequence ###", 0 );
        ISEQ_START( 1760319867 );
        sub_17215( ref l_U244, l_U253, 1, 0 );
        sub_17351( ref l_U244 );
        l_U384 = 0;
    }
    if (l_U385)
    {
        sub_1777( "BSW", "[SP]### Killing MaxOpenGate sequence. ###", 0 );
        ISEQ_UNREGISTER_ENTITY( 1760319867, "max_open_gate" );
        ISEQ_UNREGISTER_ENTITY( 1760319867, "slip_gate" );
        sub_16753( 1760319867, 1 );
        sub_17625( "LEVEL_S_MARINA_CP_02" );
        l_U385 = 0;
    }
    if (sub_17663( ref l_U244 ))
    {
        l_U254 = 1;
    }
    if (l_U388)
    {
        sub_1777( "BSW", "[GA] Teleporting player to the Warehouse", 0 );
        sub_12913( 500 );
        uVar18 = GET_HASH_KEY( "Room_Storage" );
        uVar19 = GET_INTERIOR_AT_COORDS( 57.09000000, -18.18000000, 2.00000000 );
        SET_INTERIOR_ACTIVE( uVar19, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar19, uVar18 );
        sub_3338( g_U1030, 1 );
        sub_13813( sub_13736(), 57.09000000, -18.18000000, 2.00000000, 262.00000000 );
        if (NOT (IS_PED_DEAD( sub_13736() )))
        {
            SET_ROOM_FOR_PED_BY_NAME( sub_13736(), "Room_Storage" );
        }
        sub_13081( 500 );
        l_U388 = 0;
    }
    if (l_U389)
    {
        sub_18095();
        l_U389 = 0;
    }
    if (l_U390)
    {
        sub_1777( "BSW", "Warehouse Interactive Sequence", 0 );
        sub_1777( "BSW", "Cleaning up any existing sequence assets.", 0 );
        ISEQ_UNREGISTER_ENTITY( 9319211, "cs1" );
        ISEQ_UNREGISTER_ENTITY( 9319211, "cs2" );
        sub_16753( 9319211, 1 );
        if ((IS_PED_DEAD( l_U419[1] )) || (IS_PED_DEAD( l_U419[0] )))
        {
            sub_1777( "SBA", "Warehouse guys don't exist...", "***" );
            sub_18095();
        }
        sub_1777( "BSW", "Loading the Warehouse interactive sequence.", 0 );
        sub_5069( 9319211, 1 );
        ISEQ_REGISTER_ENTITY( 9319211, "cs1", l_U419[0], 0 );
        ISEQ_REGISTER_ENTITY( 9319211, "cs2", l_U419[1], 0 );
        sub_13813( l_U419[0], l_U422[0], l_U429[0] );
        sub_13813( l_U419[1], l_U422[1], l_U429[1] );
        sub_1777( "BSW", "Starting Warehouse Interactive Sequence", 0 );
        ISEQ_START( 9319211 );
        l_U390 = 0;
    }
    if (l_U391)
    {
        sub_1777( "BSW", "Killing Warehouse sequence.", 0 );
        ISEQ_UNREGISTER_ENTITY( 9319211, "cs1" );
        ISEQ_UNREGISTER_ENTITY( 9319211, "cs2" );
        sub_16753( 9319211, 1 );
        sub_18154( ref l_U419 );
        l_U391 = 0;
    }
    if (l_U432)
    {
        sub_1777( "BSW", "[GA] Teleporting player to the Container", 0 );
        uVar20 = GET_HASH_KEY( "Room_Storage" );
        uVar21 = GET_INTERIOR_AT_COORDS( 61.31000000, 4.76000000, 2.00000000 );
        SET_INTERIOR_ACTIVE( uVar21, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar21, uVar20 );
        if (NOT (IS_PED_DEAD( g_U779._fU4 )))
        {
            SET_PED_COORDS( g_U779._fU4, 61.31000000, 4.76000000, 2.00000000, 1 );
            SET_PED_HEADING( g_U779._fU4, 350 );
        }
        l_U432 = 0;
    }
    if (l_U433)
    {
        sub_2613( "LEVEL_S_MARINA_CONT", 0, 1 );
        sub_1777( "BSW", "Load Peds", 0 );
        sub_18154( ref l_U475 );
        sub_14792( ref l_U435[0], l_U482, l_U491, g_U1031, 7, 3, 2, 0, 0 );
        sub_14792( ref l_U435[1], l_U485, l_U492, g_U1031, 7, 3, 2, 0, 0 );
        sub_14792( ref l_U435[2], l_U488, l_U493, g_U1031, 7, 3, 2, 0, 0 );
        l_U475[0] = sub_14925( ref l_U435[0] );
        l_U475[1] = sub_14925( ref l_U435[1] );
        l_U475[2] = sub_14925( ref l_U435[2] );
        SET_ROOM_FOR_PED_BY_NAME( l_U475[0], ref g_U1184 );
        SET_ROOM_FOR_PED_BY_NAME( l_U475[1], ref g_U1184 );
        sub_19797();
        sub_1777( "BSW", "Cleaning up any existing sequence assets.", 0 );
        ISEQ_UNREGISTER_ENTITY( -468449117, "cs_cont_1" );
        ISEQ_UNREGISTER_ENTITY( -468449117, "cs_cont_2" );
        ISEQ_UNREGISTER_ENTITY( -468449117, "cs_cont_3" );
        ISEQ_UNREGISTER_ENTITY( -468449117, "player" );
        ISEQ_UNREGISTER_ENTITY( -468449117, "mar_gar_door" );
        sub_16753( -468449117, 1 );
        sub_1777( "BSW", "Loading the Container interactive sequence.", 0 );
        sub_5069( -468449117, 1 );
        sub_1777( "BSW", "Registering entities and moving peds into position", 0 );
        ISEQ_REGISTER_ENTITY( -468449117, "cs_cont_1", l_U475[0], 0 );
        ISEQ_REGISTER_ENTITY( -468449117, "cs_cont_2", l_U475[1], 0 );
        ISEQ_REGISTER_ENTITY( -468449117, "cs_cont_3", l_U475[2], 0 );
        ISEQ_REGISTER_ENTITY( -468449117, "player", g_U779._fU4, 0 );
        ISEQ_REGISTER_ENTITY( -468449117, "mar_gar_door", g_U1532, 1 );
        sub_13813( l_U475[0], l_U435[0]._fU0, l_U435[0]._fU12 );
        sub_13813( l_U475[1], l_U435[1]._fU0, l_U435[1]._fU12 );
        sub_13813( l_U475[2], l_U435[2]._fU0, l_U435[2]._fU12 );
        sub_13813( sub_13736(), l_U479, 0.00000000 );
        sub_1777( "BSW", "Starting Container Interactive Sequence", 0 );
        SET_OBJECT_ANIM_SPEED( g_U1532, "PROP_GRG_CONT_OPEN", "LEVEL_S_MARINA_CONT", 1.00000000 );
        ISEQ_START( -468449117 );
        l_U433 = 0;
    }
    if (l_U434)
    {
        sub_1777( "BSW", "Killing Container sequence.", 0 );
        ISEQ_UNREGISTER_ENTITY( -468449117, "cs_cont_1" );
        ISEQ_UNREGISTER_ENTITY( -468449117, "cs_cont_2" );
        ISEQ_UNREGISTER_ENTITY( -468449117, "cs_cont_3" );
        ISEQ_UNREGISTER_ENTITY( -468449117, "player" );
        ISEQ_UNREGISTER_ENTITY( -468449117, "mar_gar_door" );
        sub_16753( -468449117, 1 );
        sub_18154( ref l_U475 );
        sub_2706( g_U1532 );
        l_U434 = 0;
    }
    if (l_U494)
    {
        sub_1777( "BSW", "Teleporting player to garage room.", 0 );
        sub_12913( 1000 );
        uVar22 = GET_HASH_KEY( ref g_U1192 );
        uVar23 = GET_INTERIOR_AT_COORDS( l_U496 );
        SET_INTERIOR_ACTIVE( uVar23, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar23, uVar22 );
        sub_13813( sub_13736(), l_U496, 0 );
        sub_13081( 1000 );
        l_U494 = 0;
    }
    if (l_U495)
    {
        sub_1777( "BSW", "Creating garage door.", 0 );
        sub_21234( l_U499, l_U499 );
        l_U495 = 0;
    }
    if (l_U619)
    {
        sub_1777( "BSW", "[GA] Teleporting player to the Boathouse", 0 );
        sub_3338( g_U1076, 1 );
        sub_3338( g_U1079, 1 );
        uVar24 = CREATE_OBJECT( g_U1076, 51.69000000, 82.59000000, -0.25160000, 1, 0 );
        uVar25 = CREATE_OBJECT( g_U1079, 56.10000000, 78.99000000, 4.98300000, 1, 0 );
        while (NOT (DOES_OBJECT_EXIST( uVar24 )))
        {
            WAIT( 0 );
        }
        FREEZE_OBJECT_POSITION( uVar24, 1 );
        SET_OBJECT_ROTATION( uVar24, 0.00000000, 0.00000000, -90.00000000 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( uVar24, ref g_U1200 );
        while (NOT (DOES_OBJECT_EXIST( uVar25 )))
        {
            WAIT( 0 );
        }
        FREEZE_OBJECT_POSITION( uVar25, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( uVar25, ref g_U1200 );
        if (NOT (IS_PED_DEAD( g_U779._fU4 )))
        {
            SET_PED_COORDS( g_U779._fU4, 54.51644000, 70.72771000, 5.20003800, 1 );
            SET_PED_HEADING( g_U779._fU4, 351.10820000 );
        }
        l_U619 = 0;
    }
    if (l_U620)
    {
        sub_1777( "BSW", "Boathouse Interactive Sequence", 0 );
        sub_16753( 1245615643, 1 );
        sub_5069( 1245615643, 1 );
        sub_14677( l_U617 );
        sub_14677( l_U618 );
        sub_22308();
        sub_22786();
        sub_14792( ref uVar26, 53.83300000, 101.41700000, 1.96900000, 0.00000000, 672795858, 7, 3, 2, 0, 0 );
        sub_14792( ref uVar39, 58.37000000, 93.69900000, 2.00900000, 0.00000000, 1384225390, 7, 3, 2, 0, 0 );
        l_U617 = sub_14925( ref uVar26 );
        if (NOT (IS_PED_DEAD( l_U617 )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U617, 1 );
            sub_23279( l_U617, -612753081, 25000, 0, 0 );
        }
        l_U618 = sub_14925( ref uVar39 );
        if (NOT (IS_PED_DEAD( l_U618 )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U618, 1 );
        }
        if ((IS_PED_DEAD( g_U779._fU4 )) == 0)
        {
            SET_PED_COORDS( g_U779._fU4, 55.03300000, 70.40500000, 5.11600000, 1 );
            SET_PED_HEADING( g_U779._fU4, 0.00000000 );
        }
        ISEQ_REGISTER_ENTITY( 1245615643, "hq_player", g_U779._fU4, 0 );
        ISEQ_REGISTER_ENTITY( 1245615643, "sabonete", l_U617, 0 );
        ISEQ_REGISTER_ENTITY( 1245615643, "carolina", l_U618, 0 );
        ISEQ_REGISTER_ENTITY( 1245615643, "cs_patrol", l_U607[0], 0 );
        ISEQ_REGISTER_ENTITY( 1245615643, "cs_drugs", l_U607[1], 0 );
        ISEQ_REGISTER_ENTITY( 1245615643, "cs_crate_a", l_U607[2], 0 );
        ISEQ_REGISTER_ENTITY( 1245615643, "cs_crate_b", l_U607[3], 0 );
        ISEQ_REGISTER_ENTITY( 1245615643, "cs_crowbar", l_U607[4], 0 );
        ISEQ_REGISTER_ENTITY( 1245615643, "cs_skilsaw", l_U607[5], 0 );
        ISEQ_REGISTER_ENTITY( 1245615643, "cs_smoker_pistol", l_U607[6], 0 );
        ISEQ_REGISTER_ENTITY( 1245615643, "cs_smoker_rifle", l_U607[7], 0 );
        ISEQ_REGISTER_ENTITY( 1245615643, "hq_door", g_U1534, 1 );
        ISEQ_REGISTER_ENTITY( 1245615643, "crowbar", l_U623, 1 );
        ISEQ_REGISTER_ENTITY( 1245615643, "skillsaw", l_U634, 1 );
        ISEQ_START( 1245615643 );
        if ((DOES_OBJECT_EXIST( l_U623 )) == 1)
        {
            FREEZE_OBJECT_POSITION( l_U623, 0 );
            SET_OBJECT_COLLISION( l_U623, 0 );
        }
        if ((DOES_OBJECT_EXIST( l_U634 )) == 1)
        {
            FREEZE_OBJECT_POSITION( l_U634, 0 );
            SET_OBJECT_COLLISION( l_U634, 0 );
        }
        if (DOES_OBJECT_EXIST( g_U1533 ))
        {
            SET_OBJECT_COLLISION( g_U1533, 0 );
        }
        if (DOES_OBJECT_EXIST( g_U1534 ))
        {
            SET_OBJECT_COLLISION( g_U1534, 0 );
        }
        l_U620 = 0;
    }
    if (l_U621)
    {
        sub_1777( "BSW", "Killing Boathouse sequence.", 0 );
        sub_16753( 1245615643, 1 );
        I_SEQUENCE_PURGE_ALL();
        sub_25886( ref l_U607 );
        sub_14677( l_U617 );
        sub_14677( l_U618 );
        l_U621 = 0;
    }
    if (l_U636 == 1)
    {
        if ((DOES_OBJECT_EXIST( l_U634 )) == 1)
        {
            SET_OBJECT_LIGHTS( l_U634, l_U635 );
            l_U635 = NOT l_U635;
        }
        l_U636 = 0;
    }
    if (l_U647)
    {
        sub_1777( "BSW", "[GA] Teleporting player to the Boathouse HQ 2", 0 );
        sub_3338( g_U1076, 1 );
        uVar52 = sub_3573( g_U1076, 51.69000000, 82.59000000, -0.25160000, 0.00000000, 0.00000000, -90.00000000, 0, 1, 0 );
        if (DOES_OBJECT_EXIST( uVar52 ))
        {
            FREEZE_OBJECT_POSITION( uVar52, 1 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( uVar52, ref g_U1200 );
        }
        uVar53 = GET_HASH_KEY( "Room_main" );
        uVar54 = GET_INTERIOR_AT_COORDS( 55.58000000, 84.00000000, 5.20000000 );
        SET_INTERIOR_ACTIVE( uVar54, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar54, uVar53 );
        if (NOT (IS_PED_DEAD( g_U779._fU4 )))
        {
            SET_PED_COORDS( g_U779._fU4, 55.58000000, 84.00000000, 5.20000000, 1 );
            SET_PED_HEADING( g_U779._fU4, 0 );
        }
        l_U647 = 0;
    }
    if (l_U648)
    {
        sub_1777( "BSW", "Boathouse HQ 2 Interactive Sequence", 0 );
        sub_1777( "BSW", "Cleaning up any existing sequence assets.", 0 );
        ISEQ_TERMINATE( 1245615643 );
        while (ISEQ_IS_LOADED( 1245615643 ))
        {
            sub_1777( "BSW", "Waiting for Boathouse HQ 2 sequence termination.", 0 );
            WAIT( 0 );
        }
        sub_1777( "BSW", "Loading the Boathouse HQ 2 interactive sequence.", 0 );
        sub_5069( 1245615643, 1 );
        if (NOT (IS_PED_DEAD( g_U779._fU4 )))
        {
            SET_PED_COORDS( g_U779._fU4, 55.58000000, 84.00000000, 5.20000000, 1 );
            SET_PED_HEADING( g_U779._fU4, 0 );
            ISEQ_REGISTER_ENTITY( 1245615643, "hq_player2", g_U779._fU4, 0 );
        }
        sub_1777( "BSW", "Starting Boathouse HQ 2 Interactive Sequence", 0 );
        ISEQ_START( 1245615643 );
        l_U648 = 0;
    }
    if (l_U649)
    {
        sub_1777( "BSW", "Killing Boathouse HQ 2 sequence.", 0 );
        ISEQ_TERMINATE( 1245615643 );
        while (ISEQ_IS_LOADED( 1245615643 ))
        {
            sub_1777( "BSW", "Waiting for Boathouse HQ 2 sequence termination.", 0 );
            WAIT( 0 );
        }
        l_U649 = 0;
    }
    if (l_U650)
    {
        sub_1777( "BSW", "[GA] Teleporting player to the BoatHouse", 0 );
        sub_3338( g_U1076, 1 );
        uVar55 = CREATE_OBJECT( g_U1076, 51.69000000, 82.59000000, -0.25160000, 1, 0 );
        while (NOT (DOES_OBJECT_EXIST( uVar55 )))
        {
            WAIT( 0 );
        }
        FREEZE_OBJECT_POSITION( uVar55, 1 );
        SET_OBJECT_ROTATION( uVar55, 0.00000000, 0.00000000, -90.00000000 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( uVar55, ref g_U1200 );
        uVar56 = GET_HASH_KEY( "Room_main" );
        uVar57 = GET_INTERIOR_AT_COORDS( 56.22000000, 83.43000000, 5.20000000 );
        SET_INTERIOR_ACTIVE( uVar57, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar57, uVar56 );
        if (NOT (IS_PED_DEAD( g_U779._fU4 )))
        {
            SET_PED_COORDS( g_U779._fU4, 56.22000000, 83.43000000, 5.20000000, 1 );
            SET_PED_HEADING( g_U779._fU4, 0 );
        }
        l_U650 = 0;
    }
    if (l_U651)
    {
        sub_1777( "BSW", "Boathouse Garage Door Interactive Sequence", 0 );
        sub_1777( "BSW", "Cleaning up any existing sequence assets.", 0 );
        ISEQ_TERMINATE( 1245919105 );
        while (ISEQ_IS_LOADED( 1245919105 ))
        {
            sub_1777( "BSW", "Waiting for Boathouse Garage Door sequence termination.", 0 );
            WAIT( 0 );
        }
        sub_25886( ref l_U680 );
        sub_2706( l_U616 );
        sub_14792( ref l_U653[0], 54.98200000, 113.27700000, 1.99000000, 180, g_U1032, 7, 3, 2, 0, 0 );
        sub_14792( ref l_U653[1], 55.98000000, 113.26100000, 1.99000000, 180, g_U1032, 7, 3, 2, 0, 0 );
        sub_1777( "BSW", "Loading the Boathouse Garage Door interactive sequence.", 0 );
        sub_5069( 1245919105, 1 );
        l_U680[0] = sub_14925( ref l_U653[0] );
        l_U680[1] = sub_14925( ref l_U653[1] );
        if (NOT (IS_PED_DEAD( l_U680[0] )))
        {
            GIVE_WEAPON_TO_PED_HAND( l_U680[0], 1194438308, 25000, 0 );
            ISEQ_REGISTER_ENTITY( 1245919105, "cs_guard01", l_U680[0], 0 );
        }
        if (NOT (IS_PED_DEAD( l_U680[1] )))
        {
            GIVE_WEAPON_TO_PED_HAND( l_U680[1], 1308526797, 25000, 0 );
            ISEQ_REGISTER_ENTITY( 1245919105, "cs_guard02", l_U680[1], 0 );
        }
        sub_1777( "BSW", "[GA] Creating BH Garage Gate.", 0 );
        sub_3338( g_U1088, 1 );
        l_U616 = CREATE_OBJECT( g_U1088, 55.51000000, 106.94000000, 1.99000000, 1, 0 );
        while (NOT (DOES_OBJECT_EXIST( l_U616 )))
        {
            WAIT( 0 );
        }
        FREEZE_OBJECT_POSITION( l_U616, 1 );
        sub_1777( "BSW", "[GA] Animating BH Garage Gate closed.", 0 );
        sub_1777( "BSW", "[GA] Registering BH Garage Gate.", 0 );
        ISEQ_REGISTER_ENTITY( 1245919105, "boathouse_door", l_U616, 1 );
        sub_1777( "BSW", "Starting Boathouse Garage Door Interactive Sequence", 0 );
        ISEQ_START( 1245919105 );
        l_U651 = 0;
    }
    if (l_U652)
    {
        sub_1777( "BSW", "Killing Boathouse Garage Door sequence.", 0 );
        ISEQ_TERMINATE( 1245919105 );
        while (ISEQ_IS_LOADED( 1245919105 ))
        {
            sub_1777( "BSW", "Waiting for Boathouse Garage Door sequence termination.", 0 );
            WAIT( 0 );
        }
        l_U652 = 0;
    }
    if (l_U683)
    {
        sub_1777( "BSW", "[GA] Teleporting player to the Warehouse", 0 );
        uVar58 = GET_HASH_KEY( "Room_main" );
        uVar59 = GET_INTERIOR_AT_COORDS( 55.88000000, 76.61000000, 5.20000000 );
        SET_INTERIOR_ACTIVE( uVar59, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar59, uVar58 );
        if (NOT (IS_PED_DEAD( g_U779._fU4 )))
        {
            SET_PED_COORDS( g_U779._fU4, 55.88000000, 76.61000000, 5.20000000, 1 );
            SET_PED_HEADING( g_U779._fU4, 0 );
        }
        l_U683 = 0;
    }
    if (l_U684)
    {
        sub_1777( "BSW", "Boathouse Prop Interactive Sequence", 0 );
        sub_1777( "BSW", "Cleaning up any existing sequence assets.", 0 );
        ISEQ_TERMINATE( 774111554 );
        while (ISEQ_IS_LOADED( 774111554 ))
        {
            sub_1777( "BSW", "Waiting for Boathouse Prop sequence termination.", 0 );
            WAIT( 0 );
        }
        sub_1777( "BSW", "Loading the Boathouse Prop interactive sequence.", 0 );
        sub_5069( 774111554, 1 );
        sub_1777( "BSW", "Starting Boathouse Prop Interactive Sequence", 0 );
        ISEQ_START( 774111554 );
        l_U684 = 0;
    }
    if (l_U685)
    {
        sub_1777( "BSW", "Killing Boathouse Prop sequence.", 0 );
        ISEQ_TERMINATE( 774111554 );
        while (ISEQ_IS_LOADED( 774111554 ))
        {
            sub_1777( "BSW", "Waiting for Boathouse Prop sequence termination.", 0 );
            WAIT( 0 );
        }
        l_U685 = 0;
    }
    if (l_U764)
    {
        sub_1777( "BSW", "[GA] Teleporting player to the Docks", 0 );
        LOAD_SCENE( -35.50000000, 225.54000000, 1.00000000 );
        if (NOT (IS_PED_DEAD( g_U779._fU4 )))
        {
            SET_PED_COORDS( g_U779._fU4, -35.50000000, 225.54000000, 1.00000000, 1 );
            SET_PED_HEADING( g_U779._fU4, 9 );
        }
        l_U764 = 0;
    }
    if (l_U765)
    {
        sub_1777( "BSW", "Docks Interactive Sequence", 0 );
        sub_1777( "BSW", "Cleaning up any existing sequence assets.", 0 );
        ISEQ_TERMINATE( 429107530 );
        while (ISEQ_IS_LOADED( 429107530 ))
        {
            sub_1777( "BSW", "Waiting for Docks sequence termination.", 0 );
            WAIT( 0 );
        }
        sub_1777( "BSW", "Loading the Docks interactive sequence.", 0 );
        sub_5069( 429107530, 1 );
        sub_1777( "BSW", "Starting Docks Interactive Sequence", 0 );
        ISEQ_START( 429107530 );
        l_U765 = 0;
    }
    if (l_U766)
    {
        sub_1777( "BSW", "Killing Docks sequence.", 0 );
        ISEQ_TERMINATE( 429107530 );
        while (ISEQ_IS_LOADED( 429107530 ))
        {
            sub_1777( "BSW", "Waiting for Docks sequence termination.", 0 );
            WAIT( 0 );
        }
        l_U766 = 0;
    }
    if (l_U768)
    {
        sub_1777( "GA", "Teleporting player to the dock jump IS.", 0 );
        LOAD_SCENE( 4.60000000, 345.83000000, 0.63000000 );
        sub_13813( g_U779._fU4, 4.60000000, 345.83000000, 0.65000000, 0.00000000 );
        l_U768 = 0;
    }
    if (l_U769)
    {
        sub_1777( "GA", "Starting Dock Jump IS", 0 );
        sub_16753( -1222784315, 1 );
        sub_5069( -1222784315, 1 );
        ISEQ_REGISTER_ENTITY( -1222784315, "s_marina_max_jump", g_U779._fU4, 0 );
        sub_13813( g_U779._fU4, 4.60000000, 345.83000000, 0.65000000, 0.00000000 );
        ISEQ_START( -1222784315 );
        l_U769 = 0;
    }
    if (l_U770)
    {
        sub_1777( "GA", "Stopping Dock Jump IS", 0 );
        sub_16753( -1222784315, 1 );
        l_U770 = 0;
    }
    return;
}

void sub_7839(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, boolean bParam5)
{
    iParam0->_fU0 = 0;
    iParam0->_fU4 = 0;
    iParam0->_fU12 = 0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {uParam1};
    iParam0->_fU32 = uParam4;
    ADD_WIDGET_BOOL( "Teleport player", iParam0 + 0 );
    if (bParam5)
    {
        ADD_WIDGET_BOOL( "Create Object No Anim", iParam0 + 8 );
    }
    ADD_WIDGET_BOOL( "Loop Sequence", iParam0 + 16 );
    ADD_WIDGET_BOOL( "Start Sequence", iParam0 + 4 );
    ADD_WIDGET_BOOL( "Kill Sequence", iParam0 + 12 );
    ADD_WIDGET_FLOAT_SLIDER( "Player Teleport Heading", iParam0 + 32, 65176, 360, 0.50000000 );
    return;
}

void sub_8159(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

void sub_12913(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_13081(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_13736()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_13758() );
    }
    return 0;
}

void sub_13758()
{
    return GET_PLAYER_ID();
}

void sub_13813(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_13907()
{
    sub_1777( "BSW", "[SP]### P_CREATE_SLIPWAY_OBJECTS ###", 0 );
    sub_13973( l_U686 );
    sub_3338( g_U1038, 1 );
    l_U686 = CREATE_VEHICLE( g_U1038, l_U687, l_U690, 1, 0 );
    if (((IS_VEHICLE_DEAD( l_U686 )) == 0) AND ((DOES_VEHICLE_EXIST( l_U686 )) == 1))
    {
        SET_VEHICLE_DOORS_LOCKED( l_U686, 3 );
        SET_VEHICLE_ON_GROUND_PROPERLY( l_U686 );
        SET_VEHICLE_LIGHTS( l_U686, 2 );
        REMOVE_VEHICLE_WINDOW( l_U686, 0 );
        REMOVE_VEHICLE_WINDOW( l_U686, 1 );
        SET_VEHICLE_DOOR_BROKEN( l_U686, 5, 1 );
        SET_VEHICLE_DOOR_CONTROL( l_U686, 2, 1, 1.00000000 );
        SET_VEHICLE_DOOR_CONTROL( l_U686, 3, 1, 1.00000000 );
    }
    sub_2706( l_U691 );
    sub_3338( g_U1051, 1 );
    l_U691 = sub_3573( g_U1051, l_U692, l_U695, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U691 )) == 1)
    {
        SET_OBJECT_HEALTH( l_U691, 1 );
    }
    WAIT( 1000 );
    if (((IS_VEHICLE_DEAD( l_U686 )) == 0) AND ((DOES_VEHICLE_EXIST( l_U686 )) == 1))
    {
        FREEZE_VEHICLE_POSITION( l_U686, 1 );
    }
    return;
}

void sub_13973(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_14677(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_14792(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_14925(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_3338( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_15404( iParam0->_fU40 );
    sub_15484( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_15404(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_15484(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_16360()
{
    sub_1777( "SBA", "Setting up the slipway gate", "***" );
    sub_2613( "LEVEL_S_MARINA_CP_02", 0, 1 );
    sub_2706( g_U1530 );
    sub_3338( g_U1046, 1 );
    g_U1530 = sub_3573( g_U1046, l_U238, l_U379, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U1530 )) == 1)
    {
        SET_OBJECT_COORDS( g_U1530, l_U238 );
        SET_OBJECT_ROTATION( g_U1530, l_U379 );
        FREEZE_OBJECT_POSITION( g_U1530, 1 );
        l_U254 = 0;
    }
    return;
}

void sub_16753(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_17215(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_17351(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

void sub_17625(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

int sub_17663(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_18095()
{
    int I;

    sub_1777( "SBA", "Setting up warehouse guys", "***" );
    sub_18154( ref l_U419 );
    for ( I = 0; I <= 1; I++ )
    {
        sub_14792( ref l_U392[I], l_U422[I], l_U429[I], g_U1030, 7, 3, 2, 0, 0 );
        l_U419[I] = sub_14925( ref l_U392[I] );
        SET_ROOM_FOR_PED_BY_NAME( l_U419[I], "Room_Storage" );
        sub_18338( l_U419[I], 406496141, 0, 25000, 0 );
    }
    return;
}

void sub_18154(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_14677( (uParam0^)[I] );
    }
    return;
}

void sub_18338(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_3443( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_19797()
{
    sub_1777( "SP", "P_CREATE_WH_GARAGEDOOR", "###" );
    sub_2706( g_U1532 );
    g_U1532 = sub_3573( g_U1063, g_U1656, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( g_U1532 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1532, ref g_U1178 );
        FREEZE_OBJECT_POSITION( g_U1532, 1 );
        PLAY_OBJECT_ANIM( g_U1532, "p_ma_botdor_aa_h", ref g_U1138, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U1532, "p_ma_botdor_aa_h", ref g_U1138, 0 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U1532, "p_ma_botdor_aa_h", ref g_U1138, 0.10000000 );
    }
    return;
}

void sub_21234(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    sub_1777( "SP", "P_HANDLE_CONTAINER_TO_BOATYARD_EXIT_DOOR", "###" );
    if (DOES_OBJECT_EXIST( g_U1660 ))
    {
        if (g_U1662 == 1)
        {
            PLAY_OBJECT_ANIM( g_U1660, "P_MA_BotDor_Ca_H", ref g_U1138, 1000.00000000, 0, 0 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U1660, "P_MA_BotDor_Ca_H", ref g_U1138, 1.00000000 );
            SET_OBJECT_ANIM_SPEED( g_U1660, "P_MA_BotDor_Ca_H", ref g_U1138, -1.00000000 );
            sub_21459( uParam3 );
        }
        else
        {
            sub_1777( "TEH", "P_HANDLE_CONTAINER_TO_BOATYARD_EXIT_DOOR: Garage exit does not exist", "###" );
        }
    }
    else
    {
        sub_21669( uParam0 );
    }
    return;
}

void sub_21459(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_2706( g_U1661 );
    g_U1661 = sub_3573( g_U1093, uParam0, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( g_U1661 )) == 1)
    {
        SET_OBJECT_VISIBLE( g_U1661, 0 );
        FREEZE_OBJECT_POSITION( g_U1661, 1 );
    }
    return;
}

void sub_21669(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_1777( "SBA", "P_CREATE_CY_TO_BOATYARD_GARAGE_DOOR", "***" );
    sub_2706( g_U1660 );
    g_U1660 = sub_3573( g_U1093, uParam0, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( g_U1660 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1660, ref g_U1192 );
        FREEZE_OBJECT_POSITION( g_U1660, 1 );
    }
    return;
}

void sub_22308()
{
    sub_1777( "SP", "P_CREATE_BOATREPAIR_DOORS", "###" );
    sub_2706( g_U1533 );
    g_U1533 = sub_3573( g_U1105, 53.21000000, 71.70000000, 5.20000000, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( g_U1533 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U1533, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1533, ref g_U1200 );
    }
    sub_2706( g_U1534 );
    g_U1534 = sub_22508( g_U1106, g_U782, 0.00000000, 0.00000000, -7.54000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( g_U1534 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U1534, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1534, ref g_U1200 );
    }
    return;
}

void sub_22508(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_3338( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_22786()
{
    sub_1777( "SP", "P_START_CS_INSIDE_BOAT_REPAIR", "###" );
    sub_14792( ref l_U502[0], 50.46500000, 102.37600000, 2.00000000, -90.00000000, g_U1032, 7, 3, 2, 0, 0 );
    sub_14792( ref l_U502[1], 59.33200000, 93.05600000, 2.04000000, -180.00000000, g_U1032, 7, 3, 2, 0, 0 );
    sub_14792( ref l_U502[2], 57.00900000, 87.04200000, 2.00000000, 0.00000000, g_U1032, 7, 3, 2, 0, 0 );
    sub_14792( ref l_U502[3], 57.17500000, 88.86400000, 2.00000000, 180.00000000, g_U1032, 7, 3, 2, 0, 0 );
    sub_14792( ref l_U502[4], l_U630, l_U633, g_U1032, 7, 3, 2, 0, 0 );
    sub_14792( ref l_U502[5], l_U643, l_U646, g_U1032, 7, 3, 2, 0, 0 );
    sub_14792( ref l_U502[6], 58.51300000, 98.27000000, 2.00000000, 180.00000000, g_U1032, 7, 3, 2, 0, 0 );
    sub_14792( ref l_U502[7], 59.53900000, 98.10600000, 2.00000000, 165.55200000, g_U1032, 7, 3, 2, 0, 0 );
    sub_18154( ref l_U607 );
    l_U607[0] = sub_14925( ref l_U502[0] );
    if (NOT (IS_PED_DEAD( l_U607[0] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U607[0], ref g_U1200 );
        SET_PED_AI_TEMPLATE( l_U607[0], "AIT_NORMAL" );
        sub_23279( l_U607[0], -1074756423, 25000, 0, 1 );
        if (l_U622 == 0)
        {
            SET_PED_COORDS( l_U607[0], 55.20800000, 101.96500000, 2.00000000, 1 );
            SET_PED_HEADING( l_U607[0], -89.67600000 );
            sub_5069( 1245615643, 1 );
        }
    }
    l_U607[1] = sub_14925( ref l_U502[1] );
    if (NOT (IS_PED_DEAD( l_U607[1] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U607[1], ref g_U1200 );
        SET_PED_AI_TEMPLATE( l_U607[1], "AIT_NORMAL" );
        if (l_U622 == 0)
        {
            SET_PED_COORDS( l_U607[1], 59.50700000, 92.31700000, 2.00000000, 1 );
            SET_PED_HEADING( l_U607[1], 65356 );
        }
    }
    l_U607[2] = sub_14925( ref l_U502[2] );
    if (NOT (IS_PED_DEAD( l_U607[2] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U607[2], ref g_U1200 );
        SET_PED_AI_TEMPLATE( l_U607[2], "AIT_NORMAL" );
        if (l_U622 == 0)
        {
            SET_PED_COORDS( l_U607[2], 57.21000000, 87.04200000, 2.00000000, 1 );
            SET_PED_HEADING( l_U607[2], 0 );
        }
    }
    l_U607[3] = sub_14925( ref l_U502[3] );
    if (NOT (IS_PED_DEAD( l_U607[3] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U607[3], ref g_U1200 );
        SET_PED_AI_TEMPLATE( l_U607[3], "AIT_NORMAL" );
        if (l_U622 == 0)
        {
            SET_PED_COORDS( l_U607[3], 57.27500000, 88.86400000, 2.00000000, 1 );
            SET_PED_HEADING( l_U607[3], 180 );
        }
    }
    l_U607[4] = sub_14925( ref l_U502[4] );
    if (NOT (IS_PED_DEAD( l_U607[4] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U607[4], ref g_U1200 );
        SET_PED_AI_TEMPLATE( l_U607[4], "AIT_NORMAL" );
        if (l_U622 == 0)
        {
            SET_PED_COORDS( l_U607[4], l_U630, 1 );
            SET_PED_HEADING( l_U607[4], l_U633 );
        }
    }
    sub_2706( l_U623 );
    l_U623 = sub_3573( g_U1107, l_U624, l_U627, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( l_U623 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U623, 1 );
        SET_OBJECT_COLLISION( l_U623, 0 );
    }
    l_U607[5] = sub_14925( ref l_U502[5] );
    if (NOT (IS_PED_DEAD( l_U607[5] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U607[5], ref g_U1200 );
        SET_PED_AI_TEMPLATE( l_U607[5], "AIT_NORMAL" );
        if (l_U622 == 0)
        {
            SET_PED_COORDS( l_U607[5], 55.24900000, 93.33800000, 2.00000000, 1 );
            SET_PED_HEADING( l_U607[5], 90 );
        }
    }
    sub_2706( l_U634 );
    l_U634 = sub_3573( g_U1108, l_U637, l_U640, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( l_U634 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U634, 1 );
        SET_OBJECT_COLLISION( l_U634, 0 );
    }
    l_U607[6] = sub_14925( ref l_U502[6] );
    if (NOT (IS_PED_DEAD( l_U607[6] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U607[6], ref g_U1200 );
        SET_PED_AI_TEMPLATE( l_U607[0], "AIT_NORMAL" );
        if (l_U622 == 0)
        {
            SET_PED_COORDS( l_U607[6], 58.37300000, 98.27200000, 2.00000000, 1 );
            SET_PED_HEADING( l_U607[6], 180 );
        }
    }
    l_U607[7] = sub_14925( ref l_U502[7] );
    if (NOT (IS_PED_DEAD( l_U607[7] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U607[7], ref g_U1200 );
        SET_PED_AI_TEMPLATE( l_U607[7], "AIT_NORMAL" );
        GIVE_WEAPON_TO_PED_HAND( l_U607[7], 1194438308, 25000, 0 );
        if (l_U622 == 0)
        {
            SET_PED_COORDS( l_U607[7], 59.53900000, 98.10600000, 2.00000000, 1 );
            SET_PED_HEADING( l_U607[7], 165.55200000 );
        }
    }
    return;
}

void sub_23279(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_3443( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_25886(unknown uParam0)
{
    int iVar3;
    int I;

    iVar3 = (uParam0^) - 1;
    for ( I = 0; I <= iVar3; I++ )
    {
        sub_14677( (uParam0^)[I] );
    }
    return;
}

void sub_30268()
{
    switch (l_U794)
    {
        case 0:
        ADD_WIDGET_BOOL( "Enable Debug Aim Test", ref l_U793 );
        l_U794 = 1;
        break;
        case 1:
        if (l_U793)
        {
            sub_1777( "BSW", "starting debug aim test...", 0 );
            sub_13813( g_U779._fU4, 20.04422000, -161.04410000, 1.09124200, 271.59000000 );
            sub_30465( 1, 0, 0, 1 );
            sub_30667( ref l_U795, 16.16339000, -161.08510000, 2.58698400, 0.82588200, 0.00000000, -89.95037000, 45, 4000 );
            sub_30667( ref l_U826, 19.36202000, -164.86040000, 2.58442400, 0.82591000, 0.00000000, -9.77279100, 45, 4000 );
            sub_30667( ref l_U857, 23.82248000, -161.08020000, 3.00610300, -5.80436000, -0.00000000, 89.72066000, 45, 4000 );
            sub_30984( ref l_U795, ref l_U826, 5000, 1, 1 );
            sub_17215( ref l_U888, 10000, 1, 0 );
            sub_17351( ref l_U888 );
            l_U794 = 2;
        }
        break;
        case 2:
        if ((sub_31127( ref l_U826, 0 )) AND (NOT l_U795._fU32))
        {
            sub_30984( ref l_U826, ref l_U857, 5000, 1, 1 );
            l_U794 = 3;
        }
        break;
        case 3:
        if (sub_17663( ref l_U888 ))
        {
            l_U794 = 4;
            sub_31331( 2000, 1, 0, -859915232, -859915232, 0 );
        }
        break;
        case 4:
        sub_1777( "BSW", "ending debug aim test...", 0 );
        l_U793 = 0;
        l_U794 = 1;
        sub_31486( 1, 1 );
        break;
    }
    return;
}

void sub_30465(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_13736() )))
        {
            SET_PLAYER_CONTROL( sub_13758(), 0, uParam2 );
            SET_PED_DUCKING( sub_13736(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_13736() );
            }
            SET_PED_INVINCIBLE( sub_13736(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_30667(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_17215( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U649, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_30984(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE_WITH_INTERP( iParam1->_fU0, iParam0->_fU0, uParam2, uParam3, uParam4 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_17351( iParam1 + 48 );
    iParam1->_fU32 = 1;
    iParam1->_fU40 = 1;
    return;
}

int sub_31127(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_17663( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_17663( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_31331(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_31486(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_13736() )))
    {
        SET_PLAYER_CONTROL( sub_13758(), 1, 0 );
        SET_PED_INVINCIBLE( sub_13736(), 0 );
        if (bParam0)
        {
            sub_31567();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_31567()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_13736() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_13736(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_13736(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_13736(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_13736(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_31763()
{
    unknown uVar2;

    if (l_U313 == 1)
    {
        sub_12913( 250 );
        if (((IS_PED_DEAD( sub_13736() )) == 0) AND ((IS_PLAYER_DEAD( sub_13758() )) == 0))
        {
            sub_13813( sub_13736(), g_U1357, 0.00000000 );
            FREEZE_PED_POSITION( sub_13736(), 1 );
        }
        LOAD_SCENE( g_U1357 );
        if (((IS_PED_DEAD( sub_13736() )) == 0) AND ((IS_PLAYER_DEAD( sub_13758() )) == 0))
        {
            FREEZE_PED_POSITION( sub_13736(), 0 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0.00000000, 1065353216, 0 );
        sub_13081( 250 );
        l_U313 = 0;
    }
    if (l_U314 == 1)
    {
        sub_31987( ref l_U318 );
        sub_32103( ref g_U1390, 1 );
        sub_32306( ref g_U1390, 1 );
        sub_30465( 1, 0, 0, 1 );
        ISEQ_UNREGISTER_ENTITY( -449677894, "blend_player" );
        sub_16753( -449677894, 1 );
        sub_5069( -449677894, 1 );
        sub_13813( sub_13736(), g_U1357, 0.00000000 );
        ISEQ_REGISTER_ENTITY( -449677894, "blend_player", sub_13736(), 0 );
        ISEQ_START( -449677894 );
        if (l_U317 == 1)
        {
            sub_32575( ref l_U329 );
            l_U329 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            SETUP_BULLET_CAMERA_ANIM_SCENE( l_U329, sub_13736(), sub_13736() );
        }
        WAIT( 0 );
        DO_SCREEN_FADE_IN( 0 );
        if (l_U316 == 1)
        {
            CAMERA_PLAY_ANIMATED( l_U327, l_U328, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        }
        sub_17215( ref l_U318, 1850, 1, 0 );
        sub_17351( ref l_U318 );
        if (l_U316 == 1)
        {
            while (IS_ANIMATED_CAMERA_PLAYING() == 0)
            {
                WAIT( 0 );
            }
            uVar2 = CAMERA_ANIMATED_LENGTH( l_U327, l_U328 );
            while (IS_ANIMATED_CAMERA_PLAYING() == 1)
            {
                if ((IS_BULLET_CAMERA_SCENE_ACTIVE( l_U329 )) == 0)
                {
                    SETUP_BULLET_CAMERA_ANIM_SCENE( l_U329, sub_13736(), sub_13736() );
                }
                if ((sub_17663( ref l_U318 )) == 1)
                {
                    sub_32306( ref g_U1390, 0 );
                    sub_32957( ref g_U1390, -130.00000000, 0.00000000 );
                    sub_33062( ref g_U1390, 0, 0, 1065353216 );
                }
                WAIT( 0 );
            }
            CAMERA_ANIMATED_STOP( 0, 1 );
        }
        l_U314 = 0;
    }
    if (l_U315 == 1)
    {
        sub_31987( ref l_U318 );
        ISEQ_UNREGISTER_ENTITY( -449677894, "blend_player" );
        sub_16753( -449677894, 1 );
        sub_32575( ref l_U329 );
        sub_31486( 1, 1 );
        l_U315 = 0;
    }
    if ((sub_17663( ref l_U318 )) == 1)
    {
        sub_32306( ref g_U1390, 0 );
        sub_32957( ref g_U1390, -130.00000000, 0.00000000 );
        sub_33062( ref g_U1390, 0, 0, 1065353216 );
    }
    return;
}

void sub_31987(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_32103(int iParam0, int iParam1)
{
    if ((sub_32115( iParam0 )) == 0)
    {
        sub_32181( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_32115(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_32181(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_32306(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_32115( iParam0 )) == 0)
    {
        sub_32181( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_32575(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_32957(int iParam0, float fParam1, float fParam2)
{
    if ((sub_32115( iParam0 )) == 0)
    {
        sub_32181( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

void sub_33062(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_32115( iParam0 )) == 0)
    {
        sub_32181( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_33387()
{
    if (l_U330)
    {
        sub_13813( sub_13736(), 57.31147000, 138.68190000, 1.80016600, 0 );
        l_U330 = 0;
    }
    if (l_U331)
    {
        l_U332 = 0;
        if ((NOT l_U333) AND (sub_33455()))
        {
            l_U331 = 0;
        }
    }
    if (l_U332)
    {
        l_U331 = 0;
        if ((NOT l_U333) AND (sub_35164()))
        {
            l_U332 = 0;
        }
    }
    if (l_U334)
    {
        l_U334 = 0;
        l_U331 = 0;
        l_U332 = 0;
        l_U333 = 0;
        CAMERA_ANIMATED_STOP( 3000, 0 );
        sub_35858( ref l_U343, 0 );
        sub_35858( ref l_U353, 0 );
        l_U342 = 0;
        sub_31486( 1, 1 );
    }
    return;
}

void sub_33455()
{
    int Result;

    Result = 0;
    switch (l_U342)
    {
        case 0:
        sub_1777( "BSW", "[GA] HANDLE_STORY_NEWSPAPER_NIS start", 0 );
        sub_2613( l_U335, 0, 1 );
        sub_3338( g_U1103, 1 );
        l_U338 = sub_3573( g_U1103, 62.68000000, 140.39000000, 2.09000000, -3.54000000, -3.53000000, 135.11000000, 0, 1, 0 );
        if ((DOES_OBJECT_EXIST( l_U338 )) == 1)
        {
            FREEZE_OBJECT_POSITION( l_U338, 1 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U338, ref g_U1208 );
        }
        sub_30465( 1, 0, 0, 1 );
        CAMERA_PLAY_ANIMATED( l_U335, l_U337, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        sub_33730( ref l_U343 );
        sub_33812( 0, sub_13736(), "MAX", ref l_U343, 2, 0 );
        sub_33812( 1, sub_13736(), "MAX", ref l_U343, 2, 0 );
        sub_34051( "SMAR_DDMB", ref l_U343, 8, 1 );
        l_U340 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
        SETUP_BULLET_CAMERA_SCENE( l_U340, "S_MAR_NEWSPAPER", 61.46000000, 139.96000000, 2.72000000, 61.46000000, 138.96000000, 2.72000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "" );
        SET_CAM_ACTIVE( l_U340, 1 );
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
        l_U342 = 1;
        break;
        case 1:
        if (NOT IS_ANIMATED_CAMERA_PLAYING())
        {
            l_U342 = 2;
        }
        break;
        case 2:
        sub_31486( 1, 1 );
        sub_32575( ref l_U340 );
        sub_2706( l_U338 );
        sub_17625( l_U335 );
        Result = 1;
        l_U342 = 0;
        sub_1777( "BSW", "[GA] HANDLE_STORY_NEWSPAPER_NIS end", 0 );
        break;
    }
    return Result;
}

void sub_33730(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_33812(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_34051(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_34075( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_34075(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_34130( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_34130(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_34165( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_34659( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_34165(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_34659(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_35164()
{
    int Result;

    Result = 0;
    switch (l_U342)
    {
        case 0:
        sub_1777( "BSW", "[GA] P_STORY_MAP_NIS start", 0 );
        sub_2613( l_U335, 0, 1 );
        sub_3338( g_U1101, 1 );
        l_U339 = sub_3573( g_U1101, 48.21700000, 140.22000000, 3.75200000, 0.00000000, 0.00000000, -80.00000000, 0, 0, 0 );
        if ((DOES_OBJECT_EXIST( l_U339 )) == 1)
        {
            FREEZE_OBJECT_POSITION( l_U339, 1 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U339, ref g_U1208 );
        }
        sub_30465( 1, 0, 0, 1 );
        CAMERA_PLAY_ANIMATED( l_U335, l_U336, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        sub_33730( ref l_U353 );
        sub_33812( 0, sub_13736(), "MAX", ref l_U353, 2, 0 );
        sub_33812( 1, sub_13736(), "MAX", ref l_U353, 2, 0 );
        sub_34051( "SMAR_DDMA", ref l_U353, 8, 1 );
        l_U341 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
        SETUP_BULLET_CAMERA_SCENE( l_U341, "S_MAR_BLUEPRINT", 49.30000000, 139.62000000, 3.87000000, 48.30000000, 139.62000000, 3.87000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "" );
        SET_CAM_ACTIVE( l_U341, 1 );
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
        l_U342 = 1;
        break;
        case 1:
        if (NOT IS_ANIMATED_CAMERA_PLAYING())
        {
            l_U342 = 2;
        }
        break;
        case 2:
        Result = 1;
        l_U342 = 0;
        sub_31486( 1, 1 );
        sub_32575( ref l_U341 );
        sub_2706( l_U339 );
        sub_17625( l_U335 );
        sub_1777( "BSW", "[GA] P_STORY_MAP_NIS end", 0 );
        break;
    }
    return Result;
}

void sub_35858(int iParam0, unknown uParam1)
{
    if (NOT (sub_35872( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

boolean sub_35872(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_36037()
{
    if (l_U256._fU0)
    {
        sub_36063( ref l_U256 );
    }
    if (l_U256._fU4)
    {
        sub_36260();
    }
    if (l_U256._fU12)
    {
        sub_1777( "RJM", "Killing vignette", 0 );
        l_U256._fU4 = 0;
        sub_14677( l_U268 );
        sub_14677( l_U285 );
        l_U302 = 0;
        ISEQ_UNREGISTER_ENTITY( l_U303, "s_mar_gmed3" );
        ISEQ_UNREGISTER_ENTITY( l_U303, "s_mar_gmed4" );
        sub_17625( "LEVEL_S_MARINA_CP_02" );
        sub_16753( -2116802822, 1 );
        sub_37429( ref l_U256 );
    }
    return;
}

void sub_36063(int iParam0)
{
    sub_12913( 1000 );
    if (sub_36081())
    {
        FREEZE_PED_POSITION( sub_13736(), 1 );
    }
    sub_13813( sub_13736(), iParam0->_fU20, iParam0->_fU32 );
    if (sub_36081())
    {
        FREEZE_PED_POSITION( sub_13736(), 0 );
    }
    sub_13081( 1000 );
    iParam0->_fU0 = 0;
    return;
}

int sub_36081()
{
    if (sub_36096( sub_13736() ))
    {
        return 1;
    }
    return 0;
}

int sub_36096(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

void sub_36260()
{
    switch (l_U302)
    {
        case 0:
        sub_2613( "LEVEL_S_MARINA_CP_02", 0, 1 );
        if (l_U265)
        {
            sub_1777( "RJM", "Gate is closed, play S_MAR_VIG02_closed_gate", 0 );
            l_U303 = -2116802822;
        }
        else
        {
            sub_1777( "RJM", "Gate is open, play S_MAR_VIG02_open_gate", 0 );
        }
        sub_5069( l_U303, 1 );
        sub_36483( g_U1030 );
        sub_14677( l_U268 );
        sub_14677( l_U285 );
        sub_14792( ref l_U269, l_U282, l_U266, g_U1030, 7, 3, 2, 0, 0 );
        sub_14792( ref l_U286, l_U299, l_U267, g_U1030, 7, 3, 2, 0, 0 );
        l_U268 = sub_14925( ref l_U269 );
        l_U285 = sub_14925( ref l_U286 );
        sub_23279( l_U268, -612753081, 25000, 0, 0 );
        sub_23279( l_U285, -612753081, 25000, 0, 0 );
        sub_1777( "RJM", "UPDATE_VIGNETTE_02 - State 0", 0 );
        sub_36864( ref l_U268, 1 );
        sub_36864( ref l_U285, 1 );
        ISEQ_REGISTER_ENTITY( l_U303, "s_mar_gmed3", l_U268, 0 );
        ISEQ_REGISTER_ENTITY( l_U303, "s_mar_gmed4", l_U285, 0 );
        ISEQ_START( l_U303 );
        sub_17215( ref l_U244, l_U253, 1, 0 );
        sub_17351( ref l_U244 );
        l_U302 = 1;
        break;
        case 1:
        if (ISEQ_QUERY_STATE( l_U303, 6 ))
        {
            ISEQ_UNREGISTER_ENTITY( l_U303, "s_mar_gmed3" );
            ISEQ_UNREGISTER_ENTITY( l_U303, "s_mar_gmed4" );
            sub_36864( ref l_U268, 0 );
            sub_36864( ref l_U285, 0 );
            sub_1777( "RJM", "Done with vignette", 0 );
            sub_17625( "LEVEL_S_MARINA_CP_02" );
            sub_16753( l_U303, 1 );
            l_U256._fU4 = 0;
        }
        sub_1777( "RJM", "UPDATE_VIGNETTE_02 - State 1", 0 );
        break;
    }
    return;
}

void sub_36483(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_3443( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        WAIT( 0 );
    }
    return;
}

void sub_36864(unknown uParam0, unknown uParam1)
{
    if (sub_36096( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

void sub_37429(int iParam0)
{
    iParam0->_fU0 = 0;
    iParam0->_fU4 = 0;
    iParam0->_fU12 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_37479()
{
    if (l_U304._fU0)
    {
        sub_36063( ref l_U304 );
    }
    if (l_U304._fU4)
    {
        if (sub_37523( 1 ))
        {
            l_U194 = 0;
            sub_37429( ref l_U304 );
            sub_38201();
        }
    }
    if (l_U304._fU12)
    {
        sub_1777( "RJM", "Killing vignette 08", 0 );
        l_U194 = 0;
        sub_37429( ref l_U304 );
        sub_38201();
    }
    return;
}

int sub_37523(boolean bParam0)
{
    switch (l_U194)
    {
        case 0:
        sub_37569();
        sub_1777( "RJM", "UPDATE_VIGNETTE_08 - State 0", 0 );
        if (sub_36081())
        {
            sub_13813( sub_13736(), l_U234, l_U237 );
        }
        if (bParam0)
        {
            l_U195 = sub_22508( g_U1070, -28.58300000, 293.78000000, 2.53700000, 0.00000000, 0.00000000, -90.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U195 ))
            {
                FREEZE_OBJECT_POSITION( l_U195, 1 );
            }
        }
        ISEQ_REGISTER_ENTITY( 1317522247, "max", sub_13736(), 0 );
        sub_30667( ref l_U196, l_U227, l_U230, 45, l_U233 );
        sub_37865( ref l_U196 );
        ISEQ_START( 1317522247 );
        l_U194 = 1;
        break;
        case 1:
        if (ISEQ_QUERY_STATE( 1317522247, 6 ))
        {
            ISEQ_UNREGISTER_ENTITY( 1317522247, "max" );
            sub_1777( "RJM", "Done with vignette 08", 0 );
            sub_17625( "LEVEL_S_MARINA_CP_05" );
            sub_16753( 1317522247, 1 );
            sub_31331( 1000, 0, 0, -859915232, -859915232, 0 );
            l_U194 = 2;
        }
        else
        {
            sub_1777( "RJM", "UPDATE_VIGNETTE_08 - State 1", 0 );
        }
        break;
        case 2:
        return 1;
        break;
    }
    return 0;
}

void sub_37569()
{
    l_U194 = 0;
    sub_2613( "LEVEL_S_MARINA_CP_05", 0, 1 );
    sub_3338( g_U1070, 1 );
    sub_5069( 1317522247, 1 );
    return;
}

void sub_37865(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_17351( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_38201()
{
    l_U194 = 0;
    sub_17625( "LEVEL_S_MARINA_CP_05" );
    sub_16753( 1317522247, 1 );
    return;
}


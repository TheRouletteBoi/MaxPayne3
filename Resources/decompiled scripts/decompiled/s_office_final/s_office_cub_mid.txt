void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U3 = 0;
    l_U4 = 0;
    l_U5 = 1500;
    StrCopy( ref l_U15, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U23, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U32 = 0;
    l_U70 = 0;
    l_U71 = 0;
    l_U72 = 0;
    l_U73 = 0;
    l_U74 = 0;
    l_U75 = 0;
    l_U434 = 0;
    l_U568 = 0;
    l_U647 = 0;
    l_U648 = 0;
    l_U649 = 0;
    l_U651 = 0;
    l_U652 = 0;
    l_U662 = 0;
    l_U666 = {-11.97843000, 20.45162000, 4.90272100};
    l_U669 = 270.73830000;
    l_U670 = {-10.50393000, 34.14044000, 4.90041800};
    l_U673 = 180.00000000;
    l_U674 = 2350;
    l_U675 = 0;
    l_U685 = 1000;
    l_U686 = 95.06781000;
    l_U687 = -4.39296100;
    l_U689 = {-14.71000000, 17.57500000, 4.78800000};
    l_U692 = -15.00000000;
    l_U693 = 0;
    StrCopy( ref l_U789, "S_OFFICE_CUBICLES_FAIL", 32 );
    l_U798 = 0;
    sub_415( "SP", "Script s_office_cub_mid.sc is starting...", 0 );
    l_U71 = 1;
    while (IS_EXITFLAG_SET() == 0)
    {
        sub_484();
        if (l_U72 == 0)
        {
            sub_12542();
        }
        WAIT( 0 );
    }
    sub_7793();
    sub_37986();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_office_cub_mid" );
    SET_EXITFLAG_RESPONSE();
    sub_415( "SP", "Script s_office_cub_mid.sc is terminating...", 0 );
    return;
}

void sub_415(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_484()
{
    switch (l_U72)
    {
        case 0:
        if (g_U706 == 4)
        {
            if (sub_582() == 1)
            {
                DO_SCREEN_FADE_OUT( 0 );
                l_U72 = 5;
                sub_415( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            if (((IS_PED_DEAD( g_U1424 )) == 1) AND ((DOES_PED_EXIST( g_U1424 )) == 1))
            {
                sub_415( "SP", "Mission Failed: IT Guy Died.", 0 );
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                l_U72 = 1;
                sub_415( "SP", "eFailState = FAIL_HANDLE_IT_GUY_KILLED", 0 );
            }
            if ((IS_PED_DEAD( sub_854() )) == 1)
            {
                sub_415( "SP", "Mission Failed: Player died.", 0 );
                l_U72 = 3;
                sub_415( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
        }
        else if ((sub_1443() == 1) || ((((IS_PED_DEAD( g_U1424 )) == 1) AND ((DOES_PED_EXIST( g_U1424 )) == 1)) || ((IS_PED_DEAD( sub_854() )) == 1)))
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "mid_05_office_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "mid_05_office_concat" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "mid_05_office_concat" );
            }
            sub_1581( ref g_U708[4] );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        break;
        case 1:
        if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
        {
            AUDIO_MUSIC_SUSPEND( 5000 );
            l_U72 = 3;
            sub_415( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        }
        break;
        case 2:
        if (sub_1720() == 1)
        {
            l_U72 = 4;
            sub_415( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
            break;
        }
        return;
        case 3:
        if ((sub_6231( 0 )) == 1)
        {
            l_U72 = 4;
            sub_415( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        }
        break;
        case 4:
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_PED_DEAD( sub_854() )) == 0))
        {
            if ((IS_PLAYER_DEAD( sub_876() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_876(), 0, 0 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            l_U72 = 5;
            sub_415( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        break;
        case 5:
        sub_415( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        sub_3996( 1, 0, 0, 1 );
        CLEAR_HELP();
        CLEAR_PRINTS();
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        if ((IS_PED_DEAD( sub_854() )) == 0)
        {
            PED_ACTION_TREE_PLAY_NODE( sub_854(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        }
        sub_2041( g_U1424 );
        sub_7793();
        if (((CUTSCENE_NAMED_IS_LOADING( "mid_03_office_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "mid_03_office_concat" )) == 1))
        {
            CLEAR_NAMED_CUTSCENE( "mid_03_office_concat" );
        }
        l_U72 = 6;
        sub_415( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        break;
        case 6:
        sub_415( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        sub_8641( ref l_U34, sub_854() );
        l_U72 = 7;
        sub_415( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        break;
        case 7:
        sub_415( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        l_U71 = 1;
        l_U72 = 0;
        sub_415( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        break;
    }
    return;
}

int sub_582()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_854() )))
        {
            SET_PED_FORCED_TO_WALK( sub_854(), 0 );
            SET_PLAYER_FORCED_AIM( sub_876(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_876(), 1 );
            if ((IS_PED_VISIBLE( sub_854() )) == 0)
            {
                SET_PED_VISIBLE( sub_854(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

int sub_854()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_876() );
    }
    return 0;
}

void sub_876()
{
    return GET_PLAYER_ID();
}

void sub_1443()
{
    return g_U648;
}

void sub_1581(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_1720()
{
    vector vVar2;
    float fVar5;
    vector vVar6;
    float fVar9;
    vector vVar10;
    float fVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;

    vVar2 = {-16.06763000, 18.72922000, 4.91231000};
    fVar5 = 0.00000000;
    vVar6 = {-21.24669000, 19.67771000, 4.90706200};
    fVar9 = 270.00000000;
    vVar10 = {-15.17500000, 19.50000000, 6.34100000};
    fVar13 = 0.00000000;
    switch (l_U74)
    {
        case 0: break;
        case 1:
        sub_415( "SP", "eMid06FailNISState = NIS_START", 0 );
        sub_1929( ref uVar14, vVar2, fVar5, 403784285, 26, 6, 0, 0, 0 );
        sub_2041( l_U663 );
        l_U663 = sub_2117( ref uVar14 );
        if (((IS_PED_DEAD( l_U663 )) == 0) AND ((DOES_PED_EXIST( l_U663 )) == 1))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U663, ref g_U1141 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U663, 1 );
            SET_PED_VISIBLE( l_U663, 0 );
            SET_PED_COLLISION( l_U663, 0 );
            SET_PED_INVINCIBLE( l_U663, 1 );
            SET_PED_PROOFS( l_U663, 1, 1, 1, 1, 1 );
        }
        sub_1929( ref uVar27, vVar6, fVar9, 729236719, 7, 3, 2, 0, 0 );
        sub_2041( l_U664 );
        l_U664 = sub_2117( ref uVar27 );
        if (((IS_PED_DEAD( l_U664 )) == 0) AND ((DOES_PED_EXIST( l_U664 )) == 1))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U664, ref g_U1141 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U664, 1 );
            SET_PED_VISIBLE( l_U664, 0 );
            SET_PED_COLLISION( l_U664, 0 );
            SET_PED_INVINCIBLE( l_U664, 1 );
            SET_PED_PROOFS( l_U664, 1, 1, 1, 1, 1 );
            sub_3244( l_U664, g_U1269, 25000, 0, 0 );
        }
        ISEQ_REGISTER_ENTITY( -1245973404, "ITGuy", l_U663, 0 );
        ISEQ_REGISTER_ENTITY( -1245973404, "enemy", l_U664, 0 );
        ISEQ_START( -1245973404 );
        l_U74 = 2;
        sub_415( "SP", "eMid06FailNISState = NIS_FIRST_FRAME", 0 );
        break;
        case 2:
        sub_415( "SP", "eMid06FailNISState = NIS_FIRST_FRAME", 0 );
        ISEQ_UNREGISTER_ENTITY( -705727669, "itGuy" );
        ISEQ_TERMINATE( -705727669 );
        sub_2041( g_U1424 );
        if (((IS_PED_DEAD( l_U663 )) == 0) AND ((DOES_PED_EXIST( l_U663 )) == 1))
        {
            SET_PED_COLLISION( l_U663, 1 );
        }
        if (((IS_PED_DEAD( l_U664 )) == 0) AND ((DOES_PED_EXIST( l_U664 )) == 1))
        {
            SET_PED_COLLISION( l_U664, 1 );
        }
        l_U74 = 3;
        sub_415( "SP", "eMid06FailNISState = NIS_SECOND_FRAME", 0 );
        break;
        case 3:
        sub_415( "SP", "eMid06FailNISState = NIS_SECOND_FRAME", 0 );
        sub_3996( 1, 0, 0, 1 );
        sub_4159( ref l_U559 );
        sub_4159( ref l_U643 );
        if (((IS_PED_DEAD( l_U663 )) == 0) AND ((DOES_PED_EXIST( l_U663 )) == 1))
        {
            SET_PED_VISIBLE( l_U663, 1 );
        }
        if (((IS_PED_DEAD( l_U664 )) == 0) AND ((DOES_PED_EXIST( l_U664 )) == 1))
        {
            SET_PED_VISIBLE( l_U664, 1 );
        }
        CAMERA_PLAY_ANIMATED( "LEVEL_S_OFFICE_CP_02", "MID_06_OFFICE_CAM", 1, vVar10, fVar13, 0, 0 );
        PLAY_SCRIPT_STREAM_FRONTEND( 2 );
        sub_4395( ref l_U730, 0, 1, 0 );
        sub_4531( ref l_U730 );
        sub_4395( ref l_U739, 7500, 1, 0 );
        sub_4531( ref l_U739 );
        l_U74 = 4;
        sub_415( "SP", "eMid06FailNISState = NIS_PLAYING", 0 );
        break;
        case 4:
        if ((sub_4731( ref l_U730 )) == 1)
        {
            sub_4903( ref l_U768 );
            sub_4985( 0, sub_854(), "MAX", ref l_U768, 2, 0 );
            sub_4985( 1, l_U663, "M6_Offi_Tech_Avg_01", ref l_U768, 2, 0 );
            sub_5245( "SOFF_MID06FFCE", ref l_U768, 8, 1 );
        }
        if (NOT l_U798)
        {
            if (NOT (IS_BULLET_CAMERA_SCENE_ACTIVE( l_U797 )))
            {
                sub_415( "SA", "calling death panel", 0 );
                l_U797 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
                RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
                SETUP_BULLET_CAMERA_ANIM_SCENE( l_U797, l_U663, l_U663 );
            }
            else
            {
                sub_415( "SA", "starting death panel", 0 );
                l_U798 = 1;
            }
        }
        if ((l_U739._fU16 == 1) || ((sub_4731( ref l_U739 )) == 1))
        {
            if ((sub_6231( 0 )) == 1)
            {
                l_U32 = 1;
                sub_2041( l_U663 );
                sub_2041( l_U664 );
                AUDIO_MUSIC_SUSPEND( 500 );
                STOP_SCRIPT_STREAM( 2 );
                if ((IS_PED_DEAD( sub_854() )) == 0)
                {
                    PED_ACTION_TREE_PLAY_NODE( sub_854(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
                }
                l_U74 = 0;
                sub_415( "SP", "eMid06FailNISState = NIS_IDLE", 0 );
                return 1;
            }
        }
        break;
    }
    return 0;
}

void sub_1929(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_2041(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_2117(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_2287( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_2769( iParam0->_fU40 );
    sub_2849( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_2287(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_2392( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_2392(unknown uParam0)
{
    return;
}

void sub_2769(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_2849(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_3244(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_2392( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_3996(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_854() )))
        {
            SET_PLAYER_CONTROL( sub_876(), 0, uParam2 );
            SET_PED_DUCKING( sub_854(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_854() );
            }
            SET_PED_INVINCIBLE( sub_854(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_4159(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_2041( (uParam0^)[I] );
    }
    return;
}

void sub_4395(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_4531(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_4731(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_4903(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_4985(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_5245(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_5269( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_5269(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_5324( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_5324(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_5359( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_5853( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_5359(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_5853(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_6231(int iParam0)
{
    iParam0 = 1;
    switch (l_U4)
    {
        case 0:
        if (NOT (sub_6288( ref l_U6 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_854() )))
            {
                l_U5 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_4395( ref l_U6, l_U5, 1, 1 );
            sub_4531( ref l_U6 );
        }
        if (sub_4731( ref l_U6 ))
        {
            sub_415( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_854() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_876() )))
            {
                SET_PLAYER_CONTROL( sub_876(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U4 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U4 = 2;
            }
            else
            {
                l_U4 = 3;
            }
        }
        break;
        case 2:
        sub_415( "NS", "Player will QUIT", 0 );
        sub_6731();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_415( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_6731();
        return 1;
        break;
    }
    return 0;
}

int sub_6288(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_6731()
{
    sub_415( "NS", "P_PostFailRetryCleanup", 0 );
    sub_6779( ref l_U6 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_876() )))
    {
        SET_PLAYER_CONTROL( sub_876(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U3 = 0;
    l_U3 = l_U3;
    l_U4 = 0;
    return;
}

void sub_6779(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_7793()
{
    sub_415( "SP", "P_CLEANUP_ALL", 0 );
    sub_7834( ref l_U797 );
    ISEQ_UNREGISTER_ENTITY( -168540404, "player" );
    ISEQ_UNREGISTER_ENTITY( -168540404, "enemy" );
    ISEQ_TERMINATE( -168540404 );
    ISEQ_UNREGISTER_ENTITY( -1245973404, "ITGuy" );
    ISEQ_UNREGISTER_ENTITY( -1245973404, "enemy" );
    ISEQ_TERMINATE( -1245973404 );
    ISEQ_UNREGISTER_ENTITY( -705727669, "itGuy" );
    ISEQ_TERMINATE( -705727669 );
    sub_4159( ref l_U559 );
    sub_4159( ref l_U643 );
    sub_2041( l_U663 );
    sub_2041( l_U664 );
    sub_8092( l_U665 );
    if (g_U706 == 4)
    {
        sub_8148( ref g_U1425 );
    }
    ENABLE_NORMAL_LINE( "ofc_cubicles", "GrabSpline57", 1 );
    STOP_SCRIPT_STREAM( 2 );
    sub_8289();
    return;
}

void sub_7834(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_8092(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_8148(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_8181( (uParam0^)[I] );
    }
    return;
}

void sub_8181(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_8289()
{
    sub_415( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_415( "CCB", "Stopping the Office_Cubicles context...", 0 );
    END_CONTEXT( "Office_Cubicles" );
    return;
}

void sub_8641(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_415( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_8825( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_9902( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_10194( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_10541( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_10194( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_10541( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_10194( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_10541( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_3244( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_10541( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_3244( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_10541( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_11003( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_11164( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_854(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_415( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_8825(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_8857( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_8857(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_9902(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_10194(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_2392( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_10541(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

int sub_11003(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_11164(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_8857( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_11236( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_11236(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_12542()
{
    unknown uVar2;
    unknown uVar3;
    int I;

    sub_12552();
    switch (l_U71)
    {
        case 0: break;
        case 1:
        sub_415( "SP", "eCheckpointState = CHECKPOINT_INIT_SCRIPT_DATA", 0 );
        sub_13008();
        sub_15509();
        sub_16030();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U71 = 2;
        sub_415( "SP", "eCheckpointState = CHECKPOINT_INIT_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_415( "SP", "eCheckpointState = CHECKPOINT_INIT_REQUEST_ASSETS", 0 );
        sub_16594();
        l_U71 = 3;
        sub_415( "SP", "eCheckpointState = CHECKPOINT_INIT_LOAD_ASSETS", 0 );
        break;
        case 3:
        if (sub_17270() == 1)
        {
            l_U71 = 4;
            sub_415( "SP", "eCheckpointState = CHECKPOINT_SETUP_CUBICLE_OBJECTS", 0 );
        }
        else
        {
            return;
        }
        break;
        case 4:
        sub_415( "SP", "eCheckpointState = CHECKPOINT_SETUP_CUBICLE_OBJECTS", 0 );
        if (g_U706 == 4)
        {
            sub_17964();
            sub_18547();
        }
        l_U71 = 5;
        sub_415( "SP", "eCheckpointState = CHECKPOINT_HANDLE_SPAWN_RAPPELLER_ENTITIES", 0 );
        break;
        case 5:
        if (sub_19075() == 1)
        {
            l_U71 = 6;
            sub_415( "SP", "eCheckpointState = CHECKPOINT_SETUP_START_POINT", 0 );
            break;
        }
        return;
        case 6:
        sub_415( "SP", "eCheckpointState = CHECKPOINT_SETUP_START_POINT", 0 );
        if (g_U706 < 4)
        {
            l_U73 = 1;
            l_U71 = 8;
            sub_415( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_05_CUTSCENE", 0 );
        }
        else
        {
            sub_3996( 1, 0, 0, 1 );
            if ((l_U70 == 0) AND (g_U707 == 4))
            {
                if ((sub_20507( ref l_U34 )) == 0)
                {
                    sub_3244( sub_854(), g_U1270, 200, 0, 0 );
                }
                l_U71 = 7;
                sub_415( "SP", "eCheckpointState = CHECKPOINT_WAITING_FOR_PLAYER_WEAPON", 0 );
            }
            else
            {
                l_U75 = 1;
                l_U71 = 9;
                sub_415( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_05_BLENDOUT", 0 );
            }
        }
        break;
        case 7:
        sub_415( "SP", "eCheckpointState = CHECKPOINT_WAITING_FOR_PLAYER_WEAPON", 0 );
        if ((IS_PED_DEAD( sub_854() )) == 0)
        {
            uVar3 = GET_WEAPON_FROM_HAND( sub_854(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
            {
                l_U75 = 1;
                l_U71 = 9;
                sub_415( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_05_BLENDOUT", 0 );
            }
        }
        break;
        case 8:
        if (sub_21076() == 1)
        {
            l_U75 = 1;
            l_U71 = 9;
            sub_415( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_05_BLENDOUT", 0 );
            break;
        }
        return;
        case 9:
        if (sub_25439() == 1)
        {
            l_U70 = 1;
            sub_32787();
            if (((IS_PED_DEAD( g_U1424 )) == 0) AND ((DOES_PED_EXIST( g_U1424 )) == 1))
            {
                SET_BULLET_CAM_PREF( g_U1424, "MID_CUSTOM_OFFICE_TECH_01", "MID_CUSTOM_OFFICE_TECH_01", "MID_CUSTOM_OFFICE_TECH_01", "MID_CUSTOM_OFFICE_TECH_01", 1, 0, 0, 0, 0, 0, 0, 0 );
            }
            ENABLE_NORMAL_LINE( "ofc_cubicles", "GrabSpline57", 0 );
            sub_33052( ref g_U708[5] );
            sub_4395( ref l_U721, 100, 1, 0 );
            sub_4531( ref l_U721 );
            sub_4395( ref l_U694, 3000, 1, 0 );
            sub_4531( ref l_U694 );
            sub_4395( ref l_U703, 3000, 1, 0 );
            sub_4531( ref l_U703 );
            l_U71 = 10;
            sub_415( "SP", "eCheckpointState = CHECKPOINT_HANDLE_RAPPELLER_FIGHT", 0 );
        }
        break;
        case 10:
        sub_33224();
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (((sub_33579( l_U76 )) == 0) AND ((sub_33579( l_U307 )) == 1))))
        {
            for ( I = 0; I < l_U559; I++ )
            {
                if (((IS_PED_DEAD( l_U559[I] )) == 0) AND ((DOES_PED_EXIST( l_U559[I] )) == 1))
                {
                    SET_PED_INVINCIBLE( l_U559[I], 1 );
                    SET_PED_PROOFS( l_U559[I], 1, 1, 1, 1, 1 );
                }
            }
            for ( I = 0; I < l_U643; I++ )
            {
                if (((IS_PED_DEAD( l_U643[I] )) == 0) AND ((DOES_PED_EXIST( l_U643[I] )) == 1))
                {
                    SET_PED_INVINCIBLE( l_U643[I], 1 );
                    SET_PED_PROOFS( l_U643[I], 1, 1, 1, 1, 1 );
                }
            }
            l_U74 = 1;
            l_U72 = 2;
            sub_415( "SP", "eFailState = FAIL_HANDLE_PLAYER_ABANDONED_IT_GUY", 0 );
            return;
        }
        if ((sub_4731( ref l_U721 )) == 1)
        {
            sub_415( "SP", "Activating Rappellers", 0 );
            for ( I = 0; I < l_U559; I++ )
            {
                if (((IS_PED_DEAD( sub_854() )) == 0) AND (((IS_PED_DEAD( l_U559[I] )) == 0) AND ((DOES_PED_EXIST( l_U559[I] )) == 1)))
                {
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U559[I], 0 );
                    REGISTER_TARGET( l_U559[I], sub_854() );
                }
            }
        }
        if (l_U651 == 0)
        {
            if (l_U647 < l_U643)
            {
                if (((sub_34654( ref l_U559 )) + (sub_34654( ref l_U643 ))) < l_U559)
                {
                    sub_34755();
                }
            }
        }
        if (l_U651 == 0)
        {
            if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (((sub_34654( ref l_U559 )) + (sub_34654( ref l_U643 ))) == 1)))
            {
                sub_415( "SP", "Assigning bullet cam to last Rappeller", 0 );
                uVar2 = sub_36697( ref l_U559 );
                if ((DOES_PED_EXIST( uVar2 )) == 0)
                {
                    uVar2 = sub_36697( ref l_U643 );
                }
                if (((IS_PED_DEAD( uVar2 )) == 0) AND ((DOES_PED_EXIST( uVar2 )) == 1))
                {
                    ;
                }
                l_U651 = 1;
            }
        }
        if (l_U652 == 0)
        {
            if (((sub_34654( ref l_U559 )) + (sub_34654( ref l_U643 ))) == 0)
            {
                AUDIO_MUSIC_FORCE_TRACK( "OFFICE_ACTION_SONG_02", "OFFICE_ACTION_2_6", "", 0.00000000, 7000, 5000, -1082130432, 0 );
                l_U652 = 1;
            }
        }
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (((sub_34654( ref l_U559 )) + (sub_34654( ref l_U643 ))) == 0)))
        {
            sub_4395( ref l_U653, 22000, 1, 0 );
            sub_4531( ref l_U653 );
            l_U71 = 11;
            sub_415( "SP", "eCheckpointState = CHECKPOINT_HANDLE_GOTO_ITGUY", 0 );
        }
        break;
        case 11:
        if (l_U662 == 0)
        {
            if ((l_U653._fU16 == 1) || ((sub_4731( ref l_U653 )) == 1))
            {
                if ((TIME_SINCE_LAST_MONOLOGUE() > 2500) AND ((IS_MONOLOGUE_PLAYING() == 0) AND (sub_37181() == 0)))
                {
                    sub_4903( ref l_U778 );
                    sub_4985( 0, sub_854(), "MAX", ref l_U778, 2, 0 );
                    sub_4985( 1, g_U1424, "M6_Offi_Tech_Avg_01", ref l_U778, 2, 0 );
                    sub_5245( "SOFF_CHLTGY", ref l_U778, 7, 1 );
                    l_U662 = 1;
                }
            }
        }
        if ((IS_PED_DEAD( sub_854() )) == 0)
        {
            if ((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_854() ), -16.08000000, 18.41000000, 4.95000000, 1 )) < 3.00000000)
            {
                if ((GET_IS_PED_FORCED_TO_WALK( sub_854() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_854(), 1 );
                }
            }
            else if ((GET_IS_PED_FORCED_TO_WALK( sub_854() )) == 1)
            {
                SET_PED_FORCED_TO_WALK( sub_854(), 0 );
            }
        }
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (((IS_PED_DEAD( g_U1424 )) == 0) AND (((DOES_PED_EXIST( g_U1424 )) == 1) AND ((IS_PED_DEAD( sub_854() )) == 0)))))
        {
            if (((sub_33579( l_U412 )) == 1) || (((sub_33579( l_U391 )) == 1) || ((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_854() ), -16.08000000, 18.41000000, 4.95000000, 1 )) < 2.00000000)))
            {
                g_U1041 = 1;
                sub_37664( ref l_U778, 0 );
                l_U71 = 12;
                sub_415( "SP", "eCheckpointState = CHECKPOINT_FINISHED", 0 );
            }
        }
        break;
        case 12:
        if (g_U706 > 4)
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U71 = 0;
            sub_415( "SP", "eCheckpointState = CHECKPOINT_IDLE", 0 );
        }
        break;
    }
    return;
}

void sub_12552()
{
    switch (l_U788)
    {
        case 0:
        sub_415( "CCB", "eStickMove - STATE_CHALLENGE_IDLE", 0 );
        l_U788 = 1;
        break;
        case 1:
        if (l_U71 >= 10)
        {
            if (l_U71 >= 12)
            {
                sub_415( "CCB", "The player finished the Office_Cubicles...", 0 );
                SCRIPT_VAR_HASH_SET_INT( -1217622899, 1 );
                sub_415( "CCB", "eStickMove - STATE_CHALLENGE_COMPLETE", 0 );
                l_U788 = 2;
            }
        }
        break;
        case 2: break;
    }
    return;
}

void sub_13008()
{
    sub_415( "SP", "P_INIT_GAMEPLAY_STRUCTS", 0 );
    sub_1929( ref l_U435, l_U689, l_U692, 403784285, 26, 6, 0, 0, 1 );
    sub_1929( ref l_U454[0], -10.56061000, 38.59320000, 11.74877000, 0.00000000, 755155591, 7, 3, 2, 0, 0 );
    sub_1929( ref l_U454[1], -10.56061000, 37.59320000, 11.74877000, 0.00000000, -1189455104, 7, 3, 2, 0, 0 );
    sub_1929( ref l_U454[2], -10.56061000, 36.59320000, 11.74877000, 0.00000000, -968598121, 7, 3, 2, 0, 0 );
    sub_1929( ref l_U454[3], -10.56061000, 35.59320000, 11.74877000, 0.00000000, -1756393917, 7, 3, 2, 0, 0 );
    sub_1929( ref l_U454[4], -10.56061000, 34.59320000, 11.74877000, 0.00000000, -491288833, 7, 3, 2, 0, 0 );
    sub_1929( ref l_U454[5], -10.56061000, 33.59320000, 11.74877000, 0.00000000, 1234921722, 7, 3, 2, 0, 0 );
    sub_1929( ref l_U454[6], -10.56061000, 32.59320000, 11.74877000, 0.00000000, -1426462799, 7, 3, 2, 0, 0 );
    sub_1929( ref l_U454[7], -10.56061000, 31.59320000, 11.74877000, 0.00000000, -746584854, 7, 3, 2, 0, 0 );
    sub_1929( ref l_U603[0], -13.31206000, 31.02822000, 11.74877000, -90.00000000, -1232546001, 7, 3, 2, 0, 0 );
    sub_1929( ref l_U603[1], -14.31206000, 31.02822000, 11.74877000, -90.00000000, 124675557, 7, 3, 2, 0, 0 );
    sub_1929( ref l_U603[2], -15.31206000, 31.02822000, 11.74877000, -90.00000000, 729236719, 7, 3, 2, 0, 0 );
    sub_13633( ref l_U76, "TRIG_CUBICLES_AREA", -10.60000000, 30.33000000, 4.85000000, 27.17000000, 24.32000000, 4.72000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13633( ref l_U97, "TRIG_BACKUP_SPAWN_01", -3.78000000, 24.35000000, 4.50000000, 13.54000000, 12.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13633( ref l_U118, "TRIG_BACKUP_SPAWN_02", -17.00000000, 23.24000000, 4.50000000, 13.54000000, 14.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13633( ref l_U139, "TRIG_BACKUP_SPAWN_03", -3.80000000, 36.02000000, 4.50000000, 13.54000000, 12.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13633( ref l_U160, "TRIG_BACKUP_SPAWN_04", -17.00000000, 36.02000000, 4.50000000, 13.54000000, 12.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13633( ref l_U181, "TRIG_BACKUP_SPAWN_05", -28.75000000, 30.32000000, 4.50000000, 10.00000000, 7.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13633( ref l_U202, "TRIG_BACKUP_SPAWN_06", 13.93000000, 30.72000000, -1.33000000, 22.00000000, 25.00000000, 12.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13633( ref l_U223, "TRIG_BACKUP_SPAWN_AREA_01", -22.72000000, 40.01000000, 4.50000000, 4.50000000, 2.50000000, 4.00000000, 0.00000000, 0.00000000, -45.00000000, 1 );
    sub_13633( ref l_U244, "TRIG_BACKUP_SPAWN_AREA_02", 1.66000000, 40.11000000, 4.50000000, 4.50000000, 2.50000000, 4.00000000, 0.00000000, 0.00000000, 45.00000000, 1 );
    sub_13633( ref l_U265, "TRIG_BACKUP_SPAWN_AREA_03", -22.68000000, 20.05000000, 4.50000000, 4.50000000, 2.50000000, 4.00000000, 0.00000000, 0.00000000, 45.00000000, 1 );
    sub_13633( ref l_U286, "TRIG_BACKUP_SPAWN_AREA_04", 1.86000000, 19.71000000, 4.50000000, 4.50000000, 2.50000000, 4.00000000, 0.00000000, 0.00000000, -45.00000000, 1 );
    sub_13633( ref l_U307, "TRIG_ABANDONED_IT_GUY", 18.32000000, 36.91000000, -0.45000000, 22.54000000, 13.71000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13633( ref l_U328, "TRIG_IT_GUY_REACT", -17.01000000, 23.22000000, 4.81000000, 13.62000000, 10.07000000, 5.37000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13633( ref l_U349, "TRIG_IT_GUY_TALK_TO_MAX", -15.69000000, 19.01000000, 4.87000000, 5.41000000, 4.78000000, 3.79000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13633( ref l_U370, "TRIG_IT_GUY_DIA_RUN_HALL", -29.06000000, 30.32000000, 4.50000000, 9.00000000, 7.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13633( ref l_U391, "TRIG_START_ATRIUM_CUTSCENE_01", 7.33000000, 36.00000000, 1.73000000, 4.00000000, 3.34000000, 9.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13633( ref l_U412, "TRIG_START_ATRIUM_CUTSCENE_02", 10.77000000, 37.00000000, 2.02000000, 7.47000000, 14.00000000, 8.75000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15091( ref l_U433, "TETH_CUBICLES_ROOM", -10.42000000, 29.93000000, 3.61000000, 26.00000000, 22.50000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15150( ref g_U1355, 1 );
    sub_15150( ref g_U1362, 1 );
    sub_15363( ref g_U1355, 1 );
    sub_15363( ref g_U1362, 1 );
    return;
}

void sub_13633(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_15091(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_15150(int iParam0, int iParam1)
{
    if ((sub_15162( iParam0 )) == 0)
    {
        sub_15228( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_15162(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_15228(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_15363(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_15162( iParam0 )) == 0)
    {
        sub_15228( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_15509()
{
    sub_415( "SP", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U569[0] = {-21.44122000, 40.06734000, 4.90041700};
    l_U594[0] = 180.00000000;
    l_U569[1] = {-12.12142000, 40.07878000, 4.90041800};
    l_U594[1] = 180.00000000;
    l_U569[2] = {-6.73967000, 34.82467000, 4.90041800};
    l_U594[2] = 148.13520000;
    l_U569[3] = {-7.11095500, 34.96950000, 4.90041800};
    l_U594[3] = 180.00000000;
    l_U569[4] = {-0.72079800, 40.74728000, 4.90041800};
    l_U594[4] = 180.00000000;
    l_U569[5] = {-6.18764800, 29.67064000, 4.90041800};
    l_U594[5] = 137.64870000;
    l_U569[6] = {-16.95252000, 37.76627000, 4.90041800};
    l_U594[6] = 269.99940000;
    l_U569[7] = {-19.32411000, 39.52087000, 4.90041800};
    l_U594[7] = 270.09500000;
    l_U568 = 0;
    l_U647 = 0;
    l_U648 = 0;
    l_U649 = 0;
    l_U651 = 0;
    l_U652 = 0;
    l_U434 = 0;
    l_U693 = 0;
    l_U675 = 0;
    l_U688 = 0;
    l_U798 = 0;
    l_U662 = 0;
    sub_6779( ref l_U694 );
    sub_6779( ref l_U703 );
    sub_6779( ref l_U721 );
    sub_6779( ref l_U730 );
    sub_6779( ref l_U739 );
    sub_6779( ref l_U676 );
    sub_6779( ref l_U712 );
    sub_6779( ref l_U653 );
    l_U73 = 0;
    l_U75 = 0;
    l_U74 = 0;
    return;
}

void sub_16030()
{
    sub_415( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U788 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -1217622899 )))
    {
        sub_415( "CCB", "Creating the CubiclesComplete script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -1217622899 );
        if (SCRIPT_VAR_HASH_EXISTS( -1217622899 ))
        {
            sub_415( "CCB", "The CubiclesComplete script variable was successfully created...", 0 );
        }
        else
        {
            sub_415( "CCB", "The CubiclesComplete script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_415( "CCB", "The CubiclesComplete script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -1217622899, 0 );
    }
    return;
}

void sub_16594()
{
    sub_415( "SP", "P_REQUEST_ASSETS", 0 );
    sub_2287( g_U1423, 0 );
    sub_2287( -1191626852, 0 );
    sub_2287( 1279887443, 0 );
    sub_2287( g_U1411, 0 );
    sub_16684( g_U1269, 0 );
    sub_16684( g_U1270, 0 );
    sub_16684( g_U1271, 0 );
    sub_16684( g_U1272, 0 );
    sub_16684( g_U1273, 0 );
    sub_16797( ref g_U1253, 0, 0 );
    sub_16797( ref g_U1261, 0, 0 );
    sub_16885( -168540404, 0 );
    sub_16885( -1245973404, 0 );
    sub_16885( -705727669, 0 );
    STOP_SCRIPT_STREAM( 2 );
    sub_17116( ref l_U789, 2, 0 );
    return;
}

void sub_16684(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_16797(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_16885(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_17116(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_17270()
{
    if (((HAS_MODEL_LOADED( g_U1411 )) == 1) AND (((HAS_MODEL_LOADED( 1279887443 )) == 1) AND (((HAS_MODEL_LOADED( -1191626852 )) == 1) AND ((HAS_MODEL_LOADED( g_U1423 )) == 1))))
    {
        sub_415( "SP", "Models have loaded...", 0 );
        if (((HAS_WEAPON_LOADED( g_U1273 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1272 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1271 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1270 )) == 1) AND ((HAS_WEAPON_LOADED( g_U1269 )) == 1)))))
        {
            sub_415( "SP", "Weapons have loaded...", 0 );
            if (((HAS_ANIM_DICT_LOADED( ref g_U1261, 0 )) == 1) AND ((HAS_ANIM_DICT_LOADED( ref g_U1253, 0 )) == 1))
            {
                sub_415( "SP", "Anim Dictionaries have loaded...", 0 );
                if (((ISEQ_QUERY_STATE( -705727669, 2 )) == 1) AND (((ISEQ_IS_LOADED( -705727669 )) == 1) AND (((ISEQ_QUERY_STATE( -1245973404, 2 )) == 1) AND (((ISEQ_IS_LOADED( -1245973404 )) == 1) AND (((ISEQ_QUERY_STATE( -168540404, 2 )) == 1) AND ((ISEQ_IS_LOADED( -168540404 )) == 1))))))
                {
                    sub_415( "SP", "Interactive Sequences have loaded...", 0 );
                    if ((LOAD_SCRIPT_STREAM( ref l_U789, 2 )) == 1)
                    {
                        sub_415( "SP", "Script Streams have loaded...", 0 );
                        return 1;
                    }
                }
            }
        }
    }
    return 0;
}

void sub_17964()
{
    sub_415( "SP", "P_CREATE_CUBICLE_PLACEMENTS", 0 );
    sub_8181( g_U1425[0] );
    g_U1425[0] = sub_18071( -4072149, -14.78000000, 33.41000000, 5.60000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 1, 50 );
    if ((DOES_PLACEMENT_EXIST( g_U1425[0] )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1425[0], ref g_U1141 );
    }
    sub_8181( g_U1425[1] );
    g_U1425[1] = sub_18071( -4072149, -4.16000000, 24.47000000, 5.60000000, 0.00000000, 0.00000000, 80.00000000, 1, 0, 1, 50 );
    if ((DOES_PLACEMENT_EXIST( g_U1425[1] )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1425[1], ref g_U1141 );
    }
    sub_8181( g_U1425[2] );
    g_U1425[2] = sub_18071( -4072149, 5.87000000, 26.81000000, 5.58000000, 0.00000000, 0.00000000, 80.00000000, 0, 0, 0, 1119092736 );
    if ((DOES_PLACEMENT_EXIST( g_U1425[2] )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1425[2], ref g_U1141 );
    }
    sub_8181( g_U1425[3] );
    g_U1425[3] = sub_18071( -4072149, -19.56000000, 21.57000000, 5.60000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 1119092736 );
    if ((DOES_PLACEMENT_EXIST( g_U1425[3] )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1425[3], ref g_U1141 );
    }
    return;
}

void sub_18071(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_18547()
{
    sub_415( "SP", "P_SETUP_IT_GUY", 0 );
    sub_2041( g_U1424 );
    g_U1424 = sub_2117( ref l_U435 );
    if (((IS_PED_DEAD( g_U1424 )) == 0) AND ((DOES_PED_EXIST( g_U1424 )) == 1))
    {
        SET_ROOM_FOR_PED_BY_NAME( g_U1424, ref g_U1141 );
    }
    sub_18659();
    return;
}

void sub_18659()
{
    sub_415( "SP", "P_SETUP_IT_GUY_ATTRIBUTES", 0 );
    SET_PED_NAME_DEBUG( g_U1424, "piITGuy" );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U1424, 1 );
    SET_PED_EMOTION_STATE( g_U1424, 5 );
    SET_PED_CAN_RAGDOLL( g_U1424, 1 );
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U1424, 0 );
    SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U1424, 1 );
    SET_PED_CAN_PUSH_PLAYER( g_U1424, 1 );
    SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U1424, 1 );
    SET_PED_AIM_LOCKONABLE( g_U1424, 0 );
    SET_PED_CAN_INTERACT_WITH_DOORS( g_U1424, 0 );
    SET_PED_CAN_SMASH_GLASS( g_U1424, 0 );
    SET_PED_AS_ONE_SHOT_KILL( g_U1424, 1 );
    SET_PED_CAN_TRIGGER_BULLET_CAM( g_U1424, 1 );
    SET_PED_GORE_AS_ALLY( g_U1424 );
    SET_PED_GORE_FROM_PLAYER( g_U1424, 1 );
    SET_PED_GORE_FROM_NPC( g_U1424, 0 );
    STOP_PED_SPEAKING( g_U1424, 1 );
    if ((IS_PED_DEAD( sub_854() )) == 0)
    {
        SET_PED_PRIMARY_LOOKAT( g_U1424, sub_854() );
    }
    return;
}

int sub_19075()
{
    int iVar2;

    sub_415( "SP", "F_HANDLE_SPAWN_RAPPELLER_ENEMIES", 0 );
    iVar2 = l_U568;
    sub_2041( l_U559[iVar2] );
    l_U559[iVar2] = sub_2117( ref l_U454[iVar2] );
    if (((IS_PED_DEAD( l_U559[iVar2] )) == 0) AND ((DOES_PED_EXIST( l_U559[iVar2] )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U559[iVar2], 1 );
        SET_PED_VISIBLE( l_U559[iVar2], 0 );
        SET_PED_FREEZE_PROCESSING( l_U559[iVar2], 1 );
        SET_PED_HEALTH( l_U559[iVar2], 260, 0 );
        SET_PED_ACCURACY( l_U559[iVar2], -729479261 );
        SET_PED_CAN_INITIATE_BULLET_CAM( l_U559[iVar2], 1 );
        if (iVar2 == 0)
        {
            SET_PED_AI_TEMPLATE( l_U559[iVar2], "AIT_EXPERT" );
            sub_3244( l_U559[iVar2], g_U1272, 25000, 0, 0 );
            sub_10194( l_U559[iVar2], g_U1273, 5, 2, 0 );
        }
        else if (iVar2 == 1)
        {
            SET_PED_AI_TEMPLATE( l_U559[iVar2], "AIT_EXPERT" );
            sub_3244( l_U559[iVar2], g_U1271, 25000, 0, 0 );
            sub_10194( l_U559[iVar2], g_U1273, 5, 2, 0 );
            SET_PED_FLAG_SCRIPTED_PROJECTILE_USE( l_U559[iVar2], 1 );
        }
        else if (iVar2 == 2)
        {
            SET_PED_AI_TEMPLATE( l_U559[iVar2], "AIT_EXPERT" );
            sub_3244( l_U559[iVar2], g_U1271, 25000, 0, 0 );
            sub_10194( l_U559[iVar2], g_U1273, 5, 2, 0 );
        }
        else if (iVar2 == 3)
        {
            SET_PED_AI_TEMPLATE( l_U559[iVar2], "AIT_EXPERT" );
            sub_3244( l_U559[iVar2], g_U1271, 25000, 0, 0 );
            sub_10194( l_U559[iVar2], g_U1273, 5, 2, 0 );
        }
        else if (iVar2 == 4)
        {
            SET_PED_AI_TEMPLATE( l_U559[iVar2], "AIT_EXPERT" );
            sub_3244( l_U559[iVar2], g_U1271, 25000, 0, 0 );
            sub_10194( l_U559[iVar2], g_U1273, 5, 2, 0 );
        }
        else if (iVar2 == 5)
        {
            SET_PED_AI_TEMPLATE( l_U559[iVar2], "AIT_EXPERT" );
            sub_3244( l_U559[iVar2], g_U1272, 25000, 0, 0 );
            sub_10194( l_U559[iVar2], g_U1273, 5, 2, 0 );
            SET_PED_FLAG_SCRIPTED_PROJECTILE_USE( l_U559[iVar2], 1 );
        }
        else if (iVar2 == 6)
        {
            SET_PED_AI_TEMPLATE( l_U559[iVar2], "AIT_EXPERT" );
            sub_3244( l_U559[iVar2], g_U1271, 25000, 0, 0 );
            sub_10194( l_U559[iVar2], g_U1273, 5, 2, 0 );
        }
        else if (iVar2 == 7)
        {
            SET_PED_AI_TEMPLATE( l_U559[iVar2], "AIT_EXPERT" );
            sub_3244( l_U559[iVar2], g_U1271, 25000, 0, 0 );
            sub_10194( l_U559[iVar2], g_U1273, 5, 2, 0 );
        };;;;;;;;
        l_U568++;
    }
    if (l_U568 == l_U559)
    {
        sub_20129( ref l_U559, "piRappellers" );
        return 1;
    }
    return 0;
}

void sub_20129(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

int sub_20507(unknown uParam0)
{
    sub_415( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_8641( uParam0, sub_854() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_21076()
{
    int iVar2;
    int I;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    unknown uVar7;
    unknown uVar8;

    iVar2 = 0;
    switch (l_U73)
    {
        case 0: break;
        case 1:
        sub_415( "SP", "eMid05CutsceneState = CUTSCENE_REQUEST_ASSETS", 0 );
        if (((CUTSCENE_NAMED_IS_LOADING( "mid_05_office_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "mid_05_office_concat" )) == 0))
        {
            PRE_STREAM_SEAMLESS_CUTSCENE( "mid_05_office_concat" );
        }
        l_U73 = 2;
        sub_415( "SP", "eMid05CutsceneState = CUTSCENE_LOAD_ASSETS", 0 );
        case 2:
        if ((CUTSCENE_IS_LOADED( "mid_05_office_concat" )) == 1)
        {
            l_U73 = 3;
            sub_415( "SP", "eMid05CutsceneState = CUTSCENE_WAIT_FOR_HANDOFF", 0 );
            break;
        }
        return 0;
        case 3:
        if (g_U1040 == 1)
        {
            l_U73 = 4;
            sub_415( "SP", "eMid05CutsceneState = CUTSCENE_START", 0 );
            break;
        }
        return 0;
        case 4:
        sub_415( "SP", "eMid05CutsceneState = CUTSCENE_START", 0 );
        g_U1039 = 1;
        if ((IS_PED_DEAD( sub_854() )) == 0)
        {
            if ((GET_IS_PED_FORCED_TO_WALK( sub_854() )) == 1)
            {
                SET_PED_FORCED_TO_WALK( sub_854(), 0 );
            }
        }
        if ((IS_PED_DEAD( sub_854() )) == 0)
        {
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_854(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
            CUTSCENE_REGISTER_PED_TELEPORT( sub_854(), l_U666, l_U669 );
            CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "60BB2DC7_61A6EF53_Corner2", 1, 0 );
            uVar8 = sub_21833();
            if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
            {
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar8, "W_PI_Glk18_Aa_H", 0 );
            }
            ISEQ_REGISTER_ENTITY( -168540404, "player", sub_854(), 0 );
        }
        if (((IS_PED_DEAD( g_U1424 )) == 0) AND ((DOES_PED_EXIST( g_U1424 )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U1424, "Offi_Tech_Avg", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( g_U1424, l_U689, l_U692 );
            ISEQ_REGISTER_ENTITY( -705727669, "itGuy", g_U1424, 0 );
        }
        for ( I = 0; I < l_U559; I++ )
        {
            if (((IS_PED_DEAD( l_U559[I] )) == 0) AND ((DOES_PED_EXIST( l_U559[I] )) == 1))
            {
                if (I == 0)
                {
                    REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U559[I], "M_Crac_Sold_D", 0 );
                    CUTSCENE_REGISTER_PED_TELEPORT( l_U559[I], l_U569[I], l_U594[I] );
                    CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U559[I], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
                }
                else if (I == 1)
                {
                    REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U559[I], "M_Crac_Sold_D^1", 0 );
                    CUTSCENE_REGISTER_PED_TELEPORT( l_U559[I], l_U569[I], l_U594[I] );
                    CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U559[I], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
                }
                else if (I == 2)
                {
                    REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U559[I], "M_Crac_Sold_D^2", 0 );
                    CUTSCENE_REGISTER_PED_TELEPORT( l_U559[I], l_U569[I], l_U594[I] );
                    CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U559[I], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
                }
                else if (I == 3)
                {
                    REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U559[I], "M_Crac_Sold_D^3", 0 );
                    CUTSCENE_REGISTER_PED_TELEPORT( l_U559[I], l_U670, l_U673 );
                    ISEQ_REGISTER_ENTITY( -168540404, "enemy", l_U559[I], 0 );
                    CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U559[I], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
                }
                else if (I == 4)
                {
                    REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U559[I], "M_Crac_Sold_D^4", 0 );
                    CUTSCENE_REGISTER_PED_TELEPORT( l_U559[I], l_U569[I], l_U594[I] );
                    CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U559[I], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
                }
                else if (I == 5)
                {
                    REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U559[I], "M_Crac_Sold_D^5", 0 );
                    CUTSCENE_REGISTER_PED_TELEPORT( l_U559[I], l_U569[I], l_U594[I] );
                    CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U559[I], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
                }
                else if (I == 6)
                {
                    REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U559[I], "M_Crac_Sold_D^6", 0 );
                    CUTSCENE_REGISTER_PED_TELEPORT( l_U559[I], l_U569[I], l_U594[I] );
                    CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U559[I], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
                }
                else if (I == 7)
                {
                    CUTSCENE_REGISTER_PED_TELEPORT( l_U559[I], l_U569[I], l_U594[I] );
                    CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U559[I], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
                };;;;;;;;
            }
        }
        CUTSCENE_REGISTER_ISEQ( -168540404 );
        CUTSCENE_REGISTER_ISEQ( -705727669 );
        START_SEAMLESS_CUTSCENE();
        l_U73 = 5;
        sub_415( "SP", "eMid05CutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 5:
        sub_415( "SP", "eMid05CutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        for ( I = 0; I < l_U559; I++ )
        {
            if (((IS_PED_DEAD( l_U559[I] )) == 0) AND ((DOES_PED_EXIST( l_U559[I] )) == 1))
            {
                if (I < 7)
                {
                    SET_PED_VISIBLE( l_U559[I], 1 );
                }
            }
        }
        sub_3996( 1, 0, 0, 1 );
        sub_23887( ref l_U799, 1, 1 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        AUDIO_MUSIC_REQUEST_ONESHOT( "OFFICE_ONE_SHOT_RAPPEL", 0 );
        DO_SCREEN_FADE_IN( 0 );
        l_U73 = 6;
        sub_415( "SP", "eMid05CutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 6:
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            uVar4 = GET_CUTSCENE_SECTION_PLAYING();
            uVar5 = GET_CUTSCENE_TIME();
            iVar6 = GET_CUTSCENE_TIME_MS();
            if (l_U688 == 0)
            {
                if (iVar6 > 44300)
                {
                    AUDIO_MUSIC_PLAY_ONESHOT();
                    AUDIO_MUSIC_FORCE_TRACK( "OFFICE_ACTION_SONG_02", "OFFICE_ACTION_2_5", "", 2.00000000, 5000, 5000, -1082130432, 0 );
                    l_U688 = 1;
                }
            }
        }
        else
        {
            uVar8 = sub_21833();
            if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_854(), uVar8, 0, 1 );
            }
            l_U73 = 0;
            sub_415( "SP", "eMid05CutsceneState = CUTSCENE_IDLE", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

int sub_21833()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_854() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_854(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_21896( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_854(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_854(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_854(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

int sub_21896(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_23887(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_23899( iParam0 );
    if ((IS_PED_DEAD( sub_854() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_854(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_21896( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_24122( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_854(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_854(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_854(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_854(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_854() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_854(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_854(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_854(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_854(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_854() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_854(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_24122( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_854(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_854(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_854(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_23899(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_24122(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_25439()
{
    unknown uVar2;
    int I;
    int iVar4;

    switch (l_U75)
    {
        case 0: break;
        case 1:
        sub_415( "SP", "eMid05BlendState = BLEND_SETUP", 0 );
        sub_3996( 0, 0, 0, 1 );
        sub_25551();
        sub_25925();
        if ((ISEQ_QUERY_STATE( -168540404, 3 )) == 0)
        {
            for ( I = 0; I < l_U559; I++ )
            {
                if (((IS_PED_DEAD( l_U559[I] )) == 0) AND ((DOES_PED_EXIST( l_U559[I] )) == 1))
                {
                    if (I == 3)
                    {
                        sub_27589( l_U559[3], l_U670, l_U673 );
                    }
                    else
                    {
                        sub_27589( l_U559[I], l_U569[I], l_U594[I] );
                    }
                    SET_ROOM_FOR_PED_BY_NAME( l_U559[I], ref g_U1141 );
                }
            }
            ISEQ_REGISTER_ENTITY( -168540404, "player", sub_854(), 0 );
            ISEQ_REGISTER_ENTITY( -168540404, "enemy", l_U559[3], 0 );
            ISEQ_START( -168540404 );
            if ((IS_PED_DEAD( sub_854() )) == 0)
            {
                SNAP_PLAYER_TO_COVERPOINT( sub_876(), "GenCover", "60BB2DC7_61A6EF53_Corner2", 0 );
            }
        }
        if ((ISEQ_QUERY_STATE( -705727669, 3 )) == 0)
        {
            sub_27589( g_U1424, l_U689, l_U692 );
            ISEQ_REGISTER_ENTITY( -705727669, "itGuy", g_U1424, 0 );
            ISEQ_START( -705727669 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U686, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U687, 1065353216, 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_OFFICE_CP_02", "B_OUT_MID_05_OFFICE_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        if ((IS_PED_DEAD( sub_854() )) == 0)
        {
            SET_PED_NUM_CHARGERS_OVERRIDE( sub_854(), 2 );
        }
        l_U75 = 2;
        sub_415( "SP", "eMid05BlendState = BLEND_FIRST_FRAME", 0 );
        break;
        case 2:
        sub_415( "SP", "eMid05BlendState = BLEND_FIRST_FRAME", 0 );
        if ((l_U34._fU0 == 0) || (g_U706 < 4))
        {
            g_U706 = 4;
            sub_28267( ref l_U34, 4, sub_854(), g_U817[4], g_U926[4], g_U963[4], g_U1000[4], 1 );
        }
        AUDIO_MUSIC_FORCE_TRACK( "OFFICE_ACTION_SONG_02", "OFFICE_ACTION_2_5", "", 2.00000000, 5000, 5000, -1082130432, 0 );
        DO_SCREEN_FADE_IN( 0 );
        l_U75 = 3;
        sub_415( "SP", "eMid05BlendState = BLEND_PLAYING", 0 );
        break;
        case 3:
        if (sub_32017())
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || (NOT IS_SCREEN_FADED_IN()))
            {
                DO_SCREEN_FADE_IN( 0 );
            }
        }
        l_U32 = 0;
        if (l_U675 == 0)
        {
            if ((ISEQ_IS_LOADED( -168540404 )) == 1)
            {
                if ((ISEQ_QUERY_STATE( -168540404, 3 )) == 1)
                {
                    iVar4 = CAMERA_ANIMATED_CURRENT_TIME();
                    if (iVar4 >= l_U674)
                    {
                        CAMERA_ANIMATED_STOP( l_U685, 1 );
                        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U686, 1065353216, 0 );
                        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U687, 1065353216, 0 );
                        sub_4395( ref l_U676, l_U685, 1, 0 );
                        sub_4531( ref l_U676 );
                        l_U675 = 1;
                    }
                }
            }
        }
        if ((sub_4731( ref l_U676 )) == 1)
        {
            sub_32443( 1, 1 );
            l_U75 = 0;
            sub_415( "SP", "eMid05BlendState = BLEND_IDLE", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

void sub_25551()
{
    sub_415( "SP", "P_SETUP_RAPPELLER_ROPES", 0 );
    sub_8092( l_U665 );
    l_U665 = sub_25647( 1279887443, -12.77900000, 35.57700000, 10.60600000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U665 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U665, ref g_U1141 );
        FREEZE_OBJECT_POSITION( l_U665, 1 );
    }
    return;
}

void sub_25647(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_2287( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_25925()
{
    int I;

    sub_415( "SP", "P_ACTIVATE_RAPPELLERS_ENEMIES", 0 );
    sub_25988( ref l_U448, 1056964608, 0 );
    for ( I = 0; I < l_U559; I++ )
    {
        if (((IS_PED_DEAD( sub_854() )) == 0) AND (((IS_PED_DEAD( l_U559[I] )) == 0) AND ((DOES_PED_EXIST( l_U559[I] )) == 1)))
        {
            SET_PED_FREEZE_PROCESSING( l_U559[I], 0 );
            SET_ROOM_FOR_PED_BY_NAME( l_U559[I], ref g_U1141 );
            SET_PED_VISIBLE( l_U559[I], 1 );
            sub_26300( l_U559[I], ref l_U448 );
            sub_26575( ref l_U433, l_U559[I], 1 );
            if (I == 0)
            {
                TASK_COMBAT_SNAP_TO_COVER( l_U559[I], "GenCover", "60BB2DC7_FF170F89_Corner2", sub_854() );
            }
            else if (I == 1)
            {
                TASK_COMBAT_SNAP_TO_COVER( l_U559[I], "GenCover", "60BB2DC7_E394D885_Corner1", sub_854() );
            }
            else if (I == 2)
            {
                TASK_COMBAT_SNAP_TO_COVER( l_U559[I], "GenCover", "60BB2DC7_9C79663B_Corner2", sub_854() );
            }
            else if (I == 3)
            {
                TASK_COMBAT_PED( l_U559[I], sub_854() );
            }
            else if (I == 4)
            {
                TASK_COMBAT_SNAP_TO_COVER( l_U559[I], "GenCover", "60BB2DC7_98205D89_Popover1", sub_854() );
            }
            else if (I == 5)
            {
                TASK_COMBAT_PED( l_U559[I], sub_854() );
            }
            else if (I == 6)
            {
                TASK_COMBAT_SNAP_TO_COVER( l_U559[I], "GenCover", "60BB2DC7_2330E969_Corner1", sub_854() );
            }
            else if (I == 7)
            {
                TASK_COMBAT_SNAP_TO_COVER( l_U559[I], "GenCover", "60BB2DC7_CC4AAE4_Corner1", sub_854() );
            };;;;;;;;
        }
    }
    l_U650 = PEDGROUPTASK_ADVANCE_CREATE( l_U448._fU0 );
    for ( I = 0; I < l_U559; I++ )
    {
        if (((IS_PED_DEAD( l_U559[I] )) == 0) AND ((DOES_PED_EXIST( l_U559[I] )) == 1))
        {
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U448._fU0, l_U650, l_U559[I] );
        }
    }
    if ((IS_PED_DEAD( sub_854() )) == 0)
    {
        PEDGROUPTASK_ADVANCE_SETTARGET_PED( l_U448._fU0, l_U650, sub_854() );
    }
    PEDGROUPTASK_ADVANCE_SETTIMETOHIDE( l_U448._fU0, l_U650, 2.00000000 );
    PEDGROUPTASK_ADVANCE_SETTIMETOIDLE( l_U448._fU0, l_U650, 2.00000000 );
    PEDGROUPTASK_ADVANCE_SETTIMERANGEFORALLPEDSTOSTARTFIRING( l_U448._fU0, l_U650, 1.00000000 );
    PEDGROUPTASK_ADVANCE_SETADVANCEDISTANCE( l_U448._fU0, l_U650, 5.00000000 );
    PEDGROUPTASK_ADVANCE_SETNUMPEDSTOADVANCE( l_U448._fU0, l_U650, 2 );
    PEDGROUPTASK_ADVANCE_TRIGGER_MOVE( l_U448._fU0, l_U650 );
    SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U448._fU0, 1 );
    return;
}

void sub_25988(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_26300(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_2392( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_25988( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_25988( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_26575(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_27589(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_28267(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_415( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_415( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_11164( iParam1 );
        sub_28526( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_28977( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_28977( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_29209( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_28977( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_29209( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_29209( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_28977( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_29209( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_29209( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_29209( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_28977( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_29209( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_29209( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_29209( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_29209( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_30767( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_415( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_28526(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_8857( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_415( "TEH", "Ending context", 0 );
        sub_415( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_28977(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_29209(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_30767(int iParam0)
{
    sub_2392( "CHECKPOINT DATA" );
    sub_30806( iParam0->_fU4 );
    sub_30829( iParam0->_fU16 );
    sub_30829( iParam0->_fU20 );
    sub_30829( iParam0->_fU24 );
    sub_30872( iParam0->_fU28 );
    sub_30872( iParam0->_fU56 );
    sub_30872( iParam0->_fU60 );
    sub_30872( iParam0->_fU64 );
    sub_30872( iParam0->_fU68 );
    sub_30872( iParam0->_fU72 );
    sub_30872( iParam0->_fU76 );
    sub_30872( iParam0->_fU80 );
    sub_30872( iParam0->_fU84 );
    sub_30872( iParam0->_fU88 );
    sub_30872( iParam0->_fU92 );
    sub_30829( iParam0->_fU32 );
    sub_30872( iParam0->_fU36 );
    sub_30872( iParam0->_fU40 );
    sub_30872( iParam0->_fU44 );
    sub_30829( iParam0->_fU136 );
    sub_31077( iParam0->_fU140 );
    sub_30872( iParam0->_fU52 );
    sub_2392( "---nRightHolsterAttachmentEnabled: " );
    sub_30872( iParam0->_fU96 );
    sub_2392( "---nRightHolsterAttachmentToggled: " );
    sub_30872( iParam0->_fU100 );
    sub_2392( "---nLeftHolsterAttachmentEnabled: " );
    sub_30872( iParam0->_fU104 );
    sub_2392( "---nLeftHolsterAttachmentToggled: " );
    sub_30872( iParam0->_fU108 );
    sub_2392( "---nRifleHolsterAttachmentEnabled: " );
    sub_30872( iParam0->_fU112 );
    sub_2392( "---nRifleHolsterAttachmentToggled: " );
    sub_30872( iParam0->_fU116 );
    sub_2392( "---nRightHandAttachmentEnabled: " );
    sub_30872( iParam0->_fU120 );
    sub_2392( "---nRightHandAttachmentToggled: " );
    sub_30872( iParam0->_fU124 );
    sub_2392( "---nLeftHandAttachmentEnabled: " );
    sub_30872( iParam0->_fU128 );
    sub_2392( "---nLeftHandAttachmentToggled: " );
    sub_30872( iParam0->_fU132 );
    sub_30872( l_U1 );
    sub_30872( 144 );
    return;
}

void sub_30806(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_30829(unknown uParam0)
{
    return;
}

void sub_30872(unknown uParam0)
{
    return;
}

void sub_31077(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

int sub_32017()
{
    if (l_U32)
    {
        sub_415( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U32 = 0;
        return 1;
        break;
    }
    sub_415( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

void sub_32443(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_854() )))
    {
        SET_PLAYER_CONTROL( sub_876(), 1, 0 );
        SET_PED_INVINCIBLE( sub_854(), 0 );
        if (bParam0)
        {
            sub_32524();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_32524()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_854() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_854(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_854(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_854(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_854(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_32787()
{
    sub_415( "CCB", "P_START_SP_CHALLENGES", 0 );
    return;
}

void sub_33052(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_33224()
{
    unknown uVar2;
    unknown uVar3;

    if (((IS_PED_DEAD( g_U1424 )) == 0) AND ((DOES_PED_EXIST( g_U1424 )) == 1))
    {
        if ((HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U1424 ), 6.00000000, ref uVar2 )) == 1)
        {
            PED_SET_ACTION_INTENTION( g_U1424, 47, 500, 0.00000000, 0.00000000, 0.00000000 );
        }
        else if (sub_33338() == 0)
        {
            if ((sub_4731( ref l_U694 )) == 1)
            {
                PED_SET_ACTION_INTENTION( g_U1424, 48, 500, 0.00000000, 0.00000000, 0.00000000 );
                sub_4395( ref l_U694, 10000, 1, 0 );
                sub_4531( ref l_U694 );
            }
        }
    }
    if ((sub_4731( ref l_U703 )) == 1)
    {
        l_U693 = 1;
    }
    if (l_U693 == 1)
    {
        if ((sub_33579( l_U349 )) == 1)
        {
            if ((IS_ANY_SPEECH_PLAYING( g_U1424 )) == 0)
            {
                sub_4903( ref l_U748 );
                sub_4985( 0, sub_854(), "MAX", ref l_U748, 2, 0 );
                sub_4985( 1, g_U1424, "M6_Offi_Tech_Avg_01", ref l_U748, 2, 0 );
                sub_5245( "SOFF_VIG09", ref l_U748, 7, 1 );
                uVar3 = GET_RANDOM_INT_IN_RANGE( 10000, 15000 );
                sub_4395( ref l_U703, uVar3, 1, 0 );
                sub_4531( ref l_U703 );
                l_U693 = 0;
            }
        }
    }
    if ((sub_33780( ref l_U370, 0 )) == 1)
    {
        sub_4395( ref l_U712, GET_RANDOM_INT_IN_RANGE( 10000, 15000 ), 1, 0 );
        sub_4531( ref l_U712 );
    }
    if ((sub_4731( ref l_U712 )) == 1)
    {
        if (((IS_PED_DEAD( g_U1424 )) == 0) AND (((DOES_PED_EXIST( g_U1424 )) == 1) AND ((sub_33579( l_U370 )) == 1)))
        {
            if ((IS_ANY_SPEECH_PLAYING( g_U1424 )) == 0)
            {
                sub_4903( ref l_U758 );
                sub_4985( 0, sub_854(), "MAX", ref l_U758, 2, 0 );
                sub_4985( 1, g_U1424, "M6_Offi_Tech_Avg_01", ref l_U758, 2, 0 );
                sub_5245( "SOFF_RunHall", ref l_U758, 7, 1 );
            }
        }
    }
    return;
}

int sub_33338()
{
    int I;

    for ( I = 0; I < l_U559; I++ )
    {
        if ((sub_33379( l_U559[I], l_U328 )) == 1)
        {
            return 1;
        }
    }
    return 0;
}

int sub_33379(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_33579(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_33379( sub_854(), uParam0 );
}

void sub_33780(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_33379( sub_854(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_34654(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_34755()
{
    vector vVar2;
    float fVar5;
    int iVar6;
    char[32] cVar7;

    vVar2 = {0.00000000, 0.00000000, 0.00000000};
    fVar5 = 0.00000000;
    if ((sub_34792( ref vVar2, ref fVar5 )) == 1)
    {
        sub_415( "SP", "Spawning a Rappeller Backup Enemy", 0 );
        iVar6 = l_U647;
        sub_2041( l_U643[iVar6] );
        l_U603[iVar6]._fU0 = {vVar2};
        l_U603[iVar6]._fU12 = fVar5;
        l_U643[iVar6] = sub_2117( ref l_U603[iVar6] );
        if (((IS_PED_DEAD( l_U643[iVar6] )) == 0) AND ((DOES_PED_EXIST( l_U643[iVar6] )) == 1))
        {
            StrCopy( ref cVar7, "piRappellerBackup", 32 );
            ConcatString(ref cVar7, " ", 32);
            ConcatString(ref cVar7, iVar6, 32);
            SET_PED_NAME_DEBUG( l_U643[iVar6], ref cVar7 );
            SET_ROOM_FOR_PED_BY_NAME( l_U643[iVar6], ref g_U1141 );
            SET_PED_HEALTH( l_U643[iVar6], 260, 0 );
            SET_PED_CAN_INITIATE_BULLET_CAM( l_U643[iVar6], 1 );
            sub_26300( l_U643[iVar6], ref l_U448 );
            sub_26575( ref l_U433, l_U643[iVar6], 1 );
            if (iVar6 == 0)
            {
                SET_PED_AI_TEMPLATE( l_U643[iVar6], "AIT_EXPERT" );
                sub_3244( l_U643[iVar6], g_U1272, 25000, 0, 0 );
                sub_10194( l_U559[iVar6], g_U1273, 5, 2, 0 );
            }
            else if (iVar6 == 1)
            {
                SET_PED_AI_TEMPLATE( l_U643[iVar6], "AIT_EXPERT" );
                sub_3244( l_U643[iVar6], g_U1272, 25000, 0, 0 );
                sub_10194( l_U559[iVar6], g_U1273, 5, 2, 0 );
            }
            else if (iVar6 == 2)
            {
                SET_PED_AI_TEMPLATE( l_U643[iVar6], "AIT_EXPERT" );
                sub_3244( l_U643[iVar6], g_U1271, 25000, 0, 0 );
                sub_10194( l_U559[iVar6], g_U1273, 5, 2, 0 );
            };;;
            if ((IS_PED_DEAD( sub_854() )) == 0)
            {
                REGISTER_TARGET( l_U643[iVar6], sub_854() );
                TASK_COMBAT_PED( l_U643[iVar6], sub_854() );
            }
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U448._fU0, l_U650, l_U643[iVar6] );
            l_U647++;
        }
    }
    return;
}

int sub_34792(unknown uParam0, unknown uParam1)
{
    vector vVar4;
    vector vVar7;
    vector vVar10;
    vector vVar13;
    float fVar16;
    vector vVar17;
    vector vVar20;
    vector vVar23;
    vector vVar26;
    float fVar29;
    vector vVar30;
    vector vVar33;
    vector vVar36;
    vector vVar39;
    float fVar42;
    vector vVar43;
    vector vVar46;
    vector vVar49;
    vector vVar52;
    float fVar55;

    if (((sub_33579( l_U181 )) == 1) || ((sub_33579( l_U97 )) == 1))
    {
        vVar4 = {-20.49000000, 38.40000000, 7.27000000};
        vVar7 = {-22.07625000, 39.27494000, 4.90041200};
        vVar10 = {-22.95147000, 39.98153000, 4.90035300};
        vVar13 = {-23.54345000, 40.64545000, 4.90034500};
        fVar16 = 235.00000000;
        if ((sub_34929( vVar4, l_U223 )) == 1)
        {
            if (l_U648 == 0)
            {
                (uParam0^) = {vVar7};
                l_U648 = 1;
            }
            else if (l_U649 == 0)
            {
                (uParam0^) = {vVar10};
                l_U649 = 1;
            }
            else
            {
                (uParam0^) = {vVar13};
            }
            (uParam1^) = fVar16;
            return 1;
        }
        return 0;
    }
    else if (((sub_33579( l_U202 )) == 1) || ((sub_33579( l_U118 )) == 1))
    {
        vVar17 = {0.23000000, 39.20000000, 7.27000000};
        vVar20 = {0.90592100, 39.28393000, 4.90041800};
        vVar23 = {1.72162400, 39.97630000, 4.90041800};
        vVar26 = {2.47786400, 40.69586000, 4.90041800};
        fVar29 = 115.00000000;
        if ((sub_34929( vVar17, l_U244 )) == 1)
        {
            if (l_U648 == 0)
            {
                (uParam0^) = {vVar20};
                l_U648 = 1;
            }
            else if (l_U649 == 0)
            {
                (uParam0^) = {vVar23};
                l_U649 = 1;
            }
            else
            {
                (uParam0^) = {vVar26};
            }
            (uParam1^) = fVar29;
            return 1;
        }
        return 0;
    }
    else if ((sub_33579( l_U139 )) == 1)
    {
        vVar30 = {-21.64000000, 21.11000000, 7.27000000};
        vVar33 = {-22.00944000, 20.74153000, 4.90047000};
        vVar36 = {-22.88342000, 20.13969000, 4.90041800};
        vVar39 = {-23.17606000, 19.51329000, 4.90041800};
        fVar42 = -45.00000000;
        if ((sub_34929( vVar30, l_U265 )) == 1)
        {
            if (l_U648 == 0)
            {
                (uParam0^) = {vVar33};
                l_U648 = 1;
            }
            else if (l_U649 == 0)
            {
                (uParam0^) = {vVar36};
                l_U649 = 1;
            }
            else
            {
                (uParam0^) = {vVar39};
            }
            (uParam1^) = fVar42;
            return 1;
        }
        return 0;
    }
    else if ((sub_33579( l_U160 )) == 1)
    {
        vVar43 = {0.60000000, 21.12000000, 7.27000000};
        vVar46 = {0.92435800, 20.61931000, 4.90041800};
        vVar49 = {1.74929400, 19.96114000, 4.90041800};
        vVar52 = {2.43652700, 19.18674000, 4.90041800};
        fVar55 = 45.00000000;
        if ((sub_34929( vVar43, l_U286 )) == 1)
        {
            if (l_U648 == 0)
            {
                (uParam0^) = {vVar46};
                l_U648 = 1;
            }
            else if (l_U649 == 0)
            {
                (uParam0^) = {vVar49};
                l_U649 = 1;
            }
            else
            {
                (uParam0^) = {vVar52};
            }
            (uParam1^) = fVar55;
            return 1;
        }
        return 0;
    };;;;
    return 0;
}

int sub_34929(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23)
{
    int iVar26;
    int I;

    if ((IS_SPHERE_VISIBLE( uParam0, 5.00000000, 0 )) == 0)
    {
        iVar26 = 1;
        for ( I = 0; I < l_U559; I++ )
        {
            if ((sub_33379( l_U559[I], uParam3 )) == 1)
            {
                return 0;
            }
        }
        for ( I = 0; I < l_U643; I++ )
        {
            if ((sub_33379( l_U643[I], uParam3 )) == 1)
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_36697(unknown uParam0)
{
    int I;

    if ((sub_34654( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_37181()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_37664(int iParam0, unknown uParam1)
{
    if (NOT (sub_37678( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

boolean sub_37678(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_37986()
{
    sub_415( "NS", "P_UNLOAD_ASSETS", 0 );
    sub_38030( -2008010292 );
    sub_38030( -1191626852 );
    sub_38030( 1279887443 );
    sub_38190( ref g_U1253 );
    sub_38190( ref g_U1261 );
    return;
}

void sub_38030(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_2392( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_38190(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


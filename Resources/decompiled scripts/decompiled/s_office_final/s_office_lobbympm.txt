void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U3 = 0;
    l_U4 = 0;
    l_U5 = 1500;
    StrCopy( ref l_U15, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U23, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U32 = 0;
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U223 = 0;
    l_U395 = {27.45080000, -36.72400000, 0.00001100};
    l_U398 = 90.00000000;
    l_U399 = {15.51740000, -36.41180000, 0.00001100};
    l_U402 = -90.00000000;
    l_U403 = {28.70890000, -36.66890000, 0.00001100};
    l_U406 = 90.00000000;
    l_U407 = {16.86400000, -36.48810000, 0.00001100};
    l_U410 = -90.00000000;
    l_U483 = {22.22000000, 0.23000000, -0.00000000};
    l_U486 = -120.00000000;
    l_U487 = {22.22000000, 0.23000000, -0.00000000};
    l_U662 = {23.07000000, 0.16000000, -0.00000000};
    l_U665 = 179.39300000;
    l_U666 = "S_OFFICE_JEEP";
    l_U667 = "S_OFFICE_JEEP_SUCCESS";
    l_U668 = "S_OFFICE_FAIL_JEEP";
    l_U876 = 0;
    l_U877 = 0;
    l_U878 = 0;
    l_U879 = 320;
    l_U880 = 670;
    l_U881 = 1200;
    l_U882 = 995;
    l_U883 = 1495;
    l_U884 = 1900;
    l_U885 = 775.00000000;
    l_U886 = 1200;
    l_U887 = 2500;
    l_U888 = 1000;
    l_U889 = 750;
    l_U890 = 4182.50000000;
    l_U891 = 1000;
    l_U892 = 1100;
    l_U893 = 2800;
    l_U894 = 1000;
    l_U895 = 2000;
    l_U896 = 500;
    l_U897 = 1400.00000000;
    l_U898 = 0.65000000;
    l_U899 = 0.93000000;
    l_U900 = 0.60000000;
    l_U901 = 0.90000000;
    l_U902 = 0.50000000;
    l_U903 = 1.00000000;
    l_U904 = 0.39000000;
    l_U905 = 0;
    l_U906 = 100;
    l_U907 = 1000;
    l_U908 = 2400;
    l_U909 = 3100;
    l_U910 = 200;
    l_U911 = 0;
    l_U912 = 1050;
    l_U913 = 3500;
    l_U914 = 1000;
    l_U915 = 61.01233000;
    l_U916 = -0.42861500;
    l_U917 = 0;
    l_U918 = 0;
    l_U919 = 0;
    l_U920 = 0;
    l_U921 = 0;
    l_U922 = 0;
    l_U923 = {22.52000000, -34.21800000, 1.00000000};
    l_U926 = {22.52000000, -31.50000000, 1.00000000};
    l_U929 = {0.00000000, 0.00000000, 0.00000000};
    l_U932 = 179.00000000;
    l_U933 = 1.00000000;
    l_U934 = 0.50000000;
    l_U935 = {-0.47500000, 0.05000000, 0.27500000};
    l_U938 = {0.65000000, 0.10000000, 0.20000000};
    l_U941 = {0.65000000, -0.90000000, 0.29000000};
    l_U1146 = {0.00000000, 4.30755900, 0.00000000};
    StrCopy( ref l_U1149, "gls_bulimp_calsma_temp", 32 );
    l_U1157 = {90.00000000, 0.00000000, 0.00000000};
    l_U1160 = 1.50000000;
    l_U1161 = 0;
    sub_1094( "SP", "Script s_office_lobbyMPM.sc is starting...", 0 );
    l_U34 = 1;
    l_U32 = 0;
    while (IS_EXITFLAG_SET() == 0)
    {
        sub_1169();
        if (l_U35 == 0)
        {
            sub_9999();
        }
        WAIT( 0 );
    }
    sub_4745();
    sub_54639();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_office_lobbyMPM" );
    sub_1094( "SP", "Script s_office_lobbyMPM.sc is terminating...", 0 );
    return;
}

void sub_1094(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1169()
{
    switch (l_U35)
    {
        case 0:
        if (g_U706 == 6)
        {
            if (sub_1251() == 1)
            {
                sub_1094( "SP", "Restarting Checkpoint...", 0 );
                DO_SCREEN_FADE_OUT( 0 );
                l_U35 = 2;
                sub_1094( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
            }
            if (l_U922 == 1)
            {
                sub_1094( "SP", "Mission Failed: Player killed by Jeep.", 0 );
                l_U35 = 2;
                sub_1094( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
            }
            if ((IS_PED_DEAD( sub_1523() )) == 1)
            {
                sub_1094( "SP", "Mission Failed: Player died.", 0 );
                l_U35 = 1;
                sub_1094( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
        }
        else if ((sub_2106() == 1) || ((IS_PED_DEAD( sub_1523() )) == 1))
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "06_03_office_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "06_03_office_concat" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "06_03_office_concat" );
            }
            sub_2241( ref g_U708[6] );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        break;
        case 1:
        if ((sub_2295( 0 )) == 1)
        {
            l_U35 = 2;
            sub_1094( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        }
        break;
        case 2:
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_PED_DEAD( sub_1523() )) == 0))
        {
            if ((IS_PLAYER_DEAD( sub_1545() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_1545(), 0, 0 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            l_U35 = 3;
            sub_1094( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        break;
        case 3:
        sub_1094( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        sub_3821( 1, 0, 0, 1 );
        AUDIO_MUSIC_SUSPEND( 500 );
        ENABLE_MPM( 0 );
        ENABLE_ALL_ADRENALINE( 1 );
        sub_4036( "OFFICE_MPM_SCRIPTED_FAIL_FX" );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        SET_CAMERA_USE_COVER_FOR_AIMING( 1 );
        SET_CAMERA_OVERRIDE( "", "", 1, 1, 1 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        RESET_LAST_MAN_STANDING();
        if ((IS_PED_DEAD( sub_1523() )) == 0)
        {
            PED_FINISH_ACTION_INTENTION( sub_1523(), 47 );
            PED_FINISH_ACTION_INTENTION( sub_1523(), 48 );
            PED_FINISH_ACTION_INTENTION( sub_1523(), 49 );
            PED_FINISH_ACTION_INTENTION( sub_1523(), 50 );
        }
        CLEAR_HELP();
        CLEAR_PRINTS();
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        if ((IS_PED_DEAD( sub_1523() )) == 0)
        {
            PED_ACTION_TREE_PLAY_NODE( sub_1523(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        }
        sub_4474( g_U1430 );
        sub_4553( l_U482 );
        sub_4598( g_U1432 );
        sub_4598( g_U1436 );
        sub_4553( g_U1433 );
        STOP_PARTICLE_FX_LOOPED( g_U1434 );
        sub_4688( ref g_U1437 );
        sub_4745();
        l_U35 = 4;
        sub_1094( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        break;
        case 4:
        sub_1094( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        sub_5769( ref l_U187, sub_1523() );
        l_U35 = 5;
        sub_1094( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        break;
        case 5:
        sub_1094( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        l_U34 = 1;
        l_U35 = 0;
        sub_1094( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        break;
    }
    return;
}

int sub_1251()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1523() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1523(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1545(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1545(), 1 );
            if ((IS_PED_VISIBLE( sub_1523() )) == 0)
            {
                SET_PED_VISIBLE( sub_1523(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

int sub_1523()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1545() );
    }
    return 0;
}

void sub_1545()
{
    return GET_PLAYER_ID();
}

void sub_2106()
{
    return g_U648;
}

void sub_2241(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_2295(int iParam0)
{
    iParam0 = 1;
    switch (l_U4)
    {
        case 0:
        if (NOT (sub_2352( ref l_U6 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1523() )))
            {
                l_U5 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_2456( ref l_U6, l_U5, 1, 1 );
            sub_2590( ref l_U6 );
        }
        if (sub_2708( ref l_U6 ))
        {
            sub_1094( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1523() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1545() )))
            {
                SET_PLAYER_CONTROL( sub_1545(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U4 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U4 = 2;
            }
            else
            {
                l_U4 = 3;
            }
        }
        break;
        case 2:
        sub_1094( "NS", "Player will QUIT", 0 );
        sub_3189();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1094( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_3189();
        return 1;
        break;
    }
    return 0;
}

int sub_2352(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_2456(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2590(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_2708(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_3189()
{
    sub_1094( "NS", "P_PostFailRetryCleanup", 0 );
    sub_3237( ref l_U6 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1545() )))
    {
        SET_PLAYER_CONTROL( sub_1545(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U3 = 0;
    l_U3 = l_U3;
    l_U4 = 0;
    return;
}

void sub_3237(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_3821(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1523() )))
        {
            SET_PLAYER_CONTROL( sub_1545(), 0, uParam2 );
            SET_PED_DUCKING( sub_1523(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1523() );
            }
            SET_PED_INVINCIBLE( sub_1523(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_4036(unknown uParam0)
{
    sub_1094( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_4119( ref l_U33 );
    l_U32 = 1;
    return;
}

void sub_4119(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_4474(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_4553(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_4598(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_4688(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_4553( (uParam0^)[I] );
    }
    return;
}

void sub_4745()
{
    int I;

    sub_1094( "SP", "P_CLEANUP_ALL", 0 );
    ISEQ_UNREGISTER_ENTITY( 494459661, "mpm_player" );
    ISEQ_TERMINATE( 494459661 );
    ISEQ_UNREGISTER_ENTITY( 1290764695, "mpm_UFE" );
    ISEQ_TERMINATE( 1290764695 );
    ISEQ_UNREGISTER_ENTITY( -548128243, "mpm_UFE" );
    ISEQ_TERMINATE( -548128243 );
    ISEQ_UNREGISTER_ENTITY( 812276792, "mpm_UFE" );
    ISEQ_TERMINATE( 812276792 );
    ISEQ_UNREGISTER_ENTITY( 1005679430, "mpm_UFE" );
    ISEQ_TERMINATE( 1005679430 );
    ISEQ_UNREGISTER_ENTITY( 1321278157, "enemy0" );
    ISEQ_UNREGISTER_ENTITY( 1321278157, "enemy1" );
    ISEQ_UNREGISTER_ENTITY( 1321278157, "enemy2" );
    ISEQ_UNREGISTER_ENTITY( 1321278157, "enemy3" );
    ISEQ_TERMINATE( 1321278157 );
    sub_5055( ref l_U311 );
    sub_5055( ref l_U372 );
    sub_5055( ref l_U464 );
    if (g_U706 < 6)
    {
        sub_4474( g_U1430 );
        sub_4553( l_U482 );
    }
    if (g_U706 < 6)
    {
        sub_4598( g_U1432 );
        sub_4598( g_U1436 );
        sub_4553( g_U1433 );
        STOP_PARTICLE_FX_LOOPED( g_U1434 );
    }
    if (g_U706 < 6)
    {
        sub_4553( g_U1446 );
        sub_4553( g_U1448 );
    }
    sub_4688( ref l_U490 );
    sub_4688( ref l_U632 );
    sub_4688( ref l_U616 );
    sub_4553( l_U615 );
    if (g_U706 < 6)
    {
        sub_4688( ref g_U1437 );
    }
    sub_4553( l_U614 );
    for ( I = 0; I < l_U1009; I++ )
    {
        sub_4553( l_U1009[I]._fU4 );
        sub_4553( l_U1009[I]._fU8 );
    }
    sub_4119( ref l_U990 );
    sub_5385();
    sub_5511();
    return;
}

void sub_5055(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_4474( (uParam0^)[I] );
    }
    return;
}

void sub_5385()
{
    sub_1094( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_1094( "CCB", "Stopping the Office_Lobby context...", 0 );
    END_CONTEXT( "Office_Lobby" );
    return;
}

void sub_5511()
{
    sub_1094( "CCB", "P_STOP_SP_CHALLENGES_MPM", 0 );
    sub_1094( "CCB", "Stopping the Office_Lobby_MPM context...", 0 );
    END_CONTEXT( "Office_Lobby_MPM" );
    return;
}

void sub_5769(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1094( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_5953( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_7030( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_7322( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_7682( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_7322( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_7682( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_7322( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_7682( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_7967( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_7682( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_7967( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_7682( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_8460( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_8621( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1523(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1094( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_5953(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_5985( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_5985(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_7030(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_7322(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_7638( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_7638(unknown uParam0)
{
    return;
}

void sub_7682(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_7967(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_7638( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_8460(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_8621(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_5985( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_8693( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_8693(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_9999()
{
    unknown uVar2;
    unknown uVar3;
    int I;

    switch (l_U34)
    {
        case 1:
        sub_1094( "SP", "eCheckpointState = CHECKPOINT_INIT_SCRIPT_DATA", 0 );
        sub_10177();
        sub_11920();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U34 = 2;
        sub_1094( "SP", "eCheckpointState = CHECKPOINT_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_1094( "SP", "eCheckpointState = CHECKPOINT_REQUEST_ASSETS", 0 );
        sub_13624();
        l_U34 = 3;
        sub_1094( "SP", "eCheckpointState = CHECKPOINT_LOAD_ASSETS", 0 );
        break;
        case 3:
        if (sub_15470() == 1)
        {
            l_U34 = 4;
            sub_1094( "SP", "eCheckpointState = CHECKPOINT_SETUP_START_POINT", 0 );
            break;
        }
        return;
        case 4:
        sub_1094( "SP", "eCheckpointState = CHECKPOINT_SETUP_START_POINT", 0 );
        if (g_U706 < 6)
        {
            l_U34 = 6;
            sub_1094( "SP", "eCheckpointState = CHECKPOINT_CREATE_ENTITIES", 0 );
        }
        else if ((l_U223 == 0) AND (g_U707 == 6))
        {
            l_U223 = 1;
            if ((sub_17218( ref l_U187 )) == 0)
            {
                sub_7967( sub_1523(), g_U1270, 200, 0, 0 );
            }
            l_U34 = 5;
            sub_1094( "SP", "eCheckpointState = CHECKPOINT_WAIT_FOR_PLAYER_WEAPON", 0 );
        }
        else
        {
            l_U34 = 6;
            sub_1094( "SP", "eCheckpointState = CHECKPOINT_CREATE_ENTITIES", 0 );
        }
        break;
        case 5:
        if ((IS_PED_DEAD( sub_1523() )) == 0)
        {
            uVar2 = GET_WEAPON_FROM_HAND( sub_1523(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
            {
                l_U34 = 6;
                sub_1094( "SP", "eCheckpointState = CHECKPOINT_CREATE_ENTITIES", 0 );
            }
        }
        break;
        case 6:
        sub_1094( "SP", "eCheckpointState = CHECKPOINT_CREATE_ENTITIES", 0 );
        sub_17748();
        sub_18644( 1 );
        sub_19360( 0 );
        sub_20251();
        sub_21314();
        sub_21801();
        sub_22136();
        sub_22376();
        if (g_U706 < 6)
        {
            l_U34 = 7;
            sub_1094( "SP", "eCheckpointState = CHECKPOINT_HANDLE_GOTO_CUTSCENE", 0 );
        }
        else
        {
            l_U37 = 1;
            TERMINATE_GAME_BULLET_CAMERA();
            l_U34 = 9;
            sub_1094( "SP", "eCheckpointState = CHECKPOINT_HANDLE_LOBBY_MPM", 0 );
        }
        break;
        case 7:
        if ((sub_25390( ref l_U59, sub_1523(), 0 )) == 1)
        {
            sub_25535();
        }
        if ((sub_25946( l_U80 )) == 1)
        {
            SET_PED_FORCED_TO_WALK( sub_1523(), 1 );
            SET_CAN_ROLL_DODGE( sub_1523(), 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1545(), 0 );
        }
        else
        {
            SET_PED_FORCED_TO_WALK( sub_1523(), 0 );
            SET_CAN_ROLL_DODGE( sub_1523(), 1 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1545(), 1 );
        }
        if ((sub_25390( ref l_U38, sub_1523(), 0 )) == 1)
        {
            SET_SILHOUETTE_ACTIVE( 0 );
            l_U36 = 3;
            l_U34 = 8;
            sub_1094( "SP", "eCheckpointState = CHECKPOINT_HANDLE_OPENING_CUTSCENE", 0 );
        }
        break;
        case 8:
        if (sub_26181() == 1)
        {
            if (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PLAYER_DEAD( sub_1545() )) == 0))
            {
                SET_PLAYER_CONTROL( sub_1545(), 0, 0 );
                SET_PED_FORCE_USE_RAGDOLL( sub_1523(), 0, 0 );
                SET_PED_FORCED_TO_WALK( sub_1523(), 0 );
            }
            sub_31146();
            sub_31273();
            l_U37 = 1;
            l_U34 = 9;
            sub_1094( "SP", "eCheckpointState = CHECKPOINT_HANDLE_LOBBY_MPM", 0 );
            break;
        }
        return;
        case 9:
        sub_31492();
        if (sub_31699( l_U311[0], 0 ))
        {
            l_U920 = 1;
        }
        sub_31699( l_U311[1], 0 );
        sub_31699( l_U311[2], 0 );
        if (sub_32274() == 1)
        {
            SET_SILHOUETTE_ACTIVE( 1 );
            STOP_SCRIPT_STREAM( 0 );
            if ((IS_PED_DEAD( sub_1523() )) == 0)
            {
                SET_PED_NUM_CHARGERS_OVERRIDE( sub_1523(), -1 );
            }
            if (((IS_VEHICLE_DEAD( g_U1436 )) == 0) AND ((DOES_VEHICLE_EXIST( g_U1436 )) == 1))
            {
                STOP_PLAYBACK_RECORDED_VEHICLE( g_U1436 );
                FREEZE_VEHICLE_POSITION( g_U1436, 1 );
                PLAY_VEHICLE_ANIM( g_U1436, "VIG_12_VAN_DOORS_CLOSE", "LEVEL_S_OFFICE_CP_04", 0.00000000, 0, 1 );
            }
            for ( I = 0; I < l_U464; I++ )
            {
                if (((IS_PED_DEAD( l_U464[I] )) == 0) AND ((DOES_PED_EXIST( l_U464[I] )) == 1))
                {
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U464[I], 0 );
                    SET_PED_FLAG_LOCK_TO_COVER( l_U464[I], 0 );
                }
            }
            sub_5511();
            sub_52898( ref g_U708[7] );
            sub_2456( ref l_U795, 10000, 1, 0 );
            sub_2590( ref l_U795 );
            l_U34 = 10;
            sub_1094( "SP", "eCheckpointState = CHECKPOINT_HANDLE_LOBBY_FIGHT", 0 );
        }
        else
        {
            return;
        }
        break;
        case 10:
        sub_31492();
        sub_53033();
        if ((sub_2708( ref l_U795 )) == 1)
        {
            sub_53379();
        }
        if (l_U921 == 0)
        {
            if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
            {
                uVar3 = sub_53929();
                if (((IS_PED_DEAD( uVar3 )) == 0) AND ((DOES_PED_EXIST( uVar3 )) == 1))
                {
                    BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                    l_U921 = 1;
                }
            }
            if (((IS_LAST_MAN_STANDING_ACTIVE() == 1) || ((IS_BULLET_CAMERA_RUNNING( 0 )) == 1)) AND (((sub_31506( ref l_U372 )) + (sub_31506( ref l_U464 ))) == 0))
            {
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                l_U921 = 1;
            }
        }
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (((sub_31506( ref l_U372 )) + (sub_31506( ref l_U464 ))) == 0)))
        {
            g_U1042 = 1;
            l_U34 = 11;
            sub_1094( "SP", "eCheckpointState = CHECKPOINT_WAIT_FOR_HANDOFF", 0 );
        }
        break;
        case 11:
        sub_1094( "SP", "eCheckpointState = CHECKPOINT_WAIT_FOR_HANDOFF", 0 );
        if ((CUTSCENE_IS_LOADED( "mid_08_office_pt2" )) == 1)
        {
            if (GET_CUTSCENE_TIME_MS() > 0)
            {
                SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
                l_U34 = 12;
                sub_1094( "SP", "eCheckpointState = CHECKPOINT_FINISHED", 0 );
            }
        }
        break;
        case 12: break;
    }
    return;
}

void sub_10177()
{
    sub_1094( "SP", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U876 = 0;
    l_U877 = 0;
    l_U878 = 0;
    l_U922 = 0;
    l_U919 = 0;
    l_U920 = 0;
    l_U917 = 0;
    l_U918 = 0;
    l_U921 = 0;
    l_U521[0] = -1102238659;
    l_U521[1] = 188652078;
    l_U521[2] = 1407502289;
    l_U521[3] = 1671852130;
    l_U521[4] = -1378035454;
    l_U521[5] = 673482825;
    l_U521[6] = -1005137483;
    l_U521[7] = -1445463606;
    l_U521[8] = -1305597371;
    l_U521[9] = -5978847;
    l_U521[10] = 1603794735;
    l_U521[11] = 1315460304;
    l_U521[12] = 50576900;
    l_U521[13] = -237954145;
    l_U521[14] = 418478953;
    l_U521[15] = -1433330006;
    l_U521[16] = 1801953364;
    l_U521[17] = 2133805027;
    l_U521[18] = 416930590;
    l_U521[19] = 177553045;
    l_U521[20] = -1607931546;
    l_U521[21] = -1905670680;
    l_U521[22] = 1801671688;
    l_U521[23] = -2043901542;
    l_U521[24] = -1225757919;
    l_U521[25] = -1455566916;
    l_U521[26] = 925439086;
    l_U521[27] = 2032703572;
    l_U521[28] = -2015185464;
    l_U521[29] = -1802318040;
    l_U583[0] = 0.07500000;
    l_U583[1] = 0.07500000;
    l_U583[2] = 0.07500000;
    l_U583[3] = 0.25000000;
    l_U583[4] = 0.25000000;
    l_U583[5] = 0.25000000;
    l_U583[6] = 0.25000000;
    l_U583[7] = 0.07500000;
    l_U583[8] = 0.07500000;
    l_U583[9] = 0.07500000;
    l_U583[10] = 0.13100000;
    l_U583[11] = 0.13100000;
    l_U583[12] = 0.13100000;
    l_U583[13] = 0.13100000;
    l_U583[14] = 0.07500000;
    l_U583[15] = 0.07500000;
    l_U583[16] = 0.07500000;
    l_U583[17] = 0.07500000;
    l_U583[18] = 0.10000000;
    l_U583[19] = 0.10000000;
    l_U583[20] = 0.10000000;
    l_U583[21] = 0.10000000;
    l_U583[22] = 0.23000000;
    l_U583[23] = 0.23000000;
    l_U583[24] = 0.23000000;
    l_U583[25] = 0.23000000;
    l_U583[26] = 0.07500000;
    l_U583[27] = 0.07500000;
    l_U583[28] = 0.07500000;
    l_U583[29] = 0.07500000;
    l_U642[0] = -508569513;
    l_U642[1] = -1791779898;
    l_U642[2] = 1330778537;
    l_U642[3] = -503860654;
    l_U642[4] = -1161500527;
    l_U642[5] = -1384493572;
    l_U642[6] = -1739512918;
    l_U642[7] = -2004909049;
    l_U642[8] = -776759702;
    l_U652[0] = "RFPS_DSK_ROOTA";
    l_U652[1] = "RFPS_DSKWD_ROOTA";
    l_U652[2] = "RFPS_DSKGLS_ROOTA";
    l_U652[3] = "RFPS_DSKPRP_ROOTA";
    l_U652[4] = "RFPS_DSKGLS_ROOTB";
    l_U652[5] = "RFPS_DSKGLS_ROOTC";
    l_U652[6] = "RFPS_DSKGLS_ROOTD";
    l_U652[7] = "RFPS_DSKGLS_ROOTE";
    l_U652[8] = "RFPS_DSKGLS_ROOTF";
    g_U1441[0] = 2077743038;
    g_U1441[1] = -1764999398;
    g_U1441[2] = -1484220333;
    l_U624[0] = 931981152;
    l_U624[1] = -1224814085;
    l_U624[2] = 617987348;
    l_U624[3] = 20047042;
    l_U624[4] = 942394905;
    l_U624[5] = 327686777;
    l_U624[6] = 969041645;
    l_U377[0] = 0;
    l_U377[1] = 0;
    l_U377[2] = 0;
    l_U377[3] = 0;
    l_U382[0] = {29.07864000, -22.81960000, -0.00023400};
    l_U382[1] = {16.22139000, -29.44423000, -0.00023300};
    l_U382[2] = {28.80489000, -28.18792000, -0.00023400};
    l_U382[3] = {15.52304000, -23.69220000, -0.00023300};
    sub_3237( ref l_U669 );
    sub_3237( ref l_U678 );
    sub_3237( ref l_U687 );
    sub_3237( ref l_U696 );
    sub_3237( ref l_U705 );
    sub_3237( ref l_U714 );
    sub_3237( ref l_U723 );
    sub_3237( ref l_U732 );
    sub_3237( ref l_U741 );
    sub_3237( ref l_U750 );
    sub_3237( ref l_U759 );
    sub_3237( ref l_U768 );
    sub_3237( ref l_U777 );
    sub_3237( ref l_U786 );
    sub_3237( ref l_U795 );
    sub_3237( ref l_U804 );
    sub_3237( ref l_U813 );
    sub_3237( ref l_U822 );
    sub_3237( ref l_U831 );
    sub_3237( ref l_U840 );
    sub_3237( ref l_U849 );
    sub_3237( ref l_U858 );
    sub_3237( ref l_U867 );
    l_U36 = 0;
    l_U37 = 0;
    return;
}

void sub_11920()
{
    sub_1094( "SP", "P_INIT_GAMEPLAY_STRUCTS", 0 );
    sub_11992( ref l_U469, l_U483, l_U486, 1278052404, 26, 6, 0, 0, 0 );
    sub_11992( ref l_U231[0], -24.18160000, -19.63010000, -0.01607020, 180.00000000, -1684531295, 7, 3, 2, 0, 0 );
    sub_11992( ref l_U231[1], -23.34910000, -19.63010000, -0.01607020, 180.00000000, -1843388166, 7, 3, 2, 0, 0 );
    sub_11992( ref l_U231[2], -22.34910000, -19.63010000, -0.01607020, 180.00000000, 1047003985, 7, 3, 2, 0, 0 );
    sub_11992( ref l_U271[0], 17.22000000, 2.98000000, 0.00000000, -102.29500000, -1684531295, 7, 3, 2, 0, 0 );
    sub_11992( ref l_U271[1], 14.61000000, 1.71000000, 0.00000000, 100.29500000, -1843388166, 7, 3, 2, 0, 0 );
    sub_11992( ref l_U271[2], 21.06000000, 2.72000000, 0.00000000, 25.29500000, 1047003985, 7, 3, 2, 0, 0 );
    sub_11992( ref l_U319[0], l_U395, l_U398, 749203962, 7, 3, 2, 0, 0 );
    sub_11992( ref l_U319[1], l_U399, l_U402, -1418781641, 7, 3, 2, 0, 0 );
    sub_11992( ref l_U319[2], l_U403, l_U406, 1161560132, 7, 3, 2, 0, 0 );
    sub_11992( ref l_U319[3], l_U407, l_U410, -493387395, 7, 3, 2, 0, 0 );
    sub_11992( ref l_U411[0], 22.68920000, -40.44940000, 0.39000000, 0.00000000, 229382780, 7, 3, 2, 0, 0 );
    sub_11992( ref l_U411[1], 23.66560000, -41.13970000, 0.42300000, 0.00000000, 1898966324, 7, 3, 2, 0, 0 );
    sub_11992( ref l_U411[2], 22.13060000, -39.95070000, 0.39000000, 0.00000000, -1169641842, 7, 3, 2, 0, 0 );
    sub_11992( ref l_U411[3], 23.60810000, -40.53650000, 0.39000000, 0.00000000, 2037011856, 7, 3, 2, 0, 0 );
    sub_12745( ref l_U38, "TRIG_LOBBY_START_CUTSCENE", 28.80210000, 0.10149600, -0.25635300, 3.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, -90.08630000, 1 );
    sub_12745( ref l_U59, "TRIG_LOBBY_DOORS", 32.62430000, 8.79645000, -0.25635300, 6.00000000, 2.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12745( ref l_U80, "TRIG_LOBBY_FORCE_WALK", 31.44000000, -0.59000000, -0.26000000, 8.00000000, 8.00000000, 4.00000000, 5.29370000, 2.05412000, -29.81000000, 1 );
    sub_12745( ref l_U101, "TRIG_KILL_BOX_01", 22.17630000, -39.57850000, -0.25635300, 18.00000000, 8.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12745( ref l_U122, "TRIG_KILL_BOX_02", 30.07080000, -35.34460000, -0.25635300, 10.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12745( ref l_U143, "TRIG_KILL_BOX_03", 14.85880000, -35.34460000, -0.25635300, 10.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12745( ref l_U164, "TRIG_SAFE_ZONE", 22.25140000, -22.89720000, -0.77000000, 25.00000000, 25.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13353( ref l_U185, "TETH_LOBBY_01", 28.47000000, -23.85000000, -0.77000000, 12.00000000, 14.19000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13353( ref l_U186, "TETH_LOBBY_02", 21.28000000, -25.11000000, -0.77000000, 18.64000000, 11.68000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

void sub_11992(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_12745(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_13353(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_13624()
{
    int I;

    sub_1094( "SP", "P_REQUEST_ASSETS", 0 );
    if (g_U706 < 6)
    {
        if (((CUTSCENE_NAMED_IS_LOADING( "06_03_office_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "06_03_office_concat" )) == 0))
        {
            sub_1094( "SP", "Requesting 06_03_OFFICE_CONCAT...", 0 );
            PRE_STREAM_SEAMLESS_CUTSCENE( "06_03_office_concat" );
        }
    }
    sub_13826( 45140746, 0 );
    sub_13826( 1541666737, 0 );
    sub_13826( g_U1431, 0 );
    sub_13826( g_U1435, 0 );
    sub_14030( g_U1269, 0 );
    sub_14030( g_U1270, 0 );
    sub_14030( g_U1271, 0 );
    sub_14030( g_U1272, 0 );
    sub_13826( 1286391775, 0 );
    sub_13826( -1829860898, 0 );
    sub_13826( g_U1445, 0 );
    sub_13826( g_U1447, 0 );
    for ( I = 0; I < l_U521; I++ )
    {
        sub_13826( l_U521[I], 0 );
    }
    sub_13826( g_U1414, 0 );
    sub_13826( g_U1413, 0 );
    for ( I = 0; I < l_U642; I++ )
    {
        sub_13826( l_U642[I], 0 );
    }
    for ( I = 0; I < g_U1441; I++ )
    {
        sub_13826( g_U1441[I], 0 );
    }
    for ( I = 0; I < l_U624; I++ )
    {
        sub_13826( l_U624[I], 0 );
    }
    sub_13826( g_U1449, 0 );
    sub_13826( g_U1451, 0 );
    sub_13826( 667387145, 0 );
    sub_13826( 906305924, 0 );
    sub_13826( -2046475901, 0 );
    sub_13826( -1689555953, 0 );
    sub_14451( "LEVEL_S_OFFICE_CP_04", 0, 1 );
    sub_14451( "of_lobby", 0, 1 );
    sub_14451( "of_objmodels", 0, 1 );
    sub_14566( 160, 0 );
    sub_14566( 248, 0 );
    sub_14566( 159, 0 );
    sub_14655( 494459661, 0 );
    sub_14655( 1290764695, 0 );
    sub_14655( -548128243, 0 );
    sub_14655( 812276792, 0 );
    sub_14655( 1005679430, 0 );
    sub_14655( 1321278157, 0 );
    sub_14942( "LEVEL/S_OFFICE/S_OFF_MPM_DEAD_SEC", 0 );
    sub_14942( "LEVEL/S_OFFICE/S_OFF_MPM_DRVR", 0 );
    sub_14942( "LEVEL/S_OFFICE/S_OFF_MPM_PASGR", 0 );
    sub_14942( "LEVEL/S_OFFICE/S_OFF_MPM_PASG2", 0 );
    sub_14942( "LEVEL/S_OFFICE/S_OFF_MPM_DRVR_FAIL", 0 );
    sub_14942( "LEVEL/S_OFFICE/S_OFF_MPM_PASGR_FAIL", 0 );
    sub_14942( "LEVEL/S_OFFICE/S_OFF_MPM_PASG2_FAIL", 0 );
    sub_13826( g_U704, 0 );
    STOP_SCRIPT_STREAM( 0 );
    STOP_SCRIPT_STREAM( 1 );
    STOP_SCRIPT_STREAM( 2 );
    sub_15297( l_U666, 0, 0 );
    sub_15297( l_U667, 1, 0 );
    sub_15297( l_U668, 2, 0 );
    return;
}

void sub_13826(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_7638( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_14030(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_14451(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_14566(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_14655(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_14942(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_15297(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_15470()
{
    int I;

    if (g_U706 < 6)
    {
        if ((CUTSCENE_IS_LOADED( "06_03_office_concat" )) == 0)
        {
            return 0;
        }
        sub_1094( "SP", "Opening Cutscene is loaded...", 0 );
    }
    if (((HAS_MODEL_LOADED( -1689555953 )) == 1) AND (((HAS_MODEL_LOADED( -2046475901 )) == 1) AND (((HAS_MODEL_LOADED( 906305924 )) == 1) AND (((HAS_MODEL_LOADED( 667387145 )) == 1) AND (((HAS_MODEL_LOADED( g_U1451 )) == 1) AND (((HAS_MODEL_LOADED( g_U1449 )) == 1) AND (((HAS_MODEL_LOADED( g_U1413 )) == 1) AND (((HAS_MODEL_LOADED( g_U1414 )) == 1) AND (((HAS_MODEL_LOADED( g_U1447 )) == 1) AND (((HAS_MODEL_LOADED( g_U1445 )) == 1) AND (((HAS_MODEL_LOADED( -1829860898 )) == 1) AND (((HAS_MODEL_LOADED( 1286391775 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1272 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1271 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1270 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1269 )) == 1) AND (((HAS_MODEL_LOADED( g_U704 )) == 1) AND (((HAS_MODEL_LOADED( g_U1435 )) == 1) AND (((HAS_MODEL_LOADED( g_U1431 )) == 1) AND (((HAS_MODEL_LOADED( 1541666737 )) == 1) AND ((HAS_MODEL_LOADED( 45140746 )) == 1)))))))))))))))))))))
    {
        for ( I = 0; I < l_U521; I++ )
        {
            if ((HAS_MODEL_LOADED( l_U521[I] )) == 0)
            {
                return 0;
            }
        }
        for ( I = 0; I < l_U642; I++ )
        {
            if ((HAS_MODEL_LOADED( l_U642[I] )) == 0)
            {
                return 0;
            }
        }
        for ( I = 0; I < g_U1441; I++ )
        {
            if ((HAS_MODEL_LOADED( g_U1441[I] )) == 0)
            {
                return 0;
            }
        }
        for ( I = 0; I < l_U624; I++ )
        {
            if ((HAS_MODEL_LOADED( l_U624[I] )) == 0)
            {
                return 0;
            }
        }
        sub_1094( "SP", "All Models Loaded...", 0 );
        if (((HAS_ANIM_DICT_LOADED( "of_objmodels", 0 )) == 1) AND (((HAS_ANIM_DICT_LOADED( "of_lobby", 0 )) == 1) AND ((HAS_ANIM_DICT_LOADED( "LEVEL_S_OFFICE_CP_04", 0 )) == 1)))
        {
            sub_1094( "SP", "All Anim Dicts Loaded...", 0 );
            if (((HAS_VEHICLE_RECORDING_BEEN_LOADED( 159 )) == 1) AND (((HAS_VEHICLE_RECORDING_BEEN_LOADED( 248 )) == 1) AND ((HAS_VEHICLE_RECORDING_BEEN_LOADED( 160 )) == 1)))
            {
                sub_1094( "SP", "All Vehicle Recordings Loaded...", 0 );
                if (((ISEQ_IS_LOADED( 1321278157 )) == 1) AND (((ISEQ_IS_LOADED( 1005679430 )) == 1) AND (((ISEQ_IS_LOADED( 812276792 )) == 1) AND (((ISEQ_IS_LOADED( -548128243 )) == 1) AND (((ISEQ_IS_LOADED( 1290764695 )) == 1) AND ((ISEQ_IS_LOADED( 494459661 )) == 1))))))
                {
                    sub_1094( "SP", "All ISequences Loaded...", 0 );
                    if (((IS_ACTION_TREE_LOADED( "LEVEL/S_OFFICE/S_OFF_MPM_PASG2_FAIL" )) == 1) AND (((IS_ACTION_TREE_LOADED( "LEVEL/S_OFFICE/S_OFF_MPM_PASGR_FAIL" )) == 1) AND (((IS_ACTION_TREE_LOADED( "LEVEL/S_OFFICE/S_OFF_MPM_DRVR_FAIL" )) == 1) AND (((IS_ACTION_TREE_LOADED( "LEVEL/S_OFFICE/S_OFF_MPM_PASG2" )) == 1) AND (((IS_ACTION_TREE_LOADED( "LEVEL/S_OFFICE/S_OFF_MPM_PASGR" )) == 1) AND (((IS_ACTION_TREE_LOADED( "LEVEL/S_OFFICE/S_OFF_MPM_DRVR" )) == 1) AND ((IS_ACTION_TREE_LOADED( "LEVEL/S_OFFICE/S_OFF_MPM_DEAD_SEC" )) == 1)))))))
                    {
                        sub_1094( "SP", "All Action Trees Loaded...", 0 );
                        if (((GET_SCRIPT_STREAM_STATE( l_U668, 2 )) == 2) AND (((GET_SCRIPT_STREAM_STATE( l_U667, 1 )) == 2) AND ((GET_SCRIPT_STREAM_STATE( l_U666, 0 )) == 2)))
                        {
                            sub_1094( "SP", "All Audio Script Streams Loaded...", 0 );
                            return 1;
                        }
                    }
                }
            }
        }
    }
    return 0;
}

int sub_17218(unknown uParam0)
{
    sub_1094( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_5769( uParam0, sub_1523() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_17748()
{
    sub_1094( "SP", "P_SETUP_LOBBY_GOLDEN_GUN", 0 );
    sub_17803( g_U667._fU0 );
    sub_17846();
    return;
}

void sub_17803(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_17846()
{
    sub_1094( "CO", "P_CREATE_S_OFF_GG_MD_02", 0 );
    sub_17958( ref g_U667, g_U704, 1584164528, 1075558658, 16.01000000, -8.84000000, 1.14000000, 1.50000000, 0.00000000, 1.00000000, "lobby_int_rm" );
    sub_18087( ref g_U667 );
    return;
}

void sub_17958(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_1094( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_18087(int iParam0)
{
    sub_1094( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_18148( iParam0->_fU12 )) == 1)
        {
            sub_1094( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_1094( "CO", "has never been collected.", 0 );
        }
        if ((sub_18148( iParam0->_fU12 )) == 0)
        {
            sub_17803( iParam0->_fU0 );
            iParam0->_fU0 = sub_18383( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_1094( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_1094( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_18148(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_18383(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_18644(int iParam0)
{
    int iVar3;
    int[10] iVar4;
    vector vVar15;
    float fVar18;
    int I;

    sub_1094( "SP", "P_SETUP_LOBBY_VAN", 0 );
    iVar3 = 1;
    array(ref iVar4, 10);
    iVar4[1] = 0;
    iVar4[2] = 0;
    iVar4[3] = 1;
    iVar4[4] = 0;
    iVar4[5] = 0;
    iVar4[6] = 0;
    iVar4[7] = 0;
    iVar4[8] = 0;
    iVar4[9] = 1;
    if ((DOES_VEHICLE_EXIST( g_U1436 )) == 0)
    {
        if (iParam0 == 1)
        {
            vVar15 = {-8.44315000, -23.60470000, -0.01607020};
            fVar18 = 0.00000000;
        }
        else
        {
            vVar15 = {22.03460000, -36.79270000, 0.84270000};
            fVar18 = 90.00000000;
        }
        sub_4598( g_U1436 );
        g_U1436 = sub_18862( g_U1435, vVar15, fVar18, 0, 0, 1 );
        if (((IS_VEHICLE_DEAD( g_U1436 )) == 0) AND ((DOES_VEHICLE_EXIST( g_U1436 )) == 1))
        {
            SET_VEHICLE_ENGINE_ON( g_U1436, 1, 1 );
            SET_VEHICLE_IN_CUTSCENE( g_U1436, 1 );
            SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( g_U1436, 1 );
            SET_VEHICLE_PROOFS( g_U1436, 1, 1, 1, 1, 1 );
            for ( I = 0; I < iVar4; I++ )
            {
                if (I > 0)
                {
                    SET_VEHICLE_EXTRA( g_U1436, I, iVar4[I] );
                }
            }
            SET_VEHICLE_COLOUR_COMBINATION( g_U1436, iVar3 );
            if (iParam0 == 1)
            {
                if ((IS_PLAYBACK_GOING_ON_FOR_VEHICLE( g_U1436 )) == 1)
                {
                    SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE( g_U1436 );
                }
                FREEZE_VEHICLE_POSITION( g_U1436, 0 );
                START_PLAYBACK_RECORDED_VEHICLE( g_U1436, 159 );
                SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( g_U1436, 1400.00000000 );
                SET_PLAYBACK_SPEED( g_U1436, 0.00000000 );
            }
        }
    }
    return;
}

void sub_18862(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_13826( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_19360(boolean bParam0)
{
    int[10] iVar3;
    int I;

    sub_1094( "SP", "P_SETUP_LOBBY_JEEP", 0 );
    if (bParam0)
    {
        sub_4598( g_U1432 );
        sub_19424( g_U1431 );
        sub_4553( g_U1433 );
        g_U1433 = sub_19608( 1286391775, 19.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( g_U1433 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1433, ref g_U1157 );
            FREEZE_OBJECT_POSITION( g_U1433, 1 );
        }
        STOP_PARTICLE_FX_LOOPED( g_U1434 );
        g_U1434 = START_PARTICLE_FX_LOOPED_AT_COORD( "Ambient_Steam_Giant_S", 16.46000000, 0.47000000, 1.19000000, 0.00000000, 0.00000000, 0.00000000, 1.25000000 );
    }
    else if ((DOES_VEHICLE_EXIST( g_U1432 )) == 0)
    {
        sub_4598( g_U1432 );
        g_U1432 = sub_18862( g_U1431, -12.55610000, -23.51750000, -0.01607020, 0.00000000, 0, 0, 1 );
    }
    if (((IS_VEHICLE_DEAD( g_U1432 )) == 0) AND ((DOES_VEHICLE_EXIST( g_U1432 )) == 1))
    {
        SET_VEHICLE_ENGINE_ON( g_U1432, 1, 1 );
        SET_VEHICLE_PROOFS( g_U1432, 0, 0, 0, 1, 1 );
        SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( g_U1432, 1 );
        array(ref iVar3, 10);
        iVar3[1] = 1;
        iVar3[2] = 1;
        iVar3[3] = 1;
        iVar3[4] = 1;
        iVar3[5] = 1;
        iVar3[6] = 1;
        iVar3[7] = 1;
        iVar3[8] = 1;
        iVar3[9] = 1;
        for ( I = 0; I < iVar3; I++ )
        {
            if (I > 0)
            {
                SET_VEHICLE_EXTRA( g_U1432, I, iVar3[I] );
            }
        }
        SET_VEHICLE_COLOUR_COMBINATION( g_U1432, 0 );
    }
    return;
}

void sub_19424(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_7638( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_19608(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_13826( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_20251()
{
    int I;

    sub_1094( "SP", "P_SETUP_LOBBY_JEEP_ENEMIES", 0 );
    for ( I = 0; I < l_U311; I++ )
    {
        sub_4474( l_U311[I] );
        l_U311[I] = sub_20339( ref l_U231[I] );
        if (((IS_PED_DEAD( l_U311[I] )) == 0) AND ((DOES_PED_EXIST( l_U311[I] )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U311[I], 1 );
            if (I == 0)
            {
                sub_7967( l_U311[I], g_U1270, 25000, 0, 0 );
            }
            else if (I == 1)
            {
                sub_7967( l_U311[I], g_U1270, 25000, 0, 0 );
            }
            else if (I == 2)
            {
                sub_7967( l_U311[I], g_U1271, 25000, 0, 0 );
            };;;
        }
        l_U315[I] = 0;
    }
    sub_21212( ref l_U311, "piJeepEnemies_" );
    return;
}

void sub_20339(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_13826( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_20818( iParam0->_fU40 );
    sub_20898( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_20818(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_20898(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_21212(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_21314()
{
    sub_1094( "SP", "P_CREATE_LOBBY_ELEVATOR_DOORS", 0 );
    sub_4553( g_U1446 );
    g_U1446 = sub_21416( g_U1445, 12.66900000, 5.13000000, -0.00400000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U1446 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1446, ref g_U1157 );
        FREEZE_OBJECT_POSITION( g_U1446, 1 );
    }
    sub_4553( g_U1448 );
    g_U1448 = sub_21416( g_U1447, 12.66900000, 5.13000000, -0.00400000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U1448 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1448, ref g_U1157 );
        FREEZE_OBJECT_POSITION( g_U1448, 1 );
    }
    return;
}

void sub_21416(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_13826( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_21801()
{
    sub_1094( "SP", "P_CREATE_SECRETARY_AND_CHAIR", 0 );
    sub_4474( g_U1430 );
    g_U1430 = sub_20339( ref l_U469 );
    if (((IS_PED_DEAD( g_U1430 )) == 0) AND ((DOES_PED_EXIST( g_U1430 )) == 1))
    {
        SET_ROOM_FOR_PED_BY_NAME( g_U1430, ref g_U1157 );
        PED_ACTION_TREE_PLAY_NODE( g_U1430, "/Global/S_OFF_DEAD_SEC/SEQ_START" );
        FREEZE_PED_POSITION( g_U1430, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U1430, 1 );
        SET_PED_CAN_BE_TARGETTED( g_U1430, 0 );
        SET_PED_AIM_LOCKONABLE( g_U1430, 0 );
        SET_PED_PROOFS( g_U1430, 1, 0, 0, 0, 1 );
    }
    sub_4553( l_U482 );
    l_U482 = sub_21416( -1829860898, l_U483, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U482 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U482, ref g_U1157 );
    }
    return;
}

void sub_22136()
{
    sub_1094( "SP", "P_CREATE_DESK_AND_PROPS", 0 );
    sub_4553( l_U614 );
    l_U614 = sub_21416( g_U1413, 23.34800000, -0.63400000, 0.02400000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U614 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U614, ref g_U1157 );
    }
    sub_4553( l_U615 );
    l_U615 = sub_19608( g_U1414, 23.30100000, -0.64300000, 0.69400000, 0.00000000, 0.00000000, -100.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U615 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U615, ref g_U1157 );
    }
    return;
}

void sub_22376()
{
    int I;

    sub_1094( "SP", "P_CREATE_MPM_RAYFIRE", 0 );
    l_U552[0] = "rf_lob_FntDr00";
    l_U552[1] = "p_gnrl2_Base03";
    l_U552[2] = "rf_doorsMtl_root";
    l_U552[3] = "rf_lob_glass01_rootA";
    l_U552[4] = "rf_lob_glass02_rootA";
    l_U552[5] = "rf_lob_glass03_rootA";
    l_U552[6] = "rf_lob_glass04_rootA";
    l_U552[7] = "rf_lob_glass05_rootA";
    l_U552[8] = "rf_wdPnl01_rootA";
    l_U552[9] = "rf_wdPnl01_rootB";
    l_U552[10] = "rf_lob_glass03_rootB";
    l_U552[11] = "rf_lob_glass03_rootC";
    l_U552[12] = "rf_lob_glass03_rootD";
    l_U552[13] = "rf_lob_glass03_rootE";
    l_U552[14] = "rf_lob_glass04_rootB";
    l_U552[15] = "rf_lob_glass04_rootC";
    l_U552[16] = "rf_lob_glass04_rootD";
    l_U552[17] = "rf_lob_glass04_rootE";
    l_U552[18] = "rf_lob_glass01_rootB";
    l_U552[19] = "rf_lob_glass01_rootC";
    l_U552[20] = "rf_lob_glass01_rootD";
    l_U552[21] = "rf_lob_glass01_rootE";
    l_U552[22] = "rf_lob_glass02_rootB";
    l_U552[23] = "rf_lob_glass02_rootC";
    l_U552[24] = "rf_lob_glass02_rootD";
    l_U552[25] = "rf_lob_glass02_rootE";
    l_U552[26] = "rf_lob_glass05_rootB";
    l_U552[27] = "rf_lob_glass05_rootC";
    l_U552[28] = "rf_lob_glass05_rootD";
    l_U552[29] = "rf_lob_glass05_rootE";
    l_U490[0] = sub_21416( l_U521[0], 22.52900000, -34.21800000, -0.00200000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[1] = sub_19608( l_U521[1], 18.41500000, -23.25000000, 1.02300000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[2] = sub_21416( l_U521[2], 24.05300000, -35.23700000, -0.39500000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[3] = sub_21416( l_U521[3], 24.19900000, -35.59700000, -0.30800000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[4] = sub_21416( l_U521[4], 20.98700000, -35.59700000, -0.30800000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[5] = sub_21416( l_U521[5], 24.19900000, -31.13800000, -0.30800000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[6] = sub_21416( l_U521[6], 20.98700000, -31.13800000, -0.30800000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[7] = sub_21416( l_U521[7], 24.45900000, -31.13800000, -0.30800000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[8] = sub_21416( l_U521[8], 18.41500000, -23.25000000, -0.48000000, 0.00000000, 0.00000000, 15.00000000, 0, 0, 0 );
    l_U490[9] = sub_21416( l_U521[9], 18.41500000, -23.25000000, -0.48000000, 0.00000000, 0.00000000, 15.00000000, 0, 0, 0 );
    l_U490[10] = sub_21416( l_U521[10], 24.19900000, -31.13800000, -0.54500000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[11] = sub_21416( l_U521[11], 24.19900000, -31.13800000, -0.80600000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[12] = sub_21416( l_U521[12], 24.19900000, -31.13800000, -1.05000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[13] = sub_21416( l_U521[13], 24.19900000, -31.13800000, -1.30000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[14] = sub_21416( l_U521[14], 20.98500000, -31.13800000, -0.55000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[15] = sub_21416( l_U521[15], 20.98500000, -31.13800000, -0.78400000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[16] = sub_21416( l_U521[16], 20.98500000, -31.13800000, -1.02600000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[17] = sub_21416( l_U521[17], 20.98500000, -31.13800000, -1.24700000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[18] = sub_21416( l_U521[18], 24.19900000, -35.59700000, -0.55600000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[19] = sub_21416( l_U521[19], 24.19900000, -35.59700000, -0.81000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[20] = sub_21416( l_U521[20], 24.19900000, -35.59700000, -1.06000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[21] = sub_21416( l_U521[21], 24.19900000, -35.59700000, -1.34000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[22] = sub_21416( l_U521[22], 20.98700000, -35.59700000, -0.55600000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[23] = sub_21416( l_U521[23], 20.98700000, -35.59700000, -0.79500000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[24] = sub_21416( l_U521[24], 20.98700000, -35.59700000, -1.03100000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[25] = sub_21416( l_U521[25], 20.98700000, -35.59700000, -1.27000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[26] = sub_21416( l_U521[26], 24.45900000, -31.13800000, -0.52500000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[27] = sub_21416( l_U521[27], 24.45900000, -31.13800000, -0.80600000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[28] = sub_21416( l_U521[28], 24.45900000, -31.13800000, -0.98200000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U490[29] = sub_21416( l_U521[29], 24.45900000, -31.13800000, -1.20000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    for ( I = 0; I < l_U521; I++ )
    {
        if ((DOES_OBJECT_EXIST( l_U490[I] )) == 1)
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U490[I], ref g_U1157 );
            PLAY_OBJECT_ANIM( l_U490[I], l_U552[I], "of_lobby", 0.10000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( l_U490[I], l_U552[I], "of_lobby", 0.00000000 );
            SET_OBJECT_ANIM_SPEED( l_U490[I], l_U552[I], "of_lobby", 0.00000000 );
        }
    }
    return;
}

void sub_25390(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_25429( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

int sub_25429(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_25535()
{
    sub_1094( "SP", "P_LOCK_LOBBY_DOOR", 0 );
    sub_25581( ref g_U1383, 1 );
    sub_25784( ref g_U1383, 1 );
    sub_25581( ref g_U1390, 1 );
    sub_25784( ref g_U1390, 1 );
    return;
}

void sub_25581(int iParam0, int iParam1)
{
    if ((sub_25593( iParam0 )) == 0)
    {
        sub_25659( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_25593(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_25659(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_25784(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_25593( iParam0 )) == 0)
    {
        sub_25659( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_25946(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_25429( sub_1523(), uParam0 );
}

int sub_26181()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    int iVar7;
    int I;

    switch (l_U36)
    {
        case 0: break;
        case 3:
        sub_1094( "SP", "eOpeningCutsceneState = CUTSCENE_SETUP", 0 );
        sub_26292();
        if ((IS_PED_DEAD( sub_1523() )) == 0)
        {
            CUTSCENE_REGISTER_PED_TELEPORT( sub_1523(), l_U662, l_U665 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_1523(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
            uVar2 = sub_27702();
            if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
            {
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_Glk18_Aa_H", 0 );
                CUTSCENE_REGISTER_PED_WEAPON_HAND( sub_1523(), uVar2, 0 );
            }
        }
        if (((IS_PED_DEAD( g_U1430 )) == 0) AND ((DOES_PED_EXIST( g_U1430 )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U1430, "Rcpt_F_Avg", 0 );
        }
        if ((DOES_OBJECT_EXIST( l_U482 )) == 1)
        {
            REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( l_U482, "cs_deskChairAc", 0 );
        }
        if ((DOES_VEHICLE_EXIST( g_U1432 )) == 1)
        {
            REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U1432, "jasre", 0 );
        }
        for ( I = 0; I < l_U311; I++ )
        {
            if (((IS_PED_DEAD( l_U311[I] )) == 0) AND ((DOES_PED_EXIST( l_U311[I] )) == 1))
            {
                if (I == 0)
                {
                    REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U311[I], "M_Crac_Sold_E", 0 );
                }
                else if (I == 1)
                {
                    REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U311[I], "M_Crac_Sold_E^1", 0 );
                    uVar3 = GET_WEAPON_FROM_HAND( l_U311[I], 0, 0 );
                    if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
                    {
                        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar3, "W_SB_Uzi_Aa_H", 0 );
                    }
                }
                else if (I == 2)
                {
                    REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U311[2], "M_Crac_Sold_E^2", 0 );
                    uVar4 = GET_WEAPON_FROM_HAND( l_U311[2], 0, 0 );
                    if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
                    {
                        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar4, "W_AR_AK47_Aa_H", 0 );
                    }
                };;;
            }
        }
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U1383._fU0, g_U1383._fU4 );
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U1390._fU0, g_U1390._fU4 );
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        l_U36 = 5;
        sub_1094( "SP", "eOpeningCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 5:
        sub_1094( "SP", "eOpeningCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        AUDIO_MUSIC_STOP_ONESHOT();
        AUDIO_MUSIC_REQUEST_ONESHOT( "OFFICE_JEEP_ONESHOT", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "OFFICE_ACTION_SONG_02", "OFFICE_ACTION_1_2", "", 0.00000000, 5000, 5000, -1082130432, 0 );
        RELEASE_TIME_OF_DAY();
        SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
        FREEZE_TIME_OF_DAY( 18, 0 );
        sub_28975( ref l_U991, 1, 1 );
        l_U36 = 6;
        sub_1094( "SP", "eOpeningCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 6:
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            uVar5 = GET_CUTSCENE_SECTION_PLAYING();
            uVar6 = GET_CUTSCENE_TIME();
            iVar7 = GET_CUTSCENE_TIME_MS();
            if (l_U877 == 0)
            {
                if (iVar7 >= 5934)
                {
                    sub_1094( "SA", "Hiding rifle (if any)", 0 );
                    sub_30221( l_U991, 0 );
                    l_U877 = 1;
                }
            }
            if (l_U876 == 0)
            {
                if (iVar7 >= 14500)
                {
                    if ((AUDIO_MUSIC_IS_ONESHOT_PREPARED( "OFFICE_JEEP_ONESHOT" )) == 1)
                    {
                        AUDIO_MUSIC_PLAY_ONESHOT();
                        AUDIO_MUSIC_SUSPEND( 5000 );
                    }
                    l_U876 = 1;
                }
            }
            if (l_U878 == 0)
            {
                if (iVar7 >= 17000)
                {
                    CUTSCENE_ENABLE_SKIP( 1 );
                    l_U878 = 1;
                }
            }
            for ( I = 0; I < l_U1009; I++ )
            {
                if (l_U1009[I]._fU28 == 0)
                {
                    if (iVar7 > l_U1009[I]._fU24)
                    {
                        if ((DOES_OBJECT_EXIST( l_U1009[I]._fU4 )) == 1)
                        {
                            SET_OBJECT_VISIBLE( l_U1009[I]._fU4, 1 );
                        }
                        if ((DOES_OBJECT_EXIST( l_U1009[I]._fU8 )) == 1)
                        {
                            SET_OBJECT_VISIBLE( l_U1009[I]._fU8, 1 );
                        }
                        START_PARTICLE_FX_NON_LOOPED_AT_COORD( ref l_U1149, l_U1009[I]._fU12, l_U1157, l_U1160 );
                        l_U1009[I]._fU28 = 1;
                    }
                }
            }
        }
        else
        {
            for ( I = 0; I < l_U1009; I++ )
            {
                sub_4553( l_U1009[I]._fU4 );
                sub_4553( l_U1009[I]._fU8 );
            }
            sub_19424( 667387145 );
            sub_19424( 906305924 );
            sub_19424( -2046475901 );
            sub_19424( -1689555953 );
            sub_30221( l_U991, 1 );
            if (((IS_PED_DEAD( g_U1430 )) == 0) AND ((DOES_PED_EXIST( g_U1430 )) == 1))
            {
                sub_30827( g_U1430, l_U483, l_U486 );
                PED_ACTION_TREE_PLAY_NODE( g_U1430, "/Global/S_OFF_DEAD_SEC/SEQ_START" );
                FREEZE_PED_POSITION( g_U1430, 1 );
            }
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U933, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U934, 1065353216, 0 );
            DISPLAY_HUD( 0 );
            l_U36 = 0;
            sub_1094( "SP", "eOpeningCutsceneState = CUTSCENE_IDLE", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

void sub_26292()
{
    int I;

    sub_1094( "SP", "P_SETUP_GLASS_DECALS", 0 );
    l_U1009[0]._fU0 = 667387145;
    l_U1009[0]._fU12 = {23.43764000, -35.49897000, 2.41981000};
    l_U1009[0]._fU24 = 20762;
    l_U1009[16]._fU0 = -1689555953;
    l_U1009[16]._fU12 = {22.26248000, -35.49897000, 1.81202000};
    l_U1009[16]._fU24 = 20825;
    l_U1009[6]._fU0 = 906305924;
    l_U1009[6]._fU12 = {23.42078000, -35.49897000, 0.98409000};
    l_U1009[6]._fU24 = 20888;
    l_U1009[1]._fU0 = 667387145;
    l_U1009[1]._fU12 = {23.17328000, -35.49897000, 1.63401000};
    l_U1009[1]._fU24 = 20951;
    l_U1009[9]._fU0 = -2046475901;
    l_U1009[9]._fU12 = {23.29960000, -35.49897000, 1.38769000};
    l_U1009[9]._fU24 = 21014;
    l_U1009[8]._fU0 = 906305924;
    l_U1009[8]._fU12 = {21.49347000, -35.49897000, 1.36172000};
    l_U1009[8]._fU24 = 21077;
    l_U1009[13]._fU0 = -1689555953;
    l_U1009[13]._fU12 = {23.46436000, -35.49897000, 1.65136000};
    l_U1009[13]._fU24 = 21140;
    l_U1009[11]._fU0 = -2046475901;
    l_U1009[11]._fU12 = {22.07003000, -35.49897000, 0.55453000};
    l_U1009[11]._fU24 = 21203;
    l_U1009[2]._fU0 = 667387145;
    l_U1009[2]._fU12 = {22.93305000, -35.49897000, 2.13138000};
    l_U1009[2]._fU24 = 21266;
    l_U1009[7]._fU0 = 906305924;
    l_U1009[7]._fU12 = {22.11065000, -35.49897000, 0.98408000};
    l_U1009[7]._fU24 = 21329;
    l_U1009[15]._fU0 = -1689555953;
    l_U1009[15]._fU12 = {22.10920000, -35.49897000, 2.54968000};
    l_U1009[15]._fU24 = 21392;
    l_U1009[3]._fU0 = 667387145;
    l_U1009[3]._fU12 = {22.90833000, -35.49897000, 1.53311000};
    l_U1009[3]._fU24 = 21455;
    l_U1009[10]._fU0 = -2046475901;
    l_U1009[10]._fU12 = {22.85752000, -35.49897000, 1.80366000};
    l_U1009[10]._fU24 = 21518;
    l_U1009[4]._fU0 = 667387145;
    l_U1009[4]._fU12 = {22.86078000, -35.49897000, 0.80409000};
    l_U1009[4]._fU24 = 21581;
    l_U1009[14]._fU0 = -1689555953;
    l_U1009[14]._fU12 = {21.69901000, -35.49897000, 2.35100000};
    l_U1009[14]._fU24 = 21644;
    l_U1009[5]._fU0 = 667387145;
    l_U1009[5]._fU12 = {21.68821000, -35.49897000, 2.01670000};
    l_U1009[5]._fU24 = 21707;
    l_U1009[12]._fU0 = -2046475901;
    l_U1009[12]._fU12 = {22.17929000, -35.49897000, 2.23527000};
    l_U1009[12]._fU24 = 21770;
    for ( I = 0; I < l_U1009; I++ )
    {
        sub_4553( l_U1009[I]._fU4 );
        sub_4553( l_U1009[I]._fU8 );
        l_U1009[I]._fU4 = sub_19608( l_U1009[I]._fU0, l_U1009[I]._fU12, 0.00000000, 0.00000000, 180.00000000, 0, 0, 0 );
        l_U1009[I]._fU8 = sub_19608( l_U1009[I]._fU0, l_U1009[I]._fU12 + l_U1146, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if ((DOES_OBJECT_EXIST( l_U1009[I]._fU4 )) == 1)
        {
            FREEZE_OBJECT_POSITION( l_U1009[I]._fU4, 1 );
            SET_OBJECT_VISIBLE( l_U1009[I]._fU4, 0 );
        }
        if ((DOES_OBJECT_EXIST( l_U1009[I]._fU8 )) == 1)
        {
            FREEZE_OBJECT_POSITION( l_U1009[I]._fU8, 1 );
            SET_OBJECT_VISIBLE( l_U1009[I]._fU8, 0 );
        }
        l_U1009[I]._fU28 = 0;
    }
    return;
}

int sub_27702()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1523() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_1523(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_27765( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1523(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_1523(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_1523(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

int sub_27765(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_28975(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_28987( iParam0 );
    if ((IS_PED_DEAD( sub_1523() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_1523(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_27765( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_29210( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_1523(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_1523(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_1523(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_1523(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_1523() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_1523(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1523(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_1523(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1523(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_1523() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_1523(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_29210( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_1523(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_1523(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1523(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_28987(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_29210(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_30221(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

void sub_30827(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_31146()
{
    sub_1094( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_1094( "CCB", "Starting the Office_Lobby context...", 0 );
    START_CONTEXT( "Office_Lobby" );
    return;
}

void sub_31273()
{
    sub_1094( "CCB", "P_START_SP_CHALLENGES_MPM", 0 );
    sub_1094( "CCB", "Starting the Office_Lobby_MPM context...", 0 );
    START_CONTEXT( "Office_Lobby_MPM" );
    return;
}

void sub_31492()
{
    int I;

    if ((sub_31506( ref l_U372 )) == 1)
    {
        I = 0;
        for ( I = 0; I < l_U372; I++ )
        {
            if (((IS_PED_DEAD( l_U372[I] )) == 0) AND ((DOES_PED_EXIST( l_U372[I] )) == 1))
            {
                SET_PED_AS_ONE_SHOT_KILL( l_U372[I], 0 );
            }
        }
    }
    return;
}

void sub_31506(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

int sub_31699(int iParam0, int iParam1)
{
    int I;

    if ((IS_PED_DEAD( sub_1523() )) == 0)
    {
        if (((IS_PED_DEAD( iParam0 )) == 0) AND ((DOES_PED_EXIST( iParam0 )) == 1))
        {
            if ((iParam1 == 1) || ((HAS_PED_BEEN_DAMAGED_BY_PED( iParam0, sub_1523(), 0 )) == 1))
            {
                SET_PED_HEALTH( iParam0, 500, 0 );
                SET_PED_INVINCIBLE( iParam0, 1 );
                SET_PED_CAN_BE_TARGETTED( iParam0, 0 );
                SET_PED_AIM_LOCKONABLE( iParam0, 0 );
                CLEAR_PED_TASKS( iParam0 );
                PED_SET_ACTION_INTENTION( iParam0, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                CLEAR_PED_LAST_DAMAGE_ENTITY( iParam0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( iParam0, 1 );
                if (iParam0 == l_U311[0])
                {
                    if ((l_U315[1] == 0) AND (((IS_PED_DEAD( l_U311[1] )) == 0) AND ((DOES_PED_EXIST( l_U311[1] )) == 1)))
                    {
                        CLEAR_PED_TASKS( l_U311[1] );
                        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U311[1], 1 );
                        PED_SET_ACTION_INTENTION( l_U311[1], 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
                    }
                }
                for ( I = 0; I < l_U311; I++ )
                {
                    if (iParam0 == l_U311[I])
                    {
                        l_U315[I] = 1;
                    }
                }
                BLOOD_DECAL_ON_PED_BONE( iParam0, 0.00000000, 0.20000000, 0.00000000, 65488, 0 );
                BLOOD_DECAL_ON_PED_BONE( iParam0, 0.00000000, 0.20000000, 0.00000000, 65488, 6 );
                BLOOD_DECAL_ON_PED_BONE( iParam0, 0.00000000, 0.20000000, 0.00000000, 65488, 7 );
                BLOOD_DECAL_ON_PED_BONE( iParam0, 0.00000000, 0.20000000, 0.00000000, 57704, 7 );
                BLOOD_DECAL_ON_PED_BONE( iParam0, 0.00000000, 0.20000000, 0.00000000, 3229, 7 );
                return 1;
            }
        }
    }
    return 0;
}

int sub_32274()
{
    vector vVar2;
    vector vVar5;
    vector vVar8;
    int I;
    unknown uVar12;
    int iVar13;

    if (l_U1161 == 0)
    {
        START_WIDGET_GROUP( "Lobby MPM Helper" );
        ADD_WIDGET_INT_SLIDER( "Prone to Cover Cam Start Time", ref l_U912, 0, 999999, 100 );
        ADD_WIDGET_INT_SLIDER( "Prone to Cover Cam Stop Time", ref l_U913, 0, 999999, 100 );
        ADD_WIDGET_INT_SLIDER( "Prone to Cover Cam To Game Interp Time", ref l_U914, 0, 999999, 100 );
        START_WIDGET_GROUP( "Gameplay Cover Cam Heading/Pitch" );
        ADD_WIDGET_FLOAT_SLIDER( "Cam Heading", ref l_U915, -180.00000000, 180.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Cam Pitch", ref l_U916, -180.00000000, 180.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U1161 = 1;
    }
    vVar2 = {22.55000000, -36.92000000, 0.04000000};
    vVar5 = {23.30000000, -2.63000000, -0.00000000};
    vVar8 = {22.40000000, -24.10000000, -0.00000000};
    switch (l_U37)
    {
        case 0: break;
        case 1:
        sub_1094( "SP", "eLobbyMPMState = MPM_START", 0 );
        sub_32832();
        sub_33446();
        sub_33633();
        if (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PLAYER_DEAD( sub_1545() )) == 0))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( sub_1523() );
            SET_PLAYER_CONTROL( sub_1545(), 0, 0 );
            SET_PED_PROOFS( sub_1523(), 1, 1, 1, 1, 1 );
            uVar12 = GET_WEAPON_FROM_HAND( sub_1523(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                iVar13 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1523(), 0 );
                if ((GET_WEAPON_AMMO_IN_CLIP( uVar12 )) < iVar13)
                {
                    ADD_AMMO_TO_PED( sub_1523(), GET_WEAPON_TYPE( uVar12 ), iVar13, 0 );
                }
            }
            sub_34839();
            SET_PED_CONSUMING_AMMO( sub_1523(), 0 );
        }
        if (((IS_VEHICLE_DEAD( g_U1432 )) == 0) AND ((DOES_VEHICLE_EXIST( g_U1432 )) == 1))
        {
            FREEZE_VEHICLE_POSITION( g_U1432, 0 );
            if ((IS_PLAYBACK_GOING_ON_FOR_VEHICLE( g_U1432 )) == 1)
            {
                SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE( g_U1432 );
            }
            START_PLAYBACK_RECORDED_VEHICLE( g_U1432, 248 );
            SET_VEHICLE_COORDS( g_U1432, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( 248, l_U885 ) );
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( g_U1432, l_U885 );
            SET_PLAYBACK_SPEED( g_U1432, l_U899 );
        }
        if (((IS_VEHICLE_DEAD( g_U1436 )) == 0) AND ((DOES_VEHICLE_EXIST( g_U1436 )) == 1))
        {
            SET_PLAYBACK_SPEED( g_U1436, l_U898 );
        }
        DISPLAY_HUD( 0 );
        ENABLE_ALL_ADRENALINE( 0 );
        if (((IS_VEHICLE_DEAD( g_U1432 )) == 0) AND (((DOES_VEHICLE_EXIST( g_U1432 )) == 1) AND ((IS_PED_DEAD( sub_1523() )) == 0)))
        {
            BULLET_CAMERA_PRELOAD_TEXT_BINK( "S_OFFICE_JEEP", 1 );
            sub_4119( ref l_U990 );
            l_U990 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            SETUP_BULLET_CAMERA_SCENE( l_U990, "S_OFFICE_JEEP", vVar2, vVar5, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1523() ), 0.00000000, 0.00000000, 0.00000000, vVar8, 0.00000000, 0.00000000, 0.00000000, "", "" );
            SET_BULLET_CAMERA_VEHICLE( l_U990, g_U1432 );
            RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
        }
        if (sub_35462() == 0)
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED() == 1) || (IS_SCREEN_FADED_OUT() == 1))
            {
                DO_SCREEN_FADE_IN( 0 );
            }
        }
        if ((IS_PED_DEAD( sub_1523() )) == 0)
        {
            PLAY_SCRIPT_STREAM_FROM_PED( sub_1523(), 0 );
        }
        if ((l_U187._fU0 == 0) || (g_U706 < 6))
        {
            g_U706 = 6;
            sub_35824( ref l_U187, g_U706, sub_1523(), g_U817[6], g_U926[6], g_U963[6], g_U1000[6], 1 );
        }
        sub_2456( ref l_U804, l_U879, 1, 0 );
        sub_2590( ref l_U804 );
        sub_2456( ref l_U813, l_U880, 1, 0 );
        sub_2590( ref l_U813 );
        sub_2456( ref l_U822, l_U881, 1, 0 );
        sub_2590( ref l_U822 );
        sub_2456( ref l_U831, l_U882, 1, 0 );
        sub_2590( ref l_U831 );
        sub_2456( ref l_U840, l_U883, 1, 0 );
        sub_2590( ref l_U840 );
        sub_2456( ref l_U849, l_U884, 1, 0 );
        sub_2590( ref l_U849 );
        sub_2456( ref l_U858, 2000, 1, 0 );
        sub_2590( ref l_U858 );
        sub_2456( ref l_U669, l_U887, 1, 0 );
        sub_2590( ref l_U669 );
        l_U37 = 2;
        sub_1094( "SP", "eLobbyMPMState = MPM_HANDLE_WAIT_FOR_JEEP_ENTRANCE_BULLET_CAM", 0 );
        break;
        case 2:
        if ((IS_BULLET_CAMERA_SCENE_ACTIVE( l_U990 )) == 1)
        {
            l_U37 = 3;
            sub_1094( "SP", "eLobbyMPMState = MPM_HANDLE_JEEP_ENTRANCE_BULLET_CAM", 0 );
        }
        break;
        case 3:
        if ((IS_BULLET_CAMERA_SCENE_ACTIVE( l_U990 )) == 1)
        {
            if ((sub_2708( ref l_U804 )) == 1)
            {
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "OF_Rayfire_Glass_door_S", l_U923, l_U929, 1.00000000 );
                sub_1094( "SA", "Starting - OFFICE_ACTION_2_5", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "OFFICE_ACTION_SONG_02", "OFFICE_ACTION_2_5", "", 1.00000000, 5000, 5000, -1082130432, 0 );
            }
            if ((sub_2708( ref l_U813 )) == 1)
            {
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "OF_Rayfire_Glass_door_S", l_U926, l_U929, 1.00000000 );
            }
            if ((sub_2708( ref l_U822 )) == 1)
            {
                sub_40100();
            }
            if ((sub_2708( ref l_U831 )) == 1)
            {
                sub_40367();
                sub_40618();
            }
            if ((sub_2708( ref l_U840 )) == 1)
            {
                sub_40905();
            }
            if ((sub_2708( ref l_U849 )) == 1)
            {
                sub_41172();
            }
            if ((sub_2708( ref l_U858 )) == 1)
            {
                sub_41439();
            }
        }
        else
        {
            sub_42279( l_U886, 1, 0, 2.45000000, 4.75000000, 0 );
            SET_CAMERA_OVERRIDE( "S_OFFICE_MPM_CAMERA", "", 0, 0, 0 );
            BULLET_CAMERA_PRELOAD_TEXT_BINK( "S_OFFICE_JEEP", 0 );
            if (((IS_VEHICLE_DEAD( g_U1432 )) == 0) AND ((DOES_VEHICLE_EXIST( g_U1432 )) == 1))
            {
                SET_PLAYBACK_SPEED( g_U1432, l_U900 );
            }
            if (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PLAYER_DEAD( sub_1545() )) == 0))
            {
                sub_30827( sub_1523(), l_U662, l_U665 );
                FREEZE_PED_POSITION( sub_1523(), 1 );
                ISEQ_REGISTER_ENTITY( 494459661, "mpm_player", sub_1523(), 0 );
                ISEQ_START( 494459661 );
            }
            l_U37 = 4;
            sub_1094( "SP", "eLobbyMPMState = MPM_HANDLE_WAIT_FOR_PLAYER_CONTROL", 0 );
        }
        break;
        case 4:
        if ((sub_2708( ref l_U858 )) == 1)
        {
            sub_41439();
        }
        if ((sub_2708( ref l_U669 )) == 1)
        {
            sub_42711();
            if (((IS_VEHICLE_DEAD( g_U1432 )) == 0) AND ((DOES_VEHICLE_EXIST( g_U1432 )) == 1))
            {
                SET_PLAYBACK_SPEED( g_U1432, l_U901 );
            }
            sub_42929();
            if (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PLAYER_DEAD( sub_1545() )) == 0))
            {
                SET_PLAYER_FORCED_AIM( sub_1545(), 1, 0 );
            }
            if (GET_ADRENALINE_AMT() < 0.10000000)
            {
                SET_ADRENALINE_AMT( 0.10000000 );
            }
            DEACTIVATE_BULLET_TIME( 1, 0 );
            ACTIVATE_BULLET_TIME( 0, l_U904, 1 );
            ENABLE_MPM( 1 );
            ENABLE_ALL_ADRENALINE( 0 );
            ENABLE_CROSSHAIR( 1 );
            SET_CROSSHAIR_PULSE();
            sub_4119( ref l_U990 );
            sub_2456( ref l_U687, l_U888, 1, 0 );
            sub_2590( ref l_U687 );
            l_U37 = 5;
            sub_1094( "SP", "eLobbyMPMState = MPM_HANDLE_MUST_SHOOT_DRIVER", 0 );
        }
        break;
        case 5:
        if ((sub_31699( l_U311[0], 0 )) == 1)
        {
            l_U920 = 1;
        }
        if ((sub_2708( ref l_U687 )) == 1)
        {
            if ((l_U911 == 1) || (l_U920 == 1))
            {
                STOP_SCRIPT_STREAM( 2 );
                l_U37 = 6;
                sub_1094( "SP", "eLobbyMPMState = MPM_PASS_KILLED_DRIVER", 0 );
            }
            else
            {
                STOP_SCRIPT_STREAM( 1 );
                l_U37 = 7;
                sub_1094( "SP", "eLobbyMPMState = MPM_FAIL_MISSED_DRIVER", 0 );
            }
        }
        break;
        case 7:
        sub_1094( "SP", "eLobbyMPMState = MPM_FAIL_MISSED_DRIVER", 0 );
        ISEQ_UNREGISTER_ENTITY( 1290764695, "mpm_UFE" );
        ISEQ_TERMINATE( 1290764695 );
        ISEQ_UNREGISTER_ENTITY( -548128243, "mpm_UFE" );
        ISEQ_TERMINATE( -548128243 );
        ISEQ_UNREGISTER_ENTITY( 812276792, "mpm_UFE" );
        ISEQ_TERMINATE( 812276792 );
        ISEQ_UNREGISTER_ENTITY( 1005679430, "mpm_UFE" );
        ISEQ_TERMINATE( 1005679430 );
        if (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PLAYER_DEAD( sub_1545() )) == 0))
        {
            SET_PLAYER_CONTROL( sub_1545(), 1, 0 );
            SET_PLAYER_CONTROL( sub_1545(), 0, 0 );
            SET_PLAYER_FORCED_AIM( sub_1545(), 0, 0 );
            FREEZE_PED_POSITION( sub_1523(), 0 );
            SET_PED_COLLISION( sub_1523(), 0 );
            CLEAR_PED_TASKS( sub_1523() );
            SET_PED_CONSUMING_AMMO( sub_1523(), 1 );
            PED_SET_ACTION_INTENTION( sub_1523(), 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_SCRIPT_STREAM_FROM_PED( sub_1523(), 2 );
        }
        sub_5055( ref l_U372 );
        if (((IS_PED_DEAD( l_U311[1] )) == 0) AND ((DOES_PED_EXIST( l_U311[1] )) == 1))
        {
            CLEAR_PED_TASKS( l_U311[1] );
        }
        if (((IS_PED_DEAD( l_U311[2] )) == 0) AND ((DOES_PED_EXIST( l_U311[2] )) == 1))
        {
            CLEAR_PED_TASKS( l_U311[2] );
        }
        if (((IS_VEHICLE_DEAD( g_U1432 )) == 0) AND ((DOES_VEHICLE_EXIST( g_U1432 )) == 1))
        {
            SET_VEHICLE_COLLISION( g_U1432, 1 );
            if ((IS_PLAYBACK_GOING_ON_FOR_VEHICLE( g_U1432 )) == 1)
            {
                SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE( g_U1432 );
            }
            FREEZE_VEHICLE_POSITION( g_U1432, 0 );
            START_PLAYBACK_RECORDED_VEHICLE( g_U1432, 160 );
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( g_U1432, l_U890 );
        }
        sub_44141();
        DISPLAY_HUD( 0 );
        ENABLE_CROSSHAIR( 0 );
        SET_CAMERA_OVERRIDE( "", "", 1, 1, 1 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_OFFICE_CP_04", "O7_OFF_MPM_JEEP_JUMP_FAIL_CAM", 1, 15.78406000, -4.76943500, 1.55363100, 0.00000000, 0, 0 );
        sub_44820( "OFFICE_MPM_SCRIPTED_FAIL_FX", 0 );
        AUDIO_MUSIC_SUSPEND( 5000 );
        sub_2456( ref l_U741, l_U905, 1, 0 );
        sub_2590( ref l_U741 );
        sub_2456( ref l_U750, l_U906, 1, 0 );
        sub_2590( ref l_U750 );
        sub_2456( ref l_U759, l_U907, 1, 0 );
        sub_2590( ref l_U759 );
        sub_2456( ref l_U777, l_U909, 1, 0 );
        sub_2590( ref l_U777 );
        sub_2456( ref l_U768, l_U910, 1, 0 );
        sub_2590( ref l_U768 );
        l_U37 = 8;
        sub_1094( "SP", "eLobbyMPMState = MPM_HANDLE_FAIL_MISSED_DRIVER", 0 );
        break;
        case 8:
        if ((sub_2708( ref l_U741 )) == 1)
        {
            sub_45237();
            sub_4553( l_U614 );
            sub_19424( g_U1413 );
            sub_4553( l_U615 );
            sub_19424( g_U1414 );
        }
        if ((sub_2708( ref l_U750 )) == 1)
        {
            sub_46006();
            sub_4553( l_U482 );
            sub_4119( ref l_U990 );
        }
        if ((sub_2708( ref l_U759 )) == 1)
        {
            if (((IS_VEHICLE_DEAD( g_U1432 )) == 0) AND ((DOES_VEHICLE_EXIST( g_U1432 )) == 1))
            {
                SET_VEHICLE_COLLISION( g_U1432, 1 );
            }
            if ((IS_PED_DEAD( sub_1523() )) == 0)
            {
                SET_PED_COLLISION( sub_1523(), 1 );
            }
        }
        if ((sub_2708( ref l_U777 )) == 1)
        {
            if (((IS_VEHICLE_DEAD( g_U1432 )) == 0) AND ((DOES_VEHICLE_EXIST( g_U1432 )) == 1))
            {
                SET_VEHICLE_COLLISION( g_U1432, 1 );
            }
        }
        if ((l_U768._fU16 == 1) || ((sub_2708( ref l_U768 )) == 1))
        {
            if ((sub_2295( 0 )) == 1)
            {
                CAMERA_ANIMATED_STOP( 0, 0 );
                l_U922 = 1;
                l_U37 = 0;
                sub_1094( "SP", "eLobbyMPMState = MPM_IDLE", 0 );
                return 0;
            }
        }
        break;
        case 6:
        sub_1094( "SP", "eLobbyMPMState = MPM_PASS_KILLED_DRIVER", 0 );
        sub_31699( l_U311[2], 1 );
        for ( I = 0; I < l_U616; I++ )
        {
            sub_4553( l_U616[I] );
            sub_19424( l_U624[I] );
        }
        sub_25535();
        if (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PLAYER_DEAD( sub_1545() )) == 0))
        {
            FREEZE_PED_POSITION( sub_1523(), 0 );
            PED_SET_ACTION_INTENTION( sub_1523(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            SNAP_PLAYER_TO_COVERPOINT( sub_1545(), "GenCover", "36A681B_9C79663B_Corner2", 0 );
            PLAY_SCRIPT_STREAM_FROM_PED( sub_1523(), 1 );
        }
        SET_CAMERA_USE_COVER_FOR_AIMING( 0 );
        SET_CAMERA_OVERRIDE( "S_OFFICE_MPM_LEAP_CAMERA", "", 1, 0, 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        ACTIVATE_BULLET_TIME( 0, l_U903, 1 );
        sub_2456( ref l_U696, l_U889, 1, 0 );
        sub_2590( ref l_U696 );
        sub_2456( ref l_U705, l_U891, 1, 0 );
        sub_2590( ref l_U705 );
        sub_2456( ref l_U678, l_U892, 1, 0 );
        sub_2590( ref l_U678 );
        sub_2456( ref l_U723, l_U893, 1, 0 );
        sub_2590( ref l_U723 );
        l_U37 = 9;
        break;
        case 9:
        if ((sub_2708( ref l_U696 )) == 1)
        {
            sub_4553( l_U614 );
            sub_19424( g_U1413 );
            sub_4553( l_U615 );
            sub_19424( g_U1414 );
            sub_47012();
            sub_47565();
            DEACTIVATE_BULLET_TIME( 1, 0 );
            ACTIVATE_BULLET_TIME( 0, l_U902, 1 );
        }
        if ((sub_2708( ref l_U705 )) == 1)
        {
            sub_42929();
            if (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PLAYER_DEAD( sub_1545() )) == 0))
            {
                SET_PLAYER_FORCED_AIM( sub_1545(), 1, 0 );
            }
            ENABLE_MPM( 1 );
            ENABLE_CROSSHAIR( 1 );
            SET_CROSSHAIR_PULSE();
        }
        if ((sub_2708( ref l_U678 )) == 1)
        {
            sub_47890();
            sub_46006();
        }
        if ((sub_2708( ref l_U723 )) == 1)
        {
            sub_48137();
            if (((IS_VEHICLE_DEAD( g_U1436 )) == 0) AND ((DOES_VEHICLE_EXIST( g_U1436 )) == 1))
            {
                PLAY_VEHICLE_ANIM( g_U1436, "VIG_12_VAN_DOORS_OPEN", "LEVEL_S_OFFICE_CP_04", 0.00000000, 0, 1 );
            }
            for ( I = 0; I < l_U372; I++ )
            {
                if ((sub_25429( l_U372[I], l_U164 )) == 0)
                {
                    sub_48878( l_U372[I] );
                }
            }
            sub_48956();
            sub_2456( ref l_U732, 30, 1, 0 );
            sub_2590( ref l_U732 );
            sub_2456( ref l_U714, 1000, 1, 0 );
            sub_2590( ref l_U714 );
        }
        if ((sub_2708( ref l_U732 )) == 1)
        {
            for ( I = 0; I < l_U464; I++ )
            {
                if (((IS_PED_DEAD( l_U464[I] )) == 0) AND ((DOES_PED_EXIST( l_U464[I] )) == 1))
                {
                    FREEZE_PED_POSITION( l_U464[I], 0 );
                    SET_PED_VISIBLE( l_U464[I], 1 );
                }
            }
        }
        if ((sub_2708( ref l_U714 )) == 1)
        {
            sub_49589();
        }
        if (l_U917 == 0)
        {
            if ((IS_PED_DEAD( sub_1523() )) == 0)
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( sub_1523(), 49 )) == 3)
                {
                    PED_FINISH_ACTION_INTENTION( sub_1523(), 49 );
                    sub_1094( "SP", "Roll Action Intention Received.", 0 );
                    if (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PLAYER_DEAD( sub_1545() )) == 0))
                    {
                        SET_PLAYER_CONTROL( sub_1545(), 1, 0 );
                        SET_PLAYER_CONTROL( sub_1545(), 0, 0 );
                        SET_PLAYER_FORCED_AIM( sub_1545(), 0, 0 );
                    }
                    DISPLAY_HUD( 0 );
                    ENABLE_CROSSHAIR( 0 );
                    DEACTIVATE_BULLET_TIME( 0, 0 );
                    SET_CAMERA_USE_COVER_FOR_AIMING( 1 );
                    SET_CAMERA_OVERRIDE( "S_CLUB_POOL_CAM", "", 1, 1, 1 );
                    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
                    SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0.00000000, 1065353216, 0 );
                    for ( I = 0; I < l_U632; I++ )
                    {
                        sub_4553( l_U632[I] );
                        sub_19424( l_U642[I] );
                    }
                    sub_50585();
                    AUDIO_MUSIC_FORCE_TRACK( "OFFICE_ACTION_SONG_02", "OFFICE_ACTION_2_5", "", 1.00000000, 3000, 5000, -1082130432, 0 );
                    sub_2456( ref l_U786, l_U912, 1, 0 );
                    sub_2590( ref l_U786 );
                    l_U917 = 1;
                }
            }
        }
        if ((sub_2708( ref l_U786 )) == 1)
        {
            CAMERA_PLAY_ANIMATED( "LEVEL_S_OFFICE_CP_04", "VIG_11_OFFICE_MPM_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0, 1, 1000 );
            SET_CAMERA_OVERRIDE( "", "", 1, 1, 1 );
        }
        if (l_U918 == 0)
        {
            if (IS_ANIMATED_CAMERA_PLAYING() == 1)
            {
                if (CAMERA_ANIMATED_CURRENT_TIME() >= l_U913)
                {
                    SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U915, 1065353216, 0 );
                    SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U916, 1065353216, 0 );
                    CAMERA_ANIMATED_STOP( l_U914, 1 );
                    l_U918 = 1;
                }
            }
        }
        if (l_U919 == 0)
        {
            if ((IS_PED_DEAD( sub_1523() )) == 0)
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( sub_1523(), 50 )) == 3)
                {
                    PED_FINISH_ACTION_INTENTION( sub_1523(), 50 );
                    sub_1094( "SP", "In Cover Action Intention Received.", 0 );
                    ISEQ_UNREGISTER_ENTITY( 494459661, "mpm_player" );
                    ISEQ_TERMINATE( 494459661 );
                    ISEQ_UNREGISTER_ENTITY( 1290764695, "mpm_UFE" );
                    ISEQ_TERMINATE( 1290764695 );
                    ISEQ_UNREGISTER_ENTITY( -548128243, "mpm_UFE" );
                    ISEQ_TERMINATE( -548128243 );
                    ISEQ_UNREGISTER_ENTITY( 812276792, "mpm_UFE" );
                    ISEQ_TERMINATE( 812276792 );
                    ISEQ_UNREGISTER_ENTITY( 1005679430, "mpm_UFE" );
                    ISEQ_TERMINATE( 1005679430 );
                    ISEQ_UNREGISTER_ENTITY( 1321278157, "enemy0" );
                    ISEQ_UNREGISTER_ENTITY( 1321278157, "enemy1" );
                    ISEQ_UNREGISTER_ENTITY( 1321278157, "enemy2" );
                    ISEQ_UNREGISTER_ENTITY( 1321278157, "enemy3" );
                    ISEQ_TERMINATE( 1321278157 );
                    if (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PLAYER_DEAD( sub_1545() )) == 0))
                    {
                        SET_PED_CONSUMING_AMMO( sub_1523(), 1 );
                        SET_PED_PROOFS( sub_1523(), 0, 0, 0, 0, 0 );
                        SET_PED_INVINCIBLE( sub_1523(), 0 );
                        SET_CAN_ROLL_DODGE( sub_1523(), 1 );
                        SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1545(), 1 );
                        SET_PLAYER_CONTROL( sub_1545(), 0, 0 );
                        SET_PLAYER_CONTROL( sub_1545(), 1, 0 );
                        SET_PLAYER_FORCED_AIM( sub_1545(), 0, 0 );
                    }
                    ENABLE_CROSSHAIR( 0 );
                    DISPLAY_HUD( 1 );
                    ENABLE_MPM( 0 );
                    ENABLE_ALL_ADRENALINE( 1 );
                    sub_4474( g_U1430 );
                    sub_4553( l_U482 );
                    sub_19360( 1 );
                    sub_51772();
                    sub_52095();
                    sub_52251();
                    l_U919 = 1;
                    return 1;
                }
            }
        }
        break;
    }
    return 0;
}

void sub_32832()
{
    vector[3] vVar2;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int I;

    sub_1094( "SP", "P_SETUP_ENEMIES_IN_JEEP", 0 );
    array(ref vVar2, 3);
    vVar2[0] = {-0.47500000, -0.05000000, 0.27500000};
    vVar2[1] = {0.50000000, -0.10000000, 0.25000000};
    vVar2[2] = {0.50000000, -1.00000000, 0.30000000};
    for ( I = 0; I < l_U311; I++ )
    {
        if (((IS_VEHICLE_DEAD( g_U1432 )) == 0) AND ((DOES_VEHICLE_EXIST( g_U1432 )) == 1))
        {
            if (((IS_PED_DEAD( l_U311[I] )) == 0) AND ((DOES_PED_EXIST( l_U311[I] )) == 1))
            {
                SET_PED_HEALTH( l_U311[I], 500, 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U311[I], 1 );
                SET_PED_CAN_BE_TARGETTED( l_U311[I], 1 );
                SET_PED_AIM_LOCKONABLE( l_U311[I], 0 );
                SET_PED_DIES_WHEN_INJURED( l_U311[I], 0 );
                SET_PED_SUFFERS_CRITICAL_HITS( l_U311[I], 0 );
                SET_PED_AS_ONE_SHOT_KILL( l_U311[I], 0 );
                ATTACH_PED_TO_VEHICLE( l_U311[I], g_U1432, 0, vVar2[I], 0.00000000, 0.00000000, 0, 0, 0, 1 );
            }
            if (I == 0)
            {
                PED_ACTION_TREE_PLAY_NODE( l_U311[0], "/Global/S_OFF_DRIVER/DRIVER_DRIVEIN" );
            }
            else if (I == 1)
            {
                PED_ACTION_TREE_PLAY_NODE( l_U311[1], "/Global/S_OFF_PASSENGER/PASS_DRIVEIN" );
            }
            else if (I == 2)
            {
                PED_ACTION_TREE_PLAY_NODE( l_U311[2], "/Global/S_OFF_PASSENGER2/PASS_DRIVEIN" );
            };;;
        }
    }
    return;
}

void sub_33446()
{
    int I;

    sub_1094( "SP", "P_START_MPM_RAYFIRE", 0 );
    for ( I = 0; I < l_U490; I++ )
    {
        if ((DOES_OBJECT_EXIST( l_U490[I] )) == 1)
        {
            SET_OBJECT_ANIM_CURRENT_TIME( l_U490[I], l_U552[I], "of_lobby", l_U583[I] );
            SET_OBJECT_ANIM_SPEED( l_U490[I], l_U552[I], "of_lobby", 1.00000000 );
        }
    }
    return;
}

void sub_33633()
{
    int I;

    sub_1094( "SP", "P_CREATE_LOBBY_ENEMIES_WAVE_A", 0 );
    sub_33696( ref l_U224, 1056964608, 0 );
    for ( I = 0; I < l_U372; I++ )
    {
        sub_4474( l_U372[I] );
        l_U372[I] = sub_20339( ref l_U319[I] );
        if (((IS_PED_DEAD( l_U372[I] )) == 0) AND ((DOES_PED_EXIST( l_U372[I] )) == 1))
        {
            sub_33975( l_U372[I], ref l_U224 );
            FREEZE_PED_POSITION( l_U372[I], 1 );
            SET_PED_COLLISION( l_U372[I], 0 );
            SET_PED_COMBAT_MOVEMENT( l_U372[I], 1 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U372[I], 1 );
            SET_PED_COMBAT_ATTRIBUTES( l_U372[I], 1024, 1 );
            SET_PED_AS_ONE_SHOT_KILL( l_U372[I], 1 );
            SET_PED_HEALTH( l_U372[I], 280, 0 );
            sub_34375( ref l_U185, l_U372[I], 1 );
            sub_34375( ref l_U186, l_U372[I], 1 );
            if (I == 0)
            {
                sub_7967( l_U372[I], g_U1271, 25000, 0, 0 );
            }
            else if (I == 1)
            {
                sub_7967( l_U372[I], g_U1270, 25000, 0, 0 );
            }
            else if (I == 2)
            {
                sub_7967( l_U372[I], g_U1270, 25000, 0, 0 );
            }
            else if (I == 3)
            {
                sub_7967( l_U372[I], g_U1271, 25000, 0, 0 );
            };;;;
        }
    }
    sub_21212( ref l_U372, "piLobbyEnemiesWaveA_" );
    return;
}

void sub_33696(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_33975(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_7638( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_33696( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_33696( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_34375(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_34839()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1523() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1523(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1523(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1523(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1523(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

int sub_35462()
{
    if (l_U32)
    {
        sub_1094( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U32 = 0;
        return 1;
        break;
    }
    sub_1094( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

void sub_35824(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1094( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1094( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_8621( iParam1 );
        sub_36083( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_36534( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_36534( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_36766( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_36534( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_36766( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_36766( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_36534( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_36766( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_36766( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_36766( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_36534( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_36766( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_36766( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_36766( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_36766( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_38324( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1094( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_36083(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_5985( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1094( "TEH", "Ending context", 0 );
        sub_1094( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_36534(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_36766(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_38324(int iParam0)
{
    sub_7638( "CHECKPOINT DATA" );
    sub_38363( iParam0->_fU4 );
    sub_38386( iParam0->_fU16 );
    sub_38386( iParam0->_fU20 );
    sub_38386( iParam0->_fU24 );
    sub_38429( iParam0->_fU28 );
    sub_38429( iParam0->_fU56 );
    sub_38429( iParam0->_fU60 );
    sub_38429( iParam0->_fU64 );
    sub_38429( iParam0->_fU68 );
    sub_38429( iParam0->_fU72 );
    sub_38429( iParam0->_fU76 );
    sub_38429( iParam0->_fU80 );
    sub_38429( iParam0->_fU84 );
    sub_38429( iParam0->_fU88 );
    sub_38429( iParam0->_fU92 );
    sub_38386( iParam0->_fU32 );
    sub_38429( iParam0->_fU36 );
    sub_38429( iParam0->_fU40 );
    sub_38429( iParam0->_fU44 );
    sub_38386( iParam0->_fU136 );
    sub_38634( iParam0->_fU140 );
    sub_38429( iParam0->_fU52 );
    sub_7638( "---nRightHolsterAttachmentEnabled: " );
    sub_38429( iParam0->_fU96 );
    sub_7638( "---nRightHolsterAttachmentToggled: " );
    sub_38429( iParam0->_fU100 );
    sub_7638( "---nLeftHolsterAttachmentEnabled: " );
    sub_38429( iParam0->_fU104 );
    sub_7638( "---nLeftHolsterAttachmentToggled: " );
    sub_38429( iParam0->_fU108 );
    sub_7638( "---nRifleHolsterAttachmentEnabled: " );
    sub_38429( iParam0->_fU112 );
    sub_7638( "---nRifleHolsterAttachmentToggled: " );
    sub_38429( iParam0->_fU116 );
    sub_7638( "---nRightHandAttachmentEnabled: " );
    sub_38429( iParam0->_fU120 );
    sub_7638( "---nRightHandAttachmentToggled: " );
    sub_38429( iParam0->_fU124 );
    sub_7638( "---nLeftHandAttachmentEnabled: " );
    sub_38429( iParam0->_fU128 );
    sub_7638( "---nLeftHandAttachmentToggled: " );
    sub_38429( iParam0->_fU132 );
    sub_38429( l_U1 );
    sub_38429( 144 );
    return;
}

void sub_38363(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_38386(unknown uParam0)
{
    return;
}

void sub_38429(unknown uParam0)
{
    return;
}

void sub_38634(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_40100()
{
    sub_1094( "SP", "P_LOBBY_ENEMY_WAVE_A_MOVE_0", 0 );
    if (((IS_PED_DEAD( l_U372[0] )) == 0) AND ((DOES_PED_EXIST( l_U372[0] )) == 1))
    {
        sub_30827( l_U372[0], l_U395, l_U398 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U372[0], 1 );
        FREEZE_PED_POSITION( l_U372[0], 0 );
        SET_PED_COLLISION( l_U372[0], 1 );
        sub_34375( ref l_U185, l_U372[0], 1 );
        sub_34375( ref l_U186, l_U372[0], 1 );
        ISEQ_REGISTER_ENTITY( 1290764695, "mpm_UFE", l_U372[0], 0 );
        ISEQ_START( 1290764695 );
    }
    return;
}

void sub_40367()
{
    sub_1094( "SP", "P_LOBBY_ENEMY_WAVE_A_MOVE_1", 0 );
    if (((IS_PED_DEAD( l_U372[1] )) == 0) AND ((DOES_PED_EXIST( l_U372[1] )) == 1))
    {
        sub_30827( l_U372[1], l_U399, l_U402 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U372[1], 1 );
        FREEZE_PED_POSITION( l_U372[1], 0 );
        SET_PED_COLLISION( l_U372[1], 1 );
        sub_34375( ref l_U185, l_U372[1], 1 );
        sub_34375( ref l_U186, l_U372[1], 1 );
        ISEQ_REGISTER_ENTITY( -548128243, "mpm_UFE", l_U372[1], 0 );
        ISEQ_START( -548128243 );
    }
    return;
}

void sub_40618()
{
    sub_1094( "SP", "P_JEEP_ENEMIES_SHOOT", 0 );
    if (((IS_PED_DEAD( sub_1523() )) == 0) AND (((IS_VEHICLE_DEAD( g_U1432 )) == 0) AND ((DOES_VEHICLE_EXIST( g_U1432 )) == 1)))
    {
        if (((IS_PED_DEAD( l_U311[1] )) == 0) AND ((DOES_PED_EXIST( l_U311[1] )) == 1))
        {
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U311[1], 1 );
            TASK_SHOOT_AT_PED( l_U311[1], sub_1523(), -1, -256437761, 1, 1, 0 );
        }
        if (((IS_PED_DEAD( l_U311[2] )) == 0) AND ((DOES_PED_EXIST( l_U311[2] )) == 1))
        {
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U311[2], 1 );
            TASK_SHOOT_AT_PED( l_U311[2], sub_1523(), -1, -256437761, 1, 1, 0 );
        }
    }
    return;
}

void sub_40905()
{
    sub_1094( "SP", "P_LOBBY_ENEMY_WAVE_A_MOVE_2", 0 );
    if (((IS_PED_DEAD( l_U372[2] )) == 0) AND ((DOES_PED_EXIST( l_U372[2] )) == 1))
    {
        sub_30827( l_U372[2], l_U403, l_U406 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U372[2], 1 );
        FREEZE_PED_POSITION( l_U372[2], 0 );
        SET_PED_COLLISION( l_U372[2], 1 );
        sub_34375( ref l_U185, l_U372[2], 1 );
        sub_34375( ref l_U186, l_U372[2], 1 );
        ISEQ_REGISTER_ENTITY( 812276792, "mpm_UFE", l_U372[2], 0 );
        ISEQ_START( 812276792 );
    }
    return;
}

void sub_41172()
{
    sub_1094( "SP", "P_LOBBY_ENEMY_WAVE_A_MOVE_3", 0 );
    if (((IS_PED_DEAD( l_U372[3] )) == 0) AND ((DOES_PED_EXIST( l_U372[3] )) == 1))
    {
        sub_30827( l_U372[3], l_U407, l_U410 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U372[3], 1 );
        FREEZE_PED_POSITION( l_U372[3], 0 );
        SET_PED_COLLISION( l_U372[3], 1 );
        sub_34375( ref l_U185, l_U372[3], 1 );
        sub_34375( ref l_U186, l_U372[3], 1 );
        ISEQ_REGISTER_ENTITY( 1005679430, "mpm_UFE", l_U372[3], 0 );
        ISEQ_START( 1005679430 );
    }
    return;
}

void sub_41439()
{
    int I;
    unknown uVar3;
    unknown uVar4;

    sub_1094( "SP", "P_LOBBY_ENEMIES_WAVE_A_SHOOT_AT_PLAYER", 0 );
    for ( I = 0; I < l_U372; I++ )
    {
        if (((IS_PED_DEAD( sub_1523() )) == 0) AND (((IS_PED_DEAD( l_U372[I] )) == 0) AND ((DOES_PED_EXIST( l_U372[I] )) == 1)))
        {
            REGISTER_TARGET( l_U372[I], sub_1523() );
            SET_PED_DEFAULT_AIM_AT_PED( l_U372[I], sub_1523() );
            if (I == 0)
            {
                OPEN_SEQUENCE_TASK( ref uVar3 );
                TASK_SHOOT_AT_PED( 0, sub_1523(), 4000, 0, 0, 1, 0 );
                TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "36A681B_B2BB12C2_Corner1", sub_1523() );
                CLOSE_SEQUENCE_TASK( uVar3 );
                TASK_PERFORM_SEQUENCE( l_U372[I], uVar3 );
                CLEAR_SEQUENCE_TASK( uVar3 );
                SET_PED_SUGGESTED_COVER_POINT( l_U372[I], "GenCover", "36A681B_B2BB12C2_Corner1" );
            }
            else if (I == 1)
            {
                TASK_COMBAT_MOVE_TO_COVER( l_U372[I], "GenCover", "36A681B_6BF903F7_Popover1", sub_1523() );
                SET_PED_SUGGESTED_COVER_POINT( l_U372[I], "GenCover", "36A681B_6BF903F7_Popover1" );
            }
            else if (I == 2)
            {
                TASK_COMBAT_MOVE_TO_COVER( l_U372[I], "GenCover", "36A681B_D680D911_Popover3", sub_1523() );
                SET_PED_SUGGESTED_COVER_POINT( l_U372[I], "GenCover", "36A681B_D680D911_Popover3" );
            }
            else if (I == 3)
            {
                OPEN_SEQUENCE_TASK( ref uVar4 );
                TASK_SHOOT_AT_PED( 0, sub_1523(), 4000, 0, 0, 1, 0 );
                TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "36A681B_EB738302_Popover1", sub_1523() );
                CLOSE_SEQUENCE_TASK( uVar4 );
                TASK_PERFORM_SEQUENCE( l_U372[I], uVar4 );
                CLEAR_SEQUENCE_TASK( uVar4 );
                SET_PED_SUGGESTED_COVER_POINT( l_U372[I], "GenCover", "36A681B_EB738302_Popover1" );
            };;;;
        }
    }
    return;
}

void sub_42279(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_42711()
{
    sub_1094( "SP", "P_CREATE_LOBBY_WALL_BLOCKER", 0 );
    sub_4553( g_U1450 );
    g_U1450 = sub_21416( g_U1449, 22.52900000, -34.21800000, -0.90000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U1450 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1450, ref g_U1157 );
        FREEZE_OBJECT_POSITION( g_U1450, 1 );
    }
    return;
}

void sub_42929()
{
    sub_1094( "SP", "P_LIMIT_PLAYER_CONTROLS", 0 );
    if (((IS_PLAYER_DEAD( sub_1545() )) == 0) AND ((IS_PED_DEAD( sub_1523() )) == 0))
    {
        SET_PLAYER_CONTROL( sub_1545(), 1, 0 );
        SET_PLAYER_CONTROL( sub_1545(), 0, 0 );
        REENABLE_PLAYER_INPUT( 4 );
        REENABLE_PLAYER_INPUT( 6 );
        REENABLE_PLAYER_INPUT( 14 );
        REENABLE_PLAYER_INPUT( 15 );
        REENABLE_PLAYER_INPUT( 16 );
        REENABLE_PLAYER_INPUT( 17 );
    }
    return;
}

void sub_44141()
{
    sub_1094( "SP", "P_SETUP_ENEMIES_IN_JEEP_FAIL", 0 );
    if (((IS_VEHICLE_DEAD( g_U1432 )) == 0) AND ((DOES_VEHICLE_EXIST( g_U1432 )) == 1))
    {
        if (((IS_PED_DEAD( l_U311[0] )) == 0) AND ((DOES_PED_EXIST( l_U311[0] )) == 1))
        {
            if (l_U315[0] == 0)
            {
                PED_ACTION_TREE_PLAY_NODE( l_U311[0], "/Global/S_OFF_DRIVER_FAIL" );
                ATTACH_PED_TO_VEHICLE( l_U311[0], g_U1432, 0, l_U935, 0.00000000, 0.00000000, 0, 0, 0, 1 );
            }
        }
        if (((IS_PED_DEAD( l_U311[1] )) == 0) AND ((DOES_PED_EXIST( l_U311[1] )) == 1))
        {
            if (l_U315[1] == 0)
            {
                PED_ACTION_TREE_PLAY_NODE( l_U311[1], "/Global/S_OFF_PASSENGER_FAIL" );
                ATTACH_PED_TO_VEHICLE( l_U311[1], g_U1432, 0, l_U938, 0.00000000, 0.00000000, 0, 0, 0, 1 );
            }
        }
        if (((IS_PED_DEAD( l_U311[2] )) == 0) AND ((DOES_PED_EXIST( l_U311[2] )) == 1))
        {
            if (l_U315[2] == 0)
            {
                PED_ACTION_TREE_PLAY_NODE( l_U311[2], "/Global/S_OFF_PASSENGER2_FAIL" );
                ATTACH_PED_TO_VEHICLE( l_U311[2], g_U1432, 0, l_U941, 0.00000000, 0.00000000, 0, 0, 0, 1 );
            }
        }
    }
    return;
}

void sub_44820(unknown uParam0, boolean bParam1)
{
    sub_4119( ref l_U33 );
    l_U33 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U33, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

void sub_45237()
{
    vector[7] vVar2;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    string[7] sVar24;
    int I;

    sub_1094( "SP", "P_CREATE_DESK_FAIL_RAYFIRE", 0 );
    array(ref vVar2, 7);
    vVar2[0] = {23.30000000, -2.15400000, -0.19800000};
    vVar2[1] = {23.43100000, -2.15400000, -0.19800000};
    vVar2[2] = {23.56800000, -2.15400000, -0.19800000};
    vVar2[3] = {23.71000000, -2.15400000, -0.19800000};
    vVar2[4] = {23.22400000, 4.62800000, 2.03300000};
    vVar2[5] = {23.56800000, -2.15400000, -0.32400000};
    vVar2[6] = {23.56800000, -2.15400000, -0.45800000};
    array(ref sVar24, 7);
    sVar24[0] = "RFFL_DSK_ROOTA";
    sVar24[1] = "RFFL_DSKWD_ROOTA";
    sVar24[2] = "RFFL_DSKGLS_ROOTA";
    sVar24[3] = "RFFL_DSKPRP_ROOTA";
    sVar24[4] = "RF_BRSGN_01";
    sVar24[5] = "RFFL_DSKGLS_ROOTB";
    sVar24[6] = "RFFL_DSKGLS_ROOTC";
    for ( I = 0; I < l_U624; I++ )
    {
        sub_4553( l_U616[I] );
        l_U616[I] = sub_21416( l_U624[I], vVar2[I], 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U616[I] ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U616[I], ref g_U1157 );
            PLAY_OBJECT_ANIM( l_U616[I], sVar24[I], "of_lobby", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_SPEED( l_U616[I], sVar24[I], "of_lobby", 1.00000000 );
        }
    }
    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "OF_Desk_Expl_S", 23.30000000, -2.15400000, -0.19800000, 0.00000000, 0.00000000, 0.00000000, 1.00000000 );
    return;
}

void sub_46006()
{
    sub_1094( "SP", "P_KILL_SECRETARY", 0 );
    if (((IS_PED_DEAD( g_U1430 )) == 0) AND ((DOES_PED_EXIST( g_U1430 )) == 1))
    {
        FREEZE_PED_POSITION( g_U1430, 0 );
        SET_PED_CAN_BE_TARGETTED( g_U1430, 0 );
        SET_PED_AIM_LOCKONABLE( g_U1430, 0 );
        SET_PED_PROOFS( g_U1430, 1, 1, 1, 1, 1 );
        SET_PED_INVINCIBLE( g_U1430, 0 );
        SET_PED_TO_RAGDOLL( g_U1430, 0, 1000, 0, 0, 0, 1, -1056964608 );
        SET_PED_HEALTH( g_U1430, 0, 0 );
        SET_PED_CORPSE( g_U1430, 1 );
    }
    return;
}

void sub_47012()
{
    vector[9] vVar2;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    int I;

    sub_1094( "SP", "P_CREATE_DESK_PASS_RAYFIRE", 0 );
    array(ref vVar2, 9);
    vVar2[0] = {23.30000000, -2.15400000, -0.19800000};
    vVar2[1] = {23.43100000, -2.15400000, -0.19800000};
    vVar2[2] = {23.56800000, -2.15400000, -0.19800000};
    vVar2[3] = {23.71000000, -2.15400000, -0.19800000};
    vVar2[4] = {23.56800000, -2.15400000, -0.19800000};
    vVar2[5] = {23.56800000, -2.15400000, -0.19800000};
    vVar2[6] = {23.56800000, -2.15400000, -0.19800000};
    vVar2[7] = {23.56800000, -2.15400000, -0.19800000};
    vVar2[8] = {23.56800000, -2.15400000, -0.19800000};
    for ( I = 0; I < l_U632; I++ )
    {
        sub_4553( l_U632[I] );
        l_U632[I] = sub_19608( l_U642[I], vVar2[I], 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if ((DOES_OBJECT_EXIST( l_U632[I] )) == 1)
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U632[I], ref g_U1157 );
            if (I >= 4)
            {
                PLAY_OBJECT_ANIM( l_U632[I], l_U652[I], "of_lobby", 0.10000000, 0, 1 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U632[I], l_U652[I], "of_lobby", 0.00100000 );
                SET_OBJECT_ANIM_SPEED( l_U632[I], l_U652[I], "of_lobby", 0.00000000 );
            }
        }
    }
    return;
}

void sub_47565()
{
    int I;

    sub_1094( "SP", "P_START_DESK_PASS_RAYFIRE", 0 );
    for ( I = 4; I <= (l_U632 - 1); I++ )
    {
        if ((DOES_OBJECT_EXIST( l_U632[I] )) == 1)
        {
            PLAY_OBJECT_ANIM( l_U632[I], l_U652[I], "of_lobby", 0.10000000, 0, 1 );
            SET_OBJECT_ANIM_SPEED( l_U632[I], l_U652[I], "of_lobby", 1.00000000 );
        }
    }
    return;
}

void sub_47890()
{
    int I;

    sub_1094( "SP", "P_SETUP_LOBBY_JEEP_CRASH_BODIES", 0 );
    for ( I = 0; I < l_U311; I++ )
    {
        sub_4474( l_U311[I] );
        l_U311[I] = sub_20339( ref l_U271[I] );
        if (((IS_PED_DEAD( l_U311[I] )) == 0) AND ((DOES_PED_EXIST( l_U311[I] )) == 1))
        {
            SET_PED_CORPSE_FROM_ANIM( l_U311[I], "DAM_DEAD", "MED_DEAD_POSE_FRONT_01", 0.00000000, 1 );
        }
    }
    return;
}

void sub_48137()
{
    int I;

    sub_1094( "SP", "P_CREATE_LOBBY_ENEMIES_WAVE_B", 0 );
    for ( I = 0; I < l_U464; I++ )
    {
        sub_4474( l_U464[I] );
        l_U464[I] = sub_20339( ref l_U411[I] );
        if (((IS_PED_DEAD( l_U464[I] )) == 0) AND ((DOES_PED_EXIST( l_U464[I] )) == 1))
        {
            sub_33975( l_U464[I], ref l_U224 );
            FREEZE_PED_POSITION( l_U464[I], 1 );
            SET_PED_VISIBLE( l_U464[I], 0 );
            SET_PED_CAN_RAGDOLL( l_U464[I], 0 );
            SET_PED_COMBAT_MOVEMENT( l_U464[I], 1 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U464[I], 1 );
            SET_PED_COMBAT_ATTRIBUTES( l_U464[I], 1024, 1 );
            SET_CAN_AI_KICK_THROUGH_CORPSES( l_U464[I], 1 );
            "[doubled result, dropped if not asigned]";
            "[doubled result, dropped if not asigned]";
            SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U464[I], 1 );
            SET_PED_ALERTNESS( l_U464[I], 4 );
            SET_PED_HEALTH( l_U464[I], 280, 0 );
            sub_34375( ref l_U185, l_U464[I], 1 );
            sub_34375( ref l_U186, l_U464[I], 1 );
            if (I == 0)
            {
                sub_7967( l_U464[I], g_U1271, 25000, 0, 0 );
            }
            else if (I == 1)
            {
                sub_7967( l_U464[I], g_U1269, 25000, 0, 0 );
            }
            else if (I == 2)
            {
                sub_7967( l_U464[I], g_U1271, 25000, 0, 0 );
            }
            else if (I == 3)
            {
                sub_7967( l_U464[I], g_U1270, 25000, 0, 0 );
            };;;;
        }
    }
    sub_21212( ref l_U464, "piLobbyEnemiesWaveB_" );
    return;
}

void sub_48878(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_48956()
{
    vector[4] vVar2;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    float[4] fVar15;
    int I;

    sub_1094( "SP", "P_ACTIVATE_LOBBY_ENEMIES_WAVE_B", 0 );
    array(ref vVar2, 4);
    vVar2[0] = {22.68920000, -37.05260000, 0.39000000};
    vVar2[1] = {22.13060000, -36.55390000, 0.39000000};
    vVar2[2] = {23.60810000, -37.13970000, 0.39000000};
    vVar2[3] = {23.66560000, -37.74290000, 0.42300000};
    array(ref fVar15, 4);
    fVar15[0] = 0.00000000;
    fVar15[1] = 0.00000000;
    fVar15[2] = 0.00000000;
    fVar15[3] = 0.00000000;
    for ( I = 0; I < l_U464; I++ )
    {
        if (((IS_PED_DEAD( l_U464[I] )) == 0) AND ((DOES_PED_EXIST( l_U464[I] )) == 1))
        {
            sub_30827( l_U464[I], vVar2[I], fVar15[I] );
        }
    }
    ISEQ_REGISTER_ENTITY( 1321278157, "enemy0", l_U464[0], 0 );
    ISEQ_REGISTER_ENTITY( 1321278157, "enemy1", l_U464[1], 0 );
    ISEQ_REGISTER_ENTITY( 1321278157, "enemy2", l_U464[2], 0 );
    ISEQ_REGISTER_ENTITY( 1321278157, "enemy3", l_U464[3], 0 );
    ISEQ_START( 1321278157 );
    return;
}

void sub_49589()
{
    int I;

    sub_1094( "SP", "P_LOBBY_ENEMIES_WAVE_B_GIVE_TASKS", 0 );
    for ( I = 0; I < l_U464; I++ )
    {
        if (((IS_PED_DEAD( l_U464[I] )) == 0) AND ((DOES_PED_EXIST( l_U464[I] )) == 1))
        {
            FREEZE_PED_POSITION( l_U464[I], 0 );
            SET_PED_CAN_RAGDOLL( l_U464[I], 1 );
            CLEAR_PED_TASKS( l_U464[I] );
            if (I == 0)
            {
                TASK_COMBAT_MOVE_TO_COVER( l_U464[I], "GenCover", "36A681B_7539FBC9_Corner2", sub_1523() );
                SET_PED_SUGGESTED_COVER_POINT( l_U464[I], "GenCover", "36A681B_7539FBC9_Corner2" );
                SET_PED_FLAG_LOCK_TO_COVER( l_U464[I], 1 );
            }
            else if (I == 1)
            {
                TASK_COMBAT_MOVE_TO_COVER( l_U464[I], "GenCover", "36A681B_6BF903F7_Corner2", sub_1523() );
                SET_PED_SUGGESTED_COVER_POINT( l_U464[I], "GenCover", "36A681B_6BF903F7_Corner2" );
                SET_PED_FLAG_LOCK_TO_COVER( l_U464[I], 1 );
            }
            else if (I == 2)
            {
                TASK_COMBAT_PED( l_U464[I], sub_1523() );
            }
            else if (I == 3)
            {
                TASK_COMBAT_MOVE_TO_COVER( l_U464[I], "GenCover", "36A681B_D680D911_Corner1", sub_1523() );
                SET_PED_SUGGESTED_COVER_POINT( l_U464[I], "GenCover", "36A681B_D680D911_Corner1" );
                SET_PED_FLAG_LOCK_TO_COVER( l_U464[I], 1 );
            };;;;
        }
    }
    return;
}

void sub_50585()
{
    vector[3] vVar2;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int I;

    sub_1094( "SP", "P_CREATE_LOBBY_BROKEN_DESK", 0 );
    array(ref vVar2, 3);
    vVar2[0] = {23.29300000, -2.15400000, -0.19800000};
    vVar2[1] = {23.43100000, -2.15400000, -0.19800000};
    vVar2[2] = {23.56800000, -2.15400000, -0.19800000};
    for ( I = 0; I < g_U1441; I++ )
    {
        sub_4553( g_U1437[I] );
        g_U1437[I] = sub_19608( g_U1441[I], vVar2[I], 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( g_U1437[I] ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1437[I], ref g_U1157 );
            FREEZE_OBJECT_POSITION( g_U1437[I], 1 );
        }
    }
    return;
}

void sub_51772()
{
    vector vVar2;
    float fVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;

    sub_1094( "SP", "P_SETUP_RECEPTIONIST", 0 );
    vVar2 = {22.22000000, 0.23000000, -0.00000000};
    fVar5 = -120.00000000;
    sub_11992( ref uVar6, vVar2, fVar5, 1278052404, 26, 6, 0, 0, 1 );
    sub_4474( g_U1430 );
    g_U1430 = sub_20339( ref uVar6 );
    if (((IS_PED_DEAD( g_U1430 )) == 0) AND ((DOES_PED_EXIST( g_U1430 )) == 1))
    {
        SET_ROOM_FOR_PED_BY_NAME( g_U1430, ref g_U1157 );
        sub_51940( g_U1430 );
    }
    return;
}

void sub_51940(unknown uParam0)
{
    sub_1094( "SP", "P_SETUP_DEAD_PED", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, "DAM_DEAD", "MED_DEAD_POSE_FRONT_01", 1.00000000, 1 );
    }
    return;
}

void sub_52095()
{
    int I;

    sub_1094( "SP", "P_DISABLE_ONE_SHOT_KILL_ON_EVERYONE", 0 );
    I = 0;
    for ( I = 0; I < l_U372; I++ )
    {
        if (((IS_PED_DEAD( l_U372[I] )) == 0) AND ((DOES_PED_EXIST( l_U372[I] )) == 1))
        {
            SET_PED_AS_ONE_SHOT_KILL( l_U372[I], 0 );
        }
    }
    return;
}

void sub_52251()
{
    int I;

    sub_1094( "SP", "P_REMOVE_TETHERS_FROM_ENEMIES", 0 );
    for ( I = 0; I < l_U372; I++ )
    {
        if (((IS_PED_DEAD( l_U372[I] )) == 0) AND ((DOES_PED_EXIST( l_U372[I] )) == 1))
        {
            sub_52375( ref l_U185, l_U372[I] );
            sub_52375( ref l_U186, l_U372[I] );
        }
    }
    for ( I = 0; I < l_U464; I++ )
    {
        if (((IS_PED_DEAD( l_U464[I] )) == 0) AND ((DOES_PED_EXIST( l_U464[I] )) == 1))
        {
            sub_52375( ref l_U185, l_U464[I] );
            sub_52375( ref l_U186, l_U464[I] );
        }
    }
    return;
}

void sub_52375(int iParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_REMOVE_BOX( uParam1, iParam0->_fU0 );
    }
    return;
}

void sub_52898(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_53033()
{
    int I;

    for ( I = 0; I < l_U372; I++ )
    {
        if (((IS_PED_DEAD( l_U372[I] )) == 0) AND ((DOES_PED_EXIST( l_U372[I] )) == 1))
        {
            if (((sub_25429( l_U372[I], l_U143 )) == 1) || (((sub_25429( l_U372[I], l_U122 )) == 1) || ((sub_25429( l_U372[I], l_U101 )) == 1)))
            {
                sub_48878( l_U372[I] );
            }
        }
    }
    for ( I = 0; I < l_U464; I++ )
    {
        if (((IS_PED_DEAD( l_U464[I] )) == 0) AND ((DOES_PED_EXIST( l_U464[I] )) == 1))
        {
            if (((sub_25429( l_U464[I], l_U143 )) == 1) || (((sub_25429( l_U464[I], l_U122 )) == 1) || ((sub_25429( l_U464[I], l_U101 )) == 1)))
            {
                sub_48878( l_U464[I] );
            }
        }
    }
    return;
}

void sub_53379()
{
    int I;

    sub_1094( "SP", "P_START_LOBBY_ENEMIES_AGRESSIVE_ADVANCE", 0 );
    l_U230 = PEDGROUPTASK_ADVANCE_CREATE( l_U224._fU0 );
    PEDGROUPTASK_ADVANCE_SETTARGET_PED( l_U224._fU0, l_U230, sub_1523() );
    PEDGROUPTASK_ADVANCE_SETNUMPEDSTOADVANCE( l_U224._fU0, l_U230, 1 );
    PEDGROUPTASK_ADVANCE_SETTIMETOIDLE( l_U224._fU0, l_U230, 3 );
    PEDGROUPTASK_ADVANCE_SETTIMETOHIDE( l_U224._fU0, l_U230, 2 );
    PEDGROUPTASK_ADVANCE_SETADVANCEDISTANCE( l_U224._fU0, l_U230, 10.00000000 );
    for ( I = 0; I < l_U372; I++ )
    {
        if (((IS_PED_DEAD( l_U372[I] )) == 0) AND ((DOES_PED_EXIST( l_U372[I] )) == 1))
        {
            REGISTER_TARGET( l_U372[I], sub_1523() );
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U224._fU0, l_U230, l_U372[I] );
            PEDGROUPTASK_ADVANCE_SETPEDCANADVANCE( l_U224._fU0, l_U230, l_U372[I], 1 );
        }
    }
    for ( I = 0; I < l_U464; I++ )
    {
        if (((IS_PED_DEAD( l_U464[I] )) == 0) AND ((DOES_PED_EXIST( l_U464[I] )) == 1))
        {
            REGISTER_TARGET( l_U464[I], sub_1523() );
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U224._fU0, l_U230, l_U464[I] );
            PEDGROUPTASK_ADVANCE_SETPEDCANADVANCE( l_U224._fU0, l_U230, l_U464[I], 1 );
        }
    }
    PEDGROUPTASK_ADVANCE_TRIGGER_MOVE( l_U224._fU0, l_U230 );
    return;
}

void sub_53929()
{
    unknown Result;

    if (((sub_31506( ref l_U372 )) + (sub_31506( ref l_U464 ))) == 1)
    {
        Result = sub_53969( ref l_U372 );
        if (((IS_PED_DEAD( Result )) == 0) AND ((DOES_PED_EXIST( Result )) == 1))
        {
            return Result;
        }
        Result = sub_53969( ref l_U464 );
        if (((IS_PED_DEAD( Result )) == 0) AND ((DOES_PED_EXIST( Result )) == 1))
        {
            return Result;
        }
    }
    return Result;
}

void sub_53969(unknown uParam0)
{
    int I;

    if ((sub_31506( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_54639()
{
    int I;

    sub_1094( "NS", "P_UNLOAD_ASSETS", 0 );
    sub_54710( "Level/S_OFFICE/S_OFF_MPM_DRVR" );
    sub_54710( "Level/S_OFFICE/S_OFF_MPM_PASGR" );
    sub_54710( "Level/S_OFFICE/S_OFF_MPM_PASG2" );
    sub_54710( "Level/S_OFFICE/S_OFF_MPM_DRVR_FAIL" );
    sub_54710( "Level/S_OFFICE/S_OFF_MPM_PASGR_FAIL" );
    sub_54710( "Level/S_OFFICE/S_OFF_MPM_PASG2_FAIL" );
    for ( I = 0; I < l_U490; I++ )
    {
        sub_19424( l_U521[I] );
    }
    for ( I = 0; I < l_U632; I++ )
    {
        sub_19424( l_U642[I] );
    }
    for ( I = 0; I < l_U616; I++ )
    {
        sub_19424( l_U624[I] );
    }
    for ( I = 0; I < g_U1437; I++ )
    {
        sub_19424( g_U1441[I] );
    }
    sub_19424( g_U1445 );
    sub_19424( g_U1447 );
    sub_19424( 667387145 );
    sub_19424( 906305924 );
    sub_19424( -2046475901 );
    sub_19424( -1689555953 );
    sub_55177( "of_lobby" );
    sub_55177( "of_objmodels" );
    sub_55228( 159 );
    sub_55228( 160 );
    return;
}

void sub_54710(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}

void sub_55177(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_55228(unknown uParam0)
{
    REMOVE_VEHICLE_RECORDING( uParam0 );
    return;
}


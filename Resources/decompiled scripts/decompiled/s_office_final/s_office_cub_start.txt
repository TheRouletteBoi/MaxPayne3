void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U3 = 0;
    l_U4 = 0;
    l_U5 = 1500;
    StrCopy( ref l_U15, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U23, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U32 = 0;
    l_U88 = 0;
    l_U89 = 0;
    l_U90 = 0;
    l_U91 = -1;
    l_U92 = 0;
    l_U93 = 0;
    l_U94 = 0;
    l_U223 = 0;
    l_U224 = 0;
    l_U225 = 0;
    l_U226 = 0;
    l_U227 = 0;
    l_U228 = 0;
    l_U229 = 0;
    l_U230 = 0;
    l_U351 = 0;
    l_U353 = {-15.15000000, 37.39500000, 4.90000000};
    l_U356 = 180.00000000;
    l_U357 = {-14.90100000, 24.91100000, 4.90000000};
    l_U360 = -45.00000000;
    l_U361 = {-13.31400000, 28.87200000, 4.90000000};
    l_U364 = 90.00000000;
    l_U365 = {-13.31100000, 31.94700000, 4.90000000};
    l_U368 = 135.00000000;
    l_U369 = {-14.61400000, 21.75800000, 4.90000000};
    l_U372 = 90.00000000;
    l_U373 = {-25.77500000, 27.96200000, 4.79900000};
    l_U376 = 178.20000000;
    l_U491 = {-21.66915000, 29.86693000, 4.90041800};
    l_U494 = 0.00000000;
    l_U495 = 0;
    l_U496 = 1300;
    l_U506 = 1400;
    l_U507 = -89.10651000;
    l_U508 = -6.17187700;
    StrCopy( ref l_U509, "S_OFFICE_CUBICLES_FAIL", 32 );
    l_U518 = 0;
    sub_552( "SP", "Script s_office_cub_start.sc is starting...", 0 );
    l_U89 = 1;
    while (IS_EXITFLAG_SET() == 0)
    {
        sub_621();
        if (l_U90 == 0)
        {
            sub_13172();
        }
        WAIT( 0 );
    }
    sub_8467();
    sub_34798();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_office_cub_start" );
    SET_EXITFLAG_RESPONSE();
    sub_552( "SP", "Script s_office_cub_start.sc is terminating...", 0 );
    return;
}

void sub_552(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_621()
{
    switch (l_U90)
    {
        case 0:
        if (g_U706 == 3)
        {
            if (sub_719() == 1)
            {
                DO_SCREEN_FADE_OUT( 0 );
                l_U90 = 5;
                sub_552( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            if (l_U89 == 10)
            {
                if (((sub_1437( l_U95 )) == 0) AND ((sub_1288( ref l_U137, 0 )) == 1))
                {
                    l_U93 = 1;
                    l_U90 = 2;
                    sub_552( "SP", "eFailState = FAIL_HANDLE_PLAYER_ABANDONED_IT_GUY", 0 );
                }
            }
            if (((IS_PED_DEAD( g_U1424 )) == 1) AND ((DOES_PED_EXIST( g_U1424 )) == 1))
            {
                sub_552( "SP", "Mission Failed: IT Guy Died.", 0 );
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                l_U90 = 1;
                sub_552( "SP", "eFailState = FAIL_HANDLE_IT_GUY_KILLED", 0 );
            }
            if ((IS_PED_DEAD( sub_991() )) == 1)
            {
                sub_552( "SP", "Mission Failed: Player died.", 0 );
                l_U90 = 3;
                sub_552( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
        }
        else if ((sub_1859() == 1) || ((((IS_PED_DEAD( g_U1424 )) == 1) AND ((DOES_PED_EXIST( g_U1424 )) == 1)) || ((IS_PED_DEAD( sub_991() )) == 1)))
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "mid_03_office_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "mid_03_office_concat" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "mid_03_office_concat" );
            }
            sub_1997( ref g_U708[3] );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        break;
        case 1:
        if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
        {
            AUDIO_MUSIC_SUSPEND( 5000 );
            l_U90 = 3;
            sub_552( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        }
        break;
        case 2:
        if (sub_2136() == 1)
        {
            l_U90 = 4;
            sub_552( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
            break;
        }
        return;
        case 3:
        if ((sub_6815( 0 )) == 1)
        {
            l_U90 = 4;
            sub_552( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        }
        break;
        case 4:
        sub_552( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_PED_DEAD( sub_991() )) == 0))
        {
            if ((IS_PLAYER_DEAD( sub_1013() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_1013(), 0, 0 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            l_U90 = 5;
            sub_552( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        break;
        case 5:
        sub_552( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        sub_4586( 1, 0, 0, 1 );
        CLEAR_HELP();
        CLEAR_PRINTS();
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        if ((IS_PED_DEAD( sub_991() )) == 0)
        {
            PED_ACTION_TREE_PLAY_NODE( sub_991(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        }
        sub_2498( g_U1424 );
        sub_8372( ref g_U1425 );
        sub_8467();
        if (((CUTSCENE_NAMED_IS_LOADING( "mid_03_office_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "mid_03_office_concat" )) == 1))
        {
            CLEAR_NAMED_CUTSCENE( "mid_03_office_concat" );
        }
        l_U90 = 6;
        sub_552( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        break;
        case 6:
        sub_552( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        sub_9271( ref l_U34, sub_991() );
        l_U90 = 7;
        sub_552( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        break;
        case 7:
        sub_552( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        l_U89 = 1;
        l_U90 = 0;
        sub_552( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        break;
    }
    return;
}

int sub_719()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_991() )))
        {
            SET_PED_FORCED_TO_WALK( sub_991(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1013(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1013(), 1 );
            if ((IS_PED_VISIBLE( sub_991() )) == 0)
            {
                SET_PED_VISIBLE( sub_991(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

int sub_991()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1013() );
    }
    return 0;
}

void sub_1013()
{
    return GET_PLAYER_ID();
}

void sub_1288(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_1330( sub_991(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_1330(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_1437(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_1330( sub_991(), uParam0 );
}

void sub_1859()
{
    return g_U648;
}

void sub_1997(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_2136()
{
    vector vVar2;
    float fVar5;
    vector vVar6;
    float fVar9;
    int iVar10;
    vector vVar11;
    vector vVar14;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;

    vVar2 = {-25.80268000, 27.97048000, 4.92039400};
    fVar5 = 0.00000000;
    vVar6 = {-20.29028000, 23.61852000, 4.90048200};
    fVar9 = 0.00000000;
    iVar10 = 5250;
    vVar11 = {-25.68000000, 30.63000000, 6.65000000};
    vVar14 = {0.20000000, -0.10000000, 0.00000000};
    switch (l_U93)
    {
        case 0: break;
        case 1:
        sub_552( "SP", "eMid04FailNISState = NIS_START", 0 );
        sub_2363( ref uVar17, vVar2, fVar5, 403784285, 26, 6, 0, 0, 0 );
        sub_2363( ref uVar30, vVar6, fVar9, -362115078, 7, 3, 2, 0, 0 );
        sub_2498( l_U489 );
        l_U489 = sub_2574( ref uVar17 );
        if (((IS_PED_DEAD( l_U489 )) == 0) AND ((DOES_PED_EXIST( l_U489 )) == 1))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U489, ref g_U1133 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U489, 1 );
            SET_PED_VISIBLE( l_U489, 0 );
            SET_PED_COLLISION( l_U489, 0 );
            SET_PED_INVINCIBLE( l_U489, 1 );
            SET_PED_PROOFS( l_U489, 1, 1, 1, 1, 1 );
        }
        sub_2498( l_U490 );
        l_U490 = sub_2574( ref uVar30 );
        if (((IS_PED_DEAD( l_U490 )) == 0) AND ((DOES_PED_EXIST( l_U490 )) == 1))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U490, ref g_U1141 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U490, 1 );
            SET_PED_VISIBLE( l_U490, 0 );
            SET_PED_COLLISION( l_U490, 0 );
            SET_PED_INVINCIBLE( l_U490, 1 );
            SET_PED_PROOFS( l_U490, 1, 1, 1, 1, 1 );
            sub_3678( l_U490, g_U1270, 25000, 0, 0 );
        }
        ISEQ_REGISTER_ENTITY( -1170267864, "ITGuy", l_U489, 0 );
        ISEQ_REGISTER_ENTITY( -1170267864, "enemy", l_U490, 0 );
        ISEQ_START( -1170267864 );
        l_U93 = 2;
        sub_552( "SP", "eMid04FailNISState = NIS_FIRST_FRAME", 0 );
        break;
        case 2:
        sub_552( "SP", "eMid04FailNISState = NIS_FIRST_FRAME", 0 );
        ISEQ_UNREGISTER_ENTITY( -1870337929, "itGuy" );
        ISEQ_TERMINATE( -1870337929 );
        sub_2498( g_U1424 );
        if (((IS_PED_DEAD( l_U489 )) == 0) AND ((DOES_PED_EXIST( l_U489 )) == 1))
        {
            SET_PED_COLLISION( l_U489, 1 );
        }
        if (((IS_PED_DEAD( l_U490 )) == 0) AND ((DOES_PED_EXIST( l_U490 )) == 1))
        {
            SET_PED_COLLISION( l_U490, 1 );
        }
        l_U93 = 3;
        sub_552( "SP", "eMid04FailNISState = NIS_SECOND_FRAME", 0 );
        break;
        case 3:
        sub_552( "SP", "eMid04FailNISState = NIS_SECOND_FRAME", 0 );
        sub_4430( ref l_U343 );
        if (((IS_PED_DEAD( l_U489 )) == 0) AND ((DOES_PED_EXIST( l_U489 )) == 1))
        {
            SET_PED_VISIBLE( l_U489, 1 );
        }
        if (((IS_PED_DEAD( l_U490 )) == 0) AND ((DOES_PED_EXIST( l_U490 )) == 1))
        {
            SET_PED_VISIBLE( l_U490, 1 );
        }
        sub_4586( 1, 0, 0, 1 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_OFFICE_CP_02", "MID_04_OFFICE_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        PLAY_SCRIPT_STREAM_FRONTEND( 1 );
        sub_4835( ref l_U422, 2000, 1, 0 );
        sub_4971( ref l_U422 );
        sub_4835( ref l_U431, iVar10, 1, 0 );
        sub_4971( ref l_U431 );
        sub_4835( ref l_U440, 6500, 1, 0 );
        sub_4971( ref l_U440 );
        l_U93 = 4;
        sub_552( "SP", "eMid04FailNISState = NIS_PLAYING", 0 );
        break;
        case 4:
        if ((sub_5194( ref l_U422 )) == 1)
        {
            sub_5366( ref l_U479 );
            sub_5448( 0, sub_991(), "MAX", ref l_U479, 2, 0 );
            sub_5448( 1, l_U489, "M6_Offi_Tech_Avg_01", ref l_U479, 2, 0 );
            sub_5448( 2, l_U490, "M6_CP_12_AVG", ref l_U479, 2, 0 );
            sub_5739( "SOFF_MID04FFC", ref l_U479, 8, 1 );
        }
        if ((sub_5194( ref l_U431 )) == 1)
        {
            if (((IS_PED_DEAD( l_U489 )) == 0) AND ((DOES_PED_EXIST( l_U489 )) == 1))
            {
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( vVar11, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U489, 14989, vVar14 ), 100, 1, g_U1270, 0 );
            }
        }
        if (NOT l_U518)
        {
            if (NOT (IS_BULLET_CAMERA_SCENE_ACTIVE( l_U517 )))
            {
                sub_552( "SA", "calling death panel", 0 );
                l_U517 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
                RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
                SETUP_BULLET_CAMERA_ANIM_SCENE( l_U517, l_U489, l_U489 );
            }
            else
            {
                sub_552( "SA", "starting death panel", 0 );
                l_U518 = 1;
            }
        }
        if ((l_U440._fU16 == 1) || ((sub_5194( ref l_U440 )) == 1))
        {
            if ((sub_6815( 0 )) == 1)
            {
                l_U32 = 1;
                sub_2498( l_U489 );
                sub_2498( l_U490 );
                AUDIO_MUSIC_SUSPEND( 500 );
                STOP_SCRIPT_STREAM( 1 );
                if (IS_ANIMATED_CAMERA_PLAYING() == 1)
                {
                    CAMERA_ANIMATED_STOP( 0, 0 );
                }
                l_U93 = 0;
                sub_552( "SP", "eMid04FailNISState = NIS_IDLE", 0 );
                return 1;
            }
        }
        break;
    }
    return 0;
}

void sub_2363(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_2498(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_2574(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_2744( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_3226( iParam0->_fU40 );
    sub_3306( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_2744(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_2849( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_2849(unknown uParam0)
{
    return;
}

void sub_3226(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_3306(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_3678(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_2849( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_4430(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_2498( (uParam0^)[I] );
    }
    return;
}

void sub_4586(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_991() )))
        {
            SET_PLAYER_CONTROL( sub_1013(), 0, uParam2 );
            SET_PED_DUCKING( sub_991(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_991() );
            }
            SET_PED_INVINCIBLE( sub_991(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_4835(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_4971(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_5194(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_5366(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_5448(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_5739(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_5763( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_5763(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_5818( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_5818(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_5853( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_6347( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_5853(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_6347(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_6815(int iParam0)
{
    iParam0 = 1;
    switch (l_U4)
    {
        case 0:
        if (NOT (sub_6872( ref l_U6 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_991() )))
            {
                l_U5 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_4835( ref l_U6, l_U5, 1, 1 );
            sub_4971( ref l_U6 );
        }
        if (sub_5194( ref l_U6 ))
        {
            sub_552( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_991() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1013() )))
            {
                SET_PLAYER_CONTROL( sub_1013(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U4 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U4 = 2;
            }
            else
            {
                l_U4 = 3;
            }
        }
        break;
        case 2:
        sub_552( "NS", "Player will QUIT", 0 );
        sub_7315();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_552( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_7315();
        return 1;
        break;
    }
    return 0;
}

int sub_6872(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_7315()
{
    sub_552( "NS", "P_PostFailRetryCleanup", 0 );
    sub_7363( ref l_U6 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1013() )))
    {
        SET_PLAYER_CONTROL( sub_1013(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U3 = 0;
    l_U3 = l_U3;
    l_U4 = 0;
    return;
}

void sub_7363(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_8372(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_8405( (uParam0^)[I] );
    }
    return;
}

void sub_8405(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_8467()
{
    sub_552( "SP", "P_CLEANUP_ALL", 0 );
    sub_8508( ref l_U517 );
    ENABLE_COVERPOINTMP3( "ofc_cubicles", "Corner_Position05", 1 );
    ISEQ_UNREGISTER_ENTITY( -679278808, "vig07patrol_1" );
    ISEQ_UNREGISTER_ENTITY( -679278808, "vig07patrol_2" );
    ISEQ_UNREGISTER_ENTITY( -679278808, "vig07patrol_3" );
    ISEQ_UNREGISTER_ENTITY( -679278808, "vig07patrol_4" );
    ISEQ_UNREGISTER_ENTITY( -679278808, "vig07patrol_5" );
    ISEQ_TERMINATE( -679278808 );
    ISEQ_UNREGISTER_ENTITY( -1870337929, "itGuy" );
    ISEQ_TERMINATE( -1870337929 );
    ISEQ_UNREGISTER_ENTITY( -2025150315, "MAX" );
    ISEQ_TERMINATE( -2025150315 );
    ISEQ_UNREGISTER_ENTITY( -1170267864, "ITGuy" );
    ISEQ_UNREGISTER_ENTITY( -1170267864, "enemy" );
    ISEQ_TERMINATE( -1170267864 );
    sub_2498( l_U489 );
    sub_2498( l_U490 );
    sub_4430( ref l_U343 );
    sub_8929( l_U352 );
    if (g_U706 < 3)
    {
        sub_8372( ref g_U1425 );
    }
    STOP_SCRIPT_STREAM( 1 );
    sub_8998();
    return;
}

void sub_8508(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_8929(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_8998()
{
    sub_552( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    return;
}

void sub_9271(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_552( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_9455( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_10532( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_10824( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_11171( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_10824( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_11171( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_10824( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_11171( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_3678( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_11171( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_3678( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_11171( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_11633( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_11794( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_991(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_552( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_9455(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_9487( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_9487(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_10532(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_10824(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_2849( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_11171(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

int sub_11633(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_11794(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_9487( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_11866( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_11866(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_13172()
{
    unknown uVar2;
    unknown uVar3;

    switch (l_U89)
    {
        case 0: break;
        case 1:
        sub_552( "SP", "eCheckpointState = CHECKPOINT_INIT_SCRIPT_DATA", 0 );
        sub_13355();
        sub_14785();
        ENABLE_COVERPOINTMP3( "ofc_cubicles", "Corner_Position05", 0 );
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U89 = 2;
        sub_552( "SP", "eCheckpointState = CHECKPOINT_INIT_REQUEST_ASSETS", 0 );
        case 2:
        sub_552( "SP", "eCheckpointState = CHECKPOINT_INIT_REQUEST_ASSETS", 0 );
        sub_15195();
        l_U89 = 3;
        sub_552( "SP", "eCheckpointState = CHECKPOINT_INIT_LOAD_ASSETS", 0 );
        case 3:
        if (sub_15986() == 1)
        {
            l_U89 = 6;
            sub_552( "SP", "eCheckpointState = CHECKPOINT_CREATE_CUBICLE_OBJECTS", 0 );
            break;
        }
        return;
        case 6:
        sub_552( "SP", "eCheckpointState = CHECKPOINT_CREATE_CUBICLE_OBJECTS", 0 );
        sub_16792();
        sub_17177();
        if (g_U706 == 3)
        {
            sub_17772();
        }
        l_U89 = 7;
        sub_552( "SP", "eCheckpointState = CHECKPOINT_HANDLE_CREATE_CUBICLE_ENEMIES", 0 );
        break;
        case 7:
        if (sub_18298() == 1)
        {
            l_U89 = 4;
            sub_552( "SP", "eCheckpointState = CHECKPOINT_SETUP_START_POINT", 0 );
            break;
        }
        return;
        case 4:
        sub_552( "SP", "eCheckpointState = CHECKPOINT_SETUP_START_POINT", 0 );
        if (g_U706 < 3)
        {
            l_U92 = 1;
            l_U89 = 8;
            sub_552( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_03_CUTSCENE", 0 );
        }
        else if ((l_U88 == 0) AND (g_U707 == 3))
        {
            l_U88 = 1;
            if ((sub_20394( ref l_U34 )) == 0)
            {
                sub_3678( sub_991(), g_U1270, 200, 0, 0 );
            }
            l_U89 = 5;
            sub_552( "SP", "eCheckpointState = CHECKPOINT_WAITING_FOR_PLAYER_WEAPON", 0 );
        }
        else
        {
            l_U94 = 1;
            l_U89 = 9;
            sub_552( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_03_BLENDOUT", 0 );
        }
        break;
        case 5:
        if ((IS_PED_DEAD( sub_991() )) == 0)
        {
            uVar3 = GET_WEAPON_FROM_HAND( sub_991(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
            {
                l_U94 = 1;
                l_U89 = 9;
                sub_552( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_03_BLENDOUT", 0 );
            }
            else
            {
                return;
            }
            break;
        }
        return;
        case 8:
        if (sub_20905() == 1)
        {
            l_U94 = 1;
            l_U89 = 9;
            sub_552( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_03_BLENDOUT", 0 );
            break;
        }
        return;
        case 9:
        if (sub_25315() == 1)
        {
            AUDIO_MUSIC_REQUEST_ONESHOT( "OFFICE_ONE_SHOT_GUNS_FOR_HIRE", 0 );
            if ((IS_PED_DEAD( sub_991() )) == 0)
            {
                SET_PED_NUM_CHARGERS_OVERRIDE( sub_991(), 2 );
            }
            sub_31038();
            sub_4835( ref l_U404, 2000, 1, 0 );
            sub_4971( ref l_U404 );
            sub_4835( ref l_U395, 20250, 1, 0 );
            sub_4971( ref l_U395 );
            l_U89 = 10;
            sub_552( "SP", "eCheckpointState = CHECKPOINT_HANDLE_CUBICLE_FIGHT", 0 );
        }
        break;
        case 10:
        if (l_U227 == 0)
        {
            if (sub_31304() == 1)
            {
                sub_31431( ref l_U449, 0 );
                sub_31579();
                AUDIO_MUSIC_PLAY_ONESHOT();
                AUDIO_MUSIC_FORCE_TRACK( "OFFICE_ACTION_SONG_02", "OFFICE_ACTION_3_4_6", "", 2.00000000, 5000, 5000, -1082130432, 0 );
                if (l_U395._fU16 == 1)
                {
                    sub_5366( ref l_U459 );
                    sub_5448( 0, sub_991(), "MAX", ref l_U459, 2, 0 );
                    sub_5448( 1, g_U1424, "M6_CP_14_Mus", ref l_U459, 2, 0 );
                    sub_5739( "SOFF_VIG07B", ref l_U459, 8, 1 );
                }
                sub_32159( ref g_U708[4] );
                sub_4835( ref l_U413, 3000, 1, 0 );
                sub_4971( ref l_U413 );
                l_U227 = 1;
            }
        }
        if (l_U227 == 0)
        {
            if ((sub_5194( ref l_U404 )) == 1)
            {
                sub_5366( ref l_U449 );
                sub_5448( 0, sub_991(), "MAX", ref l_U449, 2, 0 );
                sub_5448( 1, l_U343[1], "M6_CP_11_Avg", ref l_U449, 2, 0 );
                sub_5448( 2, l_U343[2], "M6_CP_12_Avg", ref l_U449, 2, 0 );
                sub_5448( 3, l_U343[3], "M6_CP_13_Avg", ref l_U449, 2, 0 );
                sub_5739( "SOFF_VIG07A", ref l_U449, 8, 1 );
            }
        }
        if ((sub_5194( ref l_U413 )) == 1)
        {
            sub_32421();
        }
        if (l_U227 == 1)
        {
            sub_32656();
        }
        if ((sub_1288( ref l_U200, 0 )) == 1)
        {
            sub_33660( ref l_U222, l_U343[1] );
            sub_33660( ref l_U222, l_U343[2] );
            sub_33660( ref l_U222, l_U343[3] );
        }
        if (l_U223 == 0)
        {
            if ((sub_33770( ref l_U343 )) == 1)
            {
                uVar2 = sub_33861( ref l_U343 );
                if (((IS_PED_DEAD( uVar2 )) == 0) AND ((DOES_PED_EXIST( uVar2 )) == 1))
                {
                    sub_552( "SP", "Assigning Last cubicle enemy a bulletcam.", 0 );
                    SET_BULLET_CAM_PREF( uVar2, "all_m_02_smg", "all_m_02_smg", "all_m_02_smg", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                    BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                    l_U223 = 1;
                }
            }
        }
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND ((sub_33770( ref l_U343 )) == 0)))
        {
            sub_552( "SP", "All cubicles enemies dead", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "OFFICE_ACTION_SONG_02", "OFFICE_ACTION_2", "", 0.00000000, 5000, 5000, -1082130432, 0 );
            ISEQ_UNREGISTER_ENTITY( -1870337929, "itGuy" );
            sub_34329( -1870337929, 1 );
            sub_25550( g_U1424, -7.44000000, 39.57000000, 4.90000000, 0.00000000 );
            if (((IS_PED_DEAD( g_U1424 )) == 0) AND ((DOES_PED_EXIST( g_U1424 )) == 1))
            {
                SET_PED_VISIBLE( g_U1424, 0 );
            }
            sub_32159( ref g_U708[4] );
            g_U1040 = 1;
            l_U89 = 11;
            sub_552( "SP", "eCheckpointState = CHECKPOINT_FINISHED", 0 );
        }
        break;
        case 11:
        if (g_U1039 == 1)
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U89 = 0;
            sub_552( "SP", "eCheckpointState = CHECKPOINT_IDLE", 0 );
        }
        break;
    }
    return;
}

void sub_13355()
{
    sub_552( "SP", "P_INIT_GAMEPLAY_STRUCTS", 0 );
    sub_2363( ref l_U231, l_U373, l_U376, 403784285, 26, 6, 0, 0, 1 );
    sub_2363( ref l_U251[0], l_U353, l_U356, 706474301, 7, 3, 2, 0, 0 );
    sub_2363( ref l_U251[1], l_U357, l_U360, -1453376671, 7, 3, 2, 0, 0 );
    sub_2363( ref l_U251[2], l_U361, l_U364, 743482102, 7, 3, 2, 0, 0 );
    sub_2363( ref l_U251[3], l_U365, l_U368, -56552200, 7, 3, 2, 0, 0 );
    sub_2363( ref l_U251[4], l_U369, l_U372, -1600997801, 7, 3, 2, 0, 0 );
    sub_2363( ref l_U251[5], 1.26417200, 29.67006000, 4.90048200, 90.00000000, -362115078, 7, 3, 2, 0, 0 );
    sub_2363( ref l_U251[6], 1.34608000, 38.95720000, 4.90048200, 100.00000000, 52944413, 7, 3, 2, 0, 0 );
    sub_13755( ref l_U137, "TRIG_IT_GUY_ABANDONED", 8.84000000, 36.49000000, 1.88000000, 3.63000000, 12.92000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13755( ref l_U95, "TRIG_CUBICLES_AREA", -10.60000000, 30.33000000, 4.85000000, 27.17000000, 24.32000000, 4.72000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13755( ref l_U116, "TRIG_CUBICLES_START_HIDEBOX", -21.69000000, 30.41000000, 3.89000000, 1.00000000, 2.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13755( ref l_U158, "TRIG_REMINDER", -31.23000000, 27.73000000, 4.96000000, 14.04000000, 17.16000000, 5.30000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13755( ref l_U179, "TRIG_IT_GUY_REACT", -18.96000000, 30.33000000, 4.58000000, 10.02000000, 16.47000000, 9.65000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13755( ref l_U200, "TRIG_REMOVE_COMBAT_AREAS", -11.09000000, 30.08000000, 4.59000000, 5.69000000, 21.40000000, 7.65000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14297( ref l_U221, "TETH_CUBICLES", -10.55000000, 29.95000000, 4.59000000, 25.00000000, 22.00000000, 7.65000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14297( ref l_U222, "TETH_MIDDLE", -11.09000000, 29.94000000, 4.59000000, 5.69000000, 21.40000000, 7.65000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14426( ref g_U1355, 1 );
    sub_14426( ref g_U1362, 1 );
    sub_14639( ref g_U1355, 1 );
    sub_14639( ref g_U1362, 1 );
    return;
}

void sub_13755(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_14297(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_14426(int iParam0, int iParam1)
{
    if ((sub_14438( iParam0 )) == 0)
    {
        sub_14504( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_14438(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_14504(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_14639(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_14438( iParam0 )) == 0)
    {
        sub_14504( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_14785()
{
    sub_552( "SP", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U351 = 0;
    l_U495 = 0;
    l_U223 = 0;
    l_U224 = 0;
    l_U225 = 0;
    l_U226 = 0;
    l_U227 = 0;
    l_U228 = 0;
    l_U229 = 0;
    l_U230 = 0;
    l_U518 = 0;
    sub_7363( ref l_U497 );
    sub_7363( ref l_U377 );
    sub_7363( ref l_U404 );
    sub_7363( ref l_U413 );
    sub_7363( ref l_U422 );
    sub_7363( ref l_U431 );
    sub_7363( ref l_U440 );
    sub_7363( ref l_U395 );
    sub_7363( ref l_U386 );
    l_U91 = -1;
    l_U92 = 0;
    l_U93 = 0;
    l_U94 = 0;
    return;
}

void sub_15195()
{
    sub_552( "SP", "P_REQUEST_ASSETS", 0 );
    sub_2744( g_U1423, 0 );
    sub_2744( -569114159, 0 );
    sub_2744( 948709183, 0 );
    sub_2744( g_U1411, 0 );
    sub_15285( g_U1269, 0 );
    sub_15285( g_U1270, 0 );
    sub_15285( g_U1271, 0 );
    sub_15285( g_U1272, 0 );
    sub_15285( g_U1273, 0 );
    sub_15398( ref g_U1253, 0, 0 );
    sub_15398( ref g_U1261, 0, 0 );
    sub_15486( -1870337929, 0 );
    sub_15486( -679278808, 0 );
    sub_15486( -2025150315, 0 );
    sub_15486( -1170267864, 0 );
    sub_15756( "SCRIPT_MISSION\S_OFFICE_CUBICLE_SEARCH", 0 );
    STOP_SCRIPT_STREAM( 1 );
    sub_15837( ref l_U509, 1, 0 );
    return;
}

void sub_15285(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_15398(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_15486(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_15756(unknown uParam0, int iParam1)
{
    LOAD_SCRIPT_AUDIO_BANK( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_15837(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_15986()
{
    if (((HAS_MODEL_LOADED( g_U1411 )) == 1) AND (((HAS_MODEL_LOADED( 948709183 )) == 1) AND (((HAS_MODEL_LOADED( -569114159 )) == 1) AND ((HAS_MODEL_LOADED( g_U1423 )) == 1))))
    {
        sub_552( "SP", "Models have loaded...", 0 );
        if (((HAS_WEAPON_LOADED( g_U1273 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1272 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1271 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1270 )) == 1) AND ((HAS_WEAPON_LOADED( g_U1269 )) == 1)))))
        {
            sub_552( "SP", "Weapons have loaded...", 0 );
            if (((HAS_ANIM_DICT_LOADED( ref g_U1261, 0 )) == 1) AND ((HAS_ANIM_DICT_LOADED( ref g_U1253, 0 )) == 1))
            {
                sub_552( "SP", "Anim Dictionaries have loaded...", 0 );
                if (((ISEQ_QUERY_STATE( -1170267864, 2 )) == 1) AND (((ISEQ_IS_LOADED( -1170267864 )) == 1) AND (((ISEQ_QUERY_STATE( -2025150315, 2 )) == 1) AND (((ISEQ_IS_LOADED( -2025150315 )) == 1) AND (((ISEQ_QUERY_STATE( -679278808, 2 )) == 1) AND (((ISEQ_IS_LOADED( -679278808 )) == 1) AND (((ISEQ_QUERY_STATE( -1870337929, 2 )) == 1) AND ((ISEQ_IS_LOADED( -1870337929 )) == 1))))))))
                {
                    sub_552( "SP", "Interactive Sequences have loaded...", 0 );
                    if ((IS_SCRIPT_AUDIO_BANK_LOADED( "SCRIPT_MISSION\S_OFFICE_CUBICLE_SEARCH", 0 )) == 1)
                    {
                        sub_552( "SP", "Audio Banks have loaded...", 0 );
                        if ((LOAD_SCRIPT_STREAM( ref l_U509, 1 )) == 1)
                        {
                            sub_552( "SP", "Script Streams have loaded...", 0 );
                            return 1;
                        }
                    }
                }
            }
        }
    }
    return 0;
}

void sub_16792()
{
    sub_552( "SA", "P_CREATE_PLACEHOLDER_CEILING_GLASS", 0 );
    sub_8929( l_U352 );
    l_U352 = sub_16899( 948709183, -12.71200000, 37.65100000, 12.48400000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U352 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U352, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U352, ref g_U1141 );
    }
    return;
}

void sub_16899(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_2744( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_17177()
{
    sub_552( "SP", "P_CREATE_CUBICLE_PLACEMENTS", 0 );
    sub_8405( g_U1425[0] );
    g_U1425[0] = sub_17284( -4072149, -14.78000000, 33.41000000, 5.60000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 1, 50 );
    if ((DOES_PLACEMENT_EXIST( g_U1425[0] )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1425[0], ref g_U1141 );
    }
    sub_8405( g_U1425[1] );
    g_U1425[1] = sub_17284( -4072149, -4.16000000, 24.47000000, 5.60000000, 0.00000000, 0.00000000, 80.00000000, 1, 0, 1, 50 );
    if ((DOES_PLACEMENT_EXIST( g_U1425[1] )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1425[1], ref g_U1141 );
    }
    sub_8405( g_U1425[2] );
    g_U1425[2] = sub_17284( -4072149, 5.87000000, 26.81000000, 5.58000000, 0.00000000, 0.00000000, 80.00000000, 0, 0, 0, 1119092736 );
    if ((DOES_PLACEMENT_EXIST( g_U1425[2] )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1425[2], ref g_U1141 );
    }
    sub_8405( g_U1425[3] );
    g_U1425[3] = sub_17284( -4072149, -19.56000000, 21.57000000, 5.60000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 1119092736 );
    if ((DOES_PLACEMENT_EXIST( g_U1425[3] )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1425[3], ref g_U1141 );
    }
    return;
}

void sub_17284(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_17772()
{
    sub_552( "SP", "P_SETUP_IT_GUY", 0 );
    sub_2498( g_U1424 );
    g_U1424 = sub_2574( ref l_U231 );
    if (((IS_PED_DEAD( g_U1424 )) == 0) AND ((DOES_PED_EXIST( g_U1424 )) == 1))
    {
        SET_ROOM_FOR_PED_BY_NAME( g_U1424, ref g_U1133 );
    }
    sub_17884();
    return;
}

void sub_17884()
{
    sub_552( "SP", "P_SETUP_IT_GUY_ATTRIBUTES", 0 );
    SET_PED_NAME_DEBUG( g_U1424, "piITGuy" );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U1424, 1 );
    SET_PED_EMOTION_STATE( g_U1424, 5 );
    SET_PED_CAN_RAGDOLL( g_U1424, 1 );
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U1424, 0 );
    SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U1424, 1 );
    SET_PED_CAN_PUSH_PLAYER( g_U1424, 1 );
    SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U1424, 1 );
    SET_PED_AIM_LOCKONABLE( g_U1424, 0 );
    SET_PED_CAN_INTERACT_WITH_DOORS( g_U1424, 0 );
    SET_PED_CAN_SMASH_GLASS( g_U1424, 0 );
    SET_PED_AS_ONE_SHOT_KILL( g_U1424, 1 );
    SET_PED_CAN_TRIGGER_BULLET_CAM( g_U1424, 1 );
    SET_PED_GORE_AS_ALLY( g_U1424 );
    SET_PED_GORE_FROM_PLAYER( g_U1424, 1 );
    SET_PED_GORE_FROM_NPC( g_U1424, 0 );
    STOP_PED_SPEAKING( g_U1424, 1 );
    if ((IS_PED_DEAD( sub_991() )) == 0)
    {
        SET_PED_PRIMARY_LOOKAT( g_U1424, sub_991() );
    }
    return;
}

int sub_18298()
{
    int iVar2;

    sub_552( "SP", "F_HANDLE_SPAWN_CUBICLE_ENEMIES", 0 );
    if ((DOES_GROUP_EXIST( l_U245._fU0 )) == 0)
    {
        sub_18383( ref l_U245, 1056964608, 0 );
    }
    iVar2 = l_U351;
    sub_2498( l_U343[iVar2] );
    l_U343[iVar2] = sub_2574( ref l_U251[iVar2] );
    sub_18611( l_U343[iVar2], ref l_U245 );
    sub_18886( ref l_U221, l_U343[iVar2], 1 );
    if (((IS_PED_DEAD( l_U343[iVar2] )) == 0) AND ((DOES_PED_EXIST( l_U343[iVar2] )) == 1))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U343[iVar2], ref g_U1141 );
        FREEZE_PED_POSITION( l_U343[iVar2], 1 );
        CLEAR_PED_TASKS( l_U343[iVar2] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U343[iVar2], 1 );
        SET_PED_AI_TEMPLATE( l_U343[iVar2], "AIT_EXPERT" );
        SET_PED_ALERTNESS( l_U343[iVar2], 1 );
        SET_PED_HEALTH( l_U343[iVar2], 260, 0 );
        SET_PED_CAN_INITIATE_BULLET_CAM( l_U343[iVar2], 1 );
        if (iVar2 == 0)
        {
            SET_PED_COMBAT_RANGE_MIN( l_U343[iVar2], 3.00000000 );
            SET_PED_COMBAT_RANGE_MAX( l_U343[iVar2], 10.00000000 );
            sub_3678( l_U343[iVar2], g_U1270, 25000, 0, 0 );
            sub_10824( l_U343[iVar2], g_U1273, 5, 2, 0 );
        }
        else if (iVar2 == 1)
        {
            SET_PED_COMBAT_RANGE_MIN( l_U343[iVar2], 5.00000000 );
            SET_PED_COMBAT_RANGE_MAX( l_U343[iVar2], 20.00000000 );
            sub_19320( ref l_U222, l_U343[iVar2] );
            sub_3678( l_U343[iVar2], g_U1269, 25000, 0, 0 );
            sub_10824( l_U343[iVar2], g_U1273, 5, 2, 0 );
        }
        else if (iVar2 == 2)
        {
            SET_PED_COMBAT_RANGE_MIN( l_U343[iVar2], 5.00000000 );
            SET_PED_COMBAT_RANGE_MAX( l_U343[iVar2], 20.00000000 );
            sub_19320( ref l_U222, l_U343[iVar2] );
            sub_3678( l_U343[iVar2], g_U1269, 25000, 0, 0 );
            sub_10824( l_U343[iVar2], g_U1273, 5, 2, 0 );
        }
        else if (iVar2 == 3)
        {
            SET_PED_COMBAT_RANGE_MIN( l_U343[iVar2], 5.00000000 );
            SET_PED_COMBAT_RANGE_MAX( l_U343[iVar2], 20.00000000 );
            SET_PED_ALLOWED_TO_KNEEL_AND_FIRE( l_U343[iVar2], 0 );
            sub_19320( ref l_U222, l_U343[iVar2] );
        }
        else if (iVar2 == 4)
        {
            SET_PED_COMBAT_RANGE_MIN( l_U343[iVar2], 3.00000000 );
            SET_PED_COMBAT_RANGE_MAX( l_U343[iVar2], 10.00000000 );
            sub_3678( l_U343[iVar2], g_U1271, 25000, 0, 0 );
            sub_10824( l_U343[iVar2], g_U1273, 5, 2, 0 );
        }
        else if (iVar2 == 5)
        {
            SET_PED_COMBAT_RANGE_MIN( l_U343[iVar2], 5.00000000 );
            SET_PED_COMBAT_RANGE_MAX( l_U343[iVar2], 20.00000000 );
            sub_3678( l_U343[iVar2], g_U1271, 25000, 0, 0 );
            sub_10824( l_U343[iVar2], g_U1273, 5, 2, 0 );
        }
        else if (iVar2 == 6)
        {
            SET_PED_COMBAT_RANGE_MIN( l_U343[iVar2], 5.00000000 );
            SET_PED_COMBAT_RANGE_MAX( l_U343[iVar2], 20.00000000 );
            sub_3678( l_U343[iVar2], g_U1271, 25000, 0, 0 );
            sub_10824( l_U343[iVar2], g_U1273, 5, 2, 0 );
        };;;;;;;
        l_U351++;
    }
    if (l_U351 == l_U343)
    {
        sub_20004( ref l_U343, "piCubicleEnemies" );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U245._fU0, 1 );
        return 1;
    }
    return 0;
}

void sub_18383(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_18611(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_2849( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_18383( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_18383( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_18886(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_19320(int iParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_SUGGESTED_COMBAT_AREA_ADD_BOX( uParam1, iParam0->_fU0 );
    }
    return;
}

void sub_20004(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

int sub_20394(unknown uParam0)
{
    sub_552( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_9271( uParam0, sub_991() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_20905()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    int iVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    iVar2 = 0;
    switch (l_U92)
    {
        case 0: break;
        case 1:
        sub_552( "SP", "eMid03CutsceneState = CUTSCENE_REQUEST_ASSETS", 0 );
        sub_21050();
        l_U92 = 2;
        sub_552( "SP", "eMid03CutsceneState = CUTSCENE_LOAD_ASSETS", 0 );
        case 2:
        if (sub_21300() == 1)
        {
            l_U92 = 3;
            sub_552( "SP", "eMid03CutsceneState = CUTSCENE_WAIT_FOR_HANDOFF", 0 );
            break;
        }
        return 0;
        case 3:
        if (g_U1038 == 1)
        {
            if ((IS_PED_DEAD( sub_991() )) == 0)
            {
                if ((GET_IS_PED_FORCED_TO_WALK( sub_991() )) == 1)
                {
                    SET_PED_FORCED_TO_WALK( sub_991(), 0 );
                }
            }
            l_U92 = 5;
            sub_552( "SP", "eMid03CutsceneState = CUTSCENE_START", 0 );
            break;
        }
        return 0;
        case 5:
        sub_552( "SP", "eMid03CutsceneState = CUTSCENE_START", 0 );
        sub_4586( 1, 0, 0, 1 );
        if ((IS_PED_DEAD( sub_991() )) == 0)
        {
            CUTSCENE_REGISTER_PED_TELEPORT( sub_991(), l_U491, l_U494 );
            CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "60BB2DC7_1049AFAA_Popover3", 1, 1 );
            CUTSCENE_REGISTER_PED_ACTION_INTENTION( sub_991(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            uVar7 = sub_21844();
            if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
            {
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar7, "W_PI_PT92_Aa_H", 0 );
                CUTSCENE_REGISTER_PED_WEAPON_HAND( sub_991(), uVar7, 0 );
            }
            ISEQ_REGISTER_ENTITY( -2025150315, "MAX", sub_991(), 0 );
        }
        if (((IS_PED_DEAD( g_U1424 )) == 0) AND ((DOES_PED_EXIST( g_U1424 )) == 1))
        {
            SET_ROOM_FOR_PED_BY_NAME( g_U1424, ref g_U1133 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U1424, "Offi_Tech_Avg", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( g_U1424, l_U373, l_U376 );
            ISEQ_REGISTER_ENTITY( -1870337929, "itGuy", g_U1424, 0 );
        }
        if (((IS_PED_DEAD( l_U343[0] )) == 0) AND ((DOES_PED_EXIST( l_U343[0] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U343[0], "M_Crac_Sold_C", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U343[0], 0, 0 ), "W_SB_UZI_AA_H^1", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( l_U343[0], l_U353, l_U356 );
            ISEQ_REGISTER_ENTITY( -679278808, "vig07patrol_1", l_U343[0], 0 );
        }
        if (((IS_PED_DEAD( l_U343[1] )) == 0) AND ((DOES_PED_EXIST( l_U343[1] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U343[1], "M_Crac_Sold_C^1", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U343[1], 0, 0 ), "W_PI_GLK18_AA_H", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( l_U343[1], l_U357, l_U360 );
            ISEQ_REGISTER_ENTITY( -679278808, "vig07patrol_2", l_U343[1], 0 );
        }
        if (((IS_PED_DEAD( l_U343[2] )) == 0) AND ((DOES_PED_EXIST( l_U343[2] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U343[2], "M_Crac_Sold_C^2", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U343[2], 0, 0 ), "W_PI_GLK18_AA_H^1", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( l_U343[2], l_U361, l_U364 );
            ISEQ_REGISTER_ENTITY( -679278808, "vig07patrol_3", l_U343[2], 0 );
        }
        if (((IS_PED_DEAD( l_U343[3] )) == 0) AND ((DOES_PED_EXIST( l_U343[3] )) == 1))
        {
            HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE( l_U343[3], 1 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U343[3], "M_Crac_Sold_C^3", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( l_U343[3], l_U365, l_U368 );
            ISEQ_REGISTER_ENTITY( -679278808, "vig07patrol_4", l_U343[3], 0 );
        }
        if (((IS_PED_DEAD( l_U343[4] )) == 0) AND ((DOES_PED_EXIST( l_U343[4] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U343[4], "M_Crac_Sold_C^4", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U343[4], 0, 0 ), "W_AR_97LC_AA_H", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( l_U343[4], l_U369, l_U372 );
            ISEQ_REGISTER_ENTITY( -679278808, "vig07patrol_5", l_U343[4], 0 );
        }
        CUTSCENE_REGISTER_ISEQ( -2025150315 );
        CUTSCENE_REGISTER_ISEQ( -1870337929 );
        CUTSCENE_REGISTER_ISEQ( -679278808 );
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U1355._fU0, g_U1355._fU4 );
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U1362._fU0, g_U1362._fU4 );
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        l_U92 = 6;
        sub_552( "SP", "eMid03CutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 6:
        sub_552( "SP", "eMid03CutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        sub_23541( ref l_U70, 1, 1 );
        sub_24623( l_U70, 0 );
        RELEASE_TIME_OF_DAY();
        SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
        FREEZE_TIME_OF_DAY( 12, 0 );
        DO_SCREEN_FADE_IN( 0 );
        l_U92 = 7;
        sub_552( "SP", "eMid03CutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 7:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            sub_24623( l_U70, 1 );
            if (((IS_PED_DEAD( l_U343[3] )) == 0) AND ((DOES_PED_EXIST( l_U343[3] )) == 1))
            {
                HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE( l_U343[3], 0 );
            }
            l_U92 = 0;
            sub_552( "SP", "eMid03CutsceneState = CUTSCENE_IDLE", 0 );
            return 1;
        }
        else
        {
            uVar3 = GET_CUTSCENE_SECTION_PLAYING();
            uVar4 = GET_CUTSCENE_TIME();
            iVar5 = GET_CUTSCENE_TIME_MS();
            if (l_U230 == 0)
            {
                if (iVar5 > 5000)
                {
                    CUTSCENE_ENABLE_SKIP( 1 );
                    l_U230 = 1;
                }
            }
            if (l_U228 == 0)
            {
                if (iVar5 > 12000)
                {
                    PLAY_SOUND_FROM_PED( -1, "S_OFFICE_CUBICLE_SEARCH", l_U343[4] );
                    l_U228 = 1;
                }
            }
            if (l_U229 == 0)
            {
                if (iVar5 > 16000)
                {
                    PLAY_SOUND_FROM_PED( -1, "S_OFFICE_CUBICLE_SEARCH", l_U343[0] );
                    l_U229 = 1;
                }
            }
            if ((IS_SCREEN_FADING_OUT() == 1) || (IS_SCREEN_FADED_OUT() == 1))
            {
                CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
            }
        }
        break;
    }
    return 0;
}

void sub_21050()
{
    sub_552( "SP", "P_REQUEST_MID_03_ASSETS", 0 );
    if (((CUTSCENE_NAMED_IS_LOADING( "mid_03_office_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "mid_03_office_concat" )) == 0))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( "mid_03_office_concat" );
    }
    sub_15486( -1870337929, 0 );
    sub_15486( -679278808, 0 );
    sub_15486( -2025150315, 0 );
    return;
}

int sub_21300()
{
    if (((ISEQ_GET_STATE( -2025150315 )) == 2) AND (((ISEQ_IS_LOADED( -2025150315 )) == 1) AND (((ISEQ_GET_STATE( -679278808 )) == 2) AND (((ISEQ_IS_LOADED( -679278808 )) == 1) AND (((ISEQ_GET_STATE( -1870337929 )) == 2) AND (((ISEQ_IS_LOADED( -1870337929 )) == 1) AND ((CUTSCENE_IS_LOADED( "mid_03_office_concat" )) == 1)))))))
    {
        return 1;
    }
    return 0;
}

int sub_21844()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_991() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_991(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_21907( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_991(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_991(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_991(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

int sub_21907(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_23541(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_23553( iParam0 );
    if ((IS_PED_DEAD( sub_991() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_991(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_21907( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_23776( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_991(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_991(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_991(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_991(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_991() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_991(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_991(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_991(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_991(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_991() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_991(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_23776( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_991(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_991(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_991(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_23553(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_23776(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_24623(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

int sub_25315()
{
    unknown uVar2;
    int iVar3;
    int I;

    switch (l_U94)
    {
        case 0: break;
        case 1:
        sub_552( "SP", "eMid03BlendState = BLEND_SETUP", 0 );
        sub_4586( 1, 0, 0, 1 );
        if ((ISEQ_QUERY_STATE( -2025150315, 3 )) == 0)
        {
            SNAP_PLAYER_TO_COVERPOINT( sub_1013(), "GenCover", "60BB2DC7_1049AFAA_Popover3", 1 );
            PED_SET_ACTION_INTENTION( sub_991(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            sub_25550( sub_991(), l_U491, l_U494 );
            ISEQ_REGISTER_ENTITY( -2025150315, "MAX", sub_991(), 0 );
            ISEQ_START( -2025150315 );
        }
        if ((ISEQ_QUERY_STATE( -1870337929, 3 )) == 0)
        {
            sub_25550( g_U1424, l_U373, l_U376 );
            ISEQ_REGISTER_ENTITY( -1870337929, "itGuy", g_U1424, 0 );
            ISEQ_START( -1870337929 );
        }
        if ((ISEQ_QUERY_STATE( -679278808, 3 )) == 0)
        {
            for ( I = 0; I < l_U343; I++ )
            {
                if (((IS_PED_DEAD( l_U343[I] )) == 0) AND ((DOES_PED_EXIST( l_U343[I] )) == 1))
                {
                    if (I < 5)
                    {
                        FREEZE_PED_POSITION( l_U343[I], 0 );
                    }
                }
            }
            sub_25550( l_U343[0], l_U353, l_U356 );
            sub_25550( l_U343[1], l_U357, l_U360 );
            sub_25550( l_U343[2], l_U361, l_U364 );
            sub_25550( l_U343[3], l_U365, l_U368 );
            sub_25550( l_U343[4], l_U369, l_U372 );
            ISEQ_REGISTER_ENTITY( -679278808, "vig07patrol_1", l_U343[0], 0 );
            ISEQ_REGISTER_ENTITY( -679278808, "vig07patrol_2", l_U343[1], 0 );
            ISEQ_REGISTER_ENTITY( -679278808, "vig07patrol_3", l_U343[2], 0 );
            ISEQ_REGISTER_ENTITY( -679278808, "vig07patrol_4", l_U343[3], 0 );
            ISEQ_REGISTER_ENTITY( -679278808, "vig07patrol_5", l_U343[4], 0 );
            ISEQ_START( -679278808 );
        }
        CAMERA_PLAY_ANIMATED( "LEVEL_S_OFFICE_CP_02", "MID_03_OFFICE_BLENDOUT_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        AUDIO_MUSIC_FORCE_TRACK( "OFFICE_ACTION_SONG_02", "OFFICE_ACTION_2_6", "", 0.00000000, 5000, 5000, -1082130432, 0 );
        sub_3678( l_U343[3], g_U1270, 25000, 0, 0 );
        l_U94 = 2;
        sub_552( "SP", "eMid03BlendState = BLEND_FIRST_FRAME", 0 );
        break;
        case 2:
        sub_552( "SP", "eMid03BlendState = BLEND_FIRST_FRAME", 0 );
        DO_SCREEN_FADE_IN( 0 );
        sub_14426( ref g_U1355, 1 );
        sub_14639( ref g_U1355, 1 );
        sub_14426( ref g_U1362, 1 );
        sub_14639( ref g_U1362, 1 );
        if ((l_U34._fU0 == 0) || (g_U706 < 3))
        {
            g_U706 = 3;
            sub_26569( ref l_U34, 3, sub_991(), g_U817[3], g_U926[3], g_U963[3], g_U1000[3], 1 );
        }
        l_U94 = 3;
        sub_552( "SP", "eMid03BlendState = BLEND_PLAYING", 0 );
        break;
        case 3:
        if (sub_30240())
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || (NOT IS_SCREEN_FADED_IN()))
            {
                DO_SCREEN_FADE_IN( 0 );
            }
        }
        l_U32 = 0;
        if (l_U495 == 0)
        {
            iVar3 = CAMERA_ANIMATED_CURRENT_TIME();
            if (iVar3 >= l_U496)
            {
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U507, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U508, 1065353216, 0 );
                CAMERA_ANIMATED_STOP( l_U506, 1 );
                sub_4835( ref l_U497, l_U506, 1, 0 );
                sub_4971( ref l_U497 );
                l_U495 = 1;
            }
        }
        if ((sub_5194( ref l_U497 )) == 1)
        {
            sub_30627( 1, 1 );
            l_U94 = 0;
            sub_552( "SP", "eMid03BlendState = BLEND_IDLE", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

void sub_25550(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_26569(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_552( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_552( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_11794( iParam1 );
        sub_26828( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_27279( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_27279( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_27511( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_27279( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_27511( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_27511( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_27279( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_27511( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_27511( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_27511( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_27279( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_27511( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_27511( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_27511( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_27511( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_29069( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_552( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_26828(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_9487( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_552( "TEH", "Ending context", 0 );
        sub_552( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_27279(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_27511(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_29069(int iParam0)
{
    sub_2849( "CHECKPOINT DATA" );
    sub_29108( iParam0->_fU4 );
    sub_29131( iParam0->_fU16 );
    sub_29131( iParam0->_fU20 );
    sub_29131( iParam0->_fU24 );
    sub_29174( iParam0->_fU28 );
    sub_29174( iParam0->_fU56 );
    sub_29174( iParam0->_fU60 );
    sub_29174( iParam0->_fU64 );
    sub_29174( iParam0->_fU68 );
    sub_29174( iParam0->_fU72 );
    sub_29174( iParam0->_fU76 );
    sub_29174( iParam0->_fU80 );
    sub_29174( iParam0->_fU84 );
    sub_29174( iParam0->_fU88 );
    sub_29174( iParam0->_fU92 );
    sub_29131( iParam0->_fU32 );
    sub_29174( iParam0->_fU36 );
    sub_29174( iParam0->_fU40 );
    sub_29174( iParam0->_fU44 );
    sub_29131( iParam0->_fU136 );
    sub_29379( iParam0->_fU140 );
    sub_29174( iParam0->_fU52 );
    sub_2849( "---nRightHolsterAttachmentEnabled: " );
    sub_29174( iParam0->_fU96 );
    sub_2849( "---nRightHolsterAttachmentToggled: " );
    sub_29174( iParam0->_fU100 );
    sub_2849( "---nLeftHolsterAttachmentEnabled: " );
    sub_29174( iParam0->_fU104 );
    sub_2849( "---nLeftHolsterAttachmentToggled: " );
    sub_29174( iParam0->_fU108 );
    sub_2849( "---nRifleHolsterAttachmentEnabled: " );
    sub_29174( iParam0->_fU112 );
    sub_2849( "---nRifleHolsterAttachmentToggled: " );
    sub_29174( iParam0->_fU116 );
    sub_2849( "---nRightHandAttachmentEnabled: " );
    sub_29174( iParam0->_fU120 );
    sub_2849( "---nRightHandAttachmentToggled: " );
    sub_29174( iParam0->_fU124 );
    sub_2849( "---nLeftHandAttachmentEnabled: " );
    sub_29174( iParam0->_fU128 );
    sub_2849( "---nLeftHandAttachmentToggled: " );
    sub_29174( iParam0->_fU132 );
    sub_29174( l_U1 );
    sub_29174( 144 );
    return;
}

void sub_29108(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_29131(unknown uParam0)
{
    return;
}

void sub_29174(unknown uParam0)
{
    return;
}

void sub_29379(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

int sub_30240()
{
    if (l_U32)
    {
        sub_552( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U32 = 0;
        return 1;
        break;
    }
    sub_552( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

void sub_30627(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_991() )))
    {
        SET_PLAYER_CONTROL( sub_1013(), 1, 0 );
        SET_PED_INVINCIBLE( sub_991(), 0 );
        if (bParam0)
        {
            sub_30708();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_30708()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_991() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_991(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_991(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_991(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_991(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_31038()
{
    sub_552( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_552( "CCB", "Starting the Office_Cubicles context...", 0 );
    START_CONTEXT( "Office_Cubicles" );
    return;
}

int sub_31304()
{
    unknown uVar2;

    if (((sub_5194( ref l_U395 )) == 1) || (((IS_CONTROL_PRESSED( 0, 6 )) == 1) || (((IS_CONTROL_JUST_PRESSED( 0, 6 )) == 1) || (((IS_PED_IN_COVER( sub_991() )) == 0) || (((HAS_SHOT_BEEN_FIRED_IN_AREA( l_U491, 30.00000000, 0, ref uVar2 )) == 1) || ((sub_1437( l_U116 )) == 0))))))
    {
        return 1;
    }
    return 0;
}

void sub_31431(int iParam0, unknown uParam1)
{
    if (NOT (sub_31445( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

boolean sub_31445(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_31579()
{
    int I;

    sub_552( "SP", "P_SEARCH_ENEMIES_BREAKOUT", 0 );
    for ( I = 0; I < l_U343; I++ )
    {
        if (((IS_PED_DEAD( sub_991() )) == 0) AND (((IS_PED_DEAD( l_U343[I] )) == 0) AND ((DOES_PED_EXIST( l_U343[I] )) == 1)))
        {
            if (I < 5)
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U343[I], 0 );
                FREEZE_PED_POSITION( l_U343[I], 0 );
                REGISTER_TARGET( l_U343[I], sub_991() );
                PED_SET_ACTION_INTENTION( l_U343[I], 53, -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_991() ) );
            }
        }
    }
    ISEQ_UNREGISTER_ENTITY( -679278808, "vig07patrol_1" );
    ISEQ_UNREGISTER_ENTITY( -679278808, "vig07patrol_2" );
    ISEQ_UNREGISTER_ENTITY( -679278808, "vig07patrol_3" );
    ISEQ_UNREGISTER_ENTITY( -679278808, "vig07patrol_4" );
    ISEQ_UNREGISTER_ENTITY( -679278808, "vig07patrol_5" );
    ISEQ_TERMINATE( -679278808 );
    return;
}

void sub_32159(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_32421()
{
    int I;

    sub_552( "SP", "P_SEARCH_ENEMY_BACKUP_START", 0 );
    for ( I = 0; I < l_U343; I++ )
    {
        if (((IS_PED_DEAD( sub_991() )) == 0) AND (((IS_PED_DEAD( l_U343[I] )) == 0) AND ((DOES_PED_EXIST( l_U343[I] )) == 1)))
        {
            if (I >= 5)
            {
                FREEZE_PED_POSITION( l_U343[I], 0 );
                CLEAR_PED_TASKS( l_U343[I] );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U343[I], 0 );
                REGISTER_TARGET( l_U343[I], sub_991() );
            }
        }
    }
    return;
}

void sub_32656()
{
    unknown uVar2;
    int iVar3;
    unknown uVar4;

    if (((sub_1330( l_U343[4], l_U179 )) == 1) || (((sub_1330( l_U343[3], l_U179 )) == 1) || (((sub_1330( l_U343[2], l_U179 )) == 1) || (((sub_1330( l_U343[1], l_U179 )) == 1) || ((sub_1330( l_U343[0], l_U179 )) == 1)))))
    {
        if ((l_U91 == 0) == 0)
        {
            l_U91 = 0;
            sub_7363( ref l_U386 );
            sub_4835( ref l_U386, 5000, 1, 0 );
            sub_4971( ref l_U386 );
        }
    }
    else if ((l_U91 == 1) == 0)
    {
        l_U91 = 1;
        sub_7363( ref l_U386 );
        sub_4835( ref l_U386, 2000, 1, 0 );
        sub_4971( ref l_U386 );
    }
    if ((HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U1424 ), 10.00000000, ref uVar2 )) == 1)
    {
        if (((IS_PED_DEAD( g_U1424 )) == 0) AND ((DOES_PED_EXIST( g_U1424 )) == 1))
        {
            iVar3 = GET_RANDOM_INT_IN_RANGE( 0, 10 );
            if (iVar3 <= 5)
            {
                PED_SET_ACTION_INTENTION( g_U1424, 47, 500, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
    }
    switch (l_U91)
    {
        case -1: break;
        case 0:
        if ((sub_5194( ref l_U386 )) == 1)
        {
            if (((IS_PED_DEAD( g_U1424 )) == 0) AND ((DOES_PED_EXIST( g_U1424 )) == 1))
            {
                PED_SET_ACTION_INTENTION( g_U1424, 48, 500, 0.00000000, 0.00000000, 0.00000000 );
            }
            l_U244 = GET_RANDOM_INT_IN_RANGE( 3000, 5000 );
            sub_4835( ref l_U386, l_U244, 1, 0 );
            sub_4971( ref l_U386 );
        }
        break;
        case 1:
        if ((sub_5194( ref l_U386 )) == 1)
        {
            if (((IS_PED_DEAD( g_U1424 )) == 0) AND ((DOES_PED_EXIST( g_U1424 )) == 1))
            {
                PED_SET_ACTION_INTENTION( g_U1424, 49, 500, 0.00000000, 0.00000000, 0.00000000 );
                if (NOT (IS_PED_DEAD( sub_991() )))
                {
                    SET_PED_DEFAULT_AIM_AT_PED( g_U1424, sub_991() );
                }
            }
            l_U244 = GET_RANDOM_INT_IN_RANGE( 3000, 5000 );
            sub_4835( ref l_U386, l_U244, 1, 0 );
            sub_4971( ref l_U386 );
        }
        break;
    }
    if ((sub_1437( l_U158 )) == 1)
    {
        l_U225 = 1;
    }
    else
    {
        l_U225 = 0;
        l_U226 = 0;
    }
    if ((l_U226 == 0) AND (l_U225 == 1))
    {
        sub_7363( ref l_U377 );
        sub_4835( ref l_U377, 1000, 1, 0 );
        sub_4971( ref l_U377 );
        l_U226 = 1;
    }
    if ((l_U226 == 1) AND ((sub_5194( ref l_U377 )) == 1))
    {
        if ((IS_ANY_SPEECH_PLAYING( g_U1424 )) == 0)
        {
            sub_5366( ref l_U469 );
            sub_5448( 0, sub_991(), "MAX", ref l_U469, 2, 0 );
            sub_5448( 1, g_U1424, "M6_Offi_Tech_Avg_01", ref l_U469, 2, 0 );
            sub_5739( "SOFF_VIG08KF", ref l_U469, 7, 1 );
        }
        uVar4 = GET_RANDOM_INT_IN_RANGE( 4000, 10000 );
        sub_4835( ref l_U377, uVar4, 1, 0 );
        sub_4971( ref l_U377 );
    }
    return;
}

void sub_33660(int iParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_SUGGESTED_COMBAT_AREA_REMOVE_BOX( uParam1, iParam0->_fU0 );
    }
    return;
}

void sub_33770(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_33861(unknown uParam0)
{
    int I;

    if ((sub_33770( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_34329(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_34798()
{
    sub_552( "NS", "P_UNLOAD_ASSETS", 0 );
    sub_34842( -2008010292 );
    sub_34842( -569114159 );
    sub_34842( 948709183 );
    sub_35002( ref g_U1253 );
    sub_35002( ref g_U1261 );
    RELEASE_SCRIPT_AUDIO_BANK();
    RELEASE_NAMED_SCRIPT_AUDIO_BANK( "SCRIPT_MISSION\S_OFFICE_CUBICLE_SEARCH" );
    return;
}

void sub_34842(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_2849( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_35002(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = -1;
    l_U3 = {64536, 64536, 64536};
    l_U15 = 150;
    l_U16 = 0.02000000;
    l_U24 = 0;
    l_U54 = 0;
    l_U236 = {0, 2, -0.50000000};
    l_U239 = 45;
    l_U259 = 0;
    l_U260 = 0;
    l_U261 = 1500;
    l_U272 = 0;
    l_U310 = 0;
    l_U312 = 1;
    l_U313 = 0;
    l_U420 = 0;
    l_U421 = 0;
    l_U422 = 0;
    l_U423 = 0;
    l_U524 = {49.08000000, -30.61000000, 94.27000000};
     /* MAL_WRITESCRIPTLOG */ sub_230( "Script s_club_RS1.sc is starting up..." );
    l_U310 = 1;
    l_U272 = 0;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_364();
        if (l_U313 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_13678();
             /* P_RS_CAM_SHAKE_DEBUG */ sub_62107();
        }
        WAIT( 0 );
    }
    SET_EXITFLAG_RESPONSE();
     /* P_CLEANUP_RS1 */ sub_3795( 0 );
     /* P_RELEASE_RS1_ASSETS */ sub_62311();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_club_RS1" );
     /* MAL_WRITESCRIPTLOG */ sub_230( "Script s_club_RS1.sc is terminating..." );
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_230(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* P_HANDLE_FAILURE */ void sub_364()
{
    if (g_U892 == 6)
    {
        switch (l_U313)
        {
            case 0:
            if (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_465() ))
            {
                if (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_465() ))
                {
                     /* P_PLAY_HELI_DEATH_CAM */ sub_588();
                }
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U313 = 1;
                 /* MAL_WRITESCRIPTLOG */ sub_230( "eFailState = FAIL_WAITING_FOR_PLAYER" );
            }
            else if ( /* RESTARTING_CHECKPOINT */ sub_1429())
            {
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U313 = 3;
                 /* MAL_WRITESCRIPTLOG */ sub_230( "eFailState = FAIL_WAITING_FOR_PLAYER" );
            }
            break;
            case 1:
            STOP_SCRIPT_STREAM( g_U2867 );
            if ( /* IS_RESTART_ACTIVE */ sub_1962())
            {
                l_U313 = 3;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_2022( 0 )) == 1)
            {
                l_U313 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_465() )))
            {
                l_U313 = 3;
                 /* MAL_WRITESCRIPTLOG */ sub_230( "eFailState = FAIL_CLEANUP_ALL" );
            }
            break;
            case 3:
             /* MAL_WRITESCRIPTLOG */ sub_230( "eFailState = FAIL_CLEANUP_ALL" );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_465() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_503() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_503(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_465() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_465(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_3548( "CLUB_RS_GIOV1_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
             /* P_CLEANUP_RS1 */ sub_3795( 1 );
             /* P_RS_GLOBALCLEANUP */ sub_4967();
             /* P_REQUEST_RS1_NONPERSISTENT_ASSETS */ sub_5508();
             /* P_RESET_AMBIENT_SPEECH_VARIABLES */ sub_8496();
            if (g_U893[7]._fU36 == 1)
            {
                SET_EXITFLAG_FOR_SCRIPT( g_U893[7]._fU32 );
                 /* P_RESET_CHECKPOINT_THREAD */ sub_8846( ref g_U893[7] );
                g_U1093 = 0;
                g_U1094 = 0;
            }
            l_U313 = 4;
             /* MAL_WRITESCRIPTLOG */ sub_230( "eFailState = FAIL_RESTORE_PLAYER" );
            break;
            case 4:
             /* MAL_WRITESCRIPTLOG */ sub_230( "eFailState = FAIL_RESTORE_PLAYER" );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9020( ref l_U274,  /* PLAYER_PED_ID */ sub_465() );
            l_U313 = 5;
             /* MAL_WRITESCRIPTLOG */ sub_230( "eFailState = FAIL_RESTART_CHECKPOINT" );
            break;
            case 5:
             /* MAL_WRITESCRIPTLOG */ sub_230( "eFailState = FAIL_RESTART_CHECKPOINT" );
            l_U310 = 1;
            l_U313 = 0;
             /* MAL_WRITESCRIPTLOG */ sub_230( "eFailState = FAIL_IDLE" );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_465()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_503() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_503()
{
    return GET_PLAYER_ID();
}

/* P_PLAY_HELI_DEATH_CAM */ void sub_588()
{
     /* NIS_CREATE_STATIC_CAM */ sub_646( ref l_U205, g_U665, g_U665, l_U239, 5000 );
     /* NIS_PLAY_CAM */ sub_1022( ref l_U205 );
    ATTACH_CAM_TO_PED( l_U205._fU0,  /* PLAYER_PED_ID */ sub_465(), l_U236, 1 );
    POINT_CAM_AT_PED( l_U205._fU0,  /* PLAYER_PED_ID */ sub_465(), g_U665, 1 );
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_646(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_798( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U649, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* CREATETIMER */ void sub_798(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* NIS_PLAY_CAM */ void sub_1022(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    if (iParam0->_fU92 == 1)
    {
        SET_CAM_ACTIVE_WITH_INTERP( iParam0->_fU0, iParam0->_fU120, iParam0->_fU88, iParam0->_fU100, iParam0->_fU104 );
    }
    else
    {
        SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    }
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_1151( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* STARTTIMER */ void sub_1151(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_1429()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_465() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_465(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_503(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_503(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_465() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_465(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_1962()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_2022(int iParam0)
{
    iParam0 = 1;
    switch (l_U260)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_2104( ref l_U262 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_465() )))
            {
                l_U261 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_798( ref l_U262, l_U261, 1, 1 );
             /* STARTTIMER */ sub_1151( ref l_U262 );
        }
        if ( /* ISTIMERDONE */ sub_2256( ref l_U262 ))
        {
             /* WRITESCRIPTLOG */ sub_2466( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_465() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_503() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_503(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U260 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U260 = 2;
            }
            else
            {
                l_U260 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_2466( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_2870();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_2466( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_2870();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_2104(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* ISTIMERDONE */ int sub_2256(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* WRITESCRIPTLOG */ void sub_2466(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_2870()
{
     /* WRITESCRIPTLOG */ sub_2466( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_2945( ref l_U262 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_503() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_503(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U259 = 0;
    l_U259 = l_U259;
    l_U260 = 0;
    return;
}

/* RESETTIMER */ void sub_2945(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_IMAGEFX_STOP_BULLETCAM */ void sub_3548(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_2466( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
     /* CLEANCAMERA */ sub_3658( ref l_U273 );
    l_U272 = 1;
    return;
}

/* CLEANCAMERA */ void sub_3658(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* P_CLEANUP_RS1 */ void sub_3795(boolean bParam0)
{
     /* MAL_WRITESCRIPTLOG */ sub_230( "P_CLEANUP_RS1" );
    if (bParam0)
    {
         /* TERMINATEISEQ */ sub_3855( -1313172978, 1 );
         /* TERMINATEISEQ */ sub_3855( 1476011597, 1 );
         /* TERMINATEISEQ */ sub_3855( -931023773, 1 );
        STOP_SCRIPT_STREAM( g_U2867 );
    }
    ISEQ_UNREGISTER_ENTITY( 2128723147, "CS1" );
    ISEQ_UNREGISTER_ENTITY( 2128723147, "CS2" );
    ISEQ_UNREGISTER_ENTITY( 2128723147, "CS3" );
    ISEQ_UNREGISTER_ENTITY( 2128723147, "CS4" );
    ISEQ_UNREGISTER_ENTITY( 2128723147, "CS5" );
     /* TERMINATEISEQ */ sub_3855( 2128723147, 1 );
    ISEQ_UNREGISTER_ENTITY( -1999590465, "CS1" );
     /* TERMINATEISEQ */ sub_3855( -1999590465, 1 );
    ISEQ_UNREGISTER_ENTITY( -754727277, "CS2" );
     /* TERMINATEISEQ */ sub_3855( -754727277, 1 );
    ISEQ_UNREGISTER_ENTITY( 1082088136, "CS3" );
     /* TERMINATEISEQ */ sub_3855( 1082088136, 1 );
    ISEQ_UNREGISTER_ENTITY( 1210507618, "CS4" );
     /* TERMINATEISEQ */ sub_3855( 1210507618, 1 );
    ISEQ_UNREGISTER_ENTITY( -1793275080, "CS5" );
     /* TERMINATEISEQ */ sub_3855( -1793275080, 1 );
    ISEQ_UNREGISTER_ENTITY( 191130716, "player" );
     /* TERMINATEISEQ */ sub_3855( 191130716, 1 );
     /* CLEANPEDARRAY */ sub_4472( ref l_U333 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
     /* CLEANPED */ sub_4522( l_U319 );
     /* CLEANVEHICLE */ sub_4650( l_U318 );
    if ((CUTSCENE_NAMED_IS_LOADING( "02_02_NC_concat" )) || (CUTSCENE_IS_LOADED( "02_02_NC_concat" )))
    {
        CLEAR_NAMED_CUTSCENE( "02_02_NC_concat" );
    }
    DISABLE_RESTART_CHECKPOINT( 0 );
     /* P_STOP_SP_CHALLENGES */ sub_4808();
    return;
}

/* TERMINATEISEQ */ void sub_3855(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* CLEANPEDARRAY */ void sub_4472(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_4522( (uParam0^)[I] );
    }
    return;
}

/* CLEANPED */ void sub_4522(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANVEHICLE */ void sub_4650(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_4808()
{
     /* WRITESCRIPTLOG */ sub_2466( "CCB", "P_STOP_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_2466( "CCB", "Stopping the Nightclub_RS1 context...", 0 );
    END_CONTEXT( "Nightclub_RS1" );
    return;
}

/* P_RS_GLOBALCLEANUP */ void sub_4967()
{
     /* MAL_WRITESCRIPTLOG */ sub_230( "P_RS_GlobalCleanup" );
    DETACH_PED( g_U2763, 1 );
    DETACH_PED( g_U2749, 1 );
    DETACH_PED(  /* PLAYER_PED_ID */ sub_465(), 1 );
     /* CLEANPED */ sub_4522( g_U2763 );
     /* CLEANPED */ sub_4522( g_U2749 );
     /* CLEANPED */ sub_4522( g_U2777 );
     /* CLEANVEHICLE */ sub_4650( g_U2866 );
     /* TERMINATEISEQ */ sub_3855( -1313172978, 1 );
     /* TERMINATEISEQ */ sub_3855( -931023773, 1 );
     /* TERMINATEISEQ */ sub_3855( 1476011597, 1 );
     /* MAL_PEDPLAYERACTIONTREENODE */ sub_5192(  /* PLAYER_PED_ID */ sub_465(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
    ENABLE_HIT_DETECTION( 1 );
    ENABLE_LAST_MAN_STANDING( 1 );
    SET_SILHOUETTE_ACTIVE( 1 );
    SET_PLAYER_COMBAT_TIMER_MODE( 0 );
    PLAYER_SET_AIM_MODE( 0 );
    ENABLE_CROSSHAIR( 1 );
    SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_465(), 0 );
    SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_465(), 0, 0, 0, 0, 0 );
    SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_503(), 0, 0 );
    SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_465(), 1 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    SET_PED_CAN_RAGDOLL(  /* PLAYER_PED_ID */ sub_465(), 1 );
    AUDIO_SET_PED_FOOTSTEPS_ON( 1 );
    SET_INSTANT_FIRE_FORCED( 0 );
    RELEASE_PED_ENTITY_SYNC_POINT(  /* PLAYER_PED_ID */ sub_465() );
    SET_PED_USES_ANIMATED_DEATH(  /* PLAYER_PED_ID */ sub_465(), 0 );
    ALLOW_BULLET_CAMERA_CHEAT( 1 );
     /* CLEANOBJECT */ sub_5446( l_U23 );
    return;
}

/* MAL_PEDPLAYERACTIONTREENODE */ void sub_5192(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

/* CLEANOBJECT */ void sub_5446(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* P_REQUEST_RS1_NONPERSISTENT_ASSETS */ void sub_5508()
{
     /* MAL_WRITESCRIPTLOG */ sub_230( "P_REQUEST_RS1_NONPERSISTENT_ASSETS start" );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_5610( 70, ref g_U1903 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_5610( 304, ref g_U1903 );
     /* MAL_WRITESCRIPTLOG */ sub_230( "P_REQUEST_RS1_NONPERSISTENT_ASSETS end" );
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ void sub_5610(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ sub_5670( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING asset name: {} ###", 1, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_5940( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ int sub_5670(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_5940( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is loading: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_5940( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The VEHICLE_RECORDING asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_5940( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_7552( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being removed: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_5940( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, iParam0 );
            DISPLAYF( "The VEHICLE_RECORDING is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING: {} ###", 1, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_5940( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ void sub_5940(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_6008( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_6008(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_7552(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_RESET_AMBIENT_SPEECH_VARIABLES */ void sub_8496()
{
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RESET_AMBIENT_SPEECH_VARIABLES - START", 0 );
     /* DISABLETIMER */ sub_8599( ref l_U65 );
     /* DISABLETIMER */ sub_8599( ref l_U45 );
    l_U43 = STAT_GET_INT( "SP_BULLETS_FIRED_RH" );
    l_U44 = STAT_GET_INT( "SP_BULLETS_HIT_RH" );
     /* DISABLETIMER */ sub_8599( ref l_U25 );
     /* DISABLETIMER */ sub_8599( ref l_U34 );
    l_U74 = 0;
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RESET_AMBIENT_SPEECH_VARIABLES - END", 0 );
    return;
}

/* DISABLETIMER */ void sub_8599(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_8846(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_9020(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_2466( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_9239( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_10403( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10717( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11196( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10717( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11196( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10717( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11196( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11512( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11196( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11512( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11196( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_12084( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_12286( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_465(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_2466( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_9239(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9301( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_9301(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_10403(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_10717(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_11121( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_11121(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_11196(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_11512(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_11121( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_12084(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_12286(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9301( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_12384( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_12384(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_13678()
{
    int iVar2;
    int I;

    iVar2 = l_U310;
     /* P_HANDLE_SP_CHALLENGES */ sub_13713();
    switch (l_U310)
    {
        case 0: break;
        case 1:
         /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA" );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_14597();
         /* P_SET_STATIC_DATA */ sub_14784();
         /* P_INITIALIZE_SP_CHALLENGES */ sub_15075();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U310 = 2;
         /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
        break;
        case 2:
         /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
         /* P_REQUEST_RS1_PERSISTENT_ASSETS */ sub_15790();
         /* P_REQUEST_RS1_NONPERSISTENT_ASSETS */ sub_5508();
        l_U310 = 3;
         /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_INITIAL_LOADING_ASSETS" );
        break;
        case 3:
        if (((GET_SCRIPT_STREAM_STATE( "S_CLUB_HELI_RS_STREAM", g_U2867 )) == 2) AND (( /* F_STREAMREQ_ACTION_TREE_IS_LOADED */ sub_29730( ref g_U1964 )) AND (( /* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ sub_29344( ref g_U2133 )) AND (( /* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ sub_28924( ref g_U1903 )) AND (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_28510( ref g_U1350 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_28119( ref g_U1447 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_27717( ref g_U1301 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_27320( ref g_U1108 )))))))))
        {
            if ((NOT l_U274._fU0) AND (g_U891 == 6))
            {
                 /* P_SETUP_RS_WEATHER_AND_TOD */ sub_30169();
                l_U312 = 0;
                g_U1074[6] = 1;
                l_U310 = 4;
                 /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
            }
            else
            {
                l_U310 = 6;
                 /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
            }
        }
        break;
        case 4:
         /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_30482( ref l_U274 )))
        {
             /* F_GIVEPEDWEAPON */ sub_11512(  /* PLAYER_PED_ID */ sub_465(), 354276007, 25000, 0, 0 );
            l_U310 = 5;
             /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS" );
        }
        else
        {
            l_U310 = 6;
             /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_465() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_465(), 0, 0 ) ))
            {
                g_U892 = 6;
                if (NOT l_U274._fU0)
                {
                     /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_30952( ref l_U274, g_U892,  /* PLAYER_PED_ID */ sub_465(), g_U2216[6], g_U2331[6], g_U2370[6], g_U2409[6], 0 );
                }
                l_U310 = 6;
                 /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
            }
        }
        break;
        case 6:
        if (g_U1074[6])
        {
            if (l_U312 == 1)
            {
                 /* LOADSEAMLESSCUTSCENE */ sub_21895( "02_02_NC_concat", 1 );
            }
             /* P_SETUP_RS1_ENEMIES */ sub_35659();
             /* P_RS1_CREATE_CS_HELI */ sub_39136();
            l_U310 = 7;
             /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_INTRO" );
        }
        break;
        case 7:
        if (l_U311)
        {
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_47663( ref l_U452, "02_02_NC_concat", 40398, 41661, 43154, 44063, 44112, 46903, 250, 0 );
            l_U452._fU64 = 0;
            if (l_U312)
            {
                l_U452._fU4 = 2;
                l_U312 = 0;
            }
            else
            {
                l_U452._fU4 = 7;
            }
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_48236( ref l_U452 ))
        {
            l_U310 = 8;
             /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_SETUP" );
        }
        break;
        case 8:
         /* P_START_GAMEPLAY */ sub_50485();
        if (g_U892 != 6)
        {
            g_U892 = 6;
             /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_30952( ref l_U274, g_U892,  /* PLAYER_PED_ID */ sub_465(), g_U2216[6], g_U2331[6], g_U2370[6], g_U2409[6], 1 );
        }
         /* P_START_SP_CHALLENGES */ sub_50953();
        ENABLE_HIT_DETECTION( 0 );
        l_U310 = 9;
        if (IS_DEATH_PANEL_WIPE_ALLOWED())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
         /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_GAMEPLAY" );
        break;
        case 9:
        if (l_U311)
        {
             /* P_START_CHECKPOINT_THREAD */ sub_51273( ref g_U893[7] );
            SET_PAYNEKILLER_AMT( GET_PAYNEKILLER_AMT() + 1 );
             /* P_RESET_AMBIENT_SPEECH_VARIABLES */ sub_8496();
            CAMERA_CLEAR_POINT_AT_TARGET();
        }
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_51366( ref l_U333, 90.00000000, 0, 1 );
         /* P_MAKEHELIENGINESFUCKINGTURN */ sub_43918();
         /* P_RS_HANDLE_CAM_SHAKE */ sub_47213();
        if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_51575()))
        {
             /* P_RS_HANDLE_PLAYER_RELOAD_DIALOGUE */ sub_51675();
             /* P_RS_SPEECH_MAX_RESPONDS */ sub_53238();
        }
         /* P_RS_HANDLE_GIOVANNA_SCREAMS_TO_BEING_SHOT_AT */ sub_53527();
        if (IS_PED_DEAD( g_U2777 ))
        {
            l_U310 = 13;
             /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_SHOT_GIOVANNA" );
            break;
        }
        if (NOT (IS_VEHICLE_DEAD( l_U318 )))
        {
            if (( /* GET_VEHICLE_RECORDING_PLAYBACK_PERCENTAGE_PROGRESS */ sub_53977( l_U318, 304 )) > 95)
            {
                 /* WRITESCRIPTLOG */ sub_2466( "MF", "Cleaning up CS helicopter", 0 );
                 /* CLEANPED */ sub_4522( l_U319 );
                 /* CLEANVEHICLE */ sub_4650( l_U318 );
            }
        }
        if ((NOT (IS_PED_DEAD( l_U333[3] ))) AND ( /* ISTIMERDONE */ sub_2256( ref l_U424 )))
        {
             /* WRITESCRIPTLOG */ sub_2466( "MF", "Starting Vignette:  S_CLUB_VIG_12_NC_CS5_MOVE", 0 );
             /* MAL_REGISTERPEDWITHISEQ */ sub_42005( l_U333[3], -1793275080, "CS5" );
            ISEQ_START( -1793275080 );
            SET_PED_CONSUMING_AMMO( l_U333[3], 0 );
            SET_AMMO_IN_CLIP( l_U333[3], 406496141, GET_MAX_AMMO_IN_CLIP( l_U333[3], 406496141 ) );
             /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_FAIL" );
            break;
        }
        if (NOT l_U451)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_54417( ref l_U333 )) == 1)
            {
                if (( /* F_GET_FIRST_LIVING_PED_FROM_ARRAY */ sub_54541( ref l_U333 )) == l_U333[0])
                {
                     /* RESETTIMER */ sub_2945( ref l_U424 );
                     /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U424, 3000 );
                    l_U451 = 1;
                }
            }
        }
        if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_54417( ref l_U333 )) < 1)
        {
            l_U310 = 11;
             /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_OUTRO" );
            break;
        }
        if (NOT l_U420)
        {
            if (IS_PED_DEAD( l_U333[3] ))
            {
                if (NOT (ISEQ_QUERY_ENTITY_STATE( 2128723147, "CS3", 3 )))
                {
                    if (NOT (IS_PED_RELOADING( l_U333[2] )))
                    {
                        if (NOT l_U411._fU20)
                        {
                             /* WRITESCRIPTLOG */ sub_2466( "MF", "Starting CS Reaction Delay Timer...", 0 );
                             /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U411, GET_RANDOM_INT_IN_RANGE( 100, 500 ) );
                            l_U74 = 0;
                        }
                        else if ( /* ISTIMERDONE */ sub_2256( ref l_U411 ))
                        {
                             /* WRITESCRIPTLOG */ sub_2466( "MF", "Starting Vignette:  S_CLUB_VIG_12_NC_CS1_MOVE", 0 );
                            l_U420 = 1;
                            SET_PED_CONSUMING_AMMO( l_U333[2], 0 );
                            SET_AMMO_IN_CLIP( l_U333[2], 406496141, GET_MAX_AMMO_IN_CLIP( l_U333[2], 406496141 ) );
                             /* MAL_REGISTERPEDWITHISEQ */ sub_42005( l_U333[2], -1999590465, "CS1" );
                            ISEQ_START( -1999590465 );
                             /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U442, GET_RANDOM_INT_IN_RANGE( 1000, 1600 ) );
                            l_U74 = 1;
                        }
                    }
                }
            }
        }
        if ((IS_PED_DEAD( l_U333[3] )) AND (NOT l_U421))
        {
            if (IS_PED_DEAD( l_U333[2] ))
            {
                if (NOT (ISEQ_QUERY_ENTITY_STATE( 2128723147, "CS2", 3 )))
                {
                    if (NOT (IS_PED_RELOADING( l_U333[1] )))
                    {
                        if (NOT l_U411._fU20)
                        {
                             /* WRITESCRIPTLOG */ sub_2466( "MF", "Starting CS Reaction Delay Timer...", 0 );
                             /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U411, GET_RANDOM_INT_IN_RANGE( 100, 500 ) );
                            l_U74 = 0;
                        }
                        else if ( /* ISTIMERDONE */ sub_2256( ref l_U411 ))
                        {
                             /* WRITESCRIPTLOG */ sub_2466( "MF", "Starting Vignette:  S_CLUB_VIG_12_NC_CS2_MOVE", 0 );
                             /* MAL_REGISTERPEDWITHISEQ */ sub_42005( l_U333[1], -754727277, "CS2" );
                            ISEQ_START( -754727277 );
                            SET_PED_CONSUMING_AMMO( l_U333[1], 0 );
                            SET_AMMO_IN_CLIP( l_U333[1], 406496141, GET_MAX_AMMO_IN_CLIP( l_U333[1], 406496141 ) );
                            if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) < 40)
                            {
                                 /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U442, GET_RANDOM_INT_IN_RANGE( 1000, 1600 ) );
                            }
                            l_U74 = 1;
                            l_U421 = 1;
                        }
                    }
                }
            }
        }
        if (NOT l_U422)
        {
            if ((IS_PED_DEAD( l_U333[2] )) AND (IS_PED_DEAD( l_U333[1] )))
            {
                if (NOT (ISEQ_QUERY_ENTITY_STATE( 2128723147, "CS5", 3 )))
                {
                    if (NOT (IS_PED_RELOADING( l_U333[4] )))
                    {
                        if (NOT l_U411._fU20)
                        {
                             /* WRITESCRIPTLOG */ sub_2466( "MF", "Starting CS Reaction Delay Timer...", 0 );
                             /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U411, GET_RANDOM_INT_IN_RANGE( 100, 500 ) );
                            l_U74 = 0;
                        }
                        else if ( /* ISTIMERDONE */ sub_2256( ref l_U411 ))
                        {
                             /* WRITESCRIPTLOG */ sub_2466( "MF", "Starting Vignette:  S_CLUB_VIG_12_NC_CS3_MOVE", 0 );
                             /* MAL_REGISTERPEDWITHISEQ */ sub_42005( l_U333[4], 1082088136, "CS3" );
                            ISEQ_START( 1082088136 );
                            SET_PED_CONSUMING_AMMO( l_U333[4], 0 );
                            SET_AMMO_IN_CLIP( l_U333[4], 406496141, GET_MAX_AMMO_IN_CLIP( l_U333[4], 406496141 ) );
                            if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) < 40)
                            {
                                 /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U442, GET_RANDOM_INT_IN_RANGE( 1000, 1600 ) );
                            }
                            l_U74 = 1;
                            l_U422 = 1;
                        }
                    }
                }
            }
        }
        if (NOT l_U423)
        {
            if ((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_54417( ref l_U333 )) == 1) AND (NOT (IS_PED_DEAD( l_U333[0] ))))
            {
                if (NOT (ISEQ_QUERY_ENTITY_STATE( 2128723147, "CS1", 3 )))
                {
                    if (NOT (IS_PED_RELOADING( l_U333[0] )))
                    {
                        if (NOT l_U411._fU20)
                        {
                             /* WRITESCRIPTLOG */ sub_2466( "MF", "Starting CS Reaction Delay Timer...", 0 );
                             /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U411, GET_RANDOM_INT_IN_RANGE( 100, 500 ) );
                            l_U74 = 0;
                        }
                        else if ( /* ISTIMERDONE */ sub_2256( ref l_U411 ))
                        {
                             /* WRITESCRIPTLOG */ sub_2466( "MF", "Starting Vignette:  S_CLUB_VIG_12_NC_CS4_MOVE", 0 );
                             /* MAL_REGISTERPEDWITHISEQ */ sub_42005( l_U333[0], 1210507618, "CS4" );
                            ISEQ_START( 1210507618 );
                            SET_PED_CONSUMING_AMMO( l_U333[0], 0 );
                            SET_AMMO_IN_CLIP( l_U333[0], 406496141, GET_MAX_AMMO_IN_CLIP( l_U333[0], 406496141 ) );
                            if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) < 40)
                            {
                                 /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U442, GET_RANDOM_INT_IN_RANGE( 1000, 1600 ) );
                            }
                            l_U74 = 1;
                            l_U423 = 1;
                        }
                    }
                }
            }
        }
         /* P_RS1_HANDLE_CAMERA_CUT */ sub_56350();
        break;
        case 13:
        if (l_U311)
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            l_U310 = 0;
            l_U313 = 1;
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        break;
        case 10:
        if (l_U311)
        {
             /* NIS_PRE_SETUP */ sub_49127( 1, 0, 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
             /* P_RESET_AMBIENT_SPEECH_VARIABLES */ sub_8496();
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_465(), 0, 0 ), 13, 0 );
            if (NOT (IS_PED_DEAD( l_U333[3] )))
            {
                 /* WRITESCRIPTLOG */ sub_2466( "MF", "Performing Death Cam Setup for: piRS1_HELIPAD_CS[3]", 0 );
                 /* MAL_SETACTINT */ sub_57011( g_U2777, 57, 1000 );
                WAIT( 0 );
                CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_06_HP", "VIG_12_NC_GIO_HELIPAD_CS5_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
                l_U524 = {49.30200000, -30.35100000, 94.26300000};
            }
            else if (NOT (IS_PED_DEAD( l_U333[2] )))
            {
                 /* WRITESCRIPTLOG */ sub_2466( "MF", "Performing Death Cam Setup for: piRS1_HELIPAD_CS[2]", 0 );
                 /* MAL_SETACTINT */ sub_57011( g_U2777, 53, 1000 );
                WAIT( 0 );
                CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_06_HP", "VIG_12_NC_GIO_HELIPAD_CS1_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
                l_U524 = {49.30200000, -30.35100000, 94.26300000};
            }
            else if (NOT (IS_PED_DEAD( l_U333[1] )))
            {
                 /* WRITESCRIPTLOG */ sub_2466( "MF", "Performing Death Cam Setup for: piRS1_HELIPAD_CS[1]", 0 );
                 /* MAL_SETACTINT */ sub_57011( g_U2777, 54, 1000 );
                WAIT( 0 );
                CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_06_HP", "VIG_12_NC_GIO_HELIPAD_CS2_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
                l_U524 = {49.30200000, -30.35100000, 94.26300000};
            }
            else if (NOT (IS_PED_DEAD( l_U333[4] )))
            {
                 /* WRITESCRIPTLOG */ sub_2466( "MF", "Performing Death Cam Setup for: piRS1_HELIPAD_CS[4]", 0 );
                 /* MAL_SETACTINT */ sub_57011( g_U2777, 55, 1000 );
                WAIT( 0 );
                CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_06_HP", "VIG_12_NC_GIO_HELIPAD_CS3_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
                l_U524 = {49.30200000, -30.35100000, 94.26300000};
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_2466( "MF", "Performing Death Cam Setup for: piRS1_HELIPAD_CS[0] (or generic)", 0 );
                CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_06_HP", "VIG_12_NC_GIO_HELIPAD_CS4_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
                l_U524 = {49.62000000, -31.26000000, 94.27000000};
            };;;;
             /* P_IMAGEFX_START_BULLETCAM */ sub_58089( "CLUB_RS_GIOV1_SCRIPTED_FAIL_FX", 0 );
            if (NOT (IS_PED_DEAD( g_U2777 )))
            {
                SET_PED_GORE( g_U2777, 1 );
                SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 0 );
            }
             /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U479, 1000 );
             /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U515, 3000 );
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_51911( ref l_U105 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52022( 1, g_U2777, "GIOVANNA", ref l_U105, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52022( 0,  /* PLAYER_PED_ID */ sub_465(), "MAX", ref l_U105, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_52290( "SCLB_GVNSC1", ref l_U105, 8, 1 );
             /* TELEPORTPED */ sub_58567( g_U2777, l_U524, GET_PED_HEADING( g_U2777 ) );
             /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U497, 100 );
        }
        for ( I = 0; I < l_U333; I++ )
        {
            if (( /* MAL_GETACTINTSTATUS */ sub_56414( l_U333[I], 48 )) == 3)
            {
                 /* WRITESCRIPTLOG */ sub_2466( "MF", "ACT_INT_02 REACHED! Shooting Giovanna...", 0 );
                SET_PED_SHOOTS_AT_COORD( l_U333[I], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2777, 65488, 0.00000000, 0.00000000, 0.10000000 ) );
                 /* STARTTIMER */ sub_1151( ref l_U506 );
            }
        }
        if (( /* ISTIMERDONE */ sub_2256( ref l_U515 )) || (IS_PED_DEAD( g_U2777 )))
        {
            l_U313 = 1;
            AUDIO_MUSIC_SUSPEND( 5000 );
            for ( I = 0; I < l_U333; I++ )
            {
                 /* MAL_FINISHACTINT */ sub_56688( ref l_U333[I], 48 );
                 /* MAL_STANDSTILL */ sub_44324( ref l_U333[I] );
            }
        }
        if ( /* ISTIMERDONE */ sub_2256( ref l_U506 ))
        {
            if (NOT (IS_PED_DEAD( g_U2777 )))
            {
                 /* WRITESCRIPTLOG */ sub_2466( "MF", "Bullet did not kill Giovanna, spawning a magic bullet to kill her", 0 );
                SCRIPT_ASSERT( "Bullet did not kill Giovanna, spawning a magic bullet to kill her", 0 );
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2777, 65488, 0.00000000, 0.00000000, 1.00000000 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2777, 65488, 0.00000000, 0.00000000, 0.00000000 ), 99, 1, 406496141, 0 );
            }
        }
        if (( /* ISTIMERDONE */ sub_2256( ref l_U515 )) || (l_U479._fU16))
        {
            l_U310 = 0;
        }
        break;
        case 11:
         /* P_RS_HANDLE_CAM_SHAKE */ sub_47213();
        if (l_U311)
        {
             /* MAL_SETACTINT */ sub_57011( g_U2777, 47, 1000 );
             /* TELEPORTPED */ sub_58567( g_U2777, (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2777 ))) - (vector( 0.00000000, 0.00000000, 1.00000000)), 60.00000000 );
             /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U433, 1000 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
             /* P_RS1_CLEANUP_HELI_AND_PILOT */ sub_59328();
             /* P_RS1_RELEASE_HELI_ASSETS */ sub_59495();
            DISABLE_RESTART_CHECKPOINT( 1 );
             /* NIS_PRE_SETUP */ sub_49127( 1, 0, 0, 1 );
        }
        if (( /* ISTIMERDONE */ sub_2256( ref l_U433 )) == 1)
        {
            g_U1094 = 1;
            l_U310 = 14;
             /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_FINISHED" );
        }
        break;
        case 14:
        if (g_U1092)
        {
             /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_FINISHED" );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            DISABLE_RESTART_CHECKPOINT( 0 );
            l_U310 = 0;
             /* MAL_WRITESCRIPTLOG */ sub_230( "eCheckpointState = CP_IDLE" );
        }
        break;
    }
    if (l_U310 != iVar2)
    {
        l_U311 = 1;
    }
    else
    {
        l_U311 = 0;
    }
    return;
}

/* P_HANDLE_SP_CHALLENGES */ void sub_13713()
{
    switch (l_U527)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_2466( "CCB", "eAllInGoodTime - STATE_CHALLENGE_IDLE", 0 );
        l_U527 = 1;
        break;
        case 1:
        if (l_U310 >= 9)
        {
            if ((( /* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ sub_13878( ref l_U333 )) < 3) AND (IS_PED_DEAD( l_U333[3] )))
            {
                 /* WRITESCRIPTLOG */ sub_2466( "CCB", "The player killed the hostage taker before killing 3 peds...", 0 );
                 /* WRITESCRIPTLOG */ sub_2466( "CCB", "eAllInGoodTime - STATE_CHALLENGE_COMPLETE", 0 );
                l_U527 = 2;
            }
            else if ((( /* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ sub_13878( ref l_U333 )) >= 3) AND (IS_PED_DEAD( l_U333[3] )))
            {
                if (SCRIPT_VAR_HASH_EXISTS( 1584744746 ))
                {
                     /* WRITESCRIPTLOG */ sub_2466( "CCB", "The player killed all the peds...", 0 );
                    SCRIPT_VAR_HASH_SET_INT( 1584744746, 1 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_2466( "CCB", "The AllInGoodTime script variable is NOT valid!!!", 0 );
                }
                 /* WRITESCRIPTLOG */ sub_2466( "CCB", "eAllInGoodTime - STATE_CHALLENGE_COMPLETE", 0 );
                l_U527 = 2;
            }
        }
        break;
        case 2: break;
    }
    return;
}

/* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ void sub_13878(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_14597()
{
     /* MAL_WRITESCRIPTLOG */ sub_230( "P_INITIALIZE_SCRIPT_DATA" );
    l_U311 = 1;
    l_U420 = 0;
    l_U421 = 0;
    l_U422 = 0;
    l_U423 = 0;
    l_U451 = 0;
    l_U317 = 0;
     /* CREATETIMER */ sub_798( ref l_U479, 1000, 1, 0 );
     /* CREATETIMER */ sub_798( ref l_U488, 500, 1, 0 );
     /* CREATETIMER */ sub_798( ref l_U506, 30, 1, 0 );
     /* CREATETIMER */ sub_798( ref l_U515, 2500, 1, 0 );
     /* CREATETIMER */ sub_798( ref l_U442, 500, 1, 0 );
    return;
}

/* P_SET_STATIC_DATA */ void sub_14784()
{
     /* MAL_WRITESCRIPTLOG */ sub_230( "P_SET_STATIC_DATA" );
    l_U17[0] = g_U2453;
    l_U17[1] = 1037546172;
    l_U17[2] = 123419661;
    l_U17[3] = 1049690760;
    l_U17[4] = 230799837;
     /* SETUP_SCRIPTED_SPEECH */ sub_14904( "SCLBAUD" );
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_14904(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_14948();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_14948()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_15075()
{
     /* WRITESCRIPTLOG */ sub_2466( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U527 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1584744746 )))
    {
         /* WRITESCRIPTLOG */ sub_2466( "CCB", "Creating the AllInGoodTime script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1584744746 );
        DISPLAYF( "[CCB] ### The current AllInGoodTime value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1584744746 ) );
        if (SCRIPT_VAR_HASH_EXISTS( 1584744746 ))
        {
             /* WRITESCRIPTLOG */ sub_2466( "CCB", "The AllInGoodTime script variable was successfully created...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_2466( "CCB", "The AllInGoodTime script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_2466( "CCB", "The AllInGoodTime script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1584744746, 0 );
        DISPLAYF( "[CCB] ### The current AllInGoodTime value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1584744746 ) );
    }
    return;
}

/* P_REQUEST_RS1_PERSISTENT_ASSETS */ void sub_15790()
{
     /* MAL_WRITESCRIPTLOG */ sub_230( "P_REQUEST_RS1_PERSISTENT_ASSETS start" );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_15888( -1139974910, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_17873( ref l_U17, ref g_U1108 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_17979( 354276007, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_17979( 406496141, ref g_U1301 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19948( "LEVEL_S_CLUB_CP_06", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19948( "LEVEL_S_CLUB_CP_06_HP", ref g_U1447 );
    if ((g_U891 != 6) AND (l_U312 == 1))
    {
         /* LOADSEAMLESSCUTSCENE */ sub_21895( "02_02_NC_concat", 0 );
    }
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_15888( 2121457570, ref g_U1108 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_22258( 191130716, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_22258( -1313172978, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_22258( -931023773, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_22258( 1476011597, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_22258( 2128723147, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_22258( -1999590465, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_22258( -754727277, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_22258( 1082088136, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_22258( 1210507618, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_22258( -1793275080, ref g_U1350 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19948( "veh@std", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_19948( "veh@helicopter", ref g_U1447 );
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_25255( "Vehicle/Vehicle_heli.act", ref g_U1964 );
    REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
     /* MAL_WRITESCRIPTLOG */ sub_230( "P_REQUEST_RS1_PERSISTENT_ASSETS end" );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_15888(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_15955( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_16213( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_15955(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_16213( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_16213( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_16213( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_7552( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_16213( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_16213( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_16213(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_6008( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_17873(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_15888( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_17979(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_18033( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_18294( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_18033(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_18294( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_18294( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_18294( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_7552( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_18294( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_18294( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_18294(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_6008( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_19948(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_20000( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_20252( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_20000(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_20252( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_20252( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_20252( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_7552( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_20252( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_20252( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_20252(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_6008( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_21895(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_22258(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_22319( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_22569( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_22319(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_22569( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_22569( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_22569( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_22569( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_7552( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_7552( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_22569( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_22569( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_22569(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_6008( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_INSERT */ void sub_25255(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ sub_25309( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ACTION_TREE asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_25567( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ int sub_25309(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_25567( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_25567( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_ACTION_TREE_LOADED( uParam0 ))
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ACTION_TREE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_25567( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ACTION_TREE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_7552( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_25567( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_ACTION_TREE_LOADED( uParam0 ))
        {
            DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ACTION_TREE is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ACTION_TREE: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_25567( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ACTION_TREE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ void sub_25567(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_6008( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ACTION_TREE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_27320(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_27717(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_28119(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_28510(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ int sub_28924(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be requested: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to load: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be removed: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ int sub_29344(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ACTION_TREE_IS_LOADED */ int sub_29730(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* P_SETUP_RS_WEATHER_AND_TOD */ void sub_30169()
{
     /* MAL_WRITESCRIPTLOG */ sub_230( "P_SETUP_RS_WEATHER_AND_TOD" );
    RELEASE_TIME_OF_DAY();
    SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
    FREEZE_TIME_OF_DAY( 22, 0 );
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_30482(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_2466( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9020( uParam0,  /* PLAYER_PED_ID */ sub_465() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_30952(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_2466( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_2466( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_12286( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_31243( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_31720( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_31720( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31980( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_31720( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31980( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31980( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_31720( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31980( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31980( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31980( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_31720( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31980( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31980( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31980( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31980( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_33560( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_2466( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_31243(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9301( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_2466( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_2466( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_31720(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_31980(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_33560(int iParam0)
{
     /* WRITE_STRING */ sub_11121( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_33648( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_33725( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_33725( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_33725( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_33725( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_33725( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_34595( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU52 );
     /* WRITE_STRING */ sub_11121( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU96 );
     /* WRITE_STRING */ sub_11121( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU100 );
     /* WRITE_STRING */ sub_11121( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU104 );
     /* WRITE_STRING */ sub_11121( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU108 );
     /* WRITE_STRING */ sub_11121( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU112 );
     /* WRITE_STRING */ sub_11121( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU116 );
     /* WRITE_STRING */ sub_11121( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU120 );
     /* WRITE_STRING */ sub_11121( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU124 );
     /* WRITE_STRING */ sub_11121( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU128 );
     /* WRITE_STRING */ sub_11121( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_33894( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_33894( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_33894( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_33648(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_33725(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_33894(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_34595(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_SETUP_RS1_ENEMIES */ void sub_35659()
{
    int I;

     /* P_CREATEPEDSTRUCTWITHNAME */ sub_35729( ref l_U339[0], 45.45800000, -24.35200000, 94.26500000, 90.00000000, 360058256, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_35729( ref l_U339[1], 49.79800000, -22.86500000, 94.26600000, -45.00000000, -1363541453, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_35729( ref l_U339[2], 49.18500000, -24.71600000, 94.26600000, -45.00000000, 363091154, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_35729( ref l_U339[3], 49.67900000, -30.32500000, 94.26000000, 90.00000000, -3570185, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_35729( ref l_U339[4], 49.72000000, -20.05500000, 94.26600000, -90.00000000, -26033824, 7, 3, 2, 0, 0 );
    while (NOT ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_36052( ref l_U333, ref l_U339, -1, 1, 1, 0, 1 )))
    {
        WAIT( 0 );
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_37940( ref l_U333, "piRS1_HELIPAD_CS" );
    for ( I = 0; I < l_U333; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U333[I] )))
        {
            CLEAR_PED_TASKS( l_U333[I] );
            SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U333[I], 1 );
            SET_PED_IGNORE_LOS_CHECKS( l_U333[I], 1 );
            SET_PED_AS_ONE_SHOT_KILL( l_U333[I], 1 );
            SET_PED_COMBAT_MOVEMENT( l_U333[I], 0 );
            SET_PED_ACCURACY( l_U333[I], -729479261 );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_38226( l_U333[I], ref l_U405 );
            SET_PED_ALERTNESS( l_U333[I], 3 );
             /* F_GIVEPEDWEAPON */ sub_11512( l_U333[I], 406496141, 25000, 0, 0 );
            SET_PED_PATH_CAN_AVOID_LINE_OF_FIRE( l_U333[I], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U333[I], 1 );
            SET_BLOCKING_OF_PED_TARGETTING( l_U333[I], 1 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U333[3] )))
    {
        SET_PED_CONSUMING_AMMO( l_U333[3], 0 );
    }
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_35729(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* F_HANDLE_PED_ARRAY_SPAWN */ int sub_36052(unknown uParam0, unknown uParam1, int iParam2, boolean bParam3, boolean bParam4, int iParam5, unknown uParam6)
{
    int iVar9;
    int iVar10;
    int Result;

    iVar9 =  /* F_GET_NUM_SPAWNED_PED_IN_ARRAY */ sub_36093( uParam0, uParam1 );
    if (iParam2 == -1)
    {
        iVar10 = (uParam0^);
    }
    else
    {
        iVar10 = iParam2;
    }
    if (iVar9 < iVar10)
    {
        if ((uParam1^)[iVar9]._fU16 == 0)
        {
            SCRIPT_ASSERT( "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
             /* WRITESCRIPTLOG */ sub_2466( "MF", "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            PRINTSTRING( "INVALID SPAWN INDEX: " );
             /* WRITE_INT */ sub_33894( iVar9 );
            return 0;
        }
        if (NOT (DOES_PED_EXIST( (uParam0^)[iVar9] )))
        {
             /* LOADMODEL */ sub_36498( (uParam1^)[iVar9]._fU16, uParam6 );
            (uParam0^)[iVar9] =  /* CREATEPED */ sub_36750( ref (uParam1^)[iVar9] );
            if (NOT bParam4)
            {
                SET_PED_VISIBLE( (uParam0^)[iVar9], bParam4 );
                 /* WRITE_STRING */ sub_11121( "SPAWNING INVISIBLE PED!!!" );
            }
            if (iParam5 == 1)
            {
                 /* P_DEACTIVATEPED */ sub_37541( (uParam0^)[iVar9] );
                 /* WRITE_STRING */ sub_11121( "Deactivating Ped..." );
            }
        }
    }
    if (bParam3)
    {
        if (iVar9 == (iVar10 - 1))
        {
             /* WRITESCRIPTLOG */ sub_2466( "MF", "F_HANDLE_PED_ARRAY_SPAWN: Returning true Once.  If you see this looping, you likely have unitialized ped model data in your pedstruct array.", 0 );
            Result = 1;
        }
        return Result;
    }
    else if (iVar9 >= iVar10)
    {
        return 1;
    }
    return 0;
}

/* F_GET_NUM_SPAWNED_PED_IN_ARRAY */ void sub_36093(unknown uParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = (uParam1^);
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (DOES_PED_EXIST( (uParam0^)[I] )))
        {
            if ((uParam1^)[I]._fU16 != 0)
            {
                if (I < Result)
                {
                    Result = I;
                }
            }
        }
    }
    return Result;
}

/* LOADMODEL */ void sub_36498(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_11121( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* CREATEPED */ void sub_36750(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_36498( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_37241( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_37342( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_37241(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_37342(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_37541(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_37940(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_38226(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_11121( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_38396( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_38396( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* P_SETUP_AI_GROUP */ void sub_38396(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_RS1_CREATE_CS_HELI */ void sub_39136()
{
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS1_CREATE_CS_HELI - START", 0 );
    l_U318 =  /* CREATEVEHICLE */ sub_39240( 2121457570, 47.33440000, -23.67520000, 95.08020000, 340.88330000, 0, 0, 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U318 )))
    {
        SET_VEHICLE_CAN_BE_DAMAGED( l_U318, 0 );
        SET_VEHICLE_CAN_BE_TARGETTED( l_U318, 0 );
        SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( l_U318, 0 );
        SET_HELI_BLADES_FULL_SPEED( l_U318 );
    }
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_35729( ref l_U320, 0.00000000, 0.00000000, 0.00000000, 0, -3570185, 7, 3, 2, 0, 0 );
    l_U319 =  /* CREATEPEDINVEHICLE */ sub_39670( ref l_U320, l_U318, -1, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U319 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U319, 1 );
    }
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS1_CREATE_CS_HELI - END", 0 );
    return;
}

/* CREATEVEHICLE */ void sub_39240(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_36498( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* CREATEPEDINVEHICLE */ void sub_39670(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4)
{
    if ((HAS_MODEL_LOADED( iParam0->_fU16 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_36498( iParam0->_fU16, 1 );
    }
    if (((IS_VEHICLE_DEAD( uParam1 )) == 0) AND ((DOES_VEHICLE_EXIST( uParam1 )) == 1))
    {
        iParam0->_fU40 = CREATE_PED_INSIDE_VEHICLE( uParam1, iParam0->_fU24, iParam0->_fU16, uParam2, uParam4, iParam0->_fU48 );
    }
    else
    {
        SCRIPT_ASSERT( "The vehicle your trying to create a ped inside of is not valid!!!", 0 );
    }
    if (iParam3 == 1)
    {
        while ((DOES_PED_EXIST( iParam0->_fU40 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for ped created inside a vehicle to exist... ###", 0 );
            WAIT( 0 );
        }
    }
     /* SETPEDDEFAULTSTATS */ sub_37241( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_37342( iParam0->_fU40 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        iParam0->_fU44 = 1;
    }
    return iParam0->_fU40;
}

/* F_RS1_02_02_SETUP */ int sub_40398()
{
     /* WRITESCRIPTLOG */ sub_2466( "MF", "F_RS1_02_02_SETUP - START", 0 );
     /* P_SETUP_HELI */ sub_40480( 70, 0.15000000, 1400.25000000 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_35729( ref g_U2736, 55.11000000, -24.06000000, 94.27000000, 0.00000000, 817667075, 26, 6, 0, 0, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_35729( ref g_U2750, 54.04000000, -24.06000000, 94.27000000, 0.00000000, -383356854, 26, 6, 0, 0, 1 );
    if (NOT (DOES_PED_EXIST( g_U2763 )))
    {
        g_U2763 =  /* CREATEPED */ sub_36750( ref g_U2750 );
    }
    WAIT( 0 );
    if (NOT (DOES_PED_EXIST( g_U2749 )))
    {
        g_U2749 =  /* CREATEPED */ sub_36750( ref g_U2736 );
    }
    WAIT( 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_35729( ref g_U2764, 49.08000000, -30.61000000, 94.26000000, 90, 1421546599, 5, 2, 0, 0, 0 );
    if (NOT (DOES_PED_EXIST( g_U2777 )))
    {
        g_U2777 =  /* CREATEPED */ sub_36750( ref g_U2764 );
    }
    if (NOT (IS_PED_DEAD( l_U333[4] )))
    {
        SET_PED_VISIBLE( l_U333[4], 0 );
    }
    return 1;
}

/* P_SETUP_HELI */ void sub_40480(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_WRITESCRIPTLOG */ sub_230( "P_SETUP_HELI" );
    if (NOT (DOES_VEHICLE_EXIST( g_U2866 )))
    {
        g_U2866 =  /* CREATEVEHICLE */ sub_39240( 1049690760, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( uParam0, uParam2 ), 0.00000000, 1, 0, 1 );
    }
    else if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_COORDS( g_U2866, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( uParam0, uParam2 ) );
    }
    if ((NOT (IS_VEHICLE_DEAD( g_U2866 ))) AND (DOES_VEHICLE_EXIST( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
        SILENCE_VEHICLE( g_U2866, 1 );
        SET_VEHICLE_AS_MISSION_VEHICLE( g_U2866 );
        SET_VEHICLE_EXTRA( g_U2866, 5, 1 );
        SET_VEHICLE_INTERIORLIGHT( g_U2866, 1 );
        SET_VEHICLE_DOOR_OPEN( g_U2866, 3 );
        SET_VEHICLE_HEALTH( g_U2866, 600 );
        SET_VEHICLE_ENGINE_HEALTH( g_U2866, 600.00000000 );
        SET_VEHICLE_PETROL_TANK_HEALTH( g_U2866, 300.00000000 );
        SET_VEHICLE_CAN_BE_DAMAGED( g_U2866, 0 );
        SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( g_U2866, 1 );
        SET_VEHICLE_PROOFS( g_U2866, 0, 1, 1, 1, 1 );
         /* P_START_VEHICLE_PLAYBACK */ sub_40849( g_U2866, uParam0, uParam1, uParam2, 0 );
        PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
        if (NOT (DOES_OBJECT_EXIST( l_U23 )))
        {
            l_U23 = CREATE_OBJECT( 230799837, 0.00000000, 1.00000000, 0.00000000, 0, 0 );
            ATTACH_OBJECT_TO_VEHICLE( l_U23, g_U2866, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
    ALLOW_BULLET_CAMERA_CHEAT( 0 );
    return;
}

/* P_START_VEHICLE_PLAYBACK */ void sub_40849(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3, boolean bParam4)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
    }
     /* LOADVEHICLERECORDING */ sub_40927( uParam1, 1 );
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
        SET_PLAYBACK_SPEED( uParam0, uParam2 );
        if (fParam3 > 0.00000000)
        {
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, fParam3 );
        }
    }
    if (bParam4)
    {
        while ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
        {
             /* WRITE_STRING */ sub_11121( "Waiting for vehicle to start playing recorded path." );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADVEHICLERECORDING */ void sub_40927(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a recording to be loaded: Rec# {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_RS1_02_02_REGISTER */ void sub_41661()
{
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS1_02_02_REGISTER - START", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_465() )))
    {
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE(  /* PLAYER_PED_ID */ sub_465(), g_U2866, 0, 0.56600000, 0.00000000, 0.80400000, -90.00000000, 0.00000000, 1, 0 );
        SET_VEHICLE_AS_ENTITY_SYNC_POINT( g_U2866,  /* PLAYER_PED_ID */ sub_465() );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_465(), 0, 0 ), "W_PI_PT92_Aa_H", 0 );
        ISEQ_REGISTER_ENTITY( 191130716, "player",  /* PLAYER_PED_ID */ sub_465(), 0 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_465(), 1, 0 ) ))
        {
            REMOVE_PED_WEAPON(  /* PLAYER_PED_ID */ sub_465(), GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_465(), 1, 0 ) );
        }
    }
    CUTSCENE_REGISTER_ISEQ( 191130716 );
    CUTSCENE_REGISTER_ISEQ( -931023773 );
    CUTSCENE_REGISTER_ISEQ( 1476011597 );
    CUTSCENE_REGISTER_ISEQ( 2128723147 );
     /* MAL_REGISTERPEDWITHISEQ */ sub_42005( g_U2777, 2128723147, "giovanna" );
     /* MAL_REGISTERPEDWITHISEQ */ sub_42005( l_U333[0], 2128723147, "CS1" );
     /* MAL_REGISTERPEDWITHISEQ */ sub_42005( l_U333[1], 2128723147, "CS2" );
     /* MAL_REGISTERPEDWITHISEQ */ sub_42005( l_U333[2], 2128723147, "CS3" );
     /* MAL_REGISTERPEDWITHISEQ */ sub_42005( l_U333[3], 2128723147, "CS4" );
     /* MAL_REGISTERPEDWITHISEQ */ sub_42005( l_U333[4], 2128723147, "CS5" );
    if (NOT (IS_VEHICLE_DEAD( l_U318 )))
    {
        FREEZE_VEHICLE_POSITION( l_U318, 1 );
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U318, "heli_cs", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        FREEZE_VEHICLE_POSITION( g_U2866, 1 );
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U2866, "heli_luxury", 0 );
    }
    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2777, "Giov_Club_B", 0 );
    }
    if (NOT (IS_PED_DEAD( g_U2749 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2749, "Pass_Club_H", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( g_U2749, g_U2866, 0, -0.61500000, 1.48000000, 1.55500000, 0.00000000, 0.00000000, 1, 0 );
         /* MAL_REGISTERPEDWITHISEQ */ sub_42005( g_U2749, 1476011597, "passos" );
    }
    if (NOT (IS_PED_DEAD( g_U2763 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2763, "Marc_Casu", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( g_U2763, g_U2866, 0, 0.67600000, 1.52300000, 1.50300000, 0.00000000, 0.00000000, 1, 0 );
         /* MAL_REGISTERPEDWITHISEQ */ sub_42005( g_U2763, -931023773, "marcello" );
    }
    if (NOT (IS_PED_DEAD( l_U333[0] )))
    {
        CUTSCENE_REGISTER_PED_TELEPORT( l_U333[0], l_U339[0]._fU0, l_U339[0]._fU12 );
    }
    if (NOT (IS_PED_DEAD( l_U333[4] )))
    {
        CUTSCENE_REGISTER_PED_TELEPORT( l_U333[4], l_U339[4]._fU0, l_U339[4]._fU12 );
    }
    if (NOT (IS_PED_DEAD( l_U333[3] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U333[3], "G_CS_NCSM_B1", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U333[3], 0, 0 ), "W_SB_Uzi_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U333[3], l_U339[3]._fU0, l_U339[3]._fU12 );
    }
    if (NOT (IS_PED_DEAD( l_U333[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U333[1], "G_CS_NCSM_B1^2", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U333[1], 0, 0 ), "W_PI_38_Ba_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U333[1], l_U339[1]._fU0, l_U339[1]._fU12 );
    }
    if (NOT (IS_PED_DEAD( l_U333[2] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U333[2], "G_CS_NCSM_B1^1", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U333[2], 0, 0 ), "W_SB_Uzi_Aa_H^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U333[2], l_U339[2]._fU0, l_U339[2]._fU12 );
    }
    CUTSCENE_FORCE_GAMEPLAY_HEADING_PITCH_UPDATE();
    CUTSCENE_ENABLE_SKIP( 0 );
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS1_02_02_REGISTER - END", 0 );
    return;
}

/* MAL_REGISTERPEDWITHISEQ */ void sub_42005(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

/* P_RS1_02_02_HANDLE */ void sub_43154()
{
    if (l_U452._fU52 == 1)
    {
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        SET_CAMERA_OVERRIDE( "RAIL_HELI_CAMERA", "RAIL_HELI_CAMERA_AIM", 0, 1, 1 );
         /* P_CLOSEDOOR */ sub_43267( ref g_U3297, 1 );
         /* P_CLOSEDOOR */ sub_43267( ref g_U3304, 1 );
        g_U2655 = 1;
    }
    if (NOT l_U316)
    {
        if (GET_CUTSCENE_TIME_MS() > 7730)
        {
             /* WRITESCRIPTLOG */ sub_2466( "MF", "SMASHING GLASS!", 0 );
            SMASH_GLASS_IN_RADIUS( -42.79000000, 107.99000000, -0.10000000, 2.00000000, 1.00000000 );
            l_U316 = 1;
        }
    }
    if (NOT l_U314)
    {
        if (GET_CUTSCENE_TIME_MS() > 58400)
        {
             /* WRITESCRIPTLOG */ sub_2466( "MF", "Music Cue: 4.2A", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_2", "NIGHTCLUB_01_2", 0, 7000, -1, -1082130432, 0 );
            l_U314 = 1;
        }
    }
    if (NOT l_U315)
    {
        if (GET_CUTSCENE_TIME_MS() > 83000)
        {
             /* WRITESCRIPTLOG */ sub_2466( "MF", "Musc Cue: 4.2B", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_1_2", "NIGHTCLUB_01_1_2", 0, 4000, -1, -1082130432, 0 );
            CUTSCENE_ENABLE_SKIP( 1 );
            l_U315 = 1;
        }
    }
     /* P_MAKEHELIENGINESFUCKINGTURN */ sub_43918();
    if (NOT (IS_VEHICLE_DEAD( l_U318 )))
    {
        SET_VEHICLE_ENGINE_ON( l_U318, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( l_U318 );
    }
    return;
}

/* P_CLOSEDOOR */ void sub_43267(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_43293( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_43377( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_43293(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_43377(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_MAKEHELIENGINESFUCKINGTURN */ void sub_43918()
{
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
    }
    return;
}

/* CUTSYS_DEFAULT_POSTCUTSCENE */ int sub_44063()
{
    return 1;
}

/* P_RS1_02_02_SETUP_BLENDOUT */ void sub_44112()
{
    int I;

     /* P_SETUP_GIOVANNA */ sub_44188( 49.08000000, -30.61000000, 94.26000000, 90, 2128723147, "giovanna", 0 );
    if (NOT (ISEQ_QUERY_STATE( 2128723147, 3 )))
    {
         /* P_SETUP_HELI */ sub_40480( 70, 0.15000000, 1400.25000000 );
         /* P_RS1_START_VIG_12 */ sub_44730();
    }
     /* P_RS1_START_CS_HELI */ sub_44979();
     /* P_SETUP_PLAYER */ sub_45149( 191130716, "player" );
     /* P_SETUP_PASSOS_AND_MARCELLO */ sub_45781();
    UNPAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
    CAMERA_POINT_AT_COORD( 51.95000000, -20.77000000, 96.25000000, 50000 );
    FREEZE_VEHICLE_POSITION( g_U2866, 0 );
     /* MAL_TELEPORTPED */ sub_46455( g_U2777, g_U2764._fU0, g_U2764._fU12 );
    SET_PLAYBACK_SPEED( g_U2866, 0.15000000 );
    PLAY_SCRIPT_STREAM_FROM_VEHICLE( g_U2866, g_U2867 );
     /* WRITESCRIPTLOG */ sub_2466( "MF", "Music Cue: 6.1", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_1_2_4", "", 0, 1000, -1, -1082130432, 0 );
    if (NOT (IS_PED_DEAD( l_U333[4] )))
    {
        SET_PED_VISIBLE( l_U333[4], 1 );
    }
    for ( I = 0; I < l_U333; I++ )
    {
        SET_BLOCKING_OF_PED_TARGETTING( l_U333[I], 0 );
        CLEAR_PED_TASKS( l_U333[I] );
        REGISTER_TARGET( l_U333[I],  /* PLAYER_PED_ID */ sub_465() );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U333[I], 0 );
        TASK_SHOOT_AT_PED( l_U333[I],  /* PLAYER_PED_ID */ sub_465(), -1, 0, 1, 0, 0 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_06_HP", "B_OUT_NC_RS_START_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
    return;
}

/* P_SETUP_GIOVANNA */ void sub_44188(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, boolean bParam6)
{
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_35729( ref g_U2764, uParam0, uParam3, 1421546599, 5, 2, 0, 0, 0 );
    if (NOT (DOES_PED_EXIST( g_U2777 )))
    {
        g_U2777 =  /* CREATEPED */ sub_36750( ref g_U2764 );
    }
    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
         /* MAL_WRITESCRIPTLOG */ sub_230( "Setting Giovanna crap" );
         /* MAL_STANDSTILL */ sub_44324( ref g_U2777 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2777, 1 );
        SET_BULLET_CAM_PREF( g_U2777, "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
        SET_PED_DIES_WHEN_INJURED( g_U2777, 1 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 1 );
        RESET_PED_GORE( g_U2777 );
        SET_COLLISION_BETWEEN_PEDS( g_U2777, 0 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( g_U2777, 0 );
        SET_PED_USES_DYING_ANIM( g_U2777, 0 );
        if (NOT (ISEQ_QUERY_STATE( uParam4, 3 )))
        {
             /* MAL_REGISTERPEDWITHISEQ */ sub_42005( g_U2777, uParam4, uParam5 );
            if (bParam6)
            {
                ISEQ_START( uParam4 );
            }
        }
    }
    return;
}

/* MAL_STANDSTILL */ void sub_44324(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

/* P_RS1_START_VIG_12 */ void sub_44730()
{
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS1_START_VIG_12 - START", 0 );
     /* MAL_REGISTERPEDWITHISEQ */ sub_42005( l_U333[0], 2128723147, "CS1" );
     /* MAL_REGISTERPEDWITHISEQ */ sub_42005( l_U333[1], 2128723147, "CS2" );
     /* MAL_REGISTERPEDWITHISEQ */ sub_42005( l_U333[2], 2128723147, "CS3" );
     /* MAL_REGISTERPEDWITHISEQ */ sub_42005( l_U333[3], 2128723147, "CS4" );
     /* MAL_REGISTERPEDWITHISEQ */ sub_42005( l_U333[4], 2128723147, "CS5" );
    ISEQ_START( 2128723147 );
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS1_START_VIG_12 - END", 0 );
    return;
}

/* P_RS1_START_CS_HELI */ void sub_44979()
{
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS1_START_CS_HELI - START", 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_40849( l_U318, 304, 1065353216, 0, 0 );
    SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( l_U318, 2500 );
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS1_START_CS_HELI - END", 0 );
    return;
}

/* P_SETUP_PLAYER */ void sub_45149(unknown uParam0, unknown uParam1)
{
     /* MAL_WRITESCRIPTLOG */ sub_230( "P_SETUP_PLAYER" );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_465() )))
    {
        SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_465(), 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_465(), 1 );
        SET_ADRENALINE_AMT( 0.75000000 );
        CLEAR_PED_TASKS(  /* PLAYER_PED_ID */ sub_465() );
        SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_465(), GET_PED_MAX_HEALTH(  /* PLAYER_PED_ID */ sub_465() ), 0 );
        if (NOT (IS_PED_ATTACHED_TO_ANY_VEHICLE(  /* PLAYER_PED_ID */ sub_465() )))
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                ATTACH_PED_TO_VEHICLE(  /* PLAYER_PED_ID */ sub_465(), g_U2866, 0, 0.56600000, 0.00000000, 0.80400000, -90.00000000, 0.00000000, 1, 0, 0, 1 );
                SET_VEHICLE_AS_ENTITY_SYNC_POINT( g_U2866,  /* PLAYER_PED_ID */ sub_465() );
            }
        }
        SET_PED_CAN_RAGDOLL(  /* PLAYER_PED_ID */ sub_465(), 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        ENABLE_HIT_DETECTION( 0 );
        ENABLE_LAST_MAN_STANDING( 0 );
        SET_SILHOUETTE_ACTIVE( 0 );
        SET_RAIL_RELATIVE_DIR( 2, 0 );
        SET_PLAYER_COMBAT_TIMER_MODE( 1 );
        PLAYER_SET_AIM_MODE( 2 );
        AUDIO_SET_PED_FOOTSTEPS_ON( 0 );
        SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_465(), 0, 0 );
        SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_465(), 1, 0 );
        SET_INSTANT_FIRE_FORCED( 1 );
        SET_PED_USES_ANIMATED_DEATH(  /* PLAYER_PED_ID */ sub_465(), 1 );
        if (NOT (ISEQ_QUERY_STATE( uParam0, 3 )))
        {
             /* WRITESCRIPTLOG */ sub_2466( "MF", "Starting Player Helicopter Interactive Sequence", 0 );
            PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_465(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
            ISEQ_REGISTER_ENTITY( uParam0, uParam1,  /* PLAYER_PED_ID */ sub_465(), 0 );
            ISEQ_START( uParam0 );
        }
        REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_465() );
         /* F_GIVEPEDWEAPON */ sub_11512(  /* PLAYER_PED_ID */ sub_465(), 354276007, 25000, 0, 0 );
        SET_CAMERA_OVERRIDE( "RAIL_HELI_CAMERA", "RAIL_HELI_CAMERA_AIM", 0, 1, 1 );
    }
    return;
}

/* P_SETUP_PASSOS_AND_MARCELLO */ void sub_45781()
{
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_35729( ref g_U2736, 55.11000000, -24.06000000, 94.27000000, 0.00000000, 817667075, 26, 6, 0, 0, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_35729( ref g_U2750, 54.04000000, -24.06000000, 94.27000000, 0.00000000, -383356854, 26, 6, 0, 0, 1 );
    if (NOT (ISEQ_IS_LOADED( -931023773 )))
    {
        ISEQ_REQUEST( -931023773 );
    }
    if (NOT (ISEQ_IS_LOADED( 1476011597 )))
    {
        ISEQ_REQUEST( 1476011597 );
    }
    if (NOT (DOES_PED_EXIST( g_U2763 )))
    {
        g_U2763 =  /* CREATEPED */ sub_36750( ref g_U2750 );
    }
    if (NOT (IS_PED_DEAD( g_U2763 )))
    {
         /* MAL_STANDSTILL */ sub_44324( ref g_U2763 );
        SET_PED_INVINCIBLE( g_U2763, 1 );
        DETACH_PED( g_U2763, 1 );
        if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
        {
            ATTACH_PED_TO_VEHICLE( g_U2763, g_U2866, 0, 0.67600000, 1.52300000, 1.50300000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        }
    }
    if (NOT (DOES_PED_EXIST( g_U2749 )))
    {
        g_U2749 =  /* CREATEPED */ sub_36750( ref g_U2736 );
    }
    if (NOT (IS_PED_DEAD( g_U2749 )))
    {
         /* MAL_STANDSTILL */ sub_44324( ref g_U2749 );
        SET_PED_INVINCIBLE( g_U2749, 1 );
        DETACH_PED( g_U2749, 1 );
        if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
        {
            ATTACH_PED_TO_VEHICLE( g_U2749, g_U2866, 0, -0.61500000, 1.48000000, 1.55500000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        }
    }
    if (NOT (ISEQ_QUERY_STATE( -931023773, 3 )))
    {
         /* MAL_REGISTERPEDWITHISEQ */ sub_42005( g_U2763, -931023773, "marcello" );
        ISEQ_START( -931023773 );
    }
    if (NOT (ISEQ_QUERY_STATE( 1476011597, 3 )))
    {
         /* MAL_REGISTERPEDWITHISEQ */ sub_42005( g_U2749, 1476011597, "passos" );
        ISEQ_START( 1476011597 );
    }
    return;
}

/* MAL_TELEPORTPED */ void sub_46455(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* F_RS1_02_02_HANDLE_BLENDOUT */ int sub_46903()
{
    if (l_U452._fU52)
    {
        if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_46957()))
        {
            DO_SCREEN_FADE_IN( 100 );
        }
    }
     /* P_MAKEHELIENGINESFUCKINGTURN */ sub_43918();
     /* P_RS_HANDLE_CAM_SHAKE */ sub_47213();
    if (NOT l_U317)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_CP_06_HP", "B_OUT_NC_RS_START_CAM" )) - 1000))
        {
            CAMERA_ANIMATED_STOP( 1000, 1 );
            l_U317 = 1;
        }
    }
    if ((ISEQ_QUERY_ENTITY_STATE( 191130716, "player", 6 )) || (ISEQ_QUERY_ENTITY_STATE( 191130716, "player", 5 )))
    {
        return 1;
    }
    return 0;
}

/* F_IMAGEFX_FADE_IN */ int sub_46957()
{
    if (l_U272)
    {
         /* WRITESCRIPTLOG */ sub_2466( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U272 = 0;
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_2466( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

/* P_RS_HANDLE_CAM_SHAKE */ void sub_47213()
{
    if (NOT l_U6._fU20)
    {
         /* WRITESCRIPTLOG */ sub_2466( "MF", "INITIAL HELI RAIL CAM SHAKE...", 0 );
        SHAKE_GAMEPLAY_CAM(  /* F_CAM_SHAKE_MED_EXPLOSION */ sub_47302(), l_U16 );
         /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U6, l_U15 );
    }
    if ( /* ISTIMERDONE */ sub_2256( ref l_U6 ))
    {
        SHAKE_GAMEPLAY_CAM(  /* F_CAM_SHAKE_MED_EXPLOSION */ sub_47302(), l_U16 );
         /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U6, l_U15 );
    }
    return;
}

/* F_CAM_SHAKE_MED_EXPLOSION */ string sub_47302()
{
    return "MEDIUM_EXPLOSION_SHAKE";
}

/* P_CREATE_AND_START_TIMER */ void sub_47388(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_798( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_1151( uParam0 );
    return;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_47663(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_2466( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_47887( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 47784, 47834, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_47784()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_47834()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_47887(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_HANDLECUTSCENE */ void sub_48236(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_2466( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_2466( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_2466( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_2466( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_2466( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_2466( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_21895( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_2466( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_49127( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_49127( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_2466( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_49671( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_49127( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_50051( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_50051( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* NIS_PRE_SETUP */ void sub_49127(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_465() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_503(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_465(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_465() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_465(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_49671(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_465() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_465(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_465(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_465(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_465(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_465(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_50051(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_465() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_503(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_465(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_50149();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_50149()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_465() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_465(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_465(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_465(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_465(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_START_GAMEPLAY */ void sub_50485()
{
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_START_GAMEPLAY - START", 0 );
     /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U424, 18000 );
     /* P_RS_CONTROLS */ sub_50564();
    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_465(), 0, 0 ) ))
    {
        ENABLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_465(), 0, 0 ), 13, 1 );
        TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_465(), 0, 0 ), 13, 1 );
        SET_LASER_SIGHT_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_465(), 0, 0 ), -1363960247 );
    }
    SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
    FREEZE_TIME_OF_DAY( 22, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
    BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_START_GAMEPLAY - END", 0 );
    return;
}

/* P_RS_CONTROLS */ void sub_50564()
{
    SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_503(), 0, 256 );
    REENABLE_PLAYER_INPUT( 17 );
    REENABLE_PLAYER_INPUT( 16 );
    REENABLE_PLAYER_INPUT( 15 );
    REENABLE_PLAYER_INPUT( 14 );
    REENABLE_PLAYER_INPUT( 6 );
    REENABLE_PLAYER_INPUT( 28 );
    REENABLE_PLAYER_INPUT( 29 );
    REENABLE_PLAYER_INPUT( 4 );
    REENABLE_PLAYER_INPUT( 19 );
    REENABLE_PLAYER_INPUT( 20 );
    return;
}

/* P_START_SP_CHALLENGES */ void sub_50953()
{
     /* WRITESCRIPTLOG */ sub_2466( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_2466( "CCB", "Starting the Nightclub_RS context...", 0 );
    START_CONTEXT( "Nightclub_RS" );
     /* WRITESCRIPTLOG */ sub_2466( "CCB", "Starting the Nightclub_RS1 context...", 0 );
    START_CONTEXT( "Nightclub_RS1" );
    return;
}

/* P_START_CHECKPOINT_THREAD */ void sub_51273(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* P_PED_ARRAY_Z_SAFETY_CHECK */ void sub_51366(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_PED_Z_SAFETY_CHECK */ sub_51432( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_PED_Z_SAFETY_CHECK */ void sub_51432(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                 /* CLEANPED */ sub_4522( uParam0 );
            }
        }
    }
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_51575()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* P_RS_HANDLE_PLAYER_RELOAD_DIALOGUE */ void sub_51675()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_465() )))
    {
        if (NOT l_U54)
        {
            if (NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_465() )))
            {
                if (TIME_SINCE_LAST_MONOLOGUE() > 500)
                {
                    if (IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_465() ))
                    {
                        l_U54 = 1;
                        if ((l_U74 == 1) || ((GET_WEAPON_AMMO_IN_CLIP( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_465(), 0, 0 ) )) < 2))
                        {
                             /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U65, 400 );
                        }
                        else if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) < 45)
                        {
                             /* P_CREATE_AND_START_TIMER */ sub_47388( ref l_U65, 400 );
                        }
                    }
                }
            }
        }
        if ( /* ISTIMERDONE */ sub_2256( ref l_U65 ))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_51911( ref l_U55 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52022( 0,  /* PLAYER_PED_ID */ sub_465(), "MAX", ref l_U55, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52022( 1,  /* PLAYER_PED_ID */ sub_465(), "MAX", ref l_U55, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_52290( "SCLB_MCHWR", ref l_U55, 5, 1 );
            l_U74 = 0;
        }
        if (l_U54 == 1)
        {
            if (NOT (IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_465() )))
            {
                l_U54 = 0;
            }
        }
    }
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_51911(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_52022(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_52290(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_52335( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_52335(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_52422( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_52422(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_52474( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_52992( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_52474(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_52992(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_RS_SPEECH_MAX_RESPONDS */ void sub_53238()
{
    if ( /* ISTIMERDONE */ sub_2256( ref l_U45 ))
    {
         /* P_RS_SPEECH_VIG_10 */ sub_53289();
    }
    return;
}

/* P_RS_SPEECH_VIG_10 */ void sub_53289()
{
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS_SPEECH_VIG_10 - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_51911( ref l_U115 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52022( 1,  /* PLAYER_PED_ID */ sub_465(), "MAX", ref l_U115, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52022( 0,  /* PLAYER_PED_ID */ sub_465(), "MAX", ref l_U115, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_52290( "SCLB_VIG10", ref l_U115, 8, 1 );
    PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_465(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS_SPEECH_VIG_10 - END", 0 );
    return;
}

/* P_RS_HANDLE_GIOVANNA_SCREAMS_TO_BEING_SHOT_AT */ void sub_53527()
{
    unknown uVar2;

    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
        if (NOT (IS_ANY_SPEECH_PLAYING( g_U2777 )))
        {
            if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2777 ), 1.90000000, ref uVar2 ))
            {
                if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) > 30)
                {
                     /* P_RS_SPEECH_GVNSC1 */ sub_53669();
                }
            }
        }
    }
    return;
}

/* P_RS_SPEECH_GVNSC1 */ void sub_53669()
{
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS_SPEECH_GVNSC1 - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_51911( ref l_U105 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52022( 1, g_U2777, "GIOVANNA", ref l_U105, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52022( 0,  /* PLAYER_PED_ID */ sub_465(), "MAX", ref l_U105, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_52290( "SCLB_GVNSC1", ref l_U105, 8, 1 );
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS_SPEECH_GVNSC1 - END", 0 );
    return;
}

/* GET_VEHICLE_RECORDING_PLAYBACK_PERCENTAGE_PROGRESS */ float sub_53977(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            return 100.00000000 * ((GET_TIME_POSITION_IN_RECORDING( uParam0 )) / (GET_TOTAL_DURATION_OF_VEHICLE_RECORDING( uParam1 )));
        }
    }
    return -1.00000000;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_54417(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* F_GET_FIRST_LIVING_PED_FROM_ARRAY */ void sub_54541(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            return (uParam0^)[I];
        }
    }
    return nil;
}

/* P_RS1_HANDLE_CAMERA_CUT */ void sub_56350()
{
    int I;

    for ( I = 0; I < l_U333; I++ )
    {
        if (( /* MAL_GETACTINTSTATUS */ sub_56414( l_U333[I], 47 )) == 3)
        {
             /* WRITESCRIPTLOG */ sub_2466( "MF", "ACT_INT_01 REACHED! Starting scripted cam...", 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U333[I], 1 );
            SET_BLOCKING_OF_PED_TARGETTING( l_U333[I], 1 );
            SET_PED_PROOFS( l_U333[I], 1, 1, 1, 1, 1 );
            CLEAR_PED_TASKS( l_U333[I] );
            REGISTER_TARGET( l_U333[I], g_U2777 );
            SET_LOCKED_TARGET( l_U333[I], g_U2777 );
            l_U310 = 10;
             /* NIS_PRE_SETUP */ sub_49127( 1, 0, 0, 1 );
             /* MAL_FINISHACTINT */ sub_56688( ref l_U333[I], 47 );
        }
    }
    return;
}

/* MAL_GETACTINTSTATUS */ int sub_56414(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* MAL_FINISHACTINT */ void sub_56688(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETACTINT */ void sub_57011(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U665 );
    }
    return;
}

/* P_IMAGEFX_START_BULLETCAM */ void sub_58089(unknown uParam0, boolean bParam1)
{
    PRINTSTRING( "[CO] P_IMAGEFX_START_BULLETCAM: Starting BulletCam: " );
    PRINTSTRING( uParam0 );
    PRINTNL();
     /* CLEANCAMERA */ sub_3658( ref l_U273 );
    l_U273 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U273, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

/* TELEPORTPED */ void sub_58567(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_RS1_CLEANUP_HELI_AND_PILOT */ void sub_59328()
{
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS1_CLEANUP_HELI_AND_PILOT - START", 0 );
     /* CLEANPED */ sub_4522( l_U319 );
     /* CLEANVEHICLE */ sub_4650( l_U318 );
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS1_CLEANUP_HELI_AND_PILOT - END", 0 );
    return;
}

/* P_RS1_RELEASE_HELI_ASSETS */ void sub_59495()
{
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS1_RELEASE_HELI_ASSETS - START", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_59589( 2121457570, ref g_U1108 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_60726( 304, ref g_U1903 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_61078( "veh@std", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_61078( "veh@helicopter", ref g_U1447 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_61472( "Vehicle/Vehicle_heli.act", ref g_U1964 );
     /* WRITESCRIPTLOG */ sub_2466( "MF", "P_RS1_RELEASE_HELI_ASSETS - END", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_59589(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_59733( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_59733(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ void sub_60726(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_59733( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a VEHICLE_RECORDING asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_61078(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_59733( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_REMOVE */ void sub_61472(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_59733( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ACTION_TREE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_RS_CAM_SHAKE_DEBUG */ void sub_62107()
{
    if (NOT l_U528)
    {
        START_WIDGET_GROUP( "Rail shooter cam shake" );
        ADD_WIDGET_FLOAT_SLIDER( "Shake Intensity:", ref l_U16, 0.00000000, 10.00000000, 0.10000000 );
        ADD_WIDGET_INT_SLIDER( "Shake Repeat Delay", ref l_U15, 0, 1000, 10 );
        STOP_WIDGET_GROUP();
        l_U528 = 1;
    }
    return;
}

/* P_RELEASE_RS1_ASSETS */ void sub_62311()
{
     /* MAL_WRITESCRIPTLOG */ sub_230( "P_RELEASE_RS1_ASSETS" );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_62378( ref l_U17, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_59589( -1139974910, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_59589( 2121457570, ref g_U1108 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_62512( -1313172978, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_62512( 191130716, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_62512( -931023773, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_62512( 1476011597, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_62512( 2128723147, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_62512( -1999590465, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_62512( -754727277, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_62512( 1082088136, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_62512( 1210507618, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_62512( -1793275080, ref g_U1350 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_60726( 70, ref g_U1903 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_60726( 304, ref g_U1903 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_61078( "LEVEL_S_CLUB_CP_06", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_61078( "LEVEL_S_CLUB_CP_06_HP", ref g_U1447 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_63115( 354276007, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_63115( 406496141, ref g_U1301 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_61078( "veh@std", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_61078( "veh@helicopter", ref g_U1447 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_61472( "Vehicle/Vehicle_heli.act", ref g_U1964 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_62378(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_59589( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_62512(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_59733( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_63115(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_59733( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


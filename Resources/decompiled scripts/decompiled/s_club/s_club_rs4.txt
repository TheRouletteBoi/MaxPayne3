void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = -1;
    l_U3 = {64536, 64536, 64536};
    l_U15 = 150;
    l_U16 = 0.02000000;
    l_U24 = 0;
    l_U54 = 0;
    l_U236 = {0, 2, -0.50000000};
    l_U239 = 45;
    l_U259 = 0;
    l_U260 = 0;
    l_U261 = 1500;
    l_U272 = 0;
    l_U310 = 0;
    l_U312 = 1;
    l_U313 = 0;
    l_U314 = {21.25621000, 40.48950000, 86.23247000};
    l_U317 = {21.68012000, 47.65157000, 86.23263000};
    l_U762 = -1;
    l_U763 = 0;
    l_U764 = 3000;
    l_U914 = 0;
    l_U915 = 0;
    l_U1143 = {20.80700000, 40.44000000, 86.23500000};
    l_U1146 = 0.00000000;
    l_U1147 = {21.49000000, 49.89000000, 86.23500000};
    l_U1150 = 0.00000000;
    l_U1151 = {21.46000000, 51.10300000, 86.23500000};
    l_U1154 = 180.00000000;
     /* MAL_WRITESCRIPTLOG */ sub_351( "Script s_club_RS4.sc is starting up..." );
    l_U310 = 1;
    l_U272 = 0;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_485();
        if (l_U313 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_10949();
        }
        WAIT( 0 );
    }
    while (NOT g_U1103)
    {
         /* WRITESCRIPTLOG */ sub_2580( "MF", "Waiting for: bHACK_ShutDownRS4 to be set to TRUE", 0 );
        WAIT( 0 );
    }
     /* P_CLEANUP_RS4 */ sub_3947( 0 );
     /* P_RELEASE_RS4_ASSETS */ sub_62229();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_club_RS4" );
     /* MAL_WRITESCRIPTLOG */ sub_351( "Script s_club_RS4.sc is terminating..." );
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_351(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* P_HANDLE_FAILURE */ void sub_485()
{
    if (g_U892 == 11)
    {
        switch (l_U313)
        {
            case 0:
            if (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() ))
            {
                if (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() ))
                {
                     /* P_PLAY_HELI_DEATH_CAM */ sub_709();
                }
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U313 = 1;
                 /* MAL_WRITESCRIPTLOG */ sub_351( "eFailState = FAIL_WAITING_FOR_PLAYER" );
            }
            else if ( /* RESTARTING_CHECKPOINT */ sub_1550())
            {
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U313 = 3;
                 /* MAL_WRITESCRIPTLOG */ sub_351( "eFailState = FAIL_CLEANUP_ALL" );
            }
            break;
            case 1:
            STOP_SCRIPT_STREAM( g_U2867 );
            if ( /* IS_RESTART_ACTIVE */ sub_2076())
            {
                l_U313 = 3;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_2136( 0 )) == 1)
            {
                l_U313 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() )))
            {
                l_U313 = 3;
                 /* MAL_WRITESCRIPTLOG */ sub_351( "eFailState = FAIL_CLEANUP_ALL" );
            }
            break;
            case 3:
             /* MAL_WRITESCRIPTLOG */ sub_351( "eFailState = FAIL_CLEANUP_ALL" );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_624() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_624(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_586() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_586(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_3662( "CLUB_RS_GIOV5_SCRIPTED_FAIL_FX" );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_3662( "CLUB_RS_GIOV7_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
             /* P_CLEANUP_RS4 */ sub_3947( 1 );
            l_U312 = 0;
             /* P_RESET_AMBIENT_SPEECH_VARIABLES */ sub_5733();
            if (g_U893[12]._fU36 == 1)
            {
                SET_EXITFLAG_FOR_SCRIPT( g_U893[12]._fU32 );
                 /* P_RESET_CHECKPOINT_THREAD */ sub_6083( ref g_U893[12] );
                g_U1074[12] = 0;
            }
            REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
            l_U313 = 4;
             /* MAL_WRITESCRIPTLOG */ sub_351( "eFailState = FAIL_RESTORE_PLAYER" );
            break;
            case 4:
             /* MAL_WRITESCRIPTLOG */ sub_351( "eFailState = FAIL_RESTORE_PLAYER" );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_6291( ref l_U274,  /* PLAYER_PED_ID */ sub_586() );
            l_U313 = 5;
             /* MAL_WRITESCRIPTLOG */ sub_351( "eFailState = FAIL_RESTART_CHECKPOINT" );
            break;
            case 5:
             /* MAL_WRITESCRIPTLOG */ sub_351( "eFailState = FAIL_RESTART_CHECKPOINT" );
            l_U310 = 1;
            l_U313 = 0;
             /* MAL_WRITESCRIPTLOG */ sub_351( "eFailState = FAIL_IDLE" );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_586()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_624() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_624()
{
    return GET_PLAYER_ID();
}

/* P_PLAY_HELI_DEATH_CAM */ void sub_709()
{
     /* NIS_CREATE_STATIC_CAM */ sub_767( ref l_U205, g_U665, g_U665, l_U239, 5000 );
     /* NIS_PLAY_CAM */ sub_1143( ref l_U205 );
    ATTACH_CAM_TO_PED( l_U205._fU0,  /* PLAYER_PED_ID */ sub_586(), l_U236, 1 );
    POINT_CAM_AT_PED( l_U205._fU0,  /* PLAYER_PED_ID */ sub_586(), g_U665, 1 );
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_767(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_919( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U649, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* CREATETIMER */ void sub_919(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* NIS_PLAY_CAM */ void sub_1143(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    if (iParam0->_fU92 == 1)
    {
        SET_CAM_ACTIVE_WITH_INTERP( iParam0->_fU0, iParam0->_fU120, iParam0->_fU88, iParam0->_fU100, iParam0->_fU104 );
    }
    else
    {
        SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    }
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_1272( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* STARTTIMER */ void sub_1272(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_1550()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_586(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_624(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_624(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_586() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_586(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_2076()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_2136(int iParam0)
{
    iParam0 = 1;
    switch (l_U260)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_2218( ref l_U262 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() )))
            {
                l_U261 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_919( ref l_U262, l_U261, 1, 1 );
             /* STARTTIMER */ sub_1272( ref l_U262 );
        }
        if ( /* ISTIMERDONE */ sub_2370( ref l_U262 ))
        {
             /* WRITESCRIPTLOG */ sub_2580( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_624() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_624(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U260 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U260 = 2;
            }
            else
            {
                l_U260 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_2580( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_2984();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_2580( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_2984();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_2218(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* ISTIMERDONE */ int sub_2370(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* WRITESCRIPTLOG */ void sub_2580(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_2984()
{
     /* WRITESCRIPTLOG */ sub_2580( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_3059( ref l_U262 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_624() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_624(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U259 = 0;
    l_U259 = l_U259;
    l_U260 = 0;
    return;
}

/* RESETTIMER */ void sub_3059(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_IMAGEFX_STOP_BULLETCAM */ void sub_3662(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_2580( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
     /* CLEANCAMERA */ sub_3772( ref l_U273 );
    l_U272 = 1;
    return;
}

/* CLEANCAMERA */ void sub_3772(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* P_CLEANUP_RS4 */ void sub_3947(int iParam0)
{
     /* MAL_WRITESCRIPTLOG */ sub_351( "P_CLEANUP_RS4" );
    if (iParam0 == 1)
    {
         /* P_RS_GLOBALCLEANUP */ sub_4003();
        STOP_SCRIPT_STREAM( g_U2867 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    }
    else
    {
         /* CLEANPED */ sub_4104( g_U2777 );
        SET_PED_USES_ANIMATED_DEATH(  /* PLAYER_PED_ID */ sub_586(), 0 );
        RELEASE_PED_ENTITY_SYNC_POINT(  /* PLAYER_PED_ID */ sub_586() );
        SET_PED_CAN_RAGDOLL(  /* PLAYER_PED_ID */ sub_586(), 1 );
    }
     /* MAL_ESA_CLEAN */ sub_5062( ref l_U447 );
     /* MAL_ES_CLEAN */ sub_5110( ref l_U1099 );
     /* TERMINATEISEQ */ sub_4289( 1182917137, 1 );
     /* TERMINATEISEQ */ sub_4289( 1479019014, 1 );
     /* P_CLOSEDOOR */ sub_5216( ref g_U3269, 1 );
     /* P_SETDOORAFFECTEDBYBULLETS */ sub_5473( ref g_U3269, 1 );
     /* P_SETDOORLOCKED */ sub_5573( ref g_U3269, 0 );
    return;
}

/* P_RS_GLOBALCLEANUP */ void sub_4003()
{
     /* MAL_WRITESCRIPTLOG */ sub_351( "P_RS_GlobalCleanup" );
    DETACH_PED( g_U2763, 1 );
    DETACH_PED( g_U2749, 1 );
    DETACH_PED(  /* PLAYER_PED_ID */ sub_586(), 1 );
     /* CLEANPED */ sub_4104( g_U2763 );
     /* CLEANPED */ sub_4104( g_U2749 );
     /* CLEANPED */ sub_4104( g_U2777 );
     /* CLEANVEHICLE */ sub_4214( g_U2866 );
     /* TERMINATEISEQ */ sub_4289( -1313172978, 1 );
     /* TERMINATEISEQ */ sub_4289( -931023773, 1 );
     /* TERMINATEISEQ */ sub_4289( 1476011597, 1 );
     /* MAL_PEDPLAYERACTIONTREENODE */ sub_4668(  /* PLAYER_PED_ID */ sub_586(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
    ENABLE_HIT_DETECTION( 1 );
    ENABLE_LAST_MAN_STANDING( 1 );
    SET_SILHOUETTE_ACTIVE( 1 );
    SET_PLAYER_COMBAT_TIMER_MODE( 0 );
    PLAYER_SET_AIM_MODE( 0 );
    ENABLE_CROSSHAIR( 1 );
    SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_586(), 0 );
    SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_586(), 0, 0, 0, 0, 0 );
    SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_624(), 0, 0 );
    SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_586(), 1 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    SET_PED_CAN_RAGDOLL(  /* PLAYER_PED_ID */ sub_586(), 1 );
    AUDIO_SET_PED_FOOTSTEPS_ON( 1 );
    SET_INSTANT_FIRE_FORCED( 0 );
    RELEASE_PED_ENTITY_SYNC_POINT(  /* PLAYER_PED_ID */ sub_586() );
    SET_PED_USES_ANIMATED_DEATH(  /* PLAYER_PED_ID */ sub_586(), 0 );
    ALLOW_BULLET_CAMERA_CHEAT( 1 );
     /* CLEANOBJECT */ sub_4922( l_U23 );
    return;
}

/* CLEANPED */ void sub_4104(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANVEHICLE */ void sub_4214(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* TERMINATEISEQ */ void sub_4289(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* MAL_PEDPLAYERACTIONTREENODE */ void sub_4668(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

/* CLEANOBJECT */ void sub_4922(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* MAL_ESA_CLEAN */ void sub_5062(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_CLEAN */ sub_5110( ref (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_CLEAN */ void sub_5110(int iParam0)
{
     /* CLEANPED */ sub_4104( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

/* P_CLOSEDOOR */ void sub_5216(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_5242( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_5326( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_5242(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_5326(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_SETDOORAFFECTEDBYBULLETS */ void sub_5473(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_5242( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_5326( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

/* P_SETDOORLOCKED */ void sub_5573(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_5242( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_5326( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_RESET_AMBIENT_SPEECH_VARIABLES */ void sub_5733()
{
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_RESET_AMBIENT_SPEECH_VARIABLES - START", 0 );
     /* DISABLETIMER */ sub_5836( ref l_U65 );
     /* DISABLETIMER */ sub_5836( ref l_U45 );
    l_U43 = STAT_GET_INT( "SP_BULLETS_FIRED_RH" );
    l_U44 = STAT_GET_INT( "SP_BULLETS_HIT_RH" );
     /* DISABLETIMER */ sub_5836( ref l_U25 );
     /* DISABLETIMER */ sub_5836( ref l_U34 );
    l_U74 = 0;
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_RESET_AMBIENT_SPEECH_VARIABLES - END", 0 );
    return;
}

/* DISABLETIMER */ void sub_5836(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_6083(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_6291(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_2580( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_6510( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_7674( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7988( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8467( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7988( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8467( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7988( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8467( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_8783( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8467( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_8783( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8467( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_9355( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_9557( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_586(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_2580( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_6510(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_6572( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_6572(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_7674(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_7988(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_8392( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_8392(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_8467(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_8783(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_8392( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_9355(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_9557(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_6572( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_9655( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_9655(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_10949()
{
    int iVar2;
    unknown uVar3;

    iVar2 = l_U310;
    switch (l_U310)
    {
        case 0: break;
        case 1:
         /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA" );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_11189();
         /* P_SET_STATIC_DATA */ sub_11456();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U310 = 2;
         /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
        break;
        case 2:
         /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
         /* P_REQUEST_RS4_PERSISTENT_ASSETS */ sub_12592();
         /* P_REQUEST_RS4_NONPERSISTENT_ASSETS */ sub_12732();
        l_U310 = 3;
         /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_INITIAL_LOADING_ASSETS" );
        break;
        case 3:
        if (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_26382( ref g_U1350 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_25991( ref g_U1447 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_25589( ref g_U1301 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_25192( ref g_U1108 )))))
        {
            if ((NOT l_U274._fU0) AND (g_U891 == 11))
            {
                 /* P_SETUP_RS_WEATHER_AND_TOD */ sub_26818();
                l_U312 = 0;
                g_U1074[11] = 1;
                l_U310 = 4;
                 /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
            }
            else
            {
                l_U310 = 6;
                 /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
            }
        }
        break;
        case 4:
         /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
        REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_27168( ref l_U274 )))
        {
             /* F_GIVEPEDWEAPON */ sub_8783(  /* PLAYER_PED_ID */ sub_586(), 354276007, 25000, 0, 0 );
            l_U310 = 5;
             /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS" );
        }
        else
        {
            l_U310 = 6;
             /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 0, 0 ) ))
            {
                g_U892 = 11;
                if (NOT l_U274._fU0)
                {
                     /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_27638( ref l_U274, g_U892,  /* PLAYER_PED_ID */ sub_586(), g_U2216[11], g_U2331[11], g_U2370[11], g_U2409[11], 0 );
                }
                l_U310 = 6;
                 /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
            }
        }
        break;
        case 6:
        if (g_U1074[11] == 1)
        {
            if ( /* MAL_ENEMYSTRUCTARRAYCREATE */ sub_32331( ref l_U447, "R4", ref l_U756, 1.00000000, 1, 0 ))
            {
                 /* P_SETUP_R4_ENEMIES */ sub_36611();
                l_U310 = 7;
                 /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_INTRO" );
            }
        }
        break;
        case 7:
        if (l_U311)
        {
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_45386( ref l_U784, "MID_11_NC_concat", 38496, 38549, 39324, 40858, 40907, 44434, 250, 0 );
            if (l_U312 == 1)
            {
                l_U784._fU64 = 0;
                l_U784._fU4 = 2;
            }
            else
            {
                l_U784._fU4 = 7;
            }
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_45955( ref l_U784 ))
        {
            g_U1097 = 1;
            l_U310 = 8;
             /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_INTRO" );
        }
        break;
        case 8:
        if (g_U892 != 11)
        {
            g_U892 = 11;
             /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_27638( ref l_U274, g_U892,  /* PLAYER_PED_ID */ sub_586(), g_U2216[11], g_U2331[11], g_U2370[11], g_U2409[11], 1 );
        }
        l_U310 = 9;
         /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_GAMEPLAY" );
        break;
        case 9:
        if (l_U311)
        {
             /* P_RS_CONTROLS */ sub_48340();
             /* P_RESET_AMBIENT_SPEECH_VARIABLES */ sub_5733();
            CAMERA_CLEAR_POINT_AT_TARGET();
            ENABLE_HIT_DETECTION( 0 );
            ENABLE_LAST_MAN_STANDING( 0 );
        }
        if ((GET_SCRIPT_STREAM_STATE( "S_CLUB_HELI_RS_STREAM", g_U2867 )) == 2)
        {
             /* WRITESCRIPTLOG */ sub_2580( "MF", "STARTING HELICOPTER AUDIO", 0 );
            PLAY_SCRIPT_STREAM_FROM_VEHICLE( g_U2866, g_U2867 );
        }
         /* P_MAKEHELIENGINESFUCKINGTURN */ sub_40757();
         /* P_RS_HANDLE_CAM_SHAKE */ sub_44477();
        if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_48607()))
        {
             /* P_RS_HANDLE_PLAYER_RELOAD_DIALOGUE */ sub_48707();
             /* P_RS_SPEECH_MAX_RESPONDS */ sub_50270();
        }
         /* P_RS_HANDLE_GIOVANNA_SCREAMS_TO_BEING_SHOT_AT */ sub_50559();
         /* MAL_ESA_ZHEIGHTCHECK */ sub_50922( ref l_U447, 80, 1, 0 );
        if ( /* ISTIMERDONE */ sub_2370( ref l_U765 ))
        {
            if (NOT (IS_BULLET_TIME_ACTIVE( 1 )))
            {
                if ( /* MAL_ESA_ISINTRIGGER */ sub_51164( ref l_U447, l_U872, 0, -1 ))
                {
                    l_U74 = 1;
                    SET_RANDOM_SEED( TIMERA() );
                    l_U783 = GET_RANDOM_INT_IN_RANGE( 0, 100 );
                    if (l_U783 < 35)
                    {
                         /* P_RS_SPEECH_HRGT */ sub_51405();
                         /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U774, 1000 );
                    }
                    else if (l_U783 < 70)
                    {
                         /* P_RSDIAG_GIOVANNAINMODERATEDANGER */ sub_51663();
                    }
                }
            }
        }
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_51828( l_U95 )))
        {
            if ( /* ISTIMERDONE */ sub_2370( ref l_U774 ))
            {
                SET_RANDOM_SEED( TIMERA() );
                if ((GET_RANDOM_FLOAT_IN_RANGE( 0, 100 )) < 15)
                {
                     /* P_RS_SPEECH_HRPYM */ sub_52101();
                }
                else if ((GET_RANDOM_FLOAT_IN_RANGE( 0, 100 )) < 15)
                {
                     /* P_RS_SPEECH_VIG_10 */ sub_50321();
                }
            }
        }
        if (NOT l_U914)
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                if ((GET_TIME_POSITION_IN_RECORDING( g_U2866 )) >= 13786.00000000)
                {
                    l_U914 = 1;
                     /* MAL_WRITESCRIPTLOG */ sub_351( "Pausing the vehicle recording." );
                    PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
                }
            }
        }
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_2218( ref l_U1051 )))
        {
            if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_52489( ref l_U447 )) < 1)
            {
                 /* NCRS_ENEMYSTRUCTFILL */ sub_11555( ref l_U1099, l_U1151, l_U1154, -1583444204, -871309849, -168327769 );
                 /* MAL_ENEMYSTRUCTCREATE */ sub_32858( ref l_U1099 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1099._fU0, 1 );
                 /* STARTTIMER */ sub_1272( ref l_U1051 );
                 /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_TRANSITION1" );
            }
        }
        if ( /* ISTIMERDONE */ sub_2370( ref l_U1051 ))
        {
             /* P_RS_SPEECH_MID12NCA */ sub_52725();
             /* STARTTIMER */ sub_1272( ref l_U1024 );
        }
        if ( /* ISTIMERDONE */ sub_2370( ref l_U1024 ))
        {
            l_U310 = 10;
            break;
        }
        if ( /* F_R4_HANDLE_GAMEPLAY */ sub_52981())
        {
             /* MAL_ESA_INVINCIBLE */ sub_57423( ref l_U447, 1, 0, -1 );
            l_U310 = 12;
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_624(), 0, 0 );
             /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_FAIL1" );
            break;
        }
        if (IS_PED_DEAD( g_U2777 ))
        {
            l_U310 = 15;
             /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_SHOT_GIOVANNA" );
            break;
        }
        break;
        case 10:
        if (l_U311)
        {
             /* NIS_PRE_SETUP */ sub_46846( 1, 0, 0, 1 );
             /* P_SETUP_PART2 */ sub_57738();
             /* P_OPENDOOR */ sub_58421( ref g_U3269, 0, 0, 1065353216 );
             /* STARTTIMER */ sub_1272( ref l_U1033 );
        }
        if ( /* ISTIMERDONE */ sub_2370( ref l_U1033 ))
        {
            PLAY_IMAGEFX( "DISTORT_INTERLACE_RIGHT_HARD", 4, 1 );
            PLAY_IMAGEFX( "FLICKER_VIBRATE_INTERLACE_M", 4, 1 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_09", "VIG_18_NC_GIO_DOOR_SURPRISE_B_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            CAMERA_SNAP_POINT_AT_COORD( 21.43000000, 48.48000000, 88.22000000 );
             /* P_START_VEHICLE_PLAYBACK */ sub_40213( g_U2866, 193, 0.00000000, 15911.00000000, 1 );
        }
        if (l_U1033._fU16)
        {
            if (NOT IS_ANIMATED_CAMERA_PLAYING())
            {
                 /* P_START_VEHICLE_PLAYBACK */ sub_40213( g_U2866, 193, 0.25000000, 15911.00000000, 1 );
                l_U310 = 11;
                 /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_GAMEPLAY2" );
            }
        }
        break;
        case 11:
        if (l_U311)
        {
             /* NIS_POST_SETUP */ sub_47770( 1, 1 );
             /* P_RS_CONTROLS */ sub_48340();
             /* STARTTIMER */ sub_1272( ref l_U1090 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
            SET_INSTANT_FIRE_FORCED( 0 );
             /* P_START_CHECKPOINT_THREAD */ sub_58971( ref g_U893[12] );
            CAMERA_CLEAR_POINT_AT_TARGET();
        }
         /* P_MAKEHELIENGINESFUCKINGTURN */ sub_40757();
         /* P_RS_HANDLE_CAM_SHAKE */ sub_44477();
        if ( /* ISTIMERDONE */ sub_2370( ref l_U1090 ))
        {
            if (NOT (IS_BULLET_TIME_ACTIVE( 1 )))
            {
                 /* P_RS_SPEECH_MID12NCB */ sub_59070();
            }
        }
        if (NOT l_U915)
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                if ((GET_TIME_POSITION_IN_RECORDING( g_U2866 )) >= 32354.00000000)
                {
                    l_U915 = 1;
                     /* MAL_WRITESCRIPTLOG */ sub_351( "Pausing the vehicle recording." );
                    PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
                }
            }
        }
        if (IS_PED_DEAD( g_U2777 ))
        {
            l_U310 = 15;
             /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_SHOT_GIOVANNA" );
        }
        if (IS_PED_DEAD( l_U1099._fU0 ))
        {
            l_U310 = 14;
             /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_OUTRO" );
        }
        if ( /* MAL_ES_ISACTINTCOMPLETED */ sub_59521( ref l_U1099, 47, 1 ))
        {
             /* MAL_ES_INVINCIBLE */ sub_57494( ref l_U1099, 1 );
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_624(), 0, 0 );
            l_U310 = 13;
             /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_FAIL2" );
        }
        break;
        case 15:
        if (l_U311)
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            l_U310 = 0;
            l_U313 = 1;
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        break;
        case 12:
        if (l_U311)
        {
             /* NIS_PRE_SETUP */ sub_46846( 1, 0, 0, 1 );
            PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
             /* P_SETDOORAFFECTEDBYBULLETS */ sub_5473( ref g_U3269, 0 );
             /* P_SETDOORLOCKED */ sub_5573( ref g_U3269, 1 );
            l_U916 = l_U447[l_U762]._fU0;
             /* MAL_ESA_STANDSTILL */ sub_59956( ref l_U447 );
            CLEAR_PED_TASKS_IMMEDIATELY( l_U916 );
             /* MAL_TELEPORTPED */ sub_43180( l_U916, 21.50436000, 45.87910000, 86.23263000, 0 );
             /* NIS_CREATE_STATIC_CAM */ sub_767( ref l_U917, 23.44000000, 44.71000000, 86.65000000, 7.32000000, 0.00000000, 35.69000000, 1110704128, 1000 );
             /* NIS_PLAY_CAM */ sub_1143( ref l_U917 );
             /* P_IMAGEFX_START_BULLETCAM */ sub_60163( "CLUB_RS_GIOV5_SCRIPTED_FAIL_FX", 0 );
            SHAKE_CAM( l_U917._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_60471(), 0.25000000 );
            SET_PED_GORE( g_U2777, 1 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 0 );
            SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
            FREEZE_PED_POSITION( g_U2777, 0 );
             /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_43650( ref l_U916, g_U2777 );
             /* MAL_AIMGUNATPED */ sub_60615( l_U916, g_U2777, -1, 1 );
            SET_PED_CONSUMING_AMMO( l_U916, 0 );
             /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U957, 750 );
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 0, 0 ), 13, 0 );
            DO_SCREEN_FADE_IN( 250 );
        }
        if ( /* ISTIMERDONE */ sub_2370( ref l_U957 ))
        {
            OPEN_SEQUENCE_TASK( ref uVar3 );
            TASK_SHOOT_AT_PED( 0, g_U2777, 2000, 0, 1, 0, 0 );
            TASK_AIM_GUN_AT_PED( 0, g_U2777, -1, 0 );
            CLOSE_SEQUENCE_TASK( uVar3 );
            if (NOT (IS_PED_DEAD( l_U916 )))
            {
                TASK_PERFORM_SEQUENCE( l_U916, uVar3 );
            }
        }
        if ((NOT ( /* HASTIMERBEENACTIVATED */ sub_2218( ref l_U948 ))) AND (IS_PED_DEAD( g_U2777 )))
        {
             /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U948, 2000 );
            SHAKE_CAM( l_U917._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
            l_U313 = 1;
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        if ( /* ISTIMERDONE */ sub_2370( ref l_U948 ))
        {
            SHAKE_CAM( l_U917._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_60471(), 0.03000000 );
            l_U310 = 0;
        }
        break;
        case 13:
        if (l_U311)
        {
             /* NIS_PRE_SETUP */ sub_46846( 1, 0, 0, 1 );
            PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            l_U916 = l_U1099._fU0;
             /* MAL_TELEPORTPED */ sub_43180( l_U916, 21.42074000, 47.63362000, 86.23482000, GET_PED_HEADING( l_U916 ) );
             /* NIS_CREATE_STATIC_CAM */ sub_767( ref l_U966, 21.12000000, 44.91000000, 85.33000000, 35.25000000, 0.00000000, -25.77000000, 1110704128, 1000 );
             /* NIS_PLAY_CAM */ sub_1143( ref l_U966 );
             /* P_IMAGEFX_START_BULLETCAM */ sub_60163( "CLUB_RS_GIOV7_SCRIPTED_FAIL_FX", 0 );
            SHAKE_CAM( l_U966._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_60471(), 0.25000000 );
            SET_PED_GORE( g_U2777, 1 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 0 );
            SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
            FREEZE_PED_POSITION( g_U2777, 0 );
             /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_43650( ref l_U916, g_U2777 );
             /* MAL_AIMGUNATPED */ sub_60615( l_U916, g_U2777, -1, 1 );
            SET_PED_CONSUMING_AMMO( l_U916, 0 );
             /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U1006, 750 );
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 0, 0 ), 13, 0 );
            DO_SCREEN_FADE_IN( 250 );
        }
        if ( /* ISTIMERDONE */ sub_2370( ref l_U1006 ))
        {
            SET_PED_SHOOTS_AT_COORD( l_U916, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2777, 65488, 0, 0, 0 ) );
             /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U1015, 1000 );
        }
        if ( /* ISTIMERDONE */ sub_2370( ref l_U1015 ))
        {
            SET_PED_SHOOTS_AT_COORD( l_U916, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2777, 65488, 0, 0, 0 ) );
        }
        if ((NOT l_U997._fU20) AND ((NOT l_U997._fU16) AND (IS_PED_DEAD( g_U2777 ))))
        {
             /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U997, 2000 );
            SHAKE_CAM( l_U966._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
            l_U313 = 1;
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        if ( /* ISTIMERDONE */ sub_2370( ref l_U997 ))
        {
            SHAKE_CAM( l_U966._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_60471(), 0.03000000 );
            l_U310 = 0;
        }
        break;
        case 14:
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            g_U1099 = 1;
            g_U1074[12] = 1;
            l_U310 = 16;
        }
        break;
        case 16:
         /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_FINISHED" );
         /* P_GBL_SAVE_RS4_DEAD_BODIES */ sub_61678( ref l_U447 );
         /* P_GBL_SAVE_RS4B_DEAD_BODY */ sub_61906( ref l_U1099 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U310 = 0;
         /* MAL_WRITESCRIPTLOG */ sub_351( "eCheckpointState = CP_IDLE" );
        break;
    }
    if (l_U310 != iVar2)
    {
        l_U311 = 1;
    }
    else
    {
        l_U311 = 0;
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_11189()
{
     /* MAL_WRITESCRIPTLOG */ sub_351( "P_INITIALIZE_SCRIPT_DATA" );
    l_U311 = 1;
    l_U762 = -1;
    l_U763 = 0;
    l_U914 = 0;
    l_U915 = 0;
    g_U1103 = 0;
     /* CREATETIMER */ sub_919( ref l_U948, 666, 1, 0 );
     /* CREATETIMER */ sub_919( ref l_U957, 666, 1, 0 );
     /* CREATETIMER */ sub_919( ref l_U997, 666, 1, 0 );
     /* CREATETIMER */ sub_919( ref l_U1006, 666, 1, 0 );
     /* CREATETIMER */ sub_919( ref l_U1015, 666, 1, 0 );
     /* CREATETIMER */ sub_919( ref l_U1033, 700, 1, 0 );
     /* CREATETIMER */ sub_919( ref l_U774, 5000, 1, 0 );
     /* CREATETIMER */ sub_919( ref l_U1090, 200, 1, 0 );
     /* CREATETIMER */ sub_919( ref l_U1042, 6000, 1, 0 );
     /* CREATETIMER */ sub_919( ref l_U1024, 3700, 1, 0 );
     /* CREATETIMER */ sub_919( ref l_U1051, 100, 1, 0 );
    return;
}

/* P_SET_STATIC_DATA */ void sub_11456()
{
     /* MAL_WRITESCRIPTLOG */ sub_351( "P_SET_STATIC_DATA" );
     /* NCRS_ENEMYSTRUCTFILL */ sub_11555( ref l_U447[0], 15.28568000, 41.07848000, 85.64739000, 270.00000000, -279018243, -871309849, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_11555( ref l_U447[1], 3.41816800, 33.27398000, 85.60843000, 0.00000000, -1583444204, -871309849, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_11555( ref l_U447[2], 3.42326800, 32.38449000, 85.60850000, 0.00000000, 1848160826, -871309849, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_11555( ref l_U447[3], 3.40290500, 31.59626000, 85.60855000, 0.00000000, -810598027, -871309849, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_11555( ref l_U447[4], 2.91751400, 24.37277000, 86.60886000, 0.00000000, -2003552359, -871309849, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_11555( ref l_U447[5], 3.91000000, 34.87000000, 85.61000000, -90.00000000, 815465868, -871309849, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_11555( ref l_U447[6], 11.42000000, 47.80000000, 88.47000000, -35.00000000, 1479313839, -871309849, 1194438308 );
     /* P_CREATETRIGGERBOX */ sub_12169( ref l_U851, "TRIG_R4W1_FAIL", 21.53000000, 48.75000000, 86.21000000, 2.51000000, 4.07000000, 3.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_12169( ref l_U872, "TRIG_R4W1_THREATEN", 21.48000000, 45.15000000, 86.21000000, 2.71000000, 12.17000000, 3.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_12169( ref l_U893, "TRIG_GTFO", 19.85000000, 40.32000000, 84.20000000, 5.17000000, 5.28000000, 5.59000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* NIS_CREATE_STATIC_CAM */ sub_767( ref l_U811, 26.54000000, 60.01000000, 95.94000000, -17.51000000, 0.00000000, -155.05000000, 45, 1 );
    return;
}

/* NCRS_ENEMYSTRUCTFILL */ void sub_11555(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* MAL_ENEMYSTRUCTFILL */ sub_11627( uParam0, uParam1, uParam4, uParam7, 1194438308, 2, g_U3107, 5, 500, uParam6, 0, 0, uParam5, g_U668 );
    return;
}

/* MAL_ENEMYSTRUCTFILL */ void sub_11627(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU68 = uParam4;
    iParam0->_fU72 = uParam5;
    iParam0->_fU76 = uParam6;
    iParam0->_fU80 = uParam7;
    iParam0->_fU84 = {uParam8};
    iParam0->_fU116 = uParam16;
    iParam0->_fU120 = uParam17;
    iParam0->_fU124 = uParam18;
    iParam0->_fU128 = uParam19;
    iParam0->_fU132 = uParam20;
    iParam0->_fU136 = uParam21;
    iParam0->_fU140 = {uParam22};
    return;
}

/* P_CREATETRIGGERBOX */ void sub_12169(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_REQUEST_RS4_PERSISTENT_ASSETS */ void sub_12592()
{
     /* MAL_WRITESCRIPTLOG */ sub_351( "P_REQUEST_RS4_PERSISTENT_ASSETS start" );
     /* MAL_WRITESCRIPTLOG */ sub_351( "P_REQUEST_RS4_PERSISTENT_ASSETS end" );
    return;
}

/* P_REQUEST_RS4_NONPERSISTENT_ASSETS */ void sub_12732()
{
     /* MAL_WRITESCRIPTLOG */ sub_351( "P_REQUEST_RS4_NONPERSISTENT_ASSETS start" );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_12836( 1037546172, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_12836( g_U2453, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_12836( 1049690760, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_12836( -871309849, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_12836( 123419661, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_12836( 230799837, ref g_U1108 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_15737( -1787162676, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_15737( 1194438308, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_15737( -168327769, ref g_U1301 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_17720( "LEVEL_S_CLUB_CP_06", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_17720( "LEVEL_S_CLUB_CP_09", ref g_U1447 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_19634( -1313172978, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_19634( -931023773, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_19634( 1476011597, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_19634( 1182917137, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_19634( 1479019014, ref g_U1350 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_22492( 193, ref g_U1903 );
     /* SETUP_SCRIPTED_SPEECH */ sub_24479( "SCLBAUD" );
    if ((g_U891 != 11) AND (l_U312 == 1))
    {
         /* LOADSEAMLESSCUTSCENE */ sub_24682( "mid_11_nc_concat", 0 );
    }
    if (g_U892 == 11)
    {
        REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
    }
     /* MAL_WRITESCRIPTLOG */ sub_351( "P_REQUEST_RS4_NONPERSISTENT_ASSETS end" );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_12836(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_12903( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13161( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_12903(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13161( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13161( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13161( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_14692( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13161( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13161( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_13161(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_13222( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_13222(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_14692(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_15737(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_15791( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16052( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_15791(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16052( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16052( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16052( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_14692( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16052( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16052( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_16052(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_13222( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_17720(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_17772( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18024( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_17772(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18024( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18024( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18024( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_14692( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18024( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18024( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_18024(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_13222( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_19634(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_19695( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_19945( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_19695(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_19945( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_19945( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_19945( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_19945( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_14692( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_14692( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_19945( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_19945( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_19945(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_13222( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ void sub_22492(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ sub_22552( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING asset name: {} ###", 1, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_22822( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ int sub_22552(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_22822( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is loading: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_22822( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The VEHICLE_RECORDING asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_22822( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_14692( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being removed: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_22822( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, iParam0 );
            DISPLAYF( "The VEHICLE_RECORDING is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING: {} ###", 1, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_22822( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ void sub_22822(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_13222( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_24479(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_24523();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_24523()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_24682(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_25192(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_25589(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_25991(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_26382(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* P_SETUP_RS_WEATHER_AND_TOD */ void sub_26818()
{
     /* MAL_WRITESCRIPTLOG */ sub_351( "P_SETUP_RS_WEATHER_AND_TOD" );
    RELEASE_TIME_OF_DAY();
    SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
    FREEZE_TIME_OF_DAY( 22, 0 );
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_27168(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_2580( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_6291( uParam0,  /* PLAYER_PED_ID */ sub_586() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_27638(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_2580( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_2580( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_9557( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_27929( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_28406( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_28406( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28666( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_28406( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28666( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28666( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_28406( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28666( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28666( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28666( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_28406( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28666( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28666( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28666( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28666( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_30246( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_2580( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_27929(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_6572( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_2580( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_2580( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_28406(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_28666(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_30246(int iParam0)
{
     /* WRITE_STRING */ sub_8392( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_30334( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_30411( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_30411( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_30411( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_30411( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_30411( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_31281( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU52 );
     /* WRITE_STRING */ sub_8392( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU96 );
     /* WRITE_STRING */ sub_8392( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU100 );
     /* WRITE_STRING */ sub_8392( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU104 );
     /* WRITE_STRING */ sub_8392( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU108 );
     /* WRITE_STRING */ sub_8392( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU112 );
     /* WRITE_STRING */ sub_8392( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU116 );
     /* WRITE_STRING */ sub_8392( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU120 );
     /* WRITE_STRING */ sub_8392( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU124 );
     /* WRITE_STRING */ sub_8392( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU128 );
     /* WRITE_STRING */ sub_8392( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_30580( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_30580( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_30580( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_30334(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_30411(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_30580(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_31281(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* MAL_ENEMYSTRUCTARRAYCREATE */ int sub_32331(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5)
{
    int I;

    PRINTSTRING( "[MSWW] ### MAL_EnemyStructArrayCreate starting: " );
     /* WRITE_STRING */ sub_8392( uParam1 );
    if (NOT bParam4)
    {
         /* P_SETUP_AI_GROUP */ sub_32448( uParam2, uParam3, 1 );
        for ( I = 0; I < (uParam0^); I++ )
        {
             /* MAL_ENEMYSTRUCTCREATE */ sub_32858( ref (uParam0^)[I] );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_35736( (uParam0^)[I]._fU0, uParam2 );
        }
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_36134( uParam0, uParam1 );
    }
    else if ((uParam0^)[0]._fU172 == 0)
    {
         /* P_SETUP_AI_GROUP */ sub_32448( uParam2, uParam3, 1 );
    }
    if ((uParam0^)[0]._fU172 < (uParam0^))
    {
         /* MAL_ENEMYSTRUCTCREATE */ sub_32858( ref (uParam0^)[(uParam0^)[0]._fU172] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_35736( (uParam0^)[(uParam0^)[0]._fU172]._fU0, uParam2 );
        (uParam0^)[0]._fU172++;
    }
    else
    {
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_36134( uParam0, uParam1 );
        return 1;
    }
    if (bParam5)
    {
         /* MAL_ESA_PROCESSINGFREEZE */ sub_36425( uParam0, 1, 0, -1 );
    }
    return 0;
}

/* P_SETUP_AI_GROUP */ void sub_32448(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* MAL_ENEMYSTRUCTCREATE */ void sub_32858(int iParam0)
{
    unknown uVar3;

     /* MAL_WRITESCRIPTLOG */ sub_351( "MAL_EnemyStructCreate starting" );
     /* MAL_CREATEPEDADV */ sub_32997( iParam0 + 0, iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU72, iParam0->_fU80, iParam0->_fU84, iParam0->_fU116, iParam0->_fU120, iParam0->_fU124, 1 );
    if (NOT (ARE_STRINGS_EQUAL( iParam0 + 140, ref g_U668 )))
    {
        PRINTSTRING( "[MSWW] ### MAL_EnemyStructCreate adding ped to room: " );
         /* WRITE_STRING */ sub_8392( iParam0 + 140 );
         /* MAL_SETROOMFORPED */ sub_35087( iParam0 + 0, iParam0 + 140 );
    }
    if (iParam0->_fU128)
    {
         /* MAL_WRITESCRIPTLOG */ sub_351( "MAL_EnemyStructCreate giving ped backup weapon" );
         /* MAL_GIVEPEDWEAPONINHOLSTER */ sub_35236( iParam0->_fU0, iParam0->_fU76, 25000, 1, 0 );
    }
    if (iParam0->_fU132)
    {
        uVar3 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
         /* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ sub_35462( ref uVar3, 14, 1 );
    }
    if (iParam0->_fU136 != 0)
    {
         /* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ sub_35625( iParam0 + 0, iParam0->_fU136 );
    }
    return iParam0->_fU0;
}

/* MAL_CREATEPEDADV */ void sub_32997(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
     /* P_CREATEPEDSTRUCT */ sub_33041( uParam1, uParam2, uParam5, uParam18, 7, 3, 2, 0, 0 );
    (uParam0^) =  /* MAL_CREATEPED */ sub_33163( uParam0, uParam1, 1, 1, uParam19 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
    }
     /* MAL_GIVEPEDWEAPON */ sub_34402( (uParam0^), uParam6, 25000, 0, 0 );
     /* MAL_SETTEMPLATEANDRANGES */ sub_34607( uParam0, ref uParam8, uParam16, uParam17, 1 );
     /* MAL_SETPEDCOMBATMOVEMENT */ sub_34895( uParam0, uParam7 );
    return (uParam0^);
}

/* P_CREATEPEDSTRUCT */ void sub_33041(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

/* MAL_CREATEPED */ void sub_33163(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
     /* CLEANPED */ sub_4104( (uParam0^) );
    (uParam0^) =  /* CREATEPED */ sub_33199( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
             /* MAL_WRITESCRIPTLOG */ sub_351( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
     /* MAL_SETPEDCOMBATATTRIBUTES */ sub_34250( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

/* CREATEPED */ void sub_33199(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_33381( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_33930( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_34031( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* LOADMODEL */ void sub_33381(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_8392( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETPEDDEFAULTSTATS */ void sub_33930(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_34031(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* MAL_SETPEDCOMBATATTRIBUTES */ void sub_34250(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

/* MAL_GIVEPEDWEAPON */ void sub_34402(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                 /* MAL_WRITESCRIPTLOG */ sub_351( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_SETTEMPLATEANDRANGES */ void sub_34607(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
     /* MAL_WRITESCRIPTLOG */ sub_351( "MAL_SetTemplateAndRanges" );
    PRINTSTRING( "[MSWW]### Template Name: " );
     /* WRITE_STRING */ sub_8392( uParam1 );
    PRINTSTRING( "[MSWW]### Min Range: " );
     /* WRITE_FLOAT */ sub_30411( fParam2 );
    PRINTSTRING( "[MSWW]### Max Range: " );
     /* WRITE_FLOAT */ sub_30411( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
         /* MAL_SETPEDCOMBATATTRIBUTES */ sub_34250( uParam0, 1, 0 );
    }
    return;
}

/* MAL_SETPEDCOMBATMOVEMENT */ void sub_34895(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETROOMFORPED */ void sub_35087(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_GIVEPEDWEAPONINHOLSTER */ void sub_35236(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                 /* MAL_WRITESCRIPTLOG */ sub_351( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ void sub_35462(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

/* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ void sub_35625(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PERSISTENT_PED_VARIATION_ENUM( (uParam0^), uParam1 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_35736(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_8392( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_32448( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_32448( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* MAL_ESA_GIVEDEBUGNAMES */ void sub_36134(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I]._fU0, ref cVar5 );
        }
    }
    return;
}

/* MAL_ESA_PROCESSINGFREEZE */ void sub_36425(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_PROCESSINGFREEZE */ sub_36502( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_PROCESSINGFREEZE */ void sub_36502(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FREEZE_PROCESSING( iParam0->_fU0, uParam1 );
    }
    return;
}

/* P_SETUP_R4_ENEMIES */ void sub_36611()
{
    int I;

     /* MAL_ESA_ALERTNESSANDEMOTIONSTATE */ sub_36648( ref l_U447, 3, 1 );
     /* MAL_ESA_NOUSECOVER */ sub_37008( ref l_U447, 0, -1 );
     /* MAL_ESA_SETLOCKEDANDREGISTEREDONPED */ sub_37193( ref l_U447, g_U2777, 0, -1 );
     /* MAL_ESA_SETPEDARRAYACCURACY */ sub_37480( ref l_U447, 31186664 );
     /* MAL_ESA_SETASONESHOTKILL */ sub_37646( ref l_U447, 1, 0, -1 );
     /* MAL_ESA_SETCOMBATMOVEMENT */ sub_37830( ref l_U447, 0, 5, -1 );
    for ( I = 0; I < l_U447; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U447[I]._fU0 )))
        {
            SET_PED_COMBAT_ATTRIBUTES( l_U447[I]._fU0, 256, 0 );
            SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U447[I]._fU0, 1 );
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U447[I]._fU0, 0, 0 ), 30 );
            FREEZE_PED_POSITION( l_U447[I]._fU0, 1 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U447[I]._fU0, 1 );
            SET_PED_VISIBLE( l_U447[I]._fU0, 0 );
        }
    }
     /* P_RAILSHOOTERENEMYSTRUCTCREATE */ sub_38216( ref l_U320[0], 0, 0 );
     /* P_RAILSHOOTERENEMYSTRUCTCREATE */ sub_38216( ref l_U320[1], 10000, 1 );
     /* P_RAILSHOOTERENEMYSTRUCTCREATE */ sub_38216( ref l_U320[2], 10000, 2 );
     /* P_RAILSHOOTERENEMYSTRUCTCREATE */ sub_38216( ref l_U320[3], 10000, 3 );
     /* P_RAILSHOOTERENEMYSTRUCTCREATE */ sub_38216( ref l_U320[4], 10000, 4 );
     /* P_RAILSHOOTERENEMYSTRUCTCREATE */ sub_38216( ref l_U320[5], 10000, 5 );
    return;
}

/* MAL_ESA_ALERTNESSANDEMOTIONSTATE */ void sub_36648(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_ALERTNESSANDEMOTIONSTATE */ sub_36719( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

/* MAL_ES_ALERTNESSANDEMOTIONSTATE */ void sub_36719(int iParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_SETPEDALERTNESSANDEMOTIONSTATE */ sub_36771( iParam0 + 0, uParam1, uParam2 );
    return;
}

/* MAL_SETPEDALERTNESSANDEMOTIONSTATE */ void sub_36771(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_SETPEDALERTNESS */ sub_36822( uParam0, uParam1 );
     /* MAL_SETPEDEMOTIONSTATION */ sub_36894( uParam0, uParam2 );
    return;
}

/* MAL_SETPEDALERTNESS */ void sub_36822(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETPEDEMOTIONSTATION */ void sub_36894(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_EMOTION_STATE( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_ESA_NOUSECOVER */ void sub_37008(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
         /* MAL_ES_NOUSECOVER */ sub_37077( ref (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_NOUSECOVER */ void sub_37077(int iParam0)
{
     /* MAL_NOUSECOVER */ sub_37111( iParam0 + 0 );
    return;
}

/* MAL_NOUSECOVER */ void sub_37111(unknown uParam0)
{
     /* MAL_SETPEDCOMBATATTRIBUTES */ sub_34250( uParam0, 1, 0 );
    return;
}

/* MAL_ESA_SETLOCKEDANDREGISTEREDONPED */ void sub_37193(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_REGISTERTARGET */ sub_37283( ref (uParam0^)[I]._fU0, uParam1 );
         /* MAL_SETLOCKEDTARGET */ sub_37373( ref (uParam0^)[I]._fU0, uParam1 );
    }
    return;
}

/* MAL_REGISTERTARGET */ void sub_37283(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETLOCKEDTARGET */ void sub_37373(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_ESA_SETPEDARRAYACCURACY */ void sub_37480(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* MAL_ES_SETPEDACCURACY */ sub_37546( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_SETPEDACCURACY */ void sub_37546(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_ACCURACY( iParam0->_fU0, uParam1 );
    }
    return;
}

/* MAL_ESA_SETASONESHOTKILL */ void sub_37646(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_SETASONESHOTKILL */ sub_37727( (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_SETASONESHOTKILL */ void sub_37727(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( uParam0._fU0, uParam44 );
    }
    return;
}

/* MAL_ESA_SETCOMBATMOVEMENT */ void sub_37830(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_SETPEDCOMBATMOVEMENT */ sub_37908( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_SETPEDCOMBATMOVEMENT */ void sub_37908(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        iParam0->_fU80 = uParam1;
        SET_PED_COMBAT_MOVEMENT( iParam0->_fU0, uParam1 );
    }
    return;
}

/* P_RAILSHOOTERENEMYSTRUCTCREATE */ void sub_38216(int iParam0, unknown uParam1, unknown uParam2)
{
    iParam0->_fU80 = 0;
    iParam0->_fU36 = uParam1;
    iParam0->_fU40 = uParam2;
     /* CREATETIMER */ sub_919( iParam0 + 0, iParam0->_fU36, 1, 0 );
     /* CREATETIMER */ sub_919( iParam0 + 44, l_U764, 1, 0 );
    return;
}

/* CUTSYS_DEFAULT_PRECUTSCENESETUP */ int sub_38496()
{
    return 1;
}

/* P_MID11_REGISTER */ void sub_38549()
{
    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2777, "Giov_Club_B", 0 );
        CUTSCENE_REGISTER_ISEQ( 1182917137 );
        ISEQ_REGISTER_ENTITY( 1182917137, "giovanna", g_U2777, 0 );
    }
    if (NOT (IS_PED_DEAD( g_U2749 )))
    {
        DETACH_PED( g_U2749, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2749, "Pass_Club_H", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( g_U2749, g_U2866, 0, -0.61500000, 1.48000000, 1.55500000, 0.00000000, 0.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2749, "/Global/S_CLUB_VIG_11_PAS/SEQ_START/PASSOS/IDLE" );
    }
    if (NOT (IS_PED_DEAD( g_U2763 )))
    {
        DETACH_PED( g_U2763, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2763, "Marc_Casu", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( g_U2763, g_U2866, 0, 0.67600000, 1.52300000, 1.50300000, 0.00000000, 0.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2763, "/Global/S_CLUB_VIG_11_MAR/SEQ_START/MARCELLO/IDLE" );
    }
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() )))
    {
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE(  /* PLAYER_PED_ID */ sub_586(), g_U2866, 0, 0.56600000, 0.00000000, 0.80400000, -90.00000000, 0.00000000, 1, 0 );
        SET_VEHICLE_AS_ENTITY_SYNC_POINT( g_U2866,  /* PLAYER_PED_ID */ sub_586() );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 0, 0 ), "W_AR_Rug30_Aa_H", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_586(), "/Global/S_CLUB_VIG_10_NC/SEQ_START/MAX/INITIALIZE" );
        if (IS_WEAPON_ATTACHMENT_TOGGLED( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 0, 0 ), 13 ))
        {
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 0, 0 ), 13, 0 );
            l_U24 = 0;
        }
        else
        {
            l_U24 = 1;
        }
    }
    CUTSCENE_FORCE_GAMEPLAY_HEADING_PITCH_UPDATE();
    REGISTER_DETACH_PLAYER_FOR_CUTSCENE();
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U2866, "heli_luxury", 0 );
        FREEZE_VEHICLE_POSITION( g_U2866, 1 );
    }
    return;
}

/* P_MID11_HANDLE */ void sub_39324()
{
    if (l_U784._fU52)
    {
        CAMERA_SNAP_POINT_AT_COORD( 21.91000000, 44.97000000, 87.92000000 );
         /* WRITESCRIPTLOG */ sub_2580( "MF", "Music Cue: 6.9 ", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_4", "", 0, 0, 6000, -1082130432, 0 );
        SET_CAMERA_OVERRIDE( "RAIL_HELI_CAMERA", "RAIL_HELI_CAMERA_AIM", 0, 1, 1 );
         /* P_SETUP_HELI */ sub_39541( 193, 0.30000000, 0.40000000 );
         /* NIS_PLAY_CAM */ sub_1143( ref l_U811 );
    }
     /* P_MAKEHELIENGINESFUCKINGTURN */ sub_40757();
    return;
}

/* P_SETUP_HELI */ void sub_39541(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_WRITESCRIPTLOG */ sub_351( "P_SETUP_HELI" );
    if (NOT (DOES_VEHICLE_EXIST( g_U2866 )))
    {
        g_U2866 =  /* CREATEVEHICLE */ sub_39628( 1049690760, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( uParam0, uParam2 ), 0.00000000, 1, 0, 1 );
    }
    else if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_COORDS( g_U2866, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( uParam0, uParam2 ) );
    }
    if ((NOT (IS_VEHICLE_DEAD( g_U2866 ))) AND (DOES_VEHICLE_EXIST( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
        SILENCE_VEHICLE( g_U2866, 1 );
        SET_VEHICLE_AS_MISSION_VEHICLE( g_U2866 );
        SET_VEHICLE_EXTRA( g_U2866, 5, 1 );
        SET_VEHICLE_INTERIORLIGHT( g_U2866, 1 );
        SET_VEHICLE_DOOR_OPEN( g_U2866, 3 );
        SET_VEHICLE_HEALTH( g_U2866, 600 );
        SET_VEHICLE_ENGINE_HEALTH( g_U2866, 600.00000000 );
        SET_VEHICLE_PETROL_TANK_HEALTH( g_U2866, 300.00000000 );
        SET_VEHICLE_CAN_BE_DAMAGED( g_U2866, 0 );
        SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( g_U2866, 1 );
        SET_VEHICLE_PROOFS( g_U2866, 0, 1, 1, 1, 1 );
         /* P_START_VEHICLE_PLAYBACK */ sub_40213( g_U2866, uParam0, uParam1, uParam2, 0 );
        PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
        if (NOT (DOES_OBJECT_EXIST( l_U23 )))
        {
            l_U23 = CREATE_OBJECT( 230799837, 0.00000000, 1.00000000, 0.00000000, 0, 0 );
            ATTACH_OBJECT_TO_VEHICLE( l_U23, g_U2866, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
    ALLOW_BULLET_CAMERA_CHEAT( 0 );
    return;
}

/* CREATEVEHICLE */ void sub_39628(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_33381( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* P_START_VEHICLE_PLAYBACK */ void sub_40213(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3, boolean bParam4)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
    }
     /* LOADVEHICLERECORDING */ sub_40291( uParam1, 1 );
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
        SET_PLAYBACK_SPEED( uParam0, uParam2 );
        if (fParam3 > 0.00000000)
        {
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, fParam3 );
        }
    }
    if (bParam4)
    {
        while ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
        {
             /* WRITE_STRING */ sub_8392( "Waiting for vehicle to start playing recorded path." );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADVEHICLERECORDING */ void sub_40291(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a recording to be loaded: Rec# {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_MAKEHELIENGINESFUCKINGTURN */ void sub_40757()
{
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
    }
    return;
}

/* CUTSYS_DEFAULT_POSTCUTSCENE */ int sub_40858()
{
    return 1;
}

/* P_MID_11_BLEND_OUT_SETUP */ void sub_40907()
{
     /* P_SETUP_GAMEPLAY */ sub_40944();
     /* P_START_GAMEPLAY */ sub_42996();
    CAMERA_SNAP_POINT_AT_COORD( 21.91000000, 44.97000000, 87.92000000 );
    FREEZE_VEHICLE_POSITION( g_U2866, 0 );
     /* NIS_PLAY_CAM */ sub_1143( ref l_U811 );
    SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY_WINDY" );
    FREEZE_TIME_OF_DAY( 22, 0 );
    UNPAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
     /* WRITESCRIPTLOG */ sub_2580( "MF", "Music Cue: 6.10 ", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_4", "NIGHTCLUB_01_4", 0, -1, -1, -1082130432, 0 );
    return;
}

/* P_SETUP_GAMEPLAY */ void sub_40944()
{
    if (NOT l_U312)
    {
         /* P_SETUP_HELI */ sub_39541( 193, 0.30000000, 0.40000000 );
         /* P_SETUP_PLAYER */ sub_41018( -1313172978, "heli_max" );
    }
     /* P_SETUP_PASSOS_AND_MARCELLO */ sub_41650();
     /* P_SETUP_GIOVANNA */ sub_42590( l_U1143, l_U1146, 1182917137, "giovanna", 1 );
     /* P_SETUP_R4_ENEMIES */ sub_36611();
    return;
}

/* P_SETUP_PLAYER */ void sub_41018(unknown uParam0, unknown uParam1)
{
     /* MAL_WRITESCRIPTLOG */ sub_351( "P_SETUP_PLAYER" );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() )))
    {
        SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_586(), 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_586(), 1 );
        SET_ADRENALINE_AMT( 0.75000000 );
        CLEAR_PED_TASKS(  /* PLAYER_PED_ID */ sub_586() );
        SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_586(), GET_PED_MAX_HEALTH(  /* PLAYER_PED_ID */ sub_586() ), 0 );
        if (NOT (IS_PED_ATTACHED_TO_ANY_VEHICLE(  /* PLAYER_PED_ID */ sub_586() )))
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                ATTACH_PED_TO_VEHICLE(  /* PLAYER_PED_ID */ sub_586(), g_U2866, 0, 0.56600000, 0.00000000, 0.80400000, -90.00000000, 0.00000000, 1, 0, 0, 1 );
                SET_VEHICLE_AS_ENTITY_SYNC_POINT( g_U2866,  /* PLAYER_PED_ID */ sub_586() );
            }
        }
        SET_PED_CAN_RAGDOLL(  /* PLAYER_PED_ID */ sub_586(), 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        ENABLE_HIT_DETECTION( 0 );
        ENABLE_LAST_MAN_STANDING( 0 );
        SET_SILHOUETTE_ACTIVE( 0 );
        SET_RAIL_RELATIVE_DIR( 2, 0 );
        SET_PLAYER_COMBAT_TIMER_MODE( 1 );
        PLAYER_SET_AIM_MODE( 2 );
        AUDIO_SET_PED_FOOTSTEPS_ON( 0 );
        SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_586(), 0, 0 );
        SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_586(), 1, 0 );
        SET_INSTANT_FIRE_FORCED( 1 );
        SET_PED_USES_ANIMATED_DEATH(  /* PLAYER_PED_ID */ sub_586(), 1 );
        if (NOT (ISEQ_QUERY_STATE( uParam0, 3 )))
        {
             /* WRITESCRIPTLOG */ sub_2580( "MF", "Starting Player Helicopter Interactive Sequence", 0 );
            PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_586(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
            ISEQ_REGISTER_ENTITY( uParam0, uParam1,  /* PLAYER_PED_ID */ sub_586(), 0 );
            ISEQ_START( uParam0 );
        }
        REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_586() );
         /* F_GIVEPEDWEAPON */ sub_8783(  /* PLAYER_PED_ID */ sub_586(), 354276007, 25000, 0, 0 );
        SET_CAMERA_OVERRIDE( "RAIL_HELI_CAMERA", "RAIL_HELI_CAMERA_AIM", 0, 1, 1 );
    }
    return;
}

/* P_SETUP_PASSOS_AND_MARCELLO */ void sub_41650()
{
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_41725( ref g_U2736, 55.11000000, -24.06000000, 94.27000000, 0.00000000, 817667075, 26, 6, 0, 0, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_41725( ref g_U2750, 54.04000000, -24.06000000, 94.27000000, 0.00000000, -383356854, 26, 6, 0, 0, 1 );
    if (NOT (ISEQ_IS_LOADED( -931023773 )))
    {
        ISEQ_REQUEST( -931023773 );
    }
    if (NOT (ISEQ_IS_LOADED( 1476011597 )))
    {
        ISEQ_REQUEST( 1476011597 );
    }
    if (NOT (DOES_PED_EXIST( g_U2763 )))
    {
        g_U2763 =  /* CREATEPED */ sub_33199( ref g_U2750 );
    }
    if (NOT (IS_PED_DEAD( g_U2763 )))
    {
         /* MAL_STANDSTILL */ sub_42014( ref g_U2763 );
        SET_PED_INVINCIBLE( g_U2763, 1 );
        DETACH_PED( g_U2763, 1 );
        if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
        {
            ATTACH_PED_TO_VEHICLE( g_U2763, g_U2866, 0, 0.67600000, 1.52300000, 1.50300000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        }
    }
    if (NOT (DOES_PED_EXIST( g_U2749 )))
    {
        g_U2749 =  /* CREATEPED */ sub_33199( ref g_U2736 );
    }
    if (NOT (IS_PED_DEAD( g_U2749 )))
    {
         /* MAL_STANDSTILL */ sub_42014( ref g_U2749 );
        SET_PED_INVINCIBLE( g_U2749, 1 );
        DETACH_PED( g_U2749, 1 );
        if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
        {
            ATTACH_PED_TO_VEHICLE( g_U2749, g_U2866, 0, -0.61500000, 1.48000000, 1.55500000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        }
    }
    if (NOT (ISEQ_QUERY_STATE( -931023773, 3 )))
    {
         /* MAL_REGISTERPEDWITHISEQ */ sub_42413( g_U2763, -931023773, "marcello" );
        ISEQ_START( -931023773 );
    }
    if (NOT (ISEQ_QUERY_STATE( 1476011597, 3 )))
    {
         /* MAL_REGISTERPEDWITHISEQ */ sub_42413( g_U2749, 1476011597, "passos" );
        ISEQ_START( 1476011597 );
    }
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_41725(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* MAL_STANDSTILL */ void sub_42014(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

/* MAL_REGISTERPEDWITHISEQ */ void sub_42413(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

/* P_SETUP_GIOVANNA */ void sub_42590(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, boolean bParam6)
{
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_41725( ref g_U2764, uParam0, uParam3, 1421546599, 5, 2, 0, 0, 0 );
    if (NOT (DOES_PED_EXIST( g_U2777 )))
    {
        g_U2777 =  /* CREATEPED */ sub_33199( ref g_U2764 );
    }
    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
         /* MAL_WRITESCRIPTLOG */ sub_351( "Setting Giovanna crap" );
         /* MAL_STANDSTILL */ sub_42014( ref g_U2777 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2777, 1 );
        SET_BULLET_CAM_PREF( g_U2777, "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
        SET_PED_DIES_WHEN_INJURED( g_U2777, 1 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 1 );
        RESET_PED_GORE( g_U2777 );
        SET_COLLISION_BETWEEN_PEDS( g_U2777, 0 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( g_U2777, 0 );
        SET_PED_USES_DYING_ANIM( g_U2777, 0 );
        if (NOT (ISEQ_QUERY_STATE( uParam4, 3 )))
        {
             /* MAL_REGISTERPEDWITHISEQ */ sub_42413( g_U2777, uParam4, uParam5 );
            if (bParam6)
            {
                ISEQ_START( uParam4 );
            }
        }
    }
    return;
}

/* P_START_GAMEPLAY */ void sub_42996()
{
    unknown uVar2;
    unknown uVar3;
    int I;

    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 0, 0 ) ))
    {
        ENABLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 0, 0 ), 13, 1 );
        if (NOT l_U24)
        {
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 0, 0 ), 13, 1 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 0, 0 ), 13, 0 );
        }
        SET_LASER_SIGHT_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 0, 0 ), -1363960247 );
    }
     /* MAL_TELEPORTPED */ sub_43180( g_U2777, g_U2764._fU0, g_U2764._fU12 );
     /* MAL_SETACTINT */ sub_43266( g_U2777, 47, 1000 );
     /* MAL_ESA_TELEPORTTOSPAWN */ sub_43340( ref l_U447, 0, -1 );
     /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_43596( ref l_U447[5]._fU0 );
     /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_43596( ref l_U447[6]._fU0 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 12.71808000, 33.36874000, 85.60878000, g_U2777, 3, 0, 1056964608, 0, 1, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_586() );
    CLOSE_SEQUENCE_TASK( uVar2 );
    if (NOT (IS_PED_DEAD( l_U447[5]._fU0 )))
    {
        SET_PED_ALERTNESS( l_U447[5]._fU0, 2 );
        CLEAR_PED_TASKS_IMMEDIATELY( l_U447[5]._fU0 );
        TASK_PERFORM_SEQUENCE( l_U447[5]._fU0, uVar2 );
    }
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_PAUSE( 0, 1000 );
    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 17.46000000, 45.42000000, 88.47000000, g_U2777, 3, 0, 1056964608, 0, 1, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_586() );
    CLOSE_SEQUENCE_TASK( uVar3 );
    if (NOT (IS_PED_DEAD( l_U447[6]._fU0 )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( l_U447[6]._fU0 );
        TASK_PERFORM_SEQUENCE( l_U447[6]._fU0, uVar3 );
    }
    SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_586(), 0 );
    SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_586(), 0, 0, 0, 0, 0 );
    PLAY_SCRIPT_STREAM_FROM_VEHICLE( g_U2866, g_U2867 );
    UNPAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
    for ( I = 0; I < l_U447; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U447[I]._fU0 )))
        {
            FREEZE_PED_POSITION( l_U447[I]._fU0, 0 );
            SET_PED_VISIBLE( l_U447[I]._fU0, 1 );
        }
    }
    return;
}

/* MAL_TELEPORTPED */ void sub_43180(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* MAL_SETACTINT */ void sub_43266(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U665 );
    }
    return;
}

/* MAL_ESA_TELEPORTTOSPAWN */ void sub_43340(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
         /* MAL_ES_TELEPORTTOSPAWN */ sub_43418( (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_TELEPORTTOSPAWN */ void sub_43418(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43)
{
     /* MAL_ES_TELEPORT */ sub_43471( uParam0, uParam0._fU56, uParam0._fU68 );
    return;
}

/* MAL_ES_TELEPORT */ void sub_43471(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_COORDS( uParam0._fU0, uParam44, 1 );
        SET_PED_HEADING( uParam0._fU0, uParam47 );
    }
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ void sub_43596(unknown uParam0)
{
     /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_43650( uParam0,  /* PLAYER_PED_ID */ sub_586() );
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPED */ void sub_43650(unknown uParam0, unknown uParam1)
{
     /* MAL_REGISTERTARGET */ sub_37283( uParam0, uParam1 );
     /* MAL_SETLOCKEDTARGET */ sub_37373( uParam0, uParam1 );
    return;
}

/* F_MID_11_BLEND_OUT_HANDLE */ int sub_44434()
{
     /* P_MAKEHELIENGINESFUCKINGTURN */ sub_40757();
     /* P_RS_HANDLE_CAM_SHAKE */ sub_44477();
    if (l_U784._fU52)
    {
        if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_44774()))
        {
            if (IS_DEATH_PANEL_WIPE_ALLOWED())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
        }
    }
    if ( /* NIS_IS_SHOT_FINISHED */ sub_45040( ref l_U811, 1 ))
    {
         /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_45217( 1200, 1, 0, -859915232, -859915232, 0 );
         /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U842, 1200 );
    }
    if ( /* ISTIMERDONE */ sub_2370( ref l_U842 ))
    {
        return 1;
    }
    return 0;
}

/* P_RS_HANDLE_CAM_SHAKE */ void sub_44477()
{
    if (NOT l_U6._fU20)
    {
         /* WRITESCRIPTLOG */ sub_2580( "MF", "INITIAL HELI RAIL CAM SHAKE...", 0 );
        SHAKE_GAMEPLAY_CAM(  /* F_CAM_SHAKE_MED_EXPLOSION */ sub_44566(), l_U16 );
         /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U6, l_U15 );
    }
    if ( /* ISTIMERDONE */ sub_2370( ref l_U6 ))
    {
        SHAKE_GAMEPLAY_CAM(  /* F_CAM_SHAKE_MED_EXPLOSION */ sub_44566(), l_U16 );
         /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U6, l_U15 );
    }
    return;
}

/* F_CAM_SHAKE_MED_EXPLOSION */ string sub_44566()
{
    return "MEDIUM_EXPLOSION_SHAKE";
}

/* P_CREATE_AND_START_TIMER */ void sub_44652(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_919( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_1272( uParam0 );
    return;
}

/* F_IMAGEFX_FADE_IN */ int sub_44774()
{
    if (l_U272)
    {
         /* WRITESCRIPTLOG */ sub_2580( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U272 = 0;
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_2580( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

/* NIS_IS_SHOT_FINISHED */ int sub_45040(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_2370( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_2370( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_45217(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_45386(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_2580( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_45610( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 45507, 45557, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_45507()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_45557()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_45610(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_HANDLECUTSCENE */ void sub_45955(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_2580( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_2580( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_2580( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_2580( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_2580( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_2580( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_24682( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_2580( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_46846( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_46846( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_2580( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_47390( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_46846( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_47770( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_47770( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* NIS_PRE_SETUP */ void sub_46846(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_624(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_586(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_586() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_586(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_47390(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_586(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_586(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_586(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_47770(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_624(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_586(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_47868();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_47868()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_586(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_586(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_RS_CONTROLS */ void sub_48340()
{
    SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_624(), 0, 256 );
    REENABLE_PLAYER_INPUT( 17 );
    REENABLE_PLAYER_INPUT( 16 );
    REENABLE_PLAYER_INPUT( 15 );
    REENABLE_PLAYER_INPUT( 14 );
    REENABLE_PLAYER_INPUT( 6 );
    REENABLE_PLAYER_INPUT( 28 );
    REENABLE_PLAYER_INPUT( 29 );
    REENABLE_PLAYER_INPUT( 4 );
    REENABLE_PLAYER_INPUT( 19 );
    REENABLE_PLAYER_INPUT( 20 );
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_48607()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* P_RS_HANDLE_PLAYER_RELOAD_DIALOGUE */ void sub_48707()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() )))
    {
        if (NOT l_U54)
        {
            if (NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_586() )))
            {
                if (TIME_SINCE_LAST_MONOLOGUE() > 500)
                {
                    if (IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_586() ))
                    {
                        l_U54 = 1;
                        if ((l_U74 == 1) || ((GET_WEAPON_AMMO_IN_CLIP( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_586(), 0, 0 ) )) < 2))
                        {
                             /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U65, 400 );
                        }
                        else if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) < 45)
                        {
                             /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U65, 400 );
                        }
                    }
                }
            }
        }
        if ( /* ISTIMERDONE */ sub_2370( ref l_U65 ))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_48943( ref l_U55 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 0,  /* PLAYER_PED_ID */ sub_586(), "MAX", ref l_U55, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 1,  /* PLAYER_PED_ID */ sub_586(), "MAX", ref l_U55, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_49322( "SCLB_MCHWR", ref l_U55, 5, 1 );
            l_U74 = 0;
        }
        if (l_U54 == 1)
        {
            if (NOT (IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_586() )))
            {
                l_U54 = 0;
            }
        }
    }
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_48943(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_49054(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_49322(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_49367( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_49367(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_49454( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_49454(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_49506( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_50024( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_49506(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_50024(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_RS_SPEECH_MAX_RESPONDS */ void sub_50270()
{
    if ( /* ISTIMERDONE */ sub_2370( ref l_U45 ))
    {
         /* P_RS_SPEECH_VIG_10 */ sub_50321();
    }
    return;
}

/* P_RS_SPEECH_VIG_10 */ void sub_50321()
{
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_RS_SPEECH_VIG_10 - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_48943( ref l_U115 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 1,  /* PLAYER_PED_ID */ sub_586(), "MAX", ref l_U115, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 0,  /* PLAYER_PED_ID */ sub_586(), "MAX", ref l_U115, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_49322( "SCLB_VIG10", ref l_U115, 8, 1 );
    PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_586(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_RS_SPEECH_VIG_10 - END", 0 );
    return;
}

/* P_RS_HANDLE_GIOVANNA_SCREAMS_TO_BEING_SHOT_AT */ void sub_50559()
{
    unknown uVar2;

    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
        if (NOT (IS_ANY_SPEECH_PLAYING( g_U2777 )))
        {
            if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2777 ), 1.90000000, ref uVar2 ))
            {
                if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) > 30)
                {
                     /* P_RS_SPEECH_GVNSC1 */ sub_50701();
                }
            }
        }
    }
    return;
}

/* P_RS_SPEECH_GVNSC1 */ void sub_50701()
{
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_RS_SPEECH_GVNSC1 - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_48943( ref l_U105 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 1, g_U2777, "GIOVANNA", ref l_U105, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 0,  /* PLAYER_PED_ID */ sub_586(), "MAX", ref l_U105, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_49322( "SCLB_GVNSC1", ref l_U105, 8, 1 );
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_RS_SPEECH_GVNSC1 - END", 0 );
    return;
}

/* MAL_ESA_ZHEIGHTCHECK */ void sub_50922(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_ZHEIGHTCHECK */ sub_50983( ref (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

/* MAL_ES_ZHEIGHTCHECK */ void sub_50983(int iParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( iParam0->_fU0, 0, 0 );
            }
            if (bParam3)
            {
                 /* MAL_ES_CLEAN */ sub_5110( iParam0 );
            }
        }
    }
    return;
}

/* MAL_ESA_ISINTRIGGER */ int sub_51164(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, int iParam23)
{
    int I;

    if (iParam23 == -1)
    {
        iParam23 = (uParam0^) - 1;
    }
    for ( I = uParam22; I <= iParam23; I++ )
    {
        if ( /* F_ISPEDINTRIGGERBOX */ sub_51247( (uParam0^)[I]._fU0, uParam1 ))
        {
            return 1;
        }
    }
    return 0;
}

/* F_ISPEDINTRIGGERBOX */ int sub_51247(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_RS_SPEECH_HRGT */ void sub_51405()
{
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_RS_SPEECH_HRGT - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_48943( ref l_U85 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 1, g_U2763, "MARCELO", ref l_U95, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 0,  /* PLAYER_PED_ID */ sub_586(), "MAX", ref l_U95, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_49322( "SCLB_HRGT", ref l_U95, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2763, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_RS_SPEECH_HRGC - END", 0 );
    return;
}

/* P_RSDIAG_GIOVANNAINMODERATEDANGER */ void sub_51663()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_48943( ref uVar2 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 0,  /* PLAYER_PED_ID */ sub_586(), "MAX", ref uVar2, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 1, g_U2749, "PASSOS", ref uVar2, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_49322( "SCLB_HRPYMX", ref uVar2, 6, 1 );
    PED_SET_ACTION_INTENTION( g_U2749, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_51828(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_51871( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_51871(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_RS_SPEECH_HRPYM */ void sub_52101()
{
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_RS_SPEECH_HRPYM - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_48943( ref l_U75 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 1, g_U2749, "PASSOS", ref l_U75, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 0,  /* PLAYER_PED_ID */ sub_586(), "MAX", ref l_U75, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_49322( "SCLB_HRPYM", ref l_U75, 6, 1 );
    PED_SET_ACTION_INTENTION( g_U2749, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_RS_SPEECH_HRPYM - END", 0 );
    return;
}

/* MAL_ESA_GETNUMLIVINGPEDS */ void sub_52489(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            Result++;
        }
    }
    return Result;
}

/* P_RS_SPEECH_MID12NCA */ void sub_52725()
{
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_RS_SPEECH_MID12NCA - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_48943( ref l_U1070 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 1, g_U2777, "GIOVANNA", ref l_U1070, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 2, l_U1099._fU0, "M2_CS_78_AVG", ref l_U1070, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_49322( "SCLB_MID12NCA", ref l_U1070, 8, 1 );
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_RS_SPEECH_MID12NCA - END", 0 );
    return;
}

/* F_R4_HANDLE_GAMEPLAY */ int sub_52981()
{
    unknown uVar2;
    int iVar3;

    if (NOT l_U763)
    {
        l_U762 =  /* F_R4_GETFIRSTTHREATENINGPED */ sub_53025();
        if (l_U762 > -1)
        {
             /* MAL_WRITESCRIPTLOG */ sub_351( "THREATENING ENEMY FOUND ZOMG" );
            l_U763 = 1;
             /* P_R4_RUNTOGIOVANNA */ sub_53199( l_U762 );
             /* MAL_ES_SETASONESHOTKILL */ sub_37727( l_U447[l_U762], 1 );
             /* P_R4_GETEVERYONEBUTTHREATENEROUTOFTHREATENINGAREA */ sub_54227( l_U762 );
             /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U765, GET_RANDOM_INT_IN_RANGE( 1500, 2500 ) );
            l_U74 = 0;
             /* CREATETIMER */ sub_919( ref l_U1042, 5000, 1, 0 );
        }
        else if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_52489( ref l_U447 )) == 1)
        {
            uVar2 =  /* MAL_ESA_GETINDEXOFFIRSTLIVINGPED */ sub_55100( ref l_U447 );
            if ( /* MAL_COMPAREPEDPOSAXIS */ sub_53390( l_U447[uVar2]._fU0, "Y", "Less", 20.00000000 ))
            {
                l_U320[uVar2]._fU80 = 1;
                 /* P_R4_RUNTOGIOVANNA */ sub_53199( uVar2 );
            }
        }
         /* P_R4_HANDLEALLENEMIES */ sub_55272();;
    }
    else if ( /* F_ISPEDINTRIGGERBOX */ sub_51247( l_U447[l_U762]._fU0, l_U851 ))
    {
        return 1;
    }
    else if ( /* F_ISPEDINTRIGGERBOX */ sub_51247( l_U447[l_U762]._fU0, l_U872 ))
    {
        ;
    }
    else if (NOT (IS_PED_DEAD( l_U447[l_U762]._fU0 )))
    {
         /* MAL_DELICIOUSWARNINGSPAM */ sub_56769( "THREATENING ENEMY IS NO LONGER IN THREATENING AREA WTF" );
    }
    else if (IS_PED_DEAD( l_U447[l_U762]._fU0 ))
    {
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_2218( ref l_U1042 )))
        {
            if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) > 30)
            {
                 /* WRITESCRIPTLOG */ sub_2580( "MF", "Starting Timer: tmrRS4_Marcelo_Gripe_Delay", 0 );
                 /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U1042, GET_RANDOM_INT_IN_RANGE( 1500, 2000 ) );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_2580( "MF", "Disabling Timer: tmrRS4_Marcelo_Gripe_Delay", 0 );
                 /* DISABLETIMER */ sub_5836( ref l_U1042 );
            }
        }
        iVar3 =  /* F_R4_GETFIRSTTHREATENINGPED */ sub_53025();
        if (iVar3 > -1)
        {
             /* MAL_WRITESCRIPTLOG */ sub_351( "Threatening enemy is dead, but another is still in the Threatening Area.  Waiting until it's clear." );
        }
        else
        {
             /* P_R4_RESTARTADVANCE */ sub_57189();
            l_U763 = 0;
        }
    };;;;;
    return 0;
}

/* F_R4_GETFIRSTTHREATENINGPED */ int sub_53025()
{
    int Result;

    for ( Result = 0; Result < l_U320; Result++ )
    {
        if ( /* F_ISPEDINTRIGGERBOX */ sub_51247( l_U447[Result]._fU0, l_U872 ))
        {
            return Result;
        }
    }
    return -1;
}

/* P_R4_RUNTOGIOVANNA */ void sub_53199(int iParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( l_U447[iParam0]._fU0 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U447[iParam0]._fU0, 1 );
        CLEAR_PED_TASKS( l_U447[iParam0]._fU0 );
         /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_43650( ref l_U447[iParam0]._fU0, g_U2777 );
        SET_PED_PATH_CAN_AVOID_LINE_OF_FIRE( l_U447[iParam0]._fU0, 0 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U447[iParam0]._fU0, 0 );
        if ( /* MAL_COMPAREPEDPOSAXIS */ sub_53390( l_U447[iParam0]._fU0, "Y", "Less", 20.00000000 ))
        {
             /* WRITESCRIPTLOG */ sub_2580( "MF", "Teleporting CS to: <<1.689667, 28.156216, 85.608627>>", 0 );
             /* MAL_TELEPORTPED */ sub_43180( l_U447[iParam0]._fU0, 1.68966700, 28.15622000, 85.60863000, 0 );
        }
        OPEN_SEQUENCE_TASK( ref uVar3 );
        if (iParam0 == 6)
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 14.11447000, 40.26195000, 85.61844000, 3, -1, 0.30000000, 0, 0 );
        }
        else if (iParam0 == 7)
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 18.31671000, 43.84770000, 88.65140000, 2, -1, 0.30000000, 0, 0 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 18.16372000, 40.71935000, 85.62579000, 3, -1, 0.30000000, 0, 0 );
        }
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U314, 3, -1, 0.30000000, 0, 0 );
        TASK_ACHIEVE_HEADING( 0, 0, 0, 10 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U317, 2, -1, 1048576000, 0, 0 );
        TASK_TURN_PED_TO_FACE_COORD( 0, 21.29187000, 49.85730000, 87.55133000, 0, 1085905306 );
        TASK_AIM_GUN_AT_COORD( 0, 21.29187000, 49.85730000, 87.55133000, -1, 0 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( l_U447[iParam0]._fU0, uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
         /* MAL_WRITESTRINGANDINT */ sub_54093( "Enemy made run to Giovanna: ", iParam0 );
         /* WRITE_INT */ sub_30580( TIMERA() );
    }
    return;
}

/* MAL_COMPAREPEDPOSAXIS */ int sub_53390(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    float fVar9;

    uVar6 = { /* MAL_GETPEDCOORDS */ sub_53426( uParam0 )};
    if (ARE_STRINGS_EQUAL( uParam1, "X" ))
    {
        fVar9 = uVar6._fU0;
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Y" ))
    {
        fVar9 = uVar6._fU4;
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Z" ))
    {
        fVar9 = uVar6._fU8;
    };;;
    if (ARE_STRINGS_EQUAL( uParam2, "Greater" ))
    {
        if (fVar9 > fParam3)
        {
            return 1;
        }
    }
    else if (ARE_STRINGS_EQUAL( uParam2, "Less" ))
    {
        if (fVar9 < fParam3)
        {
            return 1;
        }
    }
    return 0;
}

/* MAL_GETPEDCOORDS */ vector sub_53426(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return "[dynamic result, ret vals = 3]";
        break;
        GET_PED_COORDS( uParam0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        break;
    }
    return vector( 0, 0, 0);
}

/* MAL_WRITESTRINGANDINT */ void sub_54093(unknown uParam0, unknown uParam1)
{
    DISPLAYF( "[MSWW] ### {0}: {1} ###", 2, 1537, uParam0, 513, uParam1 );
    return;
}

/* P_R4_GETEVERYONEBUTTHREATENEROUTOFTHREATENINGAREA */ void sub_54227(int iParam0)
{
    int I;

    for ( I = 0; I < l_U320; I++ )
    {
        if ((l_U320[I]._fU80 != 0) AND (I != iParam0))
        {
            if (( /* F_ISPEDINTRIGGERBOX */ sub_51247( l_U447[I]._fU0, l_U893 )) || ( /* F_ISPEDINTRIGGERBOX */ sub_51247( l_U447[I]._fU0, l_U872 )))
            {
                 /* MAL_MOVETOPOINTTHENSHOOTATPED */ sub_54421( ref l_U447[I]._fU0,  /* PLAYER_PED_ID */ sub_586(), 15.58290000, 35.17412000, 85.60880000, 2, 0, 0, 3 );
                 /* MAL_WRITESTRINGANDINT */ sub_54093( "Guy in Threaten area, telling to move", I );
                l_U320[I]._fU80 = 3;
            }
            else if ((l_U320[I]._fU80 != 3) AND (l_U320[I]._fU80 != 2))
            {
                 /* P_R4_SHOOT */ sub_54711( I );
                l_U320[I]._fU80 = 3;
            }
             /* CREATETIMER */ sub_919( ref l_U320[I]._fU44, l_U764, 1, 0 );
        }
    }
    return;
}

/* MAL_MOVETOPOINTTHENSHOOTATPED */ void sub_54421(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    unknown uVar11;

    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam5 );
        OPEN_SEQUENCE_TASK( ref uVar11 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam2, uParam8, 20000, 1048576000, 0, 0 );
        TASK_SHOOT_AT_PED( 0, uParam1, 9999999, uParam6, uParam7, 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar11 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar11 );
        CLEAR_SEQUENCE_TASK( uVar11 );
    }
    return;
}

/* P_R4_SHOOT */ void sub_54711(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( l_U447[uParam0]._fU0 )))
    {
        CLEAR_PED_TASKS( l_U447[uParam0]._fU0 );
         /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_43596( ref l_U447[uParam0]._fU0 );
         /* MAL_SETPEDALERTNESS */ sub_36822( ref l_U447[uParam0]._fU0, 3 );
         /* MAL_ES_SHOOTATPLAYER */ sub_54833( ref l_U447[uParam0], -256437761, 1, 0, 0 );
    }
    return;
}

/* MAL_ES_SHOOTATPLAYER */ void sub_54833(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown uVar7;

    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_586() ))) AND (NOT (IS_PED_DEAD( iParam0->_fU0 ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar7 );
        TASK_SHOOT_AT_PED( 0,  /* PLAYER_PED_ID */ sub_586(), -1, uParam1, uParam2, uParam4, uParam3 );
        CLOSE_SEQUENCE_TASK( uVar7 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar7 );
        CLEAR_SEQUENCE_TASK( uVar7 );
    }
    return;
}

/* MAL_ESA_GETINDEXOFFIRSTLIVINGPED */ int sub_55100(unknown uParam0)
{
    int Result;

    for ( Result = 0; Result <= ((uParam0^) - 1); Result++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[Result]._fU0 )))
        {
            return Result;
        }
    }
    return -1;
}

/* P_R4_HANDLEALLENEMIES */ void sub_55272()
{
    int I;

    for ( I = 0; I < l_U320; I++ )
    {
         /* P_R4_HANDLEENEMY */ sub_55324( I );
    }
    return;
}

/* P_R4_HANDLEENEMY */ void sub_55324(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( l_U447[uParam0]._fU0 )))
    {
        switch (l_U320[uParam0]._fU80)
        {
            case 0:
             /* P_R4_UNBLOCKANDINITNEXT */ sub_55441( uParam0 );
            break;
            case 1:
            uVar3 = nil;
            if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U447[uParam0]._fU0 ), 6.00000000, ref uVar3 ))
            {
                 /* P_R4_SHOOT */ sub_54711( uParam0 );
                 /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U320[uParam0]._fU44, l_U764 );
                l_U320[uParam0]._fU80 = 3;
            }
            break;
            case 2:
            case 3:
            if ( /* ISTIMERDONE */ sub_2370( ref l_U320[uParam0]._fU44 ))
            {
                 /* P_R4_RUNTOGIOVANNA */ sub_53199( uParam0 );
                l_U320[uParam0]._fU80 = 1;
            }
            break;
            case 5:
             /* MAL_WRITESCRIPTLOG */ sub_351( "P_R4_HandleEnemy: Enemy is in DEAD state but is not dead.  WHY IS THIS HAPPENING?!" );
            break;
        }
    }
    else if (l_U320[uParam0]._fU80 != 5)
    {
        l_U320[uParam0]._fU80 = 5;
    }
    return;
}

/* P_R4_UNBLOCKANDINITNEXT */ void sub_55441(int iParam0)
{
    if (NOT (IS_PED_DEAD( l_U447[iParam0]._fU0 )))
    {
        if (( /* MAL_ESA_GETNUMDEADPEDS */ sub_55507( ref l_U447 )) >= l_U320[iParam0]._fU40)
        {
            if (iParam0 < 5)
            {
                 /* MAL_ES_TELEPORTTOSPAWN */ sub_43418( l_U447[iParam0] );
            }
             /* MAL_ES_FREEZE */ sub_55690( ref l_U447[iParam0], 0 );
             /* MAL_ES_SETPEDVISIBLE */ sub_55767( ref l_U447[iParam0], 1 );
             /* P_R4_RUNTOGIOVANNA */ sub_53199( iParam0 );
             /* P_R4_FINDNEXTTOUNBLOCK */ sub_55907( iParam0 );
            l_U320[iParam0]._fU80 = 1;
        }
    }
    return;
}

/* MAL_ESA_GETNUMDEADPEDS */ void sub_55507(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I]._fU0 ))
        {
            if (IS_PED_DEAD( (uParam0^)[I]._fU0 ))
            {
                Result++;
            }
        }
    }
    return Result;
}

/* MAL_ES_FREEZE */ void sub_55690(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        FREEZE_PED_POSITION( iParam0->_fU0, uParam1 );
    }
    return;
}

/* MAL_ES_SETPEDVISIBLE */ void sub_55767(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_VISIBLE( iParam0->_fU0, uParam1 );
    }
    else
    {
         /* MAL_WRITESCRIPTLOG */ sub_351( "MAL_ES_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

/* P_R4_FINDNEXTTOUNBLOCK */ void sub_55907(unknown uParam0)
{
    int iVar3;
    int iVar4;
    int I;

     /* MAL_WRITESTRINGANDINT */ sub_54093( "P_R4_FindNextToUnblock", uParam0 );
    iVar3 = -1;
    iVar4 = l_U320[uParam0]._fU40 + 1;
     /* MAL_WRITESTRINGANDINT */ sub_54093( "Desired Threshold", iVar4 );
    for ( I = 0; I < l_U320; I++ )
    {
        if (l_U320[I]._fU40 == iVar4)
        {
            if ((NOT l_U320[I]._fU0._fU16) AND (NOT l_U320[I]._fU0._fU20))
            {
                iVar3 = I;
                 /* MAL_WRITESTRINGANDINT */ sub_54093( "DESIRED THRESHOLD FOUND", iVar3 );
            }
        }
    }
    if (iVar3 > -1)
    {
         /* P_R4_INITIALIZEENEMY */ sub_56151( iVar3 );
        if (iVar3 < (l_U320 - 1))
        {
             /* MAL_WRITESCRIPTLOG */ sub_351( "Recursion begun!" );
             /* P_R4_FINDNEXTTOUNBLOCK */ sub_55907( uParam0 );
        }
    }
    return;
}

/* P_R4_INITIALIZEENEMY */ void sub_56151(unknown uParam0)
{
     /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U320[uParam0]._fU0, l_U320[uParam0]._fU36 );
    return;
}

/* MAL_DELICIOUSWARNINGSPAM */ void sub_56769(unknown uParam0)
{
    int I;

    for ( I = 0; I < 500; I++ )
    {
         /* MAL_WRITESCRIPTLOG */ sub_351( uParam0 );
    }
    return;
}

/* P_R4_RESTARTADVANCE */ void sub_57189()
{
    int iVar2;
    int I;

    iVar2 = 0;
    for ( I = 0; I < l_U320; I++ )
    {
        if ((l_U320[I]._fU80 != 0) AND (NOT (IS_PED_DEAD( l_U447[I]._fU0 ))))
        {
            if (l_U320[I]._fU80 == 2)
            {
                 /* P_CREATE_AND_START_TIMER */ sub_44652( ref l_U320[I]._fU44, iVar2 * 500 );
                iVar2++;
            }
            else if (l_U320[I]._fU80 == 3)
            {
                 /* P_R4_RUNTOGIOVANNA */ sub_53199( I );
                l_U320[I]._fU80 = 1;
            }
        }
    }
    return;
}

/* MAL_ESA_INVINCIBLE */ void sub_57423(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_INVINCIBLE */ sub_57494( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_INVINCIBLE */ void sub_57494(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_INVINCIBLE( iParam0->_fU0, uParam1 );
    }
    return;
}

/* P_SETUP_PART2 */ void sub_57738()
{
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_SETUP_PART2 - START", 0 );
     /* P_SETDOORLOCKED */ sub_5573( ref g_U3269, 0 );
     /* TERMINATEISEQ */ sub_4289( 1182917137, 1 );
     /* MAL_TELEPORTPED */ sub_43180( g_U2777, l_U1147, l_U1150 );
     /* MAL_REGISTERPEDWITHISEQ */ sub_42413( g_U2777, 1479019014, "giovanna" );
     /* MAL_REGISTERPEDWITHISEQ */ sub_42413( l_U1099._fU0, 1479019014, "gmed" );
     /* MAL_ES_SETCANTRIGGERBULLETCAM */ sub_57896( ref l_U1099, 1 );
     /* MAL_ES_SETASONESHOTKILL */ sub_37727( l_U1099, 1 );
     /* MAL_ES_VALIDATEBULLETCAMHIT */ sub_58233( l_U1099, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
    ISEQ_START( 1479019014 );
     /* MAL_TELEPORTPED */ sub_43180( g_U2777, l_U1147, l_U1150 );
     /* MAL_ES_TELEPORTTOSPAWN */ sub_43418( l_U1099 );
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_SETUP_PART2 - END", 0 );
    return;
}

/* MAL_ES_SETCANTRIGGERBULLETCAM */ void sub_57896(int iParam0, unknown uParam1)
{
    return  /* MAL_SETCANTRIGGERBULLETCAM */ sub_57945( iParam0->_fU0, uParam1 );
}

/* MAL_SETCANTRIGGERBULLETCAM */ int sub_57945(unknown uParam0, boolean bParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (bParam1)
        {
            if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 )))
            {
                 /* MAL_WRITESCRIPTLOG */ sub_351( "MAL_SetCanTriggerBulletCam: Ped is not able to trigger BC, adding" );
                SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
                return 1;
            }
        }
        else if (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 ))
        {
             /* MAL_WRITESCRIPTLOG */ sub_351( "MAL_SetCanTriggerBulletCam turning off BC" );
            SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
            return 1;
        }
    }
    return 0;
}

/* MAL_ES_VALIDATEBULLETCAMHIT */ void sub_58233(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_VALIDATE_BULLET_CAM_HIT( uParam0._fU0, uParam44 );
    }
    return;
}

/* P_OPENDOOR */ void sub_58421(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_5242( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_5326( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* P_START_CHECKPOINT_THREAD */ void sub_58971(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* P_RS_SPEECH_MID12NCB */ void sub_59070()
{
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_RS_SPEECH_MID12NCB - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_48943( ref l_U1080 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 1, g_U2749, "PASSOS", ref l_U1080, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_49054( 0,  /* PLAYER_PED_ID */ sub_586(), "MAX", ref l_U1080, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_49322( "SCLB_MID12NCB", ref l_U1080, 8, 1 );
     /* WRITESCRIPTLOG */ sub_2580( "MF", "P_RS_SPEECH_MID12NCB - END", 0 );
    return;
}

/* MAL_ES_ISACTINTCOMPLETED */ int sub_59521(int iParam0, unknown uParam1, boolean bParam2)
{
    if (( /* MAL_GETACTINTSTATUS */ sub_59565( iParam0->_fU0, uParam1 )) == 1)
    {
        if (bParam2)
        {
             /* MAL_FINISHACTINT */ sub_59655( iParam0 + 0, uParam1 );
        }
        return 1;
    }
    return 0;
}

/* MAL_GETACTINTSTATUS */ int sub_59565(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* MAL_FINISHACTINT */ void sub_59655(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_ESA_STANDSTILL */ void sub_59956(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_STANDSTILL */ sub_42014( ref (uParam0^)[I]._fU0 );
    }
    return;
}

/* P_IMAGEFX_START_BULLETCAM */ void sub_60163(unknown uParam0, boolean bParam1)
{
    PRINTSTRING( "[CO] P_IMAGEFX_START_BULLETCAM: Starting BulletCam: " );
    PRINTSTRING( uParam0 );
    PRINTNL();
     /* CLEANCAMERA */ sub_3772( ref l_U273 );
    l_U273 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U273, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

/* F_CAM_SHAKE_WOBBLY */ string sub_60471()
{
    return "WOBBLY_SHAKE";
}

/* MAL_AIMGUNATPED */ void sub_60615(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        TASK_AIM_GUN_AT_PED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_GBL_SAVE_RS4_DEAD_BODIES */ void sub_61678(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (I == 2)
        {
             /* P_CREATEPEDSTRUCTWITHNAME */ sub_41725( ref g_U3468[0], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I]._fU0 ), (GET_PED_HEADING( (uParam0^)[I]._fU0 )) + 180.00000000, 1848160826, 7, 3, 2, 0, 0 );
        }
        if (I == 5)
        {
             /* P_CREATEPEDSTRUCTWITHNAME */ sub_41725( ref g_U3468[1], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I]._fU0 ), (GET_PED_HEADING( (uParam0^)[I]._fU0 )) + 180.00000000, 815465868, 7, 3, 2, 0, 0 );
        }
    }
    g_U3467 = 1;
    return;
}

/* P_GBL_SAVE_RS4B_DEAD_BODY */ void sub_61906(int iParam0)
{
    if (DOES_PED_EXIST( iParam0->_fU0 ))
    {
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_41725( ref g_U3499[0], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU0 ), (GET_PED_HEADING( iParam0->_fU0 )) + 180.00000000, -1583444204, 7, 3, 2, 0, 0 );
    }
    g_U3498 = 1;
    return;
}

/* P_RELEASE_RS4_ASSETS */ void sub_62229()
{
     /* MAL_WRITESCRIPTLOG */ sub_351( "P_RELEASE_RS4_ASSETS" );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_62299( 1037546172, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_62299( g_U2453, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_62299( 1049690760, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_62299( -871309849, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_62299( 123419661, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_62299( 230799837, ref g_U1108 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_63524( "LEVEL_S_CLUB_CP_06", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_63524( "LEVEL_S_CLUB_CP_09", ref g_U1447 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_63900( -1313172978, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_63900( -931023773, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_63900( 1476011597, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_63900( 1182917137, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_63900( 1479019014, ref g_U1350 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_64346( -1787162676, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_64346( 1194438308, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_64346( -168327769, ref g_U1301 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_64707( 193, ref g_U1903 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_62299(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_62443( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_62443(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_63524(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_62443( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_63900(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_62443( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_64346(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_62443( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ void sub_64707(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_62443( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a VEHICLE_RECORDING asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


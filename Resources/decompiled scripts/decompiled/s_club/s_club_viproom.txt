void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U21 = 0;
    l_U22 = 0;
    l_U23 = 1500;
    l_U34 = 0;
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 0;
    l_U43 = 0;
    l_U44 = 0;
    l_U45 = 0;
    l_U807 = -1;
    l_U808 = {64536, 64536, 64536};
    l_U847 = 0;
    l_U849 = 0;
    l_U1571 = {43.10000000, -69.11000000, -0.94000000};
    l_U1574 = {0.00000000, 0.00000000, 38.70000000};
    l_U2436 = 500;
     /* WRITESCRIPTLOG */ sub_249( "MF", "Script s_club_VIPRoom.sc is starting up...", 0 );
    l_U847 = 1;
    l_U34 = 0;
    while (IS_EXITFLAG_SET() == 0)
    {
         /* P_HANDLE_FAILURE */ sub_393();
        if (l_U849 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_11740();
        }
         /* P_LNG_HANDLE_DEBUG */ sub_83622();
        WAIT( 0 );
    }
     /* P_CLEANUP_VIP */ sub_3571();
     /* P_CLEANUP_MPM */ sub_74491();
     /* P_RELEASE_VIP_ASSETS */ sub_84064();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( ref g_U893[2]._fU0 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "Script s_club_VIPRoom.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_249(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_HANDLE_FAILURE */ void sub_393()
{
    if (g_U892 == 2)
    {
        switch (l_U849)
        {
            case 0:
            if ((g_U3360 == 1) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
            {
                 /* KILL_ANY_MISSION_SPEECH */ sub_609( 0 );
                 /* KILL_ANY_AMBIENT_SPEECH */ sub_809( 0 );
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U849 = 1;
                 /* WRITESCRIPTLOG */ sub_249( "MF", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            else if ( /* RESTARTING_CHECKPOINT */ sub_1079())
            {
                l_U849 = 3;
                 /* WRITESCRIPTLOG */ sub_249( "MF", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_1589())
            {
                l_U849 = 2;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_1649( 0 )) == 1)
            {
                l_U849 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
            {
                l_U849 = 3;
                 /* WRITESCRIPTLOG */ sub_249( "MF", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_249( "MF", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_532() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_532(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_494() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_494(), 0 );
                }
                SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_494(), 0, 0, 0, 0, 0 );
            }
            DO_SCREEN_FADE_OUT( 0 );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_3325( "CLUB_TIMEOUT_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
             /* P_CLEANUP_VIP */ sub_3571();
            if (g_U893[3]._fU36 == 1)
            {
                SET_EXITFLAG_FOR_SCRIPT( g_U893[3]._fU32 );
                 /* P_RESET_CHECKPOINT_THREAD */ sub_6549( ref g_U893[3] );
                g_U1074[3] = 0;
            }
             /* P_SAFE_UNLOAD_CUTSCENE */ sub_6639( "MID_04_NC_concat" );
            SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY_WINDY" );
            FREEZE_TIME_OF_DAY( 21, 0 );
            l_U849 = 4;
             /* WRITESCRIPTLOG */ sub_249( "MF", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_249( "MF", "eFailState = FAIL_RESTORE_PLAYER", 0 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_7057( ref l_U811,  /* PLAYER_PED_ID */ sub_494() );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( ref g_U2480, 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( ref g_U2480, 0 ), GET_HASH_KEY( ref g_U2512 ) );
            l_U849 = 5;
             /* WRITESCRIPTLOG */ sub_249( "MF", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_249( "MF", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U847 = 1;
            l_U849 = 0;
             /* WRITESCRIPTLOG */ sub_249( "MF", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_494()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_532() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_532()
{
    return GET_PLAYER_ID();
}

/* KILL_ANY_MISSION_SPEECH */ void sub_609(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* KILL_ANY_AMBIENT_SPEECH */ void sub_809(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_AMBIENT_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 3) AND (g_U1[I] >= 1))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_1079()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_494(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_532(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_532(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_494() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_494(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_1589()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_1649(int iParam0)
{
    iParam0 = 1;
    switch (l_U22)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1727( ref l_U24 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
            {
                l_U23 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_1855( ref l_U24, l_U23, 1, 1 );
             /* STARTTIMER */ sub_2003( ref l_U24 );
        }
        if ( /* ISTIMERDONE */ sub_2134( ref l_U24 ))
        {
             /* WRITESCRIPTLOG */ sub_249( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_532() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_532(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U22 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U22 = 2;
            }
            else
            {
                l_U22 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_249( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_2629();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_249( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_2629();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_1727(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_1855(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_2003(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_2134(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_2629()
{
     /* WRITESCRIPTLOG */ sub_249( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_2702( ref l_U24 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_532() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_532(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U21 = 0;
    l_U21 = l_U21;
    l_U22 = 0;
    return;
}

/* RESETTIMER */ void sub_2702(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_IMAGEFX_STOP_BULLETCAM */ void sub_3325(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_249( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
     /* CLEANCAMERA */ sub_3435( ref l_U35 );
    l_U34 = 1;
    return;
}

/* CLEANCAMERA */ void sub_3435(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* P_CLEANUP_VIP */ void sub_3571()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_CLEANUP_VIP", 0 );
    ISEQ_UNREGISTER_ENTITY( 816576289, "VIP_SHOT_CIV" );
    ISEQ_UNREGISTER_ENTITY( 816576289, "VIP_RUN_CIV_A" );
    ISEQ_UNREGISTER_ENTITY( 816576289, "VIP_RUN_CIV_B" );
    ISEQ_UNREGISTER_ENTITY( 816576289, "VIP_RUN_CIV_C" );
    ISEQ_UNREGISTER_ENTITY( 816576289, "VIP_RUN_CIV_D" );
    ISEQ_TERMINATE( 816576289 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( 816576289, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -1700261605, "CS1" );
    ISEQ_UNREGISTER_ENTITY( -1700261605, "CS2" );
    ISEQ_UNREGISTER_ENTITY( -1700261605, "GMED1" );
    ISEQ_UNREGISTER_ENTITY( -1700261605, "FLGE1" );
    ISEQ_UNREGISTER_ENTITY( -1700261605, "FLGE2" );
    ISEQ_TERMINATE( -1700261605 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( -1700261605, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -1404259228, "GMED1" );
    ISEQ_UNREGISTER_ENTITY( -1404259228, "GMED2" );
    ISEQ_UNREGISTER_ENTITY( -1404259228, "GMED3" );
    ISEQ_UNREGISTER_ENTITY( -1404259228, "GMED4" );
    ISEQ_UNREGISTER_ENTITY( -1404259228, "FLGE1" );
    ISEQ_TERMINATE( -1404259228 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( -1404259228, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -671715858, "CIV_1" );
    ISEQ_TERMINATE( -671715858 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( -671715858, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -921546714, "CIV_2" );
    ISEQ_TERMINATE( -921546714 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( -921546714, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -506138981, "Max" );
    ISEQ_TERMINATE( -506138981 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( -506138981, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -2074831912, "player" );
    ISEQ_TERMINATE( -2074831912 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( -2074831912, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -1239976099, "player" );
    ISEQ_TERMINATE( -1239976099 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( -1239976099, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( 996082158, "player" );
    ISEQ_TERMINATE( 996082158 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( 996082158, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( 277457984, "player" );
    ISEQ_TERMINATE( 277457984 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( 277457984, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -2129777527, "Civ3" );
    ISEQ_UNREGISTER_ENTITY( -2129777527, "Civ5" );
    ISEQ_TERMINATE( -2129777527 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( -2129777527, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( 1875151350, "Civ4" );
    ISEQ_UNREGISTER_ENTITY( 1875151350, "Civ5" );
    ISEQ_TERMINATE( 1875151350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( 1875151350, ref g_U1350 );
    ISEQ_UNREGISTER_ENTITY( -1746599655, "GMED2" );
    ISEQ_UNREGISTER_ENTITY( -1746599655, "GMED3" );
    ISEQ_TERMINATE( -1746599655 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( -1746599655, ref g_U1350 );
     /* CLEANPED */ sub_5618( g_U3515 );
     /* CLEANPEDARRAY */ sub_5707( ref l_U1317 );
     /* CLEANPEDARRAY */ sub_5707( ref l_U1342 );
     /* CLEANPEDARRAY */ sub_5707( ref l_U1372 );
     /* CLEANPEDARRAY */ sub_5707( ref l_U1401 );
     /* CLEANPEDARRAY */ sub_5707( ref l_U1431 );
     /* CLEANPEDARRAY */ sub_5707( ref l_U1450 );
     /* CLEANPEDARRAY */ sub_5707( ref l_U1479 );
     /* CLEANPEDARRAY */ sub_5707( ref l_U1748 );
     /* CLEANPEDARRAY */ sub_5707( ref l_U1980 );
     /* CLEANPEDARRAY */ sub_5707( ref l_U2063 );
     /* P_SIMPLE_PED_CLEAN_ARRAY */ sub_5866( ref l_U1919 );
     /* P_SIMPLE_PED_CLEAN_ARRAY */ sub_5866( ref l_U2010 );
     /* P_SIMPLE_PED_CLEAN_ARRAY */ sub_5866( ref l_U2093 );
     /* P_SIMPLE_PED_CLEAN_ARRAY */ sub_5866( ref l_U2133 );
     /* CLEANPLACEMENT */ sub_6043( l_U2238 );
     /* CLEANPLACEMENT */ sub_6043( g_U777._fU0 );
     /* CLEANPLACEMENT */ sub_6043( g_U831._fU0 );
     /* CLEANCAMERA */ sub_3435( ref g_U3339 );
    if (((CUTSCENE_NAMED_IS_LOADING( "MID_03_NC_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "MID_03_NC_concat" )) == 1))
    {
        CLEAR_NAMED_CUTSCENE( "MID_03_NC_concat" );
    }
     /* DISABLETIMER */ sub_6228( ref g_U3340 );
     /* DISABLETIMER */ sub_6228( ref g_U3350 );
     /* CLEANOBJECT */ sub_6287( l_U1570 );
    ENABLE_WALLA_ZONE( "S_CLUB_WZ_PATIO_PANIC", 0 );
    ENABLE_WALLA_ZONE( "S_CLUB_WZ_PATIO_PANIC_CS", 0 );
    ENABLE_WALLA_ZONE( "S_CLUB_WZ_COAT_CHECK_HOSTAGES", 0 );
    ENABLE_WALLA_ZONE( "S_CLUB_WZ_LOUNGE_HOSTAGES_02", 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_3784(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_3922( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_3922(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* CLEANPED */ void sub_5618(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANPEDARRAY */ void sub_5707(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_5618( (uParam0^)[I] );
    }
    return;
}

/* P_SIMPLE_PED_CLEAN_ARRAY */ void sub_5866(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_SIMPLE_PED_CLEAN */ sub_5923( ref (uParam0^)[I] );
    }
    return;
}

/* P_SIMPLE_PED_CLEAN */ void sub_5923(int iParam0)
{
    if ((DOES_OBJECT_EXIST( iParam0->_fU24 )) == 1)
    {
        DELETE_SIMPLE_PED( iParam0 + 24 );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_6043(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* DISABLETIMER */ void sub_6228(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* CLEANOBJECT */ void sub_6287(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_6549(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_SAFE_UNLOAD_CUTSCENE */ void sub_6639(unknown uParam0)
{
    while (CUTSCENE_NAMED_IS_LOADING( uParam0 ))
    {
        WAIT( 0 );
         /* WRITE_STRING */ sub_6733( "Waiting for loading to complete..." );
    }
    if (CUTSCENE_IS_LOADED( uParam0 ))
    {
         /* WRITE_STRING */ sub_6733( "Unloading cutscene..." );
        CLEAR_NAMED_CUTSCENE( uParam0 );
    }
    while (CUTSCENE_IS_LOADED( uParam0 ))
    {
        WAIT( 0 );
         /* WRITE_STRING */ sub_6733( "Waiting for cutscene to Unload..." );
    }
    return;
}

/* WRITE_STRING */ void sub_6733(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_7057(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_249( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_7276( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_8440( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_8754( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_9189( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_8754( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_9189( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_8754( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_9189( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_9505( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_9189( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_9505( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_9189( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_10077( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_10279( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_494(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_249( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_7276(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_7338( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_7338(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_8440(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_8754(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_6733( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_9189(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_9505(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_6733( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_10077(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_10279(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_7338( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_10377( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_10377(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_11740()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;

    iVar2 = l_U847;
     /* P_HANDLE_BULLET_CAM_ASSIGNMENT */ sub_11775();
     /* P_HANDLE_IMAGEFX_VIP */ sub_12338();
    switch (l_U847)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_249( "MF", "eCheckpointState = CPS_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INIT_SCRIPT_VARIABLES */ sub_12847();
         /* P_INIT_GAMEPLAY_STRUCTS */ sub_13069();
         /* SETUP_SCRIPTED_SPEECH */ sub_22014( "SCLBAUD" );
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U847 = 2;
         /* WRITESCRIPTLOG */ sub_249( "MF", "eCheckpointState = CPS_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_249( "MF", "eCheckpointState = CPS_INITIAL_REQUEST_ASSETS", 0 );
        if (g_U892 < 2)
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "MID_03_NC_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "MID_03_NC_concat" )) == 0))
            {
                PRE_STREAM_SEAMLESS_CUTSCENE( "MID_03_NC_concat" );
            }
        }
         /* P_LOAD_VIP_ASSETS */ sub_22415();
        l_U847 = 3;
         /* WRITESCRIPTLOG */ sub_249( "MF", "eCheckpointState = CPS_INITIAL_LOADING_ASSETS", 0 );
        case 3:
        if (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_33573( ref g_U1350 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_33182( ref g_U1447 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_32780( ref g_U1301 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_32383( ref g_U1108 )))))
        {
            l_U847 = 4;
             /* WRITESCRIPTLOG */ sub_249( "SP", "eCheckpointState = CPS_SETUP_START_POINT", 0 );
            break;
        }
        return;
        case 4:
         /* WRITESCRIPTLOG */ sub_249( "SP", "eCheckpointState = CPS_SETUP_START_POINT", 0 );
        if ((l_U811._fU0 == 0) AND (g_U891 == 2))
        {
            l_U847 = 5;
             /* WRITESCRIPTLOG */ sub_249( "MF", "eCheckpointState = CPS_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        }
        else
        {
            l_U847 = 7;
             /* WRITESCRIPTLOG */ sub_249( "MF", "eCheckpointState = CPS_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_249( "MF", "eCheckpointState = CPS_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        g_U1074[2] = 1;
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_34343( ref l_U811 )))
        {
             /* F_GIVEPEDWEAPON */ sub_9505(  /* PLAYER_PED_ID */ sub_494(), 68019059, 200, 0, 0 );
            l_U847 = 6;
             /* WRITESCRIPTLOG */ sub_249( "MF", "eCheckpointState = CPS_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U847 = 7;
             /* WRITESCRIPTLOG */ sub_249( "MF", "eCheckpointState = CPS_SPAWN_PEDS", 0 );
        }
        break;
        case 6:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_494(), 0, 0 ) ))
            {
                l_U847 = 7;
                 /* WRITESCRIPTLOG */ sub_249( "MF", "eCheckpointState = CPS_SPAWN_PEDS", 0 );
            }
        }
        break;
        case 7:
        if (( /* F_VIP_HANDLE_PED_SPAWNING */ sub_34809()) == 1)
        {
            l_U847 = 8;
        }
        break;
        case 8:
        if (g_U1074[2])
        {
            if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
            {
                l_U847 = 9;
                 /* WRITESCRIPTLOG */ sub_249( "MF", "eCheckpointState = CPS_MID_03", 0 );
            }
        }
        break;
        case 9:
        if (l_U848)
        {
             /* P_CREATE_PLACEMENTS */ sub_37071();
             /* P_SETUP_GAMEPLAY */ sub_38796();
             /* P_VIP_SETUP_FIRST_CS */ sub_39565();
             /* P_VIP_SETUP_REINFORCEMENTS_WAVE_1 */ sub_41703();
             /* P_VIP_SETUP_REINFORCEMENTS_WAVE_2 */ sub_42349();
             /* P_VIP_SETUP_REINFORCEMENTS_WAVE_3 */ sub_43176();
             /* P_VIP_VIG_03_A_SETUP_CIVS */ sub_43740();
             /* P_VIP_SETUP_EXTRA_CS */ sub_45191();
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_49960( ref l_U2400, "MID_03_NC_concat", 45590, 45640, 46680, 46933, 47012, 48744, 250, 0 );
            l_U2400._fU64 = 0;
            l_U2400._fU104 = 0;
            if (g_U892 < 2)
            {
                PLAY_IMAGEFX( "GAMMA_SATURATION_COLOR_ZOOM", 4, 1 );
                 /* P_CREATE_AND_START_TIMER */ sub_50561( ref l_U1253, 275 );
                l_U2400._fU4 = 2;
                l_U2400._fU104 = 0;
            }
            else
            {
                l_U1253._fU16 = 1;
                l_U2400._fU4 = 7;
            }
        }
         /* ISTIMERDONE */ sub_2134( ref l_U1253 );
        if (l_U1253._fU16)
        {
            if (( /* CUTSYS_HANDLECUTSCENE */ sub_50689( ref l_U2400 )) == 1)
            {
                l_U847 = 10;
                 /* WRITESCRIPTLOG */ sub_249( "MF", "eCheckpointState = CPS_VIP_ROOM_COMBAT", 0 );
            }
        }
        break;
        case 10:
        if (l_U848 == 1)
        {
            if (NOT l_U811._fU0)
            {
                g_U892 = 2;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_53367( ref l_U811, 2,  /* PLAYER_PED_ID */ sub_494(), g_U2216[2], g_U2331[2], g_U2370[2], g_U2409[2], 1 );
            }
            l_U1753 = 0;
            l_U1754 = 0;
            l_U1755 = 0;
            l_U1897 = 0;
             /* P_VIP_VIG_03_A_SETUP */ sub_57948();
             /* P_VIP_VIG_03_B_SETUP */ sub_58229();
            SET_PLAYER_FORCED_AIM_MAINTAIN_DIRECTION(  /* PLAYER_ID */ sub_532(), 0, 0 );
             /* P_STREAMREQ_ISEQ_INSERT */ sub_27381( -2074831912, ref g_U1350 );
             /* P_STREAMREQ_ISEQ_INSERT */ sub_27381( -1239976099, ref g_U1350 );
             /* P_STREAMREQ_ISEQ_INSERT */ sub_27381( 996082158, ref g_U1350 );
             /* P_STREAMREQ_ISEQ_INSERT */ sub_27381( 277457984, ref g_U1350 );
        }
         /* P_DF_HANDLE_CIV_AIMED_AT_FLINCHING */ sub_58577();
        if (NOT l_U1435)
        {
            if (NOT (IS_PED_DEAD( l_U1450[0] )))
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( l_U1450[0], 47 )) == 3)
                {
                     /* WRITESCRIPTLOG */ sub_249( "MF", "Creating vignette corpses and performing cleanup", 0 );
                    PED_FINISH_ACTION_INTENTION( l_U1450[0], 47 );
                    SET_PED_CORPSE_FROM_ANIM( l_U1450[0], "LEVEL_S_CLUB_CP_02", "L_CLUB_12G_CMED_TRIP_M3", 1.00000000, 1 );
                    ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U1450[0] ), 1.00000000, 4.00000000, 60.00000000 );
                    l_U1435 = 1;
                }
            }
        }
        if (NOT l_U2239)
        {
            if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U1321 )))
            {
                 /* P_VIP_EXTRA_CS_ATTACK */ sub_59712();
                 /* RESETTIMER */ sub_2702( ref g_U3340 );
                 /* RESETTIMER */ sub_2702( ref g_U3350 );
                l_U2239 = 1;
            }
        }
        if (NOT l_U850._fU64)
        {
            if ( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1317, 1 ))
            {
                if ( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1342, 0 ))
                {
                    if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1727( ref l_U2250 )))
                    {
                         /* P_CREATE_AND_START_TIMER */ sub_50561( ref l_U2250, 1500 );
                    }
                }
            }
        }
        if ( /* ISTIMERDONE */ sub_2134( ref l_U2250 ))
        {
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_60332( "SCLB_MADDA", ref l_U2240 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_61643( ref l_U934, 0 ))
        {
            if ((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_12006( ref l_U1342 )) == 0) AND (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_12006( ref l_U1317 )) == 0))
            {
                 /* P_VIP_REINFORCEMENTS_WAVE1_ATTACK */ sub_61806();
                 /* RESETTIMER */ sub_2702( ref g_U3340 );
                 /* RESETTIMER */ sub_2702( ref g_U3350 );
                if ( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1342, 0 ))
                {
                    if ((l_U2250._fU16) AND (TIME_SINCE_LAST_MONOLOGUE() > 1000))
                    {
                         /* P_SPEECH_PLAY_MONOLOGUE */ sub_60332( "SCLB_MVOUS", ref l_U2259 );
                    }
                }
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_249( "MF", "Cleaning: piVIP_REINFORCEMENT_CS_WAVE_1", 0 );
                 /* CLEANPEDARRAY */ sub_5707( ref l_U1372 );
            }
            SET_WEATHER_TYPE_PERSIST( "EXTRASUNNY" );
            SET_WEATHER_TRANSITION_SPEED( 1.00000000 );
            SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
        }
        if ((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_12006( ref l_U1372 )) == 0) AND (( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1342, 1 )) AND ( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1317, 1 ))))
        {
            if (l_U2310._fU16)
            {
                if (NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_494() )))
                {
                    if (NOT IS_PLAYER_SHOOTDODGING())
                    {
                        if (TIME_SINCE_LAST_MONOLOGUE() > 1000)
                        {
                            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_61643( ref l_U2279, 0 ))
                            {
                                 /* WRITESCRIPTLOG */ sub_249( "MF", "Playing: SCLB_MGBTB", 0 );
                                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_60332( "SCLB_MGBTB", ref l_U2269 );
                            }
                        }
                    }
                }
            }
        }
        if ((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_12006( ref l_U1372 )) == 0) AND (( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1342, 1 )) AND ( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1317, 1 ))))
        {
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_61643( ref l_U2319, 0 ))
            {
                 /* P_CREATE_AND_START_TIMER */ sub_50561( ref l_U2310, 40000 );
            }
        }
        if (TIME_SINCE_LAST_MONOLOGUE() > 1000)
        {
            if ( /* ISTIMERDONE */ sub_2134( ref l_U2310 ))
            {
                 /* WRITESCRIPTLOG */ sub_249( "MF", "Playing: SCLB_MADVP", 0 );
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_60332( "SCLB_MADVP", ref l_U2300 );
                 /* P_CREATE_AND_START_TIMER */ sub_50561( ref g_U3340, 30000 );
            }
        }
        if (TIME_SINCE_LAST_MONOLOGUE() > 1000)
        {
            if (l_U2310._fU16)
            {
                if (NOT IS_PLAYER_SHOOTDODGING())
                {
                    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_61643( ref l_U2350, 0 ))
                    {
                         /* WRITESCRIPTLOG */ sub_249( "MF", "Playing: SCLB_MGBDF", 0 );
                         /* P_SPEECH_PLAY_MONOLOGUE */ sub_60332( "SCLB_MGBDF", ref l_U2340 );
                    }
                }
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_61643( ref l_U850, 0 ))
        {
             /* P_VIP_FIRST_CS_REMOVE_TETHERS */ sub_62955();
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_61643( ref l_U955, 0 ))
        {
             /* P_VIP_REINFORCEMENTS_WAVE_2_ATTACK */ sub_63447();
            ENABLE_WALLA_ZONE( "S_CLUB_WZ_PATIO_PANIC", 1 );
            ENABLE_WALLA_ZONE( "S_CLUB_WZ_LOUNGE_HOSTAGES_02", 1 );
             /* RESETTIMER */ sub_2702( ref g_U3340 );
             /* RESETTIMER */ sub_2702( ref g_U3350 );
             /* RESETTIMER */ sub_2702( ref l_U2310 );
        }
        if (NOT l_U1753)
        {
            if (( /* F_ISPEDINTRIGGERBOX */ sub_12451(  /* PLAYER_PED_ID */ sub_494(), l_U976 )) || ( /* F_VIP_IS_VIG_03_A_BODY_SEARCHER_ON_SCREEN */ sub_64024()))
            {
                ENABLE_WALLA_ZONE( "S_CLUB_WZ_PATIO_PANIC_CS", 1 );
                 /* P_VIP_VIG_03_A_BODY_SEARCHER_START */ sub_64190();
                l_U1753 = 1;
            }
        }
        if (NOT l_U1754)
        {
            if (( /* F_ISPEDINTRIGGERBOX */ sub_12451(  /* PLAYER_PED_ID */ sub_494(), l_U976 )) || ( /* F_VIP_ARE_VIG_03_A_CIVS_ON_SCREEN */ sub_64391()))
            {
                 /* P_VIP_VIG_03_A_CIVS_START */ sub_64589();
                l_U1754 = 1;
            }
        }
        if (l_U1754)
        {
             /* P_VIP_VIG_03_A_HANDLE_CLEAN_PEDS */ sub_64809();
        }
        if (l_U1753)
        {
            if (NOT l_U1755)
            {
                if (( /* MAL_GETACTINTSTATUS */ sub_58753( l_U1401[1], 48 )) == 3)
                {
                     /* MAL_REMOVEALLGUNSFROMPED */ sub_65155( ref l_U1401[1] );
                     /* MAL_GIVEPEDWEAPON */ sub_66045( l_U1401[1], 406496141, 25000, 0, 0 );
                    if (NOT (IS_PED_DEAD( l_U1401[1] )))
                    {
                        SET_PED_AS_ONE_SHOT_KILL( l_U1401[1], 0 );
                    }
                    l_U1755 = 1;
                }
            }
        }
        if (NOT l_U1897)
        {
            if (( /* F_ISPEDINTRIGGERBOX */ sub_12451(  /* PLAYER_PED_ID */ sub_494(), l_U976 )) || ( /* F_VIP_ARE_VIG_03_B_PEDS_ON_SCREEN */ sub_66293()))
            {
                ENABLE_WALLA_ZONE( "S_CLUB_WZ_COAT_CHECK_HOSTAGES", 1 );
                 /* P_VIP_VIG_03_B_START */ sub_66480();
                l_U1897 = 1;
            }
        }
        if (l_U1897 == 1)
        {
            if ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_34860( ref l_U1980, ref l_U1983, -1, 1, 1, 0, 1 ))
            {
                 /* P_VIP_VIG_03_C_A_START */ sub_67563();
            }
        }
        if (l_U1897 == 1)
        {
            if ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_34860( ref l_U2063, ref l_U2066, -1, 1, 1, 0, 1 ))
            {
                 /* P_VIP_VIG_03_C_B_START */ sub_68031();
            }
        }
        if (NOT l_U1434)
        {
            if (NOT ( /* F_ISPEDINTRIGGERBOX */ sub_12451(  /* PLAYER_PED_ID */ sub_494(), l_U1959 )))
            {
                if (l_U1897)
                {
                    if (NOT (ISEQ_QUERY_STATE( -1404259228, 3 )))
                    {
                        ENABLE_WALLA_ZONE( "S_CLUB_WZ_COAT_CHECK_HOSTAGES", 0 );
                         /* P_VIP_VIG_03_B_PT_2_SETUP */ sub_68465();
                         /* P_VIP_REINFORCEMENT_WAVE_3_ATTACK */ sub_68787();
                        l_U1434 = 1;
                    }
                }
            }
        }
        if ( /* F_ISPEDINTRIGGERBOX */ sub_12451(  /* PLAYER_PED_ID */ sub_494(), l_U1959 ))
        {
             /* P_VIP_HANDLE_REINFORCEMENT_WAVE_3_EMERGENCY_CLEANUP */ sub_69332();
        }
        if (NOT l_U1569)
        {
            if ( /* F_VIP_CAN_ENABLE_EXPLORATION_ITEMS */ sub_69576())
            {
                if (NOT ( /* F_IS_POI_AVAILABLE */ sub_69742( ref l_U1483 )))
                {
                     /* P_SET_POI_AVAILABLE */ sub_21453( ref l_U1483, 1 );
                }
                if (NOT ( /* F_IS_POI_AVAILABLE */ sub_69742( ref l_U1578 )))
                {
                     /* P_SET_POI_AVAILABLE */ sub_21453( ref l_U1578, 1 );
                }
            }
        }
        else if (NOT ( /* F_VIP_CAN_ENABLE_EXPLORATION_ITEMS */ sub_69576()))
        {
            if ( /* F_IS_POI_AVAILABLE */ sub_69742( ref l_U1483 ))
            {
                 /* P_SET_POI_AVAILABLE */ sub_21453( ref l_U1483, 0 );
            }
            if ( /* F_IS_POI_AVAILABLE */ sub_69742( ref l_U1578 ))
            {
                 /* P_SET_POI_AVAILABLE */ sub_21453( ref l_U1578, 0 );
            }
        }
        if ( /* F_HANDLE_POI */ sub_69897( ref l_U1483 ))
        {
            if (NOT g_U1102)
            {
                l_U1694 = 1;
                g_U1102 = 1;
            }
             /* NIS_PRE_SETUP */ sub_51915( 1, 0, 0, 1 );
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_15_F_CAM", 1, 37.93000000, -61.12000000, -0.32000000, 0.00000000, 0, 0 );
            FOUND_EXPLORATION_ITEM( "sclb_SoccerBody" );
             /* TELEPORTPED */ sub_48406(  /* PLAYER_PED_ID */ sub_494(), 37.78000000, -62.18000000, -2.00000000, 320.00000000 );
            if (NOT l_U1482)
            {
                 /* KILL_ANY_MISSION_SPEECH */ sub_609( 0 );
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_60332( "SCLB_MSCDB", ref uVar3 );
                l_U1482 = 1;
            }
            l_U1569 = 1;
        }
        if ( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_72344( ref l_U1483 ))
        {
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_60332( "EXPLORE_ITEM", ref l_U2390 );
        }
        if ( /* F_HANDLE_POI */ sub_69897( ref l_U1578 ))
        {
            g_U1102 = 1;
             /* NIS_PRE_SETUP */ sub_51915( 1, 0, 0, 1 );
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_25_F_CAM", 1, 42.69000000, -69.44000000, -0.40000000, -53.20000000, 0, 0 );
            FOUND_EXPLORATION_ITEM( "sclb_ClubFlyer" );
             /* P_TELEPORT_PLAYER */ sub_72752( 41.91743000, -69.88730000, -2.06253100, -35.33000000, 25.40000000, -4.60000000 );
            if (NOT l_U1577)
            {
                 /* KILL_ANY_MISSION_SPEECH */ sub_609( 0 );
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_60332( "SCLB_MSPCF", ref uVar13 );
                l_U1577 = 1;
            }
            l_U1569 = 1;
        }
        if ( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_72344( ref l_U1578 ))
        {
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_60332( "EXPLORE_ITEM", ref l_U2390 );
        }
        if (l_U1569)
        {
            if (NOT IS_ANIMATED_CAMERA_PLAYING())
            {
                 /* NIS_POST_SETUP */ sub_52839( 1, 1 );
                 /* P_ENABLE_POI */ sub_70896( ref l_U1578, 1 );
                 /* P_ENABLE_POI */ sub_70896( ref l_U1483, 1 );
                l_U1569 = 0;
                if (l_U1694 == 1)
                {
                    g_U1102 = 0;
                }
                if (NOT g_U1102)
                {
                     /* P_CREATE_AND_START_TIMER */ sub_50561( ref g_U3350, 15000 );
                     /* P_CREATE_AND_START_TIMER */ sub_50561( ref g_U3340, 55000 );
                }
            }
        }
        if ( /* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ sub_73039())
        {
            if ( /* F_VIP_CAN_ENABLE_EXPLORATION_ITEMS */ sub_69576())
            {
                if (TIME_SINCE_LAST_MONOLOGUE() > 2000)
                {
                    if ((l_U2310._fU16) AND (NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_494() ))))
                    {
                         /* WRITESCRIPTLOG */ sub_249( "MF", "Playing Speech: SSTD_MFSP", 0 );
                         /* P_SPEECH_PLAY_MONOLOGUE */ sub_60332( ref g_U3540, ref uVar23 );
                    }
                     /* RESETTIMER */ sub_2702( ref g_U3529 );
                }
            }
        }
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_61643( ref l_U976, 0 )) == 1)
        {
             /* P_SETDOORLATCH */ sub_39301( ref g_U3255, 0 );
             /* P_SETDOORLATCH */ sub_39301( ref g_U3262, 0 );
             /* P_SETDOORAFFECTEDBYBULLETS */ sub_39454( ref g_U3255, 0 );
             /* P_SETDOORAFFECTEDBYBULLETS */ sub_39454( ref g_U3262, 0 );
             /* P_CLOSEDOOR */ sub_73425( ref g_U3255, 0 );
             /* P_CLOSEDOOR */ sub_73425( ref g_U3262, 0 );
        }
        if (NOT l_U1244)
        {
            if (l_U976._fU64)
            {
                if ( /* F_ISPLAYERINTRIGGERREGION */ sub_73604( ref l_U1060, 0 ))
                {
                    if ((NOT (IS_SPHERE_VISIBLE( 46.71000000, -49.35000000, 1.69000000, 1.50000000, 0 ))) || (((( /* F_GETDOOROPENRATIO */ sub_73799( ref g_U3262 )) > (0.01000000 * -1)) AND (( /* F_GETDOOROPENRATIO */ sub_73799( ref g_U3262 )) < 0.01000000)) AND ((( /* F_GETDOOROPENRATIO */ sub_73799( ref g_U3255 )) > (0.01000000 * -1)) AND (( /* F_GETDOOROPENRATIO */ sub_73799( ref g_U3255 )) < 0.01000000))))
                    {
                         /* P_SETDOORFORCECLOSE */ sub_73993( ref g_U3255, 1, 1 );
                         /* P_SETDOORFORCECLOSE */ sub_73993( ref g_U3262, 1, 1 );
                         /* P_SETDOORLOCKED */ sub_38867( ref g_U3255, 1 );
                         /* P_SETDOORLOCKED */ sub_38867( ref g_U3262, 1 );
                         /* TERMINATEISEQ */ sub_74113( -671715858, 1 );
                         /* TERMINATEISEQ */ sub_74113( -921546714, 1 );
                         /* UNLOADANIMDICT */ sub_74446( "LEVEL_S_CLUB_CP_01" );
                         /* P_CLEANUP_MPM */ sub_74491();
                         /* CLEANPEDARRAY */ sub_5707( ref l_U1450 );
                         /* CLEANPEDARRAY */ sub_5707( ref l_U1479 );
                         /* CLEANPEDARRAY */ sub_5707( ref l_U1317 );
                         /* CLEANPEDARRAY */ sub_5707( ref l_U1342 );
                         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74827( g_U2478, ref g_U1108 );
                         /* P_START_CHECKPOINT_THREAD */ sub_75282( ref g_U893[3] );
                        l_U1244 = 1;
                    }
                }
            }
        }
        if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_12381( ref l_U913,  /* PLAYER_PED_ID */ sub_494(), 0 ))
        {
            BULLET_CAMERA_PRELOAD_TEXT_BINK( "MISS_DEATH_FALL_01A", 1 );
            g_U3339 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            SETUP_BULLET_CAMERA_SCENE( g_U3339, "MISS_DEATH_FALL_01A", 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
            SET_CAM_ACTIVE( g_U3339, 1 );
            g_U3360 = 1;
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
            {
                SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_494(), 1, 1, 1, 1, 1 );
            }
        }
        if (TIME_SINCE_LAST_MONOLOGUE() > 1500)
        {
            if (( /* HASTIMERBEENACTIVATED */ sub_1727( ref g_U3340 )) == 0)
            {
                if ((NOT l_U2239) AND ( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1317, 0 )))
                {
                     /* WRITESCRIPTLOG */ sub_249( "MF", "Starting mission failed timer...", 0 );
                     /* CREATETIMER */ sub_1855( ref g_U3350, g_U3359, 1, 0 );
                     /* STARTTIMER */ sub_2003( ref g_U3350 );
                     /* CREATETIMER */ sub_1855( ref g_U3340, g_U3349, 1, 0 );
                     /* STARTTIMER */ sub_2003( ref g_U3340 );
                }
                if ((NOT l_U934._fU64) AND (( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1342, 0 )) AND ( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1317, 0 ))))
                {
                     /* WRITESCRIPTLOG */ sub_249( "MF", "Starting mission failed timer...", 0 );
                     /* CREATETIMER */ sub_1855( ref g_U3350, g_U3359, 1, 0 );
                     /* STARTTIMER */ sub_2003( ref g_U3350 );
                     /* CREATETIMER */ sub_1855( ref g_U3340, g_U3349, 1, 0 );
                     /* STARTTIMER */ sub_2003( ref g_U3340 );
                }
                if ((NOT l_U955._fU64) AND ((l_U934._fU64) AND ((IS_PED_DEAD( l_U1372[0] )) AND (( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1342, 0 )) AND ( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1317, 0 ))))))
                {
                     /* WRITESCRIPTLOG */ sub_249( "MF", "Starting mission failed timer...", 0 );
                     /* CREATETIMER */ sub_1855( ref g_U3350, g_U3359, 1, 0 );
                     /* STARTTIMER */ sub_2003( ref g_U3350 );
                     /* CREATETIMER */ sub_1855( ref g_U3340, g_U3349, 1, 0 );
                     /* STARTTIMER */ sub_2003( ref g_U3340 );
                }
                if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (( /* F_VIP_GET_NUM_LIVING_COMBAT_PEDS */ sub_11957()) < 1))
                {
                     /* WRITESCRIPTLOG */ sub_249( "MF", "Starting mission failed timer...", 0 );
                     /* CREATETIMER */ sub_1855( ref g_U3350, g_U3359, 1, 0 );
                     /* STARTTIMER */ sub_2003( ref g_U3350 );
                     /* CREATETIMER */ sub_1855( ref g_U3340, g_U3349, 1, 0 );
                     /* STARTTIMER */ sub_2003( ref g_U3340 );
                }
            }
            if (g_U1102 == 0)
            {
                if (NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_494() )))
                {
                    if (( /* ISTIMERDONE */ sub_2134( ref g_U3350 )) == 1)
                    {
                         /* WRITESCRIPTLOG */ sub_249( "MF", "Playing warning monologue...", 0 );
                         /* P_SPEECH_PLAY_MONOLOGUE */ sub_60332( "SCLB_MTLTG", ref g_U3361 );
                    }
                }
                if (( /* ISTIMERDONE */ sub_2134( ref g_U3340 )) == 1)
                {
                    if (( /* F_WHERE_DID_MAX_FAIL */ sub_76300()) == 1)
                    {
                        l_U37 = 2;
                        l_U847 = 11;
                         /* WRITESCRIPTLOG */ sub_249( "SP", "eCheckpointState = CPS_HANDLE_MID_02_FAIL2", 0 );
                    }
                    else if (( /* F_WHERE_DID_MAX_FAIL */ sub_76300()) == 2)
                    {
                        l_U38 = 2;
                        l_U847 = 12;
                         /* WRITESCRIPTLOG */ sub_249( "SP", "eCheckpointState = CPS_HANDLE_MID_02_FAIL3", 0 );
                    }
                    else if (( /* F_WHERE_DID_MAX_FAIL */ sub_76300()) == 3)
                    {
                        l_U41 = 2;
                        l_U847 = 13;
                         /* WRITESCRIPTLOG */ sub_249( "SP", "eCheckpointState = CPS_HANDLE_MID_02_FAIL6", 0 );
                    }
                    else if (( /* F_WHERE_DID_MAX_FAIL */ sub_76300()) == 4)
                    {
                        l_U44 = 2;
                        l_U847 = 14;
                         /* WRITESCRIPTLOG */ sub_249( "SP", "eCheckpointState = CPS_HANDLE_MID_02_FAIL9", 0 );
                    }
                    else
                    {
                         /* WRITESCRIPTLOG */ sub_249( "SP", "Player is outside of any fail trigger... defaulting...", 0 );
                        l_U37 = 2;
                        l_U847 = 11;
                         /* WRITESCRIPTLOG */ sub_249( "SP", "eCheckpointState = CPS_HANDLE_MID_02_FAIL2", 0 );
                    };;;;
                    return;
                }
            }
        }
        if ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1431, 1 )) AND ( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1401, 1 ))))
        {
            if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1727( ref l_U2381 )))
            {
                 /* P_CREATE_AND_START_TIMER */ sub_50561( ref l_U2381, 20000 );
            }
        }
        if ( /* HASTIMERBEENACTIVATED */ sub_1727( ref l_U2381 ))
        {
            if (IS_SPHERE_VISIBLE( 42.89000000, -22.55000000, 1.43000000, 4.00000000, 1 ))
            {
                if ( /* ISTIMERDONE */ sub_2134( ref l_U2381 ))
                {
                     /* WRITESCRIPTLOG */ sub_249( "MF", "Playing: SCLB_MADOP", 0 );
                     /* P_SPEECH_PLAY_MONOLOGUE */ sub_60332( "SCLB_MADOP", ref l_U2371 );
                }
            }
        }
        if (NOT ( /* F_VIP_ARE_CS_IN_END_TRIGGER */ sub_77448()))
        {
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_61643( ref l_U871, 1 ))
            {
                l_U847 = 15;
                 /* WRITESCRIPTLOG */ sub_249( "SP", "eCheckpointState = CPS_WAIT_FOR_BULLET_CAM", 0 );
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_61643( ref l_U892, 1 ))
        {
            l_U847 = 15;
             /* WRITESCRIPTLOG */ sub_249( "SP", "eCheckpointState = CPS_WAIT_FOR_BULLET_CAM", 0 );
        }
        break;
        case 11:
        if (( /* F_HANDLE_MID_02_FAIL2 */ sub_77774()) == 1)
        {
            l_U847 = 0;
             /* WRITESCRIPTLOG */ sub_249( "SP", "eCheckpointState = CPS_IDLE", 0 );
            g_U3360 = 1;
        }
        break;
        case 12:
        if (( /* F_HANDLE_MID_02_FAIL3 */ sub_79483()) == 1)
        {
            l_U847 = 0;
             /* WRITESCRIPTLOG */ sub_249( "SP", "eCheckpointState = CPS_IDLE", 0 );
            g_U3360 = 1;
        }
        break;
        case 13:
        if (( /* F_HANDLE_MID_02_FAIL6 */ sub_80570()) == 1)
        {
            l_U847 = 0;
             /* WRITESCRIPTLOG */ sub_249( "SP", "eCheckpointState = CPS_IDLE", 0 );
            g_U3360 = 1;
        }
        break;
        case 14:
        if (( /* F_HANDLE_MID_02_FAIL9 */ sub_81647()) == 1)
        {
            l_U847 = 0;
             /* WRITESCRIPTLOG */ sub_249( "SP", "eCheckpointState = CPS_IDLE", 0 );
            g_U3360 = 1;
        }
        break;
        case 15:
        if (l_U848 == 1)
        {
             /* WRITESCRIPTLOG */ sub_249( "SA", "Preventing bullet cam to gameplay...", 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            g_U1074[3] = 1;
            l_U847 = 16;
             /* WRITESCRIPTLOG */ sub_249( "SP", "eCheckpointState = CPS_WAIT_TO_END_SCRIPT", 0 );
        }
        break;
        case 16:
        if (l_U848 == 1)
        {
             /* P_SETDOORFORCECLOSE */ sub_73993( ref g_U3115, 1, 1 );
             /* P_SETDOORLOCKED */ sub_38867( ref g_U3115, 1 );
             /* P_SIMPLE_PED_CLEAN_ARRAY */ sub_5866( ref l_U2010 );
             /* P_SIMPLE_PED_CLEAN_ARRAY */ sub_5866( ref l_U2093 );
             /* CLEANPED */ sub_5618( l_U1980[1] );
             /* P_VIP_CLEANUP_LIVING_PEDS */ sub_82946();
        }
        if (g_U1104 == 1)
        {
            l_U847 = 17;
             /* WRITESCRIPTLOG */ sub_249( "SP", "eCheckpointState = CPS_FINISHED", 0 );
        }
        break;
        case 17:
         /* WRITESCRIPTLOG */ sub_249( "MF", "eCheckpointState = CPS_FINISHED", 0 );
        g_U1090 = 1;
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U847 = 0;
         /* WRITESCRIPTLOG */ sub_249( "MF", "eCheckpointState = CPS_IDLE", 0 );
        break;
    }
    if (l_U847 != iVar2)
    {
        l_U848 = 1;
    }
    else
    {
        l_U848 = 0;
    }
    return;
}

/* P_HANDLE_BULLET_CAM_ASSIGNMENT */ void sub_11775()
{
    if (( /* F_HAS_PED_ARRAY_SPAWNED */ sub_11823( ref l_U1431, 0 )) AND ( /* F_HAS_PED_ARRAY_SPAWNED */ sub_11823( ref l_U1401, 0 )))
    {
        if (( /* F_VIP_GET_NUM_LIVING_COMBAT_PEDS */ sub_11957()) == 1)
        {
             /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_12152( ref l_U1401 );
             /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_12152( ref l_U1431 );
        }
    }
    return;
}

/* F_HAS_PED_ARRAY_SPAWNED */ void sub_11823(unknown uParam0, boolean bParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) == 1)
        {
            Result = 1;
            if (NOT bParam1)
            {
                return 1;
            }
        }
        else
        {
            Result = 0;
        }
    }
    return Result;
}

/* F_VIP_GET_NUM_LIVING_COMBAT_PEDS */ void sub_11957()
{
    int Result;

    Result = ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_12006( ref l_U1401 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_12006( ref l_U1431 ));
    return Result;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_12006(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_12152(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_12006( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* P_HANDLE_IMAGEFX_VIP */ void sub_12338()
{
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_12381( ref l_U1018,  /* PLAYER_PED_ID */ sub_494(), 0 ))
    {
        PLAY_IMAGEFX( "GAMMA_SATURATION_COLOR_ZOOM_X", 4, 1 );
    }
    return;
}

/* F_ISPEDINTRIGGERBOXFIRSTTIME */ void sub_12381(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 =  /* F_ISPEDINTRIGGERBOX */ sub_12451( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

/* F_ISPEDINTRIGGERBOX */ int sub_12451(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_INIT_SCRIPT_VARIABLES */ void sub_12847()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U2239 = 0;
    l_U1435 = 0;
    l_U2437 = 0;
    l_U848 = 1;
    g_U1104 = 0;
    l_U1244 = 0;
    g_U3360 = 0;
    l_U1434 = 0;
    l_U1569 = 0;
     /* CREATETIMER */ sub_1855( ref l_U2310, 1500, 1, 0 );
     /* CREATETIMER */ sub_1855( ref l_U2250, 1500, 1, 0 );
     /* CREATETIMER */ sub_1855( ref l_U2381, 20000, 1, 0 );
    l_U1694 = 0;
    if (g_U892 == 2)
    {
         /* RESETTIMER */ sub_2702( ref g_U3340 );
         /* RESETTIMER */ sub_2702( ref g_U3350 );
    }
     /* RESETTIMER */ sub_2702( ref l_U1253 );
    return;
}

/* P_INIT_GAMEPLAY_STRUCTS */ void sub_13069()
{
    unknown[2] uVar2;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;

     /* WRITESCRIPTLOG */ sub_249( "MF", "P_INIT_GAMEPLAY_STRUCTS", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1277[0], 41.52000000, -58.52000000, -1.99000000, 33.00000000, 1325983343, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1277[1], 40.88000000, -61.48000000, -1.99000000, 33.00000000, -1923201019, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1277[2], 33.34000000, -70.19000000, -4.04000000, 32.37000000, 1133174296, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1344[0], 41.16000000, -54.51000000, -0.45000000, 174.00000000, -406575828, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1358[0], 44.48061000, -53.65999000, -0.23348600, 168.43000000, 1382010956, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1374[0], 40.01834000, -44.42652000, 0.79936000, 90.00000000, -1217888826, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1374[1], 46.94117000, -33.96003000, 0.84497000, 203.63370000, -250904585, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1436[0], 32.42000000, -69.41000000, -4.62000000, 37.50000000, 752164575, 4, 1, 1, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1695[0], 39.77162000, -39.02316000, 0.80214000, 0.00000000, 1303366841, 4, 1, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1695[1], 41.59354000, -38.74335000, 0.79880000, 0.00000000, -1107837059, 5, 2, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1695[2], 40.45366000, -40.59378000, 0.79909000, 0.00000000, -1246391876, 5, 2, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1695[3], 46.44000000, -34.92000000, -0.10000000, 240.00000000, -354470668, 4, 1, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1452[0], 43.79000000, -64.83000000, -2.02500000, 153.00000000, -1119592564, 4, 1, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1452[1], 38.04000000, -57.26000000, -2.00000000, 200.00000000, 43383076, 5, 2, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1404[0], 38.65926000, -25.42413000, -0.19248000, 135.00000000, -403780099, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1404[1], 40.64875000, -24.52139000, -0.19248000, 0.00000000, 2077907202, 7, 3, 2, 0, 0 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U1919[0], -354470668, 43.68800000, -25.41600000, 0.80600000, 93.05700000, "level_s_club_CP_02", "VIG_03_NC_GMED", 0.10000000, 0, 1 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U1919[1], -643577458, 45.31300000, -25.63100000, 0.80600000, 125.49200000, "level_s_club_CP_02", "VIG_03_NC_GMED3", 0.10000000, 0, 1 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U1919[2], -161572873, 45.47700000, -24.71600000, 0.80600000, 125.49200000, "level_s_club_CP_02", "VIG_03_NC_FLGE_HH", 0.10000000, 0, 1 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U2010[0], 1803259048, 27.08300000, -28.65000000, 1.83800000, 0.00000000, "level_s_club_CP_02", "VIG_03B_NC_CIV1", 0, 0, 1 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U2010[1], -1557766485, 26.65600000, -27.55900000, 1.83600000, -90.00000000, "level_s_club_CP_02", "VIG_03B_NC_CIV2", 0, 0, 1 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U2010[2], 549792626, 29.22000000, -24.22000000, 1.81000000, -135.00000000, "level_s_club_CP_02", "VIG_03B_NC_CIV4", 0, 0, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1983[0], 28.77000000, -24.24000000, 0.83000000, -135.00000000, -327748143, 4, 1, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U1983[1], 29.34200000, -28.03800000, 0.81000000, 45.00000000, -1689330283, 4, 1, 0, 0, 0 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U2093[0], -105887005, 38.31000000, -27.17000000, 0.82000000, 0.00000000, "level_s_club_CP_02", "VIG_03B_NC_B_CIV1", 0, 0, 1 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U2093[1], -1601962098, 36.29000000, -27.50000000, 0.82000000, 0.00000000, "level_s_club_CP_02", "VIG_03B_NC_B_CIV2", 0, 0, 1 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U2093[2], -2094027208, 47.09000000, -24.28000000, 0.82000000, 0.00000000, "level_s_club_CP_02", "VIG_03B_NC_B_CIV4", 0, 0, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U2066[0], 46.46000000, -24.24000000, -0.17000000, 0.00000000, -643577458, 5, 2, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref l_U2066[1], 37.23000000, -27.57000000, -0.17000000, 0.00000000, 363747731, 4, 1, 0, 0, 0 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U2133[0], 1628984238, 41.96000000, -22.93000000, 0.82000000, 45.00000000, "DAM_DEAD", "MED_DEAD_POSE_FRONT_02", 0, 0, 1 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U2133[1], -1245682204, 48.57000000, -25.32000000, 0.82000000, 195.00000000, "level_s_club_CP_01_02", "VIG_01C_NC_CIV1_IDLE1", 0, 1, 0 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U2133[2], 286906605, 41.05000000, -23.70000000, 0.82000000, 45.00000000, "DAM_DEAD", "MED_DEAD_POSE_LEFT_01", 0, 0, 1 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U2133[3], -692023333, 40.32000000, -19.59000000, 0.82000000, 115.00000000, "level_s_club_CP_01_02", "VIG_01O_NC_CPL1_IDLE_CIV1", 0, 1, 0 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U2133[4], 572388144, 44.93000000, -20.86000000, 0.82000000, 65.00000000, "level_s_club_CP_01_02", "VIG_01C_NC_CIV1_IDLE1", 0, 0, 1 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U2133[5], -336604608, 46.03000000, -18.84000000, 0.82000000, 195.00000000, "level_s_club_CP_01_02", "VIG_01O_NC_CPL1_IDLE_CIV2", 0, 1, 0 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U2133[6], -897194603, 48.15000000, -19.89000000, 0.98000000, 45.00000000, "level_s_club_CP_01_02", "VIG_02_NC_IDLE1", 0, 0, 1 );
     /* P_SIMPLE_PED_STRUCT_SETUP */ sub_14049( ref l_U2133[7], -1216213616, 50.11000000, -22.12000000, 0.82000000, -116.00000000, "DAM_DEAD", "MED_DEAD_POSE_FRONT_03", 0, 0, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U1321, "SUPRESS_CS_EXTRA_SPAWN", 25.46000000, -49.53000000, -4.75000000, 22.43000000, 18.50000000, 9.89000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U850, "STAIR_VIP", 34.62000000, -73.40000000, -5.42000000, 3.85000000, 3.30000000, 7.00000000, 0.00000000, 0.00000000, -149.01000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U871, "Manager_NIS", 27.42000000, -26.16000000, -1.73000000, 6.52000000, 21.78000000, 6.38000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U892, "Manager_NIS_Failsafe", 27.22000000, -29.26000000, 0.00000000, 3.85000000, 13.27000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U913, "FALL_DEATH", 58.28000000, -37.21000000, -6.44000000, 20.00000000, 30.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U2279, "Speech - SCLB_MGBTB", 44.93000000, -66.39000000, -2.22000000, 3.36000000, 3.57000000, 3.03000000, 0.00000000, 0.00000000, -179.18000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U2319, "Speech - SCLB_MADVP", 41.39000000, -64.13000000, -2.22000000, 14.47000000, 20.75000000, 3.06000000, 0.00000000, 0.00000000, -179.18000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U2350, "Speech - SCLB_MGBDF", 25.99000000, -64.13000000, -5.69000000, 23.47000000, 26.44000000, 3.06000000, 0.00000000, 0.00000000, -179.18000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U934, "SPAWN_VIP_REINFORCEMENTS_1", 33.35000000, -70.98000000, -5.18000000, 3.36000000, 4.66000000, 7.00000000, 0.00000000, 0.00000000, -149.89000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U955, "SPAWN_VIP_REINFORCEMENTS_2", 46.89000000, -51.84000000, -1.43000000, 5.00000000, 4.06000000, 3.00000000, 0.00000000, 0.00000000, -179.89000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U976, "CLOSE_BALCONY_DOORS", 42.18000000, -42.99000000, -1.43000000, 14.41000000, 3.53000000, 3.00000000, 0.00000000, 0.00000000, -179.89000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U997, "CLAUDIO_POI", 37.62621000, -60.02418000, -2.06252100, 5.00000000, 1.50000000, 2.00000000, 0.00000000, 0.00000000, -121.30000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U1673, "Club Flyer Exporation", 42.55000000, -69.74000000, -2.05000000, 2.24000000, 1.66000000, 2.45000000, 0.00000000, 0.00000000, -43.63000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U1898, "CLEAN_VIG_03_B", 28.84000000, -32.04000000, 0.00000000, 3.70000000, 7.26000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U1959, "BLOCK_WAVE_3", 33.71000000, -32.71000000, 0.00000000, 11.67000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U1039, "CS Wave 3 safety Cleanup", 26.75000000, -29.26000000, 0.00000000, 3.85000000, 13.27000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    array(ref uVar2, 2);
     /* P_CREATETRIGGERBOX */ sub_15782( ref uVar2[0], "CLEAN_VIG_03_A_00", 26.44000000, -30.12000000, 0.00000000, 6.00000000, 3.35000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref uVar2[1], "CLEAN_VIG_03_A_01", 26.45000000, -36.85000000, 0.00000000, 6.13000000, 3.35000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERREGION */ sub_17210( ref l_U1756, ref uVar2 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U1201[0], "Close Balcony Doors Safety 1", 42.44000000, -39.27000000, -0.37000000, 14.12000000, 20.05000000, 3.00000000, 0.00000000, 0.00000000, -179.89000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U1201[1], "Close Balcony Doors Safety 2", 33.71000000, -32.71000000, 0.00000000, 11.67000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERREGION */ sub_17210( ref l_U1060, ref l_U1201 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U1018, "tbImageFX_VIP01", 30.03000000, -32.71000000, 0.00000000, 11.67000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_SETUP_MID_02_FAIL_STRUCTS */ sub_17783();
     /* P_CREATETETHERBOX */ sub_19593( ref l_U1245[0], "tethVIP_MAIN_00", 40.34000000, -66.11000000, -2.22000000, 4.63000000, 20.12000000, 3.72000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_19593( ref l_U1245[1], "tethVIP_MAIN_01", 44.68000000, -61.52000000, -2.22000000, 5.24000000, 2.12000000, 3.72000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_19593( ref l_U1245[2], "tethVIP_MAIN_02", 44.56000000, -70.99000000, -2.22000000, 5.69000000, 2.62000000, 3.72000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_19593( ref l_U1245[3], "tethVIP_MAIN_03", 37.13000000, -64.52000000, -2.22000000, 4.73000000, 4.78000000, 14.61000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_19593( ref l_U1250, "tethVIP_WINDOW", 35.60000000, -64.68000000, -2.22000000, 2.54000000, 6.99000000, 5.47000000, 0.00000000, 0.00000000, -0.23001300, 1 );
     /* P_CREATETETHERBOX */ sub_19593( ref l_U1251, "MAIN_CLUB_AREA", 26.60000000, -61.53000000, -5.47000000, 16.93000000, 18.54000000, 3.72000000, 0.00000000, 0.00000000, -0.03999760, 1 );
     /* P_CREATETETHERBOX */ sub_19593( ref l_U1252, "tethVIP_BALCONY", 44.80000000, -38.80000000, -0.35000000, 10.46000000, 17.07000000, 3.72000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEPOISTRUCTTRIGGERCOORD */ sub_20178( ref l_U1483, 2, 37.62621000, -60.02418000, -2.06252100, l_U997, 37.62621000, -60.02418000, -2.06252100, 3.00000000, 1, 0 );
     /* P_SET_POI_FORCE_WALK */ sub_21121( ref l_U1483, 0 );
     /* P_SET_POI_REUSABLE */ sub_21176( ref l_U1483, 1 );
     /* P_SET_INTERACTIVE_TEXT */ sub_21243( ref l_U1483, 30, "POI_CLAUDIO" );
     /* P_SET_POI_AVAILABLE */ sub_21453( ref l_U1483, 0 );
     /* P_CREATEPOISTRUCTTRIGGERCOORD */ sub_20178( ref l_U1578, 2, l_U1571, l_U1673, l_U1571, 3.00000000, 1, 0 );
     /* P_SET_POI_FORCE_WALK */ sub_21121( ref l_U1578, 0 );
     /* P_SET_POI_REUSABLE */ sub_21176( ref l_U1578, 1 );
     /* P_SET_INTERACTIVE_TEXT */ sub_21243( ref l_U1578, 30, "POI_FLYER" );
     /* P_SET_POI_AVAILABLE */ sub_21453( ref l_U1578, 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_13181(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_SIMPLE_PED_STRUCT_SETUP */ void sub_14049(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = GET_SCENE_PED_MODEL( uParam1 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU8 = {uParam2};
    iParam0->_fU20 = uParam5;
    iParam0->_fU28 = uParam6;
    iParam0->_fU32 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU40 = uParam9;
    iParam0->_fU44 = uParam10;
    iParam0->_fU48 = 1;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_15782(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETRIGGERREGION */ void sub_17210(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
         /* WRITESCRIPTLOG */ sub_249( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

/* P_SETUP_MID_02_FAIL_STRUCTS */ void sub_17783()
{
     /* WRITESCRIPTLOG */ sub_249( "SP", "P_SETUP_MID_02_FAIL_STRUCTS", 0 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U356, "TRIG_FAIL_DANCE_1", 26.97000000, -65.77000000, -5.32000000, 24.62000000, 21.82000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U377, "TRIG_FAIL_DANCE_1B", 26.26000000, -54.19000000, -5.07000000, 9.00000000, 6.00000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U398, "TRIG_FAIL_DANCE_1C", 27.15000000, -73.02000000, -5.07000000, 11.65000000, 6.81000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U419, "TRIG_FAIL_DANCE_1D", 37.51000000, -76.03000000, -3.59000000, 4.00000000, 4.00000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U440, "TRIG_FAIL_DANCE_2", 24.88000000, -47.96000000, -5.08000000, 20.38000000, 21.81000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U461, "TRIG_FAIL_DANCE_2A", 34.84000000, -52.84000000, -5.08000000, 4.00000000, 4.51000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U482, "TRIG_FAIL_LOUNGE", 40.67000000, -66.68000000, -2.22000000, 14.28000000, 21.46000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U503, "TRIG_FAIL_LOUNGE_A", 43.51000000, -52.82000000, -2.24000000, 10.00000000, 6.79000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U524, "TRIG_FAIL_PATIO", 43.08000000, -39.79000000, -0.44000000, 15.00000000, 19.30000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U545, "TRIG_FAIL_PATIO_A", 32.55000000, -33.47000000, -0.44000000, 6.56000000, 3.71000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U566, "TRIG_FAIL_ORBITAS_1", 18.68000000, 5.70000000, -1.94000000, 35.81000000, 47.05000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U587, "TRIG_FAIL_ORBITAS_1A", 14.74000000, 28.10000000, -1.94000000, 29.29000000, 10.00000000, 10.00000000, 0.00000000, 0.00000000, -16.02000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U608, "TRIG_FAIL_ORBITAS_2", 22.34000000, 41.28000000, -1.94000000, 19.64000000, 20.00000000, 10.00000000, 0.00000000, 0.00000000, -16.09000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U629, "TRIG_FAIL_ORBITAS_2A", 12.80000000, 43.40000000, -1.94000000, 8.35000000, 16.52000000, 10.00000000, 0.00000000, 0.00000000, -44.41000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U650, "TRIG_FAIL_BATHROOM", 9.15000000, 52.69000000, -1.94000000, 6.52000000, 8.24000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U671, "TRIG_FAIL_BATHROOM_A", 12.49000000, 53.09000000, -1.94000000, 5.66000000, 5.97000000, 10.00000000, 0.00000000, 0.00000000, -44.57000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U692, "TRIG_FAIL_KITCHEN_LOCKER", -0.83000000, 53.97000000, -1.94000000, 13.61000000, 8.49000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U713, "TRIG_FAIL_KITCHEN", -9.52000000, 63.81000000, -1.94000000, 18.08000000, 11.18000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U734, "TRIG_FAIL_KITCHEN_A", -20.47000000, 65.70000000, -1.94000000, 4.00000000, 9.51000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U755, "TRIG_FAIL_RESTAURANT", -16.16000000, 90.72000000, -1.94000000, 42.04000000, 40.80000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15782( ref l_U776, "TRIG_FAIL_RESTAURANT_A", -14.35000000, 70.13000000, -1.94000000, 8.00000000, 1.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

/* P_CREATETETHERBOX */ void sub_19593(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEPOISTRUCTTRIGGERCOORD */ void sub_20178(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_20225( iParam0, uParam30 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU80 = 1;
    iParam0->_fU116 = {uParam5};
    iParam0->_fU200 = {uParam26};
    iParam0->_fU212 = uParam29;
    iParam0->_fU320 = uParam31;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_20616( iParam0 );
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_20225(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_20616(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_20714( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_20714(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_20790( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_20790( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_20790( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_20790( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_20790( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_20790( iParam0, 0 );
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_20790(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_SET_POI_FORCE_WALK */ void sub_21121(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

/* P_SET_POI_REUSABLE */ void sub_21176(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_21243(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_21299( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_21299(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_SET_POI_AVAILABLE */ void sub_21453(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
     /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_21517( iParam0 );
    return;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_21517(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_21613( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_21613( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_21613(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_532() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_494() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_494() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_494() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_494() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_494() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_494() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_22014(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_22058();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_22058()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_LOAD_VIP_ASSETS */ void sub_22415()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_LOAD_VIP_ASSETS - START", 0 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_22493( 1208363481, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_22493( -1491672653, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_22493( g_U885, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_22493( g_U888, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_22493( g_U2478, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_22493( g_U2459, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_22493( -1043623436, ref g_U1108 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_25427( "LEVEL_S_CLUB_CP_01_02", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_25427( "LEVEL_S_CLUB_CP_02", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_25427( "EXPL_CAM", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_25427( "DAM_DEAD", ref g_U1447 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_27381( 816576289, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_27381( -1404259228, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_27381( -1700261605, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_27381( -671715858, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_27381( -921546714, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_27381( -506138981, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_27381( -2129777527, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_27381( 1875151350, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_27381( -1746599655, ref g_U1350 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_30297( 1194438308, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_30297( 406496141, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_30297( 68019059, ref g_U1301 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_22493( -1409914275, ref g_U1108 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_LOAD_VIP_ASSETS - END", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_22493(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_22560( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_22818( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_22560(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_22818( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_22818( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_22818( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_24349( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_22818( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_22818( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_22818(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_22879( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_22879(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_24349(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_25427(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_25479( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_25731( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_25479(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_25731( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_25731( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_25731( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_24349( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_25731( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_25731( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_25731(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_22879( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_27381(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_27442( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_27692( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_27442(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_27692( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_27692( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_27692( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_27692( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_24349( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_24349( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_27692( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_27692( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_27692(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_22879( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_30297(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_30351( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_30612( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_30351(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_30612( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_30612( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_30612( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_24349( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_30612( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_30612( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_30612(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_22879( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_32383(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_32780(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_33182(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_33573(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_34343(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_249( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_7057( uParam0,  /* PLAYER_PED_ID */ sub_494() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* F_VIP_HANDLE_PED_SPAWNING */ int sub_34809()
{
    if (NOT ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_34860( ref l_U1342, ref l_U1344, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_34860( ref l_U1317, ref l_U1277, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_34860( ref l_U1372, ref l_U1358, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_34860( ref l_U1401, ref l_U1374, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_34860( ref l_U1431, ref l_U1404, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_34860( ref l_U1450, ref l_U1436, -1, 0, 1, 1, 1 )))
    {
        return 0;
    }
    if (NOT ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_34860( ref l_U1748, ref l_U1695, -1, 0, 1, 0, 1 )))
    {
        return 0;
    }
    if (NOT ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_34860( ref l_U1479, ref l_U1452, -1, 0, 0, 0, 1 )))
    {
        return 0;
    }
    return 1;
}

/* F_HANDLE_PED_ARRAY_SPAWN */ int sub_34860(unknown uParam0, unknown uParam1, int iParam2, boolean bParam3, boolean bParam4, int iParam5, unknown uParam6)
{
    int iVar9;
    int iVar10;
    int Result;

    iVar9 =  /* F_GET_NUM_SPAWNED_PED_IN_ARRAY */ sub_34901( uParam0, uParam1 );
    if (iParam2 == -1)
    {
        iVar10 = (uParam0^);
    }
    else
    {
        iVar10 = iParam2;
    }
    if (iVar9 < iVar10)
    {
        if ((uParam1^)[iVar9]._fU16 == 0)
        {
            SCRIPT_ASSERT( "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
             /* WRITESCRIPTLOG */ sub_249( "MF", "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            PRINTSTRING( "INVALID SPAWN INDEX: " );
             /* WRITE_INT */ sub_35264( iVar9 );
            return 0;
        }
        if (NOT (DOES_PED_EXIST( (uParam0^)[iVar9] )))
        {
             /* LOADMODEL */ sub_35347( (uParam1^)[iVar9]._fU16, uParam6 );
            (uParam0^)[iVar9] =  /* CREATEPED */ sub_35599( ref (uParam1^)[iVar9] );
            if (NOT bParam4)
            {
                SET_PED_VISIBLE( (uParam0^)[iVar9], bParam4 );
                 /* WRITE_STRING */ sub_6733( "SPAWNING INVISIBLE PED!!!" );
            }
            if (iParam5 == 1)
            {
                 /* P_DEACTIVATEPED */ sub_36390( (uParam0^)[iVar9] );
                 /* WRITE_STRING */ sub_6733( "Deactivating Ped..." );
            }
        }
    }
    if (bParam3)
    {
        if (iVar9 == (iVar10 - 1))
        {
             /* WRITESCRIPTLOG */ sub_249( "MF", "F_HANDLE_PED_ARRAY_SPAWN: Returning true Once.  If you see this looping, you likely have unitialized ped model data in your pedstruct array.", 0 );
            Result = 1;
        }
        return Result;
    }
    else if (iVar9 >= iVar10)
    {
        return 1;
    }
    return 0;
}

/* F_GET_NUM_SPAWNED_PED_IN_ARRAY */ void sub_34901(unknown uParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = (uParam1^);
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (DOES_PED_EXIST( (uParam0^)[I] )))
        {
            if ((uParam1^)[I]._fU16 != 0)
            {
                if (I < Result)
                {
                    Result = I;
                }
            }
        }
    }
    return Result;
}

/* WRITE_INT */ void sub_35264(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* LOADMODEL */ void sub_35347(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_6733( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* CREATEPED */ void sub_35599(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_35347( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_36090( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_36191( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_36090(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_36191(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_36390(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* P_CREATE_PLACEMENTS */ void sub_37071()
{
     /* WRITESCRIPTLOG */ sub_249( "SP", "P_CREATE_PLACEMENTS", "###" );
     /* CLEANPLACEMENT */ sub_6043( l_U2238 );
    l_U2238 =  /* CREATEPLACEMENT */ sub_37196( -4072149, 46.00000000, -67.48000000, -0.94500000, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0, 1119092736 );
    if ((DOES_PLACEMENT_EXIST( l_U2238 )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U2238, ref g_U2512 );
    }
    if (g_U892 == 2)
    {
         /* P_CREATE_S_CLB_GG_38_01 */ sub_37418();
    }
    l_U1570 =  /* CREATEOBJECTNOOFFSET */ sub_38260( -1043623436, l_U1571, l_U1574, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1570 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1570, ref g_U2512 );
        FREEZE_OBJECT_POSITION( l_U1570, 1 );
    }
     /* P_CREATE_S_CLB_GG_M3_01 */ sub_38622();
    return;
}

/* CREATEPLACEMENT */ void sub_37196(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_CREATE_S_CLB_GG_38_01 */ void sub_37418()
{
     /* WRITESCRIPTLOG */ sub_249( "CO", "P_CREATE_S_CLB_GG_38_01", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_37561( ref g_U777, g_U885, 1887476559, -925661285, 27.02000000, -72.84000000, -2.45000000, 1.50000000, 0.00000000, g_U776, "rm_clb_firstclub" );
     /* P_CREATECOLLECTIBLE */ sub_37718( ref g_U777 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_37561(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_249( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_37718(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_249( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_37801( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_249( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_249( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_37801( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_6043( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_37196( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_249( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_249( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_37801(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* CREATEOBJECTNOOFFSET */ void sub_38260(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_35347( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_CREATE_S_CLB_GG_M3_01 */ void sub_38622()
{
     /* WRITESCRIPTLOG */ sub_249( "CO", "P_CREATE_S_CLB_GG_M3_01", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_37561( ref g_U831, g_U888, -925015168, 960408216, 42.93000000, -66.16000000, -1.95000000, 1.50000000, 0.00000000, g_U776, "GtaMIL_clb_Int_01" );
     /* P_CREATECOLLECTIBLE */ sub_37718( ref g_U831 );
    return;
}

/* P_SETUP_GAMEPLAY */ void sub_38796()
{
     /* WRITESCRIPTLOG */ sub_249( "SA", "P_SETUP_GAMEPLAY()", "###" );
     /* P_SETDOORLOCKED */ sub_38867( ref g_U3122, 0 );
     /* P_OPENDOOR */ sub_39137( ref g_U3122, 0, 1, 1.00000000 );
     /* P_SETDOORLATCH */ sub_39301( ref g_U3122, 1 );
     /* P_OPENDOOR */ sub_39137( ref g_U3255, 0, 1, 1.00000000 );
     /* P_SETDOORLATCH */ sub_39301( ref g_U3255, 1 );
     /* P_OPENDOOR */ sub_39137( ref g_U3262, 1, 1, 1.00000000 );
     /* P_SETDOORLATCH */ sub_39301( ref g_U3262, 1 );
     /* P_SETDOORLOCKED */ sub_38867( ref g_U3150, 1 );
     /* P_SETDOORLOCKED */ sub_38867( ref g_U3157, 1 );
     /* P_SETDOORAFFECTEDBYBULLETS */ sub_39454( ref g_U3115, 0 );
    BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
    return;
}

/* P_SETDOORLOCKED */ void sub_38867(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_38897( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_38981( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_38897(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_38981(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_OPENDOOR */ void sub_39137(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_38897( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_38981( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* P_SETDOORLATCH */ void sub_39301(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_38897( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_38981( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

/* P_SETDOORAFFECTEDBYBULLETS */ void sub_39454(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_38897( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_38981( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

/* P_VIP_SETUP_FIRST_CS */ void sub_39565()
{
    int I;

     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_SETUP_FIRST_CS - START", 0 );
     /* P_SETUP_AI_GROUP */ sub_39650( ref l_U1271, 1.00000000, 0 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_40058( ref l_U1317, "piVIP_FIRST_CS__" );
     /* MAL_SETPEDARRAYLOCKEDONMAX */ sub_40192( ref l_U1317 );
     /* P_ACTIVATEPEDARRAY */ sub_40515( ref l_U1317 );
    if (NOT (IS_PED_DEAD( l_U1317[0] )))
    {
        SET_PED_AI_TEMPLATE( l_U1317[0], ref g_U3099 );
        GIVE_WEAPON_TO_PED_HAND( l_U1317[0], 1194438308, 25000, 0 );
        SET_PED_ALERTNESS( l_U1317[0], 3 );
         /* P_TETHERPED */ sub_40793( ref l_U1250, l_U1317[0], 1 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[1] )))
    {
        SET_PED_AI_TEMPLATE( l_U1317[1], ref g_U3099 );
        GIVE_WEAPON_TO_PED_HAND( l_U1317[1], 406496141, 25000, 0 );
         /* P_TETHERPED */ sub_40793( ref l_U1250, l_U1317[1], 1 );
        SET_PED_ALERTNESS( l_U1317[1], 3 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[2] )))
    {
        SET_PED_AI_TEMPLATE( l_U1317[2], ref g_U3099 );
        GIVE_WEAPON_TO_PED_HAND( l_U1317[2], 1194438308, 25000, 0 );
         /* P_TETHERPED */ sub_40793( ref l_U1251, l_U1317[2], 1 );
        SET_PED_ALERTNESS( l_U1317[2], 3 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1317[2], 1, 0 );
    }
    for ( I = 0; I < l_U1317; I++ )
    {
         /* P_PED_SET_VAULTING */ sub_41120( l_U1317[I], 0, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1317[I], ref g_U2512 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1317[I], 1 );
        SET_PED_CAN_PLAY_LOCO_FLAVOR_STARTS( l_U1317[I], 0 );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_41263( l_U1317[I], ref l_U1271 );
    }
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_SETUP_FIRST_CS - END", 0 );
    return;
}

/* P_SETUP_AI_GROUP */ void sub_39650(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_40058(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* MAL_SETPEDARRAYLOCKEDONMAX */ void sub_40192(unknown uParam0)
{
    unknown uVar3;

    uVar3 =  /* PLAYER_PED_ID */ sub_494();
     /* MAL_SETPEDARRAYLOCKEDANDREGISTEREDTARGET */ sub_40242( uParam0, uVar3 );
    return;
}

/* MAL_SETPEDARRAYLOCKEDANDREGISTEREDTARGET */ void sub_40242(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* MAL_REGISTERTARGET */ sub_40319( ref (uParam0^)[I], uParam1 );
         /* MAL_SETLOCKEDTARGET */ sub_40405( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_REGISTERTARGET */ void sub_40319(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETLOCKEDTARGET */ void sub_40405(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* P_ACTIVATEPEDARRAY */ void sub_40515(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_40567( (uParam0^)[I] );
    }
    return;
}

/* P_ACTIVATEPED */ void sub_40567(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* P_TETHERPED */ void sub_40793(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* P_PED_SET_VAULTING */ void sub_41120(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_PATH_CAN_USE_CLIMBOVERS( uParam0, uParam1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( uParam0, uParam2 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_41263(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_6733( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_39650( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_39650( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* P_VIP_SETUP_REINFORCEMENTS_WAVE_1 */ void sub_41703()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_1 - START", 0 );
    if (NOT (IS_PED_DEAD( l_U1372[0] )))
    {
         /* F_GIVEPEDWEAPON */ sub_9505( l_U1372[0], 406496141, 25000, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1372[0], 1 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_41886( ref l_U1372[0], ref g_U3099, 5.00000000, 20.00000000 );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_41263( l_U1372[0], ref l_U1271 );
        SET_PED_ALERTNESS( l_U1372[0], 3 );
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_40058( ref l_U1372, "piVIP_REINFORCE_CS_WAVE_1" );
     /* P_PED_ARRAY_SET_VAULTING */ sub_42084( ref l_U1372, 0, 0 );
     /* P_DEACTIVATEPEDARRAY */ sub_42210( ref l_U1372 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_1 - END", 0 );
    return;
}

/* P_SET_PED_TEMPLATE_AND_RANGES */ void sub_41886(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

/* P_PED_ARRAY_SET_VAULTING */ void sub_42084(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^)[I], uParam1 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^)[I], uParam2 );
        }
    }
    return;
}

/* P_DEACTIVATEPEDARRAY */ void sub_42210(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_DEACTIVATEPED */ sub_36390( (uParam0^)[I] );
    }
    return;
}

/* P_VIP_SETUP_REINFORCEMENTS_WAVE_2 */ void sub_42349()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_2 - START", 0 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_40058( ref l_U1401, "piVIP_REINFORCEMENT_CS_WAVE_2" );
     /* P_ACTIVATEPEDARRAY */ sub_40515( ref l_U1401 );
     /* P_PED_ARRAY_SET_VAULTING */ sub_42084( ref l_U1401, 0, 0 );
     /* P_SET_PED_ARRAY_REGISTERED_TARGET */ sub_42521( ref l_U1401,  /* PLAYER_PED_ID */ sub_494(), 1 );
     /* P_TETHERPEDARRAY */ sub_42695( ref l_U1252, ref l_U1401, 1 );
    if (NOT (IS_PED_DEAD( l_U1401[0] )))
    {
         /* F_GIVEPEDWEAPON */ sub_9505( l_U1401[0], 1194438308, 25000, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1401[0], 1 );
        SET_BLOCKING_OF_PED_TARGETTING( l_U1401[0], 1 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_41886( ref l_U1401[0], ref g_U3107, 5.00000000, 10.00000000 );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_41263( l_U1401[0], ref l_U1271 );
        SET_PED_ALERTNESS( l_U1401[0], 3 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1401[0], 1, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1401[1] )))
    {
         /* F_GIVEPEDWEAPON */ sub_9505( l_U1401[1], 406496141, 25000, 1, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1401[1], 1 );
        SET_BLOCKING_OF_PED_TARGETTING( l_U1401[1], 1 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_41886( ref l_U1401[1], ref g_U3107, 4.00000000, 9.00000000 );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_41263( l_U1401[1], ref l_U1271 );
        SET_PED_ALERTNESS( l_U1401[1], 3 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1401[1], 1, 0 );
        SET_PED_AS_ONE_SHOT_KILL( l_U1401[1], 1 );
    }
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_2 - END", 0 );
    return;
}

/* P_SET_PED_ARRAY_REGISTERED_TARGET */ void sub_42521(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^)[I] ))))
        {
            REGISTER_TARGET( (uParam0^)[I], uParam1 );
            if (iParam2 == 1)
            {
                CLEAR_LOCKED_TARGET( (uParam0^)[I] );
                SET_LOCKED_TARGET( (uParam0^)[I], uParam1 );
            }
        }
    }
    return;
}

/* P_TETHERPEDARRAY */ void sub_42695(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam1^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam1^)[I] )))
        {
             /* P_TETHERPED */ sub_40793( uParam0, (uParam1^)[I], uParam2 );
        }
    }
    return;
}

/* P_VIP_SETUP_REINFORCEMENTS_WAVE_3 */ void sub_43176()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_3 - START", 0 );
     /* P_PED_ARRAY_SET_VAULTING */ sub_42084( ref l_U1431, 0, 0 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_40058( ref l_U1431, "piVIP_CS_WAVE_3_" );
     /* P_SET_PED_ARRAY_REGISTERED_TARGET */ sub_42521( ref l_U1431,  /* PLAYER_PED_ID */ sub_494(), 1 );
    if (NOT (IS_PED_DEAD( l_U1431[0] )))
    {
         /* F_GIVEPEDWEAPON */ sub_9505( l_U1431[0], 1194438308, 25000, 0, 0 );
        SET_PED_ALERTNESS( l_U1431[0], 3 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1431[0], 1 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_41886( ref l_U1431[0], ref g_U3099, 5.00000000, 20.00000000 );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_41263( l_U1431[0], ref l_U1271 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1431[0], ref g_U2520 );
         /* P_TETHERPED */ sub_40793( ref l_U1252, l_U1431[0], 1 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1431[0], 1, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1431[1] )))
    {
         /* F_GIVEPEDWEAPON */ sub_9505( l_U1431[1], 1194438308, 25000, 0, 0 );
        SET_PED_ALERTNESS( l_U1431[1], 3 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1431[1], 1 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_41886( ref l_U1431[1], ref g_U3099, 4.00000000, 10.00000000 );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_41263( l_U1431[1], ref l_U1271 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1431[1], ref g_U2520 );
         /* P_TETHERPED */ sub_40793( ref l_U1252, l_U1431[1], 1 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1431[1], 1, 0 );
    }
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_3 - END", 0 );
    return;
}

/* P_VIP_VIG_03_A_SETUP_CIVS */ void sub_43740()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_VIG_03_A_SETUP_CIVS - START", 0 );
     /* P_GBL_SETUP_CIVS */ sub_43853( ref l_U1748, "piVIP_VIG_03_A_CIV", "" );
    if (NOT (IS_PED_DEAD( l_U1748[3] )))
    {
         /* P_CREATE_DEAD_BODY */ sub_44158( l_U1748[3], 5 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U1748[3] ), 1.00000000, 4.00000000, 60.00000000 );
    }
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_VIG_03_A_SETUP_CIVS - END", 0 );
    return;
}

/* P_GBL_SETUP_CIVS */ void sub_43853(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_40058( uParam0, uParam1 );
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            SET_PED_AS_ONE_SHOT_KILL( (uParam0^)[I], 1 );
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^)[I], 1 );
            SET_PED_DIES_WHEN_INJURED( (uParam0^)[I], 1 );
            SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^)[I], 0 );
            SET_PED_RELATIONSHIP( (uParam0^)[I], 0, 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
            {
                SET_PED_PRIMARY_LOOKAT( (uParam0^)[I],  /* PLAYER_PED_ID */ sub_494() );
            }
            SET_ROOM_FOR_PED_BY_NAME( (uParam0^)[I], uParam2 );
            if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
            {
                SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( (uParam0^)[I], 0, 0 );
                SET_PED_GORE_FROM_PLAYER( (uParam0^)[I], 0 );
            }
        }
    }
    return;
}

/* P_CREATE_DEAD_BODY */ void sub_44158(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
         /* WRITE_STRING */ sub_6733( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

/* P_VIP_SETUP_EXTRA_CS */ void sub_45191()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_SETUP_EXTRA_CS - START", 0 );
     /* P_ACTIVATEPEDARRAY */ sub_40515( ref l_U1342 );
     /* P_PED_ARRAY_SET_VAULTING */ sub_42084( ref l_U1342, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U1342[0] )))
    {
         /* F_GIVEPEDWEAPON */ sub_9505( l_U1342[0], 1194438308, 25000, 0, 0 );
         /* P_ADD_TETHER_TO_PED_ARRAY */ sub_45341( ref l_U1342, l_U1250, 1 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1342[0], ref g_U2512 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_41886( ref l_U1342[0], ref g_U3099, 4.00000000, 25.00000000 );
         /* P_SET_PED_ARRAY_REGISTERED_TARGET */ sub_42521( ref l_U1342,  /* PLAYER_PED_ID */ sub_494(), 1 );
        SET_PED_ALERTNESS( l_U1342[0], 3 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1342[0], 1 );
    }
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_SETUP_EXTRA_CS - END", 0 );
    return;
}

/* P_ADD_TETHER_TO_PED_ARRAY */ void sub_45341(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_TETHERPED */ sub_40793( ref uParam1, (uParam0^)[I], uParam2 );
    }
    return;
}

/* F_VIP_MID_03_PRE_SETUP */ int sub_45590()
{
     /* KILL_ANY_MISSION_SPEECH */ sub_609( 1 );
    return 1;
}

/* P_VIP_MID_03_REGISTER */ void sub_45640()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_MID_03_REGISTER - START", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
    {
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_494(), g_U2216[2], g_U2331[2] );
        CUTSCENE_REGISTER_ISEQ( -506138981 );
        ISEQ_REGISTER_ENTITY( -506138981, "Max",  /* PLAYER_PED_ID */ sub_494(), 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1317[0], "G_CS_NCSM_B1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U1317[0], l_U1277[0]._fU0, l_U1277[0]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U1317[0], "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U1317[0], 0, 0 ), "W_PI_38_Ba_H", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1317[1], "G_CS_NCSM_B1^2", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U1317[1], l_U1277[1]._fU0, l_U1277[0]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U1317[1], "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U1317[1], 0, 0 ), "W_PI_38_Ba_H^1", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1342[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1342[0], "G_CS_NCSM_C", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U1342[0], l_U1344[0]._fU0, l_U1344[0]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U1342[0], "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U1342[0], 0, 0 ), "W_PI_38_Ba_H^2", 0 );
    }
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3150._fU0, g_U3150._fU4 ), "p_clb_door_int_ba", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3157._fU0, g_U3157._fU4 ), "p_clb_door_int_bb", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3115._fU0, g_U3115._fU4 ), "p_clb_door_int_ca", 0 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "Sero_Club", 590685641 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "G_CS_NCSM_B1^1", 360058256 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "G_CS_NCSM_C^1", 1541151150 );
    CAMERA_POINT_AT_COORD( 30.31000000, -66.99000000, -3.46000000, 2000 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_MID_03_REGISTER - END", 0 );
    return;
}

/* P_VIP_MID_03_HANDLE */ void sub_46680()
{
    if (l_U2400._fU52 == 1)
    {
        if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
             /* WRITESCRIPTLOG */ sub_249( "MF", "Allowing bullet cam to gameplay", 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        }
        ENABLE_WALLA_ZONE( "S_CLUB_WZ_COAT_CHECK_CS", 0 );
        ENABLE_WALLA_ZONE( "S_CLUB_WZ_COAT_CHECK_HOSTAGES", 0 );
        ENABLE_AMBIENT_ZONE( "S_CLUB_ZONE_COAT_CHECK_GUNSHOTS", 0 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_22493( g_U2478, ref g_U1108 );
    }
    return;
}

/* F_VIP_MID_03_POST */ int sub_46933()
{
     /* WRITESCRIPTLOG */ sub_249( "SA", "P_VIP_MID_03_POST", 0 );
     /* P_DEACTIVATEPEDARRAY */ sub_42210( ref l_U1372 );
    return 1;
}

/* P_VIP_MID_03_BLEND_OUT_PREPARE */ void sub_47012()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_MID_03_BLEND_OUT_PREPARE - START", 0 );
    if (NOT (ISEQ_QUERY_STATE( -506138981, 3 )))
    {
         /* MAL_TELEPORTPLAYER */ sub_47159( g_U2216[2], g_U2331[2], g_U2370[2], g_U2409[2] );
        ISEQ_REGISTER_ENTITY( -506138981, "Max",  /* PLAYER_PED_ID */ sub_494(), 0 );
        ISEQ_START( -506138981 );
        CAMERA_POINT_AT_COORD( 30.31000000, -66.99000000, -3.46000000, 2000 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_02", "B_OUT_MID_03_NC_FWD_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
    ENABLE_STATIC_EMITTER( "S_CLUB_SE_DANCE_CLUB_DJ_BOOTH_GEAR", 1 );
    ENABLE_STATIC_EMITTER( "S_CLUB_SE_LOUNGE_MUSIC", 1 );
     /* P_ACTIVATEPEDARRAY */ sub_40515( ref l_U1317 );
     /* P_VIP_FIRST_CS_COMBAT */ sub_47547();
     /* P_VIP_SETUP_CIVS */ sub_48212();
    SMASH_GLASS_IN_RADIUS( 34.10000000, -61.92000000, 0.00000000, 0.01000000, 10.50000000 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_22493( -398091261, ref g_U1108 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_MID_03_BLEND_OUT_PREPARE - END", 0 );
    return;
}

/* MAL_TELEPORTPLAYER */ void sub_47159(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 =  /* PLAYER_PED_ID */ sub_494();
     /* MAL_TELEPORTPED */ sub_47206( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

/* MAL_TELEPORTPED */ void sub_47206(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_VIP_FIRST_CS_COMBAT */ void sub_47547()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    if (NOT (IS_PED_DEAD( l_U1317[0] )))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_PAUSE( 0, 500 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
        {
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 35.03000000, -63.07000000, -2.02000000,  /* PLAYER_PED_ID */ sub_494(), 3, 0, 1056964608, 0, 1, 0 );
            TASK_SHOOT_AT_PED( 0,  /* PLAYER_PED_ID */ sub_494(), 2500, 0, 0, 0, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
        {
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_494() );
        }
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U1317[0] );
        TASK_PERFORM_SEQUENCE( l_U1317[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[1] )))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_PAUSE( 0, 500 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
        {
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 34.94000000, -66.78000000, -1.99000000,  /* PLAYER_PED_ID */ sub_494(), 3, 0, 1056964608, 0, 1, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
        {
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_494() );
        }
        CLOSE_SEQUENCE_TASK( uVar3 );
        CLEAR_PED_TASKS( l_U1317[1] );
        TASK_PERFORM_SEQUENCE( l_U1317[1], uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[2] )))
    {
        OPEN_SEQUENCE_TASK( ref uVar4 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
        {
            if (NOT (IS_PED_DEAD( l_U1450[0] )))
            {
                TASK_AIM_GUN_AT_PED( 0, l_U1450[0], 800, 0 );
                TASK_SHOOT_AT_PED( 0, l_U1450[0], 800, 0, 1, 0, 0 );
            }
            TASK_AIM_GUN_AT_PED( 0,  /* PLAYER_PED_ID */ sub_494(), 1500, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_494() );
        }
        CLOSE_SEQUENCE_TASK( uVar4 );
        CLEAR_PED_TASKS( l_U1317[2] );
        TASK_PERFORM_SEQUENCE( l_U1317[2], uVar4 );
        CLEAR_SEQUENCE_TASK( uVar4 );
    }
    return;
}

/* P_VIP_SETUP_CIVS */ void sub_48212()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_SETUP_CIVS - START", 0 );
     /* P_ACTIVATEPEDARRAY */ sub_40515( ref l_U1450 );
     /* P_GBL_SETUP_CIVS */ sub_43853( ref l_U1450, "piVIP_CIVS", ref g_U2512 );
    SET_PED_PROOFS( l_U1450[0], 1, 0, 0, 0, 0 );
     /* P_ACTIVATEPEDARRAY */ sub_40515( ref l_U1479 );
     /* P_GBL_SETUP_CIVS */ sub_43853( ref l_U1479, "piVIP_CoweringCivs", ref g_U2512 );
     /* TELEPORTPED */ sub_48406( l_U1479[0], l_U1452[0]._fU0, l_U1452[0]._fU12 );
    ISEQ_REGISTER_ENTITY( -671715858, "CIV_1", l_U1479[0], 0 );
    ISEQ_START( -671715858 );
     /* TELEPORTPED */ sub_48406( l_U1479[1], l_U1452[1]._fU0, l_U1452[1]._fU12 );
    ISEQ_REGISTER_ENTITY( -921546714, "CIV_2", l_U1479[1], 0 );
    ISEQ_START( -921546714 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_SETUP_CIVS - END", 0 );
    return;
}

/* TELEPORTPED */ void sub_48406(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* F_VIP_MID_03_BLEND_OUT_HANDLE */ int sub_48744()
{
    if (l_U2400._fU52 == 1)
    {
         /* CREATETIMER */ sub_1855( ref l_U2427, 400, 1, 0 );
         /* STARTTIMER */ sub_2003( ref l_U2427 );
         /* P_GBL_CREATE_CLAUDIO_BODY */ sub_48826( 0 );
        if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_49276()))
        {
            DO_SCREEN_FADE_IN( 0 );
        }
    }
    if ( /* ISTIMERDONE */ sub_2134( ref l_U2427 ))
    {
         /* P_VIP_CIVS_ANIM */ sub_49539();
    }
    if (NOT l_U2437)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_CP_02", "B_OUT_MID_03_NC_FWD_CAM" )) - (l_U2436 + 300)))
        {
            CAMERA_ANIMATED_STOP( l_U2436, 1 );
            l_U2437 = 1;
        }
    }
    if (l_U2437 == 1)
    {
        if ( /* F_VIP_MID_03_IS_BLENDOUT_FINISHED */ sub_49836())
        {
            CAMERA_CLEAR_POINT_AT_TARGET();
            return 1;
        }
    }
    return 0;
}

/* P_GBL_CREATE_CLAUDIO_BODY */ void sub_48826(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_GBL_CREATE_CLAUDIO_BODY - START", 0 );
    if (iParam0 == 1)
    {
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_13181( ref g_U3516, 37.62621000, -60.02418000, -2.06252100, 151.00000000, -2069445361, 4, 1, 1, 0, 0 );
    }
    else
    {
         /* P_CREATEPEDSTRUCT */ sub_49002( ref g_U3516, 37.75621000, -60.02418000, -2.06252100, 151.00000000, 1659147241, 4, 1, 1, 0, 0 );
    }
     /* CLEANPED */ sub_5618( g_U3515 );
    g_U3515 =  /* CREATEPED */ sub_35599( ref g_U3516 );
    if (NOT (IS_PED_DEAD( g_U3515 )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3515, "DAM_DEAD", "MED_DEAD_POSE_BACK_01", 1.00000000, 0 );
        FREEZE_PED_POSITION( g_U3515, 1 );
    }
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_GBL_CREATE_CLAUDIO_BODY - END", 0 );
    return;
}

/* P_CREATEPEDSTRUCT */ void sub_49002(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

/* F_IMAGEFX_FADE_IN */ int sub_49276()
{
    if (l_U34)
    {
         /* WRITESCRIPTLOG */ sub_249( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U34 = 0;
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_249( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

/* P_VIP_CIVS_ANIM */ void sub_49539()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_CIVS_ANIM - START", 0 );
    if (NOT (IS_PED_DEAD( l_U1450[0] )))
    {
        ISEQ_REGISTER_ENTITY( 816576289, "VIP_SHOT_CIV", l_U1450[0], 0 );
    }
    ISEQ_START( 816576289 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_CIVS_ANIM - END", 0 );
    return;
}

/* F_VIP_MID_03_IS_BLENDOUT_FINISHED */ int sub_49836()
{
    if (((ISEQ_QUERY_STATE( -506138981, 6 )) == 1) || ((ISEQ_QUERY_STATE( -506138981, 5 )) == 1))
    {
        return 1;
    }
    return 0;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_49960(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_249( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_50184( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 50081, 50131, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_50081()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_50131()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_50184(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* P_CREATE_AND_START_TIMER */ void sub_50561(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_1855( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_2003( uParam0 );
    return;
}

/* CUTSYS_HANDLECUTSCENE */ void sub_50689(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_249( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_249( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_249( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_249( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_249( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_249( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_51491( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_249( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_51915( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_51915( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_249( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_52459( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_51915( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_52839( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_52839( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* LOADSEAMLESSCUTSCENE */ void sub_51491(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* NIS_PRE_SETUP */ void sub_51915(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_532(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_494(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_494() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_494(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_52459(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_494(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_494(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_494(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_494(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_494(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_52839(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_532(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_494(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_52937();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_52937()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_494(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_494(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_494(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_494(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_53367(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_249( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_249( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_10279( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_53658( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_54135( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_54135( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_54395( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_54135( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_54395( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_54395( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_54135( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_54395( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_54395( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_54395( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_54135( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_54395( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_54395( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_54395( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_54395( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_55975( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_249( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_53658(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_7338( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_249( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_249( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_54135(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_54395(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_55975(int iParam0)
{
     /* WRITE_STRING */ sub_6733( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_56063( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_56140( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_56140( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_56140( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_56140( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_56140( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_56969( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU52 );
     /* WRITE_STRING */ sub_6733( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU96 );
     /* WRITE_STRING */ sub_6733( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU100 );
     /* WRITE_STRING */ sub_6733( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU104 );
     /* WRITE_STRING */ sub_6733( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU108 );
     /* WRITE_STRING */ sub_6733( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU112 );
     /* WRITE_STRING */ sub_6733( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU116 );
     /* WRITE_STRING */ sub_6733( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU120 );
     /* WRITE_STRING */ sub_6733( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU124 );
     /* WRITE_STRING */ sub_6733( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU128 );
     /* WRITE_STRING */ sub_6733( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_35264( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_35264( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_35264( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_56063(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_56140(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_56969(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_VIP_VIG_03_A_SETUP */ void sub_57948()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_VIG_03_B_START - START", 0 );
    ISEQ_REGISTER_ENTITY( -1700261605, "CS1", l_U1401[0], 0 );
    ISEQ_REGISTER_ENTITY( -1700261605, "CS2", l_U1401[1], 0 );
    ISEQ_REGISTER_ENTITY( -1700261605, "GMED1", l_U1748[0], 0 );
    ISEQ_REGISTER_ENTITY( -1700261605, "FLGE1", l_U1748[1], 0 );
    ISEQ_REGISTER_ENTITY( -1700261605, "FLGE2", l_U1748[2], 0 );
    ISEQ_START( -1700261605 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_VIG_03_B_START - END", 0 );
    return;
}

/* P_VIP_VIG_03_B_SETUP */ void sub_58229()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_VIG_03_B_START - START", 0 );
     /* P_ACTIVATEPEDARRAY */ sub_40515( ref l_U1431 );
    if (NOT (IS_PED_DEAD( l_U1431[0] )))
    {
        FREEZE_PED_POSITION( l_U1431[0], 0 );
        ISEQ_REGISTER_ENTITY( -1404259228, "GMED2", l_U1431[0], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1431[1] )))
    {
        FREEZE_PED_POSITION( l_U1431[1], 0 );
        ISEQ_REGISTER_ENTITY( -1404259228, "GMED3", l_U1431[1], 0 );
    }
    ISEQ_START( -1404259228 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_VIG_03_B_START - END", 0 );
    return;
}

/* P_DF_HANDLE_CIV_AIMED_AT_FLINCHING */ void sub_58577()
{
     /* P_GBL_HANDLE_PED_AIMED_AT_FLINCH */ sub_58650( ref g_U2617[0], 58, 1069547520, 1101004800, 0, -1082130432 );
     /* P_GBL_HANDLE_PED_AIMED_AT_FLINCH */ sub_58650( ref g_U2619[0], 58, 1069547520, 1101004800, 0, -1082130432 );
     /* P_GBL_HANDLE_PED_AIMED_AT_FLINCH */ sub_58650( ref g_U2621[0], 58, 1069547520, 1101004800, 0, -1082130432 );
     /* P_GBL_HANDLE_PED_AIMED_AT_FLINCH */ sub_58650( ref g_U2633[0], 58, 1069547520, 1101004800, 0, -1082130432 );
     /* P_GBL_HANDLE_PED_AIMED_AT_FLINCH */ sub_58650( ref g_U2633[1], 58, 1069547520, 1101004800, 0, -1082130432 );
     /* P_GBL_HANDLE_PED_AIMED_AT_FLINCH */ sub_58650( ref g_U2633[2], 58, 1069547520, 1101004800, 0, -1082130432 );
     /* P_GBL_HANDLE_PED_AIMED_AT_FLINCH */ sub_58650( ref g_U2628[0], 58, 1069547520, 1101004800, 0, -1082130432 );
     /* P_GBL_HANDLE_PED_AIMED_AT_FLINCH */ sub_58650( ref g_U2628[1], 58, 1069547520, 1101004800, 0, -1082130432 );
     /* P_GBL_HANDLE_PED_AIMED_AT_FLINCH */ sub_58650( ref g_U2625[0], 58, 1069547520, 1101004800, 0, -1082130432 );
     /* P_GBL_HANDLE_PED_AIMED_AT_FLINCH */ sub_58650( ref g_U2625[1], 58, 1069547520, 1101004800, 0, -1082130432 );
     /* P_GBL_HANDLE_PED_AIMED_AT_FLINCH */ sub_58650( ref g_U2623[0], 58, 1069547520, 1101004800, 0, -1082130432 );
     /* P_GBL_HANDLE_PED_AIMED_AT_FLINCH */ sub_58650( ref l_U1479[0], 58, 1069547520, 1101004800, 0, -1082130432 );
     /* P_GBL_HANDLE_PED_AIMED_AT_FLINCH */ sub_58650( ref l_U1479[1], 58, 1069547520, 1101004800, 0, -1082130432 );
    return;
}

/* P_GBL_HANDLE_PED_AIMED_AT_FLINCH */ void sub_58650(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        if (IS_PED_IN_CROSSHAIR_CYLINDER( (uParam0^), uParam2, uParam3, uParam4, uParam5 ))
        {
            if (IS_CONTROL_PRESSED( 0, 6 ))
            {
                if (NOT (( /* MAL_GETACTINTSTATUS */ sub_58753( (uParam0^), uParam1 )) == 3))
                {
                     /* MAL_SETACTINT */ sub_58841( (uParam0^), uParam1, 9999999 );
                }
            }
            else
            {
                 /* MAL_FINISHACTINT */ sub_58918( uParam0, uParam1 );
            }
        }
        else
        {
             /* MAL_FINISHACTINT */ sub_58918( uParam0, uParam1 );
        }
    }
    return;
}

/* MAL_GETACTINTSTATUS */ int sub_58753(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* MAL_SETACTINT */ void sub_58841(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U665 );
    }
    return;
}

/* MAL_FINISHACTINT */ void sub_58918(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_59650(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_12451(  /* PLAYER_PED_ID */ sub_494(), uParam0 );
}

/* P_VIP_EXTRA_CS_ATTACK */ void sub_59712()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_EXTRA_CS_ATTACK - START", 0 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 35.03000000, -62.20000000, -2.02000000,  /* PLAYER_PED_ID */ sub_494(), 3, 1, 1056964608, 0, 1, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_494() );
    CLOSE_SEQUENCE_TASK( uVar2 );
    if (NOT (IS_PED_DEAD( l_U1342[0] )))
    {
        TASK_PERFORM_SEQUENCE( l_U1342[0], uVar2 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_EXTRA_CS_ATTACK - END", 0 );
    return;
}

/* F_IS_PED_ARRAY_DEFEATED */ int sub_60017(unknown uParam0, boolean bParam1)
{
    if (( /* F_HAS_PED_ARRAY_SPAWNED */ sub_11823( uParam0, 0 )) == 1)
    {
        if (NOT bParam1)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_12006( uParam0 )) == 0)
            {
                return 1;
            }
        }
        if (bParam1)
        {
            if (( /* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ sub_60103( uParam0 )) == (uParam0^))
            {
                return 1;
            }
        }
    }
    return 0;
}

/* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ void sub_60103(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

/* P_SPEECH_PLAY_MONOLOGUE */ void sub_60332(unknown uParam0, unknown uParam1)
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_60370( uParam1 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_60479( 0,  /* PLAYER_PED_ID */ sub_494(), "MAX", uParam1, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_60479( 1,  /* PLAYER_PED_ID */ sub_494(), "MAX", uParam1, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_60732( uParam0, uParam1, 8, 1 );
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_60370(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_60479(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_60732(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_60777( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_60777(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_60864( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_60864(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_60916( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_61434( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_60916(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_61434(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_61643(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_12451(  /* PLAYER_PED_ID */ sub_494(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* P_VIP_REINFORCEMENTS_WAVE1_ATTACK */ void sub_61806()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_1 - START", 0 );
     /* P_ACTIVATEPEDARRAY */ sub_40515( ref l_U1372 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() ))) AND (NOT (IS_PED_DEAD( l_U1372[0] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 42.07217000, -53.42815000, -0.63355100, 3, 20000, 0.25000000, 1, 0 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 41.48053000, -53.51945000, -1.03361700, 3, 20000, 0.25000000, 1, 0 );
        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 40.43137000, -55.76455000, -2.05216900,  /* PLAYER_PED_ID */ sub_494(), 3, 1, 1056964608, 0, 1, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_494() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        SET_PED_ALERTNESS( l_U1372[0], 3 );
        CLEAR_PED_TASKS( l_U1372[0] );
        REGISTER_TARGET( l_U1372[0],  /* PLAYER_PED_ID */ sub_494() );
        TASK_PERFORM_SEQUENCE( l_U1372[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
     /* P_TETHERPED */ sub_40793( ref l_U1245[0], l_U1372[0], 1 );
     /* P_TETHERPED */ sub_40793( ref l_U1245[2], l_U1372[0], 1 );
     /* P_TETHERPED */ sub_40793( ref l_U1245[3], l_U1372[0], 1 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_SETUP_REINFORCEMENTS_WAVE_1 - END", 0 );
    return;
}

/* P_VIP_FIRST_CS_REMOVE_TETHERS */ void sub_62955()
{
    int I;

     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_FIRST_CS_REMOVE_TETHERS - START", 0 );
     /* P_REMOVE_TETHERS_FROM_PED_ARRAY */ sub_63052( ref l_U1317 );
     /* P_REMOVE_TETHERS_FROM_PED_ARRAY */ sub_63052( ref l_U1342 );
    for ( I = 0; I < l_U1245; I++ )
    {
         /* P_ADD_TETHER_TO_PED_ARRAY */ sub_45341( ref l_U1317, l_U1245[I], 1 );
         /* P_ADD_TETHER_TO_PED_ARRAY */ sub_45341( ref l_U1342, l_U1245[I], 1 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[0] )))
    {
        SET_PED_COMBAT_RANGE_MAX( l_U1317[0], 15.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U1317[1] )))
    {
        SET_PED_COMBAT_RANGE_MAX( l_U1317[1], 8.00000000 );
    }
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_FIRST_CS_REMOVE_TETHERS - END", 0 );
    return;
}

/* P_REMOVE_TETHERS_FROM_PED_ARRAY */ void sub_63052(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_REMOVEALLTETHERSFROMPED */ sub_63117( (uParam0^)[I] );
    }
    return;
}

/* P_REMOVEALLTETHERSFROMPED */ void sub_63117(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

/* P_VIP_REINFORCEMENTS_WAVE_2_ATTACK */ void sub_63447()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_REINFORCEMENTS_WAVE_2_ATTACK - START", 0 );
     /* P_ACTIVATEPEDARRAY */ sub_40515( ref l_U1401 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_AIM_GUN_AT_PED( 0,  /* PLAYER_PED_ID */ sub_494(), 500, 0 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_SET_BLOCKING_OF_PED_TARGETTING( 0, 0 );
    TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_494() );
    CLOSE_SEQUENCE_TASK( uVar2 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() ))) AND (NOT (IS_PED_DEAD( l_U1401[0] ))))
    {
        SET_PED_ALERTNESS( l_U1401[0], 3 );
        REGISTER_TARGET( l_U1401[0],  /* PLAYER_PED_ID */ sub_494() );
        TASK_PERFORM_SEQUENCE( l_U1401[0], uVar2 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_SET_BLOCKING_OF_PED_TARGETTING( 0, 0 );
    CLOSE_SEQUENCE_TASK( uVar3 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() ))) AND (NOT (IS_PED_DEAD( l_U1401[1] ))))
    {
        SET_PED_ALERTNESS( l_U1401[1], 3 );
        REGISTER_TARGET( l_U1401[1],  /* PLAYER_PED_ID */ sub_494() );
        TASK_PERFORM_SEQUENCE( l_U1401[1], uVar3 );
    }
    CLEAR_SEQUENCE_TASK( uVar3 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_REINFORCEMENTS_WAVE_2_ATTACK - END", 0 );
    return;
}

/* F_VIP_IS_VIG_03_A_BODY_SEARCHER_ON_SCREEN */ int sub_64024()
{
    if (NOT (IS_PED_DEAD( l_U1401[1] )))
    {
        if (IS_PED_ON_SCREEN( l_U1401[1], 1 ))
        {
            return 1;
        }
    }
    return 0;
}

/* P_VIP_VIG_03_A_BODY_SEARCHER_START */ void sub_64190()
{
     /* WRITESCRIPTLOG */ sub_249( "SA", "P_VIP_VIG_03_A_BODY_SEARCHER_START - START", 0 );
     /* MAL_SETACTINT */ sub_58841( l_U1401[1], 47, 1000 );
     /* WRITESCRIPTLOG */ sub_249( "SA", "P_VIP_VIG_03_A_BODY_SEARCHER_START - END", 0 );
    return;
}

/* F_VIP_ARE_VIG_03_A_CIVS_ON_SCREEN */ int sub_64391()
{
    int I;

    if (NOT (IS_PED_DEAD( l_U1401[0] )))
    {
        if (IS_PED_ON_SCREEN( l_U1401[0], 1 ))
        {
            return 1;
        }
    }
    for ( I = 0; I < l_U1748; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1748[I] )))
        {
            if (IS_PED_ON_SCREEN( l_U1748[I], 1 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_VIP_VIG_03_A_CIVS_START */ void sub_64589()
{
    int I;

     /* WRITESCRIPTLOG */ sub_249( "SA", "P_VIP_VIG_03_A_CIVS_START - START", 0 );
     /* MAL_SETACTINT */ sub_58841( l_U1401[0], 47, 1000 );
    for ( I = 0; I < l_U1748; I++ )
    {
         /* MAL_SETACTINT */ sub_58841( l_U1748[I], 47, 1000 );
    }
     /* WRITESCRIPTLOG */ sub_249( "SA", "P_VIP_VIG_03_A_CIVS_START - END", 0 );
    return;
}

/* P_VIP_VIG_03_A_HANDLE_CLEAN_PEDS */ void sub_64809()
{
    int I;

    for ( I = 0; I < l_U1748; I++ )
    {
        if ( /* F_ISPEDINTRIGGERREGION */ sub_64884( ref l_U1756, l_U1748[I], 0 ))
        {
             /* CLEANPED */ sub_5618( l_U1748[I] );
        }
    }
    return;
}

/* F_ISPEDINTRIGGERREGION */ void sub_64884(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if ( /* F_ISPEDINTRIGGERBOX */ sub_12451( uParam1, iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam2) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU552 = 1;
    return Result;
}

/* MAL_REMOVEALLGUNSFROMPED */ void sub_65155(unknown uParam0)
{
     /* MAL_WRITESCRIPTLOG */ sub_65227( "MAL_RemoveAllGunsFromPed started" );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
         /* MAL_WRITESCRIPTLOG */ sub_65227( "MAL_RemoveAllGunsFromPed WEAPONHAND_LEFT" );
         /* WRITE_INT */ sub_35264( GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
        if ((GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
        }
         /* WRITE_INT */ sub_35264( GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
         /* MAL_WRITESCRIPTLOG */ sub_65227( "MAL_RemoveAllGunsFromPed WEAPONHAND_RIGHT" );
         /* WRITE_INT */ sub_35264( GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
        if ((GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
        }
         /* WRITE_INT */ sub_35264( GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
         /* MAL_WRITESCRIPTLOG */ sub_65227( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_PISTOL_LEFT" );
         /* WRITE_INT */ sub_35264( GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
        }
         /* WRITE_INT */ sub_35264( GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
         /* MAL_WRITESCRIPTLOG */ sub_65227( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_PISTOL_RIGHT" );
         /* WRITE_INT */ sub_35264( GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
        }
         /* WRITE_INT */ sub_35264( GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
         /* MAL_WRITESCRIPTLOG */ sub_65227( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_RIFLE" );
         /* WRITE_INT */ sub_35264( GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
        }
         /* WRITE_INT */ sub_35264( GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
    }
     /* MAL_WRITESCRIPTLOG */ sub_65227( "MAL_RemoveAllGunsFromPed ended" );
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_65227(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* MAL_GIVEPEDWEAPON */ void sub_66045(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                 /* MAL_WRITESCRIPTLOG */ sub_65227( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* F_VIP_ARE_VIG_03_B_PEDS_ON_SCREEN */ int sub_66293()
{
    if (IS_SPHERE_VISIBLE( 46.63000000, -42.75000000, 1.48000000, 1.50000000, 1 ))
    {
         /* WRITESCRIPTLOG */ sub_249( "MF", "Peds are on screen", 0 );
        return 1;
    }
    return 0;
}

/* P_VIP_VIG_03_B_START */ void sub_66480()
{
    int I;

     /* WRITESCRIPTLOG */ sub_249( "SA", "P_VIP_VIG_03_B_START - START", 0 );
    for ( I = 0; I < l_U1919; I++ )
    {
         /* F_SIMPLE_PED_CREATE */ sub_66579( ref l_U1919[I] );
    }
    for ( I = 0; I < l_U2133; I++ )
    {
         /* F_SIMPLE_PED_CREATE */ sub_66579( ref l_U2133[I] );
    }
    for ( I = 0; I < l_U1431; I++ )
    {
         /* MAL_SETACTINT */ sub_58841( l_U1431[I], 47, 1000 );
    }
     /* F_SIMPLE_PED_ANIMATE_ARRAY */ sub_66986( ref l_U1919 );
     /* F_SIMPLE_PED_ANIMATE_ARRAY */ sub_66986( ref l_U2133 );
     /* WRITESCRIPTLOG */ sub_249( "SA", "P_VIP_VIG_03_B_START - END", 0 );
    return;
}

/* F_SIMPLE_PED_CREATE */ int sub_66579(int iParam0)
{
    if (iParam0->_fU48 == 1)
    {
        iParam0->_fU24 = CREATE_SIMPLE_PED( iParam0->_fU0, iParam0->_fU8, iParam0->_fU20, iParam0->_fU4 );
        return 1;
        break;
    }
    SCRIPT_ASSERT( "SIMPLE PED STRUCT NOT INITIALIZED! Can Not Create Simple Ped From Unititialized Struct.", 0 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "ERROR: SIMPLE PED STRUCT NOT INITIALIZED! Can Not Create Simple Ped From Unititialized Struct.", 0 );
    return 0;
}

/* F_SIMPLE_PED_ANIMATE_ARRAY */ int sub_66986(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* F_SIMPLE_PED_ANIMATE */ sub_67052( ref (uParam0^)[I], "", "", 0 );
    }
    return 1;
}

/* F_SIMPLE_PED_ANIMATE */ int sub_67052(int iParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    unknown uVar6;
    unknown uVar7;

    if (NOT (IS_STRING_NULL( uParam1 )))
    {
        uVar6 = uParam1;
    }
    else
    {
        uVar6 = iParam0->_fU28;
    }
    if (NOT (IS_STRING_NULL( uParam2 )))
    {
        uVar7 = uParam2;
    }
    else
    {
        uVar7 = iParam0->_fU32;
    }
    if (iParam0->_fU48 == 1)
    {
        PLAY_SIMPLE_PED_ANIM( iParam0->_fU24, uVar7, uVar6, iParam0->_fU36, iParam0->_fU40, iParam0->_fU44 );
        SET_OBJECT_ANIM_CURRENT_TIME( iParam0->_fU24, iParam0->_fU32, iParam0->_fU28, iParam0->_fU36 );
        return 1;
        break;
    }
    if (iParam3 == 1)
    {
        SCRIPT_ASSERT( "SIMPLE PED STRUCT NOT INITIALIZED! Can Not Play Anim From Unititialized Struct.", 0 );
    }
     /* WRITESCRIPTLOG */ sub_249( "MF", "SIMPLE PED STRUCT NOT INITIALIZED! Can Not Play Anim From Unititialized Struct.", 0 );
    return 0;
}

/* P_VIP_VIG_03_C_A_START */ void sub_67563()
{
    int I;

     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_VIG_03_C_A_START - START", 0 );
    for ( I = 0; I < l_U1980; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1980[I] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U1980[I], ref g_U2528 );
        }
    }
     /* MAL_TELEPORTPEDARRAYTOSPAWN */ sub_67719( ref l_U1980, ref l_U1983 );
    for ( I = 0; I < l_U2010; I++ )
    {
         /* F_SIMPLE_PED_CREATE */ sub_66579( ref l_U2010[I] );
    }
    ISEQ_REGISTER_ENTITY( -2129777527, "CIV3", l_U1980[0], 0 );
    ISEQ_REGISTER_ENTITY( -2129777527, "CIV5", l_U1980[1], 0 );
    ISEQ_START( -2129777527 );
     /* F_SIMPLE_PED_ANIMATE_ARRAY */ sub_66986( ref l_U2010 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_VIG_03_C_A_START - END", 0 );
    return;
}

/* MAL_TELEPORTPEDARRAYTOSPAWN */ void sub_67719(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* MAL_TELEPORTPED */ sub_47206( (uParam0^)[I], (uParam1^)[I]._fU0, (uParam1^)[I]._fU12 );
    }
    return;
}

/* P_VIP_VIG_03_C_B_START */ void sub_68031()
{
    int I;

     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_VIG_03_C_B_START - START", 0 );
    for ( I = 0; I < l_U2063; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U2063[I] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U2063[I], ref g_U2520 );
        }
    }
    for ( I = 0; I < l_U2093; I++ )
    {
         /* F_SIMPLE_PED_CREATE */ sub_66579( ref l_U2093[I] );
    }
     /* MAL_TELEPORTPEDARRAYTOSPAWN */ sub_67719( ref l_U2063, ref l_U2066 );
    ISEQ_REGISTER_ENTITY( 1875151350, "CIV4", l_U2063[0], 0 );
    ISEQ_REGISTER_ENTITY( 1875151350, "CIV5", l_U2063[1], 0 );
    ISEQ_START( 1875151350 );
     /* F_SIMPLE_PED_ANIMATE_ARRAY */ sub_66986( ref l_U2093 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_VIG_03_C_B_START - END", 0 );
    return;
}

/* P_VIP_VIG_03_B_PT_2_SETUP */ void sub_68465()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_VIG_03_B_PT_2_SETUP - START", 0 );
     /* TELEPORTPED */ sub_48406( l_U1431[0], 28.16200000, -33.25900000, 0.79300000, -90.00000000 );
     /* TELEPORTPED */ sub_48406( l_U1431[1], 28.66300000, -33.71000000, 0.79300000, -90.00000000 );
    if (NOT (IS_PED_DEAD( l_U1431[0] )))
    {
        ISEQ_REGISTER_ENTITY( -1746599655, "GMED2", l_U1431[0], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1431[1] )))
    {
        ISEQ_REGISTER_ENTITY( -1746599655, "GMED3", l_U1431[1], 0 );
    }
    ISEQ_START( -1746599655 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_VIG_03_B_PT_2_SETUP - END", 0 );
    return;
}

/* P_VIP_REINFORCEMENT_WAVE_3_ATTACK */ void sub_68787()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_REINFORCEMENT_WAVE_3_ATTACK - START", 0 );
     /* P_ACTIVATEPEDARRAY */ sub_40515( ref l_U1431 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, 32.15819000, -32.21772000, 0.80936600,  /* PLAYER_PED_ID */ sub_494(), 1, 1092616192, 1101004800, -1082130432, 3 );
    TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_494() );
    CLOSE_SEQUENCE_TASK( uVar2 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() ))) AND (NOT (IS_PED_DEAD( l_U1431[0] ))))
    {
        REGISTER_TARGET( l_U1431[0],  /* PLAYER_PED_ID */ sub_494() );
        TASK_PERFORM_SEQUENCE( l_U1431[0], uVar2 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, 34.49000000, -34.35000000, -0.10000000,  /* PLAYER_PED_ID */ sub_494(), 1, 1092616192, 1101004800, -1082130432, 3 );
    TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_494() );
    CLOSE_SEQUENCE_TASK( uVar3 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() ))) AND (NOT (IS_PED_DEAD( l_U1431[1] ))))
    {
        REGISTER_TARGET( l_U1431[1],  /* PLAYER_PED_ID */ sub_494() );
        TASK_PERFORM_SEQUENCE( l_U1431[1], uVar3 );
    }
    CLEAR_SEQUENCE_TASK( uVar3 );
     /* P_TETHERPEDARRAY */ sub_42695( ref l_U1252, ref l_U1431, 1 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_VIP_REINFORCEMENT_WAVE_3_ATTACK - END", 0 );
    return;
}

/* P_VIP_HANDLE_REINFORCEMENT_WAVE_3_EMERGENCY_CLEANUP */ void sub_69332()
{
    int I;

    for ( I = 0; I < l_U1431; I++ )
    {
        if ((NOT (IS_PED_ON_SCREEN( l_U1431[I], 1 ))) AND ( /* F_ISPEDINTRIGGERBOX */ sub_12451( l_U1431[I], l_U1039 )))
        {
            DISPLAYF( "Doing emergency cleanup of piVIP_REINFORCEMENT_CS_WAVE_3 {0}", 1, 513, I );
             /* CLEANPED */ sub_5618( l_U1431[I] );
        }
    }
    return;
}

/* F_VIP_CAN_ENABLE_EXPLORATION_ITEMS */ int sub_69576()
{
    if ((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_12006( ref l_U1372 )) > 0) || ((NOT ( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1342, 0 ))) || (NOT ( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1317, 0 )))))
    {
        return 0;
    }
    if ((NOT l_U976._fU64) AND (l_U955._fU64))
    {
        if ((NOT ( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1431, 0 ))) || (NOT ( /* F_IS_PED_ARRAY_DEFEATED */ sub_60017( ref l_U1401, 0 ))))
        {
            return 0;
        }
    }
    return 1;
}

/* F_IS_POI_AVAILABLE */ void sub_69742(int iParam0)
{
    return iParam0->_fU56;
}

/* F_HANDLE_POI */ int sub_69897(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_494() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_12451(  /* PLAYER_PED_ID */ sub_494(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_12451(  /* PLAYER_PED_ID */ sub_494(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_21517( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_21613( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_70794()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_70896( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_20790( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_70982( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_20790( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_494(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_20790( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_70982( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_494(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_494(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_494(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_20790( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_70982( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_494() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_494(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_70982( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* F_HASACTIONBEENPRESSED */ int sub_70794()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* P_ENABLE_POI */ void sub_70896(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_20790( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_20790( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_70982( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_494() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_494(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_70982(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_21517( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ int sub_72344(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND (( /* F_IS_POI_AVAILABLE */ sub_69742( iParam0 )) == 0)))
    {
        if ((( /* F_HASACTIONBEENPRESSED */ sub_70794()) == 1) AND (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_494() )) == 0) AND (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_494() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_494() )) == 0) AND (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_494() )) == 0) AND (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_494() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

/* P_TELEPORT_PLAYER */ void sub_72752(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 =  /* PLAYER_PED_ID */ sub_494();
     /* TELEPORTPED */ sub_48406( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

/* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ int sub_73039()
{
    if (GET_PAYNEKILLER_AMT() > g_U3539)
    {
         /* WRITESCRIPTLOG */ sub_249( "MF", "Player picked up Payne Killers!", 0 );
        PRINTSTRING( "HAD: " );
         /* WRITE_INT */ sub_35264( g_U3539 );
        PRINTSTRING( "NOW: " );
         /* WRITE_INT */ sub_35264( GET_PAYNEKILLER_AMT() );
        g_U3539 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U3539 = GET_PAYNEKILLER_AMT();
    return 0;
}

/* P_CLOSEDOOR */ void sub_73425(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_38897( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_38981( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERREGION */ void sub_73604(int iParam0, unknown uParam1)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam1) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU548 = 1;
    return Result;
}

/* F_GETDOOROPENRATIO */ void sub_73799(int iParam0)
{
    int iVar3;
    float Result;

    if (( /* F_DOESDOOREXIST */ sub_38897( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_38981( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

/* P_SETDOORFORCECLOSE */ void sub_73993(int iParam0, unknown uParam1, unknown uParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_38897( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_38981( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_FORCE_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1, uParam2 );
    return;
}

/* TERMINATEISEQ */ void sub_74113(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* UNLOADANIMDICT */ void sub_74446(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

/* P_CLEANUP_MPM */ void sub_74491()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_CLEANUP_MPM - START", 0 );
     /* TERMINATEISEQ */ sub_74113( -1592279399, 0 );
     /* TERMINATEISEQ */ sub_74113( -74541949, 0 );
     /* TERMINATEISEQ */ sub_74113( 1565939729, 0 );
     /* TERMINATEISEQ */ sub_74113( -456021312, 0 );
     /* TERMINATEISEQ */ sub_74113( -1839811754, 0 );
     /* TERMINATEISEQ */ sub_74113( -1830975032, 0 );
     /* TERMINATEISEQ */ sub_74113( -1577441179, 0 );
     /* TERMINATEISEQ */ sub_74113( -1957067951, 1 );
     /* CLEANPED */ sub_5618( g_U2616 );
     /* CLEANPED */ sub_5618( g_U3515 );
     /* CLEANPEDARRAY */ sub_5707( ref g_U2637 );
     /* CLEANPEDARRAY */ sub_5707( ref g_U2617 );
     /* CLEANPEDARRAY */ sub_5707( ref g_U2619 );
     /* CLEANPEDARRAY */ sub_5707( ref g_U2621 );
     /* CLEANPEDARRAY */ sub_5707( ref g_U2633 );
     /* CLEANPEDARRAY */ sub_5707( ref g_U2625 );
     /* CLEANPEDARRAY */ sub_5707( ref g_U2628 );
     /* CLEANPEDARRAY */ sub_5707( ref g_U2623 );
     /* CLEANPEDARRAY */ sub_5707( ref g_U2631 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_CLEANUP_MPM - END", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_74827(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_3922( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* P_START_CHECKPOINT_THREAD */ void sub_75282(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* F_WHERE_DID_MAX_FAIL */ int sub_76300()
{
     /* WRITESCRIPTLOG */ sub_249( "SP", "F_WHERE_DID_MAX_FAIL", 0 );
    if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U419 )) == 1) || ((( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U398 )) == 1) || ((( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U377 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U356 )) == 1))))
    {
        return 1;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U461 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U440 )) == 1))
    {
        return 2;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U503 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U482 )) == 1))
    {
        return 3;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U545 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U524 )) == 1))
    {
        return 4;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U587 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U566 )) == 1))
    {
        return 5;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U629 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U608 )) == 1))
    {
        return 6;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U671 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U650 )) == 1))
    {
        return 7;
    }
    else if (( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U692 )) == 1)
    {
        return 8;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U734 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U713 )) == 1))
    {
        return 9;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U776 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_59650( l_U755 )) == 1))
    {
        return 10;
    };;;;;;;;;;
    return 0;
}

/* F_VIP_ARE_CS_IN_END_TRIGGER */ int sub_77448()
{
    int I;

    for ( I = 0; I < l_U1401; I++ )
    {
        if ( /* F_ISPEDINTRIGGERBOX */ sub_12451( l_U1401[I], l_U1959 ))
        {
            return 1;
        }
    }
    for ( I = 0; I < l_U1431; I++ )
    {
        if ( /* F_ISPEDINTRIGGERBOX */ sub_12451( l_U1431[I], l_U1959 ))
        {
            return 1;
        }
    }
    return 0;
}

/* F_HANDLE_MID_02_FAIL2 */ int sub_77774()
{
    vector vVar2;
    float fVar5;

    vVar2 = {27.34800000, -64.20100000, -4.61900000};
    fVar5 = -45.00000000;
    switch (l_U37)
    {
        case 0: break;
        case 2:
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail2State = MIDSCENE_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_51915( 1, 0, 0, 1 );
        DO_SCREEN_FADE_OUT( 500 );
        l_U37 = 1;
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail2State = MIDSCENE_FIRST_FRAME", 0 );
        break;
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
             /* TELEPORTPED */ sub_48406(  /* PLAYER_PED_ID */ sub_494(), vVar2, fVar5 );
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_494(), 1, 0 ) )) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() ))))
            {
                REMOVE_PED_WEAPON(  /* PLAYER_PED_ID */ sub_494(), GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_494(), 1, 0 ) );
            }
            ISEQ_REGISTER_ENTITY( -2074831912, "player",  /* PLAYER_PED_ID */ sub_494(), 0 );
            ISEQ_START( -2074831912 );
            l_U37 = 3;
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail2State = MIDSCENE_FIRST_FRAME", 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_DANCEFLOOR1_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        DO_SCREEN_FADE_IN( 500 );
         /* P_FAIL_PLAY_SOLO_MONOLOGUE */ sub_78321();
        l_U37 = 4;
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail2State = MIDSCENE_PLAYING", 0 );
        break;
        case 4:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1727( ref l_U797 )))
        {
            if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_78639()))
            {
                 /* WRITESCRIPTLOG */ sub_249( "MF", "Max is finished talking, starting fade delay timer...", 0 );
                 /* CREATETIMER */ sub_1855( ref l_U797, 800, 1, 0 );
                 /* STARTTIMER */ sub_2003( ref l_U797 );
            }
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_DANCEFLOOR1_CAM" )) - 30)) || ( /* ISTIMERDONE */ sub_2134( ref l_U797 )))
        {
             /* P_IMAGEFX_START_BULLETCAM */ sub_78942( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U37 = 5;
             /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail2State = MIDSCENE_END_FADE", 0 );
        }
        break;
        case 5:
        CAMERA_ANIMATED_STOP( 3000, 0 );
        ISEQ_UNREGISTER_ENTITY( -2074831912, "player" );
        ISEQ_TERMINATE( -2074831912 );
        l_U37 = 0;
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail2State = MIDSCENE_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

/* P_FAIL_PLAY_SOLO_MONOLOGUE */ void sub_78321()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;
    string sVar13;

     /* WRITESCRIPTLOG */ sub_249( "MF", "P_FAIL_PLAY_SOLO_MONOLOGUE - START", 0 );
    iVar12 = GET_RANDOM_INT_IN_RANGE( 0, 3 );
    if (iVar12 == 0)
    {
        sVar13 = "SCLB_MID02A";
    }
    else if (iVar12 == 1)
    {
        sVar13 = "SCLB_MID02D";
    }
    else
    {
        sVar13 = "SCLB_MID02G";
    }
     /* P_SPEECH_PLAY_MONOLOGUE */ sub_60332( sVar13, ref uVar2 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_FAIL_PLAY_SOLO_MONOLOGUE - END", 0 );
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_78639()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* P_IMAGEFX_START_BULLETCAM */ void sub_78942(unknown uParam0, boolean bParam1)
{
    PRINTSTRING( "[CO] P_IMAGEFX_START_BULLETCAM: Starting BulletCam: " );
    PRINTSTRING( uParam0 );
    PRINTNL();
     /* CLEANCAMERA */ sub_3435( ref l_U35 );
    l_U35 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U35, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

/* F_HANDLE_MID_02_FAIL3 */ int sub_79483()
{
    vector vVar2;
    float fVar5;

    vVar2 = {28.24600000, -46.06000000, -1.59500000};
    fVar5 = -45.00000000;
    switch (l_U38)
    {
        case 0: break;
        case 2:
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail3State = MIDSCENE_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_51915( 1, 0, 0, 1 );
        DO_SCREEN_FADE_OUT( 500 );
        l_U38 = 1;
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail3State = MIDSCENE_START_FADE", 0 );
        break;
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
             /* TELEPORTPED */ sub_48406(  /* PLAYER_PED_ID */ sub_494(), vVar2, fVar5 );
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_494(), 1, 0 ) )) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() ))))
            {
                REMOVE_PED_WEAPON(  /* PLAYER_PED_ID */ sub_494(), GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_494(), 1, 0 ) );
            }
            ISEQ_REGISTER_ENTITY( -1239976099, "player",  /* PLAYER_PED_ID */ sub_494(), 0 );
            ISEQ_START( -1239976099 );
            l_U38 = 3;
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail3State = MIDSCENE_FIRST_FRAME", 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_DANCEFLOOR2_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        DO_SCREEN_FADE_IN( 500 );
         /* P_FAIL_PLAY_SOLO_MONOLOGUE */ sub_78321();
        l_U38 = 4;
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail3State = MIDSCENE_PLAYING", 0 );
        break;
        case 4:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1727( ref l_U797 )))
        {
            if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_78639()))
            {
                 /* WRITESCRIPTLOG */ sub_249( "MF", "Max is finished talking, starting fade delay timer...", 0 );
                 /* CREATETIMER */ sub_1855( ref l_U797, 800, 1, 0 );
                 /* STARTTIMER */ sub_2003( ref l_U797 );
            }
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_DANCEFLOOR2_CAM" )) - 100)) || ( /* ISTIMERDONE */ sub_2134( ref l_U797 )))
        {
             /* P_IMAGEFX_START_BULLETCAM */ sub_78942( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U38 = 5;
             /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail3State = MIDSCENE_END_FADE", 0 );
        }
        break;
        case 5:
        CAMERA_ANIMATED_STOP( 3000, 0 );
        ISEQ_UNREGISTER_ENTITY( -1239976099, "player" );
        ISEQ_TERMINATE( -1239976099 );
        l_U38 = 0;
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail3State = MIDSCENE_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

/* F_HANDLE_MID_02_FAIL6 */ int sub_80570()
{
    vector vVar2;
    float fVar5;

    vVar2 = {39.38000000, -65.64700000, -2.00000000};
    fVar5 = -45.00000000;
    switch (l_U41)
    {
        case 0: break;
        case 2:
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail6State = MIDSCENE_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_51915( 1, 0, 0, 1 );
        DO_SCREEN_FADE_OUT( 500 );
        l_U41 = 1;
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail6State = MIDSCENE_START_FADE", 0 );
        break;
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
             /* TELEPORTPED */ sub_48406(  /* PLAYER_PED_ID */ sub_494(), vVar2, fVar5 );
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_494(), 1, 0 ) )) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() ))))
            {
                REMOVE_PED_WEAPON(  /* PLAYER_PED_ID */ sub_494(), GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_494(), 1, 0 ) );
            }
            ISEQ_REGISTER_ENTITY( 996082158, "player",  /* PLAYER_PED_ID */ sub_494(), 0 );
            ISEQ_START( 996082158 );
            l_U41 = 3;
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail6State = MIDSCENE_FIRST_FRAME", 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_LOUNGE_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        DO_SCREEN_FADE_IN( 500 );
         /* P_FAIL_PLAY_SOLO_MONOLOGUE */ sub_78321();
        l_U41 = 4;
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail6State = MIDSCENE_PLAYING", 0 );
        break;
        case 4:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1727( ref l_U797 )))
        {
            if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_78639()))
            {
                 /* WRITESCRIPTLOG */ sub_249( "MF", "Max is finished talking, starting fade delay timer...", 0 );
                 /* CREATETIMER */ sub_1855( ref l_U797, 800, 1, 0 );
                 /* STARTTIMER */ sub_2003( ref l_U797 );
            }
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_LOUNGE_CAM" )) - 100)) || ( /* ISTIMERDONE */ sub_2134( ref l_U797 )))
        {
             /* P_IMAGEFX_START_BULLETCAM */ sub_78942( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U41 = 5;
             /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail6State = MIDSCENE_END_FADE", 0 );
        }
        break;
        case 5:
        CAMERA_ANIMATED_STOP( 3000, 0 );
        ISEQ_UNREGISTER_ENTITY( 996082158, "player" );
        ISEQ_TERMINATE( 996082158 );
        l_U41 = 0;
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail6State = MIDSCENE_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

/* F_HANDLE_MID_02_FAIL9 */ int sub_81647()
{
    vector vVar2;
    float fVar5;

    vVar2 = {40.58800000, -39.50900000, -0.17800000};
    fVar5 = -45.00000000;
    switch (l_U44)
    {
        case 0: break;
        case 2:
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail9State = MIDSCENE_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_51915( 1, 0, 0, 1 );
        DO_SCREEN_FADE_OUT( 500 );
        l_U44 = 1;
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail9State = MIDSCENE_START_FADE", 0 );
        break;
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
             /* TELEPORTPED */ sub_48406(  /* PLAYER_PED_ID */ sub_494(), vVar2, fVar5 );
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_494(), 1, 0 ) )) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_494() ))))
            {
                REMOVE_PED_WEAPON(  /* PLAYER_PED_ID */ sub_494(), GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_494(), 1, 0 ) );
            }
            ISEQ_REGISTER_ENTITY( 277457984, "player",  /* PLAYER_PED_ID */ sub_494(), 0 );
            ISEQ_START( 277457984 );
            l_U44 = 3;
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail9State = MIDSCENE_FIRST_FRAME", 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_PATIO_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        DO_SCREEN_FADE_IN( 500 );
         /* P_FAIL_PLAY_SOLO_MONOLOGUE */ sub_78321();
        l_U44 = 4;
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail9State = MIDSCENE_PLAYING", 0 );
        break;
        case 4:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1727( ref l_U797 )))
        {
            if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_78639()))
            {
                 /* WRITESCRIPTLOG */ sub_249( "MF", "Max is finished talking, starting fade delay timer...", 0 );
                 /* CREATETIMER */ sub_1855( ref l_U797, 800, 1, 0 );
                 /* STARTTIMER */ sub_2003( ref l_U797 );
            }
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_PATIO_CAM" )) - 100)) || ( /* ISTIMERDONE */ sub_2134( ref l_U797 )))
        {
             /* P_IMAGEFX_START_BULLETCAM */ sub_78942( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U44 = 5;
             /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail9State = MIDSCENE_END_FADE", 0 );
        }
        break;
        case 5:
        CAMERA_ANIMATED_STOP( 3000, 0 );
        ISEQ_UNREGISTER_ENTITY( 277457984, "player" );
        ISEQ_TERMINATE( 277457984 );
        l_U44 = 0;
         /* WRITESCRIPTLOG */ sub_249( "SP", "eMid02Fail9State = MIDSCENE_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

/* P_VIP_CLEANUP_LIVING_PEDS */ void sub_82946()
{
    int I;

     /* WRITESCRIPTLOG */ sub_249( "SA", "P_VIP_CLEANUP_LIVING_PEDS - START", 0 );
    for ( I = 0; I < l_U1317; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1317[I] )))
        {
             /* CLEANPED */ sub_5618( l_U1317[I] );
        }
    }
    for ( I = 0; I < l_U1342; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1342[I] )))
        {
             /* CLEANPED */ sub_5618( l_U1342[I] );
        }
    }
    for ( I = 0; I < l_U1372; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1372[I] )))
        {
             /* CLEANPED */ sub_5618( l_U1372[I] );
        }
    }
    for ( I = 0; I < l_U1401; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1401[I] )))
        {
             /* CLEANPED */ sub_5618( l_U1401[I] );
        }
    }
    for ( I = 0; I < l_U1431; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1431[I] )))
        {
             /* CLEANPED */ sub_5618( l_U1431[I] );
        }
    }
     /* WRITESCRIPTLOG */ sub_249( "SA", "P_VIP_CLEANUP_LIVING_PEDS - END", 0 );
    return;
}

/* P_LNG_HANDLE_DEBUG */ void sub_83622()
{
    if (NOT l_U2438)
    {
        START_WIDGET_GROUP( "Script Variable Tuner" );
        ADD_WIDGET_BOOL( "Activate Giovanna Dress Placement Debug", ref l_U2439 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_83780( ref l_U1571, "Giovanna Dress Loc", 0.01000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_83780( ref l_U1574, "Giovanna Dress Rot", 0.10000000 );
        STOP_WIDGET_GROUP();
        l_U2438 = 1;
    }
    if (l_U2439)
    {
        if (DOES_OBJECT_EXIST( l_U1570 ))
        {
            SET_OBJECT_COORDS( l_U1570, l_U1571 );
            SET_OBJECT_ROTATION( l_U1570, l_U1574 );
        }
    }
    return;
}

/* P_ADD_WIDGET_VECTOR_SLIDER */ void sub_83780(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

/* P_RELEASE_VIP_ASSETS */ void sub_84064()
{
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_RELEASE_VIP_ASSETS - START", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74827( g_U2459, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74827( 1208363481, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74827( -1491672653, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74827( g_U2478, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74827( g_U885, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74827( g_U888, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74827( -1043623436, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74827( -398091261, ref g_U1108 );
     /* UNLOADMODEL */ sub_84256( g_U2459 );
     /* UNLOADMODEL */ sub_84256( 1208363481 );
     /* UNLOADMODEL */ sub_84256( -1491672653 );
     /* UNLOADMODEL */ sub_84256( g_U2478 );
     /* UNLOADMODEL */ sub_84256( g_U885 );
     /* UNLOADMODEL */ sub_84256( g_U888 );
     /* UNLOADMODEL */ sub_84256( -1043623436 );
     /* UNLOADMODEL */ sub_84256( -398091261 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_84504( "LEVEL_S_CLUB_CP_01_02", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_84504( "LEVEL_S_CLUB_CP_02", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_84504( "EXPL_CAM", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_84504( "DAM_DEAD", ref g_U1447 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( 816576289, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( -1404259228, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( -1700261605, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( -671715858, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3784( -921546714, ref g_U1350 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_84990( 1194438308, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_84990( 406496141, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_84990( 68019059, ref g_U1301 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_74827( -1409914275, ref g_U1108 );
     /* WRITESCRIPTLOG */ sub_249( "MF", "P_RELEASE_VIP_ASSETS - END", 0 );
    return;
}

/* UNLOADMODEL */ void sub_84256(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_6733( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_84504(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_3922( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_84990(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_3922( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = -1;
    l_U3 = {64536, 64536, 64536};
    l_U15 = 150;
    l_U16 = 0.02000000;
    l_U24 = 0;
    l_U54 = 0;
    l_U236 = {0, 2, -0.50000000};
    l_U239 = 45;
    l_U259 = 0;
    l_U260 = 0;
    l_U261 = 1500;
    l_U272 = 0;
    l_U310 = 0;
    l_U312 = 1;
    l_U313 = 0;
    l_U314 = 0;
    l_U315 = {-10.30000000, -18.21000000, 86.23000000};
    l_U318 = {-10.30000000, -22.14000000, 86.23000000};
    l_U321 = {-7.69000000, -21.94000000, 86.23000000};
    l_U324 = {-10.36000000, -21.94000000, 86.23000000};
    l_U327 = {-7.87000000, -26.38000000, 86.50000000};
    l_U330 = {-10.49000000, -26.38000000, 86.50000000};
    l_U333 = 0;
    l_U334 = 4000;
    l_U335 = -1;
    l_U1204 = 0;
    l_U1205 = 0;
    l_U1206 = 0;
    l_U1207 = 0;
    l_U1392 = 0;
    l_U1467 = 0.00000000;
     /* MAL_WRITESCRIPTLOG */ sub_389( "Script s_club_RS2A.sc is starting up..." );
    l_U310 = 1;
    l_U272 = 0;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_523();
        if (l_U314 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_10824();
        }
        WAIT( 0 );
    }
    SET_EXITFLAG_RESPONSE();
     /* P_CLEANUP_RS2A */ sub_4040( 0 );
     /* P_RELEASE_RS2A_ASSETS */ sub_68150();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_club_RS2A" );
    g_U1096 = 1;
     /* MAL_WRITESCRIPTLOG */ sub_389( "Script s_club_RS2A.sc is terminating..." );
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_389(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* P_HANDLE_FAILURE */ void sub_523()
{
    if ((g_U892 == 9) || ((g_U892 == 8) || (g_U892 == 7)))
    {
        switch (l_U314)
        {
            case 0:
            if (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() ))
            {
                if (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() ))
                {
                     /* P_PLAY_HELI_DEATH_CAM */ sub_763();
                }
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U314 = 1;
                 /* MAL_WRITESCRIPTLOG */ sub_389( "eFailState = FAIL_WAITING_FOR_PLAYER" );
            }
            else if ( /* RESTARTING_CHECKPOINT */ sub_1604())
            {
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U314 = 3;
                 /* MAL_WRITESCRIPTLOG */ sub_389( "eFailState = FAIL_WAITING_FOR_PLAYER" );
            }
            break;
            case 1:
            STOP_SCRIPT_STREAM( g_U2867 );
            if ( /* IS_RESTART_ACTIVE */ sub_2137())
            {
                l_U314 = 3;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_2197( 0 )) == 1)
            {
                l_U314 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() )))
            {
                l_U314 = 3;
                 /* MAL_WRITESCRIPTLOG */ sub_389( "eFailState = FAIL_CLEANUP_ALL" );
            }
            break;
            case 3:
             /* MAL_WRITESCRIPTLOG */ sub_389( "eFailState = FAIL_CLEANUP_ALL" );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_678() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_678(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_640() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_640(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_3723( "CLUB_RS_GIOV2_SCRIPTED_FAIL_FX" );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_3723( "CLUB_RS_GIOV3_SCRIPTED_FAIL_FX" );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_3723( "MISS_DEATH_FAIL_FAST_01A" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
             /* P_CLEANUP_RS2A */ sub_4040( 1 );
             /* P_RS_GLOBALCLEANUP */ sub_5067();
             /* P_RESET_AMBIENT_SPEECH_VARIABLES */ sub_5608();
            if (g_U893[10]._fU36 == 1)
            {
                SET_EXITFLAG_FOR_SCRIPT( g_U893[10]._fU32 );
                 /* P_RESET_CHECKPOINT_THREAD */ sub_5958( ref g_U893[10] );
                g_U1074[10] = 0;
            }
            REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
            l_U314 = 4;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eFailState = FAIL_RESTORE_PLAYER" );
            break;
            case 4:
             /* MAL_WRITESCRIPTLOG */ sub_389( "eFailState = FAIL_RESTORE_PLAYER" );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_6166( ref l_U274,  /* PLAYER_PED_ID */ sub_640() );
            l_U314 = 5;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eFailState = FAIL_RESTART_CHECKPOINT" );
            break;
            case 5:
             /* MAL_WRITESCRIPTLOG */ sub_389( "eFailState = FAIL_RESTART_CHECKPOINT" );
            l_U310 = 1;
            l_U314 = 0;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eFailState = FAIL_IDLE" );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_640()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_678() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_678()
{
    return GET_PLAYER_ID();
}

/* P_PLAY_HELI_DEATH_CAM */ void sub_763()
{
     /* NIS_CREATE_STATIC_CAM */ sub_821( ref l_U205, g_U665, g_U665, l_U239, 5000 );
     /* NIS_PLAY_CAM */ sub_1197( ref l_U205 );
    ATTACH_CAM_TO_PED( l_U205._fU0,  /* PLAYER_PED_ID */ sub_640(), l_U236, 1 );
    POINT_CAM_AT_PED( l_U205._fU0,  /* PLAYER_PED_ID */ sub_640(), g_U665, 1 );
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_821(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_973( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U649, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* CREATETIMER */ void sub_973(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* NIS_PLAY_CAM */ void sub_1197(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    if (iParam0->_fU92 == 1)
    {
        SET_CAM_ACTIVE_WITH_INTERP( iParam0->_fU0, iParam0->_fU120, iParam0->_fU88, iParam0->_fU100, iParam0->_fU104 );
    }
    else
    {
        SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    }
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_1326( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* STARTTIMER */ void sub_1326(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_1604()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_640(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_678(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_678(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_640() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_640(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_2137()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_2197(int iParam0)
{
    iParam0 = 1;
    switch (l_U260)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_2279( ref l_U262 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() )))
            {
                l_U261 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_973( ref l_U262, l_U261, 1, 1 );
             /* STARTTIMER */ sub_1326( ref l_U262 );
        }
        if ( /* ISTIMERDONE */ sub_2431( ref l_U262 ))
        {
             /* WRITESCRIPTLOG */ sub_2641( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_678() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_678(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U260 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U260 = 2;
            }
            else
            {
                l_U260 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_2641( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_3045();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_2641( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_3045();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_2279(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* ISTIMERDONE */ int sub_2431(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* WRITESCRIPTLOG */ void sub_2641(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_3045()
{
     /* WRITESCRIPTLOG */ sub_2641( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_3120( ref l_U262 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_678() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_678(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U259 = 0;
    l_U259 = l_U259;
    l_U260 = 0;
    return;
}

/* RESETTIMER */ void sub_3120(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_IMAGEFX_STOP_BULLETCAM */ void sub_3723(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_2641( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
     /* CLEANCAMERA */ sub_3833( ref l_U273 );
    l_U272 = 1;
    return;
}

/* CLEANCAMERA */ void sub_3833(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* P_CLEANUP_RS2A */ void sub_4040(boolean bParam0)
{
     /* MAL_WRITESCRIPTLOG */ sub_389( "P_CLEANUP_RS2A" );
    if (bParam0)
    {
         /* TERMINATEISEQ */ sub_4102( -1313172978, 1 );
         /* TERMINATEISEQ */ sub_4102( 1476011597, 1 );
         /* TERMINATEISEQ */ sub_4102( -931023773, 1 );
         /* MAL_ES_CLEAN */ sub_4429( ref g_U2822 );
         /* CLEANVEHICLE */ sub_4565( g_U2866 );
         /* MAL_ES_CLEAN */ sub_4429( ref g_U2778 );
        STOP_SCRIPT_STREAM( g_U2867 );
        SET_PLAYER_COMBAT_TIMER_MODE( 1 );
    }
     /* TERMINATEISEQ */ sub_4102( 1996590434, 1 );
     /* TERMINATEISEQ */ sub_4102( -247122877, 1 );
     /* TERMINATEISEQ */ sub_4102( 739943046, 1 );
     /* MAL_ES_CLEAN */ sub_4429( ref l_U800 );
     /* MAL_ESA_CLEAN */ sub_4709( ref l_U844 );
    RESET_PED_MODEL_LOD_DISTANCES( 2145666447 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
     /* P_CLOSEDOOR */ sub_4807( ref l_U1460, 1 );
    return;
}

/* TERMINATEISEQ */ void sub_4102(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* MAL_ES_CLEAN */ void sub_4429(int iParam0)
{
     /* CLEANPED */ sub_4459( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

/* CLEANPED */ void sub_4459(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANVEHICLE */ void sub_4565(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* MAL_ESA_CLEAN */ void sub_4709(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_CLEAN */ sub_4429( ref (uParam0^)[I] );
    }
    return;
}

/* P_CLOSEDOOR */ void sub_4807(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_4833( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_4917( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_4833(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_4917(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_RS_GLOBALCLEANUP */ void sub_5067()
{
     /* MAL_WRITESCRIPTLOG */ sub_389( "P_RS_GlobalCleanup" );
    DETACH_PED( g_U2763, 1 );
    DETACH_PED( g_U2749, 1 );
    DETACH_PED(  /* PLAYER_PED_ID */ sub_640(), 1 );
     /* CLEANPED */ sub_4459( g_U2763 );
     /* CLEANPED */ sub_4459( g_U2749 );
     /* CLEANPED */ sub_4459( g_U2777 );
     /* CLEANVEHICLE */ sub_4565( g_U2866 );
     /* TERMINATEISEQ */ sub_4102( -1313172978, 1 );
     /* TERMINATEISEQ */ sub_4102( -931023773, 1 );
     /* TERMINATEISEQ */ sub_4102( 1476011597, 1 );
     /* MAL_PEDPLAYERACTIONTREENODE */ sub_5292(  /* PLAYER_PED_ID */ sub_640(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
    ENABLE_HIT_DETECTION( 1 );
    ENABLE_LAST_MAN_STANDING( 1 );
    SET_SILHOUETTE_ACTIVE( 1 );
    SET_PLAYER_COMBAT_TIMER_MODE( 0 );
    PLAYER_SET_AIM_MODE( 0 );
    ENABLE_CROSSHAIR( 1 );
    SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_640(), 0 );
    SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_640(), 0, 0, 0, 0, 0 );
    SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_678(), 0, 0 );
    SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_640(), 1 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    SET_PED_CAN_RAGDOLL(  /* PLAYER_PED_ID */ sub_640(), 1 );
    AUDIO_SET_PED_FOOTSTEPS_ON( 1 );
    SET_INSTANT_FIRE_FORCED( 0 );
    RELEASE_PED_ENTITY_SYNC_POINT(  /* PLAYER_PED_ID */ sub_640() );
    SET_PED_USES_ANIMATED_DEATH(  /* PLAYER_PED_ID */ sub_640(), 0 );
    ALLOW_BULLET_CAMERA_CHEAT( 1 );
     /* CLEANOBJECT */ sub_5546( l_U23 );
    return;
}

/* MAL_PEDPLAYERACTIONTREENODE */ void sub_5292(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

/* CLEANOBJECT */ void sub_5546(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* P_RESET_AMBIENT_SPEECH_VARIABLES */ void sub_5608()
{
     /* WRITESCRIPTLOG */ sub_2641( "MF", "P_RESET_AMBIENT_SPEECH_VARIABLES - START", 0 );
     /* DISABLETIMER */ sub_5711( ref l_U65 );
     /* DISABLETIMER */ sub_5711( ref l_U45 );
    l_U43 = STAT_GET_INT( "SP_BULLETS_FIRED_RH" );
    l_U44 = STAT_GET_INT( "SP_BULLETS_HIT_RH" );
     /* DISABLETIMER */ sub_5711( ref l_U25 );
     /* DISABLETIMER */ sub_5711( ref l_U34 );
    l_U74 = 0;
     /* WRITESCRIPTLOG */ sub_2641( "MF", "P_RESET_AMBIENT_SPEECH_VARIABLES - END", 0 );
    return;
}

/* DISABLETIMER */ void sub_5711(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_5958(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_6166(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_2641( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_6385( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_7549( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7863( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8342( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7863( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8342( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7863( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8342( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_8658( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8342( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_8658( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8342( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_9230( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_9432( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_640(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_2641( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_6385(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_6447( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_6447(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_7549(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_7863(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_8267( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_8267(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_8342(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_8658(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_8267( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_9230(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_9432(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_6447( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_9530( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_9530(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_10824()
{
    int iVar2;
    unknown uVar3;

    iVar2 = l_U310;
    switch (l_U310)
    {
        case 0: break;
        case 1:
         /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA" );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_11088();
         /* P_SET_STATIC_DATA */ sub_11426();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U310 = 2;
         /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
        break;
        case 2:
         /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
         /* P_REQUEST_RS2A_PERSISTENT_ASSETS */ sub_12972();
         /* P_REQUEST_RS2A_NONPERSISTENT_ASSETS */ sub_23183();
        l_U310 = 3;
         /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_INITIAL_LOADING_ASSETS" );
        break;
        case 3:
        if (( /* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ sub_29176( ref g_U1903 )) AND (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_28762( ref g_U1350 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_28371( ref g_U1447 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_27969( ref g_U1301 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_27572( ref g_U1108 ))))))
        {
            if ((NOT l_U274._fU0) AND (g_U891 > 6))
            {
                 /* P_SETUP_RS_WEATHER_AND_TOD */ sub_29618();
                l_U312 = 0;
                g_U1094 = 1;
                l_U310 = 4;
                 /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
            }
            else
            {
                l_U310 = 6;
                 /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
            }
        }
        break;
        case 4:
         /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
         /* NIS_PRE_SETUP */ sub_29928( 1, 0, 0, 1 );
        REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_30144( ref l_U274 )))
        {
             /* F_GIVEPEDWEAPON */ sub_8658(  /* PLAYER_PED_ID */ sub_640(), 354276007, 25000, 0, 0 );
            l_U310 = 5;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS" );
        }
        else
        {
            l_U310 = 6;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 0, 0 ) ))
            {
                if (g_U891 == 7)
                {
                    g_U892 = 7;
                     /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_30613( ref l_U274, g_U892,  /* PLAYER_PED_ID */ sub_640(), g_U2216[7], g_U2331[7], g_U2370[7], g_U2409[7], 0 );
                }
                else if (g_U891 == 8)
                {
                    g_U892 = 8;
                     /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_30613( ref l_U274, g_U892,  /* PLAYER_PED_ID */ sub_640(), g_U2216[7], g_U2331[7], g_U2370[7], g_U2409[7], 0 );
                }
                else if (g_U891 == 9)
                {
                    g_U892 = 9;
                     /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_30613( ref l_U274, g_U892,  /* PLAYER_PED_ID */ sub_640(), g_U2216[7], g_U2331[7], g_U2370[7], g_U2409[7], 0 );
                };;;
                l_U310 = 6;
                 /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
            }
        }
        break;
        case 6:
        if (l_U311 == 1)
        {
            l_U1203 = 1;
        }
        if (g_U1094)
        {
            if ( /* F_SETUP_GAMEPLAY */ sub_35451())
            {
                 /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U791, 500 );
                if (g_U892 < 7)
                {
                    g_U892 = 7;
                }
                if (NOT l_U312)
                {
                    if (g_U892 == 7)
                    {
                         /* P_SETUP_HELI */ sub_43420( 69, 0, 7169.00000000 );
                         /* P_SETUP_GIOVANNA */ sub_44665( 24.57800000, -25.48600000, 86.65900000, 94.25100000, 1996590434, "giovanna", 0 );
                    }
                    else if (g_U892 == 8)
                    {
                         /* P_SETUP_HELI */ sub_43420( 156, 1065353216, 0 );
                         /* P_SETUP_GIOVANNA */ sub_44665( 19.63835000, -25.15502000, 86.22796000, 85.58800000, -247122877, "giovanna", 0 );
                    }
                    else if (g_U892 == 9)
                    {
                         /* P_SETUP_HELI */ sub_43420( 72, 1065353216, 0 );
                         /* P_SETUP_GIOVANNA */ sub_44665( -9.37000000, -23.97800000, 86.26500000, 177.00000000, 739943046, "giovanna", 0 );
                        l_U1467 = 3.00000000;
                    };;;
                     /* P_SETUP_PLAYER */ sub_45475( -1313172978, "heli_max" );
                     /* P_SETUP_PASSOS_AND_MARCELLO */ sub_46107();
                }
                if (l_U312)
                {
                    l_U312 = 0;
                    l_U313 = 1;
                    l_U310 = 7;
                     /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_MID09" );
                }
                else
                {
                    WAIT( 20 );
                    l_U310 = 8;
                     /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_INTRO" );
                }
            }
        }
        break;
        case 7:
        if (l_U311)
        {
             /* CUTSYS_CREATESTANDALONECUTSCENE */ sub_48138( ref l_U1208, "MID_09_NC_concat", 46863, 46916, 47831, 48081, 250, 1 );
            l_U1208._fU64 = 0;
            l_U1208._fU4 = 2;
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_48774( ref l_U1208 ))
        {
            l_U310 = 8;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_INTRO" );
        }
        break;
        case 8:
        if (g_U892 == 7)
        {
            if (NOT l_U274._fU0)
            {
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_30613( ref l_U274, g_U892,  /* PLAYER_PED_ID */ sub_640(), g_U2216[7], g_U2331[7], g_U2370[7], g_U2409[7], l_U313 );
            }
            l_U313 = 0;
            l_U310 = 9;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_GAMEPLAY_2A" );
        }
        else if (g_U892 == 8)
        {
            l_U310 = 11;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_GAMEPLAY_2B" );
        }
        else if (g_U892 == 9)
        {
            l_U310 = 13;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_GAMEPLAY_2C" );
        };;;
         /* P_START_GAMEPLAY */ sub_51116();
         /* NIS_POST_SETUP */ sub_50419( 1, 1 );
        if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_51619()))
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        break;
        case 9:
        if (l_U311)
        {
             /* MAL_ESA_VISIBLE */ sub_39981( ref l_U844, 0, 0, -1 );
            UNPAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            SET_PLAYBACK_SPEED( g_U2866, 1.00000000 );
             /* STARTTIMER */ sub_1326( ref l_U1244 );
             /* P_RS_CONTROLS */ sub_51933();
            CAMERA_CLEAR_POINT_AT_TARGET();
            if (l_U312)
            {
                 /* WRITESCRIPTLOG */ sub_2641( "MF", "Playing Music Cue: 6.3", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_2_4", "NIGHTCLUB_01_2_4", 0, 0, 15000, -1082130432, 0 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_2641( "MF", "Playing Music Cue: 6.4", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_2_4", "NIGHTCLUB_01_2_4", 0, 0, 0, -1082130432, 0 );
            }
        }
         /* P_MAKEHELIENGINESFUCKINGTURN */ sub_47980();
         /* P_RS_HANDLE_CAM_SHAKE */ sub_52316();
         /* P_RS_HANDLE_GIOVANNA_SCREAMS_TO_BEING_SHOT_AT */ sub_52541();
        if ( /* ISTIMERDONE */ sub_2431( ref l_U1244 ))
        {
             /* P_RS_SPEECH_GVNSC1 */ sub_52683();
            l_U74 = 1;
             /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U1235, 1000 );
        }
        if ( /* ISTIMERDONE */ sub_2431( ref l_U1235 ))
        {
            if (NOT (IS_BULLET_TIME_ACTIVE( 1 )))
            {
                 /* P_RSDIAG_GIOVANNAINIMMEDIATEDANGER */ sub_54160();
            }
        }
        if ((GET_SCRIPT_STREAM_STATE( "S_CLUB_HELI_RS_STREAM", g_U2867 )) == 2)
        {
             /* WRITESCRIPTLOG */ sub_2641( "MF", "STARTING HELICOPTER AUDIO", 0 );
            PLAY_SCRIPT_STREAM_FROM_VEHICLE( g_U2866, g_U2867 );
        }
        if (NOT l_U1204)
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                if ((GET_TIME_POSITION_IN_RECORDING( g_U2866 )) >= 15451.00000000)
                {
                    l_U1204 = 1;
                     /* MAL_WRITESCRIPTLOG */ sub_389( "Pausing the vehicle recording." );
                    PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
                }
            }
        }
        if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND ( /* MAL_ES_ISACTINTCOMPLETED */ sub_54534( ref l_U800, 47, 1 )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_678(), 0, 0 );
            l_U310 = 14;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_FAIL_2A" );
            break;
        }
        if (IS_PED_DEAD( g_U2777 ))
        {
            l_U310 = 18;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_SHOT_GIOVANNA" );
            break;
        }
        if (IS_PED_DEAD( l_U800._fU0 ))
        {
            l_U310 = 10;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_TRANSITION1" );
            break;
        }
        break;
        case 10:
        if (l_U311)
        {
             /* NIS_PRE_SETUP */ sub_29928( 1, 0, 0, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U1402, 1000 );
        }
        if ( /* ISTIMERDONE */ sub_2431( ref l_U1402 ))
        {
             /* TERMINATEISEQ */ sub_4102( 1996590434, 1 );
             /* MAL_REGISTERPEDWITHISEQ */ sub_38866( g_U2777, -247122877, "giovanna" );
            ISEQ_START( -247122877 );
            WAIT( 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_07", "VIG_14_NC_GIOV_P2_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
             /* MAL_TELEPORTPED */ sub_51402( g_U2777, 18.95540000, -24.83710000, 86.22793000, 85.58799000 );
             /* P_START_VEHICLE_PLAYBACK */ sub_44092( g_U2866, 156, 0, 3861.60000000, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2370[8], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2409[8], 1065353216, 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
             /* P_RS_SPEECH_GVNSC1 */ sub_52683();
            PLAY_IMAGEFX( "TRIPLE_INTERLACE_HOLD_HARD", 4, 1 );
            PLAY_IMAGEFX( "FLASH_WHITE_2", 4, 1 );
        }
        if (l_U1402._fU16)
        {
            if (NOT IS_ANIMATED_CAMERA_PLAYING())
            {
                l_U310 = 11;
                 /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_GAMEPLAY_2B" );
                break;
            }
        }
        break;
        case 11:
        if (l_U311)
        {
             /* P_START_VEHICLE_PLAYBACK */ sub_44092( g_U2866, 156, 0.80000000, 3861.60000000, 0 );
             /* NIS_POST_SETUP */ sub_50419( 1, 1 );
            if (g_U892 != 8)
            {
                g_U892 = 8;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_30613( ref l_U274, g_U892,  /* PLAYER_PED_ID */ sub_640(), g_U2216[7], g_U2331[7], g_U2370[7], g_U2409[7], 1 );
            }
             /* P_RS_CONTROLS */ sub_51933();
            if (NOT (IS_PED_DEAD( l_U800._fU0 )))
            {
                 /* P_KILL_PED */ sub_55546( l_U800._fU0 );
            }
            ENABLE_HIT_DETECTION( 0 );
            ENABLE_LAST_MAN_STANDING( 0 );
             /* P_RESET_AMBIENT_SPEECH_VARIABLES */ sub_5608();
             /* WRITESCRIPTLOG */ sub_2641( "MF", "Playing Music Cue: 6.5", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_2_4", "NIGHTCLUB_01_2_4", 0, -1, -1, -1082130432, 0 );
             /* RESETTIMER */ sub_3120( ref l_U1235 );
        }
        if ((GET_SCRIPT_STREAM_STATE( "S_CLUB_HELI_RS_STREAM", g_U2867 )) == 2)
        {
             /* WRITESCRIPTLOG */ sub_2641( "MF", "STARTING HELICOPTER AUDIO", 0 );
            PLAY_SCRIPT_STREAM_FROM_VEHICLE( g_U2866, g_U2867 );
        }
         /* P_MAKEHELIENGINESFUCKINGTURN */ sub_47980();
         /* P_RS_HANDLE_CAM_SHAKE */ sub_52316();
        if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_55874()))
        {
             /* P_RS_HANDLE_PLAYER_RELOAD_DIALOGUE */ sub_55974();
             /* P_RS_SPEECH_MAX_RESPONDS */ sub_56336();
        }
         /* P_RS_HANDLE_GIOVANNA_SCREAMS_TO_BEING_SHOT_AT */ sub_52541();
         /* MAL_ESA_ZHEIGHTCHECK */ sub_56640( ref l_U844, 85, 1, 0 );
        if ((l_U335 > -1) AND ( /* ISTIMERDONE */ sub_2431( ref l_U1235 )))
        {
            if (NOT (IS_BULLET_TIME_ACTIVE( 1 )))
            {
                if (NOT (IS_PED_DEAD( l_U844[l_U335]._fU0 )))
                {
                    if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) < 55)
                    {
                         /* P_RSDIAG_GIOVANNAINIMMEDIATEDANGER */ sub_54160();
                    }
                    else
                    {
                         /* P_RS_SPEECH_HRGC */ sub_56937();
                         /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U1393, 500 );
                    }
                }
            }
        }
        if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_57182( l_U85 )))
        {
            if ( /* ISTIMERDONE */ sub_2431( ref l_U1393 ))
            {
                SET_RANDOM_SEED( TIMERA() );
                if ((GET_RANDOM_FLOAT_IN_RANGE( 0, 100 )) < 15)
                {
                     /* P_RS_SPEECH_HRPYM */ sub_57455();
                }
                else if ((GET_RANDOM_FLOAT_IN_RANGE( 0, 100 )) < 15)
                {
                     /* P_RS_SPEECH_VIG_10 */ sub_56387();
                }
            }
        }
        if (NOT l_U1205)
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                if ((GET_TIME_POSITION_IN_RECORDING( g_U2866 )) >= 14478.00000000)
                {
                    l_U1205 = 1;
                     /* MAL_WRITESCRIPTLOG */ sub_389( "Pausing the vehicle recording." );
                    PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
                }
            }
        }
        if ( /* MAL_ISACTINTCOMPLETED */ sub_57832( ref g_U2777, 47, 1 ))
        {
             /* MAL_FREEZEPED */ sub_57922( ref g_U2777, 1 );
        }
        if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_57988( ref l_U844 )) < 1)
        {
            l_U310 = 12;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_TRANSITION2" );
            break;
        }
        if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_58162( ref l_U526, g_U2777, 0 ))
        {
            ENABLE_HIT_DETECTION( 0 );
            ENABLE_LAST_MAN_STANDING( 0 );
        }
        if (l_U526._fU68)
        {
            if ( /* F_R2B_HANDLE_GAMEPLAY */ sub_58388())
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_678(), 0, 0 );
                l_U310 = 15;
                break;
            }
        }
        if (IS_PED_DEAD( g_U2777 ))
        {
            l_U310 = 18;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_SHOT_GIOVANNA" );
            break;
        }
        if (l_U336[2]._fU80 != 0)
        {
            if ( /* F_ISPEDINTRIGGERBOX */ sub_58232( l_U844[2]._fU0, l_U1468 ))
            {
                if ( /* ISTIMERDONE */ sub_2431( ref l_U1489 ))
                {
                    SCRIPT_ASSERT( "HACK TO KILL CS IN MONSTER CLOSET.  THIS SHOULDN'T OCCUR!!!", 0 );
                     /* WRITESCRIPTLOG */ sub_2641( "MF", "HACK TO KILL CS IN MONSTER CLOSET.  THIS SHOULDN'T OCCUR!!!", 0 );
                     /* CLEANPED */ sub_4459( l_U844[2]._fU0 );
                }
            }
        }
        break;
        case 12:
        if (l_U311)
        {
             /* NIS_PRE_SETUP */ sub_29928( 1, 0, 0, 1 );
             /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U1411, 1000 );
             /* NIS_CREATE_STATIC_CAM */ sub_821( ref l_U1420, -10.61000000, -25.36000000, 86.45000000, 10.98000000, 0.00000000, -20.18000000, 45, 1500 );
        }
        if ( /* ISTIMERDONE */ sub_2431( ref l_U1411 ))
        {
             /* WRITESCRIPTLOG */ sub_2641( "CO", "Playing IMAGEFX ", 0 );
            PLAY_IMAGEFX( "FLASH_GREEN_BLUE_DOUBLE", 4, 1 );
            PLAY_IMAGEFX( "EXTRA_LAYER_TINT_INTERLACE", 4, 1 );
             /* TERMINATEISEQ */ sub_4102( -247122877, 1 );
             /* MAL_REGISTERPEDWITHISEQ */ sub_38866( g_U2777, 739943046, "giovanna" );
             /* MAL_FREEZEPED */ sub_57922( ref g_U2777, 0 );
            ISEQ_START( 739943046 );
            WAIT( 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_07", "VIG_15_NC_GMED_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
             /* MAL_TELEPORTPED */ sub_51402( g_U2777, -9.37000000, -23.97800000, 86.26500000, 173.00000000 );
             /* MAL_ES_TELEPORTTOSPAWN */ sub_39807( g_U2778 );
             /* P_START_CHECKPOINT_THREAD */ sub_63691( ref g_U893[10] );
            l_U1467 = 4.00000000;
             /* P_START_VEHICLE_PLAYBACK */ sub_44092( g_U2866, 72, 0, 0.00000000, 0 );
            CAMERA_SNAP_POINT_AT_COORD( -10.86000000, -19.26000000, 87.97000000 );
        }
        if (l_U1411._fU16)
        {
            if (NOT IS_ANIMATED_CAMERA_PLAYING())
            {
                l_U310 = 13;
                 /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_GAMEPLAY_2C" );
                break;
            }
        }
        break;
        case 13:
        if (l_U311)
        {
             /* P_START_VEHICLE_PLAYBACK */ sub_44092( g_U2866, 72, l_U1467, 0.00000000, 0 );
             /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_63930( 0, 0, 0, -859915232, -859915232, 0 );
             /* NIS_POST_SETUP */ sub_50419( 1, 1 );
             /* P_RS_CONTROLS */ sub_51933();
             /* MAL_ES_FREEZE */ sub_38695( ref g_U2778, 0 );
            if (g_U892 != 9)
            {
                g_U892 = 9;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_30613( ref l_U274, g_U892,  /* PLAYER_PED_ID */ sub_640(), g_U2216[7], g_U2331[7], g_U2370[7], g_U2409[7], 1 );
            }
            if (NOT g_U893[10]._fU36)
            {
                 /* P_START_CHECKPOINT_THREAD */ sub_63691( ref g_U893[10] );
            }
             /* MAL_SETACTINT */ sub_64188(  /* PLAYER_PED_ID */ sub_640(), 52, -1 );
            SET_PED_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_640(), g_U2777 );
             /* STARTTIMER */ sub_1326( ref l_U1451 );
            if (l_U1411._fU16)
            {
                 /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U1235, 2700 );
                 /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U1244, 3400 );
            }
            else
            {
                 /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U1235, 5000 );
                 /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U1244, 6000 );
            }
             /* WRITESCRIPTLOG */ sub_2641( "MF", "Playing Music Cue: 6.5", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_2_4", "NIGHTCLUB_01_2_4", 0, -1, -1, -1082130432, 0 );
            CAMERA_CLEAR_POINT_AT_TARGET();
        }
         /* P_MAKEHELIENGINESFUCKINGTURN */ sub_47980();
         /* P_RS_HANDLE_CAM_SHAKE */ sub_52316();
        if ( /* ISTIMERDONE */ sub_2431( ref l_U1235 ))
        {
            if (NOT (IS_BULLET_TIME_ACTIVE( 1 )))
            {
                 /* P_RSDIAG_GIOVANNAINIMMEDIATEDANGER */ sub_54160();
            }
        }
        if ( /* ISTIMERDONE */ sub_2431( ref l_U1244 ))
        {
             /* P_RS_SPEECH_GVNSC1 */ sub_52683();
            l_U74 = 1;
        }
        if ((GET_SCRIPT_STREAM_STATE( "S_CLUB_HELI_RS_STREAM", g_U2867 )) == 2)
        {
             /* WRITESCRIPTLOG */ sub_2641( "MF", "STARTING HELICOPTER AUDIO", 0 );
            PLAY_SCRIPT_STREAM_FROM_VEHICLE( g_U2866, g_U2867 );
        }
        if ( /* ISTIMERDONE */ sub_2431( ref l_U1451 ))
        {
             /* WRITESCRIPTLOG */ sub_2641( "MF", "Clearing player looking at Giovanna and finishing ACT_INT_SEQ_ACTION06", 0 );
            CLEAR_PED_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_640() );
            PED_FINISH_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_640(), 52 );
            SET_PLAYER_COMBAT_TIMER_MODE( 5 );
        }
        if (NOT l_U1206)
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                if ((GET_TIME_POSITION_IN_RECORDING( g_U2866 )) >= 18209.00000000)
                {
                    l_U1206 = 1;
                     /* MAL_WRITESCRIPTLOG */ sub_389( "Pausing the vehicle recording." );
                    PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
                }
            }
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            if ( /* MAL_ISACTINTCOMPLETED */ sub_57832( ref g_U2778._fU0, 47, 1 ))
            {
                 /* MAL_ES_INVINCIBLE */ sub_61758( ref g_U2778, 1 );
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_678(), 0, 0 );
                l_U310 = 16;
                break;
            }
        }
        if (IS_PED_DEAD( g_U2777 ))
        {
            l_U310 = 18;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_SHOT_GIOVANNA" );
            break;
        }
        if (IS_PED_DEAD( g_U2778._fU0 ))
        {
            SET_PLAYER_COMBAT_TIMER_MODE( 1 );
            l_U310 = 17;
             /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_OUTRO" );
            break;
        }
        break;
        case 18:
        if (l_U311)
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            l_U310 = 0;
            l_U314 = 1;
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        break;
        case 14:
        if (l_U311)
        {
             /* NIS_PRE_SETUP */ sub_29928( 1, 0, 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
            SET_PED_GORE( g_U2777, 1 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 0 );
            SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
             /* NIS_CREATE_STATIC_CAM */ sub_821( ref l_U1293, 18.57000000, -24.78000000, 86.30000000, 27.98000000, 0.00000000, -141.96000000, 1110704128, 1000 );
             /* NIS_PLAY_CAM */ sub_1197( ref l_U1293 );
             /* P_IMAGEFX_START_BULLETCAM */ sub_65361( "CLUB_RS_GIOV2_SCRIPTED_FAIL_FX", 0 );
             /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U1324, 150 );
            SHAKE_CAM( l_U1293._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_65681(), 0.25000000 );
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 0, 0 ), 13, 0 );
        }
        if ( /* ISTIMERDONE */ sub_2431( ref l_U1324 ))
        {
             /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U1333, 1150 );
            SET_PED_SHOOTS_AT_COORD( l_U800._fU0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2777, 65488, 0, 0, 0 ) );
            SHAKE_CAM( l_U1293._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
        }
        if ( /* ISTIMERDONE */ sub_2431( ref l_U1333 ))
        {
            SHAKE_CAM( l_U1293._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_65681(), 0.03000000 );
            l_U310 = 0;
            l_U314 = 1;
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        break;
        case 15:
        if (l_U311)
        {
             /* NIS_PRE_SETUP */ sub_29928( 1, 0, 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
            l_U1391 = l_U844[l_U335]._fU0;
            if ( /* F_ISPEDINTRIGGERBOX */ sub_58232( l_U1391, l_U547[0] ))
            {
                l_U1392 = 1;
            }
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 0, 0 ), 13, 0 );
             /* MAL_ESA_STANDSTILL */ sub_66065( ref l_U844 );
            if (l_U1392)
            {
                 /* MAL_TELEPORTPED */ sub_51402( l_U1391, -10.47509000, -21.46595000, 86.23022000, 205.50000000 );
                 /* NIS_CREATE_STATIC_CAM */ sub_821( ref l_U1342, -12.51000000, -20.85000000, 87.04000000, 1.28000000, 0.00000000, -116.10000000, 1110704128, 1000 );
            }
            else
            {
                 /* MAL_TELEPORTPED */ sub_51402( l_U1391, -10.60357000, -26.32164000, 86.22892000, 335.60000000 );
                 /* NIS_CREATE_STATIC_CAM */ sub_821( ref l_U1342, -9.20000000, -27.67000000, 86.45000000, 18.97000000, 0.00000000, 22.06000000, 1110704128, 1000 );
            }
             /* NIS_PLAY_CAM */ sub_1197( ref l_U1342 );
             /* P_IMAGEFX_START_BULLETCAM */ sub_65361( "CLUB_RS_GIOV3_SCRIPTED_FAIL_FX", 0 );
            SHAKE_CAM( l_U1342._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_65681(), 0.25000000 );
            SET_PED_GORE( g_U2777, 1 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 0 );
            SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
            FREEZE_PED_POSITION( g_U2777, 0 );
             /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_58895( ref l_U1391, g_U2777 );
             /* MAL_AIMGUNATPED */ sub_66472( l_U1391, g_U2777, -1, 0 );
            SET_PED_CONSUMING_AMMO( l_U1391, 0 );
             /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U1373, 750 );
        }
        if ( /* ISTIMERDONE */ sub_2431( ref l_U1373 ))
        {
            OPEN_SEQUENCE_TASK( ref uVar3 );
            TASK_SHOOT_AT_PED( 0, g_U2777, 2000, 0, 1, 0, 0 );
            TASK_AIM_GUN_AT_PED( 0, g_U2777, -1, 0 );
            CLOSE_SEQUENCE_TASK( uVar3 );
            if (NOT (IS_PED_DEAD( l_U1391 )))
            {
                TASK_PERFORM_SEQUENCE( l_U1391, uVar3 );
            }
        }
        if ((NOT l_U1382._fU20) AND ((NOT l_U1382._fU16) AND (IS_PED_DEAD( g_U2777 ))))
        {
             /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U1382, 1000 );
            SHAKE_CAM( l_U1342._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
        }
        if ( /* ISTIMERDONE */ sub_2431( ref l_U1382 ))
        {
            SHAKE_CAM( l_U1342._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_65681(), 0.03000000 );
            l_U310 = 0;
            l_U314 = 1;
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        break;
        case 16:
        if (l_U311)
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
             /* MAL_PEDPLAYERACTIONTREENODE */ sub_5292( g_U2778._fU0, "/Global/S_CLUB_VIG_15_NC/SEQ_START/GMED/FAIL_SEQUENCE/KILL" );
             /* MAL_PEDPLAYERACTIONTREENODE */ sub_5292( g_U2777, "/Global/S_CLUB_VIG_15_NC/SEQ_START/GIO/FAIL_SEQUENCE/DIE" );
            WAIT( 0 );
             /* MAL_TELEPORTPED */ sub_51402( g_U2778._fU0, -11.39418000, -7.74573000, 86.23011000, 180.00000000 );
             /* MAL_TELEPORTPED */ sub_51402( g_U2777, -11.26953000, -9.30000000, 86.23022000, 5.00000000 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 0 );
            SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
             /* NIS_CREATE_STATIC_CAM */ sub_821( ref l_U1262, -11.02000000, -11.03000000, 87.41000000, 2.30000000, 0.00000000, 16.01000000, 1110704128, 1000 );
             /* NIS_PLAY_CAM */ sub_1197( ref l_U1262 );
             /* NIS_PRE_SETUP */ sub_29928( 1, 0, 0, 1 );
            SHAKE_CAM( l_U1262._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_65681(), 0.25000000 );
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 0, 0 ), 13, 0 );
        }
        if ( /* MAL_ISACTINTCOMPLETED */ sub_57832( ref g_U2778._fU0, 48, 1 ))
        {
            SET_PED_SHOOTS_AT_COORD( g_U2778._fU0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2777, 65488, 0, 0, 0 ) );
            SHAKE_CAM( l_U1262._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        if ( /* MAL_ISACTINTCOMPLETED */ sub_57832( ref g_U2778._fU0, 49, 1 ))
        {
             /* P_IMAGEFX_START_BULLETCAM */ sub_65361( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U314 = 1;
            l_U310 = 0;
        }
        break;
        case 17:
        if (l_U311)
        {
            g_U1074[10] = 1;
        }
        if (g_U1095)
        {
            l_U310 = 19;
        }
        break;
        case 19:
         /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_FINISHED" );
         /* P_GBL_SAVE_RS2A_DEAD_BODY */ sub_67479( ref l_U800 );
         /* P_GBL_SAVE_RS2B_DEAD_BODIES */ sub_67604( ref l_U844 );
         /* P_GBL_SAVE_RS2C_DEAD_BODY */ sub_67906( ref g_U2778 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U310 = 0;
         /* MAL_WRITESCRIPTLOG */ sub_389( "eCheckpointState = CP_IDLE" );
        break;
    }
    if (l_U310 != iVar2)
    {
        l_U311 = 1;
    }
    else
    {
        l_U311 = 0;
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_11088()
{
     /* MAL_WRITESCRIPTLOG */ sub_389( "P_INITIALIZE_SCRIPT_DATA" );
    l_U311 = 1;
     /* CREATETIMER */ sub_973( ref l_U773, 785, 1, 0 );
    l_U333 = 0;
     /* CREATETIMER */ sub_973( ref l_U782, 3000, 1, 0 );
    l_U334 = 4000;
    l_U335 = -1;
    l_U1204 = 0;
    l_U1205 = 0;
    l_U1206 = 0;
    l_U1207 = 0;
    l_U1392 = 0;
     /* CREATETIMER */ sub_973( ref l_U1333, 666, 1, 0 );
     /* CREATETIMER */ sub_973( ref l_U1324, 666, 1, 0 );
     /* CREATETIMER */ sub_973( ref l_U1373, 666, 1, 0 );
     /* CREATETIMER */ sub_973( ref l_U1382, 666, 1, 0 );
     /* CREATETIMER */ sub_973( ref l_U1244, 1700, 1, 0 );
    if (g_U892 == 9)
    {
         /* CREATETIMER */ sub_973( ref l_U1451, 4500, 1, 0 );
    }
    else
    {
         /* CREATETIMER */ sub_973( ref l_U1451, 2500, 1, 0 );
    }
     /* CREATETIMER */ sub_973( ref l_U1235, 1000, 1, 0 );
     /* CREATETIMER */ sub_973( ref l_U1489, 5000, 1, 0 );
     /* CREATETIMER */ sub_973( ref l_U1253, 4000, 1, 0 );
     /* CREATETIMER */ sub_973( ref l_U1393, 5000, 1, 0 );
    l_U1203 = 0;
    return;
}

/* P_SET_STATIC_DATA */ void sub_11426()
{
     /* MAL_WRITESCRIPTLOG */ sub_389( "P_SET_STATIC_DATA" );
     /* P_CREATETRIGGERBOX */ sub_11561( ref l_U505, "TRIG_KILL_GIO_STOP_OTHERS", -10.15000000, -22.08000000, 86.41000000, 8.71000000, 11.89000000, 2.95000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11561( ref l_U526, "TRIGGER_START_R2B", 11.85000000, -24.36000000, 86.23000000, 8.49000000, 12.63000000, 3.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11561( ref l_U547[0], "TRIG_KILL_GIO_LEFT", -10.15000000, -21.79000000, 86.41000000, 4.10000000, 4.25000000, 2.95000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11561( ref l_U547[1], "TRIG_KILL_GIO_RIGHT", -10.17000000, -25.75000000, 86.41000000, 4.10000000, 3.76000000, 2.95000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11561( ref l_U547[2], "TRIG_KILL_GIO_BOTTOM", -10.23000000, -20.34000000, 86.41000000, 2.13000000, 3.39000000, 2.95000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERREGION */ sub_11993( ref l_U611, ref l_U547 );
     /* P_CREATETRIGGERBOX */ sub_11561( ref l_U1468, "HACK TO KILL CS IF THEY DON'T LEAVE MONSTER CLOSET", 20.99000000, -34.05000000, 86.23000000, 5.87000000, 6.57000000, 3.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11561( ref l_U752, "TRIG_RS2B_Dialogue1", 21.76000000, -28.50000000, 86.19000000, 3.00000000, 3.00000000, 2.96000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEDOORSTRUCT */ sub_12526( ref l_U1460, -2113982500, -12.48665000, -4.96388000, 87.33427000, 0.00000000, 0.00000000, -3.05000000 );
    l_U17[0] = 1037546172;
    l_U17[1] = g_U2453;
    l_U17[2] = 1049690760;
    l_U17[3] = 123419661;
    l_U17[4] = 230799837;
    SET_PED_MODEL_LOD_DISTANCES( 2145666447, 10.00000000, 80.00000000 );
     /* SETUP_SCRIPTED_SPEECH */ sub_12677( "SCLBAUD" );
    return;
}

/* P_CREATETRIGGERBOX */ void sub_11561(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETRIGGERREGION */ void sub_11993(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
         /* WRITESCRIPTLOG */ sub_2641( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

/* P_CREATEDOORSTRUCT */ void sub_12526(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_12677(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_12721();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_12721()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_REQUEST_RS2A_PERSISTENT_ASSETS */ void sub_12972()
{
     /* MAL_WRITESCRIPTLOG */ sub_389( "P_REQUEST_RS2A_PERSISTENT_ASSETS start" );
     /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_13069( ref l_U17, ref g_U1108 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_15992( 1194438308, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_15992( 724901397, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_15992( 406496141, ref g_U1301 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_17975( "LEVEL_S_CLUB_CP_06", ref g_U1447 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_19859( -1313172978, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_19859( -931023773, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_19859( 1476011597, ref g_U1350 );
    if (l_U312 == 1)
    {
        if ((g_U891 != 9) AND ((g_U891 != 8) AND (g_U891 != 7)))
        {
             /* LOADSEAMLESSCUTSCENE */ sub_22742( "MID_09_NC_concat", 0 );
        }
    }
    if (g_U892 > 6)
    {
        REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
    }
     /* MAL_WRITESCRIPTLOG */ sub_389( "P_REQUEST_RS2A_PERSISTENT_ASSETS end" );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_13069(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_13142( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_13142(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_13209( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13467( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_13209(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13467( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13467( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13467( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_14998( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13467( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_13467( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_13467(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_13528( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_13528(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_14998(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_15992(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_16046( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16307( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_16046(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16307( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16307( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16307( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_14998( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16307( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_16307( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_16307(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_13528( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_17975(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_18027( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18279( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_18027(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18279( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18279( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18279( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_14998( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18279( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_18279( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_18279(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_13528( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_19859(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_19920( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_20170( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_19920(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_20170( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_20170( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_20170( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_20170( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_14998( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_14998( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_20170( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_20170( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_20170(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_13528( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_22742(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_REQUEST_RS2A_NONPERSISTENT_ASSETS */ void sub_23183()
{
     /* MAL_WRITESCRIPTLOG */ sub_389( "P_REQUEST_RS2A_NONPERSISTENT_ASSETS start" );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_13142( 2145666447, ref g_U1108 );
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_23335( "LEVEL/S_CLUB/s_club_vig_11_mar.act", ref g_U1964 );
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_23335( "LEVEL/S_CLUB/s_club_vig_11_pas.act", ref g_U1964 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_19859( -1313172978, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_19859( -931023773, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_19859( 1476011597, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_19859( 1996590434, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_19859( -247122877, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_19859( 739943046, ref g_U1350 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_25377( 69, ref g_U1903 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_25377( 156, ref g_U1903 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_25377( 72, ref g_U1903 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_17975( "LEVEL_S_CLUB_CP_07", ref g_U1447 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_15992( -1787162676, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_15992( 406496141, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_15992( 1194438308, ref g_U1301 );
     /* MAL_WRITESCRIPTLOG */ sub_389( "P_REQUEST_RS2A_NONPERSISTENT_ASSETS end" );
    return;
}

/* P_STREAMREQ_ACTION_TREE_INSERT */ void sub_23335(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ sub_23389( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ACTION_TREE asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_23647( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ int sub_23389(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_23647( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_23647( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_ACTION_TREE_LOADED( uParam0 ))
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ACTION_TREE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_23647( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ACTION_TREE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_14998( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_23647( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_ACTION_TREE_LOADED( uParam0 ))
        {
            DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ACTION_TREE is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ACTION_TREE: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_23647( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ACTION_TREE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ void sub_23647(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_13528( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ACTION_TREE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ void sub_25377(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ sub_25437( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING asset name: {} ###", 1, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_25707( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ int sub_25437(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_25707( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is loading: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_25707( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The VEHICLE_RECORDING asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_25707( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_14998( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being removed: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_25707( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, iParam0 );
            DISPLAYF( "The VEHICLE_RECORDING is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING: {} ###", 1, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_25707( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ void sub_25707(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_13528( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_27572(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_27969(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_28371(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_28762(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ int sub_29176(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be requested: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to load: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be removed: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* P_SETUP_RS_WEATHER_AND_TOD */ void sub_29618()
{
     /* MAL_WRITESCRIPTLOG */ sub_389( "P_SETUP_RS_WEATHER_AND_TOD" );
    RELEASE_TIME_OF_DAY();
    SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
    FREEZE_TIME_OF_DAY( 22, 0 );
    return;
}

/* NIS_PRE_SETUP */ void sub_29928(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_678(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_640(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_640() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_640(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_30144(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_2641( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_6166( uParam0,  /* PLAYER_PED_ID */ sub_640() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_30613(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_2641( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_2641( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_9432( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_30904( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_31381( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_31381( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31641( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_31381( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31641( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31641( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_31381( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31641( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31641( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31641( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_31381( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31641( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31641( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31641( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_31641( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_33221( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_2641( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_30904(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_6447( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_2641( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_2641( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_31381(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_31641(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_33221(int iParam0)
{
     /* WRITE_STRING */ sub_8267( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_33309( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_33386( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_33386( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_33386( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_33386( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_33386( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_34256( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU52 );
     /* WRITE_STRING */ sub_8267( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU96 );
     /* WRITE_STRING */ sub_8267( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU100 );
     /* WRITE_STRING */ sub_8267( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU104 );
     /* WRITE_STRING */ sub_8267( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU108 );
     /* WRITE_STRING */ sub_8267( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU112 );
     /* WRITE_STRING */ sub_8267( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU116 );
     /* WRITE_STRING */ sub_8267( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU120 );
     /* WRITE_STRING */ sub_8267( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU124 );
     /* WRITE_STRING */ sub_8267( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU128 );
     /* WRITE_STRING */ sub_8267( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_33555( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_33555( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_33555( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_33309(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_33386(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_33555(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_34256(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* F_SETUP_GAMEPLAY */ int sub_35451()
{
    if (NOT ( /* P_SETUP_2C_ENEMY */ sub_35480()))
    {
        return 0;
    }
    if ( /* P_SETUP_2A_ENEMY */ sub_38963())
    {
        return 0;
    }
    if (NOT ( /* P_SETUP_2B_ENEMIES */ sub_39127()))
    {
        return 0;
    }
    return 1;
}

/* P_SETUP_2C_ENEMY */ int sub_35480()
{
    if (NOT (DOES_PED_EXIST( g_U2778._fU0 )))
    {
         /* NCRS_ENEMYSTRUCTFILL */ sub_35571( ref g_U2778, -11.67400000, -4.10000000, 86.27700000, -180.00000000, 1426405755, 2145666447, 406496141 );
         /* MAL_ENEMYSTRUCTCREATE */ sub_35826( ref g_U2778 );
         /* MAL_ES_FREEZE */ sub_38695( ref g_U2778, 1 );
         /* MAL_ES_SETASONESHOTKILL */ sub_38770( g_U2778, 1 );
         /* MAL_REGISTERPEDWITHISEQ */ sub_38866( g_U2778._fU0, 739943046, "gmed" );
        return 0;
    }
    return 1;
}

/* NCRS_ENEMYSTRUCTFILL */ void sub_35571(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* MAL_ENEMYSTRUCTFILL */ sub_35643( uParam0, uParam1, uParam4, uParam7, 1194438308, 2, g_U3107, 5, 500, uParam6, 0, 0, uParam5, g_U668 );
    return;
}

/* MAL_ENEMYSTRUCTFILL */ void sub_35643(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU68 = uParam4;
    iParam0->_fU72 = uParam5;
    iParam0->_fU76 = uParam6;
    iParam0->_fU80 = uParam7;
    iParam0->_fU84 = {uParam8};
    iParam0->_fU116 = uParam16;
    iParam0->_fU120 = uParam17;
    iParam0->_fU124 = uParam18;
    iParam0->_fU128 = uParam19;
    iParam0->_fU132 = uParam20;
    iParam0->_fU136 = uParam21;
    iParam0->_fU140 = {uParam22};
    return;
}

/* MAL_ENEMYSTRUCTCREATE */ void sub_35826(int iParam0)
{
    unknown uVar3;

     /* MAL_WRITESCRIPTLOG */ sub_389( "MAL_EnemyStructCreate starting" );
     /* MAL_CREATEPEDADV */ sub_35965( iParam0 + 0, iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU72, iParam0->_fU80, iParam0->_fU84, iParam0->_fU116, iParam0->_fU120, iParam0->_fU124, 1 );
    if (NOT (ARE_STRINGS_EQUAL( iParam0 + 140, ref g_U668 )))
    {
        PRINTSTRING( "[MSWW] ### MAL_EnemyStructCreate adding ped to room: " );
         /* WRITE_STRING */ sub_8267( iParam0 + 140 );
         /* MAL_SETROOMFORPED */ sub_38055( iParam0 + 0, iParam0 + 140 );
    }
    if (iParam0->_fU128)
    {
         /* MAL_WRITESCRIPTLOG */ sub_389( "MAL_EnemyStructCreate giving ped backup weapon" );
         /* MAL_GIVEPEDWEAPONINHOLSTER */ sub_38204( iParam0->_fU0, iParam0->_fU76, 25000, 1, 0 );
    }
    if (iParam0->_fU132)
    {
        uVar3 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
         /* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ sub_38430( ref uVar3, 14, 1 );
    }
    if (iParam0->_fU136 != 0)
    {
         /* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ sub_38593( iParam0 + 0, iParam0->_fU136 );
    }
    return iParam0->_fU0;
}

/* MAL_CREATEPEDADV */ void sub_35965(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
     /* P_CREATEPEDSTRUCT */ sub_36009( uParam1, uParam2, uParam5, uParam18, 7, 3, 2, 0, 0 );
    (uParam0^) =  /* MAL_CREATEPED */ sub_36131( uParam0, uParam1, 1, 1, uParam19 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
    }
     /* MAL_GIVEPEDWEAPON */ sub_37370( (uParam0^), uParam6, 25000, 0, 0 );
     /* MAL_SETTEMPLATEANDRANGES */ sub_37575( uParam0, ref uParam8, uParam16, uParam17, 1 );
     /* MAL_SETPEDCOMBATMOVEMENT */ sub_37863( uParam0, uParam7 );
    return (uParam0^);
}

/* P_CREATEPEDSTRUCT */ void sub_36009(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

/* MAL_CREATEPED */ void sub_36131(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
     /* CLEANPED */ sub_4459( (uParam0^) );
    (uParam0^) =  /* CREATEPED */ sub_36167( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
             /* MAL_WRITESCRIPTLOG */ sub_389( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
     /* MAL_SETPEDCOMBATATTRIBUTES */ sub_37218( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

/* CREATEPED */ void sub_36167(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_36349( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_36898( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_36999( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* LOADMODEL */ void sub_36349(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_8267( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETPEDDEFAULTSTATS */ void sub_36898(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_36999(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* MAL_SETPEDCOMBATATTRIBUTES */ void sub_37218(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

/* MAL_GIVEPEDWEAPON */ void sub_37370(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                 /* MAL_WRITESCRIPTLOG */ sub_389( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_SETTEMPLATEANDRANGES */ void sub_37575(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
     /* MAL_WRITESCRIPTLOG */ sub_389( "MAL_SetTemplateAndRanges" );
    PRINTSTRING( "[MSWW]### Template Name: " );
     /* WRITE_STRING */ sub_8267( uParam1 );
    PRINTSTRING( "[MSWW]### Min Range: " );
     /* WRITE_FLOAT */ sub_33386( fParam2 );
    PRINTSTRING( "[MSWW]### Max Range: " );
     /* WRITE_FLOAT */ sub_33386( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
         /* MAL_SETPEDCOMBATATTRIBUTES */ sub_37218( uParam0, 1, 0 );
    }
    return;
}

/* MAL_SETPEDCOMBATMOVEMENT */ void sub_37863(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETROOMFORPED */ void sub_38055(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_GIVEPEDWEAPONINHOLSTER */ void sub_38204(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                 /* MAL_WRITESCRIPTLOG */ sub_389( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ void sub_38430(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

/* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ void sub_38593(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PERSISTENT_PED_VARIATION_ENUM( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_ES_FREEZE */ void sub_38695(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        FREEZE_PED_POSITION( iParam0->_fU0, uParam1 );
    }
    return;
}

/* MAL_ES_SETASONESHOTKILL */ void sub_38770(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( uParam0._fU0, uParam44 );
    }
    return;
}

/* MAL_REGISTERPEDWITHISEQ */ void sub_38866(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

/* P_SETUP_2A_ENEMY */ int sub_38963()
{
    if (NOT (DOES_PED_EXIST( l_U800._fU0 )))
    {
         /* NCRS_ENEMYSTRUCTFILL */ sub_35571( ref l_U800, 29.27000000, -25.37200000, 89.67700000, 91.96200000, -1208103673, 2145666447, 406496141 );
         /* MAL_ENEMYSTRUCTCREATE */ sub_35826( ref l_U800 );
         /* MAL_ES_SETASONESHOTKILL */ sub_38770( l_U800, 1 );
         /* MAL_REGISTERPEDWITHISEQ */ sub_38866( l_U800._fU0, 1996590434, "gmed" );
        return 1;
    }
    return 0;
}

/* P_SETUP_2B_ENEMIES */ int sub_39127()
{
    if ( /* MAL_SPAWNENEMYSTRUCTASYNC */ sub_41691( 39158, 39595, ref l_U1203, ref l_U844, "RSB", ref l_U1197, 1065353216 ))
    {
        return 1;
    }
    if (l_U1203 == 0)
    {
        return 1;
    }
    return 0;
}

/* P_2B_ENEMIES_PRE */ void sub_39158()
{
     /* NCRS_ENEMYSTRUCTFILL */ sub_35571( ref l_U844[0], 22.03000000, -31.36000000, 86.28000000, 0.00000000, 1669243307, 2145666447, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_35571( ref l_U844[1], 22.04000000, -32.19000000, 86.28000000, 0.00000000, -966088886, 2145666447, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_35571( ref l_U844[2], 22.05000000, -33.69000000, 86.28000000, 0.00000000, -49231909, 2145666447, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_35571( ref l_U844[3], 31.17000000, -33.92000000, 89.70000000, 347.90280000, -1912526113, 2145666447, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_35571( ref l_U844[4], 30.91000000, -35.05000000, 89.74000000, 0.00000000, -53194431, 2145666447, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_35571( ref l_U844[5], 30.77000000, -35.56000000, 89.74000000, 0.00000000, 1697260220, 2145666447, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_35571( ref l_U844[6], 14.77798000, -12.98676000, 86.23021000, 180.00000000, 1053392355, 2145666447, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_35571( ref l_U844[7], 14.69927000, -12.05642000, 86.23021000, 180.00000000, -1035023217, 2145666447, 1194438308 );
    return;
}

/* P_2B_ENEMIES_POST */ void sub_39595()
{
    int I;

     /* MAL_ESA_FREEZE */ sub_39632( ref l_U844, 1, 0, -1 );
     /* MAL_ESA_TELEPORTTOSPAWN */ sub_39729( ref l_U844, 0, -1 );
     /* MAL_ESA_VISIBLE */ sub_39981( ref l_U844, 0, 0, -1 );
     /* MAL_ESA_ALERTNESSANDEMOTIONSTATE */ sub_40205( ref l_U844, 3, 1 );
     /* MAL_ESA_SETLOCKEDANDREGISTEREDONPED */ sub_40570( ref l_U844, g_U2777, 0, -1 );
     /* MAL_ESA_SETPEDARRAYACCURACY */ sub_40857( ref l_U844, 31186664 );
     /* MAL_ESA_SETASONESHOTKILL */ sub_41023( ref l_U844, 1, 0, -1 );
     /* MAL_ESA_VALIDATEBULLETCAMHIT */ sub_41133( ref l_U844, 0 );
    for ( I = 0; I < l_U844; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U844[I]._fU0 )))
        {
            SET_PED_COMBAT_ATTRIBUTES( l_U844[I]._fU0, 256, 0 );
            SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U844[I]._fU0, 1 );
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U844[I]._fU0, 0, 0 ), 30 );
        }
    }
     /* P_RAILSHOOTERENEMYSTRUCTCREATE */ sub_41439( ref l_U336[0], 0, 0 );
     /* P_RAILSHOOTERENEMYSTRUCTCREATE */ sub_41439( ref l_U336[1], 12500, 1 );
     /* P_RAILSHOOTERENEMYSTRUCTCREATE */ sub_41439( ref l_U336[2], 3000, 4 );
     /* P_RAILSHOOTERENEMYSTRUCTCREATE */ sub_41439( ref l_U336[3], 0, 0 );
     /* P_RAILSHOOTERENEMYSTRUCTCREATE */ sub_41439( ref l_U336[4], 0, 0 );
     /* P_RAILSHOOTERENEMYSTRUCTCREATE */ sub_41439( ref l_U336[5], 4000, 2 );
     /* P_RAILSHOOTERENEMYSTRUCTCREATE */ sub_41439( ref l_U336[6], 3000, 3 );
     /* P_RAILSHOOTERENEMYSTRUCTCREATE */ sub_41439( ref l_U336[7], 3000, 5 );
    return;
}

/* MAL_ESA_FREEZE */ void sub_39632(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_FREEZE */ sub_38695( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ESA_TELEPORTTOSPAWN */ void sub_39729(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
         /* MAL_ES_TELEPORTTOSPAWN */ sub_39807( (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_TELEPORTTOSPAWN */ void sub_39807(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43)
{
     /* MAL_ES_TELEPORT */ sub_39860( uParam0, uParam0._fU56, uParam0._fU68 );
    return;
}

/* MAL_ES_TELEPORT */ void sub_39860(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_COORDS( uParam0._fU0, uParam44, 1 );
        SET_PED_HEADING( uParam0._fU0, uParam47 );
    }
    return;
}

/* MAL_ESA_VISIBLE */ void sub_39981(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_SETPEDVISIBLE */ sub_40049( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_SETPEDVISIBLE */ void sub_40049(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_VISIBLE( iParam0->_fU0, uParam1 );
    }
    else
    {
         /* MAL_WRITESCRIPTLOG */ sub_389( "MAL_ES_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

/* MAL_ESA_ALERTNESSANDEMOTIONSTATE */ void sub_40205(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_ALERTNESSANDEMOTIONSTATE */ sub_40276( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

/* MAL_ES_ALERTNESSANDEMOTIONSTATE */ void sub_40276(int iParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_SETPEDALERTNESSANDEMOTIONSTATE */ sub_40328( iParam0 + 0, uParam1, uParam2 );
    return;
}

/* MAL_SETPEDALERTNESSANDEMOTIONSTATE */ void sub_40328(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_SETPEDALERTNESS */ sub_40379( uParam0, uParam1 );
     /* MAL_SETPEDEMOTIONSTATION */ sub_40451( uParam0, uParam2 );
    return;
}

/* MAL_SETPEDALERTNESS */ void sub_40379(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETPEDEMOTIONSTATION */ void sub_40451(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_EMOTION_STATE( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_ESA_SETLOCKEDANDREGISTEREDONPED */ void sub_40570(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_REGISTERTARGET */ sub_40660( ref (uParam0^)[I]._fU0, uParam1 );
         /* MAL_SETLOCKEDTARGET */ sub_40750( ref (uParam0^)[I]._fU0, uParam1 );
    }
    return;
}

/* MAL_REGISTERTARGET */ void sub_40660(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETLOCKEDTARGET */ void sub_40750(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_ESA_SETPEDARRAYACCURACY */ void sub_40857(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* MAL_ES_SETPEDACCURACY */ sub_40923( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_SETPEDACCURACY */ void sub_40923(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_ACCURACY( iParam0->_fU0, uParam1 );
    }
    return;
}

/* MAL_ESA_SETASONESHOTKILL */ void sub_41023(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_SETASONESHOTKILL */ sub_38770( (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ESA_VALIDATEBULLETCAMHIT */ void sub_41133(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_VALIDATEBULLETCAMHIT */ sub_41202( (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_VALIDATEBULLETCAMHIT */ void sub_41202(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_VALIDATE_BULLET_CAM_HIT( uParam0._fU0, uParam44 );
    }
    return;
}

/* P_RAILSHOOTERENEMYSTRUCTCREATE */ void sub_41439(int iParam0, unknown uParam1, unknown uParam2)
{
    iParam0->_fU80 = 0;
    iParam0->_fU36 = uParam1;
    iParam0->_fU40 = uParam2;
     /* CREATETIMER */ sub_973( iParam0 + 0, iParam0->_fU36, 1, 0 );
     /* CREATETIMER */ sub_973( iParam0 + 44, l_U334, 1, 0 );
    return;
}

/* MAL_SPAWNENEMYSTRUCTASYNC */ int sub_41691(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    switch ((uParam2^))
    {
        case 1:
        (uParam2^) = 2;
        break;
        break;
        uParam0;
        break;
        case 2:
        if ( /* MAL_ENEMYSTRUCTARRAYCREATE */ sub_41785( uParam3, uParam4, uParam5, uParam6, 1, 0 ))
        {
            (uParam2^) = 3;
        }
        break;
        case 3:
        (uParam2^) = 0;
        return 1;
        break;
        break;
        uParam1;
        break;
    }
    return 0;
}

/* MAL_ENEMYSTRUCTARRAYCREATE */ int sub_41785(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5)
{
    int I;

    PRINTSTRING( "[MSWW] ### MAL_EnemyStructArrayCreate starting: " );
     /* WRITE_STRING */ sub_8267( uParam1 );
    if (NOT bParam4)
    {
         /* P_SETUP_AI_GROUP */ sub_41902( uParam2, uParam3, 1 );
        for ( I = 0; I < (uParam0^); I++ )
        {
             /* MAL_ENEMYSTRUCTCREATE */ sub_35826( ref (uParam0^)[I] );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_42332( (uParam0^)[I]._fU0, uParam2 );
        }
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_42730( uParam0, uParam1 );
    }
    else if ((uParam0^)[0]._fU172 == 0)
    {
         /* P_SETUP_AI_GROUP */ sub_41902( uParam2, uParam3, 1 );
    }
    if ((uParam0^)[0]._fU172 < (uParam0^))
    {
         /* MAL_ENEMYSTRUCTCREATE */ sub_35826( ref (uParam0^)[(uParam0^)[0]._fU172] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_42332( (uParam0^)[(uParam0^)[0]._fU172]._fU0, uParam2 );
        (uParam0^)[0]._fU172++;
    }
    else
    {
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_42730( uParam0, uParam1 );
        return 1;
    }
    if (bParam5)
    {
         /* MAL_ESA_PROCESSINGFREEZE */ sub_43021( uParam0, 1, 0, -1 );
    }
    return 0;
}

/* P_SETUP_AI_GROUP */ void sub_41902(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_42332(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_8267( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_41902( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_41902( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* MAL_ESA_GIVEDEBUGNAMES */ void sub_42730(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I]._fU0, ref cVar5 );
        }
    }
    return;
}

/* MAL_ESA_PROCESSINGFREEZE */ void sub_43021(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_PROCESSINGFREEZE */ sub_43098( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_PROCESSINGFREEZE */ void sub_43098(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FREEZE_PROCESSING( iParam0->_fU0, uParam1 );
    }
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_43306(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_973( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_1326( uParam0 );
    return;
}

/* P_SETUP_HELI */ void sub_43420(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_WRITESCRIPTLOG */ sub_389( "P_SETUP_HELI" );
    if (NOT (DOES_VEHICLE_EXIST( g_U2866 )))
    {
        g_U2866 =  /* CREATEVEHICLE */ sub_43507( 1049690760, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( uParam0, uParam2 ), 0.00000000, 1, 0, 1 );
    }
    else if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_COORDS( g_U2866, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( uParam0, uParam2 ) );
    }
    if ((NOT (IS_VEHICLE_DEAD( g_U2866 ))) AND (DOES_VEHICLE_EXIST( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
        SILENCE_VEHICLE( g_U2866, 1 );
        SET_VEHICLE_AS_MISSION_VEHICLE( g_U2866 );
        SET_VEHICLE_EXTRA( g_U2866, 5, 1 );
        SET_VEHICLE_INTERIORLIGHT( g_U2866, 1 );
        SET_VEHICLE_DOOR_OPEN( g_U2866, 3 );
        SET_VEHICLE_HEALTH( g_U2866, 600 );
        SET_VEHICLE_ENGINE_HEALTH( g_U2866, 600.00000000 );
        SET_VEHICLE_PETROL_TANK_HEALTH( g_U2866, 300.00000000 );
        SET_VEHICLE_CAN_BE_DAMAGED( g_U2866, 0 );
        SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( g_U2866, 1 );
        SET_VEHICLE_PROOFS( g_U2866, 0, 1, 1, 1, 1 );
         /* P_START_VEHICLE_PLAYBACK */ sub_44092( g_U2866, uParam0, uParam1, uParam2, 0 );
        PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
        if (NOT (DOES_OBJECT_EXIST( l_U23 )))
        {
            l_U23 = CREATE_OBJECT( 230799837, 0.00000000, 1.00000000, 0.00000000, 0, 0 );
            ATTACH_OBJECT_TO_VEHICLE( l_U23, g_U2866, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
    ALLOW_BULLET_CAMERA_CHEAT( 0 );
    return;
}

/* CREATEVEHICLE */ void sub_43507(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_36349( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* P_START_VEHICLE_PLAYBACK */ void sub_44092(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3, boolean bParam4)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
    }
     /* LOADVEHICLERECORDING */ sub_44170( uParam1, 1 );
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
        SET_PLAYBACK_SPEED( uParam0, uParam2 );
        if (fParam3 > 0.00000000)
        {
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, fParam3 );
        }
    }
    if (bParam4)
    {
        while ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
        {
             /* WRITE_STRING */ sub_8267( "Waiting for vehicle to start playing recorded path." );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADVEHICLERECORDING */ void sub_44170(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a recording to be loaded: Rec# {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_SETUP_GIOVANNA */ void sub_44665(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, boolean bParam6)
{
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_44713( ref g_U2764, uParam0, uParam3, 1421546599, 5, 2, 0, 0, 0 );
    if (NOT (DOES_PED_EXIST( g_U2777 )))
    {
        g_U2777 =  /* CREATEPED */ sub_36167( ref g_U2764 );
    }
    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
         /* MAL_WRITESCRIPTLOG */ sub_389( "Setting Giovanna crap" );
         /* MAL_STANDSTILL */ sub_44931( ref g_U2777 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2777, 1 );
        SET_BULLET_CAM_PREF( g_U2777, "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
        SET_PED_DIES_WHEN_INJURED( g_U2777, 1 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 1 );
        RESET_PED_GORE( g_U2777 );
        SET_COLLISION_BETWEEN_PEDS( g_U2777, 0 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( g_U2777, 0 );
        SET_PED_USES_DYING_ANIM( g_U2777, 0 );
        if (NOT (ISEQ_QUERY_STATE( uParam4, 3 )))
        {
             /* MAL_REGISTERPEDWITHISEQ */ sub_38866( g_U2777, uParam4, uParam5 );
            if (bParam6)
            {
                ISEQ_START( uParam4 );
            }
        }
    }
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_44713(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* MAL_STANDSTILL */ void sub_44931(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

/* P_SETUP_PLAYER */ void sub_45475(unknown uParam0, unknown uParam1)
{
     /* MAL_WRITESCRIPTLOG */ sub_389( "P_SETUP_PLAYER" );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() )))
    {
        SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_640(), 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_640(), 1 );
        SET_ADRENALINE_AMT( 0.75000000 );
        CLEAR_PED_TASKS(  /* PLAYER_PED_ID */ sub_640() );
        SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_640(), GET_PED_MAX_HEALTH(  /* PLAYER_PED_ID */ sub_640() ), 0 );
        if (NOT (IS_PED_ATTACHED_TO_ANY_VEHICLE(  /* PLAYER_PED_ID */ sub_640() )))
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                ATTACH_PED_TO_VEHICLE(  /* PLAYER_PED_ID */ sub_640(), g_U2866, 0, 0.56600000, 0.00000000, 0.80400000, -90.00000000, 0.00000000, 1, 0, 0, 1 );
                SET_VEHICLE_AS_ENTITY_SYNC_POINT( g_U2866,  /* PLAYER_PED_ID */ sub_640() );
            }
        }
        SET_PED_CAN_RAGDOLL(  /* PLAYER_PED_ID */ sub_640(), 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        ENABLE_HIT_DETECTION( 0 );
        ENABLE_LAST_MAN_STANDING( 0 );
        SET_SILHOUETTE_ACTIVE( 0 );
        SET_RAIL_RELATIVE_DIR( 2, 0 );
        SET_PLAYER_COMBAT_TIMER_MODE( 1 );
        PLAYER_SET_AIM_MODE( 2 );
        AUDIO_SET_PED_FOOTSTEPS_ON( 0 );
        SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_640(), 0, 0 );
        SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_640(), 1, 0 );
        SET_INSTANT_FIRE_FORCED( 1 );
        SET_PED_USES_ANIMATED_DEATH(  /* PLAYER_PED_ID */ sub_640(), 1 );
        if (NOT (ISEQ_QUERY_STATE( uParam0, 3 )))
        {
             /* WRITESCRIPTLOG */ sub_2641( "MF", "Starting Player Helicopter Interactive Sequence", 0 );
            PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_640(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
            ISEQ_REGISTER_ENTITY( uParam0, uParam1,  /* PLAYER_PED_ID */ sub_640(), 0 );
            ISEQ_START( uParam0 );
        }
        REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_640() );
         /* F_GIVEPEDWEAPON */ sub_8658(  /* PLAYER_PED_ID */ sub_640(), 354276007, 25000, 0, 0 );
        SET_CAMERA_OVERRIDE( "RAIL_HELI_CAMERA", "RAIL_HELI_CAMERA_AIM", 0, 1, 1 );
    }
    return;
}

/* P_SETUP_PASSOS_AND_MARCELLO */ void sub_46107()
{
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_44713( ref g_U2736, 55.11000000, -24.06000000, 94.27000000, 0.00000000, 817667075, 26, 6, 0, 0, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_44713( ref g_U2750, 54.04000000, -24.06000000, 94.27000000, 0.00000000, -383356854, 26, 6, 0, 0, 1 );
    if (NOT (ISEQ_IS_LOADED( -931023773 )))
    {
        ISEQ_REQUEST( -931023773 );
    }
    if (NOT (ISEQ_IS_LOADED( 1476011597 )))
    {
        ISEQ_REQUEST( 1476011597 );
    }
    if (NOT (DOES_PED_EXIST( g_U2763 )))
    {
        g_U2763 =  /* CREATEPED */ sub_36167( ref g_U2750 );
    }
    if (NOT (IS_PED_DEAD( g_U2763 )))
    {
         /* MAL_STANDSTILL */ sub_44931( ref g_U2763 );
        SET_PED_INVINCIBLE( g_U2763, 1 );
        DETACH_PED( g_U2763, 1 );
        if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
        {
            ATTACH_PED_TO_VEHICLE( g_U2763, g_U2866, 0, 0.67600000, 1.52300000, 1.50300000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        }
    }
    if (NOT (DOES_PED_EXIST( g_U2749 )))
    {
        g_U2749 =  /* CREATEPED */ sub_36167( ref g_U2736 );
    }
    if (NOT (IS_PED_DEAD( g_U2749 )))
    {
         /* MAL_STANDSTILL */ sub_44931( ref g_U2749 );
        SET_PED_INVINCIBLE( g_U2749, 1 );
        DETACH_PED( g_U2749, 1 );
        if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
        {
            ATTACH_PED_TO_VEHICLE( g_U2749, g_U2866, 0, -0.61500000, 1.48000000, 1.55500000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        }
    }
    if (NOT (ISEQ_QUERY_STATE( -931023773, 3 )))
    {
         /* MAL_REGISTERPEDWITHISEQ */ sub_38866( g_U2763, -931023773, "marcello" );
        ISEQ_START( -931023773 );
    }
    if (NOT (ISEQ_QUERY_STATE( 1476011597, 3 )))
    {
         /* MAL_REGISTERPEDWITHISEQ */ sub_38866( g_U2749, 1476011597, "passos" );
        ISEQ_START( 1476011597 );
    }
    return;
}

/* CUTSYS_DEFAULT_PRECUTSCENESETUP */ int sub_46863()
{
    return 1;
}

/* P_MID09_REGISTER */ void sub_46916()
{
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        FREEZE_VEHICLE_POSITION( g_U2866, 1 );
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U2866, "heli_luxury", 0 );
    }
    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2777, "Giov_Club_B", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U2777, 24.57800000, -25.48600000, 86.65900000, 94.25100000 );
         /* MAL_REGISTERPEDWITHISEQ */ sub_38866( g_U2777, 1996590434, "giovanna" );
    }
    if (NOT (IS_PED_DEAD( g_U2763 )))
    {
        DETACH_PED( g_U2763, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2763, "Marc_Casu", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( g_U2763, g_U2866, 0, 0.67600000, 1.52300000, 1.50300000, 0.00000000, 0.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2763, "/Global/S_CLUB_VIG_11_MAR/SEQ_START/MARCELLO/IDLE" );
    }
    if (NOT (IS_PED_DEAD( g_U2749 )))
    {
        DETACH_PED( g_U2749, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2749, "Pass_Club_H", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( g_U2749, g_U2866, 0, -0.61500000, 1.48000000, 1.55500000, 0.00000000, 0.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2749, "/Global/S_CLUB_VIG_11_PAS/SEQ_START/PASSOS/IDLE" );
    }
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() )))
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 0, 0 ), "W_AR_Rug30_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE(  /* PLAYER_PED_ID */ sub_640(), g_U2866, 0, 0.56600000, 0.00000000, 0.80400000, -90.00000000, 0.00000000, 1, 0 );
        SET_VEHICLE_AS_ENTITY_SYNC_POINT( g_U2866,  /* PLAYER_PED_ID */ sub_640() );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_640(), "/Global/S_CLUB_VIG_10_NC/SEQ_START/MAX/INITIALIZE" );
        if (IS_WEAPON_ATTACHMENT_TOGGLED( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 0, 0 ), 13 ))
        {
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 0, 0 ), 13, 0 );
            l_U24 = 0;
        }
        else
        {
            l_U24 = 1;
        }
    }
    if (NOT (IS_PED_DEAD( l_U800._fU0 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U800._fU0, "G_CS_NCSM_D", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U800._fU0, 0, 0 ), "W_PI_38_Ba_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U800._fU0, 29.27000000, -25.37200000, 89.67700000, 91.96200000 );
    }
    CUTSCENE_FORCE_GAMEPLAY_HEADING_PITCH_UPDATE();
    REGISTER_DETACH_PLAYER_FOR_CUTSCENE();
    return;
}

/* P_MID09_HANDLE */ void sub_47831()
{
    if (l_U1208._fU52)
    {
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_44092( g_U2866, 69, 0.00000000, 7169.00000000, 0 );
        CAMERA_SNAP_POINT_AT_COORD( 24.19000000, -25.37000000, 89.75000000 );
        SET_CAMERA_OVERRIDE( "RAIL_HELI_CAMERA", "RAIL_HELI_CAMERA_AIM", 0, 1, 1 );
    }
     /* P_MAKEHELIENGINESFUCKINGTURN */ sub_47980();
    return;
}

/* P_MAKEHELIENGINESFUCKINGTURN */ void sub_47980()
{
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
    }
    return;
}

/* F_MID09_POST */ int sub_48081()
{
    FREEZE_VEHICLE_POSITION( g_U2866, 0 );
    g_U1092 = 1;
    return 1;
}

/* CUTSYS_CREATESTANDALONECUTSCENE */ void sub_48138(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* WRITESCRIPTLOG */ sub_2641( "MSWW", "CutSys_CreateStandaloneCutscene", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_48454( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam7, 0, 48249, 48300, 0, 48352, 48402, uParam6 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDOUT */ void sub_48249()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDOUT */ int sub_48300()
{
    return 1;
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_48352()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_48402()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_48454(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_HANDLECUTSCENE */ void sub_48774(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_2641( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_2641( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_2641( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_2641( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_2641( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_2641( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_22742( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_2641( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_29928( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_29928( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_2641( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_50039( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_29928( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_50419( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_50419( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_50039(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_640(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_640(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_640(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_50419(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_678(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_640(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_50517();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_50517()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_640(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_640(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_START_GAMEPLAY */ void sub_51116()
{
    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 0, 0 ) ))
    {
        ENABLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 0, 0 ), 13, 1 );
        SET_LASER_SIGHT_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 0, 0 ), -1363960247 );
        if (NOT l_U24)
        {
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 0, 0 ), 13, 1 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 0, 0 ), 13, 0 );
        }
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2370[g_U892], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2409[g_U892], 1065353216, 0 );
    SET_ADRENALINE_AMT( 1 );
    if (g_U892 == 7)
    {
        ISEQ_START( 1996590434 );
         /* MAL_ES_TELEPORTTOSPAWN */ sub_39807( l_U800 );
         /* MAL_TELEPORTPED */ sub_51402( g_U2777, 24.57800000, -25.48600000, 86.65900000, 94.25100000 );
    }
    else if (g_U892 == 8)
    {
        ISEQ_START( -247122877 );
         /* MAL_TELEPORTPED */ sub_51402( g_U2777, 18.95540000, -24.83710000, 86.22793000, 85.58799000 );
    }
    else if (g_U892 == 9)
    {
        ISEQ_START( 739943046 );
         /* MAL_ES_TELEPORTTOSPAWN */ sub_39807( g_U2778 );
         /* MAL_TELEPORTPED */ sub_51402( g_U2777, g_U2764._fU0, g_U2764._fU12 );
    };;;
    return;
}

/* MAL_TELEPORTPED */ void sub_51402(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* F_IMAGEFX_FADE_IN */ int sub_51619()
{
    if (l_U272)
    {
         /* WRITESCRIPTLOG */ sub_2641( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U272 = 0;
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_2641( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

/* P_RS_CONTROLS */ void sub_51933()
{
    SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_678(), 0, 256 );
    REENABLE_PLAYER_INPUT( 17 );
    REENABLE_PLAYER_INPUT( 16 );
    REENABLE_PLAYER_INPUT( 15 );
    REENABLE_PLAYER_INPUT( 14 );
    REENABLE_PLAYER_INPUT( 6 );
    REENABLE_PLAYER_INPUT( 28 );
    REENABLE_PLAYER_INPUT( 29 );
    REENABLE_PLAYER_INPUT( 4 );
    REENABLE_PLAYER_INPUT( 19 );
    REENABLE_PLAYER_INPUT( 20 );
    return;
}

/* P_RS_HANDLE_CAM_SHAKE */ void sub_52316()
{
    if (NOT l_U6._fU20)
    {
         /* WRITESCRIPTLOG */ sub_2641( "MF", "INITIAL HELI RAIL CAM SHAKE...", 0 );
        SHAKE_GAMEPLAY_CAM(  /* F_CAM_SHAKE_MED_EXPLOSION */ sub_52405(), l_U16 );
         /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U6, l_U15 );
    }
    if ( /* ISTIMERDONE */ sub_2431( ref l_U6 ))
    {
        SHAKE_GAMEPLAY_CAM(  /* F_CAM_SHAKE_MED_EXPLOSION */ sub_52405(), l_U16 );
         /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U6, l_U15 );
    }
    return;
}

/* F_CAM_SHAKE_MED_EXPLOSION */ string sub_52405()
{
    return "MEDIUM_EXPLOSION_SHAKE";
}

/* P_RS_HANDLE_GIOVANNA_SCREAMS_TO_BEING_SHOT_AT */ void sub_52541()
{
    unknown uVar2;

    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
        if (NOT (IS_ANY_SPEECH_PLAYING( g_U2777 )))
        {
            if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2777 ), 1.90000000, ref uVar2 ))
            {
                if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) > 30)
                {
                     /* P_RS_SPEECH_GVNSC1 */ sub_52683();
                }
            }
        }
    }
    return;
}

/* P_RS_SPEECH_GVNSC1 */ void sub_52683()
{
     /* WRITESCRIPTLOG */ sub_2641( "MF", "P_RS_SPEECH_GVNSC1 - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52758( ref l_U105 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52874( 1, g_U2777, "GIOVANNA", ref l_U105, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52874( 0,  /* PLAYER_PED_ID */ sub_640(), "MAX", ref l_U105, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53143( "SCLB_GVNSC1", ref l_U105, 8, 1 );
     /* WRITESCRIPTLOG */ sub_2641( "MF", "P_RS_SPEECH_GVNSC1 - END", 0 );
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_52758(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_52874(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_53143(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_53188( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_53188(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_53275( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_53275(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_53327( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_53845( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_53327(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_53845(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_RSDIAG_GIOVANNAINIMMEDIATEDANGER */ void sub_54160()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52758( ref uVar2 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52874( 0,  /* PLAYER_PED_ID */ sub_640(), "MAX", ref uVar2, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52874( 1, g_U2749, "PASSOS", ref uVar2, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53143( "SCLB_HRPGC", ref uVar2, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2749, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    return;
}

/* MAL_ES_ISACTINTCOMPLETED */ int sub_54534(int iParam0, unknown uParam1, boolean bParam2)
{
    if (( /* MAL_GETACTINTSTATUS */ sub_54578( iParam0->_fU0, uParam1 )) == 1)
    {
        if (bParam2)
        {
             /* MAL_FINISHACTINT */ sub_54668( iParam0 + 0, uParam1 );
        }
        return 1;
    }
    return 0;
}

/* MAL_GETACTINTSTATUS */ int sub_54578(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* MAL_FINISHACTINT */ void sub_54668(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

/* P_KILL_PED */ void sub_55546(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_55874()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* P_RS_HANDLE_PLAYER_RELOAD_DIALOGUE */ void sub_55974()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() )))
    {
        if (NOT l_U54)
        {
            if (NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_640() )))
            {
                if (TIME_SINCE_LAST_MONOLOGUE() > 500)
                {
                    if (IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_640() ))
                    {
                        l_U54 = 1;
                        if ((l_U74 == 1) || ((GET_WEAPON_AMMO_IN_CLIP( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_640(), 0, 0 ) )) < 2))
                        {
                             /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U65, 400 );
                        }
                        else if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) < 45)
                        {
                             /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U65, 400 );
                        }
                    }
                }
            }
        }
        if ( /* ISTIMERDONE */ sub_2431( ref l_U65 ))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52758( ref l_U55 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52874( 0,  /* PLAYER_PED_ID */ sub_640(), "MAX", ref l_U55, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52874( 1,  /* PLAYER_PED_ID */ sub_640(), "MAX", ref l_U55, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_53143( "SCLB_MCHWR", ref l_U55, 5, 1 );
            l_U74 = 0;
        }
        if (l_U54 == 1)
        {
            if (NOT (IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_640() )))
            {
                l_U54 = 0;
            }
        }
    }
    return;
}

/* P_RS_SPEECH_MAX_RESPONDS */ void sub_56336()
{
    if ( /* ISTIMERDONE */ sub_2431( ref l_U45 ))
    {
         /* P_RS_SPEECH_VIG_10 */ sub_56387();
    }
    return;
}

/* P_RS_SPEECH_VIG_10 */ void sub_56387()
{
     /* WRITESCRIPTLOG */ sub_2641( "MF", "P_RS_SPEECH_VIG_10 - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52758( ref l_U115 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52874( 1,  /* PLAYER_PED_ID */ sub_640(), "MAX", ref l_U115, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52874( 0,  /* PLAYER_PED_ID */ sub_640(), "MAX", ref l_U115, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53143( "SCLB_VIG10", ref l_U115, 8, 1 );
    PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_640(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_2641( "MF", "P_RS_SPEECH_VIG_10 - END", 0 );
    return;
}

/* MAL_ESA_ZHEIGHTCHECK */ void sub_56640(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_ZHEIGHTCHECK */ sub_56701( ref (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

/* MAL_ES_ZHEIGHTCHECK */ void sub_56701(int iParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( iParam0->_fU0, 0, 0 );
            }
            if (bParam3)
            {
                 /* MAL_ES_CLEAN */ sub_4429( iParam0 );
            }
        }
    }
    return;
}

/* P_RS_SPEECH_HRGC */ void sub_56937()
{
     /* WRITESCRIPTLOG */ sub_2641( "MF", "P_RS_SPEECH_HRGC - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52758( ref l_U85 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52874( 1, g_U2763, "MARCELO", ref l_U85, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52874( 0,  /* PLAYER_PED_ID */ sub_640(), "MAX", ref l_U85, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53143( "SCLB_HRGC", ref l_U85, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2763, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_2641( "MF", "P_RS_SPEECH_HRGC - END", 0 );
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_57182(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_57225( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_57225(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_RS_SPEECH_HRPYM */ void sub_57455()
{
     /* WRITESCRIPTLOG */ sub_2641( "MF", "P_RS_SPEECH_HRPYM - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52758( ref l_U75 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52874( 1, g_U2749, "PASSOS", ref l_U75, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52874( 0,  /* PLAYER_PED_ID */ sub_640(), "MAX", ref l_U75, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53143( "SCLB_HRPYM", ref l_U75, 6, 1 );
    PED_SET_ACTION_INTENTION( g_U2749, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_2641( "MF", "P_RS_SPEECH_HRPYM - END", 0 );
    return;
}

/* MAL_ISACTINTCOMPLETED */ int sub_57832(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (( /* MAL_GETACTINTSTATUS */ sub_54578( (uParam0^), uParam1 )) == 1)
    {
        if (bParam2)
        {
             /* MAL_FINISHACTINT */ sub_54668( uParam0, uParam1 );
        }
        return 1;
    }
    return 0;
}

/* MAL_FREEZEPED */ void sub_57922(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        FREEZE_PED_POSITION( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_ESA_GETNUMLIVINGPEDS */ void sub_57988(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            Result++;
        }
    }
    return Result;
}

/* F_ISPEDINTRIGGERBOXFIRSTTIME */ void sub_58162(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 =  /* F_ISPEDINTRIGGERBOX */ sub_58232( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

/* F_ISPEDINTRIGGERBOX */ int sub_58232(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* F_R2B_HANDLE_GAMEPLAY */ int sub_58388()
{
    int iVar2;

     /* MAL_ISACTINTCOMPLETED */ sub_57832( ref g_U2777, 48, 1 );
     /* MAL_ISACTINTCOMPLETED */ sub_57832( ref g_U2777, 49, 1 );
    if (NOT l_U333)
    {
        l_U335 =  /* F_R2B_GETFIRSTTHREATENINGPED */ sub_58461();
        if (l_U335 > -1)
        {
             /* MAL_WRITESCRIPTLOG */ sub_389( "THREATENING ENEMY FOUND ZOMG" );
            l_U333 = 1;
             /* P_R2B_RUNTOGIOVANNA */ sub_58637( l_U335, -1 );
            SET_PED_AS_ONE_SHOT_KILL( l_U844[l_U335]._fU0, 1 );
             /* P_R2B_GETEVERYONEBUTTHREATENEROUTOFTHREATENINGAREA */ sub_59458( l_U335 );
        }
        else
        {
             /* P_R2B_HANDLEALLENEMIES */ sub_59887();
        }
    }
    else if (NOT IS_BULLET_CAMERA_ACTIVE())
    {
        if ( /* ISTIMERDONE */ sub_2431( ref l_U782 ))
        {
            if ( /* F_ISPEDINTRIGGERREGION */ sub_61557( ref l_U611, l_U844[l_U335]._fU0, 0 ))
            {
                 /* MAL_ES_INVINCIBLE */ sub_61758( ref l_U844[l_U335], 1 );
                return 1;
            }
            else
            {
                 /* MAL_WRITESCRIPTLOG */ sub_389( "KILL TIMER DONE BUT PED NOT IN KILL ZONE" );
                 /* CREATETIMER */ sub_973( ref l_U782, 3000, 1, 0 );
            }
        }
    }
    if ( /* F_ISPEDINTRIGGERREGION */ sub_61557( ref l_U611, l_U844[l_U335]._fU0, 0 ))
    {
        if ((NOT l_U782._fU20) AND ( /* F_R2B_CANGIOVANNAREACT */ sub_61930()))
        {
             /* P_R2B_GIOVANNAREACTSTOIMMINENTDOOM */ sub_62057( l_U335 );
             /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U782, 3000 );
             /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U1235, 1000 );
             /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U1253, l_U782._fU12 + 1000 );
             /* P_RS_SPEECH_GVNSC1 */ sub_52683();
            l_U74 = 1;
        }
    }
    else if ( /* F_ISPEDINTRIGGERBOX */ sub_58232( l_U844[l_U335]._fU0, l_U505 ))
    {
        ;
    }
    else if (NOT (IS_PED_DEAD( l_U844[l_U335]._fU0 )))
    {
         /* MAL_DELICIOUSWARNINGSPAM */ sub_62458( "THREATENING ENEMY IS NO LONGER IN THREATENING AREA WTF" );
    }
    else if (IS_PED_DEAD( l_U844[l_U335]._fU0 ))
    {
         /* CREATETIMER */ sub_973( ref l_U782, 3000, 1, 0 );
        iVar2 =  /* F_R2B_GETFIRSTTHREATENINGPED */ sub_58461();
        if (iVar2 > -1)
        {
             /* MAL_WRITESCRIPTLOG */ sub_389( "Threatening enemy is dead, but another is still in the Threatening Area.  Waiting until it's clear." );
        }
        else if ( /* F_R2B_CANGIOVANNAREACT */ sub_61930())
        {
             /* MAL_WRITESCRIPTLOG */ sub_389( "Giovanna has stopped reacting, restarting the advance" );
             /* P_R2B_RESTARTADVANCE */ sub_62781();
            l_U333 = 0;
        }
    };;;;;
    return 0;
}

/* F_R2B_GETFIRSTTHREATENINGPED */ int sub_58461()
{
    int Result;

    for ( Result = 0; Result < l_U336; Result++ )
    {
        if ( /* F_ISPEDINTRIGGERBOX */ sub_58232( l_U844[Result]._fU0, l_U505 ))
        {
            return Result;
        }
    }
    return -1;
}

/* P_R2B_RUNTOGIOVANNA */ void sub_58637(unknown uParam0, int iParam1)
{
    float fVar4;
    float fVar5;
    float fVar6;
    unknown uVar7;

    if (NOT (IS_PED_DEAD( l_U844[uParam0]._fU0 )))
    {
        fVar4 =  /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_58714( l_U844[uParam0]._fU0, l_U315 );
        fVar5 =  /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_58714( l_U844[uParam0]._fU0, l_U321 );
        fVar6 =  /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_58714( l_U844[uParam0]._fU0, l_U327 );
         /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_58895( ref l_U844[uParam0]._fU0, g_U2777 );
        SET_PED_PATH_CAN_AVOID_LINE_OF_FIRE( l_U844[uParam0]._fU0, 0 );
        OPEN_SEQUENCE_TASK( ref uVar7 );
        if ((iParam1 == 0) || ((fVar4 < fVar6) AND (fVar4 < fVar5)))
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U315, 3, -1, 0.50000000, 0, 0 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U318, 3, -1, 0.50000000, 0, 0 );
        }
        else if ((iParam1 == 1) || ((fVar5 < fVar6) AND (fVar5 < fVar4)))
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U321, 3, -1, 0.50000000, 0, 0 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U324, 3, -1, 0.50000000, 0, 0 );
        }
        else if ((iParam1 == 2) || ((fVar6 < fVar5) AND (fVar6 < fVar4)))
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U327, 3, -1, 0.50000000, 0, 0 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U330, 3, -1, 0.50000000, 0, 0 );
        };;;
        TASK_TURN_PED_TO_FACE_COORD( 0, -9.37238500, -24.13131000, 87.54951000, 0, 1085905306 );
        TASK_AIM_GUN_AT_COORD( 0, -9.62762600, -24.17870000, 86.77893000, -1, 0 );
        CLOSE_SEQUENCE_TASK( uVar7 );
        TASK_PERFORM_SEQUENCE( l_U844[uParam0]._fU0, uVar7 );
        CLEAR_SEQUENCE_TASK( uVar7 );
         /* MAL_WRITESTRINGANDINT */ sub_59335( "Enemy made run to Giovanna:", uParam0 );
    }
    return;
}

/* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ void sub_58714(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

/* MAL_SETLOCKEDANDREGISTEREDONPED */ void sub_58895(unknown uParam0, unknown uParam1)
{
     /* MAL_REGISTERTARGET */ sub_40660( uParam0, uParam1 );
     /* MAL_SETLOCKEDTARGET */ sub_40750( uParam0, uParam1 );
    return;
}

/* MAL_WRITESTRINGANDINT */ void sub_59335(unknown uParam0, unknown uParam1)
{
    DISPLAYF( "[MSWW] ### {0}: {1} ###", 2, 1537, uParam0, 513, uParam1 );
    return;
}

/* P_R2B_GETEVERYONEBUTTHREATENEROUTOFTHREATENINGAREA */ void sub_59458(int iParam0)
{
    int I;

    for ( I = 0; I < l_U336; I++ )
    {
        if ((l_U336[I]._fU80 != 0) AND (I != iParam0))
        {
            if (l_U336[I]._fU80 != 2)
            {
                 /* P_R2B_HIDE */ sub_59585( I );
                l_U336[I]._fU80 = 2;
            }
             /* CREATETIMER */ sub_973( ref l_U336[I]._fU44, l_U334, 1, 0 );
        }
    }
    return;
}

/* P_R2B_HIDE */ void sub_59585(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( l_U844[uParam0]._fU0 )))
    {
        CLEAR_PED_TASKS( l_U844[uParam0]._fU0 );
         /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_59666( ref l_U844[uParam0]._fU0 );
         /* MAL_SETPEDALERTNESS */ sub_40379( ref l_U844[uParam0]._fU0, 3 );
        TASK_COMBAT_MOVE_TO_COVER_COORDS( l_U844[uParam0]._fU0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U844[uParam0]._fU0 ),  /* PLAYER_PED_ID */ sub_640() );
        SET_PED_FLAG_LOCK_TO_COVER( l_U844[uParam0]._fU0, 1 );
    }
    return;
}

/* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ void sub_59666(unknown uParam0)
{
     /* MAL_SETLOCKEDANDREGISTEREDONPED */ sub_58895( uParam0,  /* PLAYER_PED_ID */ sub_640() );
    return;
}

/* P_R2B_HANDLEALLENEMIES */ void sub_59887()
{
    int I;

    for ( I = 0; I < l_U336; I++ )
    {
         /* P_R2B_HANDLEENEMY */ sub_59940( I );
    }
    return;
}

/* P_R2B_HANDLEENEMY */ void sub_59940(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( l_U844[uParam0]._fU0 )))
    {
        switch (l_U336[uParam0]._fU80)
        {
            case 0:
             /* P_R2B_UNBLOCKANDINITNEXT */ sub_60058( uParam0 );
            break;
            case 1:
            uVar3 = nil;
            if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U844[uParam0]._fU0 ), 6.00000000, ref uVar3 ))
            {
                if (( /* F_GETRANDOMINTINRANGE */ sub_60878( 0, 1 )) == 0)
                {
                     /* P_R2B_HIDE */ sub_59585( uParam0 );
                    l_U336[uParam0]._fU80 = 2;
                }
                else
                {
                     /* P_R2B_SHOOT */ sub_60986( uParam0 );
                    l_U336[uParam0]._fU80 = 3;
                }
                 /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U336[uParam0]._fU44, l_U334 );
            }
            break;
            case 3:
            case 2:
            if ( /* ISTIMERDONE */ sub_2431( ref l_U336[uParam0]._fU44 ))
            {
                 /* P_R2B_RUNTOGIOVANNA */ sub_58637( uParam0, -1 );
                l_U336[uParam0]._fU80 = 1;
            }
            break;
            case 5:
             /* MAL_WRITESCRIPTLOG */ sub_389( "P_R2B_HandleEnemy: Enemy is in DEAD state but is not dead.  WHY IS THIS HAPPENING?!" );
            break;
        }
    }
    else if (l_U336[uParam0]._fU80 != 5)
    {
        l_U336[uParam0]._fU80 = 5;
    }
    return;
}

/* P_R2B_UNBLOCKANDINITNEXT */ void sub_60058(int iParam0)
{
    if (NOT (IS_PED_DEAD( l_U844[iParam0]._fU0 )))
    {
        if ((( /* MAL_ESA_GETNUMDEADPEDS */ sub_60140( ref l_U844 )) >= l_U336[iParam0]._fU40) || ( /* ISTIMERDONE */ sub_2431( ref l_U336[iParam0]._fU0 )))
        {
             /* MAL_ES_FREEZE */ sub_38695( ref l_U844[iParam0], 0 );
             /* MAL_ES_SETPEDVISIBLE */ sub_40049( ref l_U844[iParam0], 1 );
            if ((iParam0 == 4) || (iParam0 == 0))
            {
                 /* P_R2B_RUNTOGIOVANNA */ sub_58637( iParam0, 2 );
            }
            else if (iParam0 == 3)
            {
                 /* P_R2B_RUNTOGIOVANNA */ sub_58637( iParam0, 1 );
            }
            else
            {
                 /* P_R2B_RUNTOGIOVANNA */ sub_58637( iParam0, -1 );
            }
             /* P_R2B_FINDNEXTTOUNBLOCK */ sub_60376( iParam0 );
            l_U336[iParam0]._fU80 = 1;
            if (iParam0 == 2)
            {
                 /* WRITESCRIPTLOG */ sub_2641( "MF", "STARTING SAFETY CLEANUP TIMER", 0 );
                 /* STARTTIMER */ sub_1326( ref l_U1489 );
            }
        }
    }
    return;
}

/* MAL_ESA_GETNUMDEADPEDS */ void sub_60140(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I]._fU0 ))
        {
            if (IS_PED_DEAD( (uParam0^)[I]._fU0 ))
            {
                Result++;
            }
        }
    }
    return Result;
}

/* P_R2B_FINDNEXTTOUNBLOCK */ void sub_60376(unknown uParam0)
{
    int iVar3;
    int iVar4;
    int I;

     /* MAL_WRITESTRINGANDINT */ sub_59335( "P_R2B_FindNextToUnblock", uParam0 );
    iVar3 = -1;
    iVar4 = l_U336[uParam0]._fU40 + 1;
     /* MAL_WRITESTRINGANDINT */ sub_59335( "Desired Threshold", iVar4 );
    for ( I = 0; I < l_U336; I++ )
    {
        if (l_U336[I]._fU40 == iVar4)
        {
            if ((NOT l_U336[I]._fU0._fU16) AND (NOT l_U336[I]._fU0._fU20))
            {
                iVar3 = I;
                 /* MAL_WRITESTRINGANDINT */ sub_59335( "DESIRED THRESHOLD FOUND", iVar3 );
            }
        }
    }
    if (iVar3 > -1)
    {
         /* P_R2B_INITIALIZEENEMY */ sub_60622( iVar3 );
        if (iVar3 < (l_U336 - 1))
        {
             /* MAL_WRITESCRIPTLOG */ sub_389( "Recursion begun!" );
             /* P_R2B_FINDNEXTTOUNBLOCK */ sub_60376( uParam0 );
        }
    }
    return;
}

/* P_R2B_INITIALIZEENEMY */ void sub_60622(unknown uParam0)
{
     /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U336[uParam0]._fU0, l_U336[uParam0]._fU36 );
    return;
}

/* F_GETRANDOMINTINRANGE */ void sub_60878(unknown uParam0, int iParam1)
{
    int Result;

    Result = GET_RANDOM_INT_IN_RANGE( uParam0, iParam1 + 1 );
    if (Result > iParam1)
    {
        Result = iParam1;
    }
    return Result;
}

/* P_R2B_SHOOT */ void sub_60986(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( l_U844[uParam0]._fU0 )))
    {
        CLEAR_PED_TASKS( l_U844[uParam0]._fU0 );
         /* MAL_SETLOCKEDANDREGISTEREDONPLAYER */ sub_59666( ref l_U844[uParam0]._fU0 );
         /* MAL_SETPEDALERTNESS */ sub_40379( ref l_U844[uParam0]._fU0, 3 );
         /* MAL_ES_SHOOTATPLAYER */ sub_61109( ref l_U844[uParam0], -256437761, 0, 0, 0 );
    }
    return;
}

/* MAL_ES_SHOOTATPLAYER */ void sub_61109(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown uVar7;

    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_640() ))) AND (NOT (IS_PED_DEAD( iParam0->_fU0 ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar7 );
        TASK_SHOOT_AT_PED( 0,  /* PLAYER_PED_ID */ sub_640(), -1, uParam1, uParam2, uParam4, uParam3 );
        CLOSE_SEQUENCE_TASK( uVar7 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar7 );
        CLEAR_SEQUENCE_TASK( uVar7 );
    }
    return;
}

/* F_ISPEDINTRIGGERREGION */ void sub_61557(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if ( /* F_ISPEDINTRIGGERBOX */ sub_58232( uParam1, iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam2) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU552 = 1;
    return Result;
}

/* MAL_ES_INVINCIBLE */ void sub_61758(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_INVINCIBLE( iParam0->_fU0, uParam1 );
    }
    return;
}

/* F_R2B_CANGIOVANNAREACT */ int sub_61930()
{
    if (( /* MAL_GETACTINTSTATUS */ sub_54578( g_U2777, 47 )) == 3)
    {
        return 1;
    }
    if ((( /* MAL_GETACTINTSTATUS */ sub_54578( g_U2777, 49 )) == 3) || (( /* MAL_GETACTINTSTATUS */ sub_54578( g_U2777, 48 )) == 3))
    {
        return 0;
    }
    return 1;
}

/* P_R2B_GIOVANNAREACTSTOIMMINENTDOOM */ void sub_62057(unknown uParam0)
{
    if (( /* F_ISPEDINTRIGGERBOX */ sub_58232( l_U844[uParam0]._fU0, l_U547[2] )) || ( /* F_ISPEDINTRIGGERBOX */ sub_58232( l_U844[uParam0]._fU0, l_U547[0] )))
    {
        PED_SET_ACTION_INTENTION( g_U2777, 48, 3000, 0.00000000, 0.00000000, 0.00000000 );
    }
    else if ( /* F_ISPEDINTRIGGERBOX */ sub_58232( l_U844[uParam0]._fU0, l_U547[1] ))
    {
        PED_SET_ACTION_INTENTION( g_U2777, 49, 3000, 0.00000000, 0.00000000, 0.00000000 );
    }
    return;
}

/* MAL_DELICIOUSWARNINGSPAM */ void sub_62458(unknown uParam0)
{
    int I;

    for ( I = 0; I < 500; I++ )
    {
         /* MAL_WRITESCRIPTLOG */ sub_389( uParam0 );
    }
    return;
}

/* P_R2B_RESTARTADVANCE */ void sub_62781()
{
    int iVar2;
    int I;

    iVar2 = 0;
    for ( I = 0; I < l_U336; I++ )
    {
        if ((l_U336[I]._fU80 != 0) AND (NOT (IS_PED_DEAD( l_U844[I]._fU0 ))))
        {
            if ((l_U336[I]._fU80 == 3) || (l_U336[I]._fU80 == 2))
            {
                 /* P_CREATE_AND_START_TIMER */ sub_43306( ref l_U336[I]._fU44, iVar2 * 500 );
                iVar2++;
            }
        }
    }
    return;
}

/* P_START_CHECKPOINT_THREAD */ void sub_63691(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_63930(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* MAL_SETACTINT */ void sub_64188(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U665 );
    }
    return;
}

/* P_IMAGEFX_START_BULLETCAM */ void sub_65361(unknown uParam0, boolean bParam1)
{
    PRINTSTRING( "[CO] P_IMAGEFX_START_BULLETCAM: Starting BulletCam: " );
    PRINTSTRING( uParam0 );
    PRINTNL();
     /* CLEANCAMERA */ sub_3833( ref l_U273 );
    l_U273 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U273, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

/* F_CAM_SHAKE_WOBBLY */ string sub_65681()
{
    return "WOBBLY_SHAKE";
}

/* MAL_ESA_STANDSTILL */ void sub_66065(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_STANDSTILL */ sub_44931( ref (uParam0^)[I]._fU0 );
    }
    return;
}

/* MAL_AIMGUNATPED */ void sub_66472(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        TASK_AIM_GUN_AT_PED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_GBL_SAVE_RS2A_DEAD_BODY */ void sub_67479(int iParam0)
{
    if (DOES_PED_EXIST( iParam0->_fU0 ))
    {
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_44713( ref g_U3372[0], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU0 ), (GET_PED_HEADING( iParam0->_fU0 )) + 180.00000000, 1347258909, 7, 3, 2, 0, 0 );
    }
    g_U3371 = 1;
    return;
}

/* P_GBL_SAVE_RS2B_DEAD_BODIES */ void sub_67604(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (I == 0)
        {
             /* P_CREATEPEDSTRUCTWITHNAME */ sub_44713( ref g_U3389[0], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I]._fU0 ), (GET_PED_HEADING( (uParam0^)[I]._fU0 )) + 180.00000000, -1914461942, 7, 3, 2, 0, 0 );
        }
        if (I == 2)
        {
             /* P_CREATEPEDSTRUCTWITHNAME */ sub_44713( ref g_U3389[1], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I]._fU0 ), (GET_PED_HEADING( (uParam0^)[I]._fU0 )) + 180.00000000, 1032497982, 7, 3, 2, 0, 0 );
        }
        if (I == 6)
        {
             /* P_CREATEPEDSTRUCTWITHNAME */ sub_44713( ref g_U3389[2], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I]._fU0 ), (GET_PED_HEADING( (uParam0^)[I]._fU0 )) + 180.00000000, -1179674552, 7, 3, 2, 0, 0 );
        }
    }
    g_U3388 = 1;
    return;
}

/* P_GBL_SAVE_RS2C_DEAD_BODY */ void sub_67906(int iParam0)
{
    if (DOES_PED_EXIST( iParam0->_fU0 ))
    {
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_44713( ref g_U3434[0], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU0 ), (GET_PED_HEADING( iParam0->_fU0 )) + 180.00000000, 134325340, 7, 3, 2, 0, 0 );
    }
    g_U3433 = 1;
    return;
}

/* P_RELEASE_RS2A_ASSETS */ void sub_68150()
{
     /* MAL_WRITESCRIPTLOG */ sub_389( "P_RELEASE_RS2A_ASSETS" );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_68219( ref l_U17, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_68292( 2145666447, ref g_U1108 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_69464( -1313172978, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_69464( -931023773, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_69464( 1476011597, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_69464( 1996590434, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_69464( -247122877, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_69464( 739943046, ref g_U1350 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_69922( 69, ref g_U1903 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_69922( 156, ref g_U1903 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_69922( 72, ref g_U1903 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_70309( "LEVEL_S_CLUB_CP_06", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_70309( "LEVEL_S_CLUB_CP_07", ref g_U1447 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_70685( 1194438308, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_70685( -1787162676, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_70685( 406496141, ref g_U1301 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_71080( "LEVEL/S_CLUB/s_club_vig_11_mar.act", ref g_U1964 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_71080( "LEVEL/S_CLUB/s_club_vig_11_pas.act", ref g_U1964 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_68219(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_68292( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_68292(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_68436( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_68436(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_69464(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_68436( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ void sub_69922(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_68436( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a VEHICLE_RECORDING asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_70309(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_68436( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_70685(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_68436( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_REMOVE */ void sub_71080(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_68436( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ACTION_TREE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


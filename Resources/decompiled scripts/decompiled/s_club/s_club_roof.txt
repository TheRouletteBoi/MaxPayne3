void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U21 = 0;
    l_U22 = 0;
    l_U23 = 1500;
    l_U33 = -1;
    l_U34 = {64536, 64536, 64536};
    l_U46 = 150;
    l_U47 = 0.02000000;
    l_U55 = 0;
    l_U85 = 0;
    l_U267 = {0, 2, -0.50000000};
    l_U270 = 45;
    l_U272 = 0;
    l_U314 = 0;
    l_U316 = 1;
    l_U317 = 0;
    l_U1206 = 1500;
    l_U1218 = {21.92000000, 58.28000000, 81.22200000};
    l_U1221 = {0.00000000, 0.00000000, 35.89000000};
    l_U2064 = 5000;
    l_U2065 = {-20.72136000, 35.20417000, 84.99680000};
     /* WRITESCRIPTLOG */ sub_275( "GA", "Script s_club_roof.sc is starting up...", 0 );
     /* P_RT_FILL_SCRIPT_ARRAYS */ sub_393();
    if (g_U891 == 14)
    {
        l_U314 = 11;
         /* CUTSYS_CREATESTANDALONECUTSCENE */ sub_6701( ref l_U1129, "02_05_NC_CONCAT", 600, 5757, 6062, 6652, 0, 1 );
        l_U1129._fU64 = 0;
        l_U1129._fU4 = 2;
         /* P_SET_STATIC_DATA */ sub_7325();
         /* P_TELEPORT_PLAYER */ sub_13657( -3.60000000, 72.10000000, 78.86000000, 31.00000000, 0, 0 );
        WAIT( 100 );
    }
    else
    {
        l_U314 = 1;
    }
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_13846();
        if (l_U317 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_21440();
        }
         /* P_HANDLE_DEBUG */ sub_75552();
        WAIT( 0 );
    }
     /* P_CLEANUP_RT */ sub_630( 0 );
     /* P_RELEASE_RT_ASSETS */ sub_1772();
    if (g_U892 == 13)
    {
        SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 1 );
        SWITCH_TO_LEVEL_NAME( "s_stad" );
        SET_EXITFLAG_RESPONSE();
        SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_club_roof" );
    }
     /* WRITESCRIPTLOG */ sub_275( "SP", "Script s_club_roof.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_275(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_RT_FILL_SCRIPT_ARRAYS */ void sub_393()
{
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_RT_FILL_SCRIPT_ARRAYS start", 0 );
    l_U310[0] = 406496141;
    l_U310[1] = 1194438308;
    l_U310[2] = -168327769;
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_RT_FILL_SCRIPT_ARRAYS end", 0 );
    return;
}

/* F_RT_02_05_SETUP */ int sub_600()
{
     /* P_CLEANUP_RT */ sub_630( 0 );
     /* P_RELEASE_RT_ASSETS */ sub_1772();
    AUDIO_MUSIC_SUSPEND( 16000 );
    l_U1177 =  /* CREATEVEHICLE */ sub_5109( 1049690760, -14.46785000, 116.70220000, 77.28619000, 0.00000000, 0, 0, 0 );
    SILENCE_VEHICLE( l_U1177, 1 );
    SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
    FREEZE_TIME_OF_DAY( 22, 0 );
    DISABLE_FADE_BETWEEN_SP_LEVELS();
    return 1;
}

/* P_CLEANUP_RT */ void sub_630(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_CLEANUP_RT start", 0 );
     /* CLEANCAMERA */ sub_691( ref g_U3339 );
     /* CLEANPEDARRAY */ sub_787( ref l_U451 );
     /* CLEANPEDARRAY */ sub_787( ref l_U494 );
     /* CLEANPEDARRAY */ sub_787( ref l_U534 );
     /* CLEANPEDARRAY */ sub_787( ref l_U708 );
     /* CLEANPEDARRAY */ sub_787( ref l_U876 );
     /* CLEANPEDARRAY */ sub_787( ref l_U348 );
     /* CLEANPLACEMENT */ sub_993( g_U813._fU0 );
     /* CLEANPLACEMENT */ sub_993( g_U867._fU0 );
     /* CLEANPLACEMENT */ sub_993( l_U1817 );
     /* CLEANPLACEMENT */ sub_993( l_U1818 );
     /* CLEANVEHICLE */ sub_1090( l_U1177 );
     /* CLEANOBJECT */ sub_1164( l_U1217 );
     /* CLEANPEDARRAY */ sub_787( ref g_U3386 );
     /* CLEANPEDARRAY */ sub_787( ref g_U3429 );
     /* CLEANPEDARRAY */ sub_787( ref g_U3448 );
     /* CLEANPEDARRAY */ sub_787( ref g_U3465 );
     /* CLEANPEDARRAY */ sub_787( ref g_U3495 );
     /* CLEANPEDARRAY */ sub_787( ref g_U3513 );
     /* CLEANOBJECT */ sub_1164( l_U2033 );
    if (bParam0)
    {
        if (CUTSCENE_IS_LOADED( "02_05_NC_CONCAT" ))
        {
            CLEAR_NAMED_CUTSCENE( "02_05_NC_CONCAT" );
        }
    }
    if (NOT bParam0)
    {
         /* MAL_ESA_CLEAN */ sub_1356( ref g_U2868 );
    }
    RESET_PED_MODEL_LOD_DISTANCES( g_U2464 );
    ENABLE_SHOOT_DODGE_HIGH_FALL_STAIRS_DETECTION( 0 );
     /* P_STOP_SP_CHALLENGES */ sub_1496( bParam0 );
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_CLEANUP_RT end", 0 );
    return;
}

/* CLEANCAMERA */ void sub_691(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* CLEANPEDARRAY */ void sub_787(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_837( (uParam0^)[I] );
    }
    return;
}

/* CLEANPED */ void sub_837(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANPLACEMENT */ void sub_993(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* CLEANVEHICLE */ void sub_1090(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* CLEANOBJECT */ void sub_1164(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* MAL_ESA_CLEAN */ void sub_1356(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_CLEAN */ sub_1404( ref (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_CLEAN */ void sub_1404(int iParam0)
{
     /* CLEANPED */ sub_837( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_1496(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_275( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_275( "CCB", "Stopping the Nightclub context...", 0 );
        END_CONTEXT( "Nightclub" );
    }
     /* WRITESCRIPTLOG */ sub_275( "CCB", "Stopping the Nightclub_Rooftop context...", 0 );
    END_CONTEXT( "Nightclub_Rooftop" );
    return;
}

/* P_RELEASE_RT_ASSETS */ void sub_1772()
{
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_RELEASE_RT_ASSETS start", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_1852( g_U2464, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_1852( 1049690760, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_1852( g_U887, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_1852( g_U890, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_1852( -1905703607, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_1852( 286073285, ref g_U1108 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ sub_3060( ref l_U310, ref g_U1301 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_3488( -850074815, ref g_U1350 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "level_s_club_CP_14", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "WEAP_RIFLE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "MPED_RIFLE_CORE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "MPED_RIFLE_COVER", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "MPED_SIDEARM_COVER", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "GETUPS_RIFLE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "NPC_RIFLE_CORE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "NPC_RIFLE_COVER", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "NPC_RIFLE_COVER_ENTER", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "NPC_RIFLE_COVER_RELOAD", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "NPC_RIFLE_DODGE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "NPC_RIFLE_FLAVOR", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "NPC_RIFLE_FULLBODY", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "NPC_RIFLE_RELOAD", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "NPC_RIFLE_SEARCH", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "NPC_RIFLE_STAIRS", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "NPC_RIFLE_REACT", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "AMED_RIFL_PRONE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "PLGE_RIFLE_CROUCH", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "AMED_RIFLE_CORE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "AMED_RIFLE_CORE_RELOAD", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "PLGE_RIFLE_HANDSIG", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "PLGE_RIFLE_ACTIONS", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "AMED_RIFLE_KNEE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "AMED_RIFLE_COVER", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "AMED_RIFLE_REACT", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "AMED_RIFLE_COVER_EXIT", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "EXPL_CAM", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_3894( "DAM_DEAD", ref g_U1447 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_1852( -1409914275, ref g_U1108 );
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_RELEASE_RT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_1852(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_1996( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_1996(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ void sub_3060(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_3134( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_3134(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_1996( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_3488(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_1996( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_3894(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_1996( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* CREATEVEHICLE */ void sub_5109(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_5236( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* LOADMODEL */ void sub_5236(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_5353( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* WRITE_STRING */ void sub_5353(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RT_02_05_REGISTER */ void sub_5757()
{
     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_02_05_REGISTER - START", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U1177 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U1177, "heli_luxury", 1 );
    }
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3290._fU0, g_U3290._fU4 ), "p_clb_doorB_vip_a01", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3283._fU0, g_U3283._fU4 ), "p_clb_door_ext_aa", 0 );
    SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 2 );
    CUTSCENE_REGISTER_SWITCH_TO_LEVEL_NAME( "s_stad" );
    CUTSCENE_ENABLE_SKIP( 0 );
    AUD_ENABLE_PRE_BINK_SHUTDOWN( 1 );
     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_02_05_REGISTER - END", 0 );
    return;
}

/* P_RT_02_05_HANDLE */ void sub_6062()
{
    if (l_U1129._fU52)
    {
        DO_SCREEN_FADE_IN( 0 );
         /* KILL_SPEECH */ sub_6119( ref l_U1877, 0 );
         /* KILL_SPEECH */ sub_6119( ref l_U1887, 0 );
         /* KILL_SPEECH */ sub_6119( ref l_U1867, 0 );
         /* KILL_SPEECH */ sub_6119( ref l_U1897, 0 );
         /* KILL_SPEECH */ sub_6119( ref l_U1062, 0 );
         /* KILL_SPEECH */ sub_6119( ref l_U393, 0 );
    }
    if (NOT l_U1205)
    {
        if (GET_CUTSCENE_TIME_MS() > 1400)
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )))
            {
                REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_6459() );
            }
            l_U1205 = 1;
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U1177 )))
    {
        if (GET_CUTSCENE_TIME_MS() < 33000)
        {
            SET_VEHICLE_ENGINE_ON( l_U1177, 1, 1 );
            SET_HELI_BLADES_FULL_SPEED( l_U1177 );
        }
    }
    return;
}

/* KILL_SPEECH */ void sub_6119(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_6147( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_6147(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* PLAYER_PED_ID */ int sub_6459()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_6497() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_6497()
{
    return GET_PLAYER_ID();
}

/* CUTSYS_DEFAULT_POSTCUTSCENE */ int sub_6652()
{
    return 1;
}

/* CUTSYS_CREATESTANDALONECUTSCENE */ void sub_6701(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* WRITESCRIPTLOG */ sub_275( "MSWW", "CutSys_CreateStandaloneCutscene", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_7009( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam7, 0, 6812, 6861, 0, 6911, 6959, uParam6 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDOUT */ void sub_6812()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDOUT */ int sub_6861()
{
    return 1;
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_6911()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_6959()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_7009(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* P_SET_STATIC_DATA */ void sub_7325()
{
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_SET_STATIC_DATA start", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U321[0], 21.23000000, -25.68000000, 86.60000000, -94.35000000, -1323700792, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U321[1], 19.33000000, -27.68000000, 86.92000000, -73.48000000, -938982550, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U424[0], 1.28000000, -12.14000000, 86.30000000, 180.00000000, 998709822, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U424[1], 10.52000000, -19.69000000, 86.30000000, -94.08000000, 651981951, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U454[0], -11.86000000, -3.43000000, 86.50000000, 180.00000000, -75752993, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U454[1], -9.14000000, -8.16000000, 86.90000000, 180.00000000, 1570757071, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U454[2], -8.82000000, -6.56000000, 87.04000000, 180.00000000, 266049038, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U520[0], -25.90000000, -4.63000000, 85.00000000, 180.00000000, 2032657626, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U629[0], -25.94000000, 8.91000000, 85.00000000, 180.00000000, 134325340, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U629[1], -14.42000000, 19.70000000, 86.30000000, 90.00000000, -840277063, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U629[2], -12.88000000, 22.80000000, 86.30000000, 45.00000000, -695131744, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U629[3], -8.70000000, 21.77000000, 86.30000000, 90.00000000, 1798439109, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U629[4], -26.07000000, 35.51000000, 85.00000000, 180.00000000, 168913606, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U629[5], 0.06000000, 25.38000000, 85.70000000, 180.00000000, 1716727844, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U810[0], -1.03000000, 25.47000000, 85.70000000, 180.00000000, -1044326283, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U810[1], 2.27000000, 30.00000000, 85.70000000, 135.00000000, 574587828, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U810[2], 4.03000000, 34.60000000, 85.70000000, 180.00000000, 1347258909, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U810[3], -1.55000000, 31.66000000, 85.70000000, 180.00000000, -1179674552, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_7431( ref l_U810[4], 16.58000000, 35.74000000, 85.70000000, 90.00000000, 1032497982, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U372, "SPEEECH VIG22A", 33.72000000, -28.47000000, 85.57000000, 17.72000000, 20.26000000, 8.11000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U542, "tb_RT_MidHeliStairs", 31.30000000, -21.86000000, 89.40000000, 4.37000000, 11.87000000, 4.27000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U351, "StairEnemyActivateSafety", 37.75000000, -23.96000000, 93.65000000, 8.11000000, 11.44000000, 4.27000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U563, "tb_RT_BottomHeliStairs", 32.35000000, -28.72000000, 89.64000000, 13.55000000, 20.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U584, "tb_RT_BottomACStairs", 24.30000000, -23.69000000, 82.75000000, 23.47000000, 11.27000000, 6.41000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U605, "tb_RT_MidWayACUnits", 12.34000000, -19.29000000, 85.97000000, 5.00000000, 24.89000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U499, "Activate AC Wave 3", 2.49000000, -19.29000000, 85.97000000, 5.00000000, 24.89000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U721, "tb_RT_NearBigLetterCatwalkEntrance", -10.90000000, -9.10000000, 86.13000000, 10.00000000, 9.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U742, "tb_RT_BigLetterCatwalkEntranceBottomStairs", -20.12000000, -6.42000000, 84.92000000, 6.00000000, 2.09000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U763, "tb_RT_BigLetterCatwalkBackToBuilding", -23.73000000, 31.29000000, 84.68000000, 2.58000000, 46.49000000, 3.07000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U784, "tb_RT_ExitCatwalkToBuilding", -14.27000000, 30.39000000, 86.30000000, 3.55000000, 25.00000000, 3.14000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U888, "tb_RT_EntranceLaneToElectricalArea", -13.95000000, 22.09000000, 84.68000000, 12.00000000, 12.00000000, 3.37000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U951, "tb_RT_ReleaseAC_UnitCS", 0.20000000, 22.12000000, 85.61000000, 6.38000000, 6.03000000, 2.79000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U930, "tb_RT_TooNearAmbush", 0.94000000, 30.71000000, 85.61000000, 5.75000000, 2.67000000, 2.79000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U972, "tb_RT_StairwellDoorOuter", 12.60000000, 60.84000000, 78.15000000, 3.10000000, 2.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U993, "tb_RT_StairwellDoorInner", 12.67000000, 60.67000000, 77.90000000, 2.27000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1014, "Suppress Shoot dodge", 12.60000000, 58.58000000, 78.15000000, 3.25000000, 5.99000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U403, "Activate_AC_Runners", 29.87000000, -20.83000000, 85.71000000, 6.99000000, 11.32000000, 6.64000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U909, "Release CS Near Fence", 0.60000000, 24.81000000, 85.61000000, 7.02000000, 2.70000000, 2.79000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1081, "Force Exit Door Open", 17.23000000, 39.19000000, 85.61000000, 14.62000000, 23.46000000, 2.79000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1156, "Preload_02_05", 20.35000000, 57.64000000, 80.68000000, 6.09000000, 4.07000000, 3.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1837, "tb_RT_SPEECH_MVPGDA", 17.93000000, 55.52000000, 78.44000000, 13.75000000, 8.32000000, 7.52000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1795, "Suppress Shootdodge Death", 29.57000000, -21.86000000, 85.51000000, 10.27000000, 9.26000000, 6.11000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1604[0], "Fall Death 0", -25.61000000, 8.35000000, 79.82000000, 94.91000000, 20.00000000, 4.80000000, 0.00000000, 0.00000000, 90.37000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1604[1], "Fall Death 1", -17.40000000, -11.05000000, 80.58000000, 4.21000000, 4.61000000, 2.30000000, 0.00000000, 0.00000000, 90.37000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1604[2], "Fall Death 2", -17.40000000, 11.77000000, 77.93000000, 31.56000000, 4.61000000, 4.62000000, 0.00000000, 0.00000000, 90.37000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1604[3], "Fall Death 3", -18.14000000, 38.84000000, 76.49000000, 21.78000000, 4.61000000, 4.62000000, 0.00000000, 0.00000000, 90.37000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1604[4], "Fall Death 4", 34.10000000, -8.28000000, 83.02000000, 21.09000000, 19.54000000, 4.80000000, 0.00000000, 0.00000000, 90.37000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1604[5], "Fall Death 5", 60.88000000, -25.03000000, 88.47000000, 40.00000000, 15.63000000, 4.80000000, 0.00000000, 0.00000000, 90.37000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1731[0], "Fall Death 6", 54.05000000, -8.85000000, 88.45000000, 15.00000000, 30.00000000, 4.80000000, 0.00000000, 0.00000000, 90.37000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1731[1], "Fall Death 7", 59.63000000, -37.86000000, 88.47000000, 15.00000000, 20.00000000, 4.80000000, 0.00000000, 0.00000000, 90.37000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1731[2], "Fall Death 8", 51.77000000, -46.02000000, 90.58000000, 15.00000000, 20.00000000, 4.80000000, 0.00000000, 0.00000000, 90.37000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1928, "tbImageFX_Stairs01", 21.50860000, 53.07630000, 86.21000000, 4.00000000, 4.07000000, 3.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1949, "tbImageFX_Stairs02", 21.72000000, 59.20000000, 84.48410000, 4.00000000, 4.07000000, 3.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1970, "tbImageFX_Stairs03", 19.32430000, 51.79820000, 82.75760000, 4.00000000, 4.07000000, 3.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1991, "tbImageFX_Stairs04", 21.71000000, 59.22000000, 81.07960000, 4.00000000, 4.07000000, 3.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U2012, "tbImageFX_Stairs05", 19.36000000, 51.83000000, 79.16960000, 4.00000000, 4.07000000, 3.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_8410( ref l_U1907, "Stairwell Stop Dialogue", 12.60000000, 53.51000000, 79.32000000, 3.25000000, 5.99000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERREGION */ sub_11460( ref l_U1322, ref l_U1604 );
     /* P_CREATETRIGGERREGION */ sub_11460( ref l_U1463, ref l_U1731 );
     /* P_CREATETETHERBOX */ sub_11860( ref l_U805, "teth_RT_OnBuildingNearCatwalk", -14.27000000, 30.39000000, 86.30000000, 3.55000000, 25.00000000, 3.14000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_11860( ref l_U806, "Valid_Enemy_Area_A", 14.85000000, 5.55000000, 84.60000000, 92.02000000, 88.75000000, 25.70000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_11860( ref l_U807, "Valid_Enemy_Area_B", -24.09000000, 53.89000000, 84.60000000, 17.48000000, 18.64000000, 25.70000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEDOORSTRUCT */ sub_12131( ref l_U1040[0], -2113982500, -12.48665000, -4.96388000, 87.33427000, 0.00000000, 0.00000000, 3.14000000 );
     /* P_CREATEDOORSTRUCT */ sub_12131( ref l_U1040[1], -2113982500, 22.71257000, -30.85865000, 87.39023000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_CREATEDOORSTRUCT */ sub_12131( ref l_U1040[2], 754309992, 4.83653000, 41.40447000, 87.76401000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_CREATEPOISTRUCTCOORD */ sub_12325( ref l_U1226, 2, l_U1218, l_U1218, l_U1218, 1.50000000, 3.00000000, 1, 0 );
     /* P_SET_POI_FORCE_WALK */ sub_13263( ref l_U1226, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_13333( ref l_U1226, 30, "POI_NECKLACE" );
     /* P_SET_POI_REUSABLE */ sub_13543( ref l_U1226, 1 );
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_7431(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_8410(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETRIGGERREGION */ void sub_11460(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
         /* WRITESCRIPTLOG */ sub_275( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

/* P_CREATETETHERBOX */ void sub_11860(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEDOORSTRUCT */ void sub_12131(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

/* P_CREATEPOISTRUCTCOORD */ void sub_12325(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_12365( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_12758( iParam0 );
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_12365(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_12758(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_12856( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_12856(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_12932( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_12932( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_12932( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_12932( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_12932( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_12932( iParam0, 0 );
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_12932(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_SET_POI_FORCE_WALK */ void sub_13263(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_13333(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_13389( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_13389(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_SET_POI_REUSABLE */ void sub_13543(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

/* P_TELEPORT_PLAYER */ void sub_13657(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 =  /* PLAYER_PED_ID */ sub_6459();
     /* TELEPORTPED */ sub_13703( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

/* TELEPORTPED */ void sub_13703(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_HANDLE_FAILURE */ void sub_13846()
{
    if (g_U892 == 13)
    {
        switch (l_U317)
        {
            case 0:
            if ((g_U3360 == 1) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )))
            {
                 /* KILL_ANY_MISSION_SPEECH */ sub_13973( 0 );
                 /* KILL_ANY_AMBIENT_SPEECH */ sub_14173( 0 );
                AUDIO_MUSIC_SUSPEND( 5000 );
                g_U3360 = 0;
                l_U317 = 1;
                 /* WRITESCRIPTLOG */ sub_275( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            else if ( /* RESTARTING_CHECKPOINT */ sub_14449())
            {
                l_U317 = 3;
                 /* WRITESCRIPTLOG */ sub_275( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 1:
            if ((( /* F_CHECK_QUIT_RETRY */ sub_15003( 0 )) == 1) || ( /* IS_RESTART_ACTIVE */ sub_14959()))
            {
                if ( /* IS_RESTART_ACTIVE */ sub_14959())
                {
                    ;
                }
                l_U317 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )))
            {
                l_U317 = 3;
                 /* WRITESCRIPTLOG */ sub_275( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_275( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            SET_PLAYER_INVINCIBLE(  /* PLAYER_ID */ sub_6497(), 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_6497() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_6497(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6459() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6459(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
             /* P_CLEANUP_RT */ sub_630( 1 );
            l_U317 = 4;
             /* WRITESCRIPTLOG */ sub_275( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_275( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_16802( ref l_U274,  /* PLAYER_PED_ID */ sub_6459() );
            l_U317 = 5;
             /* WRITESCRIPTLOG */ sub_275( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_275( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U314 = 1;
            l_U316 = 0;
            l_U317 = 0;
             /* WRITESCRIPTLOG */ sub_275( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_13973(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* KILL_ANY_AMBIENT_SPEECH */ void sub_14173(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_AMBIENT_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 3) AND (g_U1[I] >= 1))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_14449()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6459(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_6497(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_6497(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_6459() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_6459(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_14959()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_15003(int iParam0)
{
    iParam0 = 1;
    switch (l_U22)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_15081( ref l_U24 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )))
            {
                l_U23 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_15209( ref l_U24, l_U23, 1, 1 );
             /* STARTTIMER */ sub_15357( ref l_U24 );
        }
        if ( /* ISTIMERDONE */ sub_15488( ref l_U24 ))
        {
             /* WRITESCRIPTLOG */ sub_275( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_6497() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_6497(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U22 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U22 = 2;
            }
            else
            {
                l_U22 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_275( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_15983();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_275( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_15983();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_15081(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_15209(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_15357(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_15488(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_15983()
{
     /* WRITESCRIPTLOG */ sub_275( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_16056( ref l_U24 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_6497() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_6497(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U21 = 0;
    l_U21 = l_U21;
    l_U22 = 0;
    return;
}

/* RESETTIMER */ void sub_16056(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_16802(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_275( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_17021( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_18185( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_18499( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_18934( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_18499( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_18934( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_18499( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_18934( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_19250( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_18934( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_19250( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_18934( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_19822( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_20024( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_6459(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_275( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_17021(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_17083( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_17083(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_18185(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_18499(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_5353( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_18934(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_19250(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_5353( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_19822(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_20024(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_17083( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_20122( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_20122(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_21440()
{
    int iVar2;
    int I;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;

    iVar2 = l_U314;
    if ((l_U314 < 12) AND (l_U314 > 3))
    {
         /* P_HANDLE_DOORS */ sub_21495();
         /* P_HANDLE_SP_CHALLENGES */ sub_22259();
    }
    switch (l_U314)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_275( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_22833();
         /* P_SET_STATIC_DATA */ sub_7325();
         /* P_INITIALIZE_SP_CHALLENGES */ sub_23459();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U314 = 2;
         /* WRITESCRIPTLOG */ sub_275( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_275( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_REQUEST_RT_PERSISTENT_ASSETS */ sub_24174();
         /* P_REQUEST_RT_NONPERSISTENT_ASSETS */ sub_32315();
        l_U314 = 3;
         /* WRITESCRIPTLOG */ sub_275( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_35747( ref g_U1301 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_35350( ref g_U1108 )))
        {
            if ((NOT l_U274._fU0) AND (g_U891 == 13))
            {
                g_U1101 = 1;
                l_U316 = 0;
                l_U314 = 4;
                 /* WRITESCRIPTLOG */ sub_275( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U314 = 6;
                 /* WRITESCRIPTLOG */ sub_275( "SP", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_275( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_36382( ref l_U274 )))
        {
             /* F_GIVEPEDWEAPON */ sub_19250(  /* PLAYER_PED_ID */ sub_6459(), 1194438308, 200, 0, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_18499(  /* PLAYER_PED_ID */ sub_6459(), 406496141, 1, 200, 0 );
            l_U314 = 5;
             /* WRITESCRIPTLOG */ sub_275( "MF", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U314 = 6;
             /* WRITESCRIPTLOG */ sub_275( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_6459(), 1 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6459(), 0, 0 ) )))
            {
                if (g_U892 != 13)
                {
                    g_U892 = 13;
                     /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_36905( ref l_U274, g_U892,  /* PLAYER_PED_ID */ sub_6459(), g_U2216[13], g_U2331[13], g_U2370[13], g_U2409[13], 0 );
                }
                l_U314 = 6;
                 /* WRITESCRIPTLOG */ sub_275( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 6:
        if ( /* F_RT_HANDLE_PED_SPAWNING */ sub_41569())
        {
             /* P_RT_SETUP_AC_WAVE_1 */ sub_43522();
             /* P_RT_SETUP_STAIR_ENEMY */ sub_45215();
             /* P_RT_SETUP_AC_WAVE_2 */ sub_45651();
             /* P_RT_SETUP_AC_WAVE_3 */ sub_46366();
            l_U314 = 7;
             /* WRITESCRIPTLOG */ sub_275( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 7:
        if (g_U1101)
        {
            l_U314 = 8;
             /* WRITESCRIPTLOG */ sub_275( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 8:
        if (l_U315 == 1)
        {
             /* P_RT_CREATE_PLACEMENTS */ sub_46933();
            SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
            FREEZE_TIME_OF_DAY( 22, 0 );
            if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
            {
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            }
            if (l_U316)
            {
                if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )))
                {
                    REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_6459() );
                }
                 /* F_GIVEPEDWEAPON */ sub_19250(  /* PLAYER_PED_ID */ sub_6459(), 1194438308, 200, 0, 1 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_18499(  /* PLAYER_PED_ID */ sub_6459(), 406496141, 1, 200, 1 );
                AUDIO_SET_PED_FOOTSTEPS_ON( 1 );
            }
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_52075( ref l_U1102, "MID_16_NC_concat", 49203, 49256, 49876, 6652, 50092, 50587, 250, 0 );
            l_U1102._fU64 = 0;
            if (l_U316)
            {
                l_U1102._fU4 = 2;
            }
            else
            {
                l_U1102._fU4 = 7;
            }
        }
        if (( /* CUTSYS_HANDLECUTSCENE */ sub_52290( ref l_U1102 )) == 1)
        {
            l_U314 = 10;
            if (NOT l_U274._fU0)
            {
                g_U892 = 13;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_36905( ref l_U274, g_U892,  /* PLAYER_PED_ID */ sub_6459(), g_U2216[13], g_U2331[13], g_U2370[13], g_U2409[13], 0 );
                 /* P_START_SP_CHALLENGES */ sub_54573();
            }
            if (IS_ARCADE_MODE_ACTIVE() == 1)
            {
                SET_PAYNEKILLER_AMT( 1 );
            }
            else
            {
                SET_PAYNEKILLER_AMT( 0 );
            }
        }
        break;
        case 10:
         /* P_HANDLE_IMAGEFX_STAIRS */ sub_54774();
        if (l_U315)
        {
             /* P_SAFE_UNLOAD_CUTSCENE */ sub_56433( "MID_16_NC_concat" );
            ENABLE_SHOOT_DODGE_HIGH_FALL_STAIRS_DETECTION( 1 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        }
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_56693( ref l_U451, 0.00000000, 0, 1 );
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_56693( ref l_U494, 0.00000000, 0, 1 );
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_56693( ref l_U534, 0.00000000, 0, 1 );
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_56693( ref l_U348, 0.00000000, 0, 1 );
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_56693( ref l_U708, 0.00000000, 0, 1 );
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_56693( ref l_U876, 0.00000000, 0, 1 );
         /* P_PED_Z_SAFETY_CHECK */ sub_56759(  /* PLAYER_PED_ID */ sub_6459(), 70.00000000, 1, 0 );
         /* P_HANDLE_DEAD_BODY_SPAWNS */ sub_56989();
        if (NOT l_U1816)
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_58157( l_U1795 ))
            {
                 /* WRITESCRIPTLOG */ sub_275( "MF", "Player can no longer die from shoot dodge deaths...", 0 );
                SET_ALLOW_PLAYER_DIE_FROM_SHOOT_DODGE( 0 );
                l_U1816 = 1;
            }
        }
        else if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_58157( l_U1795 )))
        {
             /* WRITESCRIPTLOG */ sub_275( "MF", "Player can once again die from shoot dodge deaths...", 0 );
            SET_ALLOW_PLAYER_DIE_FROM_SHOOT_DODGE( 1 );
            l_U1816 = 0;
        }
        if (( /* F_ISPLAYERINTRIGGERREGIONFIRSTTIME */ sub_58404( ref l_U1463, 0 )) || ( /* F_ISPLAYERINTRIGGERREGIONFIRSTTIME */ sub_58404( ref l_U1322, 0 )))
        {
            SET_PLAYER_INVINCIBLE(  /* PLAYER_ID */ sub_6497(), 1 );
            BULLET_CAMERA_PRELOAD_TEXT_BINK( "MISS_DEATH_FALL_01A", 1 );
            g_U3339 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            SETUP_BULLET_CAMERA_SCENE( g_U3339, "MISS_DEATH_FALL_01A", 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
            SET_CAM_ACTIVE( g_U3339, 1 );
            g_U3360 = 1;
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U403, 0 ))
        {
             /* P_RT_START_AC_WAVE_1 */ sub_59070();
        }
        if (l_U319 == 1)
        {
            if (NOT l_U320)
            {
                if ( /* F_ARE_PEDS_IN_ARRAY_AWARE_OF_PED */ sub_59623( ref l_U348,  /* PLAYER_PED_ID */ sub_6459(), 0, 1, 1, 1, 1 ))
                {
                     /* KILL_SPEECH */ sub_6119( ref l_U1062, 0 );
                    for ( I = 0; I < l_U348; I++ )
                    {
                        CLEAR_PED_TASKS( l_U348[I] );
                        TASK_COMBAT_PED( l_U348[I],  /* PLAYER_PED_ID */ sub_6459() );
                    }
                    l_U320 = 1;
                }
            }
        }
        if (NOT l_U319)
        {
            if ((IS_PED_ON_SCREEN( l_U348[1], 1 )) || ((IS_PED_ON_SCREEN( l_U348[0], 1 )) || ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U372, 0 ))))
            {
                SET_PLAYER_THREAT_REACTION(  /* PLAYER_PED_ID */ sub_6459(), 1 );
                 /* P_RT_START_STAIR_ENEMY */ sub_60286();
                 /* P_RT_PLAY_DIALOGUE_VIG22A */ sub_60791();
                l_U319 = 1;
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U584, 0 ))
        {
             /* WRITESCRIPTLOG */ sub_275( "MF", "Playing music cue: 8.2", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_2_3", "NIGHTCLUB_01_2_3", 0, 6000, -1, -1082130432, 0 );
        }
        if ((NOT l_U403._fU64) AND (( /* F_IS_PED_ARRAY_DEFEATED */ sub_61240( ref l_U348, 0 )) AND (l_U319)))
        {
            if (NOT ( /* HASTIMERBEENACTIVATED */ sub_15081( ref g_U3529 )))
            {
                 /* P_CREATE_AND_START_TIMER */ sub_61626( ref g_U3529, g_U3538 );
            }
            if ( /* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ sub_61689())
            {
                if ((g_U3529._fU16) || ( /* ISTIMERDONE */ sub_15488( ref g_U3529 )))
                {
                    if (NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_6459() )))
                    {
                         /* WRITESCRIPTLOG */ sub_275( "MF", "Playing Speech: SSTD_MFSP", 0 );
                         /* P_SPEECH_PLAY_MONOLOGUE */ sub_50756( ref g_U3540, ref uVar4 );
                    }
                     /* RESETTIMER */ sub_16056( ref g_U3529 );
                }
            }
        }
        if (NOT l_U626)
        {
            if ((( /* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ sub_61434( ref l_U451 )) >= 2) || ( /* F_ISPLAYERINTRIGGERBOX */ sub_58157( l_U605 )))
            {
                 /* P_RT_AC_ENEMIES_WAVE_2 */ sub_62039();
                l_U626 = 1;
            }
        }
        if (NOT l_U498)
        {
            if ((( /* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ sub_61434( ref l_U494 )) > 1) || ( /* F_ISPLAYERINTRIGGERBOX */ sub_58157( l_U499 )))
            {
                 /* P_RT_START_AC_WAVE_3 */ sub_62472();
                l_U498 = 1;
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U721, 0 ))
        {
            l_U627 = 1;
             /* WRITESCRIPTLOG */ sub_275( "MF", "Preloading Helicopter Model for ending cutscene...", 0 );
             /* P_STREAMREQ_MODELNAMES_INSERT */ sub_24276( 1049690760, ref g_U1108 );
        }
        if ((l_U627 != 4) AND (l_U627 != 0))
        {
             /* P_RT_START_BIGLETTER_ENEMIES */ sub_62879();
        }
        if (l_U627 == 4)
        {
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U742, 0 ))
            {
                 /* WRITESCRIPTLOG */ sub_275( "MF", "Music Cue: 8.3", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_1_2_3", "NIGHTCLUB_01_1_2_3", 0, 5000, 5000, -1082130432, 0 );
                 /* P_RT_BIGLETTER_ENEMIES_WAVE2 */ sub_64072();
            }
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U763, 0 ))
            {
                 /* P_RT_ACTIVATE_BIGLETTER_ENEMY_FROM_ELECTRIC_AREA */ sub_64866();
            }
            if (l_U763._fU64)
            {
                if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U784, 0 ))
                {
                     /* WRITESCRIPTLOG */ sub_275( "GA", "Player exited catwalk back to building.", 0 );
                     /* P_REMOVEALLTETHERSFROMPED */ sub_65338( l_U708[5] );
                }
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U888, 0 ))
        {
            l_U808 = 1;
        }
        if ((l_U808 != 4) AND (l_U808 != 0))
        {
             /* P_RT_START_ELECTRIC_AREA_ENEMIES */ sub_65462();
        }
        if (l_U808 == 4)
        {
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U930, 0 ))
            {
                 /* P_RT_UPDATE_ELECTRIC_AMBUSH_BECAUSE_PLAYER_HAS_ENGAGED */ sub_66995();
            }
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U909, 0 ))
            {
                if (NOT (IS_PED_DEAD( l_U876[2] )))
                {
                    SET_PED_FLAG_LOCK_TO_COVER( l_U876[2], 0 );
                    SET_PED_COMBAT_MOVEMENT( l_U876[2], 2 );
                }
            }
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U951, 0 ))
            {
                if (NOT (IS_PED_DEAD( l_U876[3] )))
                {
                    SET_PED_FLAG_LOCK_TO_COVER( l_U876[3], 0 );
                }
            }
            if (NOT l_U1156._fU64)
            {
                if (g_U3467)
                {
                    if ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_41748( ref g_U3495, ref g_U3468, -1, 1, 1, 0, 1 ))
                    {
                        WAIT( 0 );
                         /* P_GBL_RESTORE_RS4_DEAD_BODIES */ sub_67581();
                        break;
                    }
                }
                if (( /* F_HAS_PED_ARRAY_SPAWNED */ sub_41611( ref g_U3495, 1 )) AND (g_U3498))
                {
                    if ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_41748( ref g_U3513, ref g_U3499, -1, 1, 1, 0, 1 ))
                    {
                        WAIT( 0 );
                         /* P_GBL_RESTORE_RS4B_DEAD_BODY */ sub_67918();
                        break;
                    }
                }
            }
        }
        if ((l_U808 == 4) AND ((l_U627 == 4) AND (( /* F_HAS_PED_ARRAY_SPAWNED */ sub_41611( ref l_U534, 1 )) AND (( /* F_HAS_PED_ARRAY_SPAWNED */ sub_41611( ref l_U494, 1 )) AND (( /* F_HAS_PED_ARRAY_SPAWNED */ sub_41611( ref l_U451, 1 )) AND (NOT l_U318))))))
        {
            if ((((((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_61301( ref l_U348 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_61301( ref l_U451 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_61301( ref l_U494 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_61301( ref l_U534 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_61301( ref l_U708 ))) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_61301( ref l_U876 ))) == 1)
            {
                 /* WRITESCRIPTLOG */ sub_275( "GA", "Assigning bullet cam to last enemy in Rooftop", 0 );
                 /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_68275( ref l_U348 );
                 /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_68275( ref l_U451 );
                 /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_68275( ref l_U494 );
                 /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_68275( ref l_U534 );
                 /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_68275( ref l_U708 );
                 /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_68275( ref l_U876 );
                l_U318 = 1;
            }
        }
        if (NOT l_U1216)
        {
            if ( /* F_RT_ARE_ALL_CS_DEAD */ sub_68510())
            {
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                     /* WRITESCRIPTLOG */ sub_275( "MF", "Music Cue 8.4", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_2", "NIGHTCLUB_01_2", 0, 5000, 5000, -1082130432, 0 );
                    l_U1216 = 1;
                }
            }
            else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_58157( l_U1837 ))
            {
                 /* WRITESCRIPTLOG */ sub_275( "MF", "Music Cue 8.4", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_2", "NIGHTCLUB_01_2", 0, 5000, 5000, -1082130432, 0 );
                l_U1216 = 1;
            }
        }
        if (NOT l_U1837._fU64)
        {
            if (TIME_SINCE_LAST_MONOLOGUE() > 1000)
            {
                if ( /* ISTIMERDONE */ sub_15488( ref l_U1828 ))
                {
                     /* P_SPEECH_PLAY_MONOLOGUE */ sub_50756( "SCLB_MPRCA", ref l_U1887 );
                }
            }
        }
        if (TIME_SINCE_LAST_MONOLOGUE() > 1000)
        {
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U1837, 0 ))
            {
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_50756( "SCLB_MVPGDA", ref l_U1867 );
                 /* STARTTIMER */ sub_15357( ref l_U1858 );
            }
        }
        if (TIME_SINCE_LAST_MONOLOGUE() > 1000)
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_58157( l_U1837 ))
            {
                if ( /* ISTIMERDONE */ sub_15488( ref l_U1858 ))
                {
                     /* P_SPEECH_PLAY_MONOLOGUE */ sub_50756( "SCLB_DMDAS", ref l_U1877 );
                }
            }
        }
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U1081, 0 )) == 1)
        {
             /* P_SETDOORAUTOCLOSE */ sub_69104( ref g_U3269, 0 );
             /* P_OPENDOOR */ sub_69195( ref g_U3269, 0, 1, 1.00000000 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U1156, 0 ))
        {
             /* LOADSEAMLESSCUTSCENE */ sub_31919( "02_05_NC_CONCAT", 0 );
            WAIT( 0 );
             /* CLEANPEDARRAY */ sub_787( ref l_U451 );
             /* CLEANPEDARRAY */ sub_787( ref l_U494 );
             /* CLEANPEDARRAY */ sub_787( ref l_U534 );
             /* CLEANPEDARRAY */ sub_787( ref l_U708 );
             /* CLEANPEDARRAY */ sub_787( ref l_U876 );
             /* CLEANPEDARRAY */ sub_787( ref l_U348 );
             /* MAL_ESA_CLEAN */ sub_1356( ref g_U2868 );
             /* CLEANPEDARRAY */ sub_787( ref g_U3386 );
             /* CLEANPEDARRAY */ sub_787( ref g_U3429 );
             /* CLEANPEDARRAY */ sub_787( ref g_U3448 );
             /* CLEANPEDARRAY */ sub_787( ref g_U3465 );
             /* CLEANPEDARRAY */ sub_787( ref g_U3495 );
             /* CLEANPEDARRAY */ sub_787( ref g_U3513 );
            WAIT( 0 );
             /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_1852( g_U2464, ref g_U1108 );
             /* P_CLOSEDOOR */ sub_69545( ref g_U3269, 1 );
             /* P_SETDOORLOCKED */ sub_22092( ref g_U3269, 1 );
             /* P_SETDOORAFFECTEDBYBULLETS */ sub_21989( ref g_U3283, 0 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U993, 0 ))
        {
            if (IS_ARCADE_MODE_ACTIVE() == 1)
            {
                DISPLAY_ARCADE_MODE_LEVEL_END( "s_stad" );
                 /* WRITESCRIPTLOG */ sub_275( "GA", "eCheckpointState = CP_IDLE", 0 );
                l_U314 = 0;
            }
            else if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6459(), 1 );
                 /* P_PLAYER_HOLSTER_WEAPONS */ sub_69837( ref l_U1178, 0, 0 );
                 /* P_CREATE_AND_START_TIMER */ sub_61626( ref l_U1196, 800 );
            }
        }
        if ( /* ISTIMERDONE */ sub_15488( ref l_U1196 ))
        {
             /* WRITESCRIPTLOG */ sub_275( "GA", "eCheckpointState = CP_02_05", 0 );
            l_U314 = 11;
        }
        if ( /* F_RT_ARE_ALL_CS_DEAD */ sub_68510())
        {
            if (NOT IS_BULLET_CAMERA_ACTIVE())
            {
                if (NOT ( /* HASTIMERBEENACTIVATED */ sub_15081( ref l_U1819 )))
                {
                     /* STARTTIMER */ sub_15357( ref l_U1819 );
                }
                if (NOT ( /* HASTIMERBEENACTIVATED */ sub_15081( ref l_U1828 )))
                {
                     /* STARTTIMER */ sub_15357( ref l_U1828 );
                }
            }
        }
        if ( /* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ sub_61689())
        {
            if ( /* F_RT_ARE_ALL_CS_DEAD */ sub_68510())
            {
                if (TIME_SINCE_LAST_MONOLOGUE() > 1500)
                {
                     /* WRITESCRIPTLOG */ sub_275( "MF", "Playing Speech: SSTD_MFSP", 0 );
                     /* P_SPEECH_PLAY_MONOLOGUE */ sub_50756( ref g_U3540, ref uVar14 );
                }
            }
        }
        if (NOT l_U1224)
        {
            if ( /* ISTIMERDONE */ sub_15488( ref l_U1819 ))
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50794( ref l_U1897 );
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_50756( "SCLB_MVRFTA", ref l_U1897 );
            }
            if ( /* ISTIMERDONE */ sub_15488( ref l_U1828 ))
            {
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50794( ref l_U1887 );
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_50756( "SCLB_MPRCA", ref l_U1887 );
            }
        }
        if ( /* F_HANDLE_POI */ sub_71530( ref l_U1226 ))
        {
             /* P_GBL_EXP_ITEM_PRE_SETUP */ sub_74239( "sclb_GiovShoe", 21.33545000, 57.40003000, 81.22250000, 0.11069800, 38.35604000, -33.70912000, "EXPL_CAM_GND_15_F_CAM", 21.95000000, 57.56000000, 81.95000000, 0.98000000 );
            if (NOT l_U1225)
            {
                 /* KILL_ANY_MISSION_SPEECH */ sub_13973( 0 );
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_50756( "SCLB_NSGVNHR", ref uVar24 );
                l_U1225 = 1;
            }
            l_U1224 = 1;
             /* STARTTIMER */ sub_15357( ref l_U1312 );
        }
        if (l_U1224)
        {
            if ( /* ISTIMERDONE */ sub_15488( ref l_U1312 ))
            {
                CAMERA_ANIMATED_STOP( 0, 0 );
            }
            if (NOT IS_ANIMATED_CAMERA_PLAYING())
            {
                 /* P_GBL_EXP_ITEM_POST_SETUP */ sub_74591( -1, -1, ref l_U1226 );
                l_U1224 = 0;
                if (NOT l_U1828._fU16)
                {
                     /* P_CREATE_AND_START_TIMER */ sub_61626( ref l_U1828, 15000 );
                }
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58935( ref l_U1907, 0 ))
        {
             /* WRITESCRIPTLOG */ sub_275( "MF", "Stopping dialogue", 0 );
             /* KILL_SPEECH */ sub_6119( ref l_U1877, 1 );
             /* KILL_SPEECH */ sub_6119( ref l_U1887, 1 );
             /* KILL_SPEECH */ sub_6119( ref l_U1867, 1 );
             /* KILL_SPEECH */ sub_6119( ref l_U1897, 1 );
             /* KILL_SPEECH */ sub_6119( ref l_U1062, 1 );
             /* KILL_SPEECH */ sub_6119( ref l_U393, 1 );
        }
        if (NOT l_U1035)
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_58157( l_U1014 ))
            {
                SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_6497(), 0 );
                l_U1035 = 1;
            }
        }
        else if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_58157( l_U1014 )))
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_6497(), 1 );
            l_U1035 = 0;
        }
        break;
        case 11:
        if (l_U315 == 1)
        {
             /* CUTSYS_CREATESTANDALONECUTSCENE */ sub_6701( ref l_U1129, "02_05_NC_CONCAT", 600, 5757, 6062, 6652, 0, 1 );
            l_U1129._fU64 = 0;
            l_U1129._fU4 = 2;
        }
        if (( /* CUTSYS_HANDLECUTSCENE */ sub_52290( ref l_U1129 )) == 1)
        {
            l_U314 = 12;
             /* WRITESCRIPTLOG */ sub_275( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 12:
         /* WRITESCRIPTLOG */ sub_275( "SP", "eCheckpointState = CP_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U314 = 0;
         /* WRITESCRIPTLOG */ sub_275( "SP", "eCheckpointState = CP_IDLE", 0 );
        break;
        case 13:
        if (l_U315)
        {
             /* P_CLEANUP_RT */ sub_630( 0 );
        }
        if (NOT (DOES_PED_EXIST( l_U708[4] )))
        {
            l_U708[4] =  /* CREATEPED */ sub_42206( ref l_U629[4] );
             /* F_GIVEPEDWEAPON */ sub_19250( l_U708[4], 1194438308, 25000, 0, 0 );
             /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_44974( ref l_U708[4], ref g_U3107, 4.00000000, 10.00000000 );
            REGISTER_TARGET( l_U708[4],  /* PLAYER_PED_ID */ sub_6459() );
            SET_LOCKED_TARGET( l_U708[4],  /* PLAYER_PED_ID */ sub_6459() );
        }
        if ((NOT ( /* HASTIMERBEENACTIVATED */ sub_15081( ref l_U2068 ))) AND ( /* F_IS_PED_DEFEATED */ sub_75363( ref l_U708[4] )))
        {
             /* CREATETIMER */ sub_15209( ref l_U2068, l_U2064, 1, 0 );
             /* STARTTIMER */ sub_15357( ref l_U2068 );
        }
        if ( /* ISTIMERDONE */ sub_15488( ref l_U2068 ))
        {
             /* CLEANPED */ sub_837( l_U708[4] );
             /* RESETTIMER */ sub_16056( ref l_U2068 );
        }
        break;
    }
    if (l_U314 != iVar2)
    {
        l_U315 = 1;
    }
    else
    {
        l_U315 = 0;
    }
    return;
}

/* P_HANDLE_DOORS */ void sub_21495()
{
    if (NOT l_U1036[0])
    {
        if ( /* F_DOESDOOREXIST */ sub_21543( ref l_U1040[0] ))
        {
            l_U1036[0] = 1;
             /* WRITESCRIPTLOG */ sub_275( "CCB", "Setting the dsRoofDoor_0 door to be CLOSED and LOCKED.", 0 );
             /* P_SETDOORMINMAXLIMIT */ sub_21719( ref l_U1040[0], -120.00000000, 0.00000000 );
             /* P_SETDOORAFFECTEDBYBULLETS */ sub_21989( ref l_U1040[0], 0 );
             /* P_SETDOORLOCKED */ sub_22092( ref l_U1040[1], 1 );
             /* P_SETDOORLOCKED */ sub_22092( ref l_U1040[2], 1 );
        }
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_21543(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_SETDOORMINMAXLIMIT */ void sub_21719(int iParam0, float fParam1, float fParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_21543( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_21768( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        PRINTSTRING( "[SP]### Error: Door fMinLimit greater than fMaxLimit (default min:-81.0 max:81.0) ###" );
        PRINTNL();
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

/* P_PRINTDOORNOTEXIST */ void sub_21768(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_SETDOORAFFECTEDBYBULLETS */ void sub_21989(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_21543( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_21768( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

/* P_SETDOORLOCKED */ void sub_22092(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_21543( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_21768( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_HANDLE_SP_CHALLENGES */ void sub_22259()
{
    switch (l_U1321)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_275( "CCB", "eOldPainless - STATE_CHALLENGE_IDLE", 0 );
        l_U1321 = 1;
        break;
        case 1:
        if (l_U314 >= 11)
        {
            if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
            {
                SCRIPT_VAR_HASH_SET_INT( 1701971384, 1 );
                DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_275( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
            }
             /* WRITESCRIPTLOG */ sub_275( "CCB", "eOldPainless - STATE_CHALLENGE_COMPLETE", 0 );
            l_U1321 = 2;
        }
        break;
        case 2: break;
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_22833()
{
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U315 = 1;
    l_U318 = 0;
    l_U319 = 0;
    l_U498 = 0;
    l_U626 = 0;
    l_U627 = 0;
    l_U628 = 0;
    l_U808 = 0;
    l_U809 = 0;
    l_U320 = 0;
    l_U1035 = 0;
    l_U1216 = 0;
    l_U1816 = 0;
    l_U1205 = 0;
     /* P_RESET_BOOL_ARRAY */ sub_23002( ref l_U1036 );
    SET_PED_MODEL_LOD_DISTANCES( g_U2464, 10.00000000, 75.00000000 );
     /* CREATETIMER */ sub_15209( ref l_U1312, 5000, 1, 0 );
     /* CREATETIMER */ sub_15209( ref l_U1819, 4500, 1, 0 );
     /* CREATETIMER */ sub_15209( ref l_U1828, 30000, 1, 0 );
     /* CREATETIMER */ sub_15209( ref l_U1858, 25000, 1, 0 );
     /* CREATETIMER */ sub_15209( ref l_U1196, 800, 1, 0 );
     /* SETUP_SCRIPTED_SPEECH */ sub_23211( "SCLBAUD" );
     /* CREATETIMER */ sub_15209( ref l_U1072, 500, 1, 0 );
     /* CREATETIMER */ sub_15209( ref l_U1207, l_U1206, 1, 0 );
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

/* P_RESET_BOOL_ARRAY */ void sub_23002(unknown uParam0)
{
    int I;

     /* WRITESCRIPTLOG */ sub_275( "CCB", "P_RESET_BOOL_ARRAY", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = 0;
    }
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_23211(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_23255();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_23255()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_23459()
{
     /* WRITESCRIPTLOG */ sub_275( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1321 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1701971384 )))
    {
         /* WRITESCRIPTLOG */ sub_275( "CCB", "Creating the OldPainless script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1701971384 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
        if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
        {
             /* WRITESCRIPTLOG */ sub_275( "CCB", "The OldPainless script variable was successfully created...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_275( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_275( "CCB", "The OldPainless script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1701971384, 0 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
    }
    return;
}

/* P_REQUEST_RT_PERSISTENT_ASSETS */ void sub_24174()
{
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_REQUEST_RT_PERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_24276( g_U2464, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_24276( g_U887, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_24276( g_U890, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_24276( -1905703607, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_24276( -1409914275, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_24276( 286073285, ref g_U1108 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ sub_27176( ref l_U310, ref g_U1301 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "level_s_club_CP_14", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "WEAP_RIFLE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "MPED_RIFLE_CORE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "MPED_RIFLE_COVER", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "MPED_SIDEARM_COVER", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "GETUPS_RIFLE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "NPC_RIFLE_CORE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "NPC_RIFLE_COVER", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "NPC_RIFLE_COVER_ENTER", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "NPC_RIFLE_COVER_RELOAD", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "NPC_RIFLE_DODGE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "NPC_RIFLE_FLAVOR", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "NPC_RIFLE_FULLBODY", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "NPC_RIFLE_RELOAD", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "NPC_RIFLE_SEARCH", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "NPC_RIFLE_STAIRS", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "NPC_RIFLE_REACT", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "AMED_RIFL_PRONE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "PLGE_RIFLE_CROUCH", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "AMED_RIFLE_CORE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "AMED_RIFLE_CORE_RELOAD", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "PLGE_RIFLE_HANDSIG", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "PLGE_RIFLE_ACTIONS", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "AMED_RIFLE_KNEE", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "AMED_RIFLE_COVER", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "AMED_RIFLE_REACT", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "AMED_RIFLE_COVER_EXIT", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "EXPL_CAM", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29224( "DAM_DEAD", ref g_U1447 );
    if ((g_U891 != 12) AND (l_U316 == 1))
    {
         /* LOADSEAMLESSCUTSCENE */ sub_31919( "mid_16_nc_concat", 0 );
    }
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_REQUEST_RT_PERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_24276(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_24343( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24601( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_24343(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24601( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24601( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24601( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_26132( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24601( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24601( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_24601(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24662( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_24662(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_26132(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ void sub_27176(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_27250( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_27250(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_27304( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27565( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_27304(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27565( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27565( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27565( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_26132( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27565( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27565( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_27565(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24662( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_29224(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_29276( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29528( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_29276(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29528( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29528( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29528( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_26132( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29528( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29528( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_29528(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24662( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_31919(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_REQUEST_RT_NONPERSISTENT_ASSETS */ void sub_32315()
{
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_REQUEST_RT_NONPERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_32423( -850074815, ref g_U1350 );
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_REQUEST_RT_NONPERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_32423(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_32484( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_32734( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_32484(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_32734( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_32734( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_32734( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_32734( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_26132( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_26132( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_32734( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_32734( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_32734(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24662( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_35350(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_35747(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_36382(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_275( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_16802( uParam0,  /* PLAYER_PED_ID */ sub_6459() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_36905(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_275( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_275( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_20024( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_37196( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_37673( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_37673( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37933( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_37673( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37933( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37933( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_37673( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37933( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37933( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37933( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_37673( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37933( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37933( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37933( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_37933( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_39513( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_275( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_37196(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_17083( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_275( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_275( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_37673(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_37933(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_39513(int iParam0)
{
     /* WRITE_STRING */ sub_5353( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_39601( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_39678( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_39678( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_39678( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_39678( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_39678( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_40548( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU52 );
     /* WRITE_STRING */ sub_5353( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU96 );
     /* WRITE_STRING */ sub_5353( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU100 );
     /* WRITE_STRING */ sub_5353( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU104 );
     /* WRITE_STRING */ sub_5353( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU108 );
     /* WRITE_STRING */ sub_5353( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU112 );
     /* WRITE_STRING */ sub_5353( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU116 );
     /* WRITE_STRING */ sub_5353( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU120 );
     /* WRITE_STRING */ sub_5353( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU124 );
     /* WRITE_STRING */ sub_5353( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU128 );
     /* WRITE_STRING */ sub_5353( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_39847( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_39847( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_39847( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_39601(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_39678(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_39847(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_40548(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* F_RT_HANDLE_PED_SPAWNING */ int sub_41569()
{
    if (NOT ( /* F_HAS_PED_ARRAY_SPAWNED */ sub_41611( ref l_U348, 1 )))
    {
        if ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_41748( ref l_U348, ref l_U321, -1, 1, 0, 1, 1 ))
        {
            return 0;
        }
        return 0;
    }
    if (NOT ( /* F_HAS_PED_ARRAY_SPAWNED */ sub_41611( ref l_U451, 1 )))
    {
        if ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_41748( ref l_U451, ref l_U424, -1, 1, 0, 1, 1 ))
        {
            return 0;
        }
        return 0;
    }
    if (NOT ( /* F_HAS_PED_ARRAY_SPAWNED */ sub_41611( ref l_U494, 1 )))
    {
        if ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_41748( ref l_U494, ref l_U454, -1, 1, 0, 1, 1 ))
        {
            return 0;
        }
        return 0;
    }
    if (NOT ( /* F_HAS_PED_ARRAY_SPAWNED */ sub_41611( ref l_U534, 1 )))
    {
        if ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_41748( ref l_U534, ref l_U520, -1, 1, 0, 1, 1 ))
        {
            return 0;
        }
        return 0;
    }
    return 1;
}

/* F_HAS_PED_ARRAY_SPAWNED */ void sub_41611(unknown uParam0, boolean bParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) == 1)
        {
            Result = 1;
            if (NOT bParam1)
            {
                return 1;
            }
        }
        else
        {
            Result = 0;
        }
    }
    return Result;
}

/* F_HANDLE_PED_ARRAY_SPAWN */ int sub_41748(unknown uParam0, unknown uParam1, int iParam2, boolean bParam3, boolean bParam4, int iParam5, unknown uParam6)
{
    int iVar9;
    int iVar10;
    int Result;

    iVar9 =  /* F_GET_NUM_SPAWNED_PED_IN_ARRAY */ sub_41789( uParam0, uParam1 );
    if (iParam2 == -1)
    {
        iVar10 = (uParam0^);
    }
    else
    {
        iVar10 = iParam2;
    }
    if (iVar9 < iVar10)
    {
        if ((uParam1^)[iVar9]._fU16 == 0)
        {
            SCRIPT_ASSERT( "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
             /* WRITESCRIPTLOG */ sub_275( "MF", "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            PRINTSTRING( "INVALID SPAWN INDEX: " );
             /* WRITE_INT */ sub_39847( iVar9 );
            return 0;
        }
        if (NOT (DOES_PED_EXIST( (uParam0^)[iVar9] )))
        {
             /* LOADMODEL */ sub_5236( (uParam1^)[iVar9]._fU16, uParam6 );
            (uParam0^)[iVar9] =  /* CREATEPED */ sub_42206( ref (uParam1^)[iVar9] );
            if (NOT bParam4)
            {
                SET_PED_VISIBLE( (uParam0^)[iVar9], bParam4 );
                 /* WRITE_STRING */ sub_5353( "SPAWNING INVISIBLE PED!!!" );
            }
            if (iParam5 == 1)
            {
                 /* P_DEACTIVATEPED */ sub_42997( (uParam0^)[iVar9] );
                 /* WRITE_STRING */ sub_5353( "Deactivating Ped..." );
            }
        }
    }
    if (bParam3)
    {
        if (iVar9 == (iVar10 - 1))
        {
             /* WRITESCRIPTLOG */ sub_275( "MF", "F_HANDLE_PED_ARRAY_SPAWN: Returning true Once.  If you see this looping, you likely have unitialized ped model data in your pedstruct array.", 0 );
            Result = 1;
        }
        return Result;
    }
    else if (iVar9 >= iVar10)
    {
        return 1;
    }
    return 0;
}

/* F_GET_NUM_SPAWNED_PED_IN_ARRAY */ void sub_41789(unknown uParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = (uParam1^);
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (DOES_PED_EXIST( (uParam0^)[I] )))
        {
            if ((uParam1^)[I]._fU16 != 0)
            {
                if (I < Result)
                {
                    Result = I;
                }
            }
        }
    }
    return Result;
}

/* CREATEPED */ void sub_42206(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_5236( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_42697( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_42798( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_42697(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_42798(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_42997(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* P_RT_SETUP_AC_WAVE_1 */ void sub_43522()
{
    int I;

     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_SETUP_AC_WAVE_1 - START", 0 );
     /* P_ADD_TETHER_TO_PED_ARRAY */ sub_43607( ref l_U451, l_U806, 1 );
     /* P_ADD_TETHER_TO_PED_ARRAY */ sub_43607( ref l_U451, l_U807, 1 );
     /* P_PED_ARRAY_SET_VAULTING */ sub_43794( ref l_U451, 0, 0 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_43938( ref l_U451, "pi_RT_AC_WAVE_1" );
    for ( I = 0; I < l_U451; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U451[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U451[I], 1 );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_44136( l_U451[I], ref l_U536 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U451[0] )))
    {
         /* F_GIVEPEDWEAPON */ sub_19250( l_U451[0], 1194438308, 25000, 0, 0 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_44974( ref l_U451[0], ref g_U3107, 5.00000000, 20.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U451[1] )))
    {
         /* F_GIVEPEDWEAPON */ sub_19250( l_U451[1], 406496141, 25000, 0, 0 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_44974( ref l_U451[1], ref g_U3107, 5.00000000, 15.00000000 );
    }
     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_SETUP_AC_WAVE_1 - END", 0 );
    return;
}

/* P_ADD_TETHER_TO_PED_ARRAY */ void sub_43607(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_TETHERPED */ sub_43669( ref uParam1, (uParam0^)[I], uParam2 );
    }
    return;
}

/* P_TETHERPED */ void sub_43669(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* P_PED_ARRAY_SET_VAULTING */ void sub_43794(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^)[I], uParam1 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^)[I], uParam2 );
        }
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_43938(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_44136(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_5353( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_44306( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_44306( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* P_SETUP_AI_GROUP */ void sub_44306(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_SET_PED_TEMPLATE_AND_RANGES */ void sub_44974(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

/* P_RT_SETUP_STAIR_ENEMY */ void sub_45215()
{
    int I;

     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_SETUP_STAIR_ENEMY - START", 0 );
     /* P_ADD_TETHER_TO_PED_ARRAY */ sub_43607( ref l_U348, l_U806, 1 );
     /* P_ADD_TETHER_TO_PED_ARRAY */ sub_43607( ref l_U348, l_U807, 1 );
     /* P_PED_ARRAY_SET_VAULTING */ sub_43794( ref l_U348, 0, 0 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_43938( ref l_U348, "pi_RT_STAIR_ENEMY" );
    for ( I = 0; I < l_U348; I++ )
    {
        CLEAR_PED_TASKS( l_U348[I] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U348[I], 1 );
        SET_PED_ALERTNESS( l_U348[I], 3 );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_44136( l_U348[I], ref l_U536 );
    }
    if (NOT (IS_PED_DEAD( l_U348[0] )))
    {
         /* F_GIVEPEDWEAPON */ sub_19250( l_U348[0], 1194438308, 25000, 0, 0 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_44974( ref l_U348[0], ref g_U3099, 5.00000000, 12.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U348[1] )))
    {
         /* F_GIVEPEDWEAPON */ sub_19250( l_U348[1], 406496141, 25000, 0, 0 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_44974( ref l_U348[1], ref g_U3099, 4.00000000, 10.00000000 );
    }
     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_SETUP_STAIR_ENEMY - END", 0 );
    return;
}

/* P_RT_SETUP_AC_WAVE_2 */ void sub_45651()
{
    int I;

     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_SETUP_AC_WAVE_2 - START", 0 );
     /* P_SETUP_AI_GROUP */ sub_44306( ref l_U536, 1056964608, 0 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_43938( ref l_U494, "pi_RT_AC_WAVE_2" );
     /* P_SET_PED_ARRAY_REGISTERED_TARGET */ sub_45778( ref l_U494,  /* PLAYER_PED_ID */ sub_6459(), 1 );
     /* P_ADD_TETHER_TO_PED_ARRAY */ sub_43607( ref l_U494, l_U806, 1 );
     /* P_ADD_TETHER_TO_PED_ARRAY */ sub_43607( ref l_U494, l_U807, 1 );
    for ( I = 0; I < l_U494; I++ )
    {
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_44136( l_U494[I], ref l_U536 );
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() ))) AND (NOT (IS_PED_DEAD( l_U494[I] ))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U494[I], 1 );
            SET_PED_ALERTNESS( l_U494[I], 2 );
            SET_PED_EMOTION_STATE( l_U494[I], 1 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U494[0] )))
    {
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_44974( ref l_U494[0], ref g_U3099, 6.00000000, 15.00000000 );
         /* F_GIVEPEDWEAPON */ sub_19250( l_U494[0], 406496141, 25000, 0, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U494[1] )))
    {
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_44974( ref l_U494[1], ref g_U3099, 6.00000000, 20.00000000 );
         /* F_GIVEPEDWEAPON */ sub_19250( l_U494[1], 406496141, 25000, 0, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U494[2] )))
    {
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_44974( ref l_U494[2], ref g_U3099, 6.00000000, 25.00000000 );
         /* F_GIVEPEDWEAPON */ sub_19250( l_U494[2], 1194438308, 25000, 0, 0 );
    }
     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_SETUP_AC_WAVE_2 - END", 0 );
    return;
}

/* P_SET_PED_ARRAY_REGISTERED_TARGET */ void sub_45778(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^)[I] ))))
        {
            REGISTER_TARGET( (uParam0^)[I], uParam1 );
            if (iParam2 == 1)
            {
                CLEAR_LOCKED_TARGET( (uParam0^)[I] );
                SET_LOCKED_TARGET( (uParam0^)[I], uParam1 );
            }
        }
    }
    return;
}

/* P_RT_SETUP_AC_WAVE_3 */ void sub_46366()
{
    int I;

     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_SETUP_AC_WAVE_3 - START", 0 );
     /* P_SETUP_AI_GROUP */ sub_44306( ref l_U536, 1056964608, 0 );
     /* P_SET_PED_ARRAY_REGISTERED_TARGET */ sub_45778( ref l_U534,  /* PLAYER_PED_ID */ sub_6459(), 1 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_43938( ref l_U534, "pi_RT_AC_WAVE_3" );
     /* P_ADD_TETHER_TO_PED_ARRAY */ sub_43607( ref l_U534, l_U806, 1 );
     /* P_ADD_TETHER_TO_PED_ARRAY */ sub_43607( ref l_U534, l_U807, 1 );
    for ( I = 0; I < l_U534; I++ )
    {
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_44136( l_U534[I], ref l_U536 );
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() ))) AND (NOT (IS_PED_DEAD( l_U534[I] ))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U534[I], 1 );
            SET_PED_ALERTNESS( l_U534[I], 2 );
            SET_PED_EMOTION_STATE( l_U534[I], 1 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U534[0] )))
    {
         /* F_GIVEPEDWEAPON */ sub_19250( l_U534[0], -168327769, 25000, 0, 0 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_44974( ref l_U534[0], ref g_U3107, 4.00000000, 9.00000000 );
    }
     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_SETUP_AC_WAVE_3 - END", 0 );
    return;
}

/* P_RT_CREATE_PLACEMENTS */ void sub_46933()
{
     /* WRITESCRIPTLOG */ sub_275( "SA", "P_RT_CREATE_PLACEMENTS start", 0 );
     /* P_CREATE_S_CLB_GG_38_03 */ sub_47010();
     /* P_CREATE_S_CLB_GG_M3_03 */ sub_47980();
    l_U1817 =  /* CREATEPLACEMENT */ sub_47646( -4072149, 40.91000000, -30.53000000, 92.41500000, 0.00000000, 0.00000000, 98.08000000, 0, 1, 0, 90.00000000 );
    l_U1818 =  /* CREATEPLACEMENT */ sub_47646( -4072149, 41.05000000, -30.53000000, 92.41500000, 0.00000000, 0.00000000, 98.08000000, 0, 1, 0, 90.00000000 );
    l_U1217 =  /* CREATEOBJECT */ sub_48256( -1905703607, l_U1218, l_U1221, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1217 ))
    {
        FREEZE_OBJECT_POSITION( l_U1217, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1217, ref g_U2592 );
    }
    l_U2033 =  /* CREATEOBJECTNOOFFSET */ sub_48649( 286073285, 51.48300000, -21.99600000, 91.16600000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U2033 ))
    {
        FREEZE_OBJECT_POSITION( l_U2033, 1 );
    }
     /* WRITESCRIPTLOG */ sub_275( "SA", "P_RT_CREATE_PLACEMENTS end", 0 );
    return;
}

/* P_CREATE_S_CLB_GG_38_03 */ void sub_47010()
{
     /* WRITESCRIPTLOG */ sub_275( "CO", "P_CREATE_S_CLB_GG_38_03", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_47136( ref g_U813, g_U887, -874786300, -1287594894, -21.47000000, 52.97000000, 85.04000000, 0.00000000, 0.00000000, g_U776, "" );
     /* P_CREATECOLLECTIBLE */ sub_47293( ref g_U813 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_47136(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_275( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_47293(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_275( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_47376( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_275( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_275( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_47376( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_993( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_47646( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_275( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_275( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_47376(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* CREATEPLACEMENT */ void sub_47646(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_CREATE_S_CLB_GG_M3_03 */ void sub_47980()
{
     /* WRITESCRIPTLOG */ sub_275( "CO", "P_CREATE_S_CLB_GG_M3_03", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_47136( ref g_U867, g_U890, 25810136, 1575318501, 45.87000000, -18.82000000, 89.75000000, 0.00000000, 0.00000000, g_U776, "" );
     /* P_CREATECOLLECTIBLE */ sub_47293( ref g_U867 );
    return;
}

/* CREATEOBJECT */ void sub_48256(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_5236( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* CREATEOBJECTNOOFFSET */ void sub_48649(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_5236( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* CUTSYS_DEFAULT_PRECUTSCENESETUP */ int sub_49203()
{
    return 1;
}

/* P_RT_MID_16_REGISTER */ void sub_49256()
{
     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_MID_16_REGISTER - START", 0 );
    CUTSCENE_REGISTER_ISEQ( -850074815 );
     /* TERMINATEISEQ */ sub_49349( 94722883, 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )))
    {
        REGISTER_DETACH_PLAYER_FOR_CUTSCENE();
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6459(), 0, 0 ), "W_SB_Uzi_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_6459(), g_U2216[13], g_U2331[13] );
        ISEQ_REGISTER_ENTITY( -850074815, "player",  /* PLAYER_PED_ID */ sub_6459(), 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        FREEZE_VEHICLE_POSITION( g_U2866, 1 );
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U2866, "heli_luxury", 0 );
    }
     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_MID_16_REGISTER - END", 0 );
    return;
}

/* TERMINATEISEQ */ void sub_49349(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_RT_MID_16_HANDLE */ void sub_49876()
{
    if (l_U1102._fU52)
    {
        AUDIO_MUSIC_SUSPEND( 8000 );
        SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
        if (g_U3089)
        {
            APPLY_PLAYER_PRELOAD_VARIATION(  /* PLAYER_PED_ID */ sub_6459(), 0 );
            g_U3089 = 0;
        }
        REMOVE_ALL_PICKUPS_AND_PLACEMENTS_OF_TYPE( 1295434569 );
    }
     /* P_MAKEHELIENGINESFUCKINGTURN */ sub_49988();
    return;
}

/* P_MAKEHELIENGINESFUCKINGTURN */ void sub_49988()
{
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
    }
    return;
}

/* P_RT_MID_16_BLEND_OUT_PREPARE */ void sub_50092()
{
     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_MID_16_BLEND_OUT_PREPARE - START", 0 );
    g_U1100 = 1;
    if (g_U3089 == 1)
    {
        APPLY_PLAYER_PRELOAD_VARIATION(  /* PLAYER_PED_ID */ sub_6459(), 0 );
        g_U3089 = 0;
    }
     /* WRITESCRIPTLOG */ sub_275( "MF", "Music Cue: 8.1", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_3", "NIGHTCLUB_01_3", 0, 4000, 0, -1082130432, 0 );
    if (NOT (ISEQ_QUERY_STATE( -850074815, 3 )))
    {
        ISEQ_REGISTER_ENTITY( -850074815, "player",  /* PLAYER_PED_ID */ sub_6459(), 0 );
        ISEQ_START( -850074815 );
        if (IS_DEATH_PANEL_WIPE_ALLOWED())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
    }
    if (NOT ( /* HASTIMERBEENACTIVATED */ sub_15081( ref l_U1072 )))
    {
         /* STARTTIMER */ sub_15357( ref l_U1072 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_CP_14", "B_OUT_MID_16_NC_FWD_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
    CAMERA_FREEZE_FRAME( 1, 800, 0, 0 );
    SET_PLAYER_THREAT_REACTION(  /* PLAYER_PED_ID */ sub_6459(), 0 );
     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_MID_16_BLEND_OUT_PREPARE - END", 0 );
    return;
}

/* F_RT_MID_16_BLEND_OUT_HANDLE */ int sub_50587()
{
    if (l_U1102._fU52)
    {
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
    }
    if ((ISEQ_QUERY_ENTITY_STATE( -850074815, "player", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -850074815, "player", 5 )))
    {
        return 1;
    }
    if (l_U316)
    {
        if ( /* ISTIMERDONE */ sub_15488( ref l_U1072 ))
        {
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_50756( "SCLB_B16A", ref l_U1062 );
        }
    }
    return 0;
}

/* P_SPEECH_PLAY_MONOLOGUE */ void sub_50756(unknown uParam0, unknown uParam1)
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50794( uParam1 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_50903( 0,  /* PLAYER_PED_ID */ sub_6459(), "MAX", uParam1, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_50903( 1,  /* PLAYER_PED_ID */ sub_6459(), "MAX", uParam1, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_51156( uParam0, uParam1, 8, 1 );
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_50794(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_50903(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_51156(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_51201( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_51201(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_51288( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_51288(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_51340( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_51858( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_51340(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_51858(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_52075(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_275( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_7009( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 6911, 6959, uParam8 );
}

/* CUTSYS_HANDLECUTSCENE */ void sub_52290(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_275( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_275( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_275( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_275( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_275( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_275( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_31919( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_275( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_53181( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_53181( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_275( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_53725( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_53181( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_54105( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_54105( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* NIS_PRE_SETUP */ void sub_53181(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_6497(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_6459(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_6459() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_6459(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_53725(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6459(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6459(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_6459(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_6459(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_6459(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_54105(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_6497(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_6459(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_54203();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_54203()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6459(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6459(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_6459(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_6459(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_START_SP_CHALLENGES */ void sub_54573()
{
     /* WRITESCRIPTLOG */ sub_275( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_275( "CCB", "Starting the Nightclub_Rooftop context...", 0 );
    START_CONTEXT( "Nightclub_Rooftop" );
    return;
}

/* P_HANDLE_IMAGEFX_STAIRS */ void sub_54774()
{
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_54820( ref l_U1928,  /* PLAYER_PED_ID */ sub_6459(), 0 ))
    {
         /* P_INIATIALIZE_IMAGEFX_STAIRS01 */ sub_55016();
    }
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_54820( ref l_U1949,  /* PLAYER_PED_ID */ sub_6459(), 0 ))
    {
        PLAY_IMAGEFX( "DISTORT_INTERLACE_MIDDLE", 4, 0 );
    }
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_54820( ref l_U1970,  /* PLAYER_PED_ID */ sub_6459(), 0 ))
    {
        PLAY_IMAGEFX( "DISTORT_INTERLACE_LEFT_HARD", 4, 0 );
    }
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_54820( ref l_U1991,  /* PLAYER_PED_ID */ sub_6459(), 0 ))
    {
        PLAY_IMAGEFX( "DISTORT_INTERLACE_MIDDLE_RIGHT", 4, 0 );
    }
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_54820( ref l_U2012,  /* PLAYER_PED_ID */ sub_6459(), 0 ))
    {
        PLAY_IMAGEFX( "TRIPLE_IMAGE_BLUR_DOWN_2", 4, 0 );
    }
     /* P_HANDLE_IMAGEFX */ sub_55562( ref l_U2034 );
    return;
}

/* F_ISPEDINTRIGGERBOXFIRSTTIME */ void sub_54820(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 =  /* F_ISPEDINTRIGGERBOX */ sub_54890( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

/* F_ISPEDINTRIGGERBOX */ int sub_54890(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_INIATIALIZE_IMAGEFX_STAIRS01 */ void sub_55016()
{
     /* P_INIT_IMAGEFX */ sub_55063( ref l_U2034 );
    l_U2034[0]._fU4 = "DOUBLE_TINT_BLUE_FLASH_FLICKER";
    l_U2034[0]._fU16 = 1250;
    l_U2034[0]._fU8 = 4;
    l_U2034[0]._fU32 = 0;
    l_U271 = 0;
    return;
}

/* P_INIT_IMAGEFX */ void sub_55063(unknown uParam0)
{
    int I;

     /* WRITESCRIPTLOG */ sub_275( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

/* P_HANDLE_IMAGEFX */ void sub_55562(unknown uParam0)
{
    int I;
    int J;

    switch (l_U271)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_275( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                 /* CREATETIMER */ sub_15209( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                 /* STARTTIMER */ sub_15357( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U271 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if ( /* ISTIMERDONE */ sub_15488( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                     /* CREATETIMER */ sub_15209( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                     /* STARTTIMER */ sub_15357( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        PRINTSTRING( "******* [CO] ***** STARTING CHILD FOR index : " );
                        PRINTINT( J );
                        PRINTNL();
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                             /* CREATETIMER */ sub_15209( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                             /* STARTTIMER */ sub_15357( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if ( /* ISTIMERDONE */ sub_15488( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

/* P_SAFE_UNLOAD_CUTSCENE */ void sub_56433(unknown uParam0)
{
    while (CUTSCENE_NAMED_IS_LOADING( uParam0 ))
    {
        WAIT( 0 );
         /* WRITE_STRING */ sub_5353( "Waiting for loading to complete..." );
    }
    if (CUTSCENE_IS_LOADED( uParam0 ))
    {
         /* WRITE_STRING */ sub_5353( "Unloading cutscene..." );
        CLEAR_NAMED_CUTSCENE( uParam0 );
    }
    while (CUTSCENE_IS_LOADED( uParam0 ))
    {
        WAIT( 0 );
         /* WRITE_STRING */ sub_5353( "Waiting for cutscene to Unload..." );
    }
    return;
}

/* P_PED_ARRAY_Z_SAFETY_CHECK */ void sub_56693(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_PED_Z_SAFETY_CHECK */ sub_56759( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_PED_Z_SAFETY_CHECK */ void sub_56759(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                 /* CLEANPED */ sub_837( uParam0 );
            }
        }
    }
    return;
}

/* P_HANDLE_DEAD_BODY_SPAWNS */ void sub_56989()
{
    if (g_U3371)
    {
        if (NOT ( /* F_HAS_PED_ARRAY_SPAWNED */ sub_41611( ref g_U3386, 1 )))
        {
            if ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_41748( ref g_U3386, ref g_U3372, -1, 1, 1, 0, 1 ))
            {
                 /* P_GBL_RESTORE_RS2A_DEAD_BODY */ sub_57076();
                return;
            }
            return;
        }
    }
    if (g_U3388)
    {
        if (NOT ( /* F_HAS_PED_ARRAY_SPAWNED */ sub_41611( ref g_U3429, 1 )))
        {
            if ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_41748( ref g_U3429, ref g_U3389, -1, 1, 1, 0, 1 ))
            {
                 /* P_GBL_RESTORE_RS2B_DEAD_BODIES */ sub_57294();
                return;
            }
            return;
        }
    }
    if (g_U3433)
    {
        if (NOT ( /* F_HAS_PED_ARRAY_SPAWNED */ sub_41611( ref g_U3448, 1 )))
        {
            if ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_41748( ref g_U3448, ref g_U3434, -1, 1, 1, 0, 1 ))
            {
                 /* P_GBL_RESTORE_RS2C_DEAD_BODY */ sub_57745();
                return;
            }
            return;
        }
    }
    if (g_U3450)
    {
        if (NOT ( /* F_HAS_PED_ARRAY_SPAWNED */ sub_41611( ref g_U3465, 1 )))
        {
            if ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_41748( ref g_U3465, ref g_U3451, -1, 1, 1, 0, 1 ))
            {
                 /* P_GBL_RESTORE_RS3_DEAD_BODY */ sub_57964();
                return;
            }
            return;
        }
    }
    return;
}

/* P_GBL_RESTORE_RS2A_DEAD_BODY */ void sub_57076()
{
    if (NOT (IS_PED_DEAD( g_U3386[0] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3386[0], "DAM_DEAD", "MED_DEAD_POSE_BACK_02", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3386[0] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    return;
}

/* P_GBL_RESTORE_RS2B_DEAD_BODIES */ void sub_57294()
{
    if (NOT (IS_PED_DEAD( g_U3429[0] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3429[0], "DAM_DEAD", "/MED_DEAD_POSE_RIGHT_04", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3429[0] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    if (NOT (IS_PED_DEAD( g_U3429[1] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3429[1], "DAM_DEAD", "MED_DEAD_POSE_LEFT_02", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3429[1] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    if (NOT (IS_PED_DEAD( g_U3429[2] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3429[2], "DAM_DEAD", "MED_DEAD_POSE_RIGHT_02", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3429[2] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    return;
}

/* P_GBL_RESTORE_RS2C_DEAD_BODY */ void sub_57745()
{
    if (NOT (IS_PED_DEAD( g_U3448[0] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3448[0], "DAM_DEAD", "MED_DEAD_POSE_RIGHT_03", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3448[0] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    return;
}

/* P_GBL_RESTORE_RS3_DEAD_BODY */ void sub_57964()
{
    if (NOT (IS_PED_DEAD( g_U3465[0] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3465[0], "DAM_DEAD", "MED_DEAD_POSE_LEFT_02", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3465[0] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_58157(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_54890(  /* PLAYER_PED_ID */ sub_6459(), uParam0 );
}

/* F_ISPLAYERINTRIGGERREGIONFIRSTTIME */ void sub_58404(int iParam0, unknown uParam1)
{
    if (iParam0->_fU548)
    {
        return 0;
    }
    else
    {
        iParam0->_fU548 =  /* F_ISPLAYERINTRIGGERREGION */ sub_58476( iParam0, uParam1 );
    }
    return iParam0->_fU548;
}

/* F_ISPLAYERINTRIGGERREGION */ void sub_58476(int iParam0, unknown uParam1)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_58157( iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam1) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU548 = 1;
    return Result;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_58935(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_54890(  /* PLAYER_PED_ID */ sub_6459(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* P_RT_START_AC_WAVE_1 */ void sub_59070()
{
    int I;
    unknown uVar3;
    unknown uVar4;

     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_START_AC_WAVE_1 - START", 0 );
    for ( I = 0; I < l_U451; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U451[I] )))
        {
             /* P_ACTIVATEPED */ sub_59192( l_U451[I] );
            REGISTER_TARGET( l_U451[I],  /* PLAYER_PED_ID */ sub_6459() );
            SET_PED_ALERTNESS( l_U451[I], 3 );
            SET_PED_VISIBLE( l_U451[I], 1 );
        }
    }
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_6459() );
    CLOSE_SEQUENCE_TASK( uVar3 );
    TASK_PERFORM_SEQUENCE( l_U451[0], uVar3 );
    OPEN_SEQUENCE_TASK( ref uVar4 );
    TASK_STAND_STILL( 0, 1000 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 19.36000000, -20.67000000, 86.23000000,  /* PLAYER_PED_ID */ sub_6459(), 3, 1, 1056964608, 0, 1, 0 );
    CLOSE_SEQUENCE_TASK( uVar4 );
    TASK_PERFORM_SEQUENCE( l_U451[1], uVar4 );
    CLEAR_SEQUENCE_TASK( uVar3 );
    CLEAR_SEQUENCE_TASK( uVar4 );
     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_START_AC_WAVE_1 - END", 0 );
    return;
}

/* P_ACTIVATEPED */ void sub_59192(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* F_ARE_PEDS_IN_ARRAY_AWARE_OF_PED */ int sub_59623(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (( /* F_IS_PED_AWARE_OF_PED */ sub_59703( ref (uParam0^)[I], uParam1, uParam2, uParam3, uParam4, uParam5, uParam6 )) == 1)
        {
            return 1;
        }
    }
    return 0;
}

/* F_IS_PED_AWARE_OF_PED */ int sub_59703(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, int iParam6)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        if ((uParam3) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 1 )))
        {
            if (iParam6 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_275( "MF", "ped has SEEN target ped", 0 );
            }
            return 1;
        }
        else if ((uParam4) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 8 )))
        {
            if (iParam6 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_275( "MF", "ped has BEEN SHOT AT by target ped", 0 );
            }
            return 1;
        }
        else if ((uParam2) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 2 )))
        {
            if (iParam6 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_275( "MF", "ped has HEARD target ped", 0 );
            }
            return 1;
        }
        else if ((uParam5) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 4 )))
        {
            if (iParam6 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_275( "MF", "ped has BEEN TOLD ABOUT target ped", 0 );
            }
            return 1;
        };;;;
    }
    return 0;
}

/* P_RT_START_STAIR_ENEMY */ void sub_60286()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_START_STAIR_ENEMY - START", 0 );
     /* P_ACTIVATEPEDARRAY */ sub_60369( ref l_U348 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_SET_BLOCKING_OF_PED_TARGETTING( 0, 0 );
    TASK_ATTACK_MOVE_WHILE_AIMING_AT_COORD( 0, 31.34000000, -30.29000000, 89.68000000, 44.49000000, -32.06000000, 93.37000000, 0, 7.00000000, 30, -1, 2 );
    TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_6459() );
    CLOSE_SEQUENCE_TASK( uVar2 );
    if (NOT (IS_PED_DEAD( l_U348[0] )))
    {
        SET_PED_VISIBLE( l_U348[0], 1 );
        TASK_PERFORM_SEQUENCE( l_U348[0], uVar2 );
    }
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_SET_BLOCKING_OF_PED_TARGETTING( 0, 0 );
    TASK_AIM_GUN_AT_COORD( 0, 30.24000000, -25.42000000, 91.41000000, -1, 0 );
    CLOSE_SEQUENCE_TASK( uVar3 );
    if (NOT (IS_PED_DEAD( l_U348[1] )))
    {
        SET_PED_VISIBLE( l_U348[1], 1 );
        TASK_PERFORM_SEQUENCE( l_U348[1], uVar3 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    CLEAR_SEQUENCE_TASK( uVar3 );
     /* KILL_SPEECH */ sub_6119( ref l_U393, 1 );
     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_START_STAIR_ENEMY - END", 0 );
    return;
}

/* P_ACTIVATEPEDARRAY */ void sub_60369(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_59192( (uParam0^)[I] );
    }
    return;
}

/* P_RT_PLAY_DIALOGUE_VIG22A */ void sub_60791()
{
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_RT_PLAY_DIALOGUE_VIG22A start", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_50794( ref l_U393 );
    if (NOT (IS_PED_DEAD( l_U348[0] )))
    {
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_50903( 1, l_U348[0], "M2_CS_62_MUS", ref l_U393, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U348[1] )))
    {
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_50903( 2, l_U348[1], "M2_CS_63_AVG", ref l_U393, 2, 0 );
    }
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_50903( 0,  /* PLAYER_PED_ID */ sub_6459(), "MAX", ref l_U393, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_51156( "SCLB_VIG22A", ref l_U393, 8, 1 );
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_RT_PLAY_DIALOGUE_VIG22A end", 0 );
    return;
}

/* F_IS_PED_ARRAY_DEFEATED */ int sub_61240(unknown uParam0, boolean bParam1)
{
    if (( /* F_HAS_PED_ARRAY_SPAWNED */ sub_41611( uParam0, 0 )) == 1)
    {
        if (NOT bParam1)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_61301( uParam0 )) == 0)
            {
                return 1;
            }
        }
        if (bParam1)
        {
            if (( /* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ sub_61434( uParam0 )) == (uParam0^))
            {
                return 1;
            }
        }
    }
    return 0;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_61301(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ void sub_61434(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

/* P_CREATE_AND_START_TIMER */ void sub_61626(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_15209( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_15357( uParam0 );
    return;
}

/* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ int sub_61689()
{
    if (GET_PAYNEKILLER_AMT() > g_U3539)
    {
         /* WRITESCRIPTLOG */ sub_275( "MF", "Player picked up Payne Killers!", 0 );
        PRINTSTRING( "HAD: " );
         /* WRITE_INT */ sub_39847( g_U3539 );
        PRINTSTRING( "NOW: " );
         /* WRITE_INT */ sub_39847( GET_PAYNEKILLER_AMT() );
        g_U3539 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U3539 = GET_PAYNEKILLER_AMT();
    return 0;
}

/* P_RT_AC_ENEMIES_WAVE_2 */ void sub_62039()
{
    vector[3] vVar2;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int I;

     /* WRITESCRIPTLOG */ sub_275( "GA", "P_RT_AC_ENEMIES_WAVE_2 start", 0 );
    array(ref vVar2, 3);
    vVar2[0] = {0.65000000, -22.06000000, 86.30000000};
    vVar2[1] = {-9.54000000, -19.06000000, 86.30000000};
    vVar2[2] = {1.74000000, -26.26000000, 86.30000000};
     /* P_ACTIVATEPEDARRAY */ sub_60369( ref l_U494 );
    for ( I = 0; I < l_U494; I++ )
    {
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() ))) AND (NOT (IS_PED_DEAD( l_U494[I] ))))
        {
            OPEN_SEQUENCE_TASK( ref uVar12 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_ATTACK_MOVE( 0, vVar2[I], 5, -1, -1082130432, 3 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_6459() );
            CLOSE_SEQUENCE_TASK( uVar12 );
            TASK_PERFORM_SEQUENCE( l_U494[I], uVar12 );
            SET_PED_VISIBLE( l_U494[I], 1 );
            CLEAR_SEQUENCE_TASK( uVar12 );
        }
    }
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_RT_AC_ENEMIES_WAVE_2 end", 0 );
    return;
}

/* P_RT_START_AC_WAVE_3 */ void sub_62472()
{
    int I;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_START_AC_WAVE_3 - START", 0 );
     /* P_ACTIVATEPEDARRAY */ sub_60369( ref l_U534 );
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )))
    {
        TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_6459() );
    }
    CLOSE_SEQUENCE_TASK( uVar3 );
    for ( I = 0; I < l_U534; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U534[I] )))
        {
            SET_PED_VISIBLE( l_U534[I], 1 );
            TASK_PERFORM_SEQUENCE( l_U534[I], uVar3 );
        }
    }
    CLEAR_SEQUENCE_TASK( uVar3 );
     /* WRITESCRIPTLOG */ sub_275( "MF", "P_RT_START_AC_WAVE_3 - END", 0 );
    return;
}

/* P_RT_START_BIGLETTER_ENEMIES */ void sub_62879()
{
    unknown uVar2;

    switch (l_U627)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_275( "GA", "e_RT_BLEnemySpawn = ENTITY_STATE_INIT", 0 );
         /* P_SETUP_AI_GROUP */ sub_44306( ref l_U715, 1056964608, 0 );
        l_U628 = 0;
        l_U627 = 2;
         /* WRITESCRIPTLOG */ sub_275( "GA", "e_RT_BLEnemySpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U708[l_U628] =  /* CREATEPED */ sub_42206( ref l_U629[l_U628] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_44136( l_U708[l_U628], ref l_U715 );
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() ))) AND (NOT (IS_PED_DEAD( l_U708[l_U628] ))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U708[l_U628], 1 );
             /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_44974( ref l_U708[l_U628], ref g_U3099, 4.00000000, 25.00000000 );
            SET_PED_ALERTNESS( l_U708[l_U628], 2 );
            SET_PED_EMOTION_STATE( l_U708[l_U628], 1 );
            REGISTER_TARGET( l_U708[l_U628],  /* PLAYER_PED_ID */ sub_6459() );
            SET_LOCKED_TARGET( l_U708[l_U628],  /* PLAYER_PED_ID */ sub_6459() );
        }
        l_U628++;
        if (l_U628 >= 6)
        {
            l_U627 = 3;
             /* WRITESCRIPTLOG */ sub_275( "GA", "e_RT_BLEnemySpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_43938( ref l_U708, "pi_RT_BLEnemy" );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U715._fU0, 0 );
         /* P_ADD_TETHER_TO_PED_ARRAY */ sub_43607( ref l_U708, l_U806, 1 );
         /* P_ADD_TETHER_TO_PED_ARRAY */ sub_43607( ref l_U708, l_U807, 1 );
         /* P_PED_ARRAY_SET_VAULTING */ sub_43794( ref l_U708, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_19250( l_U708[0], 406496141, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_19250( l_U708[1], -168327769, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_19250( l_U708[2], 406496141, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_19250( l_U708[3], 406496141, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_19250( l_U708[4], 1194438308, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_19250( l_U708[5], 1194438308, 25000, 0, 0 );
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() ))) AND (NOT (IS_PED_DEAD( l_U708[0] ))))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -19.83000000, -6.51000000, 85.00000000,  /* PLAYER_PED_ID */ sub_6459(), 1, 5, -1, -1082130432, 3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_6459() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U708[0], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
         /* P_DEACTIVATEPED */ sub_42997( l_U708[1] );
         /* P_DEACTIVATEPED */ sub_42997( l_U708[2] );
         /* P_DEACTIVATEPED */ sub_42997( l_U708[3] );
         /* P_DEACTIVATEPED */ sub_42997( l_U708[4] );
         /* P_DEACTIVATEPED */ sub_42997( l_U708[5] );
        l_U627 = 4;
         /* WRITESCRIPTLOG */ sub_275( "GA", "e_RT_BLEnemySpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

/* P_RT_BIGLETTER_ENEMIES_WAVE2 */ void sub_64072()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

     /* WRITESCRIPTLOG */ sub_275( "GA", "P_RT_BIGLETTER_ENEMIES_WAVE2 start", 0 );
     /* P_ACTIVATEPED */ sub_59192( l_U708[1] );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() ))) AND (NOT (IS_PED_DEAD( l_U708[1] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -21.44000000, 10.90000000, 85.00000000,  /* PLAYER_PED_ID */ sub_6459(), 1, 4, -1, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_6459() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U708[1], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
     /* P_ACTIVATEPED */ sub_59192( l_U708[2] );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() ))) AND (NOT (IS_PED_DEAD( l_U708[2] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE( 0, -21.55000000, 36.73000000, 85.00000000, 5, -1, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_6459() );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( l_U708[2], uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
     /* P_ACTIVATEPED */ sub_59192( l_U708[3] );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() ))) AND (NOT (IS_PED_DEAD( l_U708[3] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar4 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE( 0, -25.89000000, 41.10000000, 85.00000000, 5, -1, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_6459() );
        CLOSE_SEQUENCE_TASK( uVar4 );
        TASK_PERFORM_SEQUENCE( l_U708[3], uVar4 );
        CLEAR_SEQUENCE_TASK( uVar4 );
    }
     /* P_ACTIVATEPED */ sub_59192( l_U708[4] );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() ))) AND (NOT (IS_PED_DEAD( l_U708[4] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar5 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -26.30000000, 18.00000000, 85.00000000,  /* PLAYER_PED_ID */ sub_6459(), 1, 5, -1, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_6459() );
        CLOSE_SEQUENCE_TASK( uVar5 );
        TASK_PERFORM_SEQUENCE( l_U708[4], uVar5 );
        CLEAR_SEQUENCE_TASK( uVar5 );
    }
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_RT_BIGLETTER_ENEMIES_WAVE2 end", 0 );
    return;
}

/* P_RT_ACTIVATE_BIGLETTER_ENEMY_FROM_ELECTRIC_AREA */ void sub_64866()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_275( "GA", "P_RT_ACTIVATE_BIGLETTER_ENEMY_FROM_ELECTRIC_AREA start", 0 );
     /* P_ACTIVATEPED */ sub_59192( l_U708[5] );
     /* P_TETHERPED */ sub_43669( ref l_U805, l_U708[5], 1 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() ))) AND (NOT (IS_PED_DEAD( l_U708[5] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -10.81000000, 21.27000000, 86.30000000,  /* PLAYER_PED_ID */ sub_6459(), 3, 1, 1056964608, 0, 1, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_6459() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U708[5], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_RT_ACTIVATE_BIGLETTER_ENEMY_FROM_ELECTRIC_AREA end", 0 );
    return;
}

/* P_REMOVEALLTETHERSFROMPED */ void sub_65338(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

/* P_RT_START_ELECTRIC_AREA_ENEMIES */ void sub_65462()
{
    unknown uVar2;
    unknown uVar3;

    switch (l_U808)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_275( "GA", "e_RT_ELEnemySpawn = ENTITY_STATE_INIT", 0 );
         /* P_SETUP_AI_GROUP */ sub_44306( ref l_U882, 1056964608, 0 );
        l_U809 = 0;
        l_U808 = 2;
         /* WRITESCRIPTLOG */ sub_275( "GA", "e_RT_ELEnemySpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U876[l_U809] =  /* CREATEPED */ sub_42206( ref l_U810[l_U809] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_44136( l_U876[l_U809], ref l_U882 );
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() ))) AND (NOT (IS_PED_DEAD( l_U876[l_U809] ))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U876[l_U809], 1 );
            SET_PED_ALERTNESS( l_U876[l_U809], 3 );
            SET_PED_EMOTION_STATE( l_U876[l_U809], 1 );
            REGISTER_TARGET( l_U876[l_U809],  /* PLAYER_PED_ID */ sub_6459() );
            SET_LOCKED_TARGET( l_U876[l_U809],  /* PLAYER_PED_ID */ sub_6459() );
        }
        l_U809++;
        if (l_U809 >= 5)
        {
            l_U808 = 3;
             /* WRITESCRIPTLOG */ sub_275( "GA", "e_RT_ELEnemySpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_43938( ref l_U876, "pi_RT_ELEnemy" );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U882._fU0, 0 );
         /* P_ADD_TETHER_TO_PED_ARRAY */ sub_43607( ref l_U876, l_U806, 1 );
         /* P_ADD_TETHER_TO_PED_ARRAY */ sub_43607( ref l_U876, l_U807, 1 );
         /* P_PED_ARRAY_SET_VAULTING */ sub_43794( ref l_U876, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_19250( l_U876[0], 406496141, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_19250( l_U876[1], 406496141, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_19250( l_U876[2], -168327769, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_19250( l_U876[3], -168327769, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_19250( l_U876[4], 1194438308, 25000, 0, 0 );
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() ))) AND (NOT (IS_PED_DEAD( l_U876[0] ))))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -3.69000000, 22.43000000, 86.30000000,  /* PLAYER_PED_ID */ sub_6459(), 1, 4, -1, -1082130432, 3 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_6459() );
            CLOSE_SEQUENCE_TASK( uVar2 );
             /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_44974( ref l_U876[0], ref g_U3091, 4.00000000, 8.00000000 );
            TASK_PERFORM_SEQUENCE( l_U876[0], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() ))) AND (NOT (IS_PED_DEAD( l_U876[1] ))))
        {
            OPEN_SEQUENCE_TASK( ref uVar3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_6459() );
            CLOSE_SEQUENCE_TASK( uVar3 );
             /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_44974( ref l_U876[1], ref g_U3091, 4.00000000, 10.00000000 );
            TASK_PERFORM_SEQUENCE( l_U876[1], uVar3 );
            CLEAR_SEQUENCE_TASK( uVar3 );
        }
        if (NOT (IS_PED_DEAD( l_U876[2] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U876[2], 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U876[2], 1 );
            TASK_COMBAT_SNAP_TO_COVER( l_U876[2], "GenCover", "8F466A58_2310D4AB_Corner2", 0 );
            SET_PED_SUGGESTED_COVER_POINT( l_U876[2], "GenCover", "8F466A58_2310D4AB_Corner2" );
             /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_44974( ref l_U876[2], ref g_U3091, 4.00000000, 20.00000000 );
            SET_PED_COMBAT_MOVEMENT( l_U876[2], 1 );
        }
        if (NOT (IS_PED_DEAD( l_U876[3] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U876[3], 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U876[3], 1 );
            TASK_COMBAT_SNAP_TO_COVER( l_U876[3], "GenCover", "8F466A58_F6D2989E_Corner1",  /* PLAYER_PED_ID */ sub_6459() );
            SET_PED_SUGGESTED_COVER_POINT( l_U876[3], "GenCover", "8F466A58_F6D2989E_Corner1" );
             /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_44974( ref l_U876[3], ref g_U3091, 5.50000000, 15.00000000 );
            SET_PED_COMBAT_MOVEMENT( l_U876[3], 1 );
        }
         /* P_DEACTIVATEPED */ sub_42997( l_U876[4] );
        l_U808 = 4;
         /* WRITESCRIPTLOG */ sub_275( "GA", "e_RT_ELEnemySpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

/* P_RT_UPDATE_ELECTRIC_AMBUSH_BECAUSE_PLAYER_HAS_ENGAGED */ void sub_66995()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_275( "GA", "P_RT_UPDATE_ELECTRIC_AMBUSH_BECAUSE_PLAYER_HAS_ENGAGED start", 0 );
    if (NOT (IS_PED_DEAD( l_U876[3] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U876[3], 0 );
    }
     /* P_ACTIVATEPED */ sub_59192( l_U876[4] );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() ))) AND (NOT (IS_PED_DEAD( l_U876[4] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, 0.73000000, 33.56000000, 85.70000000,  /* PLAYER_PED_ID */ sub_6459(), 1, 12, -1, -1082130432, 3 );
        TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_6459() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U876[4], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
     /* WRITESCRIPTLOG */ sub_275( "GA", "P_RT_UPDATE_ELECTRIC_AMBUSH_BECAUSE_PLAYER_HAS_ENGAGED end", 0 );
    return;
}

/* P_GBL_RESTORE_RS4_DEAD_BODIES */ void sub_67581()
{
    if (NOT (IS_PED_DEAD( g_U3495[0] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3495[0], "DAM_DEAD", "MED_DEAD_POSE_FRONT_01", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3495[0] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    if (NOT (IS_PED_DEAD( g_U3495[1] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3495[1], "DAM_DEAD", "MED_DEAD_POSE_RIGHT_01", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3495[1] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    return;
}

/* P_GBL_RESTORE_RS4B_DEAD_BODY */ void sub_67918()
{
    if (NOT (IS_PED_DEAD( g_U3513[0] )))
    {
        SET_PED_CORPSE_FROM_ANIM( g_U3513[0], "DAM_DEAD", "MED_DEAD_POSE_BACK_02", 1.00000000, 0 );
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U3513[0] ), 1.00000000, 4.00000000, 120.00000000 );
    }
    return;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_68275(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_61301( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* F_RT_ARE_ALL_CS_DEAD */ int sub_68510()
{
    if (( /* F_IS_PED_ARRAY_DEFEATED */ sub_61240( ref l_U876, 1 )) AND (( /* F_IS_PED_ARRAY_DEFEATED */ sub_61240( ref l_U708, 1 )) AND (( /* F_IS_PED_ARRAY_DEFEATED */ sub_61240( ref l_U534, 1 )) AND (( /* F_IS_PED_ARRAY_DEFEATED */ sub_61240( ref l_U494, 1 )) AND (( /* F_IS_PED_ARRAY_DEFEATED */ sub_61240( ref l_U451, 1 )) AND ( /* F_IS_PED_ARRAY_DEFEATED */ sub_61240( ref l_U348, 1 )))))))
    {
        return 1;
    }
    return 0;
}

/* P_SETDOORAUTOCLOSE */ void sub_69104(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_21543( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_21768( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

/* P_OPENDOOR */ void sub_69195(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_21543( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_21768( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* P_CLOSEDOOR */ void sub_69545(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_21543( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_21768( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_69837(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_69876( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6459(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_70077( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_70331( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6459(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_6459(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_6459(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_6459(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6459(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_6459(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6459(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_6459(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6459(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_70331( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_6459(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_6459(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_6459(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_69876(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_70077(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* IS_WEAPON_TWO_HANDED */ int sub_70331(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* F_HANDLE_POI */ int sub_71530(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_6459() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_54890(  /* PLAYER_PED_ID */ sub_6459(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_54890(  /* PLAYER_PED_ID */ sub_6459(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_72375( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_72471( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_72806()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_72908( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_12932( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_72994( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_12932( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6459(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_12932( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_72994( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_6459(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_6459(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6459(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_12932( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_72994( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_6459() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6459(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_72994( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_72375(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_72471( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_72471( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_72471(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_6497() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_6459() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_6459() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_6459() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_6459() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_6459() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_6459() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* F_HASACTIONBEENPRESSED */ int sub_72806()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* P_ENABLE_POI */ void sub_72908(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_12932( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_12932( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_72994( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6459() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_6459() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6459(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_72994(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_72375( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* P_GBL_EXP_ITEM_PRE_SETUP */ void sub_74239(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    unknown uVar14;

     /* WRITESCRIPTLOG */ sub_275( "MF", "P_GBL_EXP_ITEM_PRE_SETUP - START", 0 );
    g_U1102 = 1;
     /* NIS_PRE_SETUP */ sub_53181( 1, 0, 0, 1 );
    FOUND_EXPLORATION_ITEM( uParam0 );
    CAMERA_PLAY_ANIMATED( "EXPL_CAM", uParam7, 1, uParam8, uParam11, 0, 0 );
    uVar14 =  /* PLAYER_PED_ID */ sub_6459();
     /* TELEPORTPED */ sub_13703( uVar14, uParam1, uParam4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam5, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam6, 1065353216, 0 );
     /* WRITESCRIPTLOG */ sub_275( "MF", "P_GBL_EXP_ITEM_PRE_SETUP - END", 0 );
    return;
}

/* P_GBL_EXP_ITEM_POST_SETUP */ void sub_74591(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* CREATETIMER */ sub_15209( ref g_U3350, uParam1, 1, 0 );
     /* STARTTIMER */ sub_15357( ref g_U3350 );
     /* CREATETIMER */ sub_15209( ref g_U3340, uParam0, 1, 0 );
     /* STARTTIMER */ sub_15357( ref g_U3340 );
    g_U1102 = 0;
     /* P_ENABLE_POI */ sub_72908( uParam2, 1 );
     /* NIS_POST_SETUP */ sub_54105( 1, 1 );
    return;
}

/* F_IS_PED_DEFEATED */ int sub_75363(unknown uParam0)
{
    if ((IS_PED_DEAD( (uParam0^) )) AND (DOES_PED_EXIST( (uParam0^) )))
    {
        return 1;
    }
    return 0;
}

/* P_HANDLE_DEBUG */ void sub_75552()
{
    if (NOT l_U2063)
    {
        START_WIDGET_GROUP( "Railing Fall Debug" );
        ADD_WIDGET_BOOL( "Enable Railing Fall Debug", ref l_U2062 );
        ADD_WIDGET_INT_SLIDER( "Time Between Spawns", ref l_U2064, 1, 20000, 500 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_75727( ref l_U2065, "Player Position", 0.50000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_75727( ref l_U629[0]._fU0, "Enemy Spawn Position", 0.50000000 );
        STOP_WIDGET_GROUP();
        l_U2063 = 1;
    }
    if (l_U2062 == 1)
    {
        l_U314 = 13;
         /* P_TELEPORT_PLAYER */ sub_13657( l_U2065, 90.00000000, 0.00000000, 0.00000000 );
        REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_6459() );
         /* F_GIVEPEDWEAPON */ sub_19250(  /* PLAYER_PED_ID */ sub_6459(), 434544317, 25000, 0, 0 );
        l_U315 = 1;
        l_U2062 = 0;
    }
    if (NOT l_U2077)
    {
        START_WIDGET_GROUP( "Debug Giovanna's Shoe" );
        ADD_WIDGET_BOOL( "Enable Giovanna Shoe Debug", ref l_U2078 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_75727( ref l_U1218, "Shoe Location", 0.01000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_75727( ref l_U1221, "Shoe Rotation", 0.01000000 );
        STOP_WIDGET_GROUP();
        l_U2077 = 1;
    }
    if (l_U2078 == 1)
    {
        if (DOES_OBJECT_EXIST( l_U1217 ))
        {
            SET_OBJECT_COORDS( l_U1217, l_U1218 );
            SET_OBJECT_ROTATION( l_U1217, l_U1221 );
        }
    }
    return;
}

/* P_ADD_WIDGET_VECTOR_SLIDER */ void sub_75727(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}


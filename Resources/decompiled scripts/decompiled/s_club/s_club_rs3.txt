void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = -1;
    l_U3 = {64536, 64536, 64536};
    l_U15 = 150;
    l_U16 = 0.02000000;
    l_U24 = 0;
    l_U54 = 0;
    l_U236 = {0, 2, -0.50000000};
    l_U239 = 45;
    l_U259 = 0;
    l_U260 = 0;
    l_U261 = 1500;
    l_U272 = 0;
    l_U310 = 0;
    l_U312 = 1;
    l_U313 = 0;
    l_U497 = 0;
    l_U498 = 0;
    l_U499 = 0;
    l_U626 = {-26.12000000, -1.50000000, 86.94000000};
     /* MAL_WRITESCRIPTLOG */ sub_225( "Script s_club_RS3.sc is starting up..." );
    l_U310 = 1;
    l_U272 = 0;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_359();
        if (l_U313 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_9772();
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_RS3 */ sub_3299( 0 );
     /* P_RELEASE_RS3_ASSETS */ sub_60929();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_club_RS3" );
    g_U1098 = 1;
     /* MAL_WRITESCRIPTLOG */ sub_225( "Script s_club_RS3.sc is terminating..." );
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_225(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* P_HANDLE_FAILURE */ void sub_359()
{
    if (g_U892 == 10)
    {
        switch (l_U313)
        {
            case 0:
            if (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_460() ))
            {
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U313 = 1;
                 /* MAL_WRITESCRIPTLOG */ sub_225( "eFailState = FAIL_WAITING_FOR_PLAYER" );
            }
            else if ( /* RESTARTING_CHECKPOINT */ sub_631())
            {
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U313 = 3;
                 /* MAL_WRITESCRIPTLOG */ sub_225( "eFailState = FAIL_CLEANUP_ALL" );
            }
            break;
            case 1:
            STOP_SCRIPT_STREAM( g_U2867 );
            if ( /* IS_RESTART_ACTIVE */ sub_1157())
            {
                l_U313 = 3;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_1217( 0 )) == 1)
            {
                l_U313 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_460() )))
            {
                l_U313 = 3;
                 /* MAL_WRITESCRIPTLOG */ sub_225( "eFailState = FAIL_CLEANUP_ALL" );
            }
            break;
            case 3:
             /* MAL_WRITESCRIPTLOG */ sub_225( "eFailState = FAIL_CLEANUP_ALL" );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_460() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_498() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_498(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_460() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_460(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_3008( "CLUB_RS_GIOV3_SCRIPTED_FAIL_FX" );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_3008( "CLUB_RS_GIOV4_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            l_U312 = 0;
             /* P_CLEANUP_RS3 */ sub_3299( 1 );
            if (g_U893[11]._fU36 == 1)
            {
                g_U1103 = 1;
                SET_EXITFLAG_FOR_SCRIPT( g_U893[11]._fU32 );
                 /* P_RESET_CHECKPOINT_THREAD */ sub_4906( ref g_U893[11] );
                g_U1074[11] = 0;
            }
            REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
            l_U313 = 4;
             /* MAL_WRITESCRIPTLOG */ sub_225( "eFailState = FAIL_RESTORE_PLAYER" );
            break;
            case 4:
             /* MAL_WRITESCRIPTLOG */ sub_225( "eFailState = FAIL_RESTORE_PLAYER" );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_5114( ref l_U274,  /* PLAYER_PED_ID */ sub_460() );
            l_U313 = 5;
             /* MAL_WRITESCRIPTLOG */ sub_225( "eFailState = FAIL_RESTART_CHECKPOINT" );
            break;
            case 5:
             /* MAL_WRITESCRIPTLOG */ sub_225( "eFailState = FAIL_RESTART_CHECKPOINT" );
            l_U310 = 1;
            l_U313 = 0;
             /* MAL_WRITESCRIPTLOG */ sub_225( "eFailState = FAIL_IDLE" );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_460()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_498() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_498()
{
    return GET_PLAYER_ID();
}

/* RESTARTING_CHECKPOINT */ int sub_631()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_460() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_460(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_498(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_498(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_460() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_460(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_1157()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_1217(int iParam0)
{
    iParam0 = 1;
    switch (l_U260)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1299( ref l_U262 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_460() )))
            {
                l_U261 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_1433( ref l_U262, l_U261, 1, 1 );
             /* STARTTIMER */ sub_1583( ref l_U262 );
        }
        if ( /* ISTIMERDONE */ sub_1716( ref l_U262 ))
        {
             /* WRITESCRIPTLOG */ sub_1926( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_460() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_498() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_498(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U260 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U260 = 2;
            }
            else
            {
                l_U260 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1926( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_2330();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1926( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_2330();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_1299(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_1433(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_1583(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_1716(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* WRITESCRIPTLOG */ void sub_1926(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_2330()
{
     /* WRITESCRIPTLOG */ sub_1926( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_2405( ref l_U262 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_498() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_498(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U259 = 0;
    l_U259 = l_U259;
    l_U260 = 0;
    return;
}

/* RESETTIMER */ void sub_2405(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_IMAGEFX_STOP_BULLETCAM */ void sub_3008(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1926( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
     /* CLEANCAMERA */ sub_3118( ref l_U273 );
    l_U272 = 1;
    return;
}

/* CLEANCAMERA */ void sub_3118(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* P_CLEANUP_RS3 */ void sub_3299(int iParam0)
{
     /* MAL_WRITESCRIPTLOG */ sub_225( "P_CLEANUP_RS3" );
     /* TERMINATEINTERACTIVESEQUENCE */ sub_3366( "S_CLUB_VIG_16_NC", 1 );
     /* MAL_ESA_CLEAN */ sub_3559( ref l_U314 );
    if (iParam0 == 1)
    {
         /* P_RS_GLOBALCLEANUP */ sub_3766();
        STOP_SCRIPT_STREAM( g_U2867 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    }
    SET_INSTANT_FIRE_FORCED( 1 );
     /* P_STOP_SP_CHALLENGES */ sub_4696();
    return;
}

/* TERMINATEINTERACTIVESEQUENCE */ void sub_3366(unknown uParam0, int iParam1)
{
    if ((I_SEQUENCE_IS_LOADED( uParam0 )) == 1)
    {
        I_SEQUENCE_TERMINATE( uParam0 );
    }
    if (iParam1 == 1)
    {
        while ((I_SEQUENCE_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* MAL_ESA_CLEAN */ void sub_3559(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_CLEAN */ sub_3607( ref (uParam0^)[I] );
    }
    return;
}

/* MAL_ES_CLEAN */ void sub_3607(int iParam0)
{
     /* CLEANPED */ sub_3637( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

/* CLEANPED */ void sub_3637(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* P_RS_GLOBALCLEANUP */ void sub_3766()
{
     /* MAL_WRITESCRIPTLOG */ sub_225( "P_RS_GlobalCleanup" );
    DETACH_PED( g_U2763, 1 );
    DETACH_PED( g_U2749, 1 );
    DETACH_PED(  /* PLAYER_PED_ID */ sub_460(), 1 );
     /* CLEANPED */ sub_3637( g_U2763 );
     /* CLEANPED */ sub_3637( g_U2749 );
     /* CLEANPED */ sub_3637( g_U2777 );
     /* CLEANVEHICLE */ sub_3897( g_U2866 );
     /* TERMINATEISEQ */ sub_3972( -1313172978, 1 );
     /* TERMINATEISEQ */ sub_3972( -931023773, 1 );
     /* TERMINATEISEQ */ sub_3972( 1476011597, 1 );
     /* MAL_PEDPLAYERACTIONTREENODE */ sub_4351(  /* PLAYER_PED_ID */ sub_460(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
    ENABLE_HIT_DETECTION( 1 );
    ENABLE_LAST_MAN_STANDING( 1 );
    SET_SILHOUETTE_ACTIVE( 1 );
    SET_PLAYER_COMBAT_TIMER_MODE( 0 );
    PLAYER_SET_AIM_MODE( 0 );
    ENABLE_CROSSHAIR( 1 );
    SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_460(), 0 );
    SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_460(), 0, 0, 0, 0, 0 );
    SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_498(), 0, 0 );
    SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_460(), 1 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    SET_PED_CAN_RAGDOLL(  /* PLAYER_PED_ID */ sub_460(), 1 );
    AUDIO_SET_PED_FOOTSTEPS_ON( 1 );
    SET_INSTANT_FIRE_FORCED( 0 );
    RELEASE_PED_ENTITY_SYNC_POINT(  /* PLAYER_PED_ID */ sub_460() );
    SET_PED_USES_ANIMATED_DEATH(  /* PLAYER_PED_ID */ sub_460(), 0 );
    ALLOW_BULLET_CAMERA_CHEAT( 1 );
     /* CLEANOBJECT */ sub_4605( l_U23 );
    return;
}

/* CLEANVEHICLE */ void sub_3897(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* TERMINATEISEQ */ void sub_3972(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* MAL_PEDPLAYERACTIONTREENODE */ void sub_4351(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

/* CLEANOBJECT */ void sub_4605(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_4696()
{
     /* WRITESCRIPTLOG */ sub_1926( "CCB", "P_STOP_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_1926( "CCB", "Stopping the Nightclub_RS3 context...", 0 );
    END_CONTEXT( "Nightclub_RS3" );
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_4906(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_5114(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_1926( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_5333( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_6497( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_6811( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7290( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_6811( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7290( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_6811( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7290( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_7606( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7290( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_7606( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7290( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_8178( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_8380( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_460(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_1926( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_5333(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_5395( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_5395(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_6497(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_6811(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_7215( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_7215(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_7290(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_7606(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_7215( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_8178(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_8380(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_5395( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_8478( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_8478(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_9772()
{
    int iVar2;
    int I;

    iVar2 = l_U310;
     /* P_HANDLE_SP_CHALLENGES */ sub_9807();
    switch (l_U310)
    {
        case 0: break;
        case 1:
         /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA" );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_16202();
         /* P_SET_STATIC_DATA */ sub_16532();
         /* P_INITIALIZE_SP_CHALLENGES */ sub_16595();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U310 = 2;
         /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
        break;
        case 2:
         /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
         /* P_REQUEST_RS3_PERSISTENT_ASSETS */ sub_17352();
         /* P_REQUEST_RS3_NONPERSISTENT_ASSETS */ sub_24705();
        l_U310 = 3;
         /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_INITIAL_LOADING_ASSETS" );
        break;
        case 3:
        if (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_31234( ref g_U1350 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_30843( ref g_U1447 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_30441( ref g_U1301 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_30044( ref g_U1108 )))))
        {
            if ((NOT l_U274._fU0) AND (g_U891 == 10))
            {
                 /* P_SETUP_RS_WEATHER_AND_TOD */ sub_31670();
                l_U312 = 0;
                g_U1074[10] = 1;
                l_U310 = 4;
                 /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
            }
            else
            {
                l_U310 = 6;
                 /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
            }
        }
        break;
        case 4:
         /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
        REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_32020( ref l_U274 )))
        {
             /* F_GIVEPEDWEAPON */ sub_7606(  /* PLAYER_PED_ID */ sub_460(), 354276007, 25000, 0, 0 );
            l_U310 = 5;
             /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS" );
        }
        else
        {
            l_U310 = 6;
             /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_460() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 0, 0 ) ))
            {
                g_U892 = 10;
                if (NOT l_U274._fU0)
                {
                     /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_32490( ref l_U274, g_U892,  /* PLAYER_PED_ID */ sub_460(), g_U2216[10], g_U2331[10], g_U2370[10], g_U2409[10], 0 );
                }
                l_U310 = 6;
                 /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_WAITING_TO_ACTIVATE" );
            }
        }
        break;
        case 6:
        if (g_U1074[10] == 1)
        {
             /* P_SETUP_GAMEPLAY */ sub_37163();
            l_U310 = 7;
             /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_INTRO" );
        }
        break;
        case 7:
        if (l_U311)
        {
            if (l_U312 == 1)
            {
                 /* CUTSYS_CREATESTANDALONECUTSCENE */ sub_47601( ref l_U599, "mid_10_nc_concat", 45671, 45724, 47103, 47517, 250, 0 );
                l_U599._fU64 = 0;
                l_U599._fU4 = 2;
            }
            else
            {
                l_U599._fU4 = 10;
                CAMERA_SNAP_POINT_AT_COORD( l_U626 );
            }
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_48263( ref l_U599 ))
        {
            l_U310 = 8;
        }
        break;
        case 8:
        if (l_U311)
        {
             /* P_START_GAMEPLAY */ sub_50487();
            if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_51377()))
            {
                DO_SCREEN_FADE_IN( 0 );
            }
            if (g_U892 != 10)
            {
                g_U892 = 10;
                if (NOT l_U274._fU0)
                {
                     /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_32490( ref l_U274, g_U892,  /* PLAYER_PED_ID */ sub_460(), g_U2216[10], g_U2331[10], g_U2370[10], g_U2409[10], 1 );
                }
            }
            if ((PED_GET_ACTION_INTENTION_STATUS( g_U2777, 47 )) == 3)
            {
                PED_FINISH_ACTION_INTENTION( g_U2777, 47 );
            }
            if (NOT g_U893[11]._fU36)
            {
                 /* P_START_CHECKPOINT_THREAD */ sub_51772( ref g_U893[11] );
            }
            CAMERA_CLEAR_POINT_AT_TARGET();
             /* STARTTIMER */ sub_1583( ref l_U638 );
        }
         /* P_MAKEHELIENGINESFUCKINGTURN */ sub_47272();
         /* P_RS_HANDLE_CAM_SHAKE */ sub_51847();
        if ( /* ISTIMERDONE */ sub_1716( ref l_U638 ))
        {
            if (NOT (IS_BULLET_TIME_ACTIVE( 1 )))
            {
                 /* P_RS3_SPEECH_SCLB_EX_PLAY_LINE */ sub_52158();
            }
        }
        if ( /* MAL_ES_ISACTINTCOMPLETED */ sub_55924( ref l_U314[3], 37, 1 ))
        {
             /* P_RS_SPEECH_GVNSC1 */ sub_56141();
            l_U74 = 1;
             /* P_CREATE_AND_START_TIMER */ sub_52022( ref l_U500, 1000 );
        }
        if ( /* ISTIMERDONE */ sub_1716( ref l_U500 ))
        {
            if (NOT (IS_PED_DEAD( l_U314[3]._fU0 )))
            {
                if (NOT (IS_BULLET_TIME_ACTIVE( 1 )))
                {
                     /* P_RSDIAG_GIOVANNAINIMMEDIATEDANGER */ sub_56415();
                }
            }
        }
        if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_56574()))
        {
             /* P_RS_HANDLE_PLAYER_RELOAD_DIALOGUE */ sub_56674();
             /* P_RS_SPEECH_MAX_RESPONDS */ sub_57036();
        }
         /* P_RS_HANDLE_GIOVANNA_SCREAMS_TO_BEING_SHOT_AT */ sub_57325();
        if ((GET_SCRIPT_STREAM_STATE( "S_CLUB_HELI_RS_STREAM", g_U2867 )) == 2)
        {
             /* WRITESCRIPTLOG */ sub_1926( "MF", "STARTING HELICOPTER AUDIO", 0 );
            PLAY_SCRIPT_STREAM_FROM_VEHICLE( g_U2866, g_U2867 );
        }
        if (NOT l_U497)
        {
            if (IS_PED_DEAD( l_U314[3]._fU0 ))
            {
                l_U497 = 1;
                 /* MAL_ESA_SETACTINT */ sub_57630( ref l_U314, 47, 1000 );
            }
        }
        if (NOT l_U498)
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                if ((GET_TIME_POSITION_IN_RECORDING( g_U2866 )) >= 8734.00000000)
                {
                    l_U498 = 1;
                    PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
                }
            }
        }
        if (IS_PED_DEAD( g_U2777 ))
        {
            l_U310 = 12;
             /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_SHOT_GIOVANNA" );
            break;
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            if (( /* MAL_GETACTINTSTATUS */ sub_55968( g_U2777, 47 )) == 3)
            {
                 /* NIS_PRE_SETUP */ sub_49154( 1, 0, 0, 1 );
                 /* MAL_FINISHACTINT */ sub_56058( ref g_U2777, 47 );
                 /* MAL_ESA_INVINCIBLE */ sub_57979( ref l_U314, 1, 0, -1 );
                if (NOT (IS_PED_DEAD( l_U314[3]._fU0 )))
                {
                    l_U310 = 9;
                     /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_FAIL1" );
                }
                else
                {
                    l_U310 = 10;
                     /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_FAIL2" );
                }
                break;
            }
        }
        if (( /* MAL_ESA_GETNUMLIVINGPEDS */ sub_58260( ref l_U314 )) < 1)
        {
            l_U310 = 11;
             /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_OUTRO" );
            break;
        }
        break;
        case 12:
        if (l_U311)
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            l_U310 = 0;
            l_U313 = 1;
        }
        break;
        case 9:
        if (l_U311)
        {
             /* NIS_PRE_SETUP */ sub_49154( 1, 0, 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
             /* NIS_CREATE_STATIC_CAM */ sub_58597( ref l_U509, -26.34593000, 49.89520000, 86.85177000, -25.43642000, 0.00000000, -178.94890000, 1110704128, 1000 );
             /* NIS_PLAY_CAM */ sub_58832( ref l_U509 );
             /* P_IMAGEFX_START_BULLETCAM */ sub_59024( "CLUB_RS_GIOV3_SCRIPTED_FAIL_FX", 0 );
            SET_PED_GORE( g_U2777, 1 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 0 );
            SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
            SHAKE_CAM( l_U509._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_59371(), 0.25000000 );
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 0, 0 ), 13, 0 );
        }
        if ( /* MAL_ES_ISACTINTCOMPLETED */ sub_55924( ref l_U314[3], 47, 1 ))
        {
            SET_PED_SHOOTS_AT_COORD( l_U314[3]._fU0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2777, 65488, 0, 0, 0 ) );
             /* P_CREATE_AND_START_TIMER */ sub_52022( ref l_U540, 1000 );
            SHAKE_CAM( l_U509._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
        }
        if ( /* ISTIMERDONE */ sub_1716( ref l_U540 ))
        {
            l_U310 = 0;
            l_U313 = 1;
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        break;
        case 10:
        if (l_U311)
        {
             /* NIS_PRE_SETUP */ sub_49154( 1, 0, 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
            l_U589 =  /* MAL_ESA_GETFIRSTLIVINGPED */ sub_59671( ref l_U314 );
             /* MAL_PEDPLAYERACTIONTREENODE */ sub_4351( g_U2777, "/Global/S_CLUB_VIG_16_NC/SEQ_START/MURDER/MURDER_GIO" );
             /* MAL_PEDPLAYERACTIONTREENODE */ sub_4351( l_U589, "/Global/S_CLUB_VIG_16_NC/SEQ_START/MURDER/MURDER_GMED" );
            WAIT( 0 );
             /* NIS_CREATE_STATIC_CAM */ sub_58597( ref l_U549, -28.77369000, 45.57099000, 87.31011000, -23.74745000, -0.00000500, -63.16171000, 1110704128, 1000 );
             /* NIS_PLAY_CAM */ sub_58832( ref l_U549 );
             /* P_IMAGEFX_START_BULLETCAM */ sub_59024( "CLUB_RS_GIOV4_SCRIPTED_FAIL_FX", 0 );
            SHAKE_CAM( l_U549._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_59371(), 0.25000000 );
            SET_PED_GORE( g_U2777, 1 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 0 );
            SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
            for ( I = 0; I < l_U314; I++ )
            {
                if (l_U314[I]._fU0 != l_U589)
                {
                     /* MAL_ES_CLEAN */ sub_3607( ref l_U314[I] );
                }
            }
             /* MAL_TELEPORTPED */ sub_60178( l_U589, -26.49039000, 46.19036000, 85.03713000, 0 );
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 0, 0 ), 13, 0 );
            DO_SCREEN_FADE_IN( 100 );
        }
        if ( /* MAL_ISACTINTCOMPLETED */ sub_60294( ref l_U589, 47, 1 ))
        {
            SET_PED_SHOOTS_AT_COORD( l_U589, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2777, 65488, 0, 0, 0 ) );
             /* P_CREATE_AND_START_TIMER */ sub_52022( ref l_U580, 3000 );
            SHAKE_CAM( l_U549._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
            l_U313 = 1;
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        if ( /* ISTIMERDONE */ sub_1716( ref l_U580 ))
        {
            SHAKE_CAM( l_U549._fU0,  /* F_CAM_SHAKE_WOBBLY */ sub_59371(), 0.03000000 );
            l_U310 = 0;
        }
        break;
        case 11:
        if (l_U311)
        {
             /* NIS_PRE_SETUP */ sub_49154( 1, 0, 0, 1 );
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
            }
             /* P_CREATE_AND_START_TIMER */ sub_52022( ref l_U590, 1000 );
        }
        if ( /* ISTIMERDONE */ sub_1716( ref l_U590 ))
        {
            g_U1074[11] = 1;
        }
        if (g_U1097)
        {
            l_U310 = 13;
        }
        break;
        case 13:
         /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_FINISHED" );
         /* P_GBL_SAVE_RS3_DEAD_BODY */ sub_60678( ref l_U314 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U310 = 0;
         /* MAL_WRITESCRIPTLOG */ sub_225( "eCheckpointState = CP_IDLE" );
        break;
    }
    if (l_U310 != iVar2)
    {
        l_U311 = 1;
    }
    else
    {
        l_U311 = 0;
    }
    return;
}

/* P_HANDLE_SP_CHALLENGES */ void sub_9807()
{
    switch (l_U647)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_1926( "CCB", "eNoLogo - STATE_CHALLENGE_IDLE", 0 );
        l_U647 = 1;
        break;
        case 1:
         /* P_HANDLE_SP_OBJECTS_CREATE */ sub_9934();
        if (l_U310 >= 8)
        {
            if ((l_U654 >= 4) AND ((l_U653 >= 4) AND ((l_U652 >= 4) AND ((l_U651 >= 4) AND ((l_U650 >= 4) AND ((l_U649 >= 4) AND (l_U648 >= 4)))))))
            {
                if (( /* F_HAS_ANY_OBJECTS_BEEN_DAMAGED_BY_PED */ sub_15567( ref l_U682,  /* PLAYER_PED_ID */ sub_460() )) AND (( /* F_HAS_ANY_OBJECTS_BEEN_DAMAGED_BY_PED */ sub_15567( ref l_U679,  /* PLAYER_PED_ID */ sub_460() )) AND (( /* F_HAS_ANY_OBJECTS_BEEN_DAMAGED_BY_PED */ sub_15567( ref l_U674,  /* PLAYER_PED_ID */ sub_460() )) AND (( /* F_HAS_ANY_OBJECTS_BEEN_DAMAGED_BY_PED */ sub_15567( ref l_U671,  /* PLAYER_PED_ID */ sub_460() )) AND (( /* F_HAS_ANY_OBJECTS_BEEN_DAMAGED_BY_PED */ sub_15567( ref l_U669,  /* PLAYER_PED_ID */ sub_460() )) AND (( /* F_HAS_ANY_OBJECTS_BEEN_DAMAGED_BY_PED */ sub_15567( ref l_U664,  /* PLAYER_PED_ID */ sub_460() )) AND ( /* F_HAS_ANY_OBJECTS_BEEN_DAMAGED_BY_PED */ sub_15567( ref l_U655,  /* PLAYER_PED_ID */ sub_460() ))))))))
                {
                     /* WRITESCRIPTLOG */ sub_1926( "CCB", "All the objects have been damaged...", 0 );
                    SCRIPT_VAR_HASH_SET_INT( -1589865431, 1 );
                     /* WRITESCRIPTLOG */ sub_1926( "CCB", "eNoLogo - STATE_CHALLENGE_COMPLETE", 0 );
                    l_U647 = 2;
                }
            }
        }
        break;
        case 2: break;
    }
    return;
}

/* P_HANDLE_SP_OBJECTS_CREATE */ void sub_9934()
{
    switch (l_U648)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_1926( "CCB", "eBillboardLetterB - ENTITY_STATE_CREATING", 0 );
        l_U648 = 2;
        break;
        case 2:
        if (l_U310 >= 7)
        {
            if (l_U687 < l_U655)
            {
                if (NOT (DOES_OBJECT_EXIST( l_U655[l_U687] )))
                {
                    DISPLAYF( "[CCB] ### Creating the oiBillboardLetterB object: {} ###", 1, 513, l_U687 );
                    if (l_U687 == 0)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsA", -25.19800000, 51.71200000, 94.15900000, 1.00000000 );
                    }
                    else if (l_U687 == 1)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsB", -25.19800000, 51.71200000, 91.59100000, 1.00000000 );
                    }
                    else if (l_U687 == 2)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsC", -25.19800000, 51.71200000, 89.79100000, 1.00000000 );
                    }
                    else if (l_U687 == 3)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsD", -25.19800000, 51.72000000, 87.22300000, 1.00000000 );
                    }
                    else if (l_U687 == 4)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsE", -25.18600000, 51.72000000, 85.43600000, 1.00000000 );
                    }
                    else if (l_U687 == 5)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsF", -25.18600000, 48.06800000, 87.22300000, 1.00000000 );
                    }
                    else if (l_U687 == 6)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsG", -25.18600000, 48.06000000, 91.59100000, 1.00000000 );
                    }
                    else if (l_U687 == 7)
                    {
                        l_U655[l_U687] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsBrk", -25.18700000, 46.17600000, 90.69100000, 1.00000000 );
                    };;;;;;;;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The oiBillboardSign object was already created!!! {} ###", 1, 513, l_U687 );
                }
                l_U687++;
            }
            else if ( /* F_DOES_ALL_OBJECTS_EXIST */ sub_10888( ref l_U655 ))
            {
                 /* WRITESCRIPTLOG */ sub_1926( "CCB", "eBillboardLetterB - ENTITY_STATE_COMPLETE", 0 );
                l_U648 = 4;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_1926( "CCB", "All the oiBillboardLetterB objects are not created!!!", 0 );
            }
        }
        break;
        case 4: break;
    }
    switch (l_U649)
    {
        case 1:
        if (l_U648 >= 4)
        {
             /* WRITESCRIPTLOG */ sub_1926( "CCB", "eBillboardLetterO - ENTITY_STATE_CREATING", 0 );
            l_U649 = 2;
        }
        break;
        case 2:
        if (l_U310 >= 7)
        {
            if (l_U688 < l_U664)
            {
                if (NOT (DOES_OBJECT_EXIST( l_U664[l_U688] )))
                {
                    DISPLAYF( "[CCB] ### Creating the oiBillboardLetterO object: {} ###", 1, 513, l_U688 );
                    if (l_U688 == 0)
                    {
                        l_U664[l_U688] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsH", -25.11200000, 42.74600000, 94.19800000, 1.00000000 );
                    }
                    else if (l_U688 == 1)
                    {
                        l_U664[l_U688] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsP", -25.11200000, 42.74600000, 87.26300000, 1.00000000 );
                    }
                    else if (l_U688 == 2)
                    {
                        l_U664[l_U688] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsQ", -25.11200000, 42.74600000, 85.47500000, 1.00000000 );
                    }
                    else if (l_U688 == 3)
                    {
                        l_U664[l_U688] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsR", -25.11200000, 39.09400000, 87.26300000, 1.00000000 );
                    };;;;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The oiBillboardLetterO object was already created!!! {} ###", 1, 513, l_U688 );
                }
                l_U688++;
            }
            else if ( /* F_DOES_ALL_OBJECTS_EXIST */ sub_10888( ref l_U664 ))
            {
                 /* WRITESCRIPTLOG */ sub_1926( "CCB", "eBillboardLetterO - ENTITY_STATE_COMPLETE", 0 );
                l_U649 = 4;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_1926( "CCB", "All the oiBillboardLetterO objects are not created!!!", 0 );
            }
        }
        break;
        case 4: break;
    }
    switch (l_U650)
    {
        case 1:
        if (l_U649 >= 4)
        {
             /* WRITESCRIPTLOG */ sub_1926( "CCB", "eBillboardLetterI - ENTITY_STATE_CREATING", 0 );
            l_U650 = 2;
        }
        break;
        case 2:
        if (l_U310 >= 7)
        {
            if (l_U689 < l_U669)
            {
                if (NOT (DOES_OBJECT_EXIST( l_U669[l_U689] )))
                {
                    DISPLAYF( "[CCB] ### Creating the oiBillboardLetterI object: {} ###", 1, 513, l_U689 );
                    if (l_U689 == 0)
                    {
                        l_U669[l_U689] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsI", -25.06400000, 33.93400000, 85.47500000, 1.00000000 );
                    }
                }
                else
                {
                    DISPLAYF( "[CCB] ### The oiBillboardLetterI object was already created!!! {} ###", 1, 513, l_U689 );
                }
                l_U689++;
            }
            else if ( /* F_DOES_ALL_OBJECTS_EXIST */ sub_10888( ref l_U669 ))
            {
                 /* WRITESCRIPTLOG */ sub_1926( "CCB", "eBillboardLetterI - ENTITY_STATE_COMPLETE", 0 );
                l_U650 = 4;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_1926( "CCB", "All the oiBillboardLetterI objects are not created!!!", 0 );
            }
        }
        break;
        case 4: break;
    }
    switch (l_U651)
    {
        case 1:
        if (l_U650 >= 4)
        {
             /* WRITESCRIPTLOG */ sub_1926( "CCB", "eBillboardLetterT - ENTITY_STATE_CREATING", 0 );
            l_U651 = 2;
        }
        break;
        case 2:
        if (l_U310 >= 7)
        {
            if (l_U690 < l_U671)
            {
                if (NOT (DOES_OBJECT_EXIST( l_U671[l_U690] )))
                {
                    DISPLAYF( "[CCB] ### Creating the oiBillboardLetterT object: {} ###", 1, 513, l_U690 );
                    if (l_U690 == 0)
                    {
                        l_U671[l_U690] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsK", -25.07900000, 28.76300000, 94.04000000, 1.00000000 );
                    }
                    else if (l_U690 == 1)
                    {
                        l_U671[l_U690] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsJ", -25.07900000, 26.49000000, 85.47500000, 1.00000000 );
                    }
                }
                else
                {
                    DISPLAYF( "[CCB] ### The oiBillboardLetterT object was already created!!! {} ###", 1, 513, l_U690 );
                }
                l_U690++;
            }
            else if ( /* F_DOES_ALL_OBJECTS_EXIST */ sub_10888( ref l_U671 ))
            {
                 /* WRITESCRIPTLOG */ sub_1926( "CCB", "eBillboardLetterT - ENTITY_STATE_COMPLETE", 0 );
                l_U651 = 4;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_1926( "CCB", "All the oiBillboardLetterT objects are not created!!!", 0 );
            }
        }
        break;
        case 4: break;
    }
    switch (l_U652)
    {
        case 1:
        if (l_U651 >= 4)
        {
             /* WRITESCRIPTLOG */ sub_1926( "CCB", "eBillboardLetterA - ENTITY_STATE_CREATING", 0 );
            l_U652 = 2;
        }
        break;
        case 2:
        if (l_U310 >= 7)
        {
            if (l_U691 < l_U674)
            {
                if (NOT (DOES_OBJECT_EXIST( l_U674[l_U691] )))
                {
                    DISPLAYF( "[CCB] ### Creating the oiBillboardLetterA object: {} ###", 1, 513, l_U691 );
                    if (l_U691 == 0)
                    {
                        l_U674[l_U691] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsM", -25.06400000, 18.77900000, 85.47500000, 1.00000000 );
                    }
                    else if (l_U691 == 1)
                    {
                        l_U674[l_U691] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsL", -25.06400000, 18.77900000, 94.19800000, 1.00000000 );
                    }
                    else if (l_U691 == 2)
                    {
                        l_U674[l_U691] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsO", -25.06400000, 16.40300000, 89.83600000, 1.00000000 );
                    }
                    else if (l_U691 == 3)
                    {
                        l_U674[l_U691] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsN", -25.06400000, 15.12700000, 85.47500000, 1.00000000 );
                    };;;;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The oiBillboardLetterA object was already created!!! {} ###", 1, 513, l_U691 );
                }
                l_U691++;
            }
            else if ( /* F_DOES_ALL_OBJECTS_EXIST */ sub_10888( ref l_U674 ))
            {
                 /* WRITESCRIPTLOG */ sub_1926( "CCB", "eBillboardLetterA - ENTITY_STATE_COMPLETE", 0 );
                l_U652 = 4;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_1926( "CCB", "All the oiBillboardLetterA objects are not created!!!", 0 );
            }
        }
        break;
        case 4: break;
    }
    switch (l_U653)
    {
        case 1:
        if (l_U652 >= 4)
        {
             /* WRITESCRIPTLOG */ sub_1926( "CCB", "eBillboardLetterT2 - ENTITY_STATE_CREATING", 0 );
            l_U653 = 2;
        }
        break;
        case 2:
        if (l_U310 >= 7)
        {
            if (l_U692 < l_U679)
            {
                if (NOT (DOES_OBJECT_EXIST( l_U679[l_U692] )))
                {
                    DISPLAYF( "[CCB] ### Creating the oiBillboardLetterT2 object: {} ###", 1, 513, l_U692 );
                    if (l_U692 == 0)
                    {
                        l_U679[l_U692] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsJa", -25.07900000, 7.62000000, 85.47500000, 1.00000000 );
                    }
                    else if (l_U692 == 1)
                    {
                        l_U679[l_U692] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsKa", -25.07900000, 9.89300000, 94.04000000, 1.00000000 );
                    }
                }
                else
                {
                    DISPLAYF( "[CCB] ### The oiBillboardLetterT2 object was already created!!! {} ###", 1, 513, l_U692 );
                }
                l_U692++;
            }
            else if ( /* F_DOES_ALL_OBJECTS_EXIST */ sub_10888( ref l_U679 ))
            {
                 /* WRITESCRIPTLOG */ sub_1926( "CCB", "eBillboardLetterT2 - ENTITY_STATE_COMPLETE", 0 );
                l_U653 = 4;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_1926( "CCB", "All the oiBillboardLetterT2 objects are not created!!!", 0 );
            }
        }
        break;
        case 4: break;
    }
    switch (l_U654)
    {
        case 1:
        if (l_U653 >= 4)
        {
             /* WRITESCRIPTLOG */ sub_1926( "CCB", "eBillboardLetterA2 - ENTITY_STATE_CREATING", 0 );
            l_U654 = 2;
        }
        break;
        case 2:
        if (l_U310 >= 7)
        {
            if (l_U693 < l_U682)
            {
                if (NOT (DOES_OBJECT_EXIST( l_U682[l_U693] )))
                {
                    DISPLAYF( "[CCB] ### Creating the oiBillboardLetterA2 object: {} ###", 1, 513, l_U693 );
                    if (l_U693 == 0)
                    {
                        l_U682[l_U693] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsLa", -25.06400000, 0.83600000, 94.19800000, 1.00000000 );
                    }
                    else if (l_U693 == 1)
                    {
                        l_U682[l_U693] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsMa", -25.06400000, 0.83600000, 85.47500000, 1.00000000 );
                    }
                    else if (l_U693 == 2)
                    {
                        l_U682[l_U693] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsNa", -25.06400000, -2.81600000, 85.47500000, 1.00000000 );
                    }
                    else if (l_U693 == 3)
                    {
                        l_U682[l_U693] = FIND_OBJECT_AT_POSITION( "p_mpclb_GlsOa", -25.06400000, -1.54000000, 89.83600000, 1.00000000 );
                    };;;;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The oiBillboardLetterA2 object was already created!!! {} ###", 1, 513, l_U693 );
                }
                l_U693++;
            }
            else if ( /* F_DOES_ALL_OBJECTS_EXIST */ sub_10888( ref l_U682 ))
            {
                 /* WRITESCRIPTLOG */ sub_1926( "CCB", "eBillboardLetterA2 - ENTITY_STATE_COMPLETE", 0 );
                l_U654 = 4;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_1926( "CCB", "All the oiBillboardLetterA2 objects are not created!!!", 0 );
            }
        }
        break;
        case 4: break;
    }
    return;
}

/* F_DOES_ALL_OBJECTS_EXIST */ int sub_10888(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (DOES_OBJECT_EXIST( (uParam0^)[I] )))
        {
            DISPLAYF( "[CCB] ### The object does NOT exist: {} ###", 1, 513, I );
            return 0;
        }
    }
    return 1;
}

/* F_HAS_ANY_OBJECTS_BEEN_DAMAGED_BY_PED */ int sub_15567(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_OBJECT_EXIST( (uParam0^)[I] ))
        {
            if (NOT (IS_PED_DEAD( uParam1 )))
            {
                if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( (uParam0^)[I], uParam1 ))
                {
                    return 1;
                }
            }
        }
        else
        {
            DISPLAYF( "[CCB] ### The oiTempObject object is NOT valid!!! {} ###", 1, 513, I );
        }
    }
    return 0;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_16202()
{
     /* MAL_WRITESCRIPTLOG */ sub_225( "P_INITIALIZE_SCRIPT_DATA" );
    l_U311 = 1;
    l_U498 = 0;
    l_U497 = 0;
    l_U499 = 0;
     /* CREATETIMER */ sub_1433( ref l_U540, 666, 1, 0 );
     /* CREATETIMER */ sub_1433( ref l_U580, 666, 1, 0 );
     /* CREATETIMER */ sub_1433( ref l_U500, 1500, 1, 0 );
     /* CREATETIMER */ sub_1433( ref l_U638, 3000, 1, 0 );
     /* SETUP_SCRIPTED_SPEECH */ sub_16361( "SCLBAUD" );
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_16361(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_16405();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_16405()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_SET_STATIC_DATA */ void sub_16532()
{
     /* MAL_WRITESCRIPTLOG */ sub_225( "P_SET_STATIC_DATA" );
    return;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_16595()
{
     /* WRITESCRIPTLOG */ sub_1926( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U647 = 0;
    l_U648 = 1;
    l_U687 = 0;
    l_U649 = 1;
    l_U688 = 0;
    l_U650 = 1;
    l_U689 = 0;
    l_U651 = 1;
    l_U690 = 0;
    l_U652 = 1;
    l_U691 = 0;
    l_U653 = 1;
    l_U692 = 0;
    l_U654 = 1;
    l_U693 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -1589865431 )))
    {
         /* WRITESCRIPTLOG */ sub_1926( "CCB", "Creating the NoLogo script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -1589865431 );
        DISPLAYF( "[CCB] ### The current NoLogo value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -1589865431 ) );
        if (SCRIPT_VAR_HASH_EXISTS( -1589865431 ))
        {
             /* WRITESCRIPTLOG */ sub_1926( "CCB", "The NoLogo script variable was successfully created...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1926( "CCB", "The NoLogo script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1926( "CCB", "The NoLogo script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -1589865431, 0 );
        DISPLAYF( "[CCB] ### The current NoLogo value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -1589865431 ) );
    }
    return;
}

/* P_REQUEST_RS3_PERSISTENT_ASSETS */ void sub_17352()
{
     /* MAL_WRITESCRIPTLOG */ sub_225( "P_REQUEST_RS3_PERSISTENT_ASSETS start" );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_17450( 1037546172, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_17450( g_U2453, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_17450( 1049690760, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_17450( 2145666447, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_17450( 123419661, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_17450( 230799837, ref g_U1108 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_20351( -1787162676, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_20351( 1194438308, ref g_U1301 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22320( "LEVEL_S_CLUB_CP_06", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_22320( "LEVEL_S_CLUB_CP_09", ref g_U1447 );
    if ((g_U891 != 10) AND (l_U312 == 1))
    {
         /* LOADSEAMLESSCUTSCENE */ sub_24265( "mid_10_nc_concat", 0 );
    }
    if (g_U892 > 10)
    {
        REQUEST_SCRIPT_STREAM( "S_CLUB_HELI_RS_STREAM", g_U2867 );
    }
     /* MAL_WRITESCRIPTLOG */ sub_225( "P_REQUEST_RS3_PERSISTENT_ASSETS end" );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_17450(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_17517( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17775( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_17517(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17775( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17775( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17775( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_19306( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17775( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_17775( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_17775(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_17836( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_17836(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_19306(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_20351(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_20405( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20666( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_20405(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20666( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20666( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20666( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_19306( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20666( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_20666( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_20666(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_17836( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_22320(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_22372( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22624( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_22372(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22624( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22624( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22624( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_19306( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22624( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_22624( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_22624(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_17836( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_24265(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_REQUEST_RS3_NONPERSISTENT_ASSETS */ void sub_24705()
{
     /* MAL_WRITESCRIPTLOG */ sub_225( "P_REQUEST_RS3_NONPERSISTENT_ASSETS start" );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_24809( -1313172978, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_24809( -931023773, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_24809( 1476011597, ref g_U1350 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_27639( 73, ref g_U1903 );
     /* SETUPINTERACTIVESEQUENCE */ sub_29731( "S_CLUB_VIG_16_NC", "LEVEL_S_CLUB_CP_09", "/LEVEL/S_CLUB/S_CLUB_VIG_16_NC.act", "/Global/S_CLUB_VIG_16_NC/SEQ_START", 1 );
     /* MAL_WRITESCRIPTLOG */ sub_225( "P_REQUEST_RS3_NONPERSISTENT_ASSETS end" );
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_24809(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_24870( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_25120( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_24870(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_25120( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_25120( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_25120( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_25120( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_19306( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_19306( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_25120( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_25120( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_25120(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_17836( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ void sub_27639(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ sub_27699( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING asset name: {} ###", 1, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_27969( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ int sub_27699(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_27969( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is loading: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_27969( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The VEHICLE_RECORDING asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_27969( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_19306( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being removed: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_27969( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, iParam0 );
            DISPLAYF( "The VEHICLE_RECORDING is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING: {} ###", 1, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_27969( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ void sub_27969(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_17836( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* SETUPINTERACTIVESEQUENCE */ void sub_29731(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    if ((I_SEQUENCE_IS_LOADED( uParam0 )) == 0)
    {
        I_SEQUENCE_SETUP( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            while ((I_SEQUENCE_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_30044(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_30441(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_30843(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_31234(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* P_SETUP_RS_WEATHER_AND_TOD */ void sub_31670()
{
     /* MAL_WRITESCRIPTLOG */ sub_225( "P_SETUP_RS_WEATHER_AND_TOD" );
    RELEASE_TIME_OF_DAY();
    SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
    FREEZE_TIME_OF_DAY( 22, 0 );
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_32020(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1926( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_5114( uParam0,  /* PLAYER_PED_ID */ sub_460() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_32490(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_1926( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_1926( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_8380( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_32781( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_33258( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_33258( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33518( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_33258( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33518( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33518( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_33258( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33518( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33518( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33518( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_33258( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33518( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33518( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33518( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_33518( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_35098( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1926( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_32781(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_5395( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_1926( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_1926( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_33258(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_33518(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_35098(int iParam0)
{
     /* WRITE_STRING */ sub_7215( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_35186( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_35263( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_35263( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_35263( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_35263( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_35263( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_36133( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU52 );
     /* WRITE_STRING */ sub_7215( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU96 );
     /* WRITE_STRING */ sub_7215( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU100 );
     /* WRITE_STRING */ sub_7215( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU104 );
     /* WRITE_STRING */ sub_7215( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU108 );
     /* WRITE_STRING */ sub_7215( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU112 );
     /* WRITE_STRING */ sub_7215( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU116 );
     /* WRITE_STRING */ sub_7215( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU120 );
     /* WRITE_STRING */ sub_7215( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU124 );
     /* WRITE_STRING */ sub_7215( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU128 );
     /* WRITE_STRING */ sub_7215( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_35432( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_35432( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_35432( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_35186(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_35263(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_35432(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_36133(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_SETUP_GAMEPLAY */ void sub_37163()
{
    if (NOT l_U312)
    {
         /* P_SETUP_HELI */ sub_37216( 73, 0.40000000, 500.00000000 );
         /* P_SETUP_PLAYER */ sub_38679( -1313172978, "heli_max" );
         /* P_SETUP_PASSOS_AND_MARCELLO */ sub_39311();
         /* P_SETUP_GIOVANNA_ALT */ sub_40975( -26.24500000, 1.65000000, 85.03600000, 0, "S_CLUB_VIG_16_NC", "giovanna", 0 );
    }
     /* P_SETUP_RS3_ENEMIES */ sub_41373();
    return;
}

/* P_SETUP_HELI */ void sub_37216(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* MAL_WRITESCRIPTLOG */ sub_225( "P_SETUP_HELI" );
    if (NOT (DOES_VEHICLE_EXIST( g_U2866 )))
    {
        g_U2866 =  /* CREATEVEHICLE */ sub_37303( 1049690760, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( uParam0, uParam2 ), 0.00000000, 1, 0, 1 );
    }
    else if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_COORDS( g_U2866, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( uParam0, uParam2 ) );
    }
    if ((NOT (IS_VEHICLE_DEAD( g_U2866 ))) AND (DOES_VEHICLE_EXIST( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
        SILENCE_VEHICLE( g_U2866, 1 );
        SET_VEHICLE_AS_MISSION_VEHICLE( g_U2866 );
        SET_VEHICLE_EXTRA( g_U2866, 5, 1 );
        SET_VEHICLE_INTERIORLIGHT( g_U2866, 1 );
        SET_VEHICLE_DOOR_OPEN( g_U2866, 3 );
        SET_VEHICLE_HEALTH( g_U2866, 600 );
        SET_VEHICLE_ENGINE_HEALTH( g_U2866, 600.00000000 );
        SET_VEHICLE_PETROL_TANK_HEALTH( g_U2866, 300.00000000 );
        SET_VEHICLE_CAN_BE_DAMAGED( g_U2866, 0 );
        SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( g_U2866, 1 );
        SET_VEHICLE_PROOFS( g_U2866, 0, 1, 1, 1, 1 );
         /* P_START_VEHICLE_PLAYBACK */ sub_38128( g_U2866, uParam0, uParam1, uParam2, 0 );
        PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
        if (NOT (DOES_OBJECT_EXIST( l_U23 )))
        {
            l_U23 = CREATE_OBJECT( 230799837, 0.00000000, 1.00000000, 0.00000000, 0, 0 );
            ATTACH_OBJECT_TO_VEHICLE( l_U23, g_U2866, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
    ALLOW_BULLET_CAMERA_CHEAT( 0 );
    return;
}

/* CREATEVEHICLE */ void sub_37303(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_37430( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* LOADMODEL */ void sub_37430(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_7215( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_START_VEHICLE_PLAYBACK */ void sub_38128(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3, boolean bParam4)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
    }
     /* LOADVEHICLERECORDING */ sub_38206( uParam1, 1 );
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
        SET_PLAYBACK_SPEED( uParam0, uParam2 );
        if (fParam3 > 0.00000000)
        {
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, fParam3 );
        }
    }
    if (bParam4)
    {
        while ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
        {
             /* WRITE_STRING */ sub_7215( "Waiting for vehicle to start playing recorded path." );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADVEHICLERECORDING */ void sub_38206(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a recording to be loaded: Rec# {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_SETUP_PLAYER */ void sub_38679(unknown uParam0, unknown uParam1)
{
     /* MAL_WRITESCRIPTLOG */ sub_225( "P_SETUP_PLAYER" );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_460() )))
    {
        SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_460(), 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_460(), 1 );
        SET_ADRENALINE_AMT( 0.75000000 );
        CLEAR_PED_TASKS(  /* PLAYER_PED_ID */ sub_460() );
        SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_460(), GET_PED_MAX_HEALTH(  /* PLAYER_PED_ID */ sub_460() ), 0 );
        if (NOT (IS_PED_ATTACHED_TO_ANY_VEHICLE(  /* PLAYER_PED_ID */ sub_460() )))
        {
            if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
            {
                ATTACH_PED_TO_VEHICLE(  /* PLAYER_PED_ID */ sub_460(), g_U2866, 0, 0.56600000, 0.00000000, 0.80400000, -90.00000000, 0.00000000, 1, 0, 0, 1 );
                SET_VEHICLE_AS_ENTITY_SYNC_POINT( g_U2866,  /* PLAYER_PED_ID */ sub_460() );
            }
        }
        SET_PED_CAN_RAGDOLL(  /* PLAYER_PED_ID */ sub_460(), 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        ENABLE_HIT_DETECTION( 0 );
        ENABLE_LAST_MAN_STANDING( 0 );
        SET_SILHOUETTE_ACTIVE( 0 );
        SET_RAIL_RELATIVE_DIR( 2, 0 );
        SET_PLAYER_COMBAT_TIMER_MODE( 1 );
        PLAYER_SET_AIM_MODE( 2 );
        AUDIO_SET_PED_FOOTSTEPS_ON( 0 );
        SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_460(), 0, 0 );
        SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_460(), 1, 0 );
        SET_INSTANT_FIRE_FORCED( 1 );
        SET_PED_USES_ANIMATED_DEATH(  /* PLAYER_PED_ID */ sub_460(), 1 );
        if (NOT (ISEQ_QUERY_STATE( uParam0, 3 )))
        {
             /* WRITESCRIPTLOG */ sub_1926( "MF", "Starting Player Helicopter Interactive Sequence", 0 );
            PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_460(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
            ISEQ_REGISTER_ENTITY( uParam0, uParam1,  /* PLAYER_PED_ID */ sub_460(), 0 );
            ISEQ_START( uParam0 );
        }
        REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_460() );
         /* F_GIVEPEDWEAPON */ sub_7606(  /* PLAYER_PED_ID */ sub_460(), 354276007, 25000, 0, 0 );
        SET_CAMERA_OVERRIDE( "RAIL_HELI_CAMERA", "RAIL_HELI_CAMERA_AIM", 0, 1, 1 );
    }
    return;
}

/* P_SETUP_PASSOS_AND_MARCELLO */ void sub_39311()
{
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_39386( ref g_U2736, 55.11000000, -24.06000000, 94.27000000, 0.00000000, 817667075, 26, 6, 0, 0, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_39386( ref g_U2750, 54.04000000, -24.06000000, 94.27000000, 0.00000000, -383356854, 26, 6, 0, 0, 1 );
    if (NOT (ISEQ_IS_LOADED( -931023773 )))
    {
        ISEQ_REQUEST( -931023773 );
    }
    if (NOT (ISEQ_IS_LOADED( 1476011597 )))
    {
        ISEQ_REQUEST( 1476011597 );
    }
    if (NOT (DOES_PED_EXIST( g_U2763 )))
    {
        g_U2763 =  /* CREATEPED */ sub_39643( ref g_U2750 );
    }
    if (NOT (IS_PED_DEAD( g_U2763 )))
    {
         /* MAL_STANDSTILL */ sub_40378( ref g_U2763 );
        SET_PED_INVINCIBLE( g_U2763, 1 );
        DETACH_PED( g_U2763, 1 );
        if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
        {
            ATTACH_PED_TO_VEHICLE( g_U2763, g_U2866, 0, 0.67600000, 1.52300000, 1.50300000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        }
    }
    if (NOT (DOES_PED_EXIST( g_U2749 )))
    {
        g_U2749 =  /* CREATEPED */ sub_39643( ref g_U2736 );
    }
    if (NOT (IS_PED_DEAD( g_U2749 )))
    {
         /* MAL_STANDSTILL */ sub_40378( ref g_U2749 );
        SET_PED_INVINCIBLE( g_U2749, 1 );
        DETACH_PED( g_U2749, 1 );
        if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
        {
            ATTACH_PED_TO_VEHICLE( g_U2749, g_U2866, 0, -0.61500000, 1.48000000, 1.55500000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        }
    }
    if (NOT (ISEQ_QUERY_STATE( -931023773, 3 )))
    {
         /* MAL_REGISTERPEDWITHISEQ */ sub_40777( g_U2763, -931023773, "marcello" );
        ISEQ_START( -931023773 );
    }
    if (NOT (ISEQ_QUERY_STATE( 1476011597, 3 )))
    {
         /* MAL_REGISTERPEDWITHISEQ */ sub_40777( g_U2749, 1476011597, "passos" );
        ISEQ_START( 1476011597 );
    }
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_39386(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* CREATEPED */ void sub_39643(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_37430( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_40134( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_40235( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_40134(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_40235(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* MAL_STANDSTILL */ void sub_40378(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

/* MAL_REGISTERPEDWITHISEQ */ void sub_40777(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

/* P_SETUP_GIOVANNA_ALT */ void sub_40975(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, boolean bParam6)
{
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_39386( ref g_U2764, uParam0, uParam3, 1421546599, 5, 2, 0, 0, 0 );
    g_U2777 =  /* CREATEPED */ sub_39643( ref g_U2764 );
    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
         /* MAL_WRITESCRIPTLOG */ sub_225( "Setting Giovanna crap" );
         /* MAL_STANDSTILL */ sub_40378( ref g_U2777 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2777, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2777, 1 );
        SET_BULLET_CAM_PREF( g_U2777, "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U2777, 1 );
        SET_PED_GORE( g_U2777, 0 );
        RESET_PED_GORE( g_U2777 );
        SET_COLLISION_BETWEEN_PEDS( g_U2777, 0 );
         /* MAL_REGISTERPEDWITHISEQUENCE */ sub_41270( uParam4, uParam5, g_U2777 );
        if (bParam6)
        {
            I_SEQUENCE_START( uParam4 );
        }
    }
    return;
}

/* MAL_REGISTERPEDWITHISEQUENCE */ void sub_41270(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam2 )))
    {
        I_SEQUENCE_REGISTER_ENTITY( uParam0, uParam1, uParam2, 0 );
    }
    return;
}

/* P_SETUP_RS3_ENEMIES */ void sub_41373()
{
     /* NCRS_ENEMYSTRUCTFILL */ sub_41451( ref l_U314[0], -24.51500000, -6.40500000, 85.03600000, 0.00000000, 603230254, 2145666447, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_41451( ref l_U314[1], -21.57000000, 13.68100000, 85.03600000, 90.00000000, -166179041, 2145666447, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_41451( ref l_U314[2], -23.45900000, 30.25800000, 85.03600000, 90.00000000, -1417346710, 2145666447, 1194438308 );
     /* NCRS_ENEMYSTRUCTFILL */ sub_41451( ref l_U314[3], -21.55700000, 51.33800000, 85.03600000, 0.00000000, -1540100678, 2145666447, 1194438308 );
     /* MAL_ENEMYSTRUCTARRAYCREATE */ sub_41873( ref l_U314, "RS3", ref l_U491, 1.00000000, 0, 0 );
     /* MAL_ESA_SETASONESHOTKILL */ sub_45213( ref l_U314, 1, 0, -1 );
     /* MAL_ESA_VALIDATEBULLETCAMHIT */ sub_45395( ref l_U314, 0 );
    return;
}

/* NCRS_ENEMYSTRUCTFILL */ void sub_41451(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* MAL_ENEMYSTRUCTFILL */ sub_41523( uParam0, uParam1, uParam4, uParam7, 1194438308, 2, g_U3107, 5, 500, uParam6, 0, 0, uParam5, g_U668 );
    return;
}

/* MAL_ENEMYSTRUCTFILL */ void sub_41523(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU68 = uParam4;
    iParam0->_fU72 = uParam5;
    iParam0->_fU76 = uParam6;
    iParam0->_fU80 = uParam7;
    iParam0->_fU84 = {uParam8};
    iParam0->_fU116 = uParam16;
    iParam0->_fU120 = uParam17;
    iParam0->_fU124 = uParam18;
    iParam0->_fU128 = uParam19;
    iParam0->_fU132 = uParam20;
    iParam0->_fU136 = uParam21;
    iParam0->_fU140 = {uParam22};
    return;
}

/* MAL_ENEMYSTRUCTARRAYCREATE */ int sub_41873(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5)
{
    int I;

    PRINTSTRING( "[MSWW] ### MAL_EnemyStructArrayCreate starting: " );
     /* WRITE_STRING */ sub_7215( uParam1 );
    if (NOT bParam4)
    {
         /* P_SETUP_AI_GROUP */ sub_41990( uParam2, uParam3, 1 );
        for ( I = 0; I < (uParam0^); I++ )
        {
             /* MAL_ENEMYSTRUCTCREATE */ sub_42400( ref (uParam0^)[I] );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_44335( (uParam0^)[I]._fU0, uParam2 );
        }
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_44733( uParam0, uParam1 );
    }
    else if ((uParam0^)[0]._fU172 == 0)
    {
         /* P_SETUP_AI_GROUP */ sub_41990( uParam2, uParam3, 1 );
    }
    if ((uParam0^)[0]._fU172 < (uParam0^))
    {
         /* MAL_ENEMYSTRUCTCREATE */ sub_42400( ref (uParam0^)[(uParam0^)[0]._fU172] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_44335( (uParam0^)[(uParam0^)[0]._fU172]._fU0, uParam2 );
        (uParam0^)[0]._fU172++;
    }
    else
    {
         /* MAL_ESA_GIVEDEBUGNAMES */ sub_44733( uParam0, uParam1 );
        return 1;
    }
    if (bParam5)
    {
         /* MAL_ESA_PROCESSINGFREEZE */ sub_45024( uParam0, 1, 0, -1 );
    }
    return 0;
}

/* P_SETUP_AI_GROUP */ void sub_41990(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* MAL_ENEMYSTRUCTCREATE */ void sub_42400(int iParam0)
{
    unknown uVar3;

     /* MAL_WRITESCRIPTLOG */ sub_225( "MAL_EnemyStructCreate starting" );
     /* MAL_CREATEPEDADV */ sub_42539( iParam0 + 0, iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU72, iParam0->_fU80, iParam0->_fU84, iParam0->_fU116, iParam0->_fU120, iParam0->_fU124, 1 );
    if (NOT (ARE_STRINGS_EQUAL( iParam0 + 140, ref g_U668 )))
    {
        PRINTSTRING( "[MSWW] ### MAL_EnemyStructCreate adding ped to room: " );
         /* WRITE_STRING */ sub_7215( iParam0 + 140 );
         /* MAL_SETROOMFORPED */ sub_43686( iParam0 + 0, iParam0 + 140 );
    }
    if (iParam0->_fU128)
    {
         /* MAL_WRITESCRIPTLOG */ sub_225( "MAL_EnemyStructCreate giving ped backup weapon" );
         /* MAL_GIVEPEDWEAPONINHOLSTER */ sub_43835( iParam0->_fU0, iParam0->_fU76, 25000, 1, 0 );
    }
    if (iParam0->_fU132)
    {
        uVar3 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
         /* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ sub_44061( ref uVar3, 14, 1 );
    }
    if (iParam0->_fU136 != 0)
    {
         /* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ sub_44224( iParam0 + 0, iParam0->_fU136 );
    }
    return iParam0->_fU0;
}

/* MAL_CREATEPEDADV */ void sub_42539(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
     /* P_CREATEPEDSTRUCT */ sub_42583( uParam1, uParam2, uParam5, uParam18, 7, 3, 2, 0, 0 );
    (uParam0^) =  /* MAL_CREATEPED */ sub_42705( uParam0, uParam1, 1, 1, uParam19 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
    }
     /* MAL_GIVEPEDWEAPON */ sub_43001( (uParam0^), uParam6, 25000, 0, 0 );
     /* MAL_SETTEMPLATEANDRANGES */ sub_43206( uParam0, ref uParam8, uParam16, uParam17, 1 );
     /* MAL_SETPEDCOMBATMOVEMENT */ sub_43494( uParam0, uParam7 );
    return (uParam0^);
}

/* P_CREATEPEDSTRUCT */ void sub_42583(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

/* MAL_CREATEPED */ void sub_42705(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
     /* CLEANPED */ sub_3637( (uParam0^) );
    (uParam0^) =  /* CREATEPED */ sub_39643( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
             /* MAL_WRITESCRIPTLOG */ sub_225( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
     /* MAL_SETPEDCOMBATATTRIBUTES */ sub_42849( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

/* MAL_SETPEDCOMBATATTRIBUTES */ void sub_42849(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

/* MAL_GIVEPEDWEAPON */ void sub_43001(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                 /* MAL_WRITESCRIPTLOG */ sub_225( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_SETTEMPLATEANDRANGES */ void sub_43206(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
     /* MAL_WRITESCRIPTLOG */ sub_225( "MAL_SetTemplateAndRanges" );
    PRINTSTRING( "[MSWW]### Template Name: " );
     /* WRITE_STRING */ sub_7215( uParam1 );
    PRINTSTRING( "[MSWW]### Min Range: " );
     /* WRITE_FLOAT */ sub_35263( fParam2 );
    PRINTSTRING( "[MSWW]### Max Range: " );
     /* WRITE_FLOAT */ sub_35263( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
         /* MAL_SETPEDCOMBATATTRIBUTES */ sub_42849( uParam0, 1, 0 );
    }
    return;
}

/* MAL_SETPEDCOMBATMOVEMENT */ void sub_43494(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_SETROOMFORPED */ void sub_43686(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), uParam1 );
    }
    return;
}

/* MAL_GIVEPEDWEAPONINHOLSTER */ void sub_43835(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                 /* MAL_WRITESCRIPTLOG */ sub_225( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ void sub_44061(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

/* MAL_GIVEPEDPERSISTANTVARIATIONENUM */ void sub_44224(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PERSISTENT_PED_VARIATION_ENUM( (uParam0^), uParam1 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_44335(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_7215( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_41990( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_41990( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* MAL_ESA_GIVEDEBUGNAMES */ void sub_44733(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I]._fU0, ref cVar5 );
        }
    }
    return;
}

/* MAL_ESA_PROCESSINGFREEZE */ void sub_45024(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_PROCESSINGFREEZE */ sub_45101( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_PROCESSINGFREEZE */ void sub_45101(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FREEZE_PROCESSING( iParam0->_fU0, uParam1 );
    }
    return;
}

/* MAL_ESA_SETASONESHOTKILL */ void sub_45213(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_SETASONESHOTKILL */ sub_45294( (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_SETASONESHOTKILL */ void sub_45294(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( uParam0._fU0, uParam44 );
    }
    return;
}

/* MAL_ESA_VALIDATEBULLETCAMHIT */ void sub_45395(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_ES_VALIDATEBULLETCAMHIT */ sub_45464( (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_VALIDATEBULLETCAMHIT */ void sub_45464(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_VALIDATE_BULLET_CAM_HIT( uParam0._fU0, uParam44 );
    }
    return;
}

/* CUTSYS_DEFAULT_PRECUTSCENESETUP */ int sub_45671()
{
    return 1;
}

/* P_MID10_REGISTER */ void sub_45724()
{
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_MID10_Register - START", 0 );
    CUTSCENE_REGISTER_INTERACTIVE_SEQUENCE( "S_CLUB_VIG_16_NC" );
     /* MAL_ES_REGISTERWITHISEQUENCE */ sub_45857( "S_CLUB_VIG_16_NC", "gmed1", l_U314[0] );
     /* MAL_ES_REGISTERWITHISEQUENCE */ sub_45857( "S_CLUB_VIG_16_NC", "gmed2", l_U314[1] );
     /* MAL_ES_REGISTERWITHISEQUENCE */ sub_45857( "S_CLUB_VIG_16_NC", "gmed3", l_U314[2] );
     /* MAL_ES_REGISTERWITHISEQUENCE */ sub_45857( "S_CLUB_VIG_16_NC", "gmed4", l_U314[3] );
     /* MAL_REGISTERPEDWITHISEQUENCE */ sub_41270( "S_CLUB_VIG_16_NC", "giovanna", g_U2777 );
    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2777, "Giov_Club_B", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U2777, -26.24500000, 1.65000000, 85.03600000, 0.00000000 );
    }
    if (NOT (IS_PED_DEAD( g_U2749 )))
    {
        DETACH_PED( g_U2749, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2749, "Pass_Club_H", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( g_U2749, g_U2866, 0, -0.61500000, 1.48000000, 1.55500000, 0.00000000, 0.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2749, "/Global/S_CLUB_VIG_11_PAS/SEQ_START/PASSOS/IDLE" );
    }
    if (NOT (IS_PED_DEAD( g_U2763 )))
    {
        DETACH_PED( g_U2763, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2763, "Marc_Casu", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( g_U2763, g_U2866, 0, 0.67600000, 1.52300000, 1.50300000, 0.00000000, 0.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2763, "/Global/S_CLUB_VIG_11_MAR/SEQ_START/MARCELLO/IDLE" );
    }
    if (NOT (IS_PED_DEAD( l_U314[0]._fU0 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U314[0]._fU0, "G_CS_NCSM_D", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U314[0]._fU0, l_U314[0]._fU56, l_U314[0]._fU68 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U314[0]._fU0, 0, 0 ), "W_SB_Uzi_Aa_H", 0 );
    }
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_460() )))
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 0, 0 ), "W_AR_Rug30_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE(  /* PLAYER_PED_ID */ sub_460(), g_U2866, 0, 0.56600000, 0.00000000, 0.80400000, -90.00000000, 0.00000000, 1, 0 );
        SET_VEHICLE_AS_ENTITY_SYNC_POINT( g_U2866,  /* PLAYER_PED_ID */ sub_460() );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_460(), "/Global/S_CLUB_VIG_10_NC/SEQ_START/MAX/INITIALIZE" );
        if (IS_WEAPON_ATTACHMENT_TOGGLED( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 0, 0 ), 13 ))
        {
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 0, 0 ), 13, 0 );
            l_U24 = 0;
        }
        else
        {
            l_U24 = 1;
        }
    }
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U2866, "heli_luxury", 0 );
        FREEZE_VEHICLE_POSITION( g_U2866, 1 );
    }
    if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U3276._fU0, g_U3276._fU4 ) ))
    {
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3276._fU0, g_U3276._fU4 ), "p_clb_door_ext_aa", 0 );
    }
    CUTSCENE_FORCE_GAMEPLAY_HEADING_PITCH_UPDATE();
    REGISTER_DETACH_PLAYER_FOR_CUTSCENE();
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_MID10_Register - END", 0 );
    return;
}

/* MAL_ES_REGISTERWITHISEQUENCE */ void sub_45857(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45)
{
     /* MAL_REGISTERPEDWITHISEQUENCE */ sub_41270( uParam0, uParam1, uParam2._fU0 );
    return;
}

/* P_MID10_HANDLE */ void sub_47103()
{
    if (l_U599._fU52)
    {
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        SET_CAMERA_OVERRIDE( "RAIL_HELI_CAMERA", "RAIL_HELI_CAMERA_AIM", 0, 1, 1 );
         /* P_START_VEHICLE_PLAYBACK */ sub_38128( g_U2866, 73, 0.40000000, 500.00000000, 0 );
        PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
        CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_460() );
        CAMERA_SNAP_POINT_AT_COORD( l_U626 );
        g_U1095 = 1;
    }
     /* P_MAKEHELIENGINESFUCKINGTURN */ sub_47272();
    if (l_U499 == 0)
    {
        if (GET_CUTSCENE_TIME_MS() >= 7500)
        {
             /* WRITESCRIPTLOG */ sub_1926( "MF", "Music Cue: 6.6", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_1_2_4", "NIGHTCLUB_01_1_2_4", 0, 3000, 0, -1082130432, 0 );
            l_U499 = 1;
        }
    }
    return;
}

/* P_MAKEHELIENGINESFUCKINGTURN */ void sub_47272()
{
    if (NOT (IS_VEHICLE_DEAD( g_U2866 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U2866, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( g_U2866 );
    }
    return;
}

/* F_MID10_POST */ int sub_47517()
{
     /* MAL_ES_CLEAN */ sub_3607( ref g_U2778 );
    FREEZE_VEHICLE_POSITION( g_U2866, 0 );
    UNPAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
    CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_460() );
    return 1;
}

/* CUTSYS_CREATESTANDALONECUTSCENE */ void sub_47601(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* WRITESCRIPTLOG */ sub_1926( "MSWW", "CutSys_CreateStandaloneCutscene", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_47917( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam7, 0, 47712, 47763, 0, 47815, 47865, uParam6 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDOUT */ void sub_47712()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDOUT */ int sub_47763()
{
    return 1;
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_47815()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_47865()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_47917(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_HANDLECUTSCENE */ void sub_48263(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_1926( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_1926( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_1926( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_1926( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_1926( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_1926( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_24265( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_1926( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_49154( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_49154( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_1926( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_49698( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_49154( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_50078( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_50078( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* NIS_PRE_SETUP */ void sub_49154(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_460() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_498(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_460(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_460() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_460(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_49698(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_460() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_460(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_460(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_460(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_50078(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_460() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_498(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_460(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_50176();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_50176()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_460() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_460(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_460(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_START_GAMEPLAY */ void sub_50487()
{
    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 0, 0 ) ))
    {
        ENABLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 0, 0 ), 13, 1 );
        if (NOT l_U24)
        {
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 0, 0 ), 13, 1 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 0, 0 ), 13, 0 );
        }
        SET_LASER_SIGHT_ATTACHMENT( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 0, 0 ), -1363960247 );
    }
    UNPAUSE_PLAYBACK_RECORDED_VEHICLE( g_U2866 );
    if (NOT (I_SEQUENCE_QUERY_STATE( "S_CLUB_VIG_16_NC", 3 )))
    {
         /* MAL_ES_REGISTERWITHISEQUENCE */ sub_45857( "S_CLUB_VIG_16_NC", "gmed1", l_U314[0] );
         /* MAL_ES_REGISTERWITHISEQUENCE */ sub_45857( "S_CLUB_VIG_16_NC", "gmed2", l_U314[1] );
         /* MAL_ES_REGISTERWITHISEQUENCE */ sub_45857( "S_CLUB_VIG_16_NC", "gmed3", l_U314[2] );
         /* MAL_ES_REGISTERWITHISEQUENCE */ sub_45857( "S_CLUB_VIG_16_NC", "gmed4", l_U314[3] );
         /* MAL_REGISTERPEDWITHISEQUENCE */ sub_41270( "S_CLUB_VIG_16_NC", "giovanna", g_U2777 );
        I_SEQUENCE_START( "S_CLUB_VIG_16_NC" );
    }
     /* WRITESCRIPTLOG */ sub_1926( "MF", "Music Cue: 6.7", 0 );
     /* WRITESCRIPTLOG */ sub_1926( "MF", "Music Cue: 6.8", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "NIGHTCLUB_SUSPENSE", "NIGHTCLUB_01_1_2_4", "NIGHTCLUB_01_1_2_4", 0, -1, 0, -1082130432, 0 );
     /* P_RS_CONTROLS */ sub_51078();
    SET_INSTANT_FIRE_FORCED( 0 );
     /* P_START_SP_CHALLENGES */ sub_51216();
    return;
}

/* P_RS_CONTROLS */ void sub_51078()
{
    SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_498(), 0, 256 );
    REENABLE_PLAYER_INPUT( 17 );
    REENABLE_PLAYER_INPUT( 16 );
    REENABLE_PLAYER_INPUT( 15 );
    REENABLE_PLAYER_INPUT( 14 );
    REENABLE_PLAYER_INPUT( 6 );
    REENABLE_PLAYER_INPUT( 28 );
    REENABLE_PLAYER_INPUT( 29 );
    REENABLE_PLAYER_INPUT( 4 );
    REENABLE_PLAYER_INPUT( 19 );
    REENABLE_PLAYER_INPUT( 20 );
    return;
}

/* P_START_SP_CHALLENGES */ void sub_51216()
{
     /* WRITESCRIPTLOG */ sub_1926( "CCB", "P_START_SP_CHALLENGES", 0 );
     /* WRITESCRIPTLOG */ sub_1926( "CCB", "Starting the Nightclub_RS3 context...", 0 );
    START_CONTEXT( "Nightclub_RS3" );
    return;
}

/* F_IMAGEFX_FADE_IN */ int sub_51377()
{
    if (l_U272)
    {
         /* WRITESCRIPTLOG */ sub_1926( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U272 = 0;
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_1926( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

/* P_START_CHECKPOINT_THREAD */ void sub_51772(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* P_RS_HANDLE_CAM_SHAKE */ void sub_51847()
{
    if (NOT l_U6._fU20)
    {
         /* WRITESCRIPTLOG */ sub_1926( "MF", "INITIAL HELI RAIL CAM SHAKE...", 0 );
        SHAKE_GAMEPLAY_CAM(  /* F_CAM_SHAKE_MED_EXPLOSION */ sub_51936(), l_U16 );
         /* P_CREATE_AND_START_TIMER */ sub_52022( ref l_U6, l_U15 );
    }
    if ( /* ISTIMERDONE */ sub_1716( ref l_U6 ))
    {
        SHAKE_GAMEPLAY_CAM(  /* F_CAM_SHAKE_MED_EXPLOSION */ sub_51936(), l_U16 );
         /* P_CREATE_AND_START_TIMER */ sub_52022( ref l_U6, l_U15 );
    }
    return;
}

/* F_CAM_SHAKE_MED_EXPLOSION */ string sub_51936()
{
    return "MEDIUM_EXPLOSION_SHAKE";
}

/* P_CREATE_AND_START_TIMER */ void sub_52022(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_1433( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_1583( uParam0 );
    return;
}

/* P_RS3_SPEECH_SCLB_EX_PLAY_LINE */ void sub_52158()
{
    int iVar2;
    int I;
    int iVar4;
    int iVar5;

     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS3_SPEECH_SCLB_EX_PLAY_LINE - START", 0 );
    iVar2 = 1;
    for ( I = 0; I < l_U629; I++ )
    {
        if (l_U629[I] == 0)
        {
            iVar2 = 0;
        }
    }
    if (iVar2 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1926( "MF", "RESETTING BOOLEAN ARRAY", 0 );
         /* P_SET_BOOL_ARRAY_VALUE */ sub_52353( ref l_U629, 0 );
    }
    SET_RANDOM_SEED( TIMERA() );
    iVar4 = GET_RANDOM_INT_IN_RANGE( 0, 8 );
    iVar5 = 0;
    while (l_U629[iVar4] == 1)
    {
        iVar4 = GET_RANDOM_INT_IN_RANGE( 0, 8 );
         /* WRITESCRIPTLOG */ sub_1926( "MF", "Searching for correct value....", 0 );
        if (iVar4 >= l_U629)
        {
             /* WRITESCRIPTLOG */ sub_1926( "MF", "INVALID VALUE, Clamping...", 0 );
            iVar4 = l_U629 - 1;
        }
        iVar5++;
        if (iVar5 > 200)
        {
             /* WRITESCRIPTLOG */ sub_1926( "MF", "FUCK IT, Search failed, just use this value!", 0 );
            l_U629[iVar4] = 0;
        }
    }
    if (iVar4 == 0)
    {
         /* P_RS_SPEECH_EXV1A */ sub_52691();
    }
    else if (iVar4 == 1)
    {
         /* P_RS_SPEECH_EXV1B */ sub_54137();
    }
    else if (iVar4 == 2)
    {
         /* P_RS_SPEECH_EXV1C */ sub_54382();
    }
    else if (iVar4 == 3)
    {
         /* P_RS_SPEECH_EXV1D */ sub_54627();
    }
    else if (iVar4 == 4)
    {
         /* P_RS_SPEECH_EXV1E */ sub_54875();
    }
    else if (iVar4 == 5)
    {
         /* P_RS_SPEECH_EXV1F */ sub_55123();
    }
    else if (iVar4 == 6)
    {
         /* P_RS_SPEECH_EXV1G */ sub_55371();
    }
    else
    {
        iVar4 = 7;
         /* P_RS_SPEECH_EXV1H */ sub_55609();
    };;;;;;;
    l_U629[iVar4] = 1;
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS3_SPEECH_SCLB_EX_PLAY_LINE - END", 0 );
    return;
}

/* P_SET_BOOL_ARRAY_VALUE */ void sub_52353(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        (uParam0^)[I] = uParam1;
    }
    return;
}

/* P_RS_SPEECH_EXV1A */ void sub_52691()
{
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1A - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52764( ref l_U125 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 2, g_U2763, "MARCELO", ref l_U125, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 1,  /* PLAYER_PED_ID */ sub_460(), "MAX", ref l_U125, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53147( "SCLB_EXV1A", ref l_U125, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2763, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1A - END", 0 );
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_52764(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_52879(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_53147(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_53192( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_53192(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_53279( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_53279(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_53331( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_53849( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_53331(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_53849(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_RS_SPEECH_EXV1B */ void sub_54137()
{
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1B - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52764( ref l_U135 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 2, g_U2763, "MARCELO", ref l_U135, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 1,  /* PLAYER_PED_ID */ sub_460(), "MAX", ref l_U135, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53147( "SCLB_EXV1B", ref l_U135, 8, 1 );
    PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_460(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1B - END", 0 );
    return;
}

/* P_RS_SPEECH_EXV1C */ void sub_54382()
{
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1C - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52764( ref l_U145 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 2, g_U2763, "MARCELO", ref l_U145, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 1,  /* PLAYER_PED_ID */ sub_460(), "MAX", ref l_U145, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53147( "SCLB_EXV1C", ref l_U145, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2763, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1C - END", 0 );
    return;
}

/* P_RS_SPEECH_EXV1D */ void sub_54627()
{
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1D - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52764( ref l_U155 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 1, g_U2763, "MARCELO", ref l_U155, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 0, g_U2749, "PASSOS", ref l_U155, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53147( "SCLB_EXV1D", ref l_U155, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2763, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1D - END", 0 );
    return;
}

/* P_RS_SPEECH_EXV1E */ void sub_54875()
{
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1E - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52764( ref l_U165 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 1, g_U2763, "MARCELO", ref l_U165, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 0, g_U2749, "PASSOS", ref l_U165, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53147( "SCLB_EXV1E", ref l_U165, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2763, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1E - END", 0 );
    return;
}

/* P_RS_SPEECH_EXV1F */ void sub_55123()
{
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1F - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52764( ref l_U175 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 1, g_U2763, "MARCELO", ref l_U175, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 0, g_U2749, "PASSOS", ref l_U175, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53147( "SCLB_EXV1F", ref l_U175, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2763, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1F - END", 0 );
    return;
}

/* P_RS_SPEECH_EXV1G */ void sub_55371()
{
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1G - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52764( ref l_U185 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 1, g_U2749, "PASSOS", ref l_U185, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 0,  /* PLAYER_PED_ID */ sub_460(), "MAX", ref l_U185, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53147( "SCLB_EXV1G", ref l_U185, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2749, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1G - END", 0 );
    return;
}

/* P_RS_SPEECH_EXV1H */ void sub_55609()
{
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1H - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52764( ref l_U195 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 1, g_U2763, "MARCELO", ref l_U195, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 0, g_U2749, "PASSOS", ref l_U195, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53147( "SCLB_EXV1H", ref l_U195, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2763, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_EXV1H - END", 0 );
    return;
}

/* MAL_ES_ISACTINTCOMPLETED */ int sub_55924(int iParam0, unknown uParam1, boolean bParam2)
{
    if (( /* MAL_GETACTINTSTATUS */ sub_55968( iParam0->_fU0, uParam1 )) == 1)
    {
        if (bParam2)
        {
             /* MAL_FINISHACTINT */ sub_56058( iParam0 + 0, uParam1 );
        }
        return 1;
    }
    return 0;
}

/* MAL_GETACTINTSTATUS */ int sub_55968(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* MAL_FINISHACTINT */ void sub_56058(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

/* P_RS_SPEECH_GVNSC1 */ void sub_56141()
{
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_GVNSC1 - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52764( ref l_U105 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 1, g_U2777, "GIOVANNA", ref l_U105, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 0,  /* PLAYER_PED_ID */ sub_460(), "MAX", ref l_U105, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53147( "SCLB_GVNSC1", ref l_U105, 8, 1 );
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_GVNSC1 - END", 0 );
    return;
}

/* P_RSDIAG_GIOVANNAINIMMEDIATEDANGER */ void sub_56415()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52764( ref uVar2 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 0,  /* PLAYER_PED_ID */ sub_460(), "MAX", ref uVar2, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 1, g_U2749, "PASSOS", ref uVar2, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53147( "SCLB_HRPGC", ref uVar2, 8, 1 );
    PED_SET_ACTION_INTENTION( g_U2749, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_56574()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* P_RS_HANDLE_PLAYER_RELOAD_DIALOGUE */ void sub_56674()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_460() )))
    {
        if (NOT l_U54)
        {
            if (NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_460() )))
            {
                if (TIME_SINCE_LAST_MONOLOGUE() > 500)
                {
                    if (IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_460() ))
                    {
                        l_U54 = 1;
                        if ((l_U74 == 1) || ((GET_WEAPON_AMMO_IN_CLIP( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_460(), 0, 0 ) )) < 2))
                        {
                             /* P_CREATE_AND_START_TIMER */ sub_52022( ref l_U65, 400 );
                        }
                        else if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) < 45)
                        {
                             /* P_CREATE_AND_START_TIMER */ sub_52022( ref l_U65, 400 );
                        }
                    }
                }
            }
        }
        if ( /* ISTIMERDONE */ sub_1716( ref l_U65 ))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52764( ref l_U55 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 0,  /* PLAYER_PED_ID */ sub_460(), "MAX", ref l_U55, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 1,  /* PLAYER_PED_ID */ sub_460(), "MAX", ref l_U55, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_53147( "SCLB_MCHWR", ref l_U55, 5, 1 );
            l_U74 = 0;
        }
        if (l_U54 == 1)
        {
            if (NOT (IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_460() )))
            {
                l_U54 = 0;
            }
        }
    }
    return;
}

/* P_RS_SPEECH_MAX_RESPONDS */ void sub_57036()
{
    if ( /* ISTIMERDONE */ sub_1716( ref l_U45 ))
    {
         /* P_RS_SPEECH_VIG_10 */ sub_57087();
    }
    return;
}

/* P_RS_SPEECH_VIG_10 */ void sub_57087()
{
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_VIG_10 - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_52764( ref l_U115 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 1,  /* PLAYER_PED_ID */ sub_460(), "MAX", ref l_U115, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_52879( 0,  /* PLAYER_PED_ID */ sub_460(), "MAX", ref l_U115, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_53147( "SCLB_VIG10", ref l_U115, 8, 1 );
    PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_460(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* WRITESCRIPTLOG */ sub_1926( "MF", "P_RS_SPEECH_VIG_10 - END", 0 );
    return;
}

/* P_RS_HANDLE_GIOVANNA_SCREAMS_TO_BEING_SHOT_AT */ void sub_57325()
{
    unknown uVar2;

    if (NOT (IS_PED_DEAD( g_U2777 )))
    {
        if (NOT (IS_ANY_SPEECH_PLAYING( g_U2777 )))
        {
            if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2777 ), 1.90000000, ref uVar2 ))
            {
                if ((GET_RANDOM_INT_IN_RANGE( 0, 100 )) > 30)
                {
                     /* P_RS_SPEECH_GVNSC1 */ sub_56141();
                }
            }
        }
    }
    return;
}

/* MAL_ESA_SETACTINT */ void sub_57630(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* MAL_SETACTINT */ sub_57689( (uParam0^)[I]._fU0, uParam1, uParam2 );
    }
    return;
}

/* MAL_SETACTINT */ void sub_57689(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U665 );
    }
    return;
}

/* MAL_ESA_INVINCIBLE */ void sub_57979(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
         /* MAL_ES_INVINCIBLE */ sub_58050( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_ES_INVINCIBLE */ void sub_58050(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_INVINCIBLE( iParam0->_fU0, uParam1 );
    }
    return;
}

/* MAL_ESA_GETNUMLIVINGPEDS */ void sub_58260(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            Result++;
        }
    }
    return Result;
}

/* NIS_CREATE_STATIC_CAM */ void sub_58597(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_1433( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U649, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* NIS_PLAY_CAM */ void sub_58832(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    if (iParam0->_fU92 == 1)
    {
        SET_CAM_ACTIVE_WITH_INTERP( iParam0->_fU0, iParam0->_fU120, iParam0->_fU88, iParam0->_fU100, iParam0->_fU104 );
    }
    else
    {
        SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    }
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_1583( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* P_IMAGEFX_START_BULLETCAM */ void sub_59024(unknown uParam0, boolean bParam1)
{
    PRINTSTRING( "[CO] P_IMAGEFX_START_BULLETCAM: Starting BulletCam: " );
    PRINTSTRING( uParam0 );
    PRINTNL();
     /* CLEANCAMERA */ sub_3118( ref l_U273 );
    l_U273 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U273, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

/* F_CAM_SHAKE_WOBBLY */ string sub_59371()
{
    return "WOBBLY_SHAKE";
}

/* MAL_ESA_GETFIRSTLIVINGPED */ void sub_59671(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            return (uParam0^)[I]._fU0;
        }
    }
    return nil;
}

/* MAL_TELEPORTPED */ void sub_60178(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* MAL_ISACTINTCOMPLETED */ int sub_60294(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (( /* MAL_GETACTINTSTATUS */ sub_55968( (uParam0^), uParam1 )) == 1)
    {
        if (bParam2)
        {
             /* MAL_FINISHACTINT */ sub_56058( uParam0, uParam1 );
        }
        return 1;
    }
    return 0;
}

/* P_GBL_SAVE_RS3_DEAD_BODY */ void sub_60678(unknown uParam0)
{
    if (DOES_PED_EXIST( (uParam0^)[0]._fU0 ))
    {
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_39386( ref g_U3451[0], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[0]._fU0 ), (GET_PED_HEADING( (uParam0^)[0]._fU0 )) + 180.00000000, -1044326283, 7, 3, 2, 0, 0 );
    }
    g_U3450 = 1;
    return;
}

/* P_RELEASE_RS3_ASSETS */ void sub_60929()
{
     /* MAL_WRITESCRIPTLOG */ sub_225( "P_RELEASE_RS3_ASSETS" );
     /* TERMINATEINTERACTIVESEQUENCE */ sub_3366( "S_CLUB_VIG_16_NC", 1 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_61024( 1037546172, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_61024( g_U2453, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_61024( 1049690760, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_61024( 2145666447, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_61024( 123419661, ref g_U1108 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_61024( 230799837, ref g_U1108 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_62233( 724901397, ref g_U1301 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_62584( "LEVEL_S_CLUB_CP_06", ref g_U1447 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_62584( "LEVEL_S_CLUB_CP_09", ref g_U1447 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_62960( -1313172978, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_62960( -931023773, ref g_U1350 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_62960( 1476011597, ref g_U1350 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_62233( -1787162676, ref g_U1301 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_62233( 1194438308, ref g_U1301 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_63404( 73, ref g_U1903 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_61024(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_61168( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_61168(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_62233(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_61168( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_62584(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_61168( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_62960(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_61168( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ void sub_63404(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_61168( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a VEHICLE_RECORDING asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U3 = 0;
    l_U4 = 0;
    l_U5 = 1500;
    l_U16 = 0;
    l_U18 = 0;
    l_U19 = 0;
    l_U20 = 0;
    l_U21 = 0;
    l_U22 = 0;
    l_U23 = 0;
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U789 = -1;
    l_U790 = {64536, 64536, 64536};
    l_U861 = 0;
    l_U863 = 0;
    l_U1083 = {-5.90200000, 67.95200000, -0.27900000};
    l_U1086 = {0.00000000, 0.00000000, 135.00000000};
    l_U1196 = 0;
     /* WRITESCRIPTLOG */ sub_225( "MF", "Script s_club_kitchen.sc is starting up...", 0 );
    l_U861 = 1;
    l_U16 = 0;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_366();
        if (l_U863 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_8682();
            if (NOT g_U1102)
            {
                 /* P_KIT_HANDLE_MISSION_FAIL */ sub_43114();
            }
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_KITCHEN */ sub_3060();
     /* P_RELEASE_KITCHEN_ASSETS */ sub_44351();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( ref g_U893[4]._fU0 );
     /* WRITESCRIPTLOG */ sub_225( "MF", "Script s_club_kitchen.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_225(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_HANDLE_FAILURE */ void sub_366()
{
    if (g_U892 == 4)
    {
        switch (l_U863)
        {
            case 0:
            if ((g_U3360 == 1) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )))
            {
                l_U863 = 1;
                 /* WRITESCRIPTLOG */ sub_225( "MF", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            if ( /* RESTARTING_CHECKPOINT */ sub_637())
            {
                l_U863 = 3;
            }
            break;
            case 1:
            if ((( /* F_CHECK_QUIT_RETRY */ sub_1148( 0 )) == 1) || ( /* IS_RESTART_ACTIVE */ sub_1104()))
            {
                if ( /* IS_RESTART_ACTIVE */ sub_1104())
                {
                    ;
                }
                l_U863 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )))
            {
                l_U863 = 3;
                 /* WRITESCRIPTLOG */ sub_225( "MF", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_225( "MF", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_505() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_505(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_467() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_467(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_2818( "CLUB_TIMEOUT_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
             /* P_CLEANUP_KITCHEN */ sub_3060();
            if (g_U893[5]._fU36 == 1)
            {
                SET_EXITFLAG_FOR_SCRIPT( g_U893[5]._fU32 );
                 /* P_RESET_CHECKPOINT_THREAD */ sub_3761( ref g_U893[5] );
                g_U2644 = 0;
            }
            l_U863 = 4;
             /* WRITESCRIPTLOG */ sub_225( "MF", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_225( "MF", "eFailState = FAIL_RESTORE_PLAYER", 0 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_3941( ref l_U793,  /* PLAYER_PED_ID */ sub_467() );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( ref g_U2496, 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( ref g_U2496, 0 ), GET_HASH_KEY( ref g_U2560 ) );
            l_U863 = 5;
             /* WRITESCRIPTLOG */ sub_225( "MF", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_225( "MF", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U861 = 1;
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_505(), 1, 0 );
            l_U863 = 0;
             /* WRITESCRIPTLOG */ sub_225( "MF", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_467()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_505() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_505()
{
    return GET_PLAYER_ID();
}

/* RESTARTING_CHECKPOINT */ int sub_637()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_467(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_505(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_505(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_467() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_467(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_1104()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_1148(int iParam0)
{
    iParam0 = 1;
    switch (l_U4)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1226( ref l_U6 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )))
            {
                l_U5 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_1354( ref l_U6, l_U5, 1, 1 );
             /* STARTTIMER */ sub_1502( ref l_U6 );
        }
        if ( /* ISTIMERDONE */ sub_1633( ref l_U6 ))
        {
             /* WRITESCRIPTLOG */ sub_225( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_505() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_505(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U4 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U4 = 2;
            }
            else
            {
                l_U4 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_225( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_2128();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_225( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_2128();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_1226(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_1354(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_1502(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_1633(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_2128()
{
     /* WRITESCRIPTLOG */ sub_225( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_2201( ref l_U6 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_505() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_505(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U3 = 0;
    l_U3 = l_U3;
    l_U4 = 0;
    return;
}

/* RESETTIMER */ void sub_2201(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_IMAGEFX_STOP_BULLETCAM */ void sub_2818(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_225( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
     /* CLEANCAMERA */ sub_2926( ref l_U17 );
    l_U16 = 1;
    return;
}

/* CLEANCAMERA */ void sub_2926(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* P_CLEANUP_KITCHEN */ void sub_3060()
{
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_CLEANUP_KITCHEN", 0 );
    ISEQ_UNREGISTER_ENTITY( -1479910717, "player" );
    ISEQ_TERMINATE( -1479910717 );
    ISEQ_UNREGISTER_ENTITY( 1502821974, "player" );
    ISEQ_TERMINATE( 1502821974 );
     /* CLEANPEDARRAY */ sub_3191( ref l_U1063 );
     /* CLEANPEDARRAY */ sub_3191( ref l_U980 );
     /* CLEANPEDARRAY */ sub_3191( ref l_U1010 );
     /* CLEANPLACEMENTARRAY */ sub_3367( ref l_U1079 );
     /* CLEANOBJECT */ sub_3506( l_U788 );
     /* DISABLETIMER */ sub_3564( ref g_U3340 );
     /* DISABLETIMER */ sub_3564( ref g_U3350 );
    SET_PED_NUM_CHARGERS_OVERRIDE(  /* PLAYER_PED_ID */ sub_467(), 0 );
    ENABLE_WALLA_ZONE( "S_CLUB_WZ_RESTAURANT_CS", 0 );
    ENABLE_STATIC_EMITTER( "S_CLUB_SE_LOUNGE_MUSIC", 0 );
     /* CLEANOBJECT */ sub_3506( l_U1082 );
    return;
}

/* CLEANPEDARRAY */ void sub_3191(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_3241( (uParam0^)[I] );
    }
    return;
}

/* CLEANPED */ void sub_3241(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANPLACEMENTARRAY */ void sub_3367(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPLACEMENT */ sub_3422( (uParam0^)[I] );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_3422(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* CLEANOBJECT */ void sub_3506(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* DISABLETIMER */ void sub_3564(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_3761(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_3941(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_225( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_4160( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_5324( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5638( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6117( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5638( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6117( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5638( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6117( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_6433( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6117( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_6433( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6117( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_7005( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_7207( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_467(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_225( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_4160(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4222( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_4222(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_5324(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_5638(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_6042( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_6042(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_6117(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_6433(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_6042( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_7005(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_7207(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4222( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_7305( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_7305(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_8682()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;

    iVar2 = l_U861;
    if (NOT l_U1040)
    {
        if (( /* F_KIT_SHOULD_REINFORCEMNTS_ARRIVE */ sub_8728()) == 1)
        {
             /* P_KIT_REINFORCEMENTS_ATTACK */ sub_9263();
            FLUSH_DISCARDABLE_MEMORY( 12500 );
             /* P_OPENDOOR */ sub_10466( ref g_U3311, 1, 0, 0.08000000 );
             /* P_OPENDOOR */ sub_10466( ref g_U3318, 0, 0, -0.08000000 );
            l_U1040 = 1;
        }
    }
    switch (l_U861)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_225( "MF", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INIT_SCRIPT_VARIABLES */ sub_10948();
         /* P_INIT_GAMEPLAY_STRUCTS */ sub_11308();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U861 = 2;
         /* WRITESCRIPTLOG */ sub_225( "MF", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_225( "MF", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        FLUSH_DISCARDABLE_MEMORY( 12500 );
         /* P_REQUEST_PERSISTENT_ASSETS */ sub_16020();
         /* P_REQUEST_NON_PERSISTENT_ASSETS */ sub_16767();
        l_U861 = 3;
         /* WRITESCRIPTLOG */ sub_225( "MF", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((( /* F_HAVE_NON_PERSISTENT_ASSETS_LOADED */ sub_19297()) == 1) AND ((( /* F_HAVE_PERSISTENT_ASSETS_LOADED */ sub_19142()) == 1) AND ((( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_18730( ref g_U1350 )) == 1) AND ((( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_18337( ref g_U1447 )) == 1) AND ((( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_17933( ref g_U1301 )) == 1) AND (( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_17534( ref g_U1108 )) == 1))))))
        {
            l_U861 = 4;
             /* WRITESCRIPTLOG */ sub_225( "SP", "eCheckpointState = CP_SETUP_START_POINT", 0 );
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_225( "SP", "eCheckpointState = CP_SETUP_START_POINT", 0 );
        if ((NOT l_U793._fU0) AND (g_U891 == 4))
        {
            l_U861 = 5;
             /* WRITESCRIPTLOG */ sub_225( "MF", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        }
        else
        {
            l_U861 = 7;
             /* WRITESCRIPTLOG */ sub_225( "MF", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_225( "MF", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
         /* MAL_TELEPORTPLAYER */ sub_19796( g_U2216[g_U891], g_U2331[g_U891], g_U2370[g_U891], g_U2409[g_U891] );
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_19960( ref l_U793 )))
        {
             /* F_GIVEPEDWEAPON */ sub_6433(  /* PLAYER_PED_ID */ sub_467(), 1194438308, 200, 0, 0 );
            l_U861 = 6;
             /* WRITESCRIPTLOG */ sub_225( "MF", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U861 = 7;
             /* WRITESCRIPTLOG */ sub_225( "MF", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 6:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_467(), 0, 0 ) ))
            {
                l_U861 = 7;
                 /* WRITESCRIPTLOG */ sub_225( "MF", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 7:
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_20446( ref l_U882, 0 ))
        {
             /* P_CLOSEDOOR */ sub_20586( ref g_U3199, 1 );
             /* P_CLOSEDOOR */ sub_20586( ref g_U3206, 1 );
             /* P_CREATE_PICKUPS */ sub_20735();
            g_U892 = 4;
            if (NOT l_U793._fU0)
            {
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_21379( ref l_U793, g_U892,  /* PLAYER_PED_ID */ sub_467(), g_U2216[4], g_U2331[4], g_U2370[4], g_U2409[4], 1 );
            }
            if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_25977()))
            {
                DO_SCREEN_FADE_IN( 0 );
            }
            l_U861 = 8;
             /* P_START_CHECKPOINT_THREAD */ sub_26235( ref g_U893[5] );
        }
        break;
        case 8:
        if ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_26307( ref l_U980, ref l_U983, -1, 1, 1, 0, 1 ))
        {
             /* P_KIT_SETUP_CS_WAVE_1 */ sub_27918();
        }
        if ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_26307( ref l_U1063, ref l_U1065, -1, 1, 1, 0, 1 ))
        {
             /* P_CREATE_CHEF_CIVS */ sub_29720();
        }
        if (( /* F_HAS_PED_ARRAY_SPAWNED */ sub_8779( ref l_U1063, 1 )) AND ( /* F_HAS_PED_ARRAY_SPAWNED */ sub_8779( ref l_U980, 1 )))
        {
            l_U861 = 9;
        }
        break;
        case 9:
        if (l_U862 == 1)
        {
             /* STARTTIMER */ sub_1502( ref l_U864 );
             /* P_KIT_DIALOGUE_VIG_05A */ sub_30093();
             /* STARTTIMER */ sub_1502( ref l_U913 );
             /* STARTTIMER */ sub_1502( ref l_U873 );
        }
        if (TIME_SINCE_LAST_MONOLOGUE() > 500)
        {
            if ( /* ISTIMERDONE */ sub_1633( ref l_U873 ))
            {
                 /* WRITESCRIPTLOG */ sub_225( "MF", "Playing Speech: SCLB_MDKHW", 0 );
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_31675( "SCLB_MDKHW", ref l_U903 );
            }
        }
        if ( /* ISTIMERDONE */ sub_1633( ref l_U913 ))
        {
             /* WRITESCRIPTLOG */ sub_225( "MF", "Playing Speech: SCLB_MEKHA", 0 );
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_31675( "SCLB_MEKHA", ref l_U903 );
        }
        if ( /* F_HANDLE_PED_ARRAY_SPAWN */ sub_26307( ref l_U1010, ref l_U1013, -1, 1, 0, 1, 1 ))
        {
             /* P_KIT_REINFORCEMENTS_SETUP */ sub_31879();
        }
        if ( /* MAL_ISACTINTCOMPLETED */ sub_32496( ref l_U980[1], 58, 1 ))
        {
             /* KILL_SPEECH */ sub_32711( ref l_U851, 0 );
             /* P_SET_PED_ARRAY_REGISTERED_TARGET */ sub_9375( ref l_U980,  /* PLAYER_PED_ID */ sub_467(), 1 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_20446( ref l_U959, 0 ))
        {
             /* DISABLETIMER */ sub_3564( ref l_U864 );
             /* P_KIT_START_ISS */ sub_33013();
        }
        if (( /* F_KIT_HAVE_KITCHEN_CS_SPOTTED_PLAYER */ sub_33421()) == 1)
        {
             /* KILL_SPEECH */ sub_32711( ref l_U851, 0 );
             /* DISABLETIMER */ sub_3564( ref l_U864 );
            l_U861 = 10;
        }
        if ( /* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ sub_34129())
        {
            if (l_U913._fU16)
            {
                if (TIME_SINCE_LAST_MONOLOGUE() > 1500)
                {
                     /* WRITESCRIPTLOG */ sub_225( "MF", "Playing Speech: SSTD_MFSP", 0 );
                     /* P_SPEECH_PLAY_MONOLOGUE */ sub_31675( ref g_U3540, ref uVar3 );
                }
            }
        }
        break;
        case 10:
        if (l_U862 == 1)
        {
             /* P_SET_PED_ARRAY_REGISTERED_TARGET */ sub_9375( ref l_U980,  /* PLAYER_PED_ID */ sub_467(), 1 );
            FREEZE_PED_POSITION( l_U1063[0], 0 );
             /* P_KIT_WAVE_1_ENEMIES_START_COMBAT */ sub_34467();
             /* P_SETDOORAFFECTEDBYBULLETS */ sub_34748( ref g_U3311, 0 );
             /* P_SETDOORAFFECTEDBYBULLETS */ sub_34748( ref g_U3318, 0 );
            if (NOT l_U1040)
            {
                if (NOT (IS_PED_DEAD( l_U1010[0] )))
                {
                    SET_PED_VISIBLE( l_U1010[0], 0 );
                }
                if (NOT (IS_PED_DEAD( l_U1010[1] )))
                {
                    SET_PED_VISIBLE( l_U1010[1], 0 );
                }
            }
            ENABLE_STATIC_EMITTER( "S_CLUB_SE_LOUNGE_MUSIC", 0 );
            ENABLE_WALLA_ZONE( "S_CLUB_WZ_RESTAURANT_CS", 1 );
        }
        if (l_U1196 == 0)
        {
            if (( /* F_IS_PED_ARRAY_DEFEATED */ sub_35022( ref l_U1010, 1 )) AND ( /* F_IS_PED_ARRAY_DEFEATED */ sub_35022( ref l_U980, 1 )))
            {
                 /* WRITESCRIPTLOG */ sub_225( "MF", "Activating Newspaper POI...", 0 );
                 /* P_SET_POI_AVAILABLE */ sub_15410( ref l_U1089, 1 );
                l_U1196 = 1;
            }
        }
        if ( /* F_HANDLE_POI */ sub_35320( ref l_U1089 ))
        {
             /* P_GBL_EXP_ITEM_PRE_SETUP */ sub_37652( "sclb_NewsPoll", -5.69995400, 66.76065000, -1.21419800, 5.50000000, 84.00000000, 0.00000000, "EXPL_CAM_GND_25_F_CAM", -5.52000000, 67.22000000, 0.71000000, 27.44000000 );
            if (NOT l_U1185)
            {
                 /* KILL_SPEECH */ sub_32711( ref l_U1175, 0 );
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_30176( ref l_U1175 );
                 /* KILL_ANY_MISSION_SPEECH */ sub_38159( 0 );
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_31675( "SCLB_MNSVA", ref l_U1175 );
                l_U1185 = 1;
                 /* CREATETIMER */ sub_1354( ref l_U1187, 7000, 1, 0 );
            }
            else
            {
                 /* CREATETIMER */ sub_1354( ref l_U1187, 4000, 1, 0 );
            }
             /* STARTTIMER */ sub_1502( ref l_U1187 );
            l_U1186 = 1;
        }
        if ( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_38438( ref l_U1089 ))
        {
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_31675( "EXPLORE_ITEM", ref l_U922 );
        }
        if (l_U1196)
        {
            if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1226( ref g_U3529 )))
            {
                 /* P_CREATE_AND_START_TIMER */ sub_38766( ref g_U3529, g_U3538 );
            }
            if ( /* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ sub_34129())
            {
                if ((g_U3529._fU16) || ( /* ISTIMERDONE */ sub_1633( ref g_U3529 )))
                {
                    if (NOT (IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_467() )))
                    {
                         /* WRITESCRIPTLOG */ sub_225( "MF", "Playing Speech: SSTD_MFSP", 0 );
                         /* P_SPEECH_PLAY_MONOLOGUE */ sub_31675( ref g_U3540, ref uVar13 );
                         /* RESETTIMER */ sub_2201( ref g_U3529 );
                    }
                }
            }
        }
        if (l_U1186)
        {
            if ( /* ISTIMERDONE */ sub_1633( ref l_U1187 ))
            {
                CAMERA_ANIMATED_STOP( 0, 0 );
            }
            if (NOT IS_ANIMATED_CAMERA_PLAYING())
            {
                 /* P_GBL_EXP_ITEM_POST_SETUP */ sub_38996( 25000, 55000, ref l_U1089 );
                l_U1186 = 0;
            }
        }
        if (NOT g_U2644)
        {
            if (( /* F_IS_PED_ARRAY_DEFEATED */ sub_35022( ref l_U980, 0 )) || (l_U1040))
            {
                 /* WRITESCRIPTLOG */ sub_225( "MF", "Setting bGBL_Restaurant_Ready_To_Start to TRUE", 0 );
                g_U2644 = 1;
            }
        }
        if (g_U2644 == 1)
        {
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_20446( ref l_U829, 0 ))
            {
                l_U861 = 13;
                break;
            }
        }
        break;
        case 11:
        if (( /* F_HANDLE_MID_02_FAIL4 */ sub_39553()) == 1)
        {
            g_U3360 = 1;
        }
        break;
        case 12:
        if (( /* F_HANDLE_MID_02_FAIL5 */ sub_41742()) == 1)
        {
            g_U3360 = 1;
        }
        break;
        case 13:
         /* WRITESCRIPTLOG */ sub_225( "MF", "eCheckpointState = CP_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U861 = 0;
         /* WRITESCRIPTLOG */ sub_225( "MF", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    if (l_U861 != iVar2)
    {
        l_U862 = 1;
    }
    else
    {
        l_U862 = 0;
    }
    return;
}

/* F_KIT_SHOULD_REINFORCEMNTS_ARRIVE */ int sub_8728()
{
    if (( /* F_HAS_PED_ARRAY_SPAWNED */ sub_8779( ref l_U1010, 1 )) AND ( /* F_HAS_PED_ARRAY_SPAWNED */ sub_8779( ref l_U980, 1 )))
    {
        if (( /* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ sub_8917( ref l_U980 )) > 0)
        {
            if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U1041 )))
            {
                 /* WRITESCRIPTLOG */ sub_225( "MF", "Kitchen CS Killed, sending in the troops!", 0 );
                return 1;
            }
        }
    }
    return 0;
}

/* F_HAS_PED_ARRAY_SPAWNED */ void sub_8779(unknown uParam0, boolean bParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) == 1)
        {
            Result = 1;
            if (NOT bParam1)
            {
                return 1;
            }
        }
        else
        {
            Result = 0;
        }
    }
    return Result;
}

/* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ void sub_8917(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_9059(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_9102(  /* PLAYER_PED_ID */ sub_467(), uParam0 );
}

/* F_ISPEDINTRIGGERBOX */ int sub_9102(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_KIT_REINFORCEMENTS_ATTACK */ void sub_9263()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_225( "[rw]", "P_ACTIVATE_KITCHEN_ENEMIES_REINFORCEMENTS", "###" );
     /* P_SET_PED_ARRAY_REGISTERED_TARGET */ sub_9375( ref l_U1010,  /* PLAYER_PED_ID */ sub_467(), 1 );
     /* P_ACTIVATEPEDARRAY */ sub_9544( ref l_U1010 );
     /* MAL_SETPEDARRAYVISIBLE */ sub_9733( ref l_U1010, 1 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -14.88000000, 62.52000000, -1.22000000,  /* PLAYER_PED_ID */ sub_467(), 1, 4.00000000, 1101004800, -1082130432, 3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "F05A4794_1D47FAFF_Corner2",  /* PLAYER_PED_ID */ sub_467() );
    TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_467() );
    CLOSE_SEQUENCE_TASK( uVar2 );
    if (NOT (IS_PED_DEAD( l_U1010[0] )))
    {
        SET_PED_VISIBLE( l_U1010[0], 1 );
        TASK_PERFORM_SEQUENCE( l_U1010[0], uVar2 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -18.19000000, 66.10000000, -1.22000000,  /* PLAYER_PED_ID */ sub_467(), 1, 4.00000000, 1101004800, -1082130432, 3 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "F05A4794_EA3B94CF_Corner2",  /* PLAYER_PED_ID */ sub_467() );
    TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_467() );
    CLOSE_SEQUENCE_TASK( uVar3 );
    if (NOT (IS_PED_DEAD( l_U1010[1] )))
    {
        SET_PED_VISIBLE( l_U1010[1], 1 );
        TASK_PERFORM_SEQUENCE( l_U1010[1], uVar3 );
    }
    CLEAR_SEQUENCE_TASK( uVar3 );
    return;
}

/* P_SET_PED_ARRAY_REGISTERED_TARGET */ void sub_9375(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^)[I] ))))
        {
            REGISTER_TARGET( (uParam0^)[I], uParam1 );
            if (iParam2 == 1)
            {
                CLEAR_LOCKED_TARGET( (uParam0^)[I] );
                SET_LOCKED_TARGET( (uParam0^)[I], uParam1 );
            }
        }
    }
    return;
}

/* P_ACTIVATEPEDARRAY */ void sub_9544(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_9596( (uParam0^)[I] );
    }
    return;
}

/* P_ACTIVATEPED */ void sub_9596(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* MAL_SETPEDARRAYVISIBLE */ void sub_9733(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* MAL_SETPEDVISIBLE */ sub_9793( (uParam0^)[I], uParam1 );
    }
    return;
}

/* MAL_SETPEDVISIBLE */ void sub_9793(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
         /* MAL_WRITESCRIPTLOG */ sub_9899( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_9899(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* P_OPENDOOR */ void sub_10466(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_10491( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10575( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_10491(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_10575(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_INIT_SCRIPT_VARIABLES */ void sub_10948()
{
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U862 = 1;
     /* SETUP_SCRIPTED_SPEECH */ sub_11037( "SCLBAUD" );
    l_U1040 = 0;
    l_U1196 = 0;
     /* CREATETIMER */ sub_1354( ref l_U913, 4500, 1, 0 );
     /* CREATETIMER */ sub_1354( ref l_U864, 28000, 1, 0 );
     /* CREATETIMER */ sub_1354( ref g_U3340, g_U3349, 1, 0 );
     /* CREATETIMER */ sub_1354( ref g_U3350, g_U3359, 1, 0 );
     /* CREATETIMER */ sub_1354( ref l_U873, 18000, 1, 0 );
    g_U3360 = 0;
    l_U21 = 0;
    l_U22 = 0;
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_11037(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_11081();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_11081()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_INIT_GAMEPLAY_STRUCTS */ void sub_11308()
{
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_INIT_GAMEPLAY_STRUCTS", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_11420( ref l_U983[0], -15.26300000, 62.68700000, -1.22000000, 45.00000000, 1146431415, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_11420( ref l_U983[1], -15.72300000, 63.71000000, -1.22000000, -110.00000000, -115345471, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_11420( ref l_U1013[0], -21.32000000, 71.88000000, -1.22000000, -173.62000000, 1223263295, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_11420( ref l_U1013[1], -19.50000000, 71.17000000, -1.22000000, -178.62000000, -1296754494, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_11420( ref l_U1065[0], -15.07000000, 66.99000000, -1.22000000, 180.00000000, -1510330378, 4, 1, 0, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U882, "TRIG_AQUA_REST_CHECKPOINT", -1.21000000, 54.78000000, -2.31000000, 10.00000000, 6.96000000, 6.00000000, 0.00000000, 0.00000000, 0.07000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U938, "KITCHEN_START_CS", -7.54000000, 63.31000000, -2.31000000, 3.68000000, 11.80000000, 6.00000000, 0.00000000, 0.00000000, 0.07000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U1041, "SUPRESS REINFORCEMENTS", -15.14000000, 63.90000000, -2.31000000, 14.67000000, 14.16000000, 6.00000000, 0.00000000, 0.00000000, 0.07000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U959, "START_VIG_05", -2.78000000, 61.24000000, -2.31000000, 4.45000000, 7.86000000, 3.60000000, 0.00000000, 0.00000000, 0.07000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U829, "KITCHEN_SCRIPT_SHUTDOWN", -20.12000000, 71.32000000, -2.30000000, 4.00000000, 4.00000000, 6.00000000, 0.00000000, 0.00000000, 0.54000000, 1 );
     /* P_SETUP_MID_02_FAIL_STRUCTS */ sub_12229();
     /* P_CREATETETHERBOX */ sub_14033( ref l_U1062, "KITCHEN_AREA", -10.19000000, 63.46000000, -1.24000000, 17.45000000, 7.78000000, 2.07000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEPOISTRUCTCOORD */ sub_14142( ref l_U1089, 2, l_U1083, l_U1083, l_U1083, 1.50000000, 3.00000000, 1, 0 );
     /* P_SET_POI_REUSABLE */ sub_15080( ref l_U1089, 1 );
     /* P_SET_INTERACTIVE_TEXT */ sub_15145( ref l_U1089, 30, "POI_PAPER" );
     /* P_SET_POI_FORCE_WALK */ sub_15355( ref l_U1089, 0 );
     /* P_SET_POI_AVAILABLE */ sub_15410( ref l_U1089, 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_11420(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_11814(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_SETUP_MID_02_FAIL_STRUCTS */ void sub_12229()
{
     /* WRITESCRIPTLOG */ sub_225( "SP", "P_SETUP_MID_02_FAIL_STRUCTS", 0 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U338, "TRIG_FAIL_DANCE_1", 26.97000000, -65.77000000, -5.32000000, 24.62000000, 21.82000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U359, "TRIG_FAIL_DANCE_1B", 26.26000000, -54.19000000, -5.07000000, 9.00000000, 6.00000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U380, "TRIG_FAIL_DANCE_1C", 27.15000000, -73.02000000, -5.07000000, 11.65000000, 6.81000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U401, "TRIG_FAIL_DANCE_1D", 37.51000000, -76.03000000, -3.59000000, 4.00000000, 4.00000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U422, "TRIG_FAIL_DANCE_2", 24.88000000, -47.96000000, -5.08000000, 20.38000000, 21.81000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U443, "TRIG_FAIL_DANCE_2A", 34.84000000, -52.84000000, -5.08000000, 4.00000000, 4.51000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U464, "TRIG_FAIL_LOUNGE", 40.67000000, -66.68000000, -2.22000000, 14.28000000, 21.46000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U485, "TRIG_FAIL_LOUNGE_A", 43.51000000, -52.82000000, -2.24000000, 10.00000000, 6.79000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U506, "TRIG_FAIL_PATIO", 43.08000000, -39.79000000, -0.44000000, 15.00000000, 19.30000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U527, "TRIG_FAIL_PATIO_A", 32.55000000, -33.47000000, -0.44000000, 6.56000000, 3.71000000, 4.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U548, "TRIG_FAIL_ORBITAS_1", 18.68000000, 5.70000000, -1.94000000, 35.81000000, 47.05000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U569, "TRIG_FAIL_ORBITAS_1A", 14.74000000, 28.10000000, -1.94000000, 29.29000000, 10.00000000, 10.00000000, 0.00000000, 0.00000000, -16.02000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U590, "TRIG_FAIL_ORBITAS_2", 22.34000000, 41.28000000, -1.94000000, 19.64000000, 20.00000000, 10.00000000, 0.00000000, 0.00000000, -16.09000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U611, "TRIG_FAIL_ORBITAS_2A", 12.80000000, 43.40000000, -1.94000000, 8.35000000, 16.52000000, 10.00000000, 0.00000000, 0.00000000, -44.41000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U632, "TRIG_FAIL_BATHROOM", 9.15000000, 52.69000000, -1.94000000, 6.52000000, 8.24000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U653, "TRIG_FAIL_BATHROOM_A", 12.49000000, 53.09000000, -1.94000000, 5.66000000, 5.97000000, 10.00000000, 0.00000000, 0.00000000, -44.57000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U674, "TRIG_FAIL_KITCHEN_LOCKER", -0.83000000, 53.97000000, -1.94000000, 13.61000000, 8.49000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U695, "TRIG_FAIL_KITCHEN", -9.52000000, 63.81000000, -1.94000000, 18.08000000, 11.18000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U716, "TRIG_FAIL_KITCHEN_A", -20.47000000, 65.70000000, -1.94000000, 4.00000000, 9.51000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U737, "TRIG_FAIL_RESTAURANT", -16.16000000, 90.72000000, -1.94000000, 42.04000000, 40.80000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11814( ref l_U758, "TRIG_FAIL_RESTAURANT_A", -14.35000000, 70.13000000, -1.94000000, 8.00000000, 1.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

/* P_CREATETETHERBOX */ void sub_14033(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEPOISTRUCTCOORD */ void sub_14142(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_14182( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_14575( iParam0 );
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_14182(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_14575(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_14673( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_14673(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_14749( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_14749( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_14749( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_14749( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_14749( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_14749( iParam0, 0 );
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_14749(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_SET_POI_REUSABLE */ void sub_15080(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_15145(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_15201( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_15201(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_SET_POI_FORCE_WALK */ void sub_15355(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

/* P_SET_POI_AVAILABLE */ void sub_15410(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
     /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_15474( iParam0 );
    return;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_15474(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_15570( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_15570( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_15570(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_505() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_467() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_467() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_467() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_467() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_467() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_467() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* P_REQUEST_PERSISTENT_ASSETS */ void sub_16020()
{
     /* WRITESCRIPTLOG */ sub_225( "SP", "P_REQUEST_PERSISTENT_ASSETS", 0 );
     /* LOADMODEL */ sub_16107( g_U2463, 0 );
     /* LOADMODEL */ sub_16107( g_U2452, 0 );
     /* LOADMODEL */ sub_16107( g_U2462, 0 );
     /* LOADMODEL */ sub_16107( g_U2467, 0 );
     /* LOADMODEL */ sub_16107( g_U2479, 0 );
     /* LOADWEAPON */ sub_16402( 406496141, 0 );
     /* LOADWEAPON */ sub_16402( 1194438308, 0 );
     /* LOADMODEL */ sub_16107( -1409914275, 0 );
     /* LOADMODEL */ sub_16107( 1566293888, 0 );
     /* LOADANIMDICT */ sub_16593( "EXPL_CAM", 0, 1 );
    return;
}

/* LOADMODEL */ void sub_16107(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_6042( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADWEAPON */ void sub_16402(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load weapon: {!f1} : {1} ###", 2, 1, 199730165, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADANIMDICT */ void sub_16593(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_REQUEST_NON_PERSISTENT_ASSETS */ void sub_16767()
{
     /* WRITESCRIPTLOG */ sub_225( "SP", "P_REQUEST_NON_PERSISTENT_ASSETS", 0 );
     /* LOADISEQ */ sub_16862( -1479910717, 0 );
     /* LOADISEQ */ sub_16862( 1502821974, 0 );
     /* SETUPINTERACTIVESEQUENCE */ sub_17261( ref g_U2600, "level_s_club_ktchn", "/LEVEL/S_CLUB/S_CLUB_20_KITCHEN.act", "/Global/S_CLUB_20_KITCHEN_SEQ", 0 );
    return;
}

/* LOADISEQ */ void sub_16862(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* SETUPINTERACTIVESEQUENCE */ void sub_17261(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    if ((I_SEQUENCE_IS_LOADED( uParam0 )) == 0)
    {
        I_SEQUENCE_SETUP( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            while ((I_SEQUENCE_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_17534(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_17933(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_18337(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_18730(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* F_HAVE_PERSISTENT_ASSETS_LOADED */ int sub_19142()
{
    if ((HAS_WEAPON_LOADED( 1194438308 )) AND ((HAS_WEAPON_LOADED( 406496141 )) AND ((HAS_MODEL_LOADED( -1409914275 )) AND ((HAS_MODEL_LOADED( 1566293888 )) AND ((HAS_MODEL_LOADED( g_U2479 )) AND ((HAS_MODEL_LOADED( g_U2467 )) AND (HAS_MODEL_LOADED( g_U2462 ))))))))
    {
        return 1;
    }
    return 0;
}

/* F_HAVE_NON_PERSISTENT_ASSETS_LOADED */ int sub_19297()
{
    if (((I_SEQUENCE_IS_LOADED( ref g_U2600 )) == 1) AND (((ISEQ_IS_LOADED( 1502821974 )) == 1) AND ((ISEQ_IS_LOADED( -1479910717 )) == 1)))
    {
        return 1;
    }
    return 0;
}

/* MAL_TELEPORTPLAYER */ void sub_19796(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 =  /* PLAYER_PED_ID */ sub_467();
     /* MAL_TELEPORTPED */ sub_19843( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

/* MAL_TELEPORTPED */ void sub_19843(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_19960(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_225( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_3941( uParam0,  /* PLAYER_PED_ID */ sub_467() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_20446(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_9102(  /* PLAYER_PED_ID */ sub_467(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* P_CLOSEDOOR */ void sub_20586(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_10491( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10575( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* P_CREATE_PICKUPS */ void sub_20735()
{
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_CREATE_PICKUPS start", 0 );
     /* CLEANPLACEMENT */ sub_3422( l_U1079[0] );
    l_U1079[0] =  /* CREATEPLACEMENT */ sub_20856( -4072149, 0.48000000, 53.70000000, 0.17800000, 0.00000000, 0.00000000, 0.00000000, 1, 1, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U1079[0] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1079[0], ref g_U2560 );
    }
     /* CLEANPLACEMENT */ sub_3422( l_U1079[1] );
    l_U1079[1] =  /* CREATEPLACEMENT */ sub_20856( -4072149, 0.38000000, 53.73000000, 0.17800000, 0.00000000, 0.00000000, 1.10000000, 1, 1, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U1079[1] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1079[1], ref g_U2560 );
    }
    l_U1082 = CREATE_OBJECT( 1566293888, l_U1083, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1082 ))
    {
        FREEZE_OBJECT_POSITION( l_U1082, 1 );
        SET_OBJECT_ROTATION( l_U1082, l_U1086 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1082, ref g_U2560 );
    }
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_CREATE_PICKUPS end", 0 );
    return;
}

/* CREATEPLACEMENT */ void sub_20856(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_21379(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_225( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_225( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_7207( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_21670( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_22147( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_22147( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_22407( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_22147( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_22407( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_22407( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_22147( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_22407( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_22407( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_22407( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_22147( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_22407( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_22407( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_22407( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_22407( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_23987( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_225( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_21670(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4222( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_225( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_225( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_22147(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_22407(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_23987(int iParam0)
{
     /* WRITE_STRING */ sub_6042( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_24075( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_24152( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_24152( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_24152( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_24152( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_24152( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_25022( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU52 );
     /* WRITE_STRING */ sub_6042( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU96 );
     /* WRITE_STRING */ sub_6042( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU100 );
     /* WRITE_STRING */ sub_6042( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU104 );
     /* WRITE_STRING */ sub_6042( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU108 );
     /* WRITE_STRING */ sub_6042( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU112 );
     /* WRITE_STRING */ sub_6042( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU116 );
     /* WRITE_STRING */ sub_6042( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU120 );
     /* WRITE_STRING */ sub_6042( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU124 );
     /* WRITE_STRING */ sub_6042( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU128 );
     /* WRITE_STRING */ sub_6042( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_24321( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_24321( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_24321( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_24075(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_24152(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_24321(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_25022(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* F_IMAGEFX_FADE_IN */ int sub_25977()
{
    if (l_U16)
    {
         /* WRITESCRIPTLOG */ sub_225( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U16 = 0;
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_225( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

/* P_START_CHECKPOINT_THREAD */ void sub_26235(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* F_HANDLE_PED_ARRAY_SPAWN */ int sub_26307(unknown uParam0, unknown uParam1, int iParam2, boolean bParam3, boolean bParam4, int iParam5, unknown uParam6)
{
    int iVar9;
    int iVar10;
    int Result;

    iVar9 =  /* F_GET_NUM_SPAWNED_PED_IN_ARRAY */ sub_26348( uParam0, uParam1 );
    if (iParam2 == -1)
    {
        iVar10 = (uParam0^);
    }
    else
    {
        iVar10 = iParam2;
    }
    if (iVar9 < iVar10)
    {
        if ((uParam1^)[iVar9]._fU16 == 0)
        {
            SCRIPT_ASSERT( "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
             /* WRITESCRIPTLOG */ sub_225( "MF", "Invalid Ped Struct!  No Model Defined! Aborting Ped Spawn", 0 );
            PRINTSTRING( "INVALID SPAWN INDEX: " );
             /* WRITE_INT */ sub_24321( iVar9 );
            return 0;
        }
        if (NOT (DOES_PED_EXIST( (uParam0^)[iVar9] )))
        {
             /* LOADMODEL */ sub_16107( (uParam1^)[iVar9]._fU16, uParam6 );
            (uParam0^)[iVar9] =  /* CREATEPED */ sub_26765( ref (uParam1^)[iVar9] );
            if (NOT bParam4)
            {
                SET_PED_VISIBLE( (uParam0^)[iVar9], bParam4 );
                 /* WRITE_STRING */ sub_6042( "SPAWNING INVISIBLE PED!!!" );
            }
            if (iParam5 == 1)
            {
                 /* P_DEACTIVATEPED */ sub_27556( (uParam0^)[iVar9] );
                 /* WRITE_STRING */ sub_6042( "Deactivating Ped..." );
            }
        }
    }
    if (bParam3)
    {
        if (iVar9 == (iVar10 - 1))
        {
             /* WRITESCRIPTLOG */ sub_225( "MF", "F_HANDLE_PED_ARRAY_SPAWN: Returning true Once.  If you see this looping, you likely have unitialized ped model data in your pedstruct array.", 0 );
            Result = 1;
        }
        return Result;
    }
    else if (iVar9 >= iVar10)
    {
        return 1;
    }
    return 0;
}

/* F_GET_NUM_SPAWNED_PED_IN_ARRAY */ void sub_26348(unknown uParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = (uParam1^);
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (DOES_PED_EXIST( (uParam0^)[I] )))
        {
            if ((uParam1^)[I]._fU16 != 0)
            {
                if (I < Result)
                {
                    Result = I;
                }
            }
        }
    }
    return Result;
}

/* CREATEPED */ void sub_26765(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_16107( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_27256( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_27357( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_27256(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_27357(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_27556(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* P_KIT_SETUP_CS_WAVE_1 */ void sub_27918()
{
    int I;

     /* WRITESCRIPTLOG */ sub_225( "MF", "P_KIT_SETUP_CS_WAVE_1 - START", 0 );
     /* P_ADD_TETHER_TO_PED_ARRAY */ sub_28005( ref l_U980, l_U1062, 1 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_28194( ref l_U980, "piKIT_CS_KITCHEN" );
     /* P_PED_ARRAY_SET_VAULTING */ sub_28330( ref l_U980, 0, 0 );
     /* MAL_BLOCKPEDARRAY */ sub_28457( ref l_U980, 1 );
    for ( I = 0; I < 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U980[I] )))
        {
             /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_28614( ref l_U980[I], ref g_U3099, 4.00000000, 17.00000000 );
            SET_ROOM_FOR_PED_BY_NAME( l_U980[I], ref g_U2560 );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_28769( l_U980[I], ref l_U932 );
             /* F_GIVEPEDWEAPON */ sub_6433( l_U980[I], 406496141, 25000, 0, 0 );
            SET_PED_CAN_PLAY_LOCO_FLAVOR_STARTS( l_U980[I], 0 );
            SET_PED_OBLIVIOUS_TO_DANGER( l_U980[I], 1 );
            SET_PED_PATH_CAN_AVOID_LINE_OF_FIRE( l_U980[I], 0 );
            SET_PED_COMBAT_ATTRIBUTES( l_U980[I], 1, 0 );
        }
    }
    SET_PED_NUM_CHARGERS_OVERRIDE(  /* PLAYER_PED_ID */ sub_467(), 1 );
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_KIT_SETUP_CS_WAVE_1 - END", 0 );
    return;
}

/* P_ADD_TETHER_TO_PED_ARRAY */ void sub_28005(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_TETHERPED */ sub_28067( ref uParam1, (uParam0^)[I], uParam2 );
    }
    return;
}

/* P_TETHERPED */ void sub_28067(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_28194(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_PED_ARRAY_SET_VAULTING */ void sub_28330(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^)[I], uParam1 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^)[I], uParam2 );
        }
    }
    return;
}

/* MAL_BLOCKPEDARRAY */ void sub_28457(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^)[I], uParam1 );
        }
    }
    return;
}

/* P_SET_PED_TEMPLATE_AND_RANGES */ void sub_28614(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_28769(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_6042( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_28939( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_28939( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* P_SETUP_AI_GROUP */ void sub_28939(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_CREATE_CHEF_CIVS */ void sub_29720()
{
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_CREATE_CHEF_CIVS - START", 0 );
    if (NOT (IS_PED_DEAD( l_U1063[0] )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U1063[0], ref g_U2560 );
        FREEZE_PED_POSITION( l_U1063[0], 1 );
        SET_PED_CORPSE_FROM_ANIM( l_U1063[0], "level_s_club_ktchn", "L_CLUB_20_KITCHEN_GMED2", 1.00000000, 1 );
        if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
        {
            SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U1063[0], 0, 0 );
            SET_PED_GORE_FROM_PLAYER( l_U1063[0], 0 );
        }
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_28194( ref l_U1063, "Chef_" );
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_CREATE_CHEF_CIVS - END", 0 );
    return;
}

/* P_KIT_DIALOGUE_VIG_05A */ void sub_30093()
{
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_KIT_DIALOGUE_VIG_05A - START", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_30176( ref l_U851 );
    if (NOT (IS_PED_DEAD( l_U980[0] )))
    {
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_30320( 1, l_U980[0], "M2_CS_27_AVG", ref l_U851, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U980[1] )))
    {
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_30320( 2, l_U980[1], "M2_CS_28_MUS", ref l_U851, 2, 0 );
    }
     /* PLAY_SINGLE_SPEECH */ sub_30622( "SCLB_VIG05A", ref l_U851, 8, 1 );
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_KIT_DIALOGUE_VIG_05A - END", 0 );
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_30176(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_30320(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_30622(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_30667( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_30667(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_30754( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_30754(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_30806( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_31324( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_30806(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_31324(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_SPEECH_PLAY_MONOLOGUE */ void sub_31675(unknown uParam0, unknown uParam1)
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_30176( uParam1 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_30320( 0,  /* PLAYER_PED_ID */ sub_467(), "MAX", uParam1, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_30320( 1,  /* PLAYER_PED_ID */ sub_467(), "MAX", uParam1, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_30622( uParam0, uParam1, 8, 1 );
    return;
}

/* P_KIT_REINFORCEMENTS_SETUP */ void sub_31879()
{
    int I;

     /* WRITESCRIPTLOG */ sub_225( "MF", "P_KIT_REINFORCEMENTS_SETUP - START", 0 );
     /* P_ADD_TETHER_TO_PED_ARRAY */ sub_28005( ref l_U1010, l_U1062, 1 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_28194( ref l_U1010, "piKIT_REINFORCEMENTS" );
     /* P_PED_ARRAY_SET_VAULTING */ sub_28330( ref l_U1010, 0, 0 );
    for ( I = 0; I < l_U1010; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1010[I] )))
        {
            SET_PED_ALERTNESS( l_U1010[I], 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1010[I], 1 );
            SET_ROOM_FOR_PED_BY_NAME( l_U1010[I], ref g_U2576 );
            SET_PED_OBLIVIOUS_TO_DANGER( l_U1010[I], 1 );
             /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_28614( ref l_U1010[I], ref g_U3099, 8.00000000, 22.00000000 );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_28769( l_U1010[I], ref l_U932 );
             /* F_GIVEPEDWEAPON */ sub_6433( l_U1010[I], 406496141, 25000, 0, 0 );
            SET_PED_PATH_CAN_AVOID_LINE_OF_FIRE( l_U1010[I], 0 );
            CLEAR_PED_TASKS( l_U1010[I] );
            SET_PED_CAN_MELEE( l_U1010[I], 0 );
            SET_PED_VISIBLE( l_U1010[I], 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1010[0] )))
    {
        SET_PED_SUGGESTED_COVER_POINT( l_U1010[0], "GenCover", "F05A4794_1D47FAFF_Corner2" );
    }
    if (NOT (IS_PED_DEAD( l_U1010[1] )))
    {
        SET_PED_SUGGESTED_COVER_POINT( l_U1010[1], "GenCover", "F05A4794_EA3B94CF_Corner2" );
    }
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_KIT_REINFORCEMENTS_SETUP - END", 0 );
    return;
}

/* MAL_ISACTINTCOMPLETED */ int sub_32496(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (( /* MAL_GETACTINTSTATUS */ sub_32535( (uParam0^), uParam1 )) == 1)
    {
        if (bParam2)
        {
             /* MAL_FINISHACTINT */ sub_32623( uParam0, uParam1 );
        }
        return 1;
    }
    return 0;
}

/* MAL_GETACTINTSTATUS */ int sub_32535(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* MAL_FINISHACTINT */ void sub_32623(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

/* KILL_SPEECH */ void sub_32711(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_32739( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_32739(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_KIT_START_ISS */ void sub_33013()
{
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_KIT_START_ISS - START", 0 );
     /* SETUPINTERACTIVESEQUENCE */ sub_17261( ref g_U2600, "level_s_club_ktchn", "/LEVEL/S_CLUB/S_CLUB_20_KITCHEN.act", "/Global/S_CLUB_20_KITCHEN_SEQ", 1 );
     /* MAL_TELEPORTPEDARRAYTOSPAWN */ sub_33187( ref l_U980, ref l_U983 );
    I_SEQUENCE_REGISTER_ENTITY( ref g_U2600, "kitchen_male1", l_U980[0], 0 );
    I_SEQUENCE_REGISTER_ENTITY( ref g_U2600, "kitchen_male2", l_U980[1], 0 );
    I_SEQUENCE_START( ref g_U2600 );
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_KIT_START_ISS - END", 0 );
    return;
}

/* MAL_TELEPORTPEDARRAYTOSPAWN */ void sub_33187(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* MAL_TELEPORTPED */ sub_19843( (uParam0^)[I], (uParam1^)[I]._fU0, (uParam1^)[I]._fU12 );
    }
    return;
}

/* F_KIT_HAVE_KITCHEN_CS_SPOTTED_PLAYER */ int sub_33421()
{
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_20446( ref l_U938, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_225( "MF", "CS have spotted player because he went too far INTO THE KITCHEN", 0 );
        return 1;
    }
    if ((HAS_SHOT_BEEN_FIRED_IN_AREA( -9.43105000, 63.24355000, 0.45648200, 15.00000000, 0, ref l_U850 )) == 1)
    {
        if (l_U850 == ( /* PLAYER_PED_ID */ sub_467()))
        {
             /* WRITESCRIPTLOG */ sub_225( "MF", "CS have spotted player because he FIRED HIS GUN", 0 );
            return 1;
        }
    }
    if (l_U959._fU64)
    {
        if (IS_PLAYER_SHOOTDODGING())
        {
             /* WRITESCRIPTLOG */ sub_225( "MF", "CS have spotted player because he Shoot dodged into kitchen", 0 );
            return 1;
        }
    }
    if (l_U959._fU64)
    {
        if ((I_SEQUENCE_QUERY_ENTITY_STATE( ref g_U2600, "kitchen_male1", 6 )) || (I_SEQUENCE_QUERY_ENTITY_STATE( ref g_U2600, "kitchen_male1", 5 )))
        {
             /* WRITESCRIPTLOG */ sub_225( "MF", "CS have spotted player because kitchen_male1 COMPLETED his ISS", 0 );
            return 1;
        }
        if ((I_SEQUENCE_QUERY_ENTITY_STATE( ref g_U2600, "kitchen_male2", 6 )) || (I_SEQUENCE_QUERY_ENTITY_STATE( ref g_U2600, "kitchen_male2", 5 )))
        {
             /* WRITESCRIPTLOG */ sub_225( "MF", "CS have spotted player because kitchen_male2 COMPLETED his ISS", 0 );
            return 1;
        }
    }
    return 0;
}

/* F_GBL_HAS_PLAYER_JUST_ACQUIRED_PAIN_KILLERS */ int sub_34129()
{
    if (GET_PAYNEKILLER_AMT() > g_U3539)
    {
         /* WRITESCRIPTLOG */ sub_225( "MF", "Player picked up Payne Killers!", 0 );
        PRINTSTRING( "HAD: " );
         /* WRITE_INT */ sub_24321( g_U3539 );
        PRINTSTRING( "NOW: " );
         /* WRITE_INT */ sub_24321( GET_PAYNEKILLER_AMT() );
        g_U3539 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U3539 = GET_PAYNEKILLER_AMT();
    return 0;
}

/* P_KIT_WAVE_1_ENEMIES_START_COMBAT */ void sub_34467()
{
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_KIT_WAVE_1_ENEMIES_START_COMBAT - START", 0 );
    if (NOT (IS_PED_DEAD( l_U980[0] )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U980[0], 0 );
        TASK_COMBAT_PED( l_U980[0],  /* PLAYER_PED_ID */ sub_467() );
    }
    if (NOT (IS_PED_DEAD( l_U980[1] )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U980[1], 0 );
        TASK_COMBAT_PED( l_U980[1],  /* PLAYER_PED_ID */ sub_467() );
    }
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_KIT_WAVE_1_ENEMIES_START_COMBAT - END", 0 );
    return;
}

/* P_SETDOORAFFECTEDBYBULLETS */ void sub_34748(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_10491( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10575( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

/* F_IS_PED_ARRAY_DEFEATED */ int sub_35022(unknown uParam0, boolean bParam1)
{
    if (( /* F_HAS_PED_ARRAY_SPAWNED */ sub_8779( uParam0, 0 )) == 1)
    {
        if (NOT bParam1)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_35083( uParam0 )) == 0)
            {
                return 1;
            }
        }
        if (bParam1)
        {
            if (( /* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ sub_8917( uParam0 )) == (uParam0^))
            {
                return 1;
            }
        }
    }
    return 0;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_35083(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* F_HANDLE_POI */ int sub_35320(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_467() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_9102(  /* PLAYER_PED_ID */ sub_467(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_9102(  /* PLAYER_PED_ID */ sub_467(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_15474( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_15570( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_36217()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_36319( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_14749( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_36405( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_14749( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_467(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_14749( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_36405( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_467(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_467(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_467(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_14749( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_36405( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_467() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_467(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_36405( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* F_HASACTIONBEENPRESSED */ int sub_36217()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* P_ENABLE_POI */ void sub_36319(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_14749( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_14749( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_36405( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_467() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_467(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_36405(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_15474( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* P_GBL_EXP_ITEM_PRE_SETUP */ void sub_37652(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    unknown uVar14;

     /* WRITESCRIPTLOG */ sub_225( "MF", "P_GBL_EXP_ITEM_PRE_SETUP - START", 0 );
    g_U1102 = 1;
     /* NIS_PRE_SETUP */ sub_37745( 1, 0, 0, 1 );
    FOUND_EXPLORATION_ITEM( uParam0 );
    CAMERA_PLAY_ANIMATED( "EXPL_CAM", uParam7, 1, uParam8, uParam11, 0, 0 );
    uVar14 =  /* PLAYER_PED_ID */ sub_467();
     /* TELEPORTPED */ sub_37975( uVar14, uParam1, uParam4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam5, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam6, 1065353216, 0 );
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_GBL_EXP_ITEM_PRE_SETUP - END", 0 );
    return;
}

/* NIS_PRE_SETUP */ void sub_37745(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_505(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_467(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_467() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_467(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* TELEPORTPED */ void sub_37975(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_38159(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ int sub_38438(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND (( /* F_IS_POI_AVAILABLE */ sub_38484( iParam0 )) == 0)))
    {
        if ((( /* F_HASACTIONBEENPRESSED */ sub_36217()) == 1) AND (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_467() )) == 0) AND (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_467() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_467() )) == 0) AND (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_467() )) == 0) AND (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_467() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

/* F_IS_POI_AVAILABLE */ void sub_38484(int iParam0)
{
    return iParam0->_fU56;
}

/* P_CREATE_AND_START_TIMER */ void sub_38766(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_1354( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_1502( uParam0 );
    return;
}

/* P_GBL_EXP_ITEM_POST_SETUP */ void sub_38996(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* CREATETIMER */ sub_1354( ref g_U3350, uParam1, 1, 0 );
     /* STARTTIMER */ sub_1502( ref g_U3350 );
     /* CREATETIMER */ sub_1354( ref g_U3340, uParam0, 1, 0 );
     /* STARTTIMER */ sub_1502( ref g_U3340 );
    g_U1102 = 0;
     /* P_ENABLE_POI */ sub_36319( uParam2, 1 );
     /* NIS_POST_SETUP */ sub_39094( 1, 1 );
    return;
}

/* NIS_POST_SETUP */ void sub_39094(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_505(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_467(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_39192();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_39192()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_467(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_467(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_467(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_467(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* F_HANDLE_MID_02_FAIL4 */ int sub_39553()
{
    vector vVar2;
    vector vVar5;
    vector vVar8;
    vector vVar11;
    vector vVar14;
    float fVar17;

    vVar2 = {-0.47300000, 55.73700000, -1.21169500};
    vVar5 = {0.00000000, 0.00000000, 0.00000000};
    vVar8 = {0.09100000, 0.03900000, -0.03400000};
    vVar11 = {1.60000000, -2.50000000, -3.10000000};
    vVar14 = {-0.47300000, 55.73700000, -1.21000000};
    fVar17 = -180.00000000;
    switch (l_U21)
    {
        case 0: break;
        case 2:
         /* WRITESCRIPTLOG */ sub_225( "SP", "eMid02Fail4State = MIDSCENE_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_37745( 1, 0, 0, 1 );
        DO_SCREEN_FADE_OUT( 500 );
        l_U21 = 1;
         /* WRITESCRIPTLOG */ sub_225( "SP", "eMid02Fail4State = MIDSCENE_START_FADE", 0 );
        break;
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
             /* TELEPORTPED */ sub_37975(  /* PLAYER_PED_ID */ sub_467(), vVar14, fVar17 );
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_467(), 1, 0 ) )) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() ))))
            {
                REMOVE_PED_WEAPON(  /* PLAYER_PED_ID */ sub_467(), GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_467(), 1, 0 ) );
            }
            ISEQ_REGISTER_ENTITY( -1479910717, "player",  /* PLAYER_PED_ID */ sub_467(), 0 );
            ISEQ_START( -1479910717 );
            l_U21 = 3;
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_225( "SP", "eMid02Fail4State = MIDSCENE_FIRST_FRAME", 0 );
         /* CLEANOBJECT */ sub_3506( l_U788 );
        l_U788 =  /* CREATEOBJECTNOOFFSET */ sub_40107( g_U2479, vVar2, vVar5, 0, 0, 0 );
        if ((DOES_OBJECT_EXIST( l_U788 )) == 1)
        {
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )) == 0)
            {
                ATTACH_OBJECT_TO_PED( l_U788,  /* PLAYER_PED_ID */ sub_467(), 25310, vVar8, vVar11, 0 );
            }
        }
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_KITCHEN_LOCKERS_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        DO_SCREEN_FADE_IN( 500 );
         /* P_FAIL_PLAY_PHONE_DIALOGUE_POST_MID_04 */ sub_40587();
        l_U21 = 4;
         /* WRITESCRIPTLOG */ sub_225( "SP", "eMid02Fail4State = MIDSCENE_PLAYING", 0 );
        break;
        case 4:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1226( ref l_U779 )))
        {
            if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_40939()))
            {
                 /* WRITESCRIPTLOG */ sub_225( "MF", "Max is finished talking, starting fade delay timer...", 0 );
                 /* CREATETIMER */ sub_1354( ref l_U779, 800, 1, 0 );
                 /* STARTTIMER */ sub_1502( ref l_U779 );
            }
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_KITCHEN_LOCKERS_CAM" )) - 100)) || ( /* ISTIMERDONE */ sub_1633( ref l_U779 )))
        {
             /* P_IMAGEFX_START_BULLETCAM */ sub_41248( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U21 = 5;
             /* WRITESCRIPTLOG */ sub_225( "SP", "eMid02Fail4State = MIDSCENE_END_FADE", 0 );
        }
        break;
        case 5:
        CAMERA_ANIMATED_STOP( 3000, 0 );
        ISEQ_UNREGISTER_ENTITY( -1479910717, "player" );
        ISEQ_TERMINATE( -1479910717 );
         /* CLEANOBJECT */ sub_3506( l_U788 );
        l_U21 = 0;
         /* WRITESCRIPTLOG */ sub_225( "SP", "eMid02Fail4State = MIDSCENE_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

/* CREATEOBJECTNOOFFSET */ void sub_40107(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_16107( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_FAIL_PLAY_PHONE_DIALOGUE_POST_MID_04 */ void sub_40587()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;
    string sVar13;

     /* WRITESCRIPTLOG */ sub_225( "MF", "P_FAIL_PLAY_PHONE_DIALOGUE_POST_MID_04 - START", 0 );
    iVar12 = GET_RANDOM_INT_IN_RANGE( 0, 3 );
    if (iVar12 == 0)
    {
        sVar13 = "SCLB_MID02C";
    }
    else if (iVar12 == 1)
    {
        sVar13 = "SCLB_MID02F";
    }
    else
    {
        sVar13 = "SCLB_MID02J";
    }
     /* P_SPEECH_PLAY_MONOLOGUE */ sub_31675( sVar13, ref uVar2 );
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_FAIL_PLAY_PHONE_DIALOGUE_POST_MID_04 - END", 0 );
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_40939()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* P_IMAGEFX_START_BULLETCAM */ void sub_41248(unknown uParam0, boolean bParam1)
{
    PRINTSTRING( "[CO] P_IMAGEFX_START_BULLETCAM: Starting BulletCam: " );
    PRINTSTRING( uParam0 );
    PRINTNL();
     /* CLEANCAMERA */ sub_2926( ref l_U17 );
    l_U17 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U17, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

/* F_HANDLE_MID_02_FAIL5 */ int sub_41742()
{
    vector vVar2;
    vector vVar5;
    vector vVar8;
    vector vVar11;
    vector vVar14;
    float fVar17;

    vVar2 = {-0.47300000, 55.73700000, -1.21169500};
    vVar5 = {0.00000000, 0.00000000, 0.00000000};
    vVar8 = {0.09100000, 0.03900000, -0.03400000};
    vVar11 = {1.60000000, -2.50000000, -3.10000000};
    vVar14 = {-7.85200000, 60.57100000, -1.21000000};
    fVar17 = -180.00000000;
    switch (l_U22)
    {
        case 0: break;
        case 2:
         /* WRITESCRIPTLOG */ sub_225( "SP", "eMid02Fail5State = MIDSCENE_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_37745( 1, 0, 0, 1 );
        DO_SCREEN_FADE_OUT( 500 );
        l_U22 = 1;
         /* WRITESCRIPTLOG */ sub_225( "SP", "eMid02Fail5State = MIDSCENE_START_FADE", 0 );
        break;
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
             /* TELEPORTPED */ sub_37975(  /* PLAYER_PED_ID */ sub_467(), vVar14, fVar17 );
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_467(), 1, 0 ) )) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() ))))
            {
                REMOVE_PED_WEAPON(  /* PLAYER_PED_ID */ sub_467(), GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_467(), 1, 0 ) );
            }
            ISEQ_REGISTER_ENTITY( 1502821974, "player",  /* PLAYER_PED_ID */ sub_467(), 0 );
            ISEQ_START( 1502821974 );
            l_U22 = 3;
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_225( "SP", "eMid02Fail5State = MIDSCENE_FIRST_FRAME", 0 );
         /* CLEANOBJECT */ sub_3506( l_U788 );
        l_U788 =  /* CREATEOBJECTNOOFFSET */ sub_40107( g_U2479, vVar2, vVar5, 0, 0, 0 );
        if ((DOES_OBJECT_EXIST( l_U788 )) == 1)
        {
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_467() )) == 0)
            {
                ATTACH_OBJECT_TO_PED( l_U788,  /* PLAYER_PED_ID */ sub_467(), 25310, vVar8, vVar11, 0 );
            }
        }
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_KITCHEN_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        DO_SCREEN_FADE_IN( 500 );
         /* P_FAIL_PLAY_PHONE_DIALOGUE_POST_MID_04 */ sub_40587();
        l_U22 = 4;
         /* WRITESCRIPTLOG */ sub_225( "SP", "eMid02Fail5State = MIDSCENE_PLAYING", 0 );
        break;
        case 4:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1226( ref l_U779 )))
        {
            if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_40939()))
            {
                 /* WRITESCRIPTLOG */ sub_225( "MF", "Max is finished talking, starting fade delay timer...", 0 );
                 /* CREATETIMER */ sub_1354( ref l_U779, 800, 1, 0 );
                 /* STARTTIMER */ sub_1502( ref l_U779 );
            }
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_CLUB_FAIL", "MID_02_NC_FAIL_KITCHEN_CAM" )) - 100)) || ( /* ISTIMERDONE */ sub_1633( ref l_U779 )))
        {
             /* P_IMAGEFX_START_BULLETCAM */ sub_41248( "MISS_DEATH_FAIL_FAST_01A", 0 );
            l_U22 = 5;
             /* WRITESCRIPTLOG */ sub_225( "SP", "eMid02Fail5State = MIDSCENE_END_FADE", 0 );
        }
        break;
        case 5:
        CAMERA_ANIMATED_STOP( 3000, 0 );
        ISEQ_UNREGISTER_ENTITY( 1502821974, "player" );
        ISEQ_TERMINATE( 1502821974 );
         /* CLEANOBJECT */ sub_3506( l_U788 );
        l_U22 = 0;
         /* WRITESCRIPTLOG */ sub_225( "SP", "eMid02Fail5State = MIDSCENE_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

/* P_KIT_HANDLE_MISSION_FAIL */ void sub_43114()
{
    if (TIME_SINCE_LAST_MONOLOGUE() > 1000)
    {
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1226( ref g_U3340 )))
        {
            if (( /* F_IS_PED_ARRAY_DEFEATED */ sub_35022( ref l_U1010, 1 )) AND ( /* F_IS_PED_ARRAY_DEFEATED */ sub_35022( ref l_U980, 1 )))
            {
                 /* WRITESCRIPTLOG */ sub_225( "MF", "Starting mission failed timer...", 0 );
                 /* STARTTIMER */ sub_1502( ref g_U3340 );
                 /* STARTTIMER */ sub_1502( ref g_U3350 );
            }
        }
        if (( /* ISTIMERDONE */ sub_1633( ref l_U864 )) == 1)
        {
             /* KILL_SPEECH */ sub_32711( ref l_U851, 0 );
            l_U21 = 2;
            l_U861 = 11;
             /* WRITESCRIPTLOG */ sub_225( "SP", "eCheckpointState = CP_HANDLE_MID_02_FAIL4", 0 );
        }
        if ( /* ISTIMERDONE */ sub_1633( ref g_U3350 ))
        {
             /* WRITESCRIPTLOG */ sub_225( "MF", "Playing warning monologue...", 0 );
            if (( /* F_WHERE_DID_MAX_FAIL */ sub_43420()) == 8)
            {
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_31675( "SCLB_MDKHW", ref g_U3361 );
            }
            else
            {
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_31675( "SCLB_MDDKA", ref g_U3361 );
            }
        }
        if (( /* ISTIMERDONE */ sub_1633( ref g_U3340 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_225( "MF", "Mission Failed...", 0 );
             /* KILL_SPEECH */ sub_32711( ref l_U851, 0 );
            if (( /* F_WHERE_DID_MAX_FAIL */ sub_43420()) == 8)
            {
                l_U21 = 2;
                l_U861 = 11;
                 /* WRITESCRIPTLOG */ sub_225( "SP", "eCheckpointState = CP_HANDLE_MID_02_FAIL4", 0 );
            }
            else if (( /* F_WHERE_DID_MAX_FAIL */ sub_43420()) == 9)
            {
                l_U22 = 2;
                l_U861 = 12;
                 /* WRITESCRIPTLOG */ sub_225( "SP", "eCheckpointState = CP_HANDLE_MID_02_FAIL5", 0 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_225( "SP", "Player is outside of any fail trigger... defaulting...", 0 );
                l_U21 = 2;
                l_U861 = 11;
                 /* WRITESCRIPTLOG */ sub_225( "SP", "eCheckpointState = CP_HANDLE_MID_02_FAIL4", 0 );
            }
        }
    }
    return;
}

/* F_WHERE_DID_MAX_FAIL */ int sub_43420()
{
     /* WRITESCRIPTLOG */ sub_225( "SP", "F_WHERE_DID_MAX_FAIL", 0 );
    if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U401 )) == 1) || ((( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U380 )) == 1) || ((( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U359 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U338 )) == 1))))
    {
        return 1;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U443 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U422 )) == 1))
    {
        return 2;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U485 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U464 )) == 1))
    {
        return 3;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U527 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U506 )) == 1))
    {
        return 4;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U569 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U548 )) == 1))
    {
        return 5;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U611 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U590 )) == 1))
    {
        return 6;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U653 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U632 )) == 1))
    {
        return 7;
    }
    else if (( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U674 )) == 1)
    {
        return 8;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U716 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U695 )) == 1))
    {
        return 9;
    }
    else if ((( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U758 )) == 1) || (( /* F_ISPLAYERINTRIGGERBOX */ sub_9059( l_U737 )) == 1))
    {
        return 10;
    };;;;;;;;;;
    return 0;
}

/* P_RELEASE_KITCHEN_ASSETS */ void sub_44351()
{
     /* WRITESCRIPTLOG */ sub_225( "MF", "P_RELEASE_KITCHEN_ASSETS", 0 );
     /* UNLOADMODEL */ sub_44431( g_U2462 );
     /* UNLOADMODEL */ sub_44431( g_U2467 );
     /* UNLOADMODEL */ sub_44431( g_U2479 );
     /* UNLOADWEAPON */ sub_44606( 406496141 );
     /* UNLOADWEAPON */ sub_44606( 1194438308 );
     /* UNLOADMODEL */ sub_44431( -1409914275 );
     /* UNLOADMODEL */ sub_44431( 1566293888 );
     /* UNLOADMODEL */ sub_44431( g_U2462 );
     /* UNLOADMODEL */ sub_44431( g_U2467 );
     /* UNLOADANIMDICT */ sub_44709( "EXPL_CAM" );
    return;
}

/* UNLOADMODEL */ void sub_44431(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_6042( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* UNLOADWEAPON */ void sub_44606(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}

/* UNLOADANIMDICT */ void sub_44709(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


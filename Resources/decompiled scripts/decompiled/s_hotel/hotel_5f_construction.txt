void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U85 = "PED_DEF";
    l_U127 = 1.00000000;
    l_U139 = 0;
    l_U180 = 0;
    l_U201 = 0;
    l_U203 = 1;
    l_U204 = 0;
    l_U205 = 1;
    l_U206 = 0;
    l_U217 = 1;
    l_U236 = "12_03_HOTEL_concat";
    l_U267 = 1;
    l_U286 = "MID_07_HOTEL_concat";
    l_U288 = 0;
    l_U289 = 0;
    l_U290 = 1500;
    l_U372 = 0;
    l_U374 = 0;
    l_U375 = 0;
    l_U376 = 0;
    l_U377 = 0;
    l_U554 = 0;
    l_U555 = 0;
    l_U827 = 0;
    l_U837 = 1;
    l_U857 = 0;
    l_U858 = "12_04_HOTEL_concat";
    l_U1013 = 5100;
    l_U1014 = 3000;
    l_U1015 = 1000;
    l_U1016 = l_U1013 - l_U1015;
    l_U1017 = l_U1015 + 1000;
     /* WRITESCRIPTLOG */ sub_563( "AT", "Script hotel_5f_construction.sc is starting up...", 0 );
     /* P_SETUP_ASSET_ARRAYS */ sub_681();
     /* P_LOAD_LEVEL_WEAPONS */ sub_906( 0 );
    if ((g_U854 <= 7) AND (g_U854 >= 6))
    {
        g_U997 = 1;
        g_U855 = g_U854;
         /* P_LOAD_ASSETS */ sub_1171();
        l_U372 = 1;
    }
    else
    {
         /* LOAD_APPROPRIATE_CUTSCENE_FOR_CHECKPOINT */ sub_1776();
        l_U372 = 3;
    }
    while (NOT IS_EXITFLAG_SET())
    {
        if ((g_U855 == 6) || (g_U855 == 7))
        {
             /* P_HANDLE_MUSIC */ sub_2866();
        }
         /* P_HANDLE_FAILURE */ sub_3604();
        if (l_U377 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_12796();
        }
         /* P_DEBUG_EXPLOSIVES_SETUP */ sub_48367();
        WAIT( 0 );
    }
     /* P_CLEANUP_ALL */ sub_6506();
     /* P_UNLOAD_ASSETS */ sub_49875();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "hotel_5f_construction" );
     /* WRITESCRIPTLOG */ sub_563( "AT", "Script hotel_5f_construction.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_563(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_SETUP_ASSET_ARRAYS */ void sub_681()
{
     /* WRITESCRIPTLOG */ sub_563( "AT", "P_SETUP_ASSET_ARRAYS start", 0 );
    l_U828[0] = g_U1452;
    l_U828[1] = -357942719;
    l_U828[2] = -1231373761;
    l_U828[3] = -835965385;
    l_U828[4] = -1538058993;
    l_U828[5] = 24025937;
    l_U828[6] = g_U852;
    l_U828[7] = -1991592028;
     /* WRITESCRIPTLOG */ sub_563( "bsw", "P_SETUP_ASSET_ARRAYS end", 0 );
    return;
}

/* P_LOAD_LEVEL_WEAPONS */ void sub_906(unknown uParam0)
{
     /* LOADWEAPON */ sub_946( -110877124, uParam0 );
     /* LOADWEAPON */ sub_946( -1013714740, uParam0 );
     /* LOADWEAPON */ sub_946( 514118749, uParam0 );
     /* LOADWEAPON */ sub_946( -612753081, uParam0 );
    return;
}

/* LOADWEAPON */ void sub_946(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load weapon: {!f1} : {1} ###", 2, 1, 199730165, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_LOAD_ASSETS */ void sub_1171()
{
     /* WRITESCRIPTLOG */ sub_563( "AT", "P_LOAD_ASSETS start", 0 );
     /* LOAD_MODEL_ASSETS */ sub_1231( 1 );
     /* LOAD_APPROPRIATE_CUTSCENE_FOR_CHECKPOINT */ sub_1776();
     /* P_LOAD_LEVEL_WEAPONS */ sub_906( 1 );
     /* SETUP_SCRIPTED_SPEECH */ sub_2609( "SHOTAUD" );
     /* WRITESCRIPTLOG */ sub_563( "AT", "P_LOAD_ASSETS end", 0 );
    return;
}

/* LOAD_MODEL_ASSETS */ void sub_1231(unknown uParam0)
{
    int I;

    for ( I = 0; I < l_U828; I++ )
    {
         /* LOADMODEL */ sub_1288( l_U828[I], uParam0 );
    }
     /* LOADANIMDICT */ sub_1602( "EXPL_CAM", 0, uParam0 );
    return;
}

/* LOADMODEL */ void sub_1288(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_1405( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* WRITE_STRING */ void sub_1405(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* LOADANIMDICT */ void sub_1602(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOAD_APPROPRIATE_CUTSCENE_FOR_CHECKPOINT */ void sub_1776()
{
    if (g_U855 <= 6)
    {
         /* LOADISEQ */ sub_1847( 1179793949, 1 );
        if (g_U855 == 6)
        {
             /* LOADSEAMLESSCUTSCENE */ sub_2157( l_U858, 1 );
        }
        else
        {
             /* LOADSEAMLESSCUTSCENE */ sub_2157( l_U236, 1 );
             /* LOADMODEL */ sub_1288( -643110723, 1 );
             /* LOADMODEL */ sub_1288( 75711909, 1 );
             /* LOADMODEL */ sub_1288( -1538058993, 1 );
        }
    }
    else if (g_U855 == 7)
    {
         /* LOADISEQ */ sub_1847( 951295712, 1 );
         /* LOADSEAMLESSCUTSCENE */ sub_2157( l_U286, 1 );
    }
    return;
}

/* LOADISEQ */ void sub_1847(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_2157(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_2609(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_2653();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_2653()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_HANDLE_MUSIC */ void sub_2866()
{
    if (l_U205 != l_U203)
    {
         /* WRITESCRIPTLOG */ sub_563( "TEH", "playing music:changed CUR FLAG", 0 );
         /* WRITE_INT */ sub_2959( l_U203 );
         /* WRITE_INT */ sub_2959( l_U204 );
        l_U205 = l_U203;
    }
    else if (l_U206 != l_U204)
    {
         /* WRITESCRIPTLOG */ sub_563( "TEH", "playing music:changed NEW FLAG", 0 );
         /* WRITE_INT */ sub_2959( l_U203 );
         /* WRITE_INT */ sub_2959( l_U204 );
        l_U206 = l_U204;
    }
    switch (l_U203)
    {
        case 1:
        AUDIO_MUSIC_SUSPEND( 5000 );
        l_U203 = 3;
        break;
        case 2:
        AUDIO_MUSIC_SUSPEND( 5000 );
        l_U203 = 3;
        break;
        case 3:
        if (l_U204 == 3)
        {
            l_U216 = 0;
             /* WRITESCRIPTLOG */ sub_563( "TEH", "playing music: MC_GAMEPLAY_STARTS", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_5", "", 0, 5000, 5000, -1082130432, 0 );
            l_U203 = 4;
        }
        break;
        case 4:
        if (l_U204 == 4)
        {
            l_U216 = 0;
             /* WRITESCRIPTLOG */ sub_563( "TEH", "playing music: MC_C4_USE_LINE", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_3_5", "", 0, 5000, 5000, -1082130432, 0 );
            l_U203 = 5;
        }
        break;
        case 5:
        if (l_U204 == 5)
        {
             /* WRITESCRIPTLOG */ sub_563( "TEH", "playing music: MC_C4_PLANTING", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_3", "", 0, 10000, 10000, -1082130432, 0 );
            l_U203 = 6;
            l_U204 = 6;
        }
        break;
    }
    return;
}

/* WRITE_INT */ void sub_2959(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* P_HANDLE_FAILURE */ void sub_3604()
{
    if ((g_U855 == 7) || (g_U855 == 6))
    {
        switch (l_U377)
        {
            case 0:
            if (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() ))
            {
                l_U377 = 1;
                 /* WRITESCRIPTLOG */ sub_563( "AT", "PLAYER DIED: eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            else if ( /* RESTARTING_CHECKPOINT */ sub_3893())
            {
                l_U377 = 1;
                 /* WRITESCRIPTLOG */ sub_563( "SBA", "RESTARTING CHECKPOINT: eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_4427())
            {
                if ((g_U856[8]._fU40 != 4) AND (g_U856[8]._fU40 != 0))
                {
                     /* WRITESCRIPTLOG */ sub_563( "GA", "Shutting down script for 5th Fight.", 0 );
                    g_U998 = 0;
                     /* P_RESET_CHECKPOINT_THREAD */ sub_4571( ref g_U856[8] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U856[8]._fU32 );
                }
                l_U377 = 2;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_4664( 0 )) == 1)
            {
                if ((g_U856[8]._fU40 != 4) AND (g_U856[8]._fU40 != 0))
                {
                     /* WRITESCRIPTLOG */ sub_563( "GA", "Shutting down script for 5th Fight.", 0 );
                    g_U998 = 0;
                     /* P_RESET_CHECKPOINT_THREAD */ sub_4571( ref g_U856[8] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U856[8]._fU32 );
                }
                l_U377 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )))
            {
                l_U377 = 3;
                 /* WRITESCRIPTLOG */ sub_563( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_563( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_3751() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_3751(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3713() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3713(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            if (IS_ANIMATED_CAMERA_PLAYING())
            {
                CAMERA_ANIMATED_STOP( 0, 0 );
            }
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            l_U203 = 2;
            g_U1007 = 0;
            g_U1005 = 0;
            g_U1006 = 0;
             /* P_CLEANUP_ALL */ sub_6506();
            l_U377 = 4;
             /* WRITESCRIPTLOG */ sub_563( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_563( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (g_U855 == 6)
            {
                 /* P_RESTORE_HOTEL_PLAYER_DATA_CHECKPOINT */ sub_7416( ref l_U300,  /* PLAYER_PED_ID */ sub_3713() );
                 /* WRITESCRIPTLOG */ sub_563( "BSW", "max spawns where there's no collision, so we need to freeze him", 0 );
                FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_3713(), 1 );
            }
            else
            {
                 /* P_RESTORE_HOTEL_PLAYER_DATA_CHECKPOINT */ sub_7416( ref l_U336,  /* PLAYER_PED_ID */ sub_3713() );
            }
            l_U377 = 5;
             /* WRITESCRIPTLOG */ sub_563( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_563( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U372 = 3;
            l_U377 = 0;
             /* WRITESCRIPTLOG */ sub_563( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_3713()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_3751() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_3751()
{
    return GET_PLAYER_ID();
}

/* RESTARTING_CHECKPOINT */ int sub_3893()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3713(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_3751(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_3751(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_3713() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_3713(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_4427()
{
    return g_U648;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_4571(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* F_CHECK_QUIT_RETRY */ int sub_4664(int iParam0)
{
    iParam0 = 1;
    switch (l_U289)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_4746( ref l_U291 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )))
            {
                l_U290 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_4880( ref l_U291, l_U290, 1, 1 );
             /* STARTTIMER */ sub_5030( ref l_U291 );
        }
        if ( /* ISTIMERDONE */ sub_5163( ref l_U291 ))
        {
             /* WRITESCRIPTLOG */ sub_563( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_3751() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_3751(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U289 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U289 = 2;
            }
            else
            {
                l_U289 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_563( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_5664();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_563( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_5664();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_4746(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_4880(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_5030(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_5163(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_5664()
{
     /* WRITESCRIPTLOG */ sub_563( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_5739( ref l_U291 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_3751() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_3751(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U288 = 0;
    l_U288 = l_U288;
    l_U289 = 0;
    return;
}

/* RESETTIMER */ void sub_5739(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_CLEANUP_ALL */ void sub_6506()
{
    int I;

     /* WRITESCRIPTLOG */ sub_563( "AT", "P_CLEANUP_ALL start", 0 );
    ISEQ_UNREGISTER_ENTITY( 1179793949, "max" );
    ISEQ_UNREGISTER_ENTITY( 1179793949, "fifth_door" );
     /* TERMINATEISEQ */ sub_6614( 1179793949, 0 );
     /* CLEANOBJECT */ sub_6920( g_U1729 );
    for ( I = 0; I <= 2; I++ )
    {
         /* CLEANOBJECT */ sub_6920( l_U784[I]._fU0 );
         /* CLEANOBJECT */ sub_6920( l_U784[I]._fU4 );
    }
     /* CLEAR_LOADED_CUTSCENE */ sub_7034( l_U236 );
     /* CLEAR_LOADED_CUTSCENE */ sub_7034( l_U858 );
     /* CLEAR_LOADED_CUTSCENE */ sub_7034( l_U286 );
     /* P_CLEAN_IMAGEFX */ sub_7173( ref l_U859 );
     /* WRITESCRIPTLOG */ sub_563( "AT", "P_CLEANUP_ALL end", 0 );
    return;
}

/* TERMINATEISEQ */ void sub_6614(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* CLEANOBJECT */ void sub_6920(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CLEAR_LOADED_CUTSCENE */ void sub_7034(unknown uParam0)
{
    if ((CUTSCENE_NAMED_IS_LOADING( uParam0 )) || (CUTSCENE_IS_LOADED( uParam0 )))
    {
         /* WRITESCRIPTLOG */ sub_563( "SBA", "Clearing cutscene:", 0 );
         /* WRITE_STRING */ sub_1405( uParam0 );
        CLEAR_NAMED_CUTSCENE( uParam0 );
    }
    return;
}

/* P_CLEAN_IMAGEFX */ void sub_7173(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        STOP_IMAGEFX( (uParam0^)[I]._fU0, 0 );
    }
    return;
}

/* P_RESTORE_HOTEL_PLAYER_DATA_CHECKPOINT */ void sub_7416(unknown uParam0, unknown uParam1)
{
     /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_7471( uParam0, uParam1 );
     /* RESTORE_WATERBOTTLE_STATE */ sub_11921( uParam0 );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_7471(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_563( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_7690( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_8854( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_9168( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_9603( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_9168( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_9603( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_9168( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_9603( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_9919( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_9603( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_9919( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_9603( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_10491( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_10693( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_3713(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_563( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_7690(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_7752( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_7752(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_8854(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_9168(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_1405( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_9603(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_9919(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_1405( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_10491(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_10693(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_7752( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_10791( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_10791(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* RESTORE_WATERBOTTLE_STATE */ void sub_11921(int iParam0)
{
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_563( "BSW", "RESTORE_WATERBOTTLE_STATE start", 0 );
    uVar3 =  /* GET_WATERBOTTLE_FROM_PLAYER */ sub_12005();
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        SET_SUPPRESSOR_DAMAGE_LEVEL( uVar3, iParam0->_fU48 );
        DISPLAYF( "RESTORE_WATERBOTTLE_STATE found water bottle suppressor - restoring the state: {}", 1, 513, iParam0->_fU48 );
    }
    return;
}

/* GET_WATERBOTTLE_FROM_PLAYER */ void sub_12005()
{
    boolean bVar2;
    unknown Result;

     /* WRITESCRIPTLOG */ sub_563( "BSW", "DOES_PLAYER_HAVE_WATERBOTTLE start", 0 );
    bVar2 = false;
    if ( /* IS_MAX_VALID */ sub_12097())
    {
        Result = GET_WEAPON_FROM_SLOT(  /* PLAYER_PED_ID */ sub_3713(), 0 );
        if (GET_DOES_WEAPON_EXIST( Result ))
        {
            if ((GET_WEAPON_TYPE( Result )) == 811797242)
            {
                bVar2 = true;
            }
        }
        if (NOT bVar2)
        {
            Result = GET_WEAPON_FROM_SLOT(  /* PLAYER_PED_ID */ sub_3713(), 1 );
            if (GET_DOES_WEAPON_EXIST( Result ))
            {
                if ((GET_WEAPON_TYPE( Result )) == 811797242)
                {
                    bVar2 = true;
                }
            }
        }
    }
    if (bVar2)
    {
        return Result;
        break;
    }
    return nil;
}

/* IS_MAX_VALID */ int sub_12097()
{
    if ( /* IS_PED_VALID */ sub_12127(  /* PLAYER_PED_ID */ sub_3713() ))
    {
        return 1;
    }
    return 0;
}

/* IS_PED_VALID */ int sub_12127(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

/* P_HANDLE_EVENTS */ void sub_12796()
{
    int iVar2;

    iVar2 = l_U372;
     /* P_HANDLE_BRANCO_RECEIPT_POI */ sub_12831();
    switch (l_U372)
    {
        case 0: break;
        case 1:
        if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
        {
             /* WRITESCRIPTLOG */ sub_563( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            if ((NOT ( /* HAS_SAVEFILE_LOADED */ sub_19387( ref l_U336 ))) AND (NOT ( /* HAS_SAVEFILE_LOADED */ sub_19387( ref l_U300 ))))
            {
                 /* F_GIVEPEDWEAPON */ sub_9919(  /* PLAYER_PED_ID */ sub_3713(), -612753081, 50, 0, 0 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_9168(  /* PLAYER_PED_ID */ sub_3713(), -1013714740, 2, 100, 0 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_9168(  /* PLAYER_PED_ID */ sub_3713(), -612753081, 1, 50, 0 );
                SET_PAYNEKILLER_AMT( 3 );
                l_U372 = 2;
                 /* WRITESCRIPTLOG */ sub_563( "AT", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
            }
            else
            {
                l_U372 = 3;
                 /* WRITESCRIPTLOG */ sub_563( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
            }
        }
        break;
        case 2:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3713(), 2 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3713(), 1 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 0, 0 ) ))))
            {
                l_U372 = 3;
                 /* WRITESCRIPTLOG */ sub_563( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
            }
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_563( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_20035();
         /* P_SET_STATIC_DATA */ sub_21918();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U372 = 4;
         /* WRITESCRIPTLOG */ sub_563( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_563( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        l_U372 = 5;
         /* WRITESCRIPTLOG */ sub_563( "AT", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 5:
        if (g_U997)
        {
             /* WRITESCRIPTLOG */ sub_563( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
            if (g_U855 < 6)
            {
                g_U855 = 6;
                 /* LOAD_MODEL_ASSETS */ sub_1231( 0 );
                 /* P_SETUP_GAMEPLAY */ sub_23968();
                l_U372 = 6;
            }
            else if (g_U855 == 6)
            {
                l_U372 = 7;
                 /* P_SETUP_GAMEPLAY */ sub_23968();
                if (NOT l_U300._fU0)
                {
                     /* P_SAVE_HOTEL_PLAYER_DATA_CHECKPOINT */ sub_25218( ref l_U300, g_U855,  /* PLAYER_PED_ID */ sub_3713(), g_U1020[6], g_U1123[6], g_U1158[6], g_U1193[6], 0 );
                }
            }
            else if (g_U855 == 7)
            {
                 /* P_CREATE_5TH_FLOOR_EXPLOSIVE */ sub_30095( ref l_U784[2] );
                 /* P_OPENDOOR */ sub_22483( ref g_U1652, 1, 1, 1065353216 );
                 /* P_SETDOORLATCH */ sub_30672( ref g_U1652, 1 );
                l_U372 = 10;
            };;;
             /* SET_HOTEL_WEATHER_AND_TOD */ sub_30759( g_U855 );
             /* P_CREATE_FIFTH_FLOOR_PLACEMENTS */ sub_31206();
             /* P_CREATE_BRANCO_RECEIPT_POI */ sub_32366();
        }
        break;
        case 6:
        if ( /* PLAY_HOTEL_CUT_12_03 */ sub_32722( 1, 0, 0 ))
        {
            if (NOT l_U300._fU0)
            {
                 /* P_SAVE_HOTEL_PLAYER_DATA_CHECKPOINT */ sub_25218( ref l_U300, g_U855,  /* PLAYER_PED_ID */ sub_3713(), g_U1020[6], g_U1123[6], g_U1158[6], g_U1193[6], 0 );
            }
             /* LOAD_MODEL_ASSETS */ sub_1231( 1 );
            l_U372 = 7;
        }
        break;
        case 7:
        if ( /* HANDLE_12_03_BLENDOUT */ sub_37855())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_2157( l_U858, 0 );
             /* LOADISEQ */ sub_1847( 951295712, 0 );
             /* TAKE_PAINKILLER_ARRAY_SNAPSHOT */ sub_38924( ref g_U1011, ref g_U1014 );
            l_U372 = 8;
             /* WRITESCRIPTLOG */ sub_563( "AT", "eCheckpointState = CP_FIFTH_FLOOR_GAMEPLAY", 0 );
        }
        break;
        case 8:
         /* P_HANDLE_PLAYER_FORCED_WALK */ sub_39207();
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_39561( ref l_U420, 0 ))
        {
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_38571( "SHOT_MXATPLR", ref l_U506 );
             /* CREATETIMER */ sub_4880( ref l_U535, 30000, 1, 0 );
             /* STARTTIMER */ sub_5030( ref l_U535 );
             /* P_CLOSEDOOR */ sub_23228( ref l_U469, 0 );
             /* P_CLOSEDOOR */ sub_23228( ref l_U462, 0 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_39561( ref l_U441, 0 ))
        {
             /* P_INITIALIZE_IMAGEFX_MID_CP_05 */ sub_39778();
        }
        if ((l_U420._fU64) AND (NOT l_U555))
        {
            if (NOT (IS_SPHERE_VISIBLE( 24.95912000, 42.39193000, 29.91838000, 1.00000000, 0 )))
            {
                l_U555 = 1;
                 /* P_CLOSEDOOR */ sub_23228( ref l_U469, 1 );
                 /* P_CLOSEDOOR */ sub_23228( ref l_U462, 1 );
                 /* P_SETDOORLOCKED */ sub_23382( ref l_U469, 1 );
                 /* P_SETDOORLOCKED */ sub_23382( ref l_U462, 1 );
            }
        }
        if ( /* ISTIMERDONE */ sub_5163( ref l_U535 ))
        {
            if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_40511()))
            {
                 /* P_SPEECH_PLAY_MAX_MONOLOGUE */ sub_16500( "SHOT_MXTLEXP", ref l_U486 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_563( "SBA", "VO playing: resetting tmrExplosivesRoomHint", 0 );
                 /* CREATETIMER */ sub_4880( ref l_U535, 5000, 1, 0 );
                 /* STARTTIMER */ sub_5030( ref l_U535 );
            }
        }
         /* P_HANDLE_GATE_VO */ sub_40721();
        if (NOT l_U554)
        {
            if ( /* UPDATE_PILL_VO */ sub_40880( "SHOT_MXFNDPLS", ref g_U1011, ref g_U1014 ))
            {
                 /* WRITESCRIPTLOG */ sub_563( "SBA", "Playing Pill monologue for puiKillHousePainkillers", "..." );
                l_U554 = 1;
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_39561( ref l_U399, 0 ))
        {
             /* WRITESCRIPTLOG */ sub_563( "SBA", "eCheckpointState going to CP_HANDLE_12_04", 0 );
             /* LOADMODEL */ sub_1288( 928600325, 0 );
             /* REGISTER_PEDS_HOTEL_CUT_12_04 */ sub_41232();
            l_U372 = 9;
            break;
        }
         /* P_HANDLE_IMAGEFX */ sub_41874( ref l_U859 );
        break;
        case 9:
        if ( /* PLAY_HOTEL_CUT_12_04 */ sub_42716( 1, 0, 0 ))
        {
             /* P_CREATE_5TH_FLOOR_EXPLOSIVE */ sub_30095( ref l_U784[2] );
             /* P_OPENDOOR */ sub_22483( ref g_U1652, 1, 1, 1065353216 );
             /* P_SETDOORLATCH */ sub_30672( ref g_U1652, 1 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3713(), 0 );
             /* LOADSEAMLESSCUTSCENE */ sub_2157( l_U286, 0 );
            if (IS_CUSTOM_PLAYER_VARIATION() == 0)
            {
                SET_PED_COMPONENT_VARIATION(  /* PLAYER_PED_ID */ sub_3713(), 5, 0, 2, 0 );
                SET_PED_COMPONENT_VARIATION(  /* PLAYER_PED_ID */ sub_3713(), 11, 3, 0, 0 );
            }
            l_U372 = 10;
        }
        break;
        case 10:
        if ( /* HANDLE_12_04_BLENDOUT */ sub_43701())
        {
             /* P_SET_POI_AVAILABLE */ sub_32629( ref g_U1791, 1 );
             /* WRITESCRIPTLOG */ sub_563( "SBA", "P_HANDLE_EVENTS: Advancing to CP_FIRST_PILLAR", "***" );
            l_U372 = 11;
             /* CREATETIMER */ sub_4880( ref l_U544, 30000, 1, 0 );
             /* STARTTIMER */ sub_5030( ref l_U544 );
        }
        break;
        case 11:
         /* HANDLE_PILLAR_HINT_DIALOGUE */ sub_44480();
         /* P_HANDLE_GATE_VO */ sub_40721();
        if (NOT l_U554)
        {
            if ( /* UPDATE_PILL_VO */ sub_40880( "SHOT_MXFNDPLS", ref g_U1011, ref g_U1014 ))
            {
                 /* WRITESCRIPTLOG */ sub_563( "SBA", "Playing Pill monologue for puiKillHousePainkillers", "..." );
                l_U554 = 1;
            }
        }
         /* F_HANDLE_POI */ sub_12875( ref l_U585[0] );
         /* F_HANDLE_POI */ sub_12875( ref l_U585[1] );
        if ((l_U585[1]._fU64) || (l_U585[0]._fU64))
        {
            g_U1018 =  /* GET_FIRST_USED_5TH_FLOOR_PILLAR */ sub_44896();
            if (g_U1018 == 0)
            {
                g_U1019 = 1;
            }
            else
            {
                g_U1019 = 0;
            }
            g_U1003 = 0;
            l_U372 = 12;
             /* WRITESCRIPTLOG */ sub_563( "SBA", "P_HANDLE_EVENTS: Advancing to CP_MID_07", "***" );
        }
        break;
        case 12:
        if ( /* PLAY_HOTEL_MID_07 */ sub_45243( 1, l_U758[g_U1018], l_U765[g_U1018], l_U768[g_U1018], l_U775[g_U1018], 0, 0 ))
        {
            g_U998 = 1;
            l_U372 = 13;
        }
        if ((NOT l_U827) AND (g_U1003))
        {
             /* P_CREATE_5TH_FLOOR_EXPLOSIVE */ sub_30095( ref l_U784[g_U1018] );
            l_U827 = 1;
        }
        break;
        case 13:
        if ( /* HANDLE_MID_07_BLENDOUT */ sub_47050( l_U768[g_U1018], l_U775[g_U1018], 0.00000000, 0.00000000 ))
        {
             /* NIS_POST_SETUP */ sub_18375( 1, 1 );
            if (NOT l_U553)
            {
                 /* CREATETIMER */ sub_4880( ref l_U544, 30000, 1, 0 );
                 /* STARTTIMER */ sub_5030( ref l_U544 );
            }
            l_U372 = 14;
        }
        break;
        case 14:
         /* F_HANDLE_POI */ sub_12875( ref l_U585[0] );
         /* F_HANDLE_POI */ sub_12875( ref l_U585[1] );
         /* HANDLE_PILLAR_HINT_DIALOGUE */ sub_44480();
        if (NOT l_U554)
        {
            if ( /* UPDATE_PILL_VO */ sub_40880( "SHOT_MXFNDPLS", ref g_U1011, ref g_U1014 ))
            {
                 /* WRITESCRIPTLOG */ sub_563( "SBA", "Playing Pill monologue for puiKillHousePainkillers", "..." );
                l_U554 = 1;
            }
        }
        if ((l_U585[1]._fU64) AND (l_U585[0]._fU64))
        {
             /* P_SET_POI_AVAILABLE */ sub_32629( ref g_U1791, 0 );
             /* P_CHECK_5TH_FLOOR_PLACEMENTS */ sub_47834();
            g_U999 = 1;
            l_U372 = 15;
             /* WRITESCRIPTLOG */ sub_563( "SBA", "P_HANDLE_EVENTS: Advancing to CP_FINISHED", "***" );
        }
        break;
        case 15:
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U372 = 0;
         /* WRITESCRIPTLOG */ sub_563( "AT", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    if (l_U372 != iVar2)
    {
        l_U373 = 1;
    }
    else
    {
        l_U373 = 0;
    }
    return;
}

/* P_HANDLE_BRANCO_RECEIPT_POI */ void sub_12831()
{
    if ( /* F_HANDLE_POI */ sub_12875( ref g_U1791 ))
    {
        g_U1790 = 0;
    }
    if ( /* HANDLE_BRANCO_RECEIPT_CAM */ sub_15758())
    {
         /* P_ENABLE_POI */ sub_14320( ref g_U1791, 1 );
         /* WRITESCRIPTLOG */ sub_563( "SBA", "P_HANDLE_BRANCO_RECEIPT_POI: POI has been used", 0 );
    }
    if ( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_18863( ref g_U1791 ))
    {
         /* P_SPEECH_PLAY_MAX_MONOLOGUE */ sub_16500( "EXPLORE_ITEM", ref g_U1890 );
    }
    return;
}

/* F_HANDLE_POI */ int sub_12875(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_3713() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_12976(  /* PLAYER_PED_ID */ sub_3713(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_12976(  /* PLAYER_PED_ID */ sub_3713(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_13787( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_13883( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_14218()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_14320( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_14379( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_14598( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_14379( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3713(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_14379( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_14598( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_3713(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_3713(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3713(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_14379( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_14598( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_3713() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3713(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_14598( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* F_ISPEDINTRIGGERBOX */ int sub_12976(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_13787(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_13883( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_13883( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_13883(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_3751() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_3713() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_3713() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_3713() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_3713() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_3713() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_3713() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* F_HASACTIONBEENPRESSED */ int sub_14218()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* P_ENABLE_POI */ void sub_14320(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_14379( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_14379( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_14598( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_3713() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3713(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_14379(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_14598(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_13787( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* HANDLE_BRANCO_RECEIPT_CAM */ void sub_15758()
{
    int Result;

    Result = 0;
    switch (g_U1790)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_563( "SBA", "HANDLE_BRANCO_RECEIPT_CAM: eBrancoReceipt = ASS_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_15915( 1, 0, 0, 1 );
         /* KILL_ANY_MISSION_SPEECH */ sub_16091( 0 );
        g_U1790 = 3;
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_563( "SBA", "HANDLE_BRANCO_RECEIPT_CAM: eBrancoReceipt = ASS_WAITING_TO_PLAY", 0 );
        CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_15_F_CAM", 1, -12.14000000, -1.36000000, 30.70000000, 163.45000000, 0, 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "shot_Receipt" )))
        {
             /* KILL_ANY_MISSION_SPEECH */ sub_16091( 0 );
             /* P_SPEECH_PLAY_MAX_MONOLOGUE */ sub_16500( "SHOT_MXSNPNVS", ref g_U1880 );
            FOUND_EXPLORATION_ITEM( "shot_Receipt" );
        }
        else
        {
             /* CREATETIMER */ sub_4880( ref g_U1901, 4000, 1, 0 );
             /* STARTTIMER */ sub_5030( ref g_U1901 );
        }
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )))
        {
            CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_3713() );
            RESET_PLAYER_INPUT_GAIT( 0 );
            SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_3713(), 0 );
        }
        g_U1790 = 4;
        break;
        case 4:
        if (((NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_18002( g_U1880 ))) AND (NOT g_U1901._fU20)) || ( /* ISTIMERDONE */ sub_5163( ref g_U1901 )))
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )))
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_3713(), 1 );
            }
             /* WRITESCRIPTLOG */ sub_563( "SBA", "HANDLE_BRANCO_RECEIPT_CAM: Cam cut done, going to eBrancoReceipt = ASS_FINISHED", 0 );
            g_U1790 = 5;
        }
        break;
        case 5:
         /* NIS_POST_SETUP */ sub_18375( 1, 1 );
        Result = 1;
         /* WRITESCRIPTLOG */ sub_563( "SBA", "HANDLE_BRANCO_RECEIPT_CAM: going to eBrancoReceipt = ASS_INACTIVE", 0 );
        g_U1790 = -1;
        break;
    }
    return Result;
}

/* NIS_PRE_SETUP */ void sub_15915(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_3751(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_3713(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_3713() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_3713(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_16091(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* P_SPEECH_PLAY_MAX_MONOLOGUE */ void sub_16500(unknown uParam0, unknown uParam1)
{
     /* WRITESCRIPTLOG */ sub_563( "SBA", "P_SPEECH_PLAY_MAX_MONOLOGUE", "***" );
    if ( /* IS_MAX_VALID */ sub_12097())
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_16599( uParam1 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_16708( 0,  /* PLAYER_PED_ID */ sub_3713(), "MAX", uParam1, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_16708( 1,  /* PLAYER_PED_ID */ sub_3713(), "MAX", uParam1, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_16961( uParam0, uParam1, 8, 1 );
    }
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_16599(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_16708(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_16961(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_17006( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_17006(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_17093( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_17093(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_17145( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_17663( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_17145(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_17663(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_18002(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_18045( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_18045(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* NIS_POST_SETUP */ void sub_18375(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_3751(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_3713(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_18473();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_18473()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_3713(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_3713(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ int sub_18863(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND (( /* F_IS_POI_AVAILABLE */ sub_18909( iParam0 )) == 0)))
    {
        if ((( /* F_HASACTIONBEENPRESSED */ sub_14218()) == 1) AND (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_3713() )) == 0) AND (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_3713() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_3713() )) == 0) AND (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_3713() )) == 0) AND (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_3713() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

/* F_IS_POI_AVAILABLE */ void sub_18909(int iParam0)
{
    return iParam0->_fU56;
}

/* HAS_SAVEFILE_LOADED */ int sub_19387(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_563( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_7471( uParam0,  /* PLAYER_PED_ID */ sub_3713() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_20035()
{
     /* WRITESCRIPTLOG */ sub_563( "AT", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    g_U1019 = 1;
    g_U1018 = 0;
    l_U374 = 0;
    l_U375 = 0;
    l_U376 = 0;
    l_U578[0] = {6.18200000, 27.82300000, 29.73200000};
    l_U578[1] = {5.65200000, 7.48800000, 29.73200000};
    l_U758[0] = {6.76150000, 29.54434000, 28.65191000};
    l_U765[0] = 205.02000000;
    l_U758[1] = {6.21000000, 5.71000000, 28.65191000};
    l_U765[1] = 0.29000000;
    l_U768[0] = {5.50200000, 31.82300000, 30.00000000};
    l_U775[0] = 310.00000000;
    l_U768[1] = {5.97300000, 3.09400000, 30.00000000};
    l_U775[1] = 90.00000000;
    l_U778[0] = 11.62487000;
    l_U781[0] = -4.90613400;
    l_U778[1] = 0.78177200;
    l_U781[1] = -9.21415500;
     /* RESETTIMER */ sub_5739( ref l_U526 );
     /* RESETTIMER */ sub_5739( ref l_U535 );
    l_U553 = 0;
    l_U554 = 0;
    l_U577 = 0;
    l_U373 = 1;
     /* P_CREATEPOISTRUCTCOORD */ sub_20487( ref l_U585[0], 1, l_U578[0], l_U578[0], l_U578[0], g_U1910, 3.00000000, 1, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_21254( ref l_U585[0], 30, "POI_EXPLOSIVE" );
     /* P_CREATEPOISTRUCTCOORD */ sub_20487( ref l_U585[1], 1, l_U578[1], l_U578[1], l_U578[1], g_U1910, 3.00000000, 1, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_21254( ref l_U585[1], 30, "POI_EXPLOSIVE" );
    l_U555 = 0;
    g_U1900 = 0;
    g_U1790 = -1;
    l_U784[2]._fU8 = {-5.98000000, 9.28000000, 30.31500000};
    l_U784[2]._fU20 = {90, 195, -10};
    l_U784[2]._fU32 = {-5.99000000, 9.25500000, 30.35000000};
    l_U784[2]._fU44 = {90, 195, -10};
    l_U784[1]._fU8 = {5.89000000, 7.04000000, 30.16000000};
    l_U784[1]._fU20 = {90, 65446, -10};
    l_U784[1]._fU32 = {5.88000000, 7.01200000, 30.20000000};
    l_U784[1]._fU44 = {90, 65446, -10};
    l_U784[0]._fU8 = {6.82000000, 28.48000000, 30.20000000};
    l_U784[0]._fU20 = {65446, 65446, 65501};
    l_U784[0]._fU32 = {6.84000000, 28.51000000, 30.24000000};
    l_U784[0]._fU44 = {65446, 65446, 65501};
    l_U827 = 0;
     /* WRITESCRIPTLOG */ sub_563( "AT", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

/* P_CREATEPOISTRUCTCOORD */ void sub_20487(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_20527( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_20920( iParam0 );
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_20527(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_20920(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_21018( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_21018(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_14379( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_14379( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_14379( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_14379( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_14379( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_14379( iParam0, 0 );
    }
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_21254(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_21310( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_21310(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_SET_STATIC_DATA */ void sub_21918()
{
     /* WRITESCRIPTLOG */ sub_563( "AT", "P_SET_STATIC_DATA start", 0 );
     /* P_CREATETRIGGERBOX */ sub_22054( ref l_U399, "TRIGGER_ARMOURY", -6.24000000, 0.21000000, 28.49000000, 2.50000000, 4.00000000, 2.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_22054( ref l_U556, "TRIGGER_ARMOURY_WALK", -6.38000000, 3.27000000, 28.49000000, 3.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 88.50000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_22054( ref l_U420, "TRIGGER_PILLAR_SPEECH", 14.10000000, 33.53600000, 28.49000000, 6.11000000, 3.23000000, 2.11000000, 0.00000000, 0.00000000, -43.74000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_22054( ref l_U378, "TRIGGER_GATE_SPEECH", -10.11000000, 4.89000000, 28.49000000, 1.50000000, 2.50000000, 2.11000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_22054( ref l_U441, "TRIGGER_IMAGEFX_CP05", 13.60000000, 32.93000000, 28.49000000, 6.11000000, 6.23000000, 2.11000000, 0.00000000, 0.00000000, -43.74000000, 1 );
     /* P_OPENDOOR */ sub_22483( ref g_U1652, 1, 1, 0.20000000 );
     /* P_CREATEDOORSTRUCT */ sub_22785( ref l_U462, g_U1476, 26.33442000, 41.70376000, 29.75548000, g_U657 );
     /* P_CREATEDOORSTRUCT */ sub_22785( ref l_U469, g_U1477, 24.97613000, 43.92115000, 29.75548000, g_U657 );
     /* P_SETDOORMINMAXLIMIT */ sub_22894( ref l_U462, 0, 90 );
     /* P_SETDOORMINMAXLIMIT */ sub_22894( ref l_U469, 65446, 0 );
     /* P_SETDOORAUTOCLOSE */ sub_23133( ref l_U462, 1 );
     /* P_SETDOORAUTOCLOSE */ sub_23133( ref l_U469, 1 );
     /* P_CLOSEDOOR */ sub_23228( ref l_U462, 1 );
     /* P_CLOSEDOOR */ sub_23228( ref l_U469, 1 );
     /* P_SETDOORLOCKED */ sub_23382( ref l_U462, 1 );
     /* P_SETDOORLOCKED */ sub_23382( ref l_U469, 1 );
     /* P_SET_DOORS_ONE_WAY */ sub_23546( ref l_U462, ref l_U469 );
     /* WRITESCRIPTLOG */ sub_563( "AT", "P_SET_STATIC_DATA end", 0 );
    return;
}

/* P_CREATETRIGGERBOX */ void sub_22054(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_OPENDOOR */ void sub_22483(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_22508( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_22592( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_22508(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_22592(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_CREATEDOORSTRUCT */ void sub_22785(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

/* P_SETDOORMINMAXLIMIT */ void sub_22894(int iParam0, float fParam1, float fParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_22508( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_22592( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        PRINTSTRING( "[SP]### Error: Door fMinLimit greater than fMaxLimit (default min:-81.0 max:81.0) ###" );
        PRINTNL();
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

/* P_SETDOORAUTOCLOSE */ void sub_23133(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_22508( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_22592( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

/* P_CLOSEDOOR */ void sub_23228(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_22508( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_22592( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* P_SETDOORLOCKED */ void sub_23382(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_22508( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_22592( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_SET_DOORS_ONE_WAY */ void sub_23546(unknown uParam0, unknown uParam1)
{
     /* P_SETDOORMINMAXLIMIT */ sub_22894( uParam0, 0, 90 );
     /* P_SETDOORMINMAXLIMIT */ sub_22894( uParam1, 65446, 0 );
     /* P_SETDOORAUTOCLOSE */ sub_23133( uParam0, 1 );
     /* P_SETDOORAUTOCLOSE */ sub_23133( uParam1, 1 );
    return;
}

/* P_SETUP_GAMEPLAY */ void sub_23968()
{
     /* WRITESCRIPTLOG */ sub_563( "SBA", "P_SETUP_GAMEPLAY", 0 );
     /* P_CREATE_S_HOT_GG_G3_02 */ sub_24028();
     /* P_SETDOORLOCKED */ sub_23382( ref l_U462, 0 );
     /* P_SETDOORLOCKED */ sub_23382( ref l_U469, 0 );
     /* P_OPENDOOR */ sub_22483( ref l_U462, 1, 0, 0.20000000 );
     /* P_OPENDOOR */ sub_22483( ref l_U462, 1, 0, 0.10000000 );
    return;
}

/* P_CREATE_S_HOT_GG_G3_02 */ void sub_24028()
{
     /* WRITESCRIPTLOG */ sub_563( "CO", "P_CREATE_S_HOT_GG_G3_02", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_24164( ref g_U812, g_U852, -1011553821, 560477456, -7.22000000, 26.34000000, 28.69000000, 1.50000000, 0.00000000, 10.00000000, "Room_F5_01" );
     /* P_CREATECOLLECTIBLE */ sub_24321( ref g_U812 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_24164(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_563( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_24321(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_563( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_24404( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_563( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_563( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_24404( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_24644( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_24729( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_563( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_563( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_24404(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* CLEANPLACEMENT */ void sub_24644(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* CREATEPLACEMENT */ void sub_24729(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_SAVE_HOTEL_PLAYER_DATA_CHECKPOINT */ void sub_25218(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* SAVE_WATERBOTTLE_STATE */ sub_25268( uParam0 );
     /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_25506( uParam0, uParam1, uParam2, uParam3, uParam6, uParam7, uParam8, uParam9 );
    return;
}

/* SAVE_WATERBOTTLE_STATE */ void sub_25268(int iParam0)
{
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_563( "BSW", "SAVE_WATERBOTTLE_STATE start", 0 );
    uVar3 =  /* GET_WATERBOTTLE_FROM_PLAYER */ sub_12005();
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        iParam0->_fU48 = GET_SUPPRESSOR_DAMAGE_LEVEL( uVar3 );
        DISPLAYF( "SAVE_WATERBOTTLE_STATE found water bottle suppressor - saving the state: {}", 1, 513, iParam0->_fU48 );
    }
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_25506(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_563( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_563( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_10693( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_25797( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_26274( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_26274( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_26534( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_26274( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_26534( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_26534( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_26274( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_26534( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_26534( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_26534( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_26274( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_26534( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_26534( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_26534( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_26534( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_28114( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_563( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_25797(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_7752( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_563( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_563( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_26274(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_26534(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_28114(int iParam0)
{
     /* WRITE_STRING */ sub_1405( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_28202( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_28279( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_28279( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_28279( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_28279( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_28279( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_29108( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU52 );
     /* WRITE_STRING */ sub_1405( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU96 );
     /* WRITE_STRING */ sub_1405( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU100 );
     /* WRITE_STRING */ sub_1405( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU104 );
     /* WRITE_STRING */ sub_1405( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU108 );
     /* WRITE_STRING */ sub_1405( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU112 );
     /* WRITE_STRING */ sub_1405( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU116 );
     /* WRITE_STRING */ sub_1405( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU120 );
     /* WRITE_STRING */ sub_1405( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU124 );
     /* WRITE_STRING */ sub_1405( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU128 );
     /* WRITE_STRING */ sub_1405( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_2959( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_2959( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_2959( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_28202(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_28279(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_29108(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_CREATE_5TH_FLOOR_EXPLOSIVE */ void sub_30095(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_563( "SBA", "P_CREATE_5TH_FLOOR_EXPLOSIVE", 0 );
     /* CLEANOBJECT */ sub_6920( iParam0->_fU0 );
    iParam0->_fU0 =  /* CREATEOBJECT */ sub_30209( 24025937, iParam0->_fU8, iParam0->_fU20, 0, 0, 0 );
    iParam0->_fU4 =  /* CREATEOBJECT */ sub_30209( -1991592028, iParam0->_fU32, iParam0->_fU44, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( iParam0->_fU0 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, ref g_U1418 );
        FREEZE_OBJECT_POSITION( iParam0->_fU0, 1 );
    }
    if (DOES_OBJECT_EXIST( iParam0->_fU4 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU4, ref g_U1418 );
        FREEZE_OBJECT_POSITION( iParam0->_fU4, 1 );
    }
    return;
}

/* CREATEOBJECT */ void sub_30209(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_1288( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_SETDOORLATCH */ void sub_30672(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_22508( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_22592( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

/* SET_HOTEL_WEATHER_AND_TOD */ void sub_30759(unknown uParam0)
{
    int iVar3;
    string sVar4;

    switch (uParam0)
    {
        case 20:
        case 0:
        iVar3 = 20;
        sVar4 = "SUNNY";
        break;
        case 1:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
        case 2:
        case 3:
        case 4:
        iVar3 = 9;
        sVar4 = "SUNNY";
        break;
        case 5:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
        case 6:
        case 7:
        case 8:
        case 9:
        iVar3 = 9;
        sVar4 = "SUNNY_WINDY";
        break;
        case 10:
        iVar3 = 12;
        sVar4 = "SUNNY_WINDY";
        break;
        default:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
    }
    PRINTSTRING( "SET_HOTEL_WEATHER_AND_TOD - checkpoint #" );
    PRINTINT( uParam0 );
    PRINTSTRING( " hour: " );
    PRINTINT( iVar3 );
    PRINTSTRING( " weather: " );
    PRINTSTRING( sVar4 );
    PRINTNL();
    SET_TIME_OF_DAY( iVar3, 0 );
    FREEZE_TIME_OF_DAY( iVar3, 0 );
    SET_WEATHER_TYPE_NOW_PERSIST( sVar4 );
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    return;
}

/* P_CREATE_FIFTH_FLOOR_PLACEMENTS */ void sub_31206()
{
     /* WRITESCRIPTLOG */ sub_563( "SBA", "P_CREATE_FIFTH_FLOOR_PLACEMENTS start", 0 );
    if (NOT g_U1007)
    {
         /* WRITESCRIPTLOG */ sub_563( "SBA", "P_CREATE_FIFTH_FLOOR_PLACEMENTS: creating RPD", 0 );
         /* CLEANPLACEMENT */ sub_24644( g_U1010 );
        g_U1010 =  /* CREATEPLACEMENT */ sub_24729( -217311068, -5.28500000, -2.11900000, 29.08000000, 0.00000000, -1.08000000, -1.52000000, 1, 1, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1010, ref g_U1418 );
    }
    if (NOT g_U1005)
    {
         /* WRITESCRIPTLOG */ sub_563( "SBA", "P_CREATE_FIFTH_FLOOR_PLACEMENTS: creating pills 1", 0 );
         /* CLEANPLACEMENT */ sub_24644( g_U1011[0] );
        g_U1011[0] =  /* CREATEPLACEMENT */ sub_24729( -4072149, -7.28500000, -2.20000000, 29.62100000, 0, 0, 0.50000000, 0, 0, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1011[0], ref g_U1418 );
    }
    if (NOT g_U1006)
    {
         /* WRITESCRIPTLOG */ sub_563( "SBA", "P_CREATE_FIFTH_FLOOR_PLACEMENTS: creating pills 2", 0 );
         /* CLEANPLACEMENT */ sub_24644( g_U1011[1] );
        g_U1011[1] =  /* CREATEPLACEMENT */ sub_24729( -4072149, -7.58500000, -2.26000000, 29.62100000, g_U657, 0, 0, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1011[1], ref g_U1418 );
    }
    if (NOT (DOES_PLACEMENT_EXIST( g_U1017 )))
    {
         /* WRITESCRIPTLOG */ sub_563( "SBA", "P_CHECK_5TH_FLOOR_PLACEMENTS: CREATE AMMO BAG", "***" );
         /* CLEANPLACEMENT */ sub_24644( g_U1017 );
        g_U1017 = CREATE_AMMOBAG_PLACEMENT_ROTATE( -8.95000000, -2.16500000, 28.74000000, 0, 0, 1.87000000, 0, -1.00000000, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1017, ref g_U1418 );
         /* P_SETUP_AMMO_BAG_DEFAULTS */ sub_31937( g_U1017 );
        SET_AMMOBAG_AMMO_AMOUNT( g_U1017, 581312862, 100 );
    }
     /* WRITESCRIPTLOG */ sub_563( "SBA", "P_CREATE_FIFTH_FLOOR_PLACEMENTS end", 0 );
    return;
}

/* P_SETUP_AMMO_BAG_DEFAULTS */ void sub_31937(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        SET_AMMOBAG_REGEN_TIME( uParam0, 10.00000000 );
        SET_AMMOBAG_REGEN_RANGE( uParam0, 3.00000000 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1088031219, 45 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 954369040, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1138793073, 95 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1087746638, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1295933220, 30 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1383321053, 85 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1481241171, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1889644301, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -790090695, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1742569970, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1575030772, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1622373246, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 558118158, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1701914198, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1126469201, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 936600426, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 205668857, 0 );
    }
    return;
}

/* P_CREATE_BRANCO_RECEIPT_POI */ void sub_32366()
{
     /* WRITESCRIPTLOG */ sub_563( "SBA", "P_CREATE_BRANCO_RECEIPT_POI", 0 );
     /* P_CREATEPOISTRUCTCOORD */ sub_20487( ref g_U1791, 1, g_U1877, g_U1877, g_U1877, 1.50000000, 3.00000000, 1, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_21254( ref g_U1791, 30, "POI_HOT_RECEIPT" );
     /* P_SET_POI_REUSABLE */ sub_32521( ref g_U1791, 1 );
     /* P_SET_POI_FORCE_WALK */ sub_32574( ref g_U1791, 0 );
     /* P_SET_POI_AVAILABLE */ sub_32629( ref g_U1791, 0 );
    return;
}

/* P_SET_POI_REUSABLE */ void sub_32521(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

/* P_SET_POI_FORCE_WALK */ void sub_32574(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

/* P_SET_POI_AVAILABLE */ void sub_32629(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
     /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_13787( iParam0 );
    return;
}

/* PLAY_HOTEL_CUT_12_03 */ void sub_32722(boolean bParam0, boolean bParam1, unknown uParam2)
{
    int Result;

    Result = 0;
    if (IS_STRING_NULL( uParam2 ))
    {
        uParam2 = l_U236;
    }
    switch (l_U217)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_563( "RJM", "PLAY_HOTEL_CUT_12_03 start", "*****" );
         /* NIS_PRE_SETUP */ sub_15915( 1, 0, 0, 1 );
         /* LOADSEAMLESSCUTSCENE */ sub_2157( uParam2, 1 );
        if (NOT bParam0)
        {
             /* BLOCKLOAD_HOTEL_CUT_12_03_ASSETS */ sub_32912();
        }
        else
        {
             /* LOADISEQ */ sub_1847( 1179793949, 1 );
            CUTSCENE_REGISTER_ISEQ( 1179793949 );
        }
         /* CREATE_CUTSCENE_ONLY_12_03_PEDS */ sub_33462();
         /* REGISTER_PEDS_HOTEL_CUT_12_03 */ sub_34464( ref l_U237, bParam0 );
         /* CREATE_BLENDOUT_DOOR */ sub_36800();
        ISEQ_REGISTER_ENTITY( 1179793949, "fifth_door", g_U1729, 1 );
        l_U217 = 2;
        break;
        case 2:
        if (bParam1)
        {
            START_CUTSCENE_CAPTURE( uParam2 );
        }
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        l_U217 = 3;
        break;
        case 3:
        l_U217 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
             /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_35935( l_U218, 1 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_05", "B_OUT_12_03_HOTEL_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            l_U217 = 5;
        }
        break;
        case 5:
        if (bParam1)
        {
            STOP_CUTSCENE_CAPTURE();
        }
        Result = 1;
         /* UNLOAD_HOTEL_CUT_12_03_ASSETS */ sub_37260();
         /* CLEANPEDARRAY */ sub_37528( ref l_U237 );
         /* NIS_POST_SETUP */ sub_18375( 1, 1 );
        l_U217 = 0;
         /* WRITESCRIPTLOG */ sub_563( "RJM", "PLAY_HOTEL_CUT_12_03 end", "*****" );
        break;
        case 0:
        l_U217 = 1;
        break;
    }
    return Result;
}

/* BLOCKLOAD_HOTEL_CUT_12_03_ASSETS */ void sub_32912()
{
     /* WRITESCRIPTLOG */ sub_563( "RJM", "BLOCKLOAD_HOTEL_CUT_12_03_ASSETS", "***" );
     /* BLOCKLOADMODEL */ sub_33014( -643110723 );
     /* BLOCKLOADMODEL */ sub_33014( 75711909 );
    return;
}

/* BLOCKLOADMODEL */ void sub_33014(unknown uParam0)
{
    DISPLAYF( "[MSWW]### Trying to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_1405( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
        WAIT( 0 );
    }
    DISPLAYF( "[MSWW]### Has loaded model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
    return;
}

/* CREATE_CUTSCENE_ONLY_12_03_PEDS */ void sub_33462()
{
    int I;

     /* P_CREATEPEDSTRUCTWITHNAME */ sub_33531( ref l_U240[0], 0, 0, 0, 0, -1929099819, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_33531( ref l_U240[1], 0, 0, 0, 0, 1856636111, 26, 6, 0, 0, 0 );
    for ( I = 0; I <= (l_U237 - 1); I++ )
    {
        l_U237[I] =  /* CREATEPED */ sub_33722( ref l_U240[I] );
    }
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_33531(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* CREATEPED */ void sub_33722(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_1288( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_34213( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_34314( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_34213(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_34314(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* REGISTER_PEDS_HOTEL_CUT_12_03 */ void sub_34464(unknown uParam0, boolean bParam1)
{
     /* WRITESCRIPTLOG */ sub_563( "RJM", "REGISTER_PEDS_HOTEL_CUT_12_03", "***" );
    if ( /* IS_MAX_VALID */ sub_12097())
    {
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_34571( ref l_U218, 1, 1 );
         /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_35935( l_U218, 0 );
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_36068( 1 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_3713(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
        if (bParam1)
        {
            CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_3713(), 34.33100000, 48.73200000, 28.65600000, 120.00000000 );
        }
        ISEQ_REGISTER_ENTITY( 1179793949, "max",  /* PLAYER_PED_ID */ sub_3713(), 0 );
    }
     /* REGISTER_PED_WITH_12_03 */ sub_36686( ref (uParam0^)[0], "Sero_Unif_3" );
     /* REGISTER_PED_WITH_12_03 */ sub_36686( ref (uParam0^)[1], "Dr_Arth_Doc" );
    return;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_34571(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_34610( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_34811( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_35065( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3713(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3713(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3713(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_3713(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_3713(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_35065( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_3713(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_3713(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_34610(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_34811(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* IS_WEAPON_TWO_HANDED */ int sub_35065(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_SET_TWO_HANDED_WEAPON_VISIBLE */ void sub_35935(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_36068(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_34811( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_36216();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_3713(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_36216()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_34811( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3713(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3713(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* REGISTER_PED_WITH_12_03 */ void sub_36686(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_12127( (uParam0^) ))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam0^), uParam1, 1 );
        SET_PED_NAME_DEBUG( (uParam0^), uParam1 );
    }
    return;
}

/* CREATE_BLENDOUT_DOOR */ void sub_36800()
{
     /* WRITESCRIPTLOG */ sub_563( "BSW", "CREATE_BLENDOUT_DOOR start", 0 );
     /* CLEANOBJECT */ sub_6920( g_U1729 );
     /* LOADMODEL */ sub_1288( -1538058993, 1 );
    g_U1729 =  /* CREATEOBJECT */ sub_30209( -1538058993, 33.29000000, 48.88000000, 28.65198000, 0.00000000, 0.00000000, 120.00000000, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( g_U1729 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1729, ref g_U1434 );
        FREEZE_OBJECT_POSITION( g_U1729, 1 );
    }
     /* WRITESCRIPTLOG */ sub_563( "BSW", "CREATE_BLENDOUT_DOOR end", 0 );
    return;
}

/* UNLOAD_HOTEL_CUT_12_03_ASSETS */ void sub_37260()
{
     /* WRITESCRIPTLOG */ sub_563( "RJM", "UNLOAD_HOTEL_CUT_12_03_ASSETS", "***" );
     /* UNLOADMODEL */ sub_37356( -643110723 );
     /* UNLOADMODEL */ sub_37356( 75711909 );
    return;
}

/* UNLOADMODEL */ void sub_37356(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_1405( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* CLEANPEDARRAY */ void sub_37528(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_37578( (uParam0^)[I] );
    }
    return;
}

/* CLEANPED */ void sub_37578(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* HANDLE_12_03_BLENDOUT */ void sub_37855()
{
    int Result;

    Result = 0;
    switch (l_U374)
    {
        case 0:
         /* NIS_PRE_SETUP */ sub_15915( 1, 0, 0, 1 );
         /* WRITESCRIPTLOG */ sub_563( "bsw", "HANDLE_12_03_BLENDOUT - BLENDOUT_START", 0 );
        if ((ISEQ_QUERY_STATE( 1179793949, 3 )) == 0)
        {
             /* WRITESCRIPTLOG */ sub_563( "bsw", "starting HANDLE_12_03_BLENDOUT WITHOUT the cutscene", 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_05", "B_OUT_12_03_HOTEL_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
             /* CREATE_BLENDOUT_DOOR */ sub_36800();
             /* LOADISEQ */ sub_1847( 1179793949, 1 );
             /* TELEPORTPED */ sub_38201(  /* PLAYER_PED_ID */ sub_3713(), 34.33100000, 48.73200000, 28.65600000, 120.00000000 );
            ISEQ_REGISTER_ENTITY( 1179793949, "max",  /* PLAYER_PED_ID */ sub_3713(), 0 );
            ISEQ_REGISTER_ENTITY( 1179793949, "fifth_door", g_U1729, 1 );
            ISEQ_START( 1179793949 );
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_3713(), 0 );
             /* CLEAR_FORCED_COLLISION_LOAD_FOR_HOTEL */ sub_38354();
        }
         /* CREATETIMER */ sub_4880( ref l_U995, l_U1013, 1, 0 );
         /* STARTTIMER */ sub_5030( ref l_U995 );
         /* CREATETIMER */ sub_4880( ref l_U1004, l_U1016, 1, 0 );
         /* STARTTIMER */ sub_5030( ref l_U1004 );
        DO_SCREEN_FADE_IN( 0 );
         /* P_SPEECH_PLAY_MONOLOGUE */ sub_38571( "SHOT_MXOTDR", ref l_U476 );
        l_U204 = 3;
        l_U374 = 2;
        break;
        case 2:
        l_U374 = 1;
        break;
        case 1:
        if ( /* ISTIMERDONE */ sub_5163( ref l_U1004 ))
        {
             /* WRITESCRIPTLOG */ sub_563( "bsw", "simulating player gait", 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[6], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1193[6], 1065353216, 0 );
            SIMULATE_PLAYER_INPUT_GAIT(  /* PLAYER_ID */ sub_3751(), 2, l_U1017, 0 );
        }
        if ( /* ISTIMERDONE */ sub_5163( ref l_U995 ))
        {
            CAMERA_FREEZE_FRAME( 1, 500, 0, 0 );
            l_U374 = 3;
        }
        break;
        case 3:
        Result = 1;
         /* CLEANOBJECT */ sub_6920( g_U1729 );
         /* NIS_POST_SETUP */ sub_18375( 1, 1 );
        break;
    }
    return Result;
}

/* TELEPORTPED */ void sub_38201(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* CLEAR_FORCED_COLLISION_LOAD_FOR_HOTEL */ void sub_38354()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_563( "BSW", "CLEAR_FORCED_COLLISION_LOAD_FOR_HOTEL", 0 );
    uVar2 = GET_INTERIOR_AT_COORDS( g_U1020[g_U854] );
    CLEAR_INTERIOR_COLLISION_REQUIRED( uVar2 );
    return;
}

/* P_SPEECH_PLAY_MONOLOGUE */ void sub_38571(unknown uParam0, unknown uParam1)
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_16599( uParam1 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_16708( 0,  /* PLAYER_PED_ID */ sub_3713(), "MAX", uParam1, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_16708( 1,  /* PLAYER_PED_ID */ sub_3713(), "MAX", uParam1, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_16961( uParam0, uParam1, 8, 1 );
    return;
}

/* TAKE_PAINKILLER_ARRAY_SNAPSHOT */ void sub_38924(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_PLACEMENT_EXIST( (uParam0^)[I] ))
        {
             /* WRITESCRIPTLOG */ sub_563( "RJM", "DO_ANY_PAINKILLERS_STILL_EXIST - Found a pill in there, we can still play some V.O.", 0 );
            (uParam1^)[I] = 1;
        }
        else
        {
            (uParam1^)[I] = 0;
        }
    }
    return;
}

/* P_HANDLE_PLAYER_FORCED_WALK */ void sub_39207()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )))
    {
        if (l_U577)
        {
            if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_39281( l_U556 )))
            {
                 /* WRITESCRIPTLOG */ sub_563( "GA", "Player moved away from forced to walk close to armory door trigger.", 0 );
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3713(), 0 );
                l_U577 = 0;
            }
        }
        else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_39281( l_U556 ))
        {
             /* WRITESCRIPTLOG */ sub_563( "GA", "Player forced to walk close to armory door trigger.", 0 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_3713(), 1 );
            l_U577 = 1;
        }
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_39281(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_12976(  /* PLAYER_PED_ID */ sub_3713(), uParam0 );
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_39561(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_12976(  /* PLAYER_PED_ID */ sub_3713(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* P_INITIALIZE_IMAGEFX_MID_CP_05 */ void sub_39778()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_563( "CCB", "P_INITIALIZE_IMAGEFX_MID_CP_05", 0 );
     /* P_INIT_IMAGEFX */ sub_39870( ref l_U859 );
    l_U859[0]._fU4 = "DOUBLE_TINT_BLUE_FLASH";
    l_U859[0]._fU12 = 0;
    l_U859[0]._fU16 = 1500;
    l_U859[0]._fU8 = 4;
    l_U859[0]._fU32 = 0;
    l_U859[1]._fU4 = "INTERLACE_LIGHT";
    l_U859[1]._fU12 = 100;
    l_U859[1]._fU8 = 4;
    l_U859[1]._fU32 = 0;
    l_U859[2]._fU4 = "FLASH_WHITE";
    l_U859[2]._fU12 = 200;
    l_U859[2]._fU8 = 4;
    l_U859[2]._fU32 = 0;
    l_U859[3]._fU4 = "DOUBLE_MOVE_RIGHT";
    l_U859[3]._fU12 = 600;
    l_U859[3]._fU24 = 1;
    l_U859[3]._fU8 = 4;
    l_U859[3]._fU32 = 0;
    l_U859[4]._fU4 = "FLASH_WHITE";
    l_U859[4]._fU12 = 1300;
    l_U859[4]._fU8 = 4;
    l_U859[4]._fU32 = 0;
    l_U200 = 0;
    return;
}

/* P_INIT_IMAGEFX */ void sub_39870(unknown uParam0)
{
    int I;

     /* WRITESCRIPTLOG */ sub_563( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_40511()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* P_HANDLE_GATE_VO */ void sub_40721()
{
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_39561( ref l_U378, 0 ))
    {
         /* CREATETIMER */ sub_4880( ref l_U526, 600, 1, 0 );
         /* STARTTIMER */ sub_5030( ref l_U526 );
    }
    if ( /* ISTIMERDONE */ sub_5163( ref l_U526 ))
    {
        if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_40511()))
        {
             /* P_SPEECH_PLAY_MAX_MONOLOGUE */ sub_16500( "SHOT_MXGTRMP", ref l_U496 );
        }
    }
    return;
}

/* UPDATE_PILL_VO */ int sub_40880(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    if ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_3751() )) == 0)
    {
        if (( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_40511()) == 0)
        {
            for ( I = 0; I <= ((uParam1^) - 1); I++ )
            {
                if ((uParam2^)[I])
                {
                    if ((HAS_PLACEMENT_BEEN_COLLECTED( (uParam1^)[I] )) || (NOT (DOES_PLACEMENT_EXIST( (uParam1^)[I] ))))
                    {
                        (uParam2^)[I] = 0;
                        if (TIME_SINCE_LAST_MONOLOGUE() > 5000)
                        {
                             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_16599( ref l_U190 );
                             /* P_SPEECH_PLAY_MAX_MONOLOGUE */ sub_16500( uParam0, ref l_U190 );
                            return 1;
                        }
                    }
                }
            }
        }
    }
    return 0;
}

/* REGISTER_PEDS_HOTEL_CUT_12_04 */ void sub_41232()
{
     /* WRITESCRIPTLOG */ sub_563( "RJM", "REGISTER_PEDS_HOTEL_CUT_12_04", "***" );
    if ( /* IS_MAX_VALID */ sub_12097())
    {
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_34571( ref l_U838, 0, 1 );
         /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_41345( 0 );
        l_U856 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_36216();
        if (GET_DOES_WEAPON_EXIST( l_U856 ))
        {
            SET_WEAPON_VISIBLE( l_U856, 1 );
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_3713(), l_U856, 0, 1 );
        }
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_3713(), g_U1020[7], g_U1123[7] );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_3713(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U856, "W_PI_Clt1911_Aa_H", 0 );
        ISEQ_REGISTER_ENTITY( 951295712, "max",  /* PLAYER_PED_ID */ sub_3713(), 0 );
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( -995190896, -5.57350000, 1.90177000, 29.94901000 );
    return;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_41345(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_3713() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3713(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3713(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_3713(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* P_HANDLE_IMAGEFX */ void sub_41874(unknown uParam0)
{
    int I;
    int J;

    switch (l_U200)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_563( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                 /* CREATETIMER */ sub_4880( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                 /* STARTTIMER */ sub_5030( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U200 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if ( /* ISTIMERDONE */ sub_5163( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                     /* CREATETIMER */ sub_4880( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                     /* STARTTIMER */ sub_5030( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        PRINTSTRING( "******* [CO] ***** STARTING CHILD FOR index : " );
                        PRINTINT( J );
                        PRINTNL();
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                             /* CREATETIMER */ sub_4880( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                             /* STARTTIMER */ sub_5030( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if ( /* ISTIMERDONE */ sub_5163( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

/* PLAY_HOTEL_CUT_12_04 */ void sub_42716(boolean bParam0, boolean bParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    Result = 0;
    if (IS_STRING_NULL( uParam2 ))
    {
        uParam2 = l_U858;
    }
    switch (l_U837)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_563( "RJM", "PLAY_HOTEL_CUT_12_04 start", "*****" );
         /* LOADSEAMLESSCUTSCENE */ sub_2157( uParam2, 1 );
         /* NIS_PRE_SETUP */ sub_15915( 1, 0, 0, 1 );
        if (NOT bParam0)
        {
             /* BLOCKLOAD_HOTEL_CUT_12_04_ASSETS */ sub_42898();
             /* REGISTER_PEDS_HOTEL_CUT_12_04 */ sub_41232();
        }
        else
        {
             /* LOADISEQ */ sub_1847( 951295712, 1 );
            CUTSCENE_REGISTER_ISEQ( 951295712 );
        }
        l_U837 = 2;
        break;
        case 2:
        if (bParam1)
        {
            START_CUTSCENE_CAPTURE( uParam2 );
        }
        START_SEAMLESS_CUTSCENE();
        l_U837 = 3;
        break;
        case 3:
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[7], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1193[7], 1065353216, 0 );
        l_U837 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_06", "B_OUT_12_04_HOTEL_FWD_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            if (bParam1)
            {
                STOP_CUTSCENE_CAPTURE();
            }
             /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_41345( 1 );
            Result = 1;
            if (NOT bParam0)
            {
                 /* UNLOAD_HOTEL_CUT_12_04_ASSETS */ sub_43257();
            }
             /* WRITESCRIPTLOG */ sub_563( "RJM", "PLAY_HOTEL_CUT_12_04 end", "*****" );
            l_U837 = 0;
        }
        else
        {
            iVar6 = GET_CUTSCENE_TIME_MS();
            if (l_U203 == 4)
            {
                if (iVar6 > 12000)
                {
                    l_U204 = 4;
                }
            }
            if ((NOT l_U857) AND (iVar6 > 33000))
            {
                 /* WRITESCRIPTLOG */ sub_563( "SBA", "PLAY_HOTEL_CUT_12_04: Making rifle visible", "***" );
                 /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_35935( l_U838, 1 );
                l_U857 = 1;
            }
        }
        break;
        case 0:
        l_U837 = 1;
        break;
    }
    return Result;
}

/* BLOCKLOAD_HOTEL_CUT_12_04_ASSETS */ void sub_42898()
{
     /* WRITESCRIPTLOG */ sub_563( "RJM", "BLOCKLOAD_HOTEL_CUT_12_04_ASSETS", "***" );
    return;
}

/* UNLOAD_HOTEL_CUT_12_04_ASSETS */ void sub_43257()
{
     /* WRITESCRIPTLOG */ sub_563( "RJM", "UNLOAD_HOTEL_CUT_12_04_ASSETS", "***" );
    return;
}

/* HANDLE_12_04_BLENDOUT */ void sub_43701()
{
    int Result;

    Result = 0;
    switch (l_U375)
    {
        case 0:
         /* NIS_PRE_SETUP */ sub_15915( 1, 0, 0, 1 );
        l_U203 = 5;
        l_U204 = 5;
         /* WRITESCRIPTLOG */ sub_563( "bsw", "HANDLE_12_04_BLENDOUT - BLENDOUT_START", 0 );
        if ((ISEQ_QUERY_STATE( 951295712, 3 )) == 0)
        {
             /* WRITESCRIPTLOG */ sub_563( "bsw", "starting HANDLE_12_04_BLENDOUT WITHOUT the cutscene", 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_06", "B_OUT_12_04_HOTEL_FWD_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
             /* LOADISEQ */ sub_1847( 951295712, 1 );
            ISEQ_REGISTER_ENTITY( 951295712, "max",  /* PLAYER_PED_ID */ sub_3713(), 0 );
            ISEQ_START( 951295712 );
             /* CLEAR_FORCED_COLLISION_LOAD_FOR_HOTEL */ sub_38354();
        }
        DO_SCREEN_FADE_IN( 0 );
        l_U375 = 2;
        break;
        case 2:
        g_U855 = 7;
        if (NOT l_U336._fU0)
        {
             /* P_SAVE_HOTEL_PLAYER_DATA_CHECKPOINT */ sub_25218( ref l_U336, g_U855,  /* PLAYER_PED_ID */ sub_3713(), g_U1020[g_U855], g_U1123[g_U855], g_U1158[g_U855], g_U1193[g_U855], 0 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[7], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1193[7], 1065353216, 0 );
        l_U375 = 1;
        break;
        case 1:
        if ((CAMERA_ANIMATED_CURRENT_TIME() + 1) >= (CAMERA_ANIMATED_LENGTH( "LEVEL_S_HOTEL_CP_06", "B_OUT_12_04_HOTEL_FWD_CAM" )))
        {
            CAMERA_FREEZE_FRAME( 1, 750, 0, 0 );
            l_U375 = 3;
        }
        break;
        case 3:
        Result = 1;
         /* CLEANOBJECT */ sub_6920( g_U1729 );
         /* NIS_POST_SETUP */ sub_18375( 1, 1 );
        break;
    }
    return Result;
}

/* HANDLE_PILLAR_HINT_DIALOGUE */ void sub_44480()
{
    if (NOT l_U553)
    {
        if ( /* ISTIMERDONE */ sub_5163( ref l_U544 ))
        {
            if (NOT ( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_40511()))
            {
                 /* P_SPEECH_PLAY_MAX_MONOLOGUE */ sub_16500( "SHOT_MXTLPLEX", ref l_U516 );
                l_U553 = 1;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_563( "SBA", "HANDLE_PILLAR_HINT_DIALOGUE: VO already playing, starting rety timer", 0 );
                 /* CREATETIMER */ sub_4880( ref l_U544, 5000, 1, 0 );
                 /* STARTTIMER */ sub_5030( ref l_U544 );
            }
        }
    }
    return;
}

/* GET_FIRST_USED_5TH_FLOOR_PILLAR */ int sub_44896()
{
    int Result;

    for ( Result = 0; Result < l_U585; Result++ )
    {
        if (l_U585[Result]._fU64)
        {
            PRINTSTRING( "GET_FIRST_USED_5TH_FLOOR_PILLAR - first used pillar: " );
            PRINTINT( Result );
            PRINTNL();
            return Result;
        }
    }
    return -1;
}

/* PLAY_HOTEL_MID_07 */ void sub_45243(boolean bParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, boolean bParam9, unknown uParam10)
{
    int Result;
    int iVar14;

    Result = 0;
    if (IS_STRING_NULL( uParam10 ))
    {
        uParam10 = l_U286;
    }
    switch (l_U267)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_563( "RJM", "PLAY_HOTEL_MID_07 start", "*****" );
         /* LOADSEAMLESSCUTSCENE */ sub_2157( uParam10, 1 );
         /* NIS_PRE_SETUP */ sub_15915( 1, 0, 0, 1 );
        if (NOT bParam0)
        {
             /* BLOCKLOAD_MID_07_ASSETS */ sub_45431();
        }
        else
        {
             /* LOADISEQ */ sub_1847( 951295712, 1 );
            CUTSCENE_REGISTER_ISEQ( 951295712 );
        }
         /* REGISTER_PEDS_MID_07 */ sub_45561( uParam1, uParam4 );
        l_U267 = 2;
        break;
        case 2:
        if (bParam9)
        {
            START_CUTSCENE_CAPTURE( uParam10 );
        }
        START_SEAMLESS_CUTSCENE();
        l_U267 = 3;
        break;
        case 3:
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_34571( ref l_U268, 0, 1 );
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_36068( 1 );
         /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_41345( 0 );
        if ( /* CAN_TOGGLE_BAG */ sub_45869())
        {
            PLAYER_ENABLE_COMPONENT( 11, 0 );
        }
        l_U267 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
             /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_41345( 1 );
            if ( /* CAN_TOGGLE_BAG */ sub_45869())
            {
                PLAYER_ENABLE_COMPONENT( 11, 1 );
            }
            g_U1003 = 1;
            if (bParam0)
            {
                CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_06", "B_OUT_12_04_HOTEL_FWD_CAM", 1, uParam5, uParam8, 0, 0 );
            }
            l_U267 = 5;
        }
        else
        {
            iVar14 = GET_CUTSCENE_TIME_MS();
            if ((NOT g_U1003) AND (iVar14 > 7600))
            {
                g_U1003 = 1;
            }
        }
        break;
        case 5:
        if (bParam9)
        {
            STOP_CUTSCENE_CAPTURE();
        }
        Result = 1;
         /* UNLOAD_MID_07_ASSETS */ sub_46772();
        if (NOT bParam0)
        {
             /* NIS_POST_SETUP */ sub_18375( 1, 1 );
        }
        l_U267 = 0;
         /* WRITESCRIPTLOG */ sub_563( "RJM", "PLAY_HOTEL_MID_07 end", "*****" );
        break;
        case 0:
        l_U267 = 1;
        break;
    }
    return Result;
}

/* BLOCKLOAD_MID_07_ASSETS */ void sub_45431()
{
     /* WRITESCRIPTLOG */ sub_563( "RJM", "BLOCKLOAD_MID_07_ASSETS", "***" );
     /* BLOCKLOADMODEL */ sub_33014( 466468872 );
    return;
}

/* REGISTER_PEDS_MID_07 */ void sub_45561(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
     /* WRITESCRIPTLOG */ sub_563( "RJM", "REGISTER_PEDS_MID_07", "***" );
    if ( /* IS_MAX_VALID */ sub_12097())
    {
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_3713(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_3713(), 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_3713(), uParam0, uParam3 );
        ISEQ_REGISTER_ENTITY( 951295712, "max",  /* PLAYER_PED_ID */ sub_3713(), 0 );
    }
    return;
}

/* CAN_TOGGLE_BAG */ int sub_45869()
{
    int iVar2;

     /* WRITESCRIPTLOG */ sub_563( "BSW", "CAN_TOGGLE_BAG start", "***" );
    DISPLAYF( "CAN_TOGGLE_BAG variation - {}", 1, 513, GET_CUSTOM_PLAYER_VARIATION() );
    iVar2 =  /* F_GET_ALTERNATE_PLAYER_VARIATION */ sub_45993( GET_CUSTOM_PLAYER_VARIATION() );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        return 1;
    }
    if ((iVar2 == 48) || ((iVar2 == 47) || ((iVar2 == 46) || ((iVar2 == 45) || (iVar2 == 44)))))
    {
         /* WRITESCRIPTLOG */ sub_563( "BSW", "CAN_TOGGLE_BAG got a no-no variation, return false", "***" );
        return 0;
    }
    return 1;
}

/* F_GET_ALTERNATE_PLAYER_VARIATION */ int sub_45993(unknown uParam0)
{
    unknown uVar3;

    uVar3 = uParam0;
    switch (uVar3)
    {
        case 1:
        return 44;
        break;
        case 2:
        return 46;
        break;
        case 3:
        return 3;
        break;
        case 4:
        return 10;
        break;
        case 5:
        return 15;
        break;
        case 6:
        return 18;
        break;
        case 7:
        return 20;
        break;
        case 8:
        return 24;
        break;
        case 9:
        return 26;
        break;
        case 10:
        return 31;
        break;
        case 11:
        return 36;
        break;
        case 12:
        return 1;
        break;
        case 13:
        return 16;
        break;
        case 14:
        return 29;
        break;
        case 15:
        return 32;
        break;
        case 16:
        return 41;
        break;
        case 17:
        return 37;
        break;
        case 18:
        return 48;
        break;
        case 19:
        return 45;
        break;
        case 20:
        return 47;
        break;
    }
    return 49;
}

/* UNLOAD_MID_07_ASSETS */ void sub_46772()
{
     /* WRITESCRIPTLOG */ sub_563( "RJM", "UNLOAD_MID_07_ASSETS", "***" );
     /* UNLOADMODEL */ sub_37356( 466468872 );
    return;
}

/* HANDLE_MID_07_BLENDOUT */ void sub_47050(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    int Result;

    Result = 0;
    switch (l_U376)
    {
        case 0:
         /* NIS_PRE_SETUP */ sub_15915( 1, 0, 0, 1 );
         /* WRITESCRIPTLOG */ sub_563( "bsw", "HANDLE_12_04_BLENDOUT - BLENDOUT_START", 0 );
        if ((ISEQ_QUERY_STATE( 951295712, 3 )) == 0)
        {
             /* WRITESCRIPTLOG */ sub_563( "bsw", "starting HANDLE_12_04_BLENDOUT WITHOUT the cutscene", 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_06", "B_OUT_12_04_HOTEL_FWD_CAM", 1, uParam0, uParam3, 0, 0 );
             /* LOADISEQ */ sub_1847( 951295712, 1 );
            ISEQ_REGISTER_ENTITY( 951295712, "max",  /* PLAYER_PED_ID */ sub_3713(), 0 );
            ISEQ_START( 951295712 );
        }
        DO_SCREEN_FADE_IN( 0 );
        l_U376 = 2;
        break;
        case 2:
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
        l_U376 = 1;
        break;
        case 1:
        if ((CAMERA_ANIMATED_CURRENT_TIME() + 1) >= (CAMERA_ANIMATED_LENGTH( "LEVEL_S_HOTEL_CP_06", "B_OUT_12_04_HOTEL_FWD_CAM" )))
        {
            CAMERA_FREEZE_FRAME( 1, 750, 0, 0 );
            l_U376 = 3;
        }
        break;
        case 3:
        Result = 1;
         /* NIS_POST_SETUP */ sub_18375( 1, 1 );
        break;
    }
    return Result;
}

/* P_CHECK_5TH_FLOOR_PLACEMENTS */ void sub_47834()
{
    if (NOT (DOES_PLACEMENT_EXIST( g_U1011[0] )))
    {
         /* WRITESCRIPTLOG */ sub_563( "SBA", "P_CHECK_5TH_FLOOR_PLACEMENTS: gbGot5thFloorPills1 = TRUE", "***" );
        g_U1005 = 1;
    }
    if (NOT (DOES_PLACEMENT_EXIST( g_U1011[1] )))
    {
         /* WRITESCRIPTLOG */ sub_563( "SBA", "P_CHECK_5TH_FLOOR_PLACEMENTS: gbGot5thFloorPills2 = TRUE", "***" );
        g_U1006 = 1;
    }
    if (NOT (DOES_PLACEMENT_EXIST( g_U1010 )))
    {
         /* WRITESCRIPTLOG */ sub_563( "SBA", "P_CHECK_5TH_FLOOR_PLACEMENTS: gbGot5thFloorRPD = TRUE", "***" );
        g_U1007 = 1;
    }
    return;
}

/* P_DEBUG_EXPLOSIVES_SETUP */ void sub_48367()
{
    if (NOT g_U3203)
    {
        START_WIDGET_GROUP( "Explosives Setup Widget" );
        ADD_WIDGET_BOOL( "Create Explosive Object", ref g_U3204 );
        ADD_WIDGET_BOOL( "Delete Explosive Object", ref g_U3207 );
        ADD_WIDGET_BOOL( "Create Light Object", ref g_U3205 );
        ADD_WIDGET_BOOL( "Delete Light Object", ref g_U3206 );
        START_WIDGET_GROUP( "Explosives Position" );
        ADD_WIDGET_BOOL( "Floor5?", ref g_U3208 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref g_U3209._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref g_U3209._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref g_U3209._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref g_U3212._fU0, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref g_U3212._fU4, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref g_U3212._fU8, -360.00000000, 360.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Light Position" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref g_U3215._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref g_U3215._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref g_U3215._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref g_U3218._fU0, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref g_U3218._fU4, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref g_U3218._fU8, -360.00000000, 360.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        g_U3203 = 1;
    }
    if (g_U3204)
    {
         /* WRITESCRIPTLOG */ sub_563( "SBA", "P_DEBUG_EXPLOSIVES_SETUP: Creating Explosive", 0 );
         /* LOADMODEL */ sub_1288( 24025937, 1 );
         /* CLEANOBJECT */ sub_6920( g_U3221 );
        g_U3221 =  /* CREATEOBJECT */ sub_30209( 24025937, g_U3209, g_U3212, 0, 0, 0 );
        if ((DOES_OBJECT_EXIST( g_U3221 )) == 1)
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U3221, ref g_U3223 );
            FREEZE_OBJECT_POSITION( g_U3221, 1 );
        }
        g_U3204 = 0;
    }
    if (g_U3205)
    {
         /* LOADMODEL */ sub_1288( -1991592028, 1 );
         /* CLEANOBJECT */ sub_6920( g_U3222 );
        g_U3222 =  /* CREATEOBJECT */ sub_30209( -1991592028, g_U3215, g_U3218, 0, 0, 0 );
        if ((DOES_OBJECT_EXIST( g_U3222 )) == 1)
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U3222, ref g_U3223 );
            FREEZE_OBJECT_POSITION( g_U3222, 1 );
        }
        g_U3205 = 0;
    }
    if (g_U3208)
    {
        if (NOT (ARE_STRINGS_EQUAL( ref g_U3223, ref g_U1418 )))
        {
             /* WRITESCRIPTLOG */ sub_563( "SBA", "P_DEBUG_EXPLOSIVES_SETUP: Setting room to FIFTH Floor", 0 );
            g_U3223 = {g_U1418};
        }
    }
    else if (NOT (ARE_STRINGS_EQUAL( ref g_U3223, ref g_U1426 )))
    {
         /* WRITESCRIPTLOG */ sub_563( "SBA", "P_DEBUG_EXPLOSIVES_SETUP: Setting room to SIXTH Floor", 0 );
        g_U3223 = {g_U1426};
    }
    if (g_U3207)
    {
         /* WRITESCRIPTLOG */ sub_563( "SBA", "P_DEBUG_EXPLOSIVES_SETUP: Deleting Explosive", 0 );
         /* UNLOADMODEL */ sub_37356( 24025937 );
         /* CLEANOBJECT */ sub_6920( g_U3221 );
        g_U3207 = 0;
    }
    if (g_U3206)
    {
         /* WRITESCRIPTLOG */ sub_563( "SBA", "P_DEBUG_EXPLOSIVES_SETUP: Deleting Explosive", 0 );
         /* UNLOADMODEL */ sub_37356( -1991592028 );
         /* CLEANOBJECT */ sub_6920( g_U3222 );
        g_U3206 = 0;
    }
    return;
}

/* P_UNLOAD_ASSETS */ void sub_49875()
{
    int I;

     /* WRITESCRIPTLOG */ sub_563( "AT", "P_UNLOAD_ASSETS start", 0 );
    for ( I = 0; I < l_U828; I++ )
    {
         /* UNLOADMODEL */ sub_37356( l_U828[I] );
    }
     /* UNLOADMODEL */ sub_37356( -643110723 );
     /* UNLOADMODEL */ sub_37356( 75711909 );
     /* UNLOADANIMDICT */ sub_50010( "EXPL_CAM" );
     /* WRITESCRIPTLOG */ sub_563( "AT", "P_UNLOAD_ASSETS end", 0 );
    return;
}

/* UNLOADANIMDICT */ void sub_50010(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


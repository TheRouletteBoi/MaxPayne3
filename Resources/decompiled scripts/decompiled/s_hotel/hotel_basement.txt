void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U44 = 0;
    l_U45 = 0;
    l_U46 = 1500;
    l_U102 = "PED_DEF";
    l_U144 = 1.00000000;
    l_U156 = 0;
    l_U197 = 0;
    l_U218 = 0;
    l_U220 = 1;
    l_U221 = 0;
    l_U222 = 1;
    l_U223 = 0;
    l_U234 = {323.62230000, 363.08290000, -3.68839000};
    l_U237 = {8.19900400, 54.96789000, -0.01439600};
    l_U240 = {308.92420000, 391.37540000, -0.25633100};
    l_U243 = {66.99126000, 30.54711000, -0.27319800};
    l_U246 = 1;
    l_U265 = "12_01_HOTEL_concat";
    l_U297 = 0;
    l_U298 = 0;
    l_U299 = 1;
    l_U348 = "MID_02_HOTEL_concat";
    l_U349 = 1;
    l_U398 = "MID_03_HOTEL_concat";
    l_U399 = 0;
    l_U436 = 0;
    l_U438 = 0;
    l_U439 = 0;
    l_U440 = 0;
    l_U700 = {4.75000000, -3.68800000, -3.89800000};
    l_U703 = {0, 0, 90};
    l_U706 = {6.08800000, -3.40000000, -3.90500000};
    l_U709 = {0, 0, 107};
    l_U798 = {6.42000000, -3.81000000, -2.99000000};
    l_U801 = -1;
    l_U821 = -1;
    l_U908 = {-13.21000000, -1.08000000, -3.48000000};
    l_U937 = {4.52000000, -9.40000000, -2.73000000};
    l_U940 = {-60.40000000, -29.60000000, -35.00000000};
    l_U943 = {3.99000000, -9.25000000, -2.87000000};
    l_U946 = {1.00000000, 3.90000000, 170.00000000};
    l_U949 = {4.02000000, -9.25000000, -2.75000000};
    l_U952 = {2.70000000, 6.60000000, 184.00000000};
    l_U955 = {4.28000000, -7.80000000, -3.06000000};
    l_U958 = {0.92900000, 65446, 77.50000000};
    l_U962 = {4.05000000, -3.98000000, -3.65000000};
    l_U965 = {0.00000000, -0.75000000, 0.00000000};
    l_U975 = 762297658;
    l_U982 = 0;
    l_U983 = 4000;
    l_U984 = 5000;
    l_U1067 = 0;
    l_U1086 = 1750;
    l_U1087 = 750;
    l_U1088 = (l_U1086 - l_U1087) + 500;
     /* WRITESCRIPTLOG */ sub_1035( "AT", "Script s_hotel_basement.sc is starting up...", 0 );
    g_U855 = g_U854;
     /* P_SETUP_ASSET_ARRAYS */ sub_1163();
    l_U436 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_MUSIC */ sub_1366();
         /* P_HANDLE_FAILURE */ sub_2035();
        if (l_U440 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_11129();
        }
         /* P_HANDLE_DEBUG_OBJECTS_PLACEMENT */ sub_49951();
        WAIT( 0 );
    }
     /* P_CLEANUP_ALL */ sub_4593();
     /* P_UNLOAD_ASSETS */ sub_50962();
    SET_CAM_VIEW_MODE( 1 );
    l_U441 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2136(), 0, 0 );
    if (GET_DOES_WEAPON_EXIST( l_U441 ))
    {
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "Resetting SET_MAX_SUPPRESSOR_DAMAGE_LEVEL", "***" );
        SET_MAX_SUPPRESSOR_DAMAGE_LEVEL( l_U441, 4 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "Could not get Player weapon to reset SET_MAX_SUPPRESSOR_DAMAGE_LEVEL", "!!!" );
    }
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "hotel_basement" );
     /* WRITESCRIPTLOG */ sub_1035( "AT", "Script hotel_basement.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_1035(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_SETUP_ASSET_ARRAYS */ void sub_1163()
{
     /* WRITESCRIPTLOG */ sub_1035( "AT", "P_SETUP_ASSET_ARRAYS start", 0 );
    l_U976[0] = -1288233836;
    l_U976[1] = 1318344610;
    l_U976[2] = 2033385375;
    l_U976[3] = -1408208001;
    l_U976[4] = 1398263303;
     /* WRITESCRIPTLOG */ sub_1035( "AT", "P_SETUP_ASSET_ARRAYS end", 0 );
    return;
}

/* P_HANDLE_MUSIC */ void sub_1366()
{
    if (l_U222 != l_U220)
    {
         /* WRITESCRIPTLOG */ sub_1035( "TEH", "playing music:changed CUR FLAG", 0 );
         /* WRITE_INT */ sub_1459( l_U220 );
         /* WRITE_INT */ sub_1459( l_U221 );
        l_U222 = l_U220;
    }
    else if (l_U223 != l_U221)
    {
         /* WRITESCRIPTLOG */ sub_1035( "TEH", "playing music:changed NEW FLAG", 0 );
         /* WRITE_INT */ sub_1459( l_U220 );
         /* WRITE_INT */ sub_1459( l_U221 );
        l_U223 = l_U221;
    }
    switch (l_U220)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_1035( "TEH", "playing music: Suspended ", 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        l_U233 = 0;
        l_U220 = 3;
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1035( "TEH", "playing music: Hoboken Bar Restart checkpoint ", 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        l_U233 = 0;
        l_U220 = 3;
        break;
        case 3:
        if (l_U221 == 3)
        {
             /* WRITESCRIPTLOG */ sub_1035( "TEH", "CUE 1.2 playing music: MC_GAMEPLAY_STARTS ", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_1", "", 0, 5000, 0, -1082130432, 0 );
            l_U233 = 0;
            l_U220 = 4;
        }
        break;
        case 4:
        if (l_U221 == 4)
        {
             /* WRITESCRIPTLOG */ sub_1035( "TEH", "playing music: MC_ENTER_ELEVATOR ", 0 );
            l_U220 = 5;
        }
        break;
    }
    return;
}

/* WRITE_INT */ void sub_1459(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* P_HANDLE_FAILURE */ void sub_2035()
{
    if (g_U855 == 1)
    {
        switch (l_U440)
        {
            case 0:
            if (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() ))
            {
                l_U440 = 1;
                 /* WRITESCRIPTLOG */ sub_1035( "AT", "PLAYER DIED: eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            else if ( /* RESTARTING_CHECKPOINT */ sub_2316())
            {
                l_U440 = 1;
                 /* WRITESCRIPTLOG */ sub_1035( "SBA", "RESTARTING CHECKPOINT: eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_2850())
            {
                l_U440 = 2;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_2910( 0 )) == 1)
            {
                l_U440 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )))
            {
                l_U440 = 3;
                 /* WRITESCRIPTLOG */ sub_1035( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_1035( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2174() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2174(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            l_U220 = 2;
             /* P_CLEANUP_ALL */ sub_4593();
            l_U440 = 4;
             /* WRITESCRIPTLOG */ sub_1035( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_1035( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
             /* P_RESTORE_HOTEL_PLAYER_DATA_CHECKPOINT */ sub_5859( ref l_U400,  /* PLAYER_PED_ID */ sub_2136() );
            l_U440 = 5;
             /* WRITESCRIPTLOG */ sub_1035( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_1035( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U436 = 3;
            l_U440 = 0;
             /* WRITESCRIPTLOG */ sub_1035( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_2136()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_2174() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_2174()
{
    return GET_PLAYER_ID();
}

/* RESTARTING_CHECKPOINT */ int sub_2316()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_2174(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_2174(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2136() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2136(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_2850()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_2910(int iParam0)
{
    iParam0 = 1;
    switch (l_U45)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_2992( ref l_U47 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )))
            {
                l_U46 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_3126( ref l_U47, l_U46, 1, 1 );
             /* STARTTIMER */ sub_3276( ref l_U47 );
        }
        if ( /* ISTIMERDONE */ sub_3409( ref l_U47 ))
        {
             /* WRITESCRIPTLOG */ sub_1035( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2174() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2174(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U45 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U45 = 2;
            }
            else
            {
                l_U45 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1035( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_3910();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1035( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_3910();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_2992(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_3126(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_3276(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_3409(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_3910()
{
     /* WRITESCRIPTLOG */ sub_1035( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_3985( ref l_U47 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2174() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2174(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U44 = 0;
    l_U44 = l_U44;
    l_U45 = 0;
    return;
}

/* RESETTIMER */ void sub_3985(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_CLEANUP_ALL */ void sub_4593()
{
     /* WRITESCRIPTLOG */ sub_1035( "MW", "P_CLEANUP_BASEMENT start", 0 );
    ISEQ_UNREGISTER_ENTITY( 710130669, "cp1" );
    ISEQ_UNREGISTER_ENTITY( 710130669, "cp2" );
     /* TERMINATEISEQ */ sub_4699( 710130669, 0 );
     /* CLEANOBJECT */ sub_5005( l_U973 );
     /* CLEANOBJECT */ sub_5005( l_U972 );
     /* CLEANOBJECT */ sub_5005( l_U974 );
     /* CLEANOBJECT */ sub_5005( g_U1787 );
     /* CLEANOBJECT */ sub_5005( g_U1788 );
     /* CLEANOBJECT */ sub_5005( l_U930 );
     /* CLEANOBJECT */ sub_5005( l_U931 );
     /* CLEANOBJECT */ sub_5005( l_U932 );
     /* CLEANOBJECT */ sub_5005( l_U933 );
     /* CLEANPEDARRAY */ sub_5143( ref l_U469 );
     /* CLEANPLACEMENTARRAY */ sub_5301( ref l_U968 );
     /* CLEANPLACEMENT */ sub_5356( l_U961 );
     /* CLEAR_LOADED_CUTSCENE */ sub_5450( l_U348 );
     /* CLEAR_LOADED_CUTSCENE */ sub_5450( l_U398 );
     /* P_CLEAN_IMAGEFX */ sub_5623( ref l_U985 );
     /* WRITESCRIPTLOG */ sub_1035( "MW", "P_CLEANUP_BASEMENT end", 0 );
    return;
}

/* TERMINATEISEQ */ void sub_4699(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* CLEANOBJECT */ void sub_5005(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CLEANPEDARRAY */ void sub_5143(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_5193( (uParam0^)[I] );
    }
    return;
}

/* CLEANPED */ void sub_5193(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANPLACEMENTARRAY */ void sub_5301(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPLACEMENT */ sub_5356( (uParam0^)[I] );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_5356(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* CLEAR_LOADED_CUTSCENE */ void sub_5450(unknown uParam0)
{
    if ((CUTSCENE_NAMED_IS_LOADING( uParam0 )) || (CUTSCENE_IS_LOADED( uParam0 )))
    {
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "Clearing cutscene:", 0 );
         /* WRITE_STRING */ sub_5543( uParam0 );
        CLEAR_NAMED_CUTSCENE( uParam0 );
    }
    return;
}

/* WRITE_STRING */ void sub_5543(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_CLEAN_IMAGEFX */ void sub_5623(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        STOP_IMAGEFX( (uParam0^)[I]._fU0, 0 );
    }
    return;
}

/* P_RESTORE_HOTEL_PLAYER_DATA_CHECKPOINT */ void sub_5859(unknown uParam0, unknown uParam1)
{
     /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_5914( uParam0, uParam1 );
     /* RESTORE_WATERBOTTLE_STATE */ sub_10364( uParam0 );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_5914(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_1035( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_6133( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_7297( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7611( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8046( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7611( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8046( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7611( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8046( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_8362( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8046( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_8362( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_8046( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_8934( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_9136( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_2136(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_1035( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_6133(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_6195( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_6195(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_7297(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_7611(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_5543( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_8046(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_8362(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_5543( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_8934(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_9136(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_6195( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_9234( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_9234(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* RESTORE_WATERBOTTLE_STATE */ void sub_10364(int iParam0)
{
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_1035( "BSW", "RESTORE_WATERBOTTLE_STATE start", 0 );
    uVar3 =  /* GET_WATERBOTTLE_FROM_PLAYER */ sub_10448();
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        SET_SUPPRESSOR_DAMAGE_LEVEL( uVar3, iParam0->_fU48 );
        DISPLAYF( "RESTORE_WATERBOTTLE_STATE found water bottle suppressor - restoring the state: {}", 1, 513, iParam0->_fU48 );
    }
    return;
}

/* GET_WATERBOTTLE_FROM_PLAYER */ void sub_10448()
{
    boolean bVar2;
    unknown Result;

     /* WRITESCRIPTLOG */ sub_1035( "BSW", "DOES_PLAYER_HAVE_WATERBOTTLE start", 0 );
    bVar2 = false;
    if ( /* IS_MAX_VALID */ sub_10540())
    {
        Result = GET_WEAPON_FROM_SLOT(  /* PLAYER_PED_ID */ sub_2136(), 0 );
        if (GET_DOES_WEAPON_EXIST( Result ))
        {
            if ((GET_WEAPON_TYPE( Result )) == 811797242)
            {
                bVar2 = true;
            }
        }
        if (NOT bVar2)
        {
            Result = GET_WEAPON_FROM_SLOT(  /* PLAYER_PED_ID */ sub_2136(), 1 );
            if (GET_DOES_WEAPON_EXIST( Result ))
            {
                if ((GET_WEAPON_TYPE( Result )) == 811797242)
                {
                    bVar2 = true;
                }
            }
        }
    }
    if (bVar2)
    {
        return Result;
        break;
    }
    return nil;
}

/* IS_MAX_VALID */ int sub_10540()
{
    if ( /* IS_PED_VALID */ sub_10570(  /* PLAYER_PED_ID */ sub_2136() ))
    {
        return 1;
    }
    return 0;
}

/* IS_PED_VALID */ int sub_10570(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

/* P_HANDLE_EVENTS */ void sub_11129()
{
    int iVar2;
    unknown uVar3;

    iVar2 = l_U436;
    switch (l_U436)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1035( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
         /* P_LOAD_ASSETS */ sub_11360();
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_12978( ref l_U400 )))
        {
             /* WRITESCRIPTLOG */ sub_1035( "SBA", "Giving Player weapon", "***" );
            l_U441 =  /* F_GIVEPEDWEAPON */ sub_8362(  /* PLAYER_PED_ID */ sub_2136(), 811797242, 20, 0, 0 );
             /* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ sub_13250( ref l_U441, 8, 1 );
            SET_MAX_SUPPRESSOR_DAMAGE_LEVEL( l_U441, 3 );
            SET_PAYNEKILLER_AMT( 2 );
        }
        l_U220 = 1;
        l_U436 = 2;
         /* WRITESCRIPTLOG */ sub_1035( "AT", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        break;
        case 2:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2136(), 0, 0 ) ))
            {
                l_U436 = 3;
                 /* WRITESCRIPTLOG */ sub_1035( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
            }
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1035( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_13667();
         /* P_SET_STATIC_DATA */ sub_13905();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U436 = 4;
         /* WRITESCRIPTLOG */ sub_1035( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_1035( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        l_U436 = 5;
         /* WRITESCRIPTLOG */ sub_1035( "AT", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_1035( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
         /* P_CREATE_PLACEMENTS */ sub_17094();
        l_U436 = 6;
        break;
        case 6:
        if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
        {
            if (g_U855 == 0)
            {
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                DO_SCREEN_FADE_IN( 0 );
                 /* WRITESCRIPTLOG */ sub_1035( "SP", "MOVIE IS NOW SKIPPABLE", 0 );
                 /* WRITESCRIPTLOG */ sub_1035( "AT", "eCheckpointState = CP_HANDLE_12_01", 0 );
                 /* LOAD_HOTEL_CUT_12_01_ASSETS */ sub_17590();
                l_U436 = 7;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_1035( "AT", "eCheckpointState = CP_BASEMENT_MID_01_BLENDOUT", 0 );
                l_U436 = 8;
            }
        }
        break;
        case 7:
        if ( /* PLAY_HOTEL_CUT_12_01 */ sub_17840( 1, g_U1020[1], 0, 0, 0 ))
        {
             /* HANDLE_MID_01_BLENDOUT */ sub_27097();
            l_U436 = 8;
        }
        break;
        case 8:
        if ( /* HANDLE_MID_01_BLENDOUT */ sub_27097())
        {
             /* LOADMODEL */ sub_11618( l_U975, 0 );
             /* LOADSEAMLESSCUTSCENE */ sub_12595( l_U348, 0 );
            l_U221 = 3;
             /* P_CREATE_GURNEYS */ sub_32756();
             /* P_CREATE_AND_START_TIMER */ sub_33466( ref l_U545, 2500 );
             /* TAKE_PAINKILLER_ARRAY_SNAPSHOT */ sub_33537( ref l_U968, ref l_U970 );
            l_U436 = 9;
        }
        break;
        case 9:
        if ( /* ISTIMERDONE */ sub_3409( ref l_U545 ))
        {
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_33796( "SHOT_MWTHBS", ref l_U472 );
        }
        if ( /* UPDATE_FORCEWALK_AND_TRIGGER_PAIR */ sub_35115( l_U482, l_U503, 0 ))
        {
             /* CREATE_FURNACE_GUYS */ sub_35568();
             /* P_ACTIVATEPEDARRAY */ sub_36232( ref l_U469 );
            l_U436 = 10;
        }
        break;
        case 10:
        if ( /* PLAY_HOTEL_MID_02 */ sub_36434( 1, ref l_U469, 0, 0 ))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136(), 0 );
             /* HANDLE_MID_02_BLENDOUT */ sub_38980();
             /* P_CREATE_BODY_BAGS */ sub_39740();
             /* P_CREATE_ENEMY_RIFLE */ sub_39921();
            l_U436 = 11;
        }
        break;
        case 11:
        if ( /* HANDLE_MID_02_BLENDOUT */ sub_38980())
        {
             /* LOADISEQ */ sub_12077( 262571667, 0 );
             /* LOADSEAMLESSCUTSCENE */ sub_12595( l_U398, 0 );
             /* WRITESCRIPTLOG */ sub_1035( "SBA", "Open exit doors, start timer.", "***" );
             /* P_OPENDOOR */ sub_40161( ref g_U1498, 1, 1, 0.40000000 );
             /* P_OPENDOOR */ sub_40161( ref g_U1505, 0, 1, 0.50000000 );
             /* CREATETIMER */ sub_3126( ref l_U681, 7500, 1, 0 );
             /* STARTTIMER */ sub_3276( ref l_U681 );
             /* CLEANPEDARRAY */ sub_5143( ref l_U469 );
             /* P_SET_POI_AVAILABLE */ sub_16236( ref l_U712, 1 );
             /* P_SET_POI_AVAILABLE */ sub_16236( ref l_U822, 1 );
            uVar3 = DOOR_FIND_CLOSEST( g_U1498._fU0, g_U1498._fU4 );
            if (DOES_OBJECT_EXIST( uVar3 ))
            {
                 /* WRITESCRIPTLOG */ sub_1035( "SBA", "Making left door bulletproof", "***" );
                DOOR_SET_IS_AFFECTED_BY_BULLETS( uVar3, 0 );
            }
            uVar3 = DOOR_FIND_CLOSEST( g_U1505._fU0, g_U1505._fU4 );
            if (DOES_OBJECT_EXIST( uVar3 ))
            {
                 /* WRITESCRIPTLOG */ sub_1035( "SBA", "Making right door bulletproof", "***" );
                DOOR_SET_IS_AFFECTED_BY_BULLETS( uVar3, 0 );
            }
            l_U436 = 12;
        }
        break;
        case 12:
        if ( /* ISTIMERDONE */ sub_3409( ref l_U681 ))
        {
             /* WRITESCRIPTLOG */ sub_1035( "SBA", "Closing exit doors from TIMER.", "***" );
             /* P_CLOSEDOOR */ sub_40774( ref g_U1498, 0 );
             /* P_CLOSEDOOR */ sub_40774( ref g_U1505, 0 );
        }
        if (NOT l_U681._fU16)
        {
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_40941( ref l_U660, 0 ))
            {
                 /* WRITESCRIPTLOG */ sub_1035( "SBA", "Closing exit doors from TRIGGER.", "***" );
                 /* P_CLOSEDOOR */ sub_40774( ref g_U1498, 0 );
                 /* P_CLOSEDOOR */ sub_40774( ref g_U1505, 0 );
                 /* RESETTIMER */ sub_3985( ref l_U681 );
            }
        }
        if (NOT l_U1067)
        {
            if ( /* UPDATE_PILL_VO */ sub_41192( "SHOT_MXFNDPLS", ref l_U968, ref l_U970 ))
            {
                 /* WRITESCRIPTLOG */ sub_1035( "SBA", "Playing Pill monologue for puiKillHousePainkillers", "..." );
                l_U1067 = 1;
            }
        }
         /* P_HANDLE_GURNEY_POI */ sub_41712();
         /* P_HANDLE_BECKER_CRATE_POI */ sub_44921();
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )))
        {
            if (l_U659)
            {
                if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_35174( l_U554 )))
                {
                     /* WRITESCRIPTLOG */ sub_1035( "GA", "Player moved away from forced to walk close to MID_03 elevator door trigger.", 0 );
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136(), 0 );
                    l_U659 = 0;
                }
            }
            else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_35174( l_U554 ))
            {
                 /* WRITESCRIPTLOG */ sub_1035( "GA", "Player forced to walk close to MID_03 elevator door trigger.", 0 );
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136(), 1 );
                l_U659 = 1;
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_40941( ref l_U524, 0 ))
        {
            if (NOT ( /* F_ISDOORLOCKED */ sub_46113( ref g_U1498 )))
            {
                 /* WRITESCRIPTLOG */ sub_1035( "SBA", "Locking left door for MID03.", 0 );
                 /* P_SETDOORLOCKED */ sub_46245( ref g_U1498, 1 );
            }
            g_U992 = 1;
            l_U436 = 13;
        }
        break;
        case 13:
        if ( /* PLAY_HOTEL_MID_03 */ sub_46411( 1, 0, 0 ))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136(), 0 );
            g_U993 = 1;
            l_U436 = 14;
        }
        break;
        case 14:
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U436 = 0;
         /* WRITESCRIPTLOG */ sub_1035( "AT", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
     /* P_HANDLE_IMAGEFX_MID_CP_01 */ sub_48172();
    if (l_U436 != iVar2)
    {
        l_U437 = 1;
    }
    else
    {
        l_U437 = 0;
    }
    return;
}

/* P_LOAD_ASSETS */ void sub_11360()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1035( "MW", "P_LOAD_ASSETS start", 0 );
     /* SETUP_SCRIPTED_SPEECH */ sub_11429( "SHOTAUD" );
    for ( I = 0; I < l_U976; I++ )
    {
         /* LOADMODEL */ sub_11618( l_U976[I], 1 );
    }
     /* P_LOAD_WEAPONS */ sub_11874();
     /* LOADISEQ */ sub_12077( 1009803174, 1 );
     /* LOADANIMDICT */ sub_12382( "EXPL_CAM", 0, 1 );
     /* LOADANIMDICT */ sub_12382( "LEVEL_S_HOTEL_CP_01", 0, 1 );
    if (g_U855 == 0)
    {
         /* LOADSEAMLESSCUTSCENE */ sub_12595( l_U265, 1 );
    }
     /* WRITESCRIPTLOG */ sub_1035( "MW", "P_LOAD_ASSETS end", 0 );
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_11429(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_11473();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_11473()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* LOADMODEL */ void sub_11618(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_5543( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_LOAD_WEAPONS */ void sub_11874()
{
     /* LOADWEAPON */ sub_11907( 811797242, 1 );
     /* LOADWEAPON */ sub_11907( -1013714740, 1 );
    return;
}

/* LOADWEAPON */ void sub_11907(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load weapon: {!f1} : {1} ###", 2, 1, 199730165, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADISEQ */ void sub_12077(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* LOADANIMDICT */ void sub_12382(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_12595(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_12978(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1035( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_5914( uParam0,  /* PLAYER_PED_ID */ sub_2136() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* MAL_TOGGLEWEAPONATTACHMENTTOWEAPON */ void sub_13250(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_13667()
{
     /* WRITESCRIPTLOG */ sub_1035( "MW", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U438 = 0;
    l_U439 = 0;
    l_U437 = 1;
    l_U935 = 0;
    l_U936 = 0;
    l_U801 = -1;
    l_U821 = -1;
    l_U659 = 0;
    l_U1067 = 0;
    g_U1789 = 0;
     /* P_INITIALIZE_SP_CHALLENGES */ sub_13808();
     /* WRITESCRIPTLOG */ sub_1035( "MW", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_13808()
{
    return;
}

/* P_SET_STATIC_DATA */ void sub_13905()
{
     /* WRITESCRIPTLOG */ sub_1035( "MW", "P_SET_STATIC_DATA start", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13997( ref l_U442[0], g_U1228, 0, -242176005, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13997( ref l_U442[1], g_U1232, 0, -523735065, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_14234( ref l_U482, "TRIGGER_WALK_MID02", 11.21000000, 6.82000000, -4.26000000, 3.70000000, 4.10000000, 3.49000000, 0.00000000, 0.00000000, 33.02000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_14234( ref l_U503, "TRIGGER_MID02", 13.22000000, 3.72000000, -4.26000000, 3.70000000, 4.10000000, 3.49000000, 0.00000000, 0.00000000, 33.02000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_14234( ref l_U660, "TRIG_CLOSE_EXIT_DOORS", -2.66000000, 0.82000000, -4.26000000, 3.02000000, 2.53000000, 3.50000000, 0.00000000, 0.00000000, 34.39000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_14234( ref l_U524, "TRIGGER_MID03", -9.95000000, 11.61000000, -4.26000000, 2.96000000, 4.10000000, 3.49000000, 0.00000000, 0.00000000, 33.02000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_14234( ref l_U554, "TRIGGER_MID03_WALK", -8.78000000, 10.99000000, -4.26000000, 6.00000000, 6.00000000, 3.49000000, 0.00000000, 0.00000000, 33.02000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_14234( ref l_U575, "tbImageFX_CP01", 16.08000000, 36.56000000, -4.84795000, 6.00000000, 6.00000000, 6.00000000, 0.00000000, 0.00000000, 33.02000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_14234( ref l_U596, "tbImageFX_CP02", 4.27200000, 27.87190000, -4.84795000, 6.00000000, 6.00000000, 6.00000000, 0.00000000, 0.00000000, 33.02000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_14234( ref l_U617, "tbImageFX_CP03", 9.16928000, 18.29560000, -4.84795000, 15.00000000, 6.00000000, 6.00000000, 0.00000000, 0.00000000, 33.02000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_14234( ref l_U638, "tbImageFX_CP04", 10.74570000, 5.42301000, -4.84795000, 6.00000000, 6.00000000, 6.00000000, 0.00000000, 0.00000000, 33.02000000, 1 );
     /* P_CREATEPOISTRUCTCOORD */ sub_14967( ref l_U712, 1, l_U798, l_U798, l_U798, 1.50000000, 3.00000000, 1, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_15918( ref l_U712, 30, "POI_GURNEY" );
     /* P_SET_POI_REUSABLE */ sub_16128( ref l_U712, 1 );
     /* P_SET_POI_FORCE_WALK */ sub_16181( ref l_U712, 0 );
     /* P_SET_POI_AVAILABLE */ sub_16236( ref l_U712, 0 );
     /* P_CREATEPOISTRUCTCOORD */ sub_14967( ref l_U822, 1, l_U908, l_U908, l_U908, 1.50000000, 3.00000000, 1, 0 );
     /* P_SET_INTERACTIVE_TEXT */ sub_15918( ref l_U822, 30, "POI_HOT_CRATE" );
     /* P_SET_POI_REUSABLE */ sub_16128( ref l_U822, 1 );
     /* P_SET_POI_FORCE_WALK */ sub_16181( ref l_U822, 0 );
     /* P_SET_POI_AVAILABLE */ sub_16236( ref l_U822, 0 );
     /* WRITESCRIPTLOG */ sub_1035( "MW", "P_SET_STATIC_DATA end", 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_13997(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_14234(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEPOISTRUCTCOORD */ void sub_14967(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_15007( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_15400( iParam0 );
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_15007(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_15400(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_15498( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_15498(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_15574( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_15574( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_15574( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_15574( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_15574( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_15574( iParam0, 0 );
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_15574(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_15918(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_15974( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_15974(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_SET_POI_REUSABLE */ void sub_16128(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

/* P_SET_POI_FORCE_WALK */ void sub_16181(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

/* P_SET_POI_AVAILABLE */ void sub_16236(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
     /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_16300( iParam0 );
    return;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_16300(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_16396( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_16396( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_16396(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2174() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_2136() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_2136() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_2136() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_2136() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_2136() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_2136() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* P_CREATE_PLACEMENTS */ void sub_17094()
{
     /* WRITESCRIPTLOG */ sub_1035( "MW", "P_CREATE_PLACEMENTS start", 0 );
     /* CLEANPLACEMENTARRAY */ sub_5301( ref l_U968 );
    l_U968[0] =  /* CREATEPLACEMENT */ sub_17211( -4072149, -10.10000000, -0.89000000, -2.56000000, g_U657, 0, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U968[0], ref g_U1282 );
     /* WRITESCRIPTLOG */ sub_1035( "MW", "P_CREATE_PLACEMENTS end", 0 );
    return;
}

/* CREATEPLACEMENT */ void sub_17211(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* LOAD_HOTEL_CUT_12_01_ASSETS */ void sub_17590()
{
     /* WRITESCRIPTLOG */ sub_1035( "RJM", "BLOCKLOAD_HOTEL_CUT_12_01_ASSETS", "***" );
     /* LOADMODEL */ sub_11618( 1912342970, 1 );
     /* LOADMODEL */ sub_11618( 1979959192, 1 );
     /* LOADMODEL */ sub_11618( -1425703854, 1 );
     /* LOADMODEL */ sub_11618( -764000169, 1 );
     /* LOADMODEL */ sub_11618( -1522400210, 1 );
    return;
}

/* PLAY_HOTEL_CUT_12_01 */ void sub_17840(boolean bParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, unknown uParam5, unknown uParam6)
{
    int Result;
    int iVar10;
    string sVar11;
    unknown uVar12;

    Result = 0;
    if (IS_STRING_NULL( uParam5 ))
    {
        uParam5 = l_U265;
    }
    switch (l_U246)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_1035( "RJM", "PLAY_HOTEL_CUT_12_01 start", "*****" );
         /* NIS_PRE_SETUP */ sub_18010( 1, 0, 0, 1 );
        if (NOT bParam0)
        {
             /* LOAD_HOTEL_CUT_12_01_ASSETS */ sub_17590();
            if ((uParam1._fU8 != 0.00000000) AND ((uParam1._fU4 != 0.00000000) AND (uParam1._fU0 != 0.00000000)))
            {
                 /* TELEPORTPED */ sub_18249(  /* PLAYER_PED_ID */ sub_2136(), uParam1, -90.00000000 );
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
                 /* WRITESCRIPTLOG */ sub_1035( "BSW", "teleporting Max to: ", 0 );
                 /* WRITE_VECTOR */ sub_18376( uParam1 );
            }
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2136(), 1 );
            LOAD_SCENE( uParam1 );
            WAIT( 1 );
            while (GET_NUMBER_OF_STREAMING_REQUESTS() > 0)
            {
                 /* WRITESCRIPTLOG */ sub_1035( "BSW", "PLAY_HOTEL_CUT_12_01 waiting for streaming", 0 );
                WAIT( 0 );
            }
            WAIT( 2000 );
        }
        else
        {
             /* LOADISEQ */ sub_12077( 1009803174, 1 );
            CUTSCENE_REGISTER_ISEQ( 1009803174 );
        }
        if (bParam0)
        {
             /* SET_HOTEL_WEATHER_AND_TOD */ sub_18588( uParam6 );
        }
        else if ( /* F_ARE_VECTORS_EQUAL */ sub_19050( uParam1, l_U234, 1 ))
        {
            iVar10 = 20;
            sVar11 = "SUNNY";
        }
        else if ( /* F_ARE_VECTORS_EQUAL */ sub_19050( uParam1, l_U240, 1 ))
        {
            iVar10 = 20;
            sVar11 = "CLOUDY";
        }
        else
        {
            iVar10 = 20;
            sVar11 = "EXTRASUNNY";
        }
        SET_TIME_OF_DAY( iVar10, 0 );
        FREEZE_TIME_OF_DAY( iVar10, 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( sVar11 );
        SET_WEATHER_TRANSITION_IMMEDIATE( 1 );;
         /* LOADSEAMLESSCUTSCENE */ sub_12595( uParam5, 1 );
        l_U297 = 0;
        if (ARE_STRINGS_EQUAL( uParam5, l_U265 ))
        {
             /* WRITESCRIPTLOG */ sub_1035( "BSW", "PLAY_HOTEL_CUT_12_01 get ready to twiddle the weather!", 0 );
            l_U298 = 1;
        }
        else
        {
            l_U298 = 0;
        }
         /* CREATE_CUTSCENE_ONLY_12_01_STUFF */ sub_19368();
         /* REGISTER_PEDS_HOTEL_CUT_12_01 */ sub_21907( ref l_U266 );
        CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
        CUTSCENE_ENABLE_SKIP( 0 );
        l_U246 = 2;
        break;
        case 2:
        if ((NOT CUTSCENE_IS_WAITING_FOR_MOVIE()) || (NOT IS_TRANSITION_MOVIE_PLAYING()))
        {
            if (bParam4)
            {
                START_CUTSCENE_CAPTURE( uParam5 );
            }
            START_SEAMLESS_CUTSCENE();
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
            l_U246 = 3;
        }
        break;
        case 3:
        l_U246 = 4;
        break;
        case 4:
        if (l_U298)
        {
            if ((GET_CUTSCENE_TIME_MS() > 100149) AND (l_U297 == 0))
            {
                SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
                SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
                 /* WRITESCRIPTLOG */ sub_1035( "BSW", "PLAY_HOTEL_CUT_12_01 twiddle 1, cloudy", 0 );
                l_U297++;
            }
            else if ((GET_CUTSCENE_TIME_MS() > 125437) AND (l_U297 == 1))
            {
                SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
                SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
                 /* WRITESCRIPTLOG */ sub_1035( "BSW", "PLAY_HOTEL_CUT_12_01 twiddle 2, EXTRASUNNY", 0 );
                l_U297++;
            }
        }
        if (GET_CUTSCENE_TIME_MS() > 174099)
        {
            CUTSCENE_ENABLE_SKIP( 1 );
        }
        if (NOT l_U296)
        {
            if (GET_CUTSCENE_TIME_MS() > 135641)
            {
                 /* WRITESCRIPTLOG */ sub_1035( "MF", "Starting Music Cue 1.2", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "HOTEL_SONG", "HOTEL_SONG_1", "", 0, 8000, 0, -1082130432, 0 );
                l_U296 = 1;
            }
        }
        if (HAS_CUTSCENE_FINISHED())
        {
             /* P_PLAYER_UNHOLSTER_WEAPONS */ sub_25632( l_U247, 1 );
             /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_23378( l_U247, 1 );
             /* P_SET_PED_ALL_WEAPON_VISIBILITY */ sub_23516(  /* PLAYER_PED_ID */ sub_2136(), 1 );
            l_U246 = 5;
            break;
        }
        return 0;
        case 5:
        if (bParam4)
        {
            STOP_CUTSCENE_CAPTURE();
        }
         /* CLEANPEDARRAY */ sub_5143( ref l_U266 );
         /* CLEANVEHICLE */ sub_25899( l_U282 );
         /* CLEANVEHICLE */ sub_25899( l_U283 );
         /* CLEANVEHICLEARRAY */ sub_25982( ref l_U288 );
         /* CLEANVEHICLEARRAY */ sub_25982( ref l_U284 );
         /* CLEANVEHICLEARRAY */ sub_25982( ref l_U292 );
         /* UNLOAD_HOTEL_CUT_12_01_ASSETS */ sub_26078();
        if (IS_SCREEN_FADED_OUT())
        {
             /* WRITESCRIPTLOG */ sub_1035( "BSW", "cutscene skipped, force some loading", 0 );
             /* TELEPORTPED */ sub_18249(  /* PLAYER_PED_ID */ sub_2136(), g_U1020[1], g_U1123[1] );
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2136(), 1 );
            uVar12 = GET_INTERIOR_AT_COORDS( g_U1020[1] );
            SET_INTERIOR_ACTIVE( uVar12, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar12, GET_HASH_KEY( ref g_U1258 ) );
            WAIT( 1 );
            while (GET_NUMBER_OF_STREAMING_REQUESTS() > 0)
            {
                 /* WRITESCRIPTLOG */ sub_1035( "BSW", "WAITING FOR STREAMING 1", 0 );
                WAIT( 0 );
            }
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2136(), 0 );
        }
        Result = 1;
         /* NIS_POST_SETUP */ sub_26619( 1, 1 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_01", "B_OUT_MID_01_HOTEL_FWD_CAM", 1, 17.76000000, 45.46000000, -1.87000000, 0.00000000, 0, 0 );
        SET_ALL_VEHICLES_HIGH_LOD( 0 );
        l_U246 = 0;
         /* WRITESCRIPTLOG */ sub_1035( "RJM", "PLAY_HOTEL_CUT_12_01 end", "*****" );
        break;
        case 0:
        l_U246 = 1;
        break;
    }
    return Result;
}

/* NIS_PRE_SETUP */ void sub_18010(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2174(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_2136(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_2136() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_2136(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* TELEPORTPED */ void sub_18249(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* WRITE_VECTOR */ void sub_18376(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* SET_HOTEL_WEATHER_AND_TOD */ void sub_18588(unknown uParam0)
{
    int iVar3;
    string sVar4;

    switch (uParam0)
    {
        case 20:
        case 0:
        iVar3 = 20;
        sVar4 = "SUNNY";
        break;
        case 1:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
        case 2:
        case 3:
        case 4:
        iVar3 = 9;
        sVar4 = "SUNNY";
        break;
        case 5:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
        case 6:
        case 7:
        case 8:
        case 9:
        iVar3 = 9;
        sVar4 = "SUNNY_WINDY";
        break;
        case 10:
        iVar3 = 12;
        sVar4 = "SUNNY_WINDY";
        break;
        default:
        iVar3 = 12;
        sVar4 = "SUNNY";
        break;
    }
    PRINTSTRING( "SET_HOTEL_WEATHER_AND_TOD - checkpoint #" );
    PRINTINT( uParam0 );
    PRINTSTRING( " hour: " );
    PRINTINT( iVar3 );
    PRINTSTRING( " weather: " );
    PRINTSTRING( sVar4 );
    PRINTNL();
    SET_TIME_OF_DAY( iVar3, 0 );
    FREEZE_TIME_OF_DAY( iVar3, 0 );
    SET_WEATHER_TYPE_NOW_PERSIST( sVar4 );
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    return;
}

/* F_ARE_VECTORS_EQUAL */ int sub_19050(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    if ((GET_DISTANCE_BETWEEN_COORDS( uParam0, uParam3, uParam6 )) == 0)
    {
        return 1;
        break;
    }
    return 0;
}

/* CREATE_CUTSCENE_ONLY_12_01_STUFF */ void sub_19368()
{
    int I;

     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13997( ref l_U268[0], 0, 0, 0, 0, -1694940103, 26, 6, 0, 0, 0 );
    for ( I = 0; I <= (l_U266 - 1); I++ )
    {
        l_U266[I] =  /* CREATEPED */ sub_19469( ref l_U268[I] );
    }
    l_U282 =  /* CREATEVEHICLE */ sub_20226( 1979959192, 318.86200000, 363.61200000, -3.33285000, 360.00000000, 1, 0, 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U282 )))
    {
        SET_VEHICLE_ON_GROUND_PROPERLY( l_U282 );
        SET_VEHICLE_PROOFS( l_U282, 1, 1, 1, 1, 1 );
        SET_VEHICLE_CAN_BE_DAMAGED( l_U282, 0 );
        SET_VEHICLE_LIGHTS( l_U282, 1 );
        SET_VEHICLE_COLOUR_COMBINATION( l_U282, 0 );
        SET_VEHICLE_EXTRA( l_U282, 0, 1 );
        SET_VEHICLE_EXTRA( l_U282, 1, 1 );
        SET_VEHICLE_EXTRA( l_U282, 2, 1 );
        SET_VEHICLE_EXTRA( l_U282, 3, 1 );
        SET_VEHICLE_EXTRA( l_U282, 4, 1 );
        SET_VEHICLE_EXTRA( l_U282, 5, 1 );
        SET_VEHICLE_EXTRA( l_U282, 6, 1 );
        SET_VEHICLE_EXTRA( l_U282, 7, 1 );
        SET_VEHICLE_EXTRA( l_U282, 8, 1 );
    }
    l_U283 =  /* CREATEVEHICLE */ sub_20226( 1979959192, 0, 0, 0, 360.00000000, 1, 0, 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U283 )))
    {
        SET_VEHICLE_PROOFS( l_U283, 1, 1, 1, 1, 1 );
        SET_VEHICLE_CAN_BE_DAMAGED( l_U283, 0 );
        SET_VEHICLE_LIGHTS( l_U283, 1 );
        SET_VEHICLE_COLOUR_COMBINATION( l_U283, 1 );
        SET_VEHICLE_EXTRA( l_U283, 0, 1 );
        SET_VEHICLE_EXTRA( l_U283, 1, 1 );
        SET_VEHICLE_EXTRA( l_U283, 2, 1 );
        SET_VEHICLE_EXTRA( l_U283, 3, 1 );
        SET_VEHICLE_EXTRA( l_U283, 4, 1 );
        SET_VEHICLE_EXTRA( l_U283, 5, 1 );
        SET_VEHICLE_EXTRA( l_U283, 6, 1 );
        SET_VEHICLE_EXTRA( l_U283, 7, 1 );
        SET_VEHICLE_EXTRA( l_U283, 8, 1 );
    }
    for ( I = 0; I <= (l_U284 - 1); I++ )
    {
        l_U284[I] =  /* CREATEVEHICLE */ sub_20226( -1522400210, 0, 0, 0, 360.00000000, 1, 0, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U284[I] )))
        {
            SET_VEHICLE_PROOFS( l_U284[I], 1, 1, 1, 1, 1 );
            SET_VEHICLE_CAN_BE_DAMAGED( l_U284[I], 0 );
            SET_VEHICLE_COLOUR_COMBINATION( l_U284[I], I );
            SET_VEHICLE_EXTRA( l_U284[I], 0, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 1, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 2, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 3, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 4, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 5, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 6, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 7, 1 );
            SET_VEHICLE_EXTRA( l_U284[I], 8, 1 );
        }
    }
    for ( I = 0; I <= (l_U288 - 1); I++ )
    {
        l_U288[I] =  /* CREATEVEHICLE */ sub_20226( -764000169, 0, 0, 0, 360.00000000, 1, 0, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U288[I] )))
        {
            SET_VEHICLE_PROOFS( l_U288[I], 1, 1, 1, 1, 1 );
            SET_VEHICLE_CAN_BE_DAMAGED( l_U288[I], 0 );
            SET_VEHICLE_COLOUR_COMBINATION( l_U288[I], I );
            SET_VEHICLE_EXTRA( l_U288[I], 0, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 1, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 2, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 3, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 4, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 5, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 6, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 7, 1 );
            SET_VEHICLE_EXTRA( l_U288[I], 8, 1 );
        }
    }
    for ( I = 0; I <= (l_U292 - 1); I++ )
    {
        l_U292[I] =  /* CREATEVEHICLE */ sub_20226( -1425703854, 0, 0, 0, 360.00000000, 1, 0, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U292[I] )))
        {
            SET_VEHICLE_PROOFS( l_U292[I], 1, 1, 1, 1, 1 );
            SET_VEHICLE_CAN_BE_DAMAGED( l_U292[I], 0 );
            SET_VEHICLE_COLOUR_COMBINATION( l_U292[I], I );
            SET_VEHICLE_EXTRA( l_U292[I], 0, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 1, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 2, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 3, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 4, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 5, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 6, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 7, 1 );
            SET_VEHICLE_EXTRA( l_U292[I], 8, 1 );
        }
    }
    SET_ALL_VEHICLES_HIGH_LOD( 1 );
    return;
}

/* CREATEPED */ void sub_19469(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_11618( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_19960( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_20061( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_19960(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_20061(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* CREATEVEHICLE */ void sub_20226(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_11618( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* REGISTER_PEDS_HOTEL_CUT_12_01 */ void sub_21907(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1035( "RJM", "REGISTER_PEDS_HOTEL_CUT_12_01", "***" );
    if ( /* IS_MAX_VALID */ sub_10540())
    {
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_22014( ref l_U247, 1, 1 );
         /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_23378( l_U247, 0 );
         /* P_SET_PED_ALL_WEAPON_VISIBILITY */ sub_23516(  /* PLAYER_PED_ID */ sub_2136(), 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_2136(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_2136(), g_U1020[1], g_U1123[1] );
        ISEQ_REGISTER_ENTITY( 1009803174, "max",  /* PLAYER_PED_ID */ sub_2136(), 0 );
    }
     /* REGISTER_PED_WITH_12_01 */ sub_24449( ref (uParam0^)[0], "Wlsn_Undr_1a" );
    if ( /* IS_VEHICLE_VALID */ sub_24536( l_U282 ))
    {
         /* WRITESCRIPTLOG */ sub_1035( "RJM", "REGISTER_VEHICLE_WITH_12_01", "***" );
        CUTSCENE_REGISTER_VEHICLE_COPY( l_U282, "car_detective" );
        SET_VEHICLE_NAME_DEBUG( l_U282, "car_detective" );
    }
     /* REGISTER_VEHICLE_WITH_12_01 */ sub_24733( ref l_U283, "car_detective^1" );
     /* REGISTER_VEHICLE_WITH_12_01 */ sub_24733( ref l_U288[0], "car_brzhatch" );
     /* REGISTER_VEHICLE_WITH_12_01 */ sub_24733( ref l_U288[1], "car_brzhatch^1" );
     /* REGISTER_VEHICLE_WITH_12_01 */ sub_24733( ref l_U288[2], "car_brzhatch^2" );
     /* REGISTER_VEHICLE_WITH_12_01 */ sub_24733( ref l_U284[0], "car_brzsedan" );
     /* REGISTER_VEHICLE_WITH_12_01 */ sub_24733( ref l_U284[1], "car_brzsedan^1" );
     /* REGISTER_VEHICLE_WITH_12_01 */ sub_24733( ref l_U284[2], "car_brzsedan^2" );
     /* REGISTER_VEHICLE_WITH_12_01 */ sub_24733( ref l_U292[0], "felino" );
     /* REGISTER_VEHICLE_WITH_12_01 */ sub_24733( ref l_U292[1], "felino^1" );
     /* REGISTER_VEHICLE_WITH_12_01 */ sub_24733( ref l_U292[2], "felino^2" );
    return;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_22014(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_22053( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2136(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_22254( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_22508( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2136(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2136(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2136(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2136(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2136(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2136(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2136(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2136(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2136(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_22508( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2136(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2136(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2136(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_22053(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_22254(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* IS_WEAPON_TWO_HANDED */ int sub_22508(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_SET_TWO_HANDED_WEAPON_VISIBLE */ void sub_23378(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

/* P_SET_PED_ALL_WEAPON_VISIBILITY */ void sub_23516(unknown uParam0, unknown uParam1)
{
     /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY", 0 );
     /* WRITE_BOOL */ sub_23608( uParam1 );
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHAND_LEFT", 0 );
         /* WRITE_INT */ sub_1459( GET_WEAPON_FROM_HAND( uParam0, 1, 0 ) );
        if ((GET_WEAPON_FROM_HAND( uParam0, 1, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HAND( uParam0, 1, 0 ), uParam1 );
        }
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHAND_RIGHT", 0 );
         /* WRITE_INT */ sub_1459( GET_WEAPON_FROM_HAND( uParam0, 0, 0 ) );
        if ((GET_WEAPON_FROM_HAND( uParam0, 0, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HAND( uParam0, 0, 0 ), uParam1 );
        }
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHOLSTER_PISTOL_LEFT", 0 );
         /* WRITE_INT */ sub_1459( GET_WEAPON_FROM_HOLSTER( uParam0, 1 ) );
        if ((GET_WEAPON_FROM_HOLSTER( uParam0, 1 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( uParam0, 1 ), uParam1 );
        }
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHOLSTER_PISTOL_RIGHT", 0 );
         /* WRITE_INT */ sub_1459( GET_WEAPON_FROM_HOLSTER( uParam0, 0 ) );
        if ((GET_WEAPON_FROM_HOLSTER( uParam0, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( uParam0, 0 ), uParam1 );
        }
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHOLSTER_RIFLE", 0 );
         /* WRITE_INT */ sub_1459( GET_WEAPON_FROM_HOLSTER( uParam0, 2 ) );
        if ((GET_WEAPON_FROM_HOLSTER( uParam0, 2 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( uParam0, 2 ), uParam1 );
        }
    }
    return;
}

/* WRITE_BOOL */ void sub_23608(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* REGISTER_PED_WITH_12_01 */ void sub_24449(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_10570( (uParam0^) ))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam0^), uParam1, 1 );
        SET_PED_NAME_DEBUG( (uParam0^), uParam1 );
    }
    return;
}

/* IS_VEHICLE_VALID */ int sub_24536(unknown uParam0)
{
    if ((NOT (IS_VEHICLE_DEAD( uParam0 ))) AND (DOES_VEHICLE_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

/* REGISTER_VEHICLE_WITH_12_01 */ void sub_24733(unknown uParam0, unknown uParam1)
{
    if ( /* IS_VEHICLE_VALID */ sub_24536( (uParam0^) ))
    {
         /* WRITESCRIPTLOG */ sub_1035( "RJM", "REGISTER_VEHICLE_WITH_12_01", "***" );
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( (uParam0^), uParam1, 0 );
        SET_VEHICLE_NAME_DEBUG( (uParam0^), uParam1 );
    }
    return;
}

/* P_PLAYER_UNHOLSTER_WEAPONS */ void sub_25632(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0)
    {
        uVar21 = uParam0._fU0._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
        {
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2136(), uVar21, 0, uParam18 );
        }
        uVar22 = uParam0._fU12._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
        {
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2136(), uVar22, 1, uParam18 );
        }
        uVar23 = uParam0._fU24._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar23 )) == 1)
        {
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2136(), uVar23, 0, uParam18 );
        }
    }
    return;
}

/* CLEANVEHICLE */ void sub_25899(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* CLEANVEHICLEARRAY */ void sub_25982(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANVEHICLE */ sub_25899( (uParam0^)[I] );
    }
    return;
}

/* UNLOAD_HOTEL_CUT_12_01_ASSETS */ void sub_26078()
{
     /* WRITESCRIPTLOG */ sub_1035( "RJM", "UNLOAD_HOTEL_CUT_12_01_ASSETS", "***" );
     /* UNLOADMODEL */ sub_26174( 1912342970 );
     /* UNLOADMODEL */ sub_26174( 1979959192 );
     /* UNLOADMODEL */ sub_26174( -1425703854 );
     /* UNLOADMODEL */ sub_26174( -764000169 );
     /* UNLOADMODEL */ sub_26174( -1522400210 );
    return;
}

/* UNLOADMODEL */ void sub_26174(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_5543( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* NIS_POST_SETUP */ void sub_26619(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2174(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_2136(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_26717();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_26717()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2136(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2136(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_2136(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_2136(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* HANDLE_MID_01_BLENDOUT */ void sub_27097()
{
    int Result;

    Result = 0;
    switch (l_U438)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_1035( "bsw", "HANDLE_MID_01_BLENDOUT  start", 0 );
        g_U855 = 1;
        if (NOT l_U400._fU0)
        {
             /* P_SAVE_HOTEL_PLAYER_DATA_CHECKPOINT */ sub_27282( ref l_U400, g_U855,  /* PLAYER_PED_ID */ sub_2136(), g_U1020[1], g_U1123[1], g_U1158[1], g_U1193[1], 0 );
        }
        START_CONTEXT( "HOTEL_TO_END" );
         /* NIS_PRE_SETUP */ sub_18010( 1, 0, 0, 1 );
         /* WRITESCRIPTLOG */ sub_1035( "bsw", "HANDLE_MID_01_BLENDOUT - BLENDOUT_START", 0 );
        if ((ISEQ_QUERY_STATE( 1009803174, 3 )) == 0)
        {
             /* WRITESCRIPTLOG */ sub_1035( "bsw", "starting HANDLE_MID_01_BLENDOUT WITHOUT the cutscene", 0 );
             /* LOADISEQ */ sub_12077( 1009803174, 1 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_01", "B_OUT_MID_01_HOTEL_FWD_CAM", 1, 17.76000000, 45.46000000, -1.87000000, 0.00000000, 0, 0 );
             /* TELEPORTPED */ sub_18249(  /* PLAYER_PED_ID */ sub_2136(), g_U1020[1], g_U1123[1] );
            ISEQ_REGISTER_ENTITY( 1009803174, "max",  /* PLAYER_PED_ID */ sub_2136(), 0 );
            ISEQ_START( 1009803174 );
        }
         /* CREATETIMER */ sub_3126( ref l_U1077, l_U1086, 1, 0 );
         /* STARTTIMER */ sub_3276( ref l_U1077 );
         /* CREATETIMER */ sub_3126( ref l_U1068, l_U1087, 1, 0 );
         /* STARTTIMER */ sub_3276( ref l_U1068 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[1], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1193[1], 1065353216, 0 );
        DO_SCREEN_FADE_IN( 0 );
        l_U438 = 2;
        break;
        case 2:
        if ( /* ISTIMERDONE */ sub_3409( ref l_U1068 ))
        {
             /* WRITESCRIPTLOG */ sub_1035( "bsw", "HANDLE_MID_01_BLENDOUT simulating player input", 0 );
            SIMULATE_PLAYER_INPUT_GAIT(  /* PLAYER_ID */ sub_2174(), 2, l_U1088, 0 );
        }
        if ( /* ISTIMERDONE */ sub_3409( ref l_U1077 ))
        {
             /* WRITESCRIPTLOG */ sub_1035( "bsw", "HANDLE_MID_01_BLENDOUT stopping camera", 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1158[1], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1193[1], 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 1250, 1 );
            l_U438 = 3;
        }
        break;
        case 3:
        Result = 1;
         /* NIS_POST_SETUP */ sub_26619( 1, 1 );
        break;
    }
    return Result;
}

/* P_SAVE_HOTEL_PLAYER_DATA_CHECKPOINT */ void sub_27282(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* SAVE_WATERBOTTLE_STATE */ sub_27332( uParam0 );
     /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_27570( uParam0, uParam1, uParam2, uParam3, uParam6, uParam7, uParam8, uParam9 );
    return;
}

/* SAVE_WATERBOTTLE_STATE */ void sub_27332(int iParam0)
{
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_1035( "BSW", "SAVE_WATERBOTTLE_STATE start", 0 );
    uVar3 =  /* GET_WATERBOTTLE_FROM_PLAYER */ sub_10448();
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        iParam0->_fU48 = GET_SUPPRESSOR_DAMAGE_LEVEL( uVar3 );
        DISPLAYF( "SAVE_WATERBOTTLE_STATE found water bottle suppressor - saving the state: {}", 1, 513, iParam0->_fU48 );
    }
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_27570(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_1035( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_1035( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_9136( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_27861( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_28338( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_28338( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28598( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_28338( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28598( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28598( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_28338( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28598( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28598( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28598( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_28338( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28598( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28598( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28598( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_28598( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_30178( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1035( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_27861(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_6195( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_1035( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_1035( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_28338(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_28598(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_30178(int iParam0)
{
     /* WRITE_STRING */ sub_5543( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_18376( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_30298( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_30298( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_30298( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_30298( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_30298( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_23608( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU52 );
     /* WRITE_STRING */ sub_5543( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU96 );
     /* WRITE_STRING */ sub_5543( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU100 );
     /* WRITE_STRING */ sub_5543( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU104 );
     /* WRITE_STRING */ sub_5543( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU108 );
     /* WRITE_STRING */ sub_5543( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU112 );
     /* WRITE_STRING */ sub_5543( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU116 );
     /* WRITE_STRING */ sub_5543( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU120 );
     /* WRITE_STRING */ sub_5543( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU124 );
     /* WRITE_STRING */ sub_5543( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU128 );
     /* WRITE_STRING */ sub_5543( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_1459( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_1459( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_1459( 144 );
    return;
}

/* WRITE_FLOAT */ void sub_30298(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* P_CREATE_GURNEYS */ void sub_32756()
{
     /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_CREATE_GURNEYS", "***" );
     /* P_SETUP_FURNACE_OBJECT */ sub_32842( ref g_U1787, -1408208001, l_U700, l_U703 );
     /* P_SET_HOTEL_OBJECT_VISIBILITY */ sub_33283( g_U1787, 0 );
     /* P_SETUP_FURNACE_OBJECT */ sub_32842( ref g_U1788, -1408208001, l_U706, l_U709 );
     /* P_SET_HOTEL_OBJECT_VISIBILITY */ sub_33283( g_U1788, 0 );
    return;
}

/* P_SETUP_FURNACE_OBJECT */ void sub_32842(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_SETUP_FURNACE_OBJECT", "***" );
     /* CLEANOBJECT */ sub_5005( (uParam0^) );
    (uParam0^) =  /* CREATEOBJECT */ sub_32938( uParam1, uParam2, uParam5, 0, 0, 0 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), ref g_U1274 );
    FREEZE_OBJECT_POSITION( (uParam0^), 1 );
    return;
}

/* CREATEOBJECT */ void sub_32938(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_11618( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_SET_HOTEL_OBJECT_VISIBILITY */ void sub_33283(unknown uParam0, unknown uParam1)
{
     /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_SET_HOTEL_OBJECT_VISIBILITY", "***" );
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
         /* WRITE_BOOL */ sub_23608( uParam1 );
        SET_OBJECT_VISIBLE( uParam0, uParam1 );
    }
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_33466(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_3126( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_3276( uParam0 );
    return;
}

/* TAKE_PAINKILLER_ARRAY_SNAPSHOT */ void sub_33537(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_PLACEMENT_EXIST( (uParam0^)[I] ))
        {
             /* WRITESCRIPTLOG */ sub_1035( "RJM", "DO_ANY_PAINKILLERS_STILL_EXIST - Found a pill in there, we can still play some V.O.", 0 );
            (uParam1^)[I] = 1;
        }
        else
        {
            (uParam1^)[I] = 0;
        }
    }
    return;
}

/* P_SPEECH_PLAY_MONOLOGUE */ void sub_33796(unknown uParam0, unknown uParam1)
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_33834( uParam1 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_33943( 0,  /* PLAYER_PED_ID */ sub_2136(), "MAX", uParam1, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_33943( 1,  /* PLAYER_PED_ID */ sub_2136(), "MAX", uParam1, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_34196( uParam0, uParam1, 8, 1 );
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_33834(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_33943(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_34196(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_34241( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_34241(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_34328( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_34328(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_34380( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_34898( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_34380(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_34898(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* UPDATE_FORCEWALK_AND_TRIGGER_PAIR */ int sub_35115(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, boolean bParam42)
{
    if ( /* IS_MAX_VALID */ sub_10540())
    {
        if ((NOT (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136() ))) AND ( /* F_ISPLAYERINTRIGGERBOX */ sub_35174( uParam0 )))
        {
             /* WRITESCRIPTLOG */ sub_1035( "RJM", "UPDATE_FORCEWALK_AND_TRIGGER_PAIR - Force walk enabled", 0 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136(), 1 );
        }
        else if ((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136() )) AND (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_35174( uParam0 ))))
        {
             /* WRITESCRIPTLOG */ sub_1035( "RJM", "UPDATE_FORCEWALK_AND_TRIGGER_PAIR - Force walk disabled", 0 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136(), 0 );
        }
    }
    if ( /* F_ISPLAYERINTRIGGERBOX */ sub_35174( uParam21 ))
    {
        if (bParam42)
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136(), 0 );
        }
        return 1;
    }
    return 0;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_35174(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_35217(  /* PLAYER_PED_ID */ sub_2136(), uParam0 );
}

/* F_ISPEDINTRIGGERBOX */ int sub_35217(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* CREATE_FURNACE_GUYS */ void sub_35568()
{
     /* WRITESCRIPTLOG */ sub_1035( "BSW", "creating furnace guys", 0 );
     /* LOADMODEL */ sub_11618( l_U975, 1 );
    l_U469[0] =  /* CREATEPED */ sub_19469( ref l_U442[0] );
    l_U469[1] =  /* CREATEPED */ sub_19469( ref l_U442[1] );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_35705( ref l_U469, "furnaceGuys" );
     /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_35840( ref l_U469, 1 );
     /* P_DEACTIVATEPEDARRAY */ sub_36032( ref l_U469 );
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_35705(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ void sub_35840(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_35923( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ void sub_35923(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_10570( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

/* P_DEACTIVATEPEDARRAY */ void sub_36032(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_DEACTIVATEPED */ sub_36086( (uParam0^)[I] );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_36086(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* P_ACTIVATEPEDARRAY */ void sub_36232(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_36284( (uParam0^)[I] );
    }
    return;
}

/* P_ACTIVATEPED */ void sub_36284(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* PLAY_HOTEL_MID_02 */ void sub_36434(boolean bParam0, unknown uParam1, boolean bParam2, unknown uParam3)
{
    int Result;
    int iVar7;

    Result = 0;
    if (IS_STRING_NULL( uParam3 ))
    {
        uParam3 = l_U348;
    }
    switch (l_U299)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "PLAY_HOTEL_MID_02 start", "*****" );
         /* LOADSEAMLESSCUTSCENE */ sub_12595( uParam3, 1 );
        if (NOT bParam0)
        {
             /* BLOCKLOAD_HOTEL_MID_02_ASSETS */ sub_36609();
        }
        else
        {
             /* LOADISEQ */ sub_12077( 710130669, 1 );
        }
        if (bParam0)
        {
             /* WRITESCRIPTLOG */ sub_1035( "BSW", "registering S_HOTEL_BLENDOUT_MID_02 with the cutscene", "*****" );
             /* REGISTER_PEDS_HOTEL_MID_02 */ sub_37206( uParam1 );
            CUTSCENE_REGISTER_ISEQ( 710130669 );
        }
        else
        {
             /* CREATE_PEDS_MID_02 */ sub_38195();
             /* REGISTER_PEDS_HOTEL_MID_02 */ sub_37206( ref l_U345 );
        }
         /* NIS_PRE_SETUP */ sub_18010( 1, 0, 0, 0 );
        l_U299 = 2;
        break;
        case 2:
        if (bParam2)
        {
            START_CUTSCENE_CAPTURE( uParam3 );
        }
        START_SEAMLESS_CUTSCENE();
        l_U299 = 3;
        break;
        case 3:
        l_U299 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
             /* P_PLAYER_UNHOLSTER_WEAPONS */ sub_25632( l_U300, 1 );
             /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_23378( l_U300, 1 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_01", "B_OUT_MID_02_HOTEL_CAM", 1, 15.31680000, 0.19296800, -2.64646400, 0, 0, 0 );
            l_U299 = 5;
        }
        else
        {
            iVar7 = GET_CUTSCENE_TIME_MS();
            if ((iVar7 > 18000) AND (NOT g_U1789))
            {
                 /* P_SET_HOTEL_OBJECT_VISIBILITY */ sub_33283( g_U1787, 1 );
                 /* P_SET_HOTEL_OBJECT_VISIBILITY */ sub_33283( g_U1788, 1 );
                g_U1789 = 1;
            }
        }
        break;
        case 5:
        if (bParam2)
        {
            STOP_CUTSCENE_CAPTURE();
        }
        if (NOT g_U1789)
        {
             /* P_SET_HOTEL_OBJECT_VISIBILITY */ sub_33283( g_U1787, 1 );
             /* P_SET_HOTEL_OBJECT_VISIBILITY */ sub_33283( g_U1788, 1 );
        }
         /* TELEPORTPED */ sub_18249(  /* PLAYER_PED_ID */ sub_2136(), 13.97343000, 2.02557100, -3.90012500, 192.00000000 );
        SET_ROOM_FOR_PED_BY_NAME(  /* PLAYER_PED_ID */ sub_2136(), "room_rubble" );
        if (l_U220 != 4)
        {
            l_U220 = 4;
        }
        if (NOT bParam0)
        {
             /* CLEANUP_MID_02_PEDS */ sub_38738();
             /* UNLOAD_MID_02_ASSETS */ sub_38826();
        }
        Result = 1;
         /* NIS_POST_SETUP */ sub_26619( 1, 1 );
        l_U299 = 0;
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "PLAY_HOTEL_MID_02 end", "*****" );
        break;
        case 0:
        l_U299 = 1;
        break;
    }
    return Result;
}

/* BLOCKLOAD_HOTEL_MID_02_ASSETS */ void sub_36609()
{
     /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_SETUP_HOTEL_MID_02", "***" );
     /* BLOCKLOADMODEL */ sub_36696( 762297658 );
    return;
}

/* BLOCKLOADMODEL */ void sub_36696(unknown uParam0)
{
    DISPLAYF( "[MSWW]### Trying to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_5543( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
        WAIT( 0 );
    }
    DISPLAYF( "[MSWW]### Has loaded model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
    return;
}

/* REGISTER_PEDS_HOTEL_MID_02 */ void sub_37206(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1035( "SBA", "REGISTER_PEDS_HOTEL_MID_02", "***" );
    if ( /* IS_MAX_VALID */ sub_10540())
    {
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_22014( ref l_U300, 1, 1 );
         /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_23378( l_U300, 0 );
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_37325( 1 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_2136(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2136(), 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
    }
    if ( /* IS_PED_VALID */ sub_10570( (uParam0^)[0] ))
    {
         /* WRITESCRIPTLOG */ sub_1035( "BSW", "REGISTER_PEDS_HOTEL_MID_02 registering ped0", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam0^)[0], "H_Crac_Sold_A^1", 0 );
        ISEQ_REGISTER_ENTITY( 710130669, "cp1", (uParam0^)[0], 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( (uParam0^)[0], g_U1228, g_U1231 );
    }
    if ( /* IS_PED_VALID */ sub_10570( (uParam0^)[1] ))
    {
         /* WRITESCRIPTLOG */ sub_1035( "BSW", "REGISTER_PEDS_HOTEL_MID_02 registering ped1", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam0^)[1], "H_Crac_Sold_A", 0 );
        ISEQ_REGISTER_ENTITY( 710130669, "cp2", (uParam0^)[1], 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( (uParam0^)[1], g_U1232, g_U1235 );
    }
    return;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_37325(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2136(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_22254( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_37473();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2136(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_37473()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2136(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_22254( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2136(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2136(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2136(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* CREATE_PEDS_MID_02 */ void sub_38195()
{
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13997( ref l_U318[0], 0.00000000, 0.00000000, 0.00000000, 0, -242176005, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13997( ref l_U318[1], 0.00000000, 0.00000000, 0.00000000, 0, -523735065, 7, 3, 2, 0, 0 );
    l_U345[0] =  /* CREATEPED */ sub_19469( ref l_U318[0] );
    l_U345[1] =  /* CREATEPED */ sub_19469( ref l_U318[1] );
    return;
}

/* CLEANUP_MID_02_PEDS */ void sub_38738()
{
     /* WRITESCRIPTLOG */ sub_1035( "SBA", "CLEANUP_MID_02_PEDS", "***" );
     /* CLEANPEDARRAY */ sub_5143( ref l_U345 );
    return;
}

/* UNLOAD_MID_02_ASSETS */ void sub_38826()
{
     /* UNLOADMODEL */ sub_26174( 762297658 );
    return;
}

/* HANDLE_MID_02_BLENDOUT */ void sub_38980()
{
    int Result;

    Result = 0;
    switch (l_U439)
    {
        case 0:
         /* NIS_PRE_SETUP */ sub_18010( 1, 0, 0, 1 );
         /* WRITESCRIPTLOG */ sub_1035( "bsw", "HANDLE_MID_02_BLENDOUT - BLENDOUT_START", 0 );
        if ( /* IS_MAX_VALID */ sub_10540())
        {
            CLEAR_PED_TASKS(  /* PLAYER_PED_ID */ sub_2136() );
             /* TELEPORTPED */ sub_18249(  /* PLAYER_PED_ID */ sub_2136(), 14.36410000, 1.10358600, -3.90012500, 213.79100000 );
            SNAP_PLAYER_TO_COVERPOINT(  /* PLAYER_ID */ sub_2174(), "GenCover", "E42C85C2_D680D911_Corner1", 1 );
        }
        DO_SCREEN_FADE_IN( 0 );
        l_U439 = 1;
        break;
        case 1:
        if ( /* F_IS_ACTION_INTENTION_STATUS_REACHED */ sub_39254( l_U469[1], 47, 3 ))
        {
             /* WRITESCRIPTLOG */ sub_1035( "SBA", "HANDLE_MID_02_BLENDOUT: Pick Up Rifle", 0 );
             /* CLEANPLACEMENT */ sub_5356( l_U961 );
             /* F_GIVEPEDWEAPON */ sub_8362( l_U469[1], -1013714740, 25000, 0, 0 );
        }
        if ((CAMERA_ANIMATED_CURRENT_TIME() + 1) >= (CAMERA_ANIMATED_LENGTH( "LEVEL_S_HOTEL_CP_01", "B_OUT_MID_02_HOTEL_CAM" )))
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1248, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1249, 1065353216, 0 );
            CAMERA_FREEZE_FRAME( 1, 400, 0, 0 );
             /* WRITESCRIPTLOG */ sub_1035( "SBA", "HANDLE_MID_02_BLENDOUT: going to BLENDOUT_PLAYING", 0 );
            l_U439 = 3;
        }
        break;
        case 3:
        Result = 1;
         /* NIS_POST_SETUP */ sub_26619( 1, 1 );
        break;
    }
    return Result;
}

/* F_IS_ACTION_INTENTION_STATUS_REACHED */ int sub_39254(unknown uParam0, unknown uParam1, int iParam2)
{
    if ( /* IS_PED_VALID */ sub_10570( uParam0 ))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 )) == iParam2)
        {
            PED_FINISH_ACTION_INTENTION( uParam0, uParam1 );
             /* WRITESCRIPTLOG */ sub_1035( "SBA", "F_IS_ACTION_INTENTION_STATUS_REACHED: Returning TRUE", "***" );
            return 1;
        }
    }
    return 0;
}

/* P_CREATE_BODY_BAGS */ void sub_39740()
{
     /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_CREATE_BODY_BAGS", "***" );
     /* P_SETUP_FURNACE_OBJECT */ sub_32842( ref l_U930, 1318344610, l_U937, l_U940 );
     /* P_SETUP_FURNACE_OBJECT */ sub_32842( ref l_U931, 2033385375, l_U943, l_U946 );
     /* P_SETUP_FURNACE_OBJECT */ sub_32842( ref l_U932, 2033385375, l_U949, l_U952 );
     /* P_SETUP_FURNACE_OBJECT */ sub_32842( ref l_U933, 1398263303, l_U955, l_U958 );
    return;
}

/* P_CREATE_ENEMY_RIFLE */ void sub_39921()
{
     /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_CREATE_ENEMY_RIFLE", 0 );
     /* CLEANPLACEMENT */ sub_5356( l_U961 );
    l_U961 =  /* CREATEPLACEMENT */ sub_17211( 1676080365, l_U962, l_U965, 0, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U961, ref g_U1274 );
    return;
}

/* P_OPENDOOR */ void sub_40161(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_40186( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_40270( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_40186(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_40270(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_CLOSEDOOR */ void sub_40774(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_40186( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_40270( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_40941(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_35217(  /* PLAYER_PED_ID */ sub_2136(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* UPDATE_PILL_VO */ int sub_41192(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    if ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2174() )) == 0)
    {
        if (( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_41238()) == 0)
        {
            for ( I = 0; I <= ((uParam1^) - 1); I++ )
            {
                if ((uParam2^)[I])
                {
                    if ((HAS_PLACEMENT_BEEN_COLLECTED( (uParam1^)[I] )) || (NOT (DOES_PLACEMENT_EXIST( (uParam1^)[I] ))))
                    {
                        (uParam2^)[I] = 0;
                        if (TIME_SINCE_LAST_MONOLOGUE() > 5000)
                        {
                             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_33834( ref l_U207 );
                             /* P_SPEECH_PLAY_MAX_MONOLOGUE */ sub_41441( uParam0, ref l_U207 );
                            return 1;
                        }
                    }
                }
            }
        }
    }
    return 0;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_41238()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* P_SPEECH_PLAY_MAX_MONOLOGUE */ void sub_41441(unknown uParam0, unknown uParam1)
{
     /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_SPEECH_PLAY_MAX_MONOLOGUE", "***" );
    if ( /* IS_MAX_VALID */ sub_10540())
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_33834( uParam1 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_33943( 0,  /* PLAYER_PED_ID */ sub_2136(), "MAX", uParam1, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_33943( 1,  /* PLAYER_PED_ID */ sub_2136(), "MAX", uParam1, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_34196( uParam0, uParam1, 8, 1 );
    }
    return;
}

/* P_HANDLE_GURNEY_POI */ void sub_41712()
{
    if ( /* F_HANDLE_POI */ sub_41748( ref l_U712 ))
    {
        l_U801 = 0;
    }
    if ( /* HANDLE_GURNEY_EXPLORE_CAMERA */ sub_43993())
    {
         /* P_ENABLE_POI */ sub_42747( ref l_U712, 1 );
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_HANDLE_GURNEY_POI: POI has been used", 0 );
    }
    return;
}

/* F_HANDLE_POI */ int sub_41748(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2136() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_35217(  /* PLAYER_PED_ID */ sub_2136(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_35217(  /* PLAYER_PED_ID */ sub_2136(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_16300( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_16396( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_42645()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_42747( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_15574( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_42833( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_15574( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_15574( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_42833( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_2136(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_2136(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_15574( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_42833( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_2136() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_42833( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* F_HASACTIONBEENPRESSED */ int sub_42645()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* P_ENABLE_POI */ void sub_42747(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_15574( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_15574( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_42833( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2136() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_2136() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2136(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_42833(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_16300( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* HANDLE_GURNEY_EXPLORE_CAMERA */ void sub_43993()
{
    int Result;

    Result = 0;
    switch (l_U801)
    {
        case 0:
         /* NIS_PRE_SETUP */ sub_18010( 1, 0, 0, 1 );
        l_U801 = 3;
        break;
        case 3:
        CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_01", "GURNEY_EXPLORATION_ITEM_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "shot_BloodRags" )))
        {
             /* KILL_ANY_MISSION_SPEECH */ sub_44205( 0 );
             /* P_SPEECH_PLAY_MAX_MONOLOGUE */ sub_41441( "SHOT_MNSPGN", ref l_U802 );
            FOUND_EXPLORATION_ITEM( "shot_BloodRags" );
        }
        else
        {
             /* P_CREATE_AND_START_TIMER */ sub_33466( ref l_U812, 3200 );
        }
        if ( /* IS_MAX_VALID */ sub_10540())
        {
            CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_2136() );
            RESET_PLAYER_INPUT_GAIT( 0 );
            SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2136(), 0 );
        }
        l_U801 = 4;
        break;
        case 4:
        if (((NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_44545( l_U802 ))) AND (NOT l_U812._fU20)) || ( /* ISTIMERDONE */ sub_3409( ref l_U812 )))
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
            if ( /* IS_MAX_VALID */ sub_10540())
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2136(), 1 );
            }
            l_U801 = 5;
        }
        break;
        case 5:
         /* NIS_POST_SETUP */ sub_26619( 1, 1 );
        Result = 1;
        l_U801 = -1;
        break;
    }
    return Result;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_44205(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_44545(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_44588( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_44588(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_HANDLE_BECKER_CRATE_POI */ void sub_44921()
{
    if ( /* F_HANDLE_POI */ sub_41748( ref l_U822 ))
    {
        l_U821 = 0;
    }
    if ( /* HANDLE_BECKER_CRATE_CAM */ sub_44979())
    {
         /* P_ENABLE_POI */ sub_42747( ref l_U822, 1 );
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_HANDLE_BECKER_CRATE_POI: POI has been used", 0 );
    }
    return;
}

/* HANDLE_BECKER_CRATE_CAM */ void sub_44979()
{
    int Result;

    Result = 0;
    switch (l_U821)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "HANDLE_BECKER_CRATE_CAM: eBeckerCrate = ASS_SETUP", 0 );
         /* NIS_PRE_SETUP */ sub_18010( 1, 0, 0, 1 );
        l_U821 = 3;
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "HANDLE_BECKER_CRATE_CAM: eBeckerCrate = ASS_WAITING_TO_PLAY", 0 );
        CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_15_F_CAM", 1, -11.90000000, -0.36000000, -1.97000000, 114.25000000, 0, 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "shot_AmmoCrate" )))
        {
             /* KILL_ANY_MISSION_SPEECH */ sub_44205( 0 );
             /* P_SPEECH_PLAY_MAX_MONOLOGUE */ sub_41441( "SHOT_MXNSAM", ref l_U911 );
            FOUND_EXPLORATION_ITEM( "shot_AmmoCrate" );
        }
        else
        {
             /* P_CREATE_AND_START_TIMER */ sub_33466( ref l_U921, 4000 );
        }
        if ( /* IS_MAX_VALID */ sub_10540())
        {
            CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_2136() );
            SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2136(), 0 );
            SET_PED_DEFAULT_AIM_AHEAD(  /* PLAYER_PED_ID */ sub_2136() );
        }
        l_U821 = 4;
        break;
        case 4:
        if (((NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_44545( l_U911 ))) AND (NOT l_U921._fU20)) || ( /* ISTIMERDONE */ sub_3409( ref l_U921 )))
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
            if ( /* IS_MAX_VALID */ sub_10540())
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2136(), 1 );
            }
             /* WRITESCRIPTLOG */ sub_1035( "SBA", "HANDLE_BECKER_CRATE_CAM: Cam cut done, going to eBeckerCrate = ASS_FINISHED", 0 );
            l_U821 = 5;
        }
        break;
        case 5:
         /* NIS_POST_SETUP */ sub_26619( 1, 1 );
        if ( /* IS_MAX_VALID */ sub_10540())
        {
            CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_2136() );
        }
        Result = 1;
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "HANDLE_BECKER_CRATE_CAM: going to eBeckerCrate = ASS_INACTIVE", 0 );
        l_U821 = -1;
        break;
    }
    return Result;
}

/* F_ISDOORLOCKED */ void sub_46113(int iParam0)
{
    unknown Result;
    unknown uVar4;

    if (( /* F_DOESDOOREXIST */ sub_40186( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_40270( iParam0 );
    }
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref Result, ref uVar4 );
    return Result;
}

/* P_SETDOORLOCKED */ void sub_46245(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_40186( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_40270( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* PLAY_HOTEL_MID_03 */ void sub_46411(boolean bParam0, boolean bParam1, unknown uParam2)
{
    int Result;

    Result = 0;
    if (IS_STRING_NULL( uParam2 ))
    {
        uParam2 = l_U398;
    }
    switch (l_U349)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "PLAY_HOTEL_MID_03 start", "*****" );
         /* LOADISEQ */ sub_12077( 262571667, 1 );
         /* LOADSEAMLESSCUTSCENE */ sub_12595( uParam2, 1 );
         /* NIS_PRE_SETUP */ sub_18010( 1, 0, 0, 1 );
        if (NOT bParam0)
        {
             /* BLOCKLOAD_HOTEL_MID_03_ASSETS */ sub_46606();
        }
        else
        {
            CUTSCENE_REGISTER_ISEQ( 262571667 );
        }
         /* CREATE_PEDS_MID_03 */ sub_46723();
        l_U399 = 0;
        l_U349 = 2;
        break;
        case 2:
         /* REGISTER_PEDS_HOTEL_MID_03 */ sub_46897();
        if (bParam1)
        {
            START_CUTSCENE_CAPTURE( uParam2 );
        }
        START_SEAMLESS_CUTSCENE();
        CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        CUTSCENE_ENABLE_SKIP( 0 );
        l_U349 = 3;
        break;
        case 3:
        l_U349 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
             /* P_PLAYER_UNHOLSTER_WEAPONS */ sub_25632( l_U350, 1 );
             /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_23378( l_U350, 1 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_HOTEL_CP_02", "B_OUT_MID_03_HOTEL_FWD_CAM", 1, 26.81000000, -53.22000000, 14.70000000, 0.00000000, 0, 0 );
            l_U349 = 5;
        }
        else if (l_U220 == 4)
        {
            if (GET_CUTSCENE_TIME_MS() > 20530)
            {
                l_U221 = 4;
            }
        }
        if ((NOT l_U399) AND (GET_CUTSCENE_TIME_MS() > 27850))
        {
             /* WRITESCRIPTLOG */ sub_1035( "BSW", "we're now in the 2nd floor", 0 );
            CUTSCENE_ENABLE_SKIP( 1 );
            l_U399 = 1;
        }
        break;
        case 5:
        if (bParam1)
        {
            STOP_CUTSCENE_CAPTURE();
        }
        if (l_U220 == 4)
        {
            l_U221 = 4;
        }
         /* CLEANUP_MID_03_PEDS */ sub_47802();
         /* UNLOAD_MID_03_ASSETS */ sub_47851();
        if (IS_SCREEN_FADED_OUT())
        {
            if (NOT l_U399)
            {
                 /* WRITESCRIPTLOG */ sub_1035( "bsw", "forcing load scene after mid_03", "*****" );
                LOAD_SCENE( g_U1020[2] );
            }
        }
        Result = 1;
        l_U349 = 0;
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "PLAY_HOTEL_MID_03 end", "*****" );
        break;
        case 0:
        l_U349 = 1;
        break;
    }
    return Result;
}

/* BLOCKLOAD_HOTEL_MID_03_ASSETS */ void sub_46606()
{
     /* WRITESCRIPTLOG */ sub_1035( "SBA", "P_SETUP_HOTEL_MID_03", "***" );
     /* BLOCKLOADMODEL */ sub_36696( 762297658 );
    return;
}

/* CREATE_PEDS_MID_03 */ void sub_46723()
{
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13997( ref l_U368[0], 0.00000000, 0.00000000, 0.00000000, 0, -242176005, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13997( ref l_U368[1], 0.00000000, 0.00000000, 0.00000000, 0, -523735065, 7, 3, 2, 0, 0 );
    l_U395[0] =  /* CREATEPED */ sub_19469( ref l_U368[0] );
    l_U395[1] =  /* CREATEPED */ sub_19469( ref l_U368[1] );
    return;
}

/* REGISTER_PEDS_HOTEL_MID_03 */ void sub_46897()
{
     /* WRITESCRIPTLOG */ sub_1035( "SBA", "REGISTER_PEDS_HOTEL_MID_03", "***" );
    if ( /* IS_MAX_VALID */ sub_10540())
    {
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_22014( ref l_U350, 1, 1 );
         /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_23378( l_U350, 0 );
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_37325( 1 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_2136(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2136(), 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
        ISEQ_REGISTER_ENTITY( 262571667, "max",  /* PLAYER_PED_ID */ sub_2136(), 0 );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_2136(), g_U1020[2], g_U1123[2] );
    }
    if ( /* IS_PED_VALID */ sub_10570( l_U395[0] ))
    {
         /* WRITESCRIPTLOG */ sub_1035( "BSW", "REGISTER_PEDS_HOTEL_MID_03 registering ped0", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U395[0], "H_Crac_Sold_A^1", 1 );
    }
    if ( /* IS_PED_VALID */ sub_10570( l_U395[1] ))
    {
         /* WRITESCRIPTLOG */ sub_1035( "BSW", "REGISTER_PEDS_HOTEL_MID_03 registering ped1", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U395[1], "H_Crac_Sold_A", 1 );
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( -1736621803, 26.41600000, -52.99701000, 12.95312000 );
    REGISTER_HIDE_ENTITY_AT_POSITION( 2070099020, -8.25424000, 11.30124000, -2.60249000 );
    return;
}

/* CLEANUP_MID_03_PEDS */ void sub_47802()
{
     /* CLEANPEDARRAY */ sub_5143( ref l_U395 );
    return;
}

/* UNLOAD_MID_03_ASSETS */ void sub_47851()
{
     /* UNLOADMODEL */ sub_26174( 762297658 );
    return;
}

/* P_HANDLE_IMAGEFX_MID_CP_01 */ void sub_48172()
{
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_40941( ref l_U575, 0 ))
    {
         /* P_INITIALIZE_IMAGEFX_MID_CP_01 */ sub_48226();
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_40941( ref l_U596, 0 ))
    {
         /* P_INITIALIZE_IMAGEFX_MID_CP_02 */ sub_48623();
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_40941( ref l_U617, 0 ))
    {
         /* P_INITIALIZE_IMAGEFX_MID_CP_03 */ sub_48765();
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_40941( ref l_U638, 0 ))
    {
         /* P_INITIALIZE_IMAGEFX_MID_CP_04 */ sub_48947();
    }
     /* P_HANDLE_IMAGEFX */ sub_49071( ref l_U985 );
    return;
}

/* P_INITIALIZE_IMAGEFX_MID_CP_01 */ void sub_48226()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1035( "CCB", "P_INITIALIZE_IMAGEFX_MID_CP_01", 0 );
    for ( I = 0; I <= 2; I++ )
    {
        l_U985[I]._fU12 = 0;
        l_U985[I]._fU16 = 0;
        l_U985[I]._fU20 = 0;
        l_U985[I]._fU24 = 0;
        l_U985[I]._fU32 = 1;
    }
    l_U985[0]._fU4 = "DOUBLE_TINT_BLUE_FLASH";
    l_U985[0]._fU20 = 2;
    l_U985[0]._fU8 = 4;
    l_U985[0]._fU32 = 0;
    l_U985[1]._fU4 = "DISTORT_INTERLACE_RIGHT";
    l_U985[1]._fU8 = 4;
    l_U985[1]._fU32 = 0;
    l_U985[2]._fU4 = "TRIPLE_IMAGE_BLUR_DOWN_L_DOF";
    l_U985[2]._fU8 = 4;
    l_U985[2]._fU32 = 0;
    l_U217 = 0;
    return;
}

/* P_INITIALIZE_IMAGEFX_MID_CP_02 */ void sub_48623()
{
     /* WRITESCRIPTLOG */ sub_1035( "CCB", "P_INITIALIZE_IMAGEFX_MID_CP_01", 0 );
    PLAY_IMAGEFX( "FLASH_YELLOW_RIGHT", 4, 1 );
    return;
}

/* P_INITIALIZE_IMAGEFX_MID_CP_03 */ void sub_48765()
{
     /* WRITESCRIPTLOG */ sub_1035( "CCB", "P_INITIALIZE_IMAGEFX_MID_CP_03", 0 );
    PLAY_IMAGEFX( "DOUBLE_TINT_BLUE_FLASH", 4, 1 );
    PLAY_IMAGEFX( "FLICKER_VIBRATE_LIGHTEN", 4, 1 );
    return;
}

/* P_INITIALIZE_IMAGEFX_MID_CP_04 */ void sub_48947()
{
     /* WRITESCRIPTLOG */ sub_1035( "CCB", "P_INITIALIZE_IMAGEFX_MID_CP_04", 0 );
    PLAY_IMAGEFX( "FLASH_WHITE", 4, 1 );
    return;
}

/* P_HANDLE_IMAGEFX */ void sub_49071(unknown uParam0)
{
    int I;
    int J;

    switch (l_U217)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_1035( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                 /* CREATETIMER */ sub_3126( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                 /* STARTTIMER */ sub_3276( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U217 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if ( /* ISTIMERDONE */ sub_3409( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                     /* CREATETIMER */ sub_3126( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                     /* STARTTIMER */ sub_3276( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        PRINTSTRING( "******* [CO] ***** STARTING CHILD FOR index : " );
                        PRINTINT( J );
                        PRINTNL();
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                             /* CREATETIMER */ sub_3126( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                             /* STARTTIMER */ sub_3276( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if ( /* ISTIMERDONE */ sub_3409( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

/* P_HANDLE_DEBUG_OBJECTS_PLACEMENT */ void sub_49951()
{
    if (NOT l_U934)
    {
         /* DEBUG_OBJECT_SETUP_WIDGETS */ sub_50007();
        l_U934 = 1;
    }
    if (l_U935)
    {
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "Creating objects...", "***" );
         /* P_CREATE_BODY_BAGS */ sub_39740();
         /* P_CREATE_GURNEYS */ sub_32756();
        l_U935 = 0;
    }
    if (l_U936)
    {
         /* WRITESCRIPTLOG */ sub_1035( "SBA", "Destroying objects...", "***" );
         /* CLEANOBJECT */ sub_5005( l_U930 );
         /* CLEANOBJECT */ sub_5005( l_U931 );
         /* CLEANOBJECT */ sub_5005( l_U932 );
         /* CLEANOBJECT */ sub_5005( g_U1787 );
         /* CLEANOBJECT */ sub_5005( g_U1788 );
         /* CLEANOBJECT */ sub_5005( l_U933 );
        l_U936 = 0;
    }
    return;
}

/* DEBUG_OBJECT_SETUP_WIDGETS */ void sub_50007()
{
     /* WRITESCRIPTLOG */ sub_1035( "SBA", "DEBUG_OBJECT_SETUP_WIDGETS", "***" );
    START_WIDGET_GROUP( "Object Positions" );
    ADD_WIDGET_BOOL( "Create Objects", ref l_U935 );
    ADD_WIDGET_BOOL( "Destroy Objects", ref l_U936 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_50210( ref l_U937, "Garbage Bag Position", 1036831949 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_50210( ref l_U940, "Garbage Bag Rotation", 1036831949 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_50210( ref l_U943, "Bodybag1 Position", 1036831949 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_50210( ref l_U946, "Bodybag1 Rotation", 1036831949 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_50210( ref l_U949, "Bodybag2 Position", 1036831949 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_50210( ref l_U952, "Bodybag2 Rotation", 1036831949 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_50210( ref l_U700, "Gurney1 Position", 1036831949 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_50210( ref l_U703, "Gurney1 Rotation", 1036831949 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_50210( ref l_U706, "Gurney2 Position", 1036831949 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_50210( ref l_U709, "Gurney2 Rotation", 1036831949 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_50210( ref l_U955, "Furnace Door Position", 1036831949 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_50210( ref l_U958, "Furnace Door Rotation", 1036831949 );
    STOP_WIDGET_GROUP();
    return;
}

/* P_ADD_WIDGET_VECTOR_SLIDER */ void sub_50210(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

/* P_UNLOAD_ASSETS */ void sub_50962()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1035( "MW", "P_UNLOAD_ASSETS start", 0 );
    for ( I = 0; I < l_U976; I++ )
    {
         /* UNLOADMODEL */ sub_26174( l_U976[I] );
    }
     /* UNLOADMODEL */ sub_26174( l_U975 );
     /* UNLOADANIMDICT */ sub_51087( "EXPL_CAM" );
     /* UNLOADANIMDICT */ sub_51087( "LEVEL_S_HOTEL_CP_01" );
     /* WRITESCRIPTLOG */ sub_1035( "MW", "P_UNLOAD_ASSETS end", 0 );
    return;
}

/* UNLOADANIMDICT */ void sub_51087(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


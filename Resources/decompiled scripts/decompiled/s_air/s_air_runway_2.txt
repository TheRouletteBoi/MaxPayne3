void main()
{
    l_U0 = 1;
    l_U1 = 144;
    StrCopy( ref l_U2, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U10, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = 1500;
    l_U50 = 0;
    l_U52 = -1;
    l_U53 = {64536, 64536, 64536};
    l_U92 = 0;
    l_U94 = 1;
    l_U95 = 0;
    l_U97 = 0;
    l_U98 = 0;
    l_U99 = 0;
    l_U318 = 5.00000000;
    l_U368 = 0.04000000;
    l_U369 = 3900;
    l_U370 = 100.00000000;
    l_U371 = 0.20000000;
    l_U400 = 0;
    l_U401 = -2.50000000;
    l_U402 = 2.50000000;
    l_U403 = -6.50000000;
    l_U404 = 3.30000000;
    l_U406 = 0.20000000;
    l_U407 = 0.50000000;
    l_U408 = 0.53000000;
    l_U412 = -15.00000000;
    l_U413 = -5.00000000;
    l_U414 = -15.00000000;
    l_U416 = {-619.80170000, -597.07040000, -6.34401000};
    l_U419 = 312.48550000;
    l_U420 = {0.10000000, -0.22000000, 0.65000000};
    l_U424 = {-619.78020000, -498.01610000, -5.49538000};
    l_U427 = 355.22000000;
    l_U428 = 269;
    l_U429 = -1;
    l_U430 = -1;
    l_U445 = 271;
    l_U446 = 21000;
    l_U447 = 22000;
    l_U448 = 5;
    l_U449 = 2.00000000;
    l_U450 = 26000;
    l_U469 = 3500;
    l_U470 = 4000;
    l_U471 = 5500;
    l_U472 = 60.00000000;
    l_U473 = 306;
    l_U474 = 1.00000000;
    l_U475 = {0.10000000, -0.35000000, 0.62000000};
    l_U478 = {-0.40000000, -0.03500000, 0.61200000};
    l_U517 = 15000;
    l_U518 = 0;
    l_U528 = 1.75000000;
    l_U529 = 0.22500000;
    l_U530 = 1000;
    l_U531 = 270;
    l_U563 = 4000;
    l_U595 = -1;
    StrCopy( ref l_U662, "MID_12B_FIN_CONCAT", 32 );
    StrCopy( ref l_U670, "14_05_FIN_concat", 32 );
    l_U739 = 2000;
    l_U740 = -1;
    l_U741 = -1;
    l_U742 = -630.00000000;
    l_U743 = -300.00000000;
    l_U744 = -18.00000000;
    l_U745 = 0.60000000;
    l_U746 = 0.01500000;
    l_U747 = 0.03500000;
    l_U748 = 200;
    l_U749 = 100;
    l_U759 = 6000;
    l_U769 = 11000;
    l_U779 = 6000;
    l_U780 = 0;
    l_U781 = 0;
    l_U782 = 0;
    l_U814 = {14.00000000, -7.00000000, 0.00000000};
    l_U817 = {-6.00000000, 0.00000000, 3.00000000};
    l_U820 = 2000;
    l_U821 = -1;
    l_U831 = 600;
    l_U841 = 1150;
    l_U851 = 1900;
    l_U852 = {0.00000000, 30.00000000, -1.00000000};
    l_U855 = {2.00000000, -40.00000000, 2.50000000};
    l_U858 = 4000;
    l_U877 = 2500;
    l_U878 = 0.00000000;
    l_U879 = 0.90000000;
    l_U880 = 0.25000000;
    l_U881 = {-1.00000000, -20.00000000, 0.00000000};
    l_U884 = -1;
    l_U885 = {-0.50000000, 2.00000000, -1.00000000};
    l_U888 = {0.00000000, 0.00000000, -10.00000000};
    l_U891 = 1.00000000;
    l_U892 = -1;
    l_U893 = {-0.50000000, -5.50000000, -1.00000000};
    l_U896 = {0.00000000, 0.00000000, -10.00000000};
    l_U899 = 1.50000000;
    l_U909 = 550;
    l_U919 = 1800;
    l_U920 = -1;
    l_U921 = {-0.70000000, -24.25000000, -1.05000000};
    l_U924 = {0.00000000, 0.00000000, -20.00000000};
    l_U927 = 1.00000000;
    l_U928 = -1;
    l_U929 = {1.50000000, -17.50000000, -1.20000000};
    l_U932 = {0.00000000, 0.00000000, -20.00000000};
    l_U935 = 1.00000000;
    l_U945 = 2225;
    l_U946 = -1;
    l_U947 = {1.50000000, -17.50000000, -1.00000000};
    l_U950 = -1;
    l_U951 = {-2.00000000, -21.00000000, -1.00000000};
    l_U957 = 0;
    l_U958 = 0;
    l_U1133 = 0;
    l_U1134 = 0;
    l_U1135 = 0;
    l_U1136 = {-619.78000000, -671.00000000, -5.63000000};
    l_U1139 = 0.00000000;
    l_U1140 = 0;
    l_U1141 = {-619.78000000, 238.78700000, -5.63000000};
    l_U1144 = 0.00000000;
    l_U1146 = 0;
    l_U1147 = {-637.84000000, -681.01000000, -6.34000000};
    l_U1150 = 0.00000000;
    l_U1151 = 0;
    l_U1152 = 0;
    l_U1153 = 0;
    l_U1154 = 0;
    l_U1155 = 0;
    l_U1156 = 0;
    l_U1157 = 1.00000000;
    l_U1158 = 0;
    l_U1159 = 0;
    l_U1160 = 0;
    l_U1161 = 0;
    l_U1162 = 0;
    l_U1163 = 0;
     /* WRITESCRIPTLOG */ sub_1646( "CR", "Script s_air_Runway_2.sc is starting...", 0 );
     /* P_SETUP_ASSET_ARRAYS */ sub_1764();
    l_U92 = 3;
    l_U50 = 0;
    if (g_U830 == 13)
    {
         /* P_TELEPORT_PLAYER */ sub_2239( -620.04090000, -637.92260000, -6.74649000, 352.53850000, 5.52598000, 0.43149000 );
    }
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_2496();
        if (l_U95 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_13696();
        }
         /* P_TM2_DEBUG_RECORDING_WIDGET */ sub_81174();
         /* P_TM2_DEBUG_TUNING_WIDGET */ sub_82544();
         /* P_TM2_DEBUG_EXPLOSION_WIDGET */ sub_83546();
         /* P_TM2_DEBUG_PARTICLE_EFFECT */ sub_84985();
         /* P_TM2_DEBUG_747_FLYOVER */ sub_85483();
         /* P_TM2_EXPLODING_PLANE_NIS_WIDGET */ sub_86404();
        WAIT( 0 );
    }
     /* P_CLEANUP_RUNWAY2 */ sub_5178( 0 );
     /* P_RELEASE_RUNWAY2_ASSETS */ sub_88200();
     /* WRITESCRIPTLOG */ sub_1646( "CO", "Saving Arcade Data main loop", 0 );
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_air_Runway_2" );
     /* WRITESCRIPTLOG */ sub_1646( "CR", "Script s_air_Runway_2.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_1646(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_SETUP_ASSET_ARRAYS */ void sub_1764()
{
    l_U605[0] = 1969936254;
    l_U605[1] = 1979959192;
    l_U605[2] = 877881452;
    l_U605[3] = 737677776;
    l_U605[4] = -1552305464;
    l_U605[5] = -646760381;
    l_U605[6] = -333143921;
    l_U605[7] = 279275920;
    l_U605[8] = -1268105652;
    l_U605[9] = -1623387150;
    l_U605[10] = 102195621;
    l_U605[11] = -136067778;
    l_U605[12] = -298298586;
    l_U605[13] = -2019064318;
    l_U605[14] = 2080140486;
    l_U605[15] = 446170022;
    l_U605[16] = 10807219;
    l_U605[17] = -944835128;
    l_U605[18] = -1534515949;
    l_U605[19] = -1832025700;
    l_U605[20] = -400668184;
    l_U605[21] = -132257305;
    l_U605[22] = 507765432;
    l_U605[23] = -878494344;
    l_U605[24] = 1570425160;
    l_U605[25] = 1796269108;
    l_U605[26] = 1687227279;
    l_U605[27] = 1081193277;
    l_U605[28] = -67723549;
    return;
}

/* P_TELEPORT_PLAYER */ void sub_2239(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 =  /* PLAYER_PED_ID */ sub_2269();
     /* TELEPORTPED */ sub_2374( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

/* PLAYER_PED_ID */ int sub_2269()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_2307() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_2307()
{
    return GET_PLAYER_ID();
}

/* TELEPORTPED */ void sub_2374(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_HANDLE_FAILURE */ void sub_2496()
{
    if (g_U830 == 13)
    {
        switch (l_U95)
        {
            case 0:
            if (( /* RESTARTING_CHECKPOINT */ sub_2615()) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )) || (l_U96)))
            {
                l_U95 = 1;
                 /* WRITESCRIPTLOG */ sub_1646( "CR", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_3133())
            {
                l_U95 = 3;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_3193( 0 )) == 1)
            {
                l_U95 = 2;
            }
            break;
            case 2:
             /* WRITESCRIPTLOG */ sub_1646( "CR", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
            {
                l_U95 = 3;
                 /* WRITESCRIPTLOG */ sub_1646( "CR", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_1646( "CR", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2307() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2307(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2269() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2269(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_4931( "AIR_RUNWAY2_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
             /* P_CLEANUP_RUNWAY2 */ sub_5178( 1 );
            l_U95 = 4;
             /* WRITESCRIPTLOG */ sub_1646( "CR", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_1646( "CR", "eFailState = FAIL_RESTORE_PLAYER", 0 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9014( ref l_U56,  /* PLAYER_PED_ID */ sub_2269() );
            l_U95 = 5;
             /* WRITESCRIPTLOG */ sub_1646( "CR", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_1646( "CR", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U92 = 3;
            l_U94 = 0;
            l_U95 = 0;
             /* WRITESCRIPTLOG */ sub_1646( "CR", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_2615()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2269(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_2307(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_2307(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2269() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2269(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_3133()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_3193(int iParam0)
{
    iParam0 = 1;
    switch (l_U38)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_3275( ref l_U40 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
            {
                l_U39 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_3409( ref l_U40, l_U39, 1, 1 );
             /* STARTTIMER */ sub_3559( ref l_U40 );
        }
        if ( /* ISTIMERDONE */ sub_3692( ref l_U40 ))
        {
             /* WRITESCRIPTLOG */ sub_1646( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2307() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2307(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U38 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U38 = 2;
            }
            else
            {
                l_U38 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1646( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_4193();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1646( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_4193();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_3275(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_3409(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_3559(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_3692(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_4193()
{
     /* WRITESCRIPTLOG */ sub_1646( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_4268( ref l_U40 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2307() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2307(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U37 = 0;
    l_U37 = l_U37;
    l_U38 = 0;
    return;
}

/* RESETTIMER */ void sub_4268(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_IMAGEFX_STOP_BULLETCAM */ void sub_4931(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1646( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
     /* CLEANCAMERA */ sub_5041( ref l_U51 );
    l_U50 = 1;
    return;
}

/* CLEANCAMERA */ void sub_5041(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* P_CLEANUP_RUNWAY2 */ void sub_5178(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_CLEANUP_RUNWAY2 - START", 0 );
    ENABLE_LAST_MAN_STANDING( 1 );
    RESET_PED_MODEL_LOD_DISTANCES( 2113814688 );
    ISEQ_TERMINATE( 2116826630 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_5288( 2116826630, ref g_U1368 );
     /* CLEANPED */ sub_6356( l_U444 );
     /* CLEANPED */ sub_6356( l_U705 );
     /* CLEANOBJECT */ sub_6456( l_U372 );
     /* CLEANOBJECT */ sub_6456( l_U373 );
     /* CLEANOBJECT */ sub_6456( l_U374 );
     /* CLEANOBJECT */ sub_6456( l_U375 );
     /* CLEANOBJECT */ sub_6456( l_U376 );
     /* CLEANOBJECT */ sub_6456( l_U377 );
     /* CLEANOBJECT */ sub_6456( l_U378 );
     /* CLEANOBJECT */ sub_6456( l_U379 );
     /* CLEANOBJECT */ sub_6456( l_U380 );
     /* CLEANOBJECT */ sub_6456( l_U381 );
     /* CLEANOBJECT */ sub_6456( l_U382 );
     /* CLEANOBJECT */ sub_6456( l_U383 );
     /* CLEANOBJECT */ sub_6456( l_U384 );
     /* CLEANOBJECT */ sub_6456( l_U386 );
     /* CLEANOBJECT */ sub_6456( l_U385 );
     /* CLEANOBJECT */ sub_6456( l_U387 );
     /* CLEANOBJECT */ sub_6456( l_U388 );
     /* CLEANOBJECT */ sub_6456( l_U389 );
     /* CLEANOBJECT */ sub_6456( l_U390 );
     /* CLEANOBJECT */ sub_6456( l_U391 );
     /* CLEANOBJECT */ sub_6456( l_U392 );
     /* CLEANOBJECTARRAY */ sub_6714( ref l_U393 );
     /* CLEANOBJECT */ sub_6456( l_U729 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
    {
        DETACH_PED(  /* PLAYER_PED_ID */ sub_2269(), 1 );
    }
     /* CLEANVEHICLE */ sub_6836( l_U415 );
     /* CLEANVEHICLE */ sub_6836( l_U423 );
    SET_ALLOW_PLAYER_REACT_TO_EXPLOSION(  /* PLAYER_PED_ID */ sub_2269(), 0, 0 );
    DISPLAY_HUD( 1 );
    ENABLE_TINNITUS( 1 );
     /* P_STOP_SP_CHALLENGES */ sub_6947( uParam0 );
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_7187( "S_AIR_PLANE_RS_02", ref g_U1910 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_7976( "S_AIR_PLANE_RS_02", ref g_U1910 );
     /* P_SAFE_STOP_SOUND */ sub_8327( l_U821, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_8510( ref l_U821 );
     /* P_SAFE_STOP_SOUND */ sub_8327( l_U595, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_8510( ref l_U595 );
     /* P_SAFE_STOP_SOUND */ sub_8327( l_U740, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_8510( ref l_U740 );
     /* P_SAFE_STOP_SOUND */ sub_8327( l_U741, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_8510( ref l_U741 );
     /* P_SAFE_REMOVE_PARTICLE_FX */ sub_8778( ref l_U429 );
     /* P_SAFE_REMOVE_PARTICLE_FX */ sub_8778( ref l_U430 );
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_CLEANUP_RUNWAY2 - END", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_5288(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5426( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_5426(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* CLEANPED */ void sub_6356(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANOBJECT */ void sub_6456(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CLEANOBJECTARRAY */ void sub_6714(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANOBJECT */ sub_6456( (uParam0^)[I] );
    }
    return;
}

/* CLEANVEHICLE */ void sub_6836(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_6947(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_1646( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1646( "CCB", "Stopping the Finale_RS context...", 0 );
        END_CONTEXT( "Finale_RS" );
         /* WRITESCRIPTLOG */ sub_1646( "CCB", "Stopping the Finale context...", 0 );
        END_CONTEXT( "Finale" );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_STOP */ void sub_7187(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_7237( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_7446( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Stopping the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        DISPLAYF( "Attempting to stop a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ int sub_7237(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB]### The SCRIPT_STREAM is loaded: {} ###", 1, 1281, ref (uParam1^)[I]._fU0 );
                return 1;
            }
        }
    }
    return 0;
}

/* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ int sub_7446(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ void sub_7976(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5426( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a SCRIPT_STREAM asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_SAFE_STOP_SOUND */ void sub_8327(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
         /* WRITESCRIPTLOG */ sub_1646( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1646( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

/* P_SAFE_RELEASE_SOUND_ID */ void sub_8510(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
         /* WRITESCRIPTLOG */ sub_1646( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1646( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

/* P_SAFE_REMOVE_PARTICLE_FX */ void sub_8778(unknown uParam0)
{
    if ((uParam0^) != 0)
    {
        REMOVE_PARTICLE_FX( (uParam0^) );
        (uParam0^) = 0;
    }
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_9014(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_1646( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_9233( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_10397( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10711( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11190( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10711( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11190( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10711( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11190( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11506( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11190( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11506( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11190( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_12078( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_12280( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_2269(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_1646( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_9233(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9295( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_9295(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_10397(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_10711(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_11115( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_11115(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_11190(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_11506(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_11115( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_12078(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_12280(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9295( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_12378( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_12378(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_13696()
{
    int iVar2;

    iVar2 = l_U92;
     /* P_HANDLE_IMAGEFX */ sub_13735( ref l_U959 );
     /* P_HANDLE_SP_ACHIEVEMENTS */ sub_14569();
    switch (l_U92)
    {
        case 0: break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpoint = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_18087();
         /* P_INITIALIZE_SP_CHALLENGES */ sub_18514();
         /* P_SET_STATIC_DATA */ sub_19105();
        l_U92 = 4;
         /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpoint = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpoint = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_REQUEST_RUNWAY2_PERSISTENT_ASSETS */ sub_20880();
         /* P_REQUEST_RUNWAY2_NONPERSISTENT_ASSETS */ sub_36011();
        l_U92 = 5;
         /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        if (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_41800( ref g_U1368 )) AND (( /* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ sub_41414( ref g_U1910 )) AND (( /* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ sub_40994( ref g_U1638 )) AND (( /* F_STREAMREQ_ACTION_TREE_IS_LOADED */ sub_40616( ref g_U1783 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_40225( ref g_U1429 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_39823( ref g_U1247 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_39426( ref g_U1030 ))))))))
        {
            g_U831[13] = 1;
            if ((NOT l_U56._fU0) AND (g_U829 == 13))
            {
                 /* WRITESCRIPTLOG */ sub_1646( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
                l_U92 = 1;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_1646( "AT", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
                l_U92 = 6;
            }
        }
        break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUPS", 0 );
        l_U94 = 0;
        g_U846[13] = 1;
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        if (( /* HAS_SAVEFILE_LOADED */ sub_42469( ref l_U56 )) == 0)
        {
             /* F_GIVEPEDWEAPON */ sub_11506(  /* PLAYER_PED_ID */ sub_2269(), 879300975, 25000, 0, 0 );
            l_U92 = 2;
             /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U92 = 6;
             /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYERS_WEAPONS", 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2269(), 0, 0 ) ))
            {
                g_U830 = 13;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_43010( ref l_U56, g_U830,  /* PLAYER_PED_ID */ sub_2269(), g_U2014[13], g_U2129[13], g_U2168[13], g_U2207[13], 0 );
                l_U92 = 6;
                 /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 6:
        if (g_U846[13])
        {
            if (l_U94)
            {
                if (CUTSCENE_IS_LOADED( ref l_U662 ))
                {
                    l_U92 = 7;
                     /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_HANDLE_MID_12B", 0 );
                }
                else if (CUTSCENE_NAMED_IS_LOADING( ref l_U662 ))
                {
                     /* WRITESCRIPTLOG */ sub_1646( "CR", "Waiting for cutscene MID_12B_FIN to load.", 0 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_1646( "CR", "Requesting cutscene MID_12B_FIN to load.", 0 );
                    PRE_STREAM_SEAMLESS_CUTSCENE( ref l_U662 );
                }
            }
            else
            {
                l_U92 = 7;
                 /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_HANDLE_MID_12B", 0 );
            }
        }
        break;
        case 7:
        if (l_U93)
        {
             /* NIS_PRE_SETUP */ sub_47995( 1, 0, 0, 1 );
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_55173( ref l_U635, ref l_U662, 48178, 50579, 51096, 51941, 52083, 55119, 250, 0 );
            if (l_U94)
            {
                l_U635._fU4 = 2;
            }
            else
            {
                 /* P_SETUP_VEHICLES */ sub_48273();
                 /* P_TM2_CREATE_DASILVA */ sub_49480();
                 /* P_SET_DASILVA_AND_PLANE_VISIBLE */ sub_55728();
                 /* P_START_VEHICLE_RECORDINGS_LEFTSIDE_HIT1 */ sub_51296( 0.00000000 );
                l_U635._fU4 = 7;
                l_U635._fU104 = 0;
            }
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_55977( ref l_U635 ))
        {
            if (g_U830 != 13)
            {
                g_U830 = 13;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_43010( ref l_U56, g_U830,  /* PLAYER_PED_ID */ sub_2269(), g_U2014[13], g_U2129[13], g_U2168[13], g_U2207[13], 1 );
            }
            DISPLAY_HUD( 0 );
            ENABLE_CROSSHAIR( 1 );
            l_U92 = 8;
             /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_GAMEPLAY_VERSUS_JETPLANE", 0 );
        }
        break;
        case 8:
        if (l_U93)
        {
             /* STARTTIMER */ sub_3559( ref l_U451 );
             /* STARTTIMER */ sub_3559( ref l_U720 );
             /* WRITESCRIPTLOG */ sub_1646( "MF", "Music Cue: 12", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_6", "FINALE_01_6", 0.00000000, 0, 0, -1082130432, 0 );
             /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_34054( "SCRIPT_MISSION\S_AIR_RUNWAY_02A", ref g_U1950 );
        }
        else if (IS_SCREEN_FADED_OUT())
        {
            if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_58348()))
            {
                DO_SCREEN_FADE_IN( 0 );
            }
             /* WRITESCRIPTLOG */ sub_1646( "CR", "DO_SCREEN_FADE_IN", 0 );
        }
         /* P_HANDLE_DIALOGUES */ sub_58628();
         /* P_HANDLE_DELETING_DAMAGED_ENGINE_PROPS */ sub_60897();
         /* P_SPEED_UP_PLANE */ sub_61516();
         /* P_HANDLE_CAMSHAKE_IN_GAMEPLAY */ sub_61744();
         /* P_HANDLE_INFINITE_ADRENALINE_IN_GAMEPLAY */ sub_63045();
        if ( /* ISTIMERDONE */ sub_3692( ref l_U720 ))
        {
             /* LOADSEAMLESSCUTSCENE */ sub_38947( ref l_U670, 0 );
             /* WRITESCRIPTLOG */ sub_1646( "CR", "Loading Cutscene 14_05_fin_concat", 0 );
        }
        if ( /* ISTIMERDONE */ sub_3692( ref l_U508 ))
        {
            l_U518 = 1;
             /* STARTTIMER */ sub_3559( ref l_U519 );
             /* WRITESCRIPTLOG */ sub_1646( "CR", "Starting - P_SPEED_UP_PLANE()", 0 );
        }
        if ( /* ISTIMERDONE */ sub_3692( ref l_U730 ))
        {
             /* P_START_747_ANIM */ sub_63293();
        }
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() ))) AND (DOES_OBJECT_EXIST( l_U372 )))
        {
            if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U372,  /* PLAYER_PED_ID */ sub_2269() ))
            {
                if (l_U97 == 0)
                {
                     /* P_TM2_LEFT_SIDE_ENGINE_HIT1B */ sub_63544( 1 );
                     /* CLEANOBJECT */ sub_6456( l_U372 );
                     /* STARTTIMER */ sub_3559( ref l_U490 );
                    l_U97 = 1;
                     /* WRITESCRIPTLOG */ sub_1646( "CR", "eLeftEngineState = LEFT_ENGINE_HIT1", 0 );
                }
            }
        }
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() ))) AND (DOES_OBJECT_EXIST( l_U372 )))
        {
            if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U372,  /* PLAYER_PED_ID */ sub_2269() ))
            {
                if (l_U97 == 1)
                {
                     /* P_TM2_LEFT_SIDE_ENGINE_HIT2A */ sub_64773();
                     /* STARTTIMER */ sub_3559( ref l_U490 );
                     /* CLEANOBJECT */ sub_6456( l_U372 );
                    l_U97 = 2;
                     /* WRITESCRIPTLOG */ sub_1646( "CR", "eLeftEngineState = LEFT_ENGINE_HIT2", 0 );
                }
            }
        }
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() ))) AND (DOES_OBJECT_EXIST( l_U372 )))
        {
            if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U372,  /* PLAYER_PED_ID */ sub_2269() ))
            {
                if (l_U97 == 2)
                {
                     /* P_TM2_LEFT_SIDE_ENGINE_HIT2B */ sub_65697();
                     /* STARTTIMER */ sub_3559( ref l_U490 );
                     /* CLEANOBJECT */ sub_6456( l_U372 );
                    l_U97 = 4;
                     /* WRITESCRIPTLOG */ sub_1646( "CR", "eLeftEngineState = LEFT_ENGINE_COMPLETE", 0 );
                }
            }
        }
        if ( /* ISTIMERDONE */ sub_3692( ref l_U490 ))
        {
             /* P_TM2_CREATE_LEFT_SIDE_ENGINE_TARGET */ sub_53246();
             /* RESETTIMER */ sub_4268( ref l_U490 );
        }
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() ))) AND (DOES_OBJECT_EXIST( l_U373 )))
        {
            if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U373,  /* PLAYER_PED_ID */ sub_2269() ))
            {
                if (l_U98 == 0)
                {
                     /* P_TM2_RIGHT_SIDE_ENGINE_HIT1B */ sub_66423();
                     /* CLEANOBJECT */ sub_6456( l_U373 );
                     /* STARTTIMER */ sub_3559( ref l_U499 );
                    l_U98 = 1;
                     /* WRITESCRIPTLOG */ sub_1646( "CR", "eRightEngineState = RIGHT_ENGINE_HIT1", 0 );
                }
            }
        }
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() ))) AND (DOES_OBJECT_EXIST( l_U373 )))
        {
            if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U373,  /* PLAYER_PED_ID */ sub_2269() ))
            {
                if (l_U98 == 1)
                {
                     /* P_TM2_RIGHT_SIDE_ENGINE_HIT2A */ sub_67266();
                     /* STARTTIMER */ sub_3559( ref l_U499 );
                     /* CLEANOBJECT */ sub_6456( l_U373 );
                    l_U98 = 2;
                     /* WRITESCRIPTLOG */ sub_1646( "CR", "eRightEngineState = RIGHT_ENGINE_HIT2", 0 );
                }
            }
        }
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() ))) AND (DOES_OBJECT_EXIST( l_U373 )))
        {
            if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U373,  /* PLAYER_PED_ID */ sub_2269() ))
            {
                if (l_U98 == 2)
                {
                     /* P_TM2_RIGHT_SIDE_ENGINE_HIT2B */ sub_68006();
                     /* STARTTIMER */ sub_3559( ref l_U499 );
                     /* CLEANOBJECT */ sub_6456( l_U373 );
                    l_U98 = 4;
                     /* WRITESCRIPTLOG */ sub_1646( "CR", "eRightEngineState = RIGHT_ENGINE_COMPLETE", 0 );
                }
            }
        }
        if ( /* ISTIMERDONE */ sub_3692( ref l_U499 ))
        {
             /* P_TM2_CREATE_RIGHT_SIDE_ENGINE_TARGET */ sub_53852();
             /* RESETTIMER */ sub_4268( ref l_U499 );
        }
        if ((l_U98 == 4) || ((l_U97 == 4) || (((l_U98 == 1) AND (l_U97 == 2)) || ((l_U98 == 2) AND (l_U97 == 1)))))
        {
            if (l_U400 == 0)
            {
                 /* P_TM2_ENGINE_HIT_COMPLETE */ sub_68777();
                 /* P_PLAY_747_FINALSEQUENCE */ sub_70349();
                 /* DISABLETIMER */ sub_70914( ref l_U451 );
                l_U92 = 11;
                 /* WRITESCRIPTLOG */ sub_1646( "CR", "Starting SUCCESS timer", 0 );
                l_U400 = 1;
            }
        }
        if ( /* ISTIMERDONE */ sub_3692( ref l_U481 ))
        {
             /* P_CAM_SHAKE_FORCE_DEACTIVATE */ sub_71026( ref l_U319, 1 );
            CAMERA_USE_HANDY_CAM( 0, 1065353216, 0 );
            l_U92 = 9;
             /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_HANDLE_CUT_05_SUCCESS", 0 );
        }
        if ( /* ISTIMERDONE */ sub_3692( ref l_U451 ))
        {
            CAMERA_USE_HANDY_CAM( 0, 1065353216, 0 );
            l_U92 = 10;
             /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_NIS_PLANE_ESCAPE", 0 );
        }
        break;
        case 9:
        if (l_U93 == 1)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U423 )))
            {
                STOP_PLAYBACK_RECORDED_VEHICLE( l_U423 );
            }
            if (NOT (IS_VEHICLE_DEAD( l_U415 )))
            {
                STOP_PLAYBACK_RECORDED_VEHICLE( l_U415 );
            }
            if (NOT IS_ARCADE_MODE_ACTIVE())
            {
                 /* CUTSYS_CREATESTANDALONECUTSCENE */ sub_73302( ref l_U678, ref l_U670, 71473, 72565, 72912, 73249, 250, 0 );
                l_U678._fU4 = 2;
                l_U678._fU104 = 0;
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
            DISPLAY_ARCADE_MODE_LEVEL_END( 0 );
             /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_IDLE", 0 );
            l_U92 = 0;
            break;;
        }
        if (( /* CUTSYS_HANDLECUTSCENE */ sub_55977( ref l_U678 )) == 1)
        {
            l_U92 = 12;
             /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 10:
        if ( /* IS_MID_15_FAILURE_SCENE_COMPLETE */ sub_73741())
        {
             /* WRITESCRIPTLOG */ sub_1646( "RJM", "eCheckpointState = CP_IDLE", 0 );
            l_U92 = 0;
        }
        break;
        case 11:
        if (l_U93)
        {
            l_U957 = 1;
             /* P_RW2_START_EXPLODING_PLANE_NIS */ sub_76665();
             /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_NIS_PLANE_EXPLODE", 0 );
        }
        if ( /* ISTIMERDONE */ sub_3692( ref l_U859 ))
        {
            DEACTIVATE_BULLET_TIME( 1, 1 );
             /* WRITESCRIPTLOG */ sub_1646( "CR", "Ending bullet time during exploding plane NIS", 0 );
        }
        if ( /* ISTIMERDONE */ sub_3692( ref l_U822 ))
        {
            SHAKE_CAM( l_U783._fU0, "MEDIUM_EXPLOSION_SHAKE", 0.06000000 );
             /* WRITESCRIPTLOG */ sub_1646( "CR", "Shaking camera when fuselage hits the ground", 0 );
        }
        if ( /* ISTIMERDONE */ sub_3692( ref l_U832 ))
        {
            SHAKE_CAM( l_U783._fU0, "MEDIUM_EXPLOSION_SHAKE", 0.04000000 );
             /* WRITESCRIPTLOG */ sub_1646( "CR", "Shaking camera when tail hits the ground", 0 );
        }
        if ( /* ISTIMERDONE */ sub_3692( ref l_U842 ))
        {
            SHAKE_CAM( l_U783._fU0, "MEDIUM_EXPLOSION_SHAKE", 0.04000000 );
             /* WRITESCRIPTLOG */ sub_1646( "CR", "Shaking camera when the engine hits the ground", 0 );
        }
        if ( /* ISTIMERDONE */ sub_3692( ref l_U900 ))
        {
            l_U884 = START_PARTICLE_FX_LOOPED_ON_OBJECT( "FIN_Plane_Sparks_Smoke_S", l_U393[3], l_U885, l_U888, l_U891 );
            l_U892 = START_PARTICLE_FX_LOOPED_ON_OBJECT( "FIN_Plane_Debris_Sparks_S", l_U393[3], l_U893, l_U896, l_U899 );
        }
        if ( /* ISTIMERDONE */ sub_3692( ref l_U910 ))
        {
             /* P_SAFE_STOP_PARTICLE_FX */ sub_76854( ref l_U884 );
             /* P_SAFE_STOP_PARTICLE_FX */ sub_76854( ref l_U892 );
        }
        if ( /* NIS_IS_SHOT_FINISHED */ sub_78670( ref l_U783, 1 ))
        {
             /* P_RW2_START_EXPLODING_PLANE_NIS_SHOT2 */ sub_78831();
             /* P_INITAILIZE_IMAGEFX_02 */ sub_80203();
        }
        if (l_U868._fU20)
        {
             /* P_TM2_JETPLANE_DECELERATE */ sub_80681();
        }
        if ( /* ISTIMERDONE */ sub_3692( ref l_U936 ))
        {
             /* P_SAFE_STOP_PARTICLE_FX */ sub_76854( ref l_U920 );
             /* P_SAFE_STOP_PARTICLE_FX */ sub_76854( ref l_U928 );
        }
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FIN_CP_12", "PLANECRASH_CAM" )) - 300))
        {
             /* WRITESCRIPTLOG */ sub_1646( "CR", "NIS  Plane Exploded complete", 0 );
             /* P_SAFE_STOP_PARTICLE_FX */ sub_76854( ref l_U946 );
             /* P_SAFE_STOP_PARTICLE_FX */ sub_76854( ref l_U950 );
            if (l_U405)
            {
                l_U95 = 3;
            }
            else
            {
                l_U92 = 9;
            }
        }
        break;
        case 12:
         /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U92 = 0;
         /* WRITESCRIPTLOG */ sub_1646( "CR", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    if (l_U92 != iVar2)
    {
        l_U93 = 1;
    }
    else
    {
        l_U93 = 0;
    }
    return;
}

/* P_HANDLE_IMAGEFX */ void sub_13735(unknown uParam0)
{
    int I;
    int J;

    switch (l_U49)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_1646( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                 /* CREATETIMER */ sub_3409( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                 /* STARTTIMER */ sub_3559( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U49 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if ( /* ISTIMERDONE */ sub_3692( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                     /* CREATETIMER */ sub_3409( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                     /* STARTTIMER */ sub_3559( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        PRINTSTRING( "******* [CO] ***** STARTING CHILD FOR index : " );
                        PRINTINT( J );
                        PRINTNL();
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                             /* CREATETIMER */ sub_3409( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                             /* STARTTIMER */ sub_3559( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if ( /* ISTIMERDONE */ sub_3692( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

/* P_HANDLE_SP_ACHIEVEMENTS */ void sub_14569()
{
    switch (l_U954)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_1646( "CCB", "eGameComplete - STATE_CHALLENGE_IDLE", 0 );
        l_U954 = 1;
        break;
        case 1:
        if (l_U92 >= 8)
        {
            if (l_U92 >= 9)
            {
                if (l_U957)
                {
                    if (NOT IS_IN_STORY_MODE())
                    {
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "The player completed the game in Arcade mode or Chapter Select.", 0 );
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "No achievement...", 0 );
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "eGameComplete - STATE_CHALLENGE_COMPLETE", 0 );
                        l_U954 = 2;
                    }
                    else if (GET_LOWEST_USED_GAME_DIFFICULTY() == 0)
                    {
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "The player completed the game on GAMEDIFFICULTY_SUPEREASY difficulty level.", 0 );
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "No achievement...", 0 );
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "eGameComplete - STATE_CHALLENGE_COMPLETE", 0 );
                        l_U954 = 2;
                    }
                    else if (GET_LOWEST_USED_GAME_DIFFICULTY() == 1)
                    {
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "The player completed the game on GAMEDIFFICULTY_EASY difficulty level.", 0 );
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "No achievement...", 0 );
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "eGameComplete - STATE_CHALLENGE_COMPLETE", 0 );
                        l_U954 = 2;
                    }
                    else if (GET_LOWEST_USED_GAME_DIFFICULTY() == 2)
                    {
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "The player completed the game on GAMEDIFFICULTY_MEDIUM difficulty level.", 0 );
                        if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 6 )))
                        {
                             /* WRITESCRIPTLOG */ sub_1646( "CCB", "Giving the player the SP_FEEL_THE_PAYNE achievement.", 0 );
                            GIVE_ACHIEVEMENT_TO_PLAYER( 6 );
                        }
                        else
                        {
                             /* WRITESCRIPTLOG */ sub_1646( "CCB", "The player already has the SP_FEEL_THE_PAYNE achievement.", 0 );
                        }
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "eGameComplete - STATE_CHALLENGE_COMPLETE", 0 );
                        l_U954 = 2;
                    }
                    else if (GET_LOWEST_USED_GAME_DIFFICULTY() == 3)
                    {
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "The player completed the game on GAMEDIFFICULTY_HARD difficulty level.", 0 );
                        if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 6 )))
                        {
                             /* WRITESCRIPTLOG */ sub_1646( "CCB", "Giving the player the SP_FEEL_THE_PAYNE achievement.", 0 );
                            GIVE_ACHIEVEMENT_TO_PLAYER( 6 );
                        }
                        else
                        {
                             /* WRITESCRIPTLOG */ sub_1646( "CCB", "The player already has the SP_FEEL_THE_PAYNE achievement.", 0 );
                        }
                        if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 7 )))
                        {
                             /* WRITESCRIPTLOG */ sub_1646( "CCB", "Giving the player the SP_SERIOUS_PAYNE achievement.", 0 );
                            GIVE_ACHIEVEMENT_TO_PLAYER( 7 );
                        }
                        else
                        {
                             /* WRITESCRIPTLOG */ sub_1646( "CCB", "The player already has the SP_SERIOUS_PAYNE achievement.", 0 );
                        }
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "eGameComplete - STATE_CHALLENGE_COMPLETE", 0 );
                        l_U954 = 2;
                    }
                    else if (GET_LOWEST_USED_GAME_DIFFICULTY() == 4)
                    {
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "The player completed the game on GAMEDIFFICULTY_HARDCORE difficulty level.", 0 );
                        if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 6 )))
                        {
                             /* WRITESCRIPTLOG */ sub_1646( "CCB", "Giving the player the SP_FEEL_THE_PAYNE achievement.", 0 );
                            GIVE_ACHIEVEMENT_TO_PLAYER( 6 );
                        }
                        else
                        {
                             /* WRITESCRIPTLOG */ sub_1646( "CCB", "The player already has the SP_FEEL_THE_PAYNE achievement.", 0 );
                        }
                        if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 7 )))
                        {
                             /* WRITESCRIPTLOG */ sub_1646( "CCB", "Giving the player the SP_SERIOUS_PAYNE achievement.", 0 );
                            GIVE_ACHIEVEMENT_TO_PLAYER( 7 );
                        }
                        else
                        {
                             /* WRITESCRIPTLOG */ sub_1646( "CCB", "The player already has the SP_SERIOUS_PAYNE achievement.", 0 );
                        }
                        if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 9 )))
                        {
                             /* WRITESCRIPTLOG */ sub_1646( "CCB", "Giving the player the SP_FEELS_NO_PAYNE achievement.", 0 );
                            GIVE_ACHIEVEMENT_TO_PLAYER( 9 );
                        }
                        else
                        {
                             /* WRITESCRIPTLOG */ sub_1646( "CCB", "The player already has the SP_FEELS_NO_PAYNE achievement.", 0 );
                        }
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "eGameComplete - STATE_CHALLENGE_COMPLETE", 0 );
                        l_U954 = 2;
                    }
                    else if (GET_LOWEST_USED_GAME_DIFFICULTY() == 5)
                    {
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "The player completed the game on GAMEDIFFICULTY_OLDSCHOOL difficulty level.", 0 );
                        if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 8 )))
                        {
                             /* WRITESCRIPTLOG */ sub_1646( "CCB", "Giving the player the SP_MAXIMUM_PAYNE achievement.", 0 );
                            GIVE_ACHIEVEMENT_TO_PLAYER( 8 );
                        }
                        else
                        {
                             /* WRITESCRIPTLOG */ sub_1646( "CCB", "The player already has the SP_MAXIMUM_PAYNE achievement.", 0 );
                        }
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "eGameComplete - STATE_CHALLENGE_COMPLETE", 0 );
                        l_U954 = 2;
                    };;;;;;;
                }
            }
        }
        break;
        case 2: break;
    }
    switch (l_U955)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_1646( "CCB", "ePartIII - STATE_CHALLENGE_IDLE", 0 );
        l_U955 = 1;
        break;
        case 1:
        if (l_U92 >= 8)
        {
            if (l_U92 >= 9)
            {
                if (l_U957)
                {
                    if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 19 )))
                    {
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "Giving the player the SP_PART_III_COMPLETE achievement.", 0 );
                        GIVE_ACHIEVEMENT_TO_PLAYER( 19 );
                    }
                    else
                    {
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "The player already has the SP_PART_III_COMPLETE achievement.", 0 );
                    }
                     /* WRITESCRIPTLOG */ sub_1646( "CCB", "ePartIII - STATE_CHALLENGE_COMPLETE", 0 );
                    l_U955 = 2;
                }
            }
        }
        break;
        case 2: break;
    }
    switch (l_U956)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_1646( "CCB", "eOldPainless - STATE_CHALLENGE_IDLE", 0 );
        l_U956 = 1;
        break;
        case 1:
        if (l_U92 >= 8)
        {
            if (l_U92 >= 9)
            {
                if (l_U957)
                {
                    if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
                    {
                        SCRIPT_VAR_HASH_SET_INT( 1701971384, 1 );
                        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
                    }
                    else
                    {
                         /* WRITESCRIPTLOG */ sub_1646( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
                    }
                     /* WRITESCRIPTLOG */ sub_1646( "CCB", "eOldPainless - STATE_CHALLENGE_COMPLETE", 0 );
                    l_U956 = 2;
                }
            }
        }
        break;
        case 2: break;
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_18087()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "INITIALIZE_SCRIPT_DATA - START", 0 );
    l_U528 = 1.75000000;
    l_U518 = 0;
     /* CREATETIMER */ sub_3409( ref l_U720, 1000, 1, 1 );
     /* CREATETIMER */ sub_3409( ref l_U451, l_U450, 1, 0 );
     /* CREATETIMER */ sub_3409( ref l_U490, 500, 1, 0 );
     /* CREATETIMER */ sub_3409( ref l_U499, 500, 1, 0 );
     /* CREATETIMER */ sub_3409( ref l_U481, 4000, 1, 0 );
     /* CREATETIMER */ sub_3409( ref l_U519, l_U530, 1, 0 );
     /* CREATETIMER */ sub_3409( ref l_U508, l_U517, 1, 0 );
     /* CREATETIMER */ sub_3409( ref l_U730, l_U739, 1, 0 );
     /* CREATETIMER */ sub_3409( ref l_U750, l_U759, 1, 0 );
     /* CREATETIMER */ sub_3409( ref l_U760, l_U769, 1, 0 );
     /* CREATETIMER */ sub_3409( ref l_U770, l_U779, 1, 0 );
    l_U97 = 0;
    l_U98 = 0;
    l_U400 = 0;
     /* CREATETIMER */ sub_3409( ref l_U868, l_U877, 1, 0 );
    l_U405 = 0;
    l_U780 = 0;
    l_U781 = 0;
    l_U782 = 0;
    l_U99 = 0;
    l_U474 = 1.00000000;
     /* CREATETIMER */ sub_3409( ref l_U596, l_U563 - 500, 1, 0 );
    l_U96 = 0;
    l_U957 = 0;
    l_U958 = 0;
     /* WRITESCRIPTLOG */ sub_1646( "CR", "INITIALIZE_SCRIPT_DATA - END", 0 );
    return;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_18514()
{
     /* WRITESCRIPTLOG */ sub_1646( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U954 = 0;
    l_U955 = 0;
    l_U956 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1701971384 )))
    {
         /* WRITESCRIPTLOG */ sub_1646( "CCB", "Creating the OldPainless script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1701971384 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
        if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
        {
             /* WRITESCRIPTLOG */ sub_1646( "CCB", "The OldPainless script variable was successfully created...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1646( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1646( "CCB", "The OldPainless script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1701971384, 0 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
    }
    return;
}

/* P_SET_STATIC_DATA */ void sub_19105()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "LOAD_ASSETS - START", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_19202( ref l_U431, 1.00000000, 1.00000000, 1.00000000, 0.00000000, 413457302, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_19202( ref l_U706, 2.00000000, 2.00000000, 2.00000000, 0.00000000, -1042440534, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_19470( ref l_U170[0], "tb_TM2_R2_Dialogue[0] - SAIR_DSSTPL", -622.86000000, -37.69000000, -5.62000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19470( ref l_U170[1], "tb_TM2_R2_Dialogue[1] - SAIR_DSPCM", -612.31000000, -286.54000000, -5.62000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19470( ref l_U170[2], "tb_TM2_R2_Dialogue[2] - SAIR_DSMDN", -619.08000000, -242.87000000, -5.62000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19470( ref l_U170[3], "tb_TM2_R2_Dialogue[3] - SAIR_DSMXV5A", -618.96200000, -596.05130000, -6.73901500, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19470( ref l_U170[4], "tb_TM2_R2_Dialogue[4] - SAIR_DSMXV3A", -626.53740000, -388.75900000, -6.73923200, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19470( ref l_U170[5], "tb_TM2_R2_Dialogue[5] - SAIR_DSMXV5A", -612.17940000, -308.10200000, -6.74649000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_19470( ref l_U170[6], "tb_TM2_R2_Dialogue[6] - SAIR_DSMXV3A", -627.97830000, -191.88660000, -6.74310700, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CAM_SHAKE_CREATE_STRUCT */ sub_20187( ref l_U319, 7, l_U368, 10, -1, l_U369, 0, 0 );
     /* WRITESCRIPTLOG */ sub_1646( "CR", "LOAD_ASSETS - END", 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_19202(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_19470(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CAM_SHAKE_CREATE_STRUCT */ void sub_20187(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (iParam0->_fU168 == 0)
    {
         /* P_CAM_SHAKE_SET_SHAKE_TYPE */ sub_20243( iParam0, uParam1 );
        iParam0->_fU192 = uParam1;
        iParam0->_fU36 = uParam2;
        iParam0->_fU148 = uParam3;
        iParam0->_fU152 = uParam4;
        iParam0->_fU156 = uParam5;
        iParam0->_fU160 = uParam7;
        iParam0->_fU176 = uParam6;
    }
     /* RESETTIMER */ sub_4268( iParam0 + 40 );
     /* RESETTIMER */ sub_4268( iParam0 + 76 );
     /* RESETTIMER */ sub_4268( iParam0 + 112 );
    iParam0->_fU172 = iParam0->_fU176;
    iParam0->_fU164 = 0;
    iParam0->_fU168 = 1;
    iParam0->_fU184 = 0;
    iParam0->_fU188 = 0;
    return;
}

/* P_CAM_SHAKE_SET_SHAKE_TYPE */ void sub_20243(int iParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case 1:
        StrCopy( ref iParam0->_fU4, "SMALL_EXPLOSION_SHAKE", 32 );
        break;
        case 2:
        StrCopy( ref iParam0->_fU4, "MEDIUM_EXPLOSION_SHAKE", 32 );
        break;
        case 3:
        StrCopy( ref iParam0->_fU4, "LARGE_EXPLOSION_SHAKE", 32 );
        break;
        case 4:
        StrCopy( ref iParam0->_fU4, "HAND_SHAKE", 32 );
        break;
        case 5:
        StrCopy( ref iParam0->_fU4, "JOLT_SHAKE", 32 );
        break;
        case 6:
        StrCopy( ref iParam0->_fU4, "VIBRATE_SHAKE", 32 );
        break;
        case 7:
        StrCopy( ref iParam0->_fU4, "WOBBLY_SHAKE", 32 );
        break;
    }
    iParam0->_fU0 = iParam0->_fU192;
    return;
}

/* P_REQUEST_RUNWAY2_PERSISTENT_ASSETS */ void sub_20880()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_REQUEST_RUNWAY2_PERSISTENT_ASSETS - START", 0 );
     /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_20993( ref l_U605, ref g_U1030 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_23916( 879300975, ref g_U1247 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_25870( "level_s_fin_cp_10", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_25870( "w_sp_grnlch_aa_h", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_25870( "veh@std", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_25870( "veh@truck", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_25870( "LEVEL_S_FIN_CP_11", ref g_U1429 );
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_27889( "LEVEL/S_AIR/VIG_13_FIN_MAX_CAR_SHOOT.act", ref g_U1783 );
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_27889( "Vehicle/Vehicle_Car.act", ref g_U1783 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_29838( l_U428, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_29838( l_U531, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_29838( l_U445, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_29838( l_U473, ref g_U1638 );
     /* P_STREAMREQ_SCRIPT_STREAM_INSERT */ sub_31881( "S_AIR_PLANE_RS_02", ref g_U1910 );
     /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_34054( "SCRIPT_MISSION\S_AIR_RUNWAY_02B", ref g_U1950 );
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_REQUEST_RUNWAY2_PERSISTENT_ASSETS - END", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_20993(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21066( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_21066(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_21133( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21391( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_21133(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21391( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21391( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21391( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_22922( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21391( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_21391( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_21391(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21452( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_21452(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_22922(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_23916(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_23970( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24231( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_23970(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24231( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24231( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24231( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_22922( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24231( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_24231( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_24231(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21452( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_25870(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_25922( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26174( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_25922(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26174( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26174( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26174( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_22922( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26174( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_26174( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_26174(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21452( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_INSERT */ void sub_27889(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ sub_27943( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ACTION_TREE asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_28201( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ int sub_27943(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_28201( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_28201( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_ACTION_TREE_LOADED( uParam0 ))
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ACTION_TREE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_28201( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ACTION_TREE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_22922( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_28201( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_ACTION_TREE_LOADED( uParam0 ))
        {
            DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ACTION_TREE is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ACTION_TREE: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_28201( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ACTION_TREE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ void sub_28201(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21452( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ACTION_TREE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ void sub_29838(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ sub_29898( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING asset name: {} ###", 1, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_30168( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ int sub_29898(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_30168( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is loading: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_30168( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The VEHICLE_RECORDING asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_30168( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_22922( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being removed: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_30168( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, iParam0 );
            DISPLAYF( "The VEHICLE_RECORDING is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING: {} ###", 1, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_30168( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ void sub_30168(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21452( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_INSERT */ void sub_31881(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ sub_31937( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32201( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ int sub_31937(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32201( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32201( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32201( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_22922( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32201( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32201( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1537, uParam0 );
                DISPLAYF( "The SCRIPT_STREAM asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM: {} ###", 1, 1537, uParam0 );
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_32201( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ void sub_32201(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21452( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_INSERT */ void sub_34054(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ sub_34107( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing AUDIO_BANK asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_34362( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ int sub_34107(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_34362( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_34362( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The AUDIO_BANK asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_34362( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_22922( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_34362( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The AUDIO_BANK is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing AUDIO_BANK: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_34362( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ void sub_34362(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21452( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_REQUEST_RUNWAY2_NONPERSISTENT_ASSETS */ void sub_36011()
{
     /* WRITESCRIPTLOG */ sub_1646( "AT", "P_REQUEST_RUNWAY2_NONPERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_36129( 2116826630, ref g_U1368 );
    if ((l_U94) AND (g_U829 != 13))
    {
         /* LOADSEAMLESSCUTSCENE */ sub_38947( ref l_U662, 0 );
    }
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_36129(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_36190( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_36440( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_36190(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_36440( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_36440( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_36440( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_36440( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_22922( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_22922( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_36440( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_36440( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_36440(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_21452( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_38947(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_39426(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_39823(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_40225(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ACTION_TREE_IS_LOADED */ int sub_40616(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ int sub_40994(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be requested: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to load: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be removed: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ int sub_41414(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_41800(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_42469(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1646( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9014( uParam0,  /* PLAYER_PED_ID */ sub_2269() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_43010(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_1646( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_1646( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_12280( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_43301( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_43778( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_43778( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44038( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_43778( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44038( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44038( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_43778( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44038( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44038( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44038( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_43778( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44038( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44038( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44038( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_44038( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_45618( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1646( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_43301(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9295( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_1646( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_1646( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_43778(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_44038(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_45618(int iParam0)
{
     /* WRITE_STRING */ sub_11115( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_45706( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_45783( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_45783( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_45783( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_45783( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_45783( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_46653( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU52 );
     /* WRITE_STRING */ sub_11115( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU96 );
     /* WRITE_STRING */ sub_11115( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU100 );
     /* WRITE_STRING */ sub_11115( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU104 );
     /* WRITE_STRING */ sub_11115( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU108 );
     /* WRITE_STRING */ sub_11115( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU112 );
     /* WRITE_STRING */ sub_11115( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU116 );
     /* WRITE_STRING */ sub_11115( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU120 );
     /* WRITE_STRING */ sub_11115( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU124 );
     /* WRITE_STRING */ sub_11115( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU128 );
     /* WRITE_STRING */ sub_11115( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_45952( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_45952( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_45952( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_45706(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_45783(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_45952(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_46653(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* NIS_PRE_SETUP */ void sub_47995(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2307(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_2269(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_2269() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_2269(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* F_MID_12B_FIN_PRECUTSCENESETUP */ int sub_48178()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "F_MID_12B_FIN_PreCutsceneSetup - Start", 0 );
     /* P_SETUP_VEHICLES */ sub_48273();
     /* P_TM2_CREATE_DASILVA */ sub_49480();
     /* WRITESCRIPTLOG */ sub_1646( "MF", "Music Cue: 12", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_6", "FINALE_01_6", 0.00000000, 0, 0, -1082130432, 0 );
     /* WRITESCRIPTLOG */ sub_1646( "CR", "F_MID_12B_FIN_PreCutsceneSetup - End", 0 );
    return 1;
}

/* P_SETUP_VEHICLES */ void sub_48273()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_SETUP_VEHICLES - START", 0 );
    l_U415 =  /* CREATEVEHICLE */ sub_48359( 1979959192, l_U416, l_U419, 0, 0, 0 );
    if (DOES_VEHICLE_EXIST( l_U415 ))
    {
        SET_VEHICLE_CAN_BE_DAMAGED( l_U415, 0 );
        SET_VEHICLE_EXTRA( l_U415, 1, 1 );
        SET_VEHICLE_COLOUR_COMBINATION( l_U415, 0 );
        SET_VEHICLE_VISIBLE( l_U415, 0 );
    }
    l_U423 =  /* CREATEVEHICLE */ sub_48359( 877881452, l_U424, l_U427, 0, 0, 0 );
    if (DOES_VEHICLE_EXIST( l_U423 ))
    {
        SET_VEHICLE_CAN_BE_DAMAGED( l_U423, 0 );
        SET_VEHICLE_EXTRA( l_U423, 1, 0 );
        SET_VEHICLE_EXTRA( l_U423, 2, 0 );
        SET_VEHICLE_COLOUR_COMBINATION( l_U423, 0 );
    }
    l_U729 =  /* CREATEOBJECTNOOFFSET */ sub_49120( -67723549, l_U742, l_U743, l_U744, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_SETUP_VEHICLES - END", 0 );
    return;
}

/* CREATEVEHICLE */ void sub_48359(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_48486( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* LOADMODEL */ void sub_48486(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_11115( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_49120(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_48486( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_TM2_CREATE_DASILVA */ void sub_49480()
{
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_CREATE_DASILVA start", 0 );
    l_U444 =  /* CREATEPEDINVEHICLE */ sub_49565( ref l_U431, l_U415, -1, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U444 )))
    {
        SET_PED_PROOFS( l_U444, 1, 1, 1, 1, 1 );
        SET_PED_GORE( l_U444, 0 );
        SET_PED_VISIBLE( l_U444, 0 );
    }
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_CREATE_DASILVA end", 0 );
    return;
}

/* CREATEPEDINVEHICLE */ void sub_49565(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4)
{
    if ((HAS_MODEL_LOADED( iParam0->_fU16 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_48486( iParam0->_fU16, 1 );
    }
    if (((IS_VEHICLE_DEAD( uParam1 )) == 0) AND ((DOES_VEHICLE_EXIST( uParam1 )) == 1))
    {
        iParam0->_fU40 = CREATE_PED_INSIDE_VEHICLE( uParam1, iParam0->_fU24, iParam0->_fU16, uParam2, uParam4, iParam0->_fU48 );
    }
    else
    {
        SCRIPT_ASSERT( "The vehicle your trying to create a ped inside of is not valid!!!", 0 );
    }
    if (iParam3 == 1)
    {
        while ((DOES_PED_EXIST( iParam0->_fU40 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for ped created inside a vehicle to exist... ###", 0 );
            WAIT( 0 );
        }
    }
     /* SETPEDDEFAULTSTATS */ sub_49975( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_50076( iParam0->_fU40 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        iParam0->_fU44 = 1;
    }
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_49975(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_50076(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_MID_12B_FIN_CUTSCENEREGISTRATION */ void sub_50579()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_MID_12B_FIN_CutsceneRegistration - Start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
    {
        DETACH_PED(  /* PLAYER_PED_ID */ sub_2269(), 1 );
    }
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2269(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_SP_GrnLch_Aa_H", 0 );
        }
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE(  /* PLAYER_PED_ID */ sub_2269(), l_U415, 0, l_U420, 0.00000000, 360.00000000, 0, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_2269(), "/Global/VIG_13_FIN_MAX_CAR_SHOOT/VIG_13_FIN_BLEND_IN_ROOT" );
    }
    if (NOT (IS_PED_DEAD( l_U444 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U444, "Wlsn_Spp_Unif", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( l_U415 )))
    {
        CUTSCENE_REGISTER_VEHICLE_COPY( l_U415, "car_detective" );
    }
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U423, "plane_jet", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_MID_12B_FIN_CutsceneRegistration - End", 0 );
    return;
}

/* P_MID_12B_FIN_HANDLECUTSCENE */ void sub_51096()
{
    if (l_U635._fU52)
    {
         /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_51165( 0, 1, 0, -859915232, -859915232, 0 );
         /* P_START_VEHICLE_RECORDINGS_LEFTSIDE_HIT1 */ sub_51296( 0.00000000 );
    }
    return;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_51165(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* P_START_VEHICLE_RECORDINGS_LEFTSIDE_HIT1 */ void sub_51296(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_START_VEHICLE_RECORDINGS_LEFTSIDE_HIT1 - START", 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_51429( l_U423, l_U428, uParam0, l_U447, 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_51429( l_U415, l_U445, uParam0, l_U446, 0 );
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_START_VEHICLE_RECORDINGS_LEFTSIDE_HIT1 - END", 0 );
    return;
}

/* P_START_VEHICLE_PLAYBACK */ void sub_51429(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3, boolean bParam4)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
    }
     /* LOADVEHICLERECORDING */ sub_51507( uParam1, 1 );
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
        SET_PLAYBACK_SPEED( uParam0, uParam2 );
        if (fParam3 > 0.00000000)
        {
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, fParam3 );
        }
    }
    if (bParam4)
    {
        while ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
        {
             /* WRITE_STRING */ sub_11115( "Waiting for vehicle to start playing recorded path." );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADVEHICLERECORDING */ void sub_51507(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a recording to be loaded: Rec# {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* F_MID_12B_FIN_POSTCUTSCENE */ int sub_51941()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "F_MID_12B_FIN_PostCutscene - Start", 0 );
     /* WRITESCRIPTLOG */ sub_1646( "CR", "F_MID_12B_FIN_PostCutscene - End", 0 );
    return 1;
}

/* P_MID_12B_FIN_PREPAREBLENDOUT */ void sub_52083()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_MID_12B_FIN_PrepareBlendout - Start", 0 );
     /* P_SETUP_PLAYER */ sub_52176();
     /* P_TM2_SETUP_WEATHER_TOD */ sub_52819();
    SET_CAMERA_OVERRIDE( "FINALE_GRENADE_FRONT_AIM", "FINALE_GRENADE_FRONT_AIM", 0, 1, 1 );
    LOAD_SCENE( g_U2014[13] );
     /* P_START_SP_CHALLENGES */ sub_53059();
     /* P_START_VERSUS_JETPLANE_GAMEPLAY */ sub_53137();
    CAMERA_USE_HANDY_CAM( 1, 5, 0 );
     /* P_CAM_SHAKE_ACTIVATE */ sub_54853( ref l_U319 );
    CAMERA_USE_HANDY_CAM( 1, l_U318, 0 );
    ENABLE_TINNITUS( 0 );
    if (NOT l_U94)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 47.50000000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[13], 1065353216, 0 );
    }
    else
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[13], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[13], 1065353216, 0 );
    }
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_MID_12B_FIN_PrepareBlendout - End", 0 );
    return;
}

/* P_SETUP_PLAYER */ void sub_52176()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_SETUP_PLAYER - START", 0 );
    SET_CAMERA_OVERRIDE( "FINALE_GRENADE_FRONT_AIM", "FINALE_GRENADE_FRONT_AIM", 0, 1, 1 );
    SET_RAIL_RELATIVE_DIR( 5, 0 );
    SET_CAM_VIEW_MODE( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
    {
        REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_2269() );
         /* MAL_GIVEPEDWEAPON */ sub_52366(  /* PLAYER_PED_ID */ sub_2269(), 879300975, 25000, 0, 0 );
        PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_2269(), "/Global/VIG_13_FIN_MAX_CAR_SHOOT/VIG_13_FIN_ROOT" );
        SET_ALLOW_PLAYER_REACT_TO_EXPLOSION(  /* PLAYER_PED_ID */ sub_2269(), 1, 0 );
        ATTACH_PED_TO_VEHICLE(  /* PLAYER_PED_ID */ sub_2269(), l_U415, 0, l_U420, 0, 360.00000000, 1, 0, 0, 1 );
    }
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_SETUP_PLAYER - END", 0 );
    return;
}

/* MAL_GIVEPEDWEAPON */ void sub_52366(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                 /* MAL_WRITESCRIPTLOG */ sub_52534( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_WRITESCRIPTLOG */ void sub_52534(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* P_TM2_SETUP_WEATHER_TOD */ void sub_52819()
{
     /* WRITESCRIPTLOG */ sub_1646( "SA", "P_TM2_SETUP_WEATHER_TOD", 0 );
     /* P_SET_WEATHER_TOD_6CLOUDY */ sub_52892();
    return;
}

/* P_SET_WEATHER_TOD_6CLOUDY */ void sub_52892()
{
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
    FREEZE_TIME_OF_DAY( 6, 0 );
    return;
}

/* P_START_SP_CHALLENGES */ void sub_53059()
{
     /* WRITESCRIPTLOG */ sub_1646( "CCB", "P_START_SP_CHALLENGES", 0 );
    return;
}

/* P_START_VERSUS_JETPLANE_GAMEPLAY */ void sub_53137()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_START_VERSUS_JETPLANE_GAMEPLAY - START", 0 );
     /* P_START_VEHICLE_RECORDINGS_LEFTSIDE_HIT1 */ sub_51296( l_U528 );
     /* P_TM2_CREATE_LEFT_SIDE_ENGINE_TARGET */ sub_53246();
     /* P_TM2_CREATE_RIGHT_SIDE_ENGINE_TARGET */ sub_53852();
    FINALE_GRENADE_LAUNCHER_SETTINGS( 1, 877881452, 737677776, -1552305464 );
     /* STARTTIMER */ sub_3559( ref l_U508 );
     /* STARTTIMER */ sub_3559( ref l_U730 );
     /* STARTTIMER */ sub_3559( ref l_U750 );
     /* STARTTIMER */ sub_3559( ref l_U760 );
     /* P_STREAMREQ_SCRIPT_STREAM_PLAY_FRONTEND */ sub_54246( "S_AIR_PLANE_RS_02", ref g_U1910 );
    l_U740 = GET_SOUND_ID();
    PLAY_SOUND_FRONTEND( l_U740, "S_AIR_PLANE_RS_PLANE_FLYBY_START" );
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_START_VERSUS_JETPLANE_GAMEPLAY - END", 0 );
    return;
}

/* P_TM2_CREATE_LEFT_SIDE_ENGINE_TARGET */ void sub_53246()
{
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_CREATE_LEFT_SIDE_ENGINE_TARGET start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        l_U372 =  /* CREATEOBJECT */ sub_53404( 737677776, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U372 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U372, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( l_U372, 1 );
        }
    }
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_CREATE_LEFT_SIDE_ENGINE_TARGET end", 0 );
    return;
}

/* CREATEOBJECT */ void sub_53404(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_48486( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_TM2_CREATE_RIGHT_SIDE_ENGINE_TARGET */ void sub_53852()
{
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_CREATE_RIGHT_SIDE_ENGINE_TARGET start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        l_U373 =  /* CREATEOBJECT */ sub_53404( -1552305464, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U373 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U373, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( l_U373, 1 );
        }
    }
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_CREATE_RIGHT_SIDE_ENGINE_TARGET end", 0 );
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_PLAY_FRONTEND */ void sub_54246(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_7237( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_7446( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Playing the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* P_CAM_SHAKE_ACTIVATE */ void sub_54853(int iParam0)
{
     /* RESETTIMER */ sub_4268( iParam0 + 40 );
     /* RESETTIMER */ sub_4268( iParam0 + 76 );
     /* RESETTIMER */ sub_4268( iParam0 + 112 );
    iParam0->_fU172 = 1;
    iParam0->_fU164 = 0;
    return;
}

/* F_MID_12B_FIN_HANDLEBLENDOUT */ int sub_55119()
{
    return 1;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_55173(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_1646( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_55397( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 55294, 55344, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_55294()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_55344()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_55397(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* P_SET_DASILVA_AND_PLANE_VISIBLE */ void sub_55728()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_SET_DASILVA_AND_PLANE_VISIBLE - START", 0 );
    if (NOT (IS_PED_DEAD( l_U444 )))
    {
        SET_PED_VISIBLE( l_U444, 1 );
    }
    if (DOES_VEHICLE_EXIST( l_U415 ))
    {
        SET_VEHICLE_VISIBLE( l_U415, 1 );
    }
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_SET_DASILVA_AND_PLANE_VISIBLE - END", 0 );
    return;
}

/* CUTSYS_HANDLECUTSCENE */ void sub_55977(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_1646( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_1646( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_1646( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_1646( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_1646( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_1646( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_38947( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_1646( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_47995( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_47995( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_1646( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_57242( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_47995( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_57622( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_57622( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_57242(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2269(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2269(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2269(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2269(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2269(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_57622(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2307(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_2269(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_57720();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_57720()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2269(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2269(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_2269(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_2269(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* F_IMAGEFX_FADE_IN */ int sub_58348()
{
    if (l_U50)
    {
         /* WRITESCRIPTLOG */ sub_1646( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U50 = 0;
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_1646( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

/* P_HANDLE_DIALOGUES */ void sub_58628()
{
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58667( ref l_U170[0], 0 )) == 1)
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_58875( ref l_U100 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_58875( ref l_U110 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_59000( 2, l_U444, "DA_SILVA", ref l_U110, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_59246( "SAIR_DSSTPL", ref l_U110, 8, 1 );
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58667( ref l_U170[2], 0 )) == 1)
    {
        ;
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58667( ref l_U170[4], 0 )) == 1)
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_58875( ref l_U130 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_58875( ref l_U120 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_59000( 2, l_U444, "DA_SILVA", ref l_U120, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_59246( "SAIR_DSMDN", ref l_U120, 8, 1 );
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58667( ref l_U170[3], 0 )) == 1)
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_58875( ref l_U130 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_59000( 1,  /* PLAYER_PED_ID */ sub_2269(), "MAX", ref l_U130, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_59000( 2, l_U444, "DA_SILVA", ref l_U130, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_59246( "SAIR_VIG13J", ref l_U130, 8, 1 );
        SET_PED_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_2269(), l_U444 );
        l_U958 = 1;
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58667( ref l_U170[5], 0 )) == 1)
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_58875( ref l_U140 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_59000( 1,  /* PLAYER_PED_ID */ sub_2269(), "MAX", ref l_U140, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_59000( 2, l_U444, "DA_SILVA", ref l_U140, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_59246( "SAIR_DSPCM", ref l_U140, 8, 1 );
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_58667( ref l_U170[6], 0 )) == 1)
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_58875( ref l_U150 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_59000( 2, l_U444, "DA_SILVA", ref l_U150, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_59246( "SAIR_DSMXV22A", ref l_U150, 8, 1 );
        SET_PED_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_2269(), l_U444 );
    }
    if ((l_U958) AND ((NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_60597( l_U150 ))) AND (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_60597( l_U130 )))))
    {
         /* MAL_WRITESCRIPTLOG */ sub_52534( "CLEARING PRIMARY LOOKAT" );
        CLEAR_PED_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_2269() );
        l_U958 = 0;
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_58667(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_58743(  /* PLAYER_PED_ID */ sub_2269(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* F_ISPEDINTRIGGERBOX */ int sub_58743(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_58875(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_59000(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_59246(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_59291( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_59291(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_59378( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_59378(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_59430( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_59948( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_59430(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_59948(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_60597(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_60640( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_60640(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_HANDLE_DELETING_DAMAGED_ENGINE_PROPS */ void sub_60897()
{
    if (l_U97 == 1)
    {
        if (DOES_OBJECT_EXIST( l_U378 ))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( l_U378, "P_LEFT_ENG_2_HB", "ap_anim_jet" )))
            {
                 /* WRITESCRIPTLOG */ sub_1646( "GA", "P_LEFT_ENG_2_HB done anim, deleting.", 0 );
                 /* CLEANOBJECT */ sub_6456( l_U378 );
            }
        }
    }
    if (l_U97 == 3)
    {
        if (DOES_OBJECT_EXIST( l_U381 ))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( l_U381, "P_LEFT_ENG_3_HA", "ap_anim_jet" )))
            {
                 /* WRITESCRIPTLOG */ sub_1646( "GA", "P_LEFT_ENG_3_HA done anim, deleting.", 0 );
                 /* CLEANOBJECT */ sub_6456( l_U381 );
            }
        }
    }
    if (l_U98 == 1)
    {
        if (DOES_OBJECT_EXIST( l_U385 ))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( l_U385, "P_RIGHT_ENG_1_HA", "ap_anim_jet" )))
            {
                 /* WRITESCRIPTLOG */ sub_1646( "GA", "P_RIGHT_ENG_1_HA done anim, deleting.", 0 );
                 /* CLEANOBJECT */ sub_6456( l_U385 );
            }
        }
    }
    if (l_U98 == 3)
    {
        if (DOES_OBJECT_EXIST( l_U391 ))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( l_U391, "P_RIGHT_ENG_4_HA", "ap_anim_jet" )))
            {
                 /* WRITESCRIPTLOG */ sub_1646( "GA", "P_RIGHT_ENG_4_HA done anim, deleting.", 0 );
                 /* CLEANOBJECT */ sub_6456( l_U391 );
            }
        }
    }
    return;
}

/* P_SPEED_UP_PLANE */ void sub_61516()
{
    if ((l_U518 == 1) AND ( /* ISTIMERDONE */ sub_3692( ref l_U519 )))
    {
        l_U528 += l_U529;
         /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_61593( l_U423, l_U528 );
         /* WRITESCRIPTLOG */ sub_1646( "CR", "Increasing Plane speed", 0 );
         /* RESETTIMER */ sub_4268( ref l_U519 );
         /* STARTTIMER */ sub_3559( ref l_U519 );
    }
    return;
}

/* P_SET_VEHICLE_PLAYBACK_SPEED */ void sub_61593(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            SET_PLAYBACK_SPEED( uParam0, uParam1 );
        }
    }
    return;
}

/* P_HANDLE_CAMSHAKE_IN_GAMEPLAY */ void sub_61744()
{
     /* P_CAM_SHAKE_HANDLE */ sub_61790( ref l_U319 );
    if (IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2269() ), l_U370 ))
    {
        if (IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2269() ), l_U370 / 4 ))
        {
             /* P_SHAKE_CAM */ sub_62019( "SMALL_EXPLOSION_SHAKE", l_U371 );
             /* WRITESCRIPTLOG */ sub_1646( "CR", "Shaking Camera - Big - Explosion has gone off within 25m to the player", 0 );
        }
        else if (IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2269() ), l_U370 / 2 ))
        {
             /* P_SHAKE_CAM */ sub_62019( "SMALL_EXPLOSION_SHAKE", l_U371 / 2 );
             /* WRITESCRIPTLOG */ sub_1646( "CR", "Shaking Camera - Medium - Explosion has gone off within 50m to the player", 0 );
        }
        else
        {
             /* P_SHAKE_CAM */ sub_62019( "SMALL_EXPLOSION_SHAKE", l_U371 / 4 );
             /* WRITESCRIPTLOG */ sub_1646( "CR", "Shaking Camera - Small - Explosion has gone off within 100m to the player", 0 );
        }
    }
    if (((NOT l_U780) AND (l_U750._fU16)) || ( /* ISTIMERDONE */ sub_3692( ref l_U750 )))
    {
         /* P_SHAKE_CAM */ sub_62019( "LARGE_EXPLOSION_SHAKE", l_U746 );
        if (NOT l_U781)
        {
            SET_PAD_SHAKE( 0, 5000, l_U749 );
            l_U781 = 1;
        }
    }
    if (((NOT l_U782) AND (l_U760._fU16)) || ( /* ISTIMERDONE */ sub_3692( ref l_U760 )))
    {
         /* P_SHAKE_CAM */ sub_62019( "LARGE_EXPLOSION_SHAKE", l_U747 );
        if (NOT l_U780)
        {
            SET_PAD_SHAKE( 0, l_U779, l_U748 );
            l_U780 = 1;
             /* STARTTIMER */ sub_3559( ref l_U770 );
        }
    }
    if ((l_U770._fU16) || ( /* ISTIMERDONE */ sub_3692( ref l_U770 )))
    {
        l_U782 = 1;
    }
    return;
}

/* P_CAM_SHAKE_HANDLE */ void sub_61790(int iParam0)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam0->_fU164 == 0)
        {
             /* CREATETIMER */ sub_3409( iParam0 + 40, iParam0->_fU148, 1, 0 );
             /* STARTTIMER */ sub_3559( iParam0 + 40 );
            if (iParam0->_fU152 > 0)
            {
                 /* CREATETIMER */ sub_3409( iParam0 + 76, iParam0->_fU152, 1, 0 );
                 /* STARTTIMER */ sub_3559( iParam0 + 76 );
            }
            iParam0->_fU164 = 1;
        }
        if ( /* ISTIMERDONE */ sub_3692( iParam0 + 40 ))
        {
             /* WRITESCRIPTLOG */ sub_1646( "ML", "P_HANDLE_CAM_SHAKE is shaking the camera", "---" );
             /* P_SHAKE_CAM */ sub_62019( iParam0 + 4, iParam0->_fU36 );
            if (iParam0->_fU156 > 0)
            {
                 /* CREATETIMER */ sub_3409( iParam0 + 112, iParam0->_fU156, 1, 0 );
                 /* STARTTIMER */ sub_3559( iParam0 + 112 );
            }
        }
        if ( /* ISTIMERDONE */ sub_3692( iParam0 + 112 ))
        {
             /* P_SHAKE_CAM */ sub_62019( iParam0 + 4, iParam0->_fU36 );
             /* CREATETIMER */ sub_3409( iParam0 + 112, iParam0->_fU156, 1, 0 );
             /* STARTTIMER */ sub_3559( iParam0 + 112 );
        }
        if ( /* ISTIMERDONE */ sub_3692( iParam0 + 76 ))
        {
             /* WRITESCRIPTLOG */ sub_1646( "ML", "P_HANDLE_CAM_SHAKE is done shaking the camera", "---" );
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
             /* RESETTIMER */ sub_4268( iParam0 + 112 );
            iParam0->_fU172 = 0;
        }
    }
    return;
}

/* P_SHAKE_CAM */ void sub_62019(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    SHAKE_GAMEPLAY_CAM( uParam0, uParam1 );
    return;
}

/* P_HANDLE_INFINITE_ADRENALINE_IN_GAMEPLAY */ void sub_63045()
{
    if (GET_ADRENALINE_AMT() < 0.50000000)
    {
        SET_ADRENALINE_AMT( 1.00000000 );
    }
    return;
}

/* P_START_747_ANIM */ void sub_63293()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_START_747_ANIM - Start", 0 );
    if (DOES_OBJECT_EXIST( l_U729 ))
    {
        PLAY_OBJECT_ANIM( l_U729, "P_AP_747_A", "ap_objModels", 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U729, "P_AP_747_A", "ap_objModels", l_U745 );
    }
    return;
}

/* P_TM2_LEFT_SIDE_ENGINE_HIT1B */ void sub_63544(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_LEFT_SIDE_ENGINE_HIT1B start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        SET_VEHICLE_EXTRA( l_U423, 1, 1 );
        l_U429 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "FIN_Engine_Dest_loop_S", l_U423, l_U401, l_U403, l_U404, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
        if (NOT (DOES_OBJECT_EXIST( l_U374 )))
        {
            l_U374 =  /* CREATEOBJECT */ sub_53404( -646760381, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U374 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U374, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
         /* CLEANOBJECT */ sub_6456( l_U375 );
         /* CLEANOBJECT */ sub_6456( l_U376 );
        if (NOT (DOES_OBJECT_EXIST( l_U377 )))
        {
            l_U377 =  /* CREATEOBJECT */ sub_53404( -1268105652, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U377 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U377, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U377, "P_LEFT_ENG_2_HA", "ap_anim_jet", 0.00000000, 1, 0 );
            }
        }
        if (bParam0)
        {
             /* CLEANOBJECT */ sub_6456( l_U378 );
        }
        else if (NOT (DOES_OBJECT_EXIST( l_U378 )))
        {
            l_U378 =  /* CREATEOBJECT */ sub_53404( -1623387150, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U378 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U378, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U378, "P_LEFT_ENG_2_HB", "ap_anim_jet", 0.00000000, 0, 1 );
            }
        }
        if (NOT (DOES_OBJECT_EXIST( l_U379 )))
        {
            l_U379 =  /* CREATEOBJECT */ sub_53404( 102195621, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U379 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U379, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
        if (NOT (DOES_OBJECT_EXIST( l_U380 )))
        {
            l_U380 =  /* CREATEOBJECT */ sub_53404( -136067778, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U380 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U380, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U380, "P_LEFT_ENG_2_HD", "ap_anim_jet", 0.00000000, 1, 0 );
            }
        }
    }
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_LEFT_SIDE_ENGINE_HIT1B end", 0 );
    return;
}

/* P_TM2_LEFT_SIDE_ENGINE_HIT2A */ void sub_64773()
{
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_LEFT_SIDE_ENGINE_HIT2A start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        SET_VEHICLE_EXTRA( l_U423, 1, 1 );
        if (NOT (DOES_OBJECT_EXIST( l_U374 )))
        {
            l_U374 =  /* CREATEOBJECT */ sub_53404( -646760381, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U374 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U374, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
         /* CLEANOBJECT */ sub_6456( l_U377 );
         /* CLEANOBJECT */ sub_6456( l_U378 );
         /* CLEANOBJECT */ sub_6456( l_U379 );
        if (NOT (DOES_OBJECT_EXIST( l_U380 )))
        {
            l_U380 =  /* CREATEOBJECT */ sub_53404( -136067778, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U380 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U380, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U380, "P_LEFT_ENG_2_HD", "ap_anim_jet", 0.00000000, 1, 0 );
            }
        }
        l_U381 =  /* CREATEOBJECT */ sub_53404( -298298586, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U381 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U381, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U381, "P_LEFT_ENG_3_HA", "ap_anim_jet", 0.00000000, 0, 1 );
        }
        l_U382 =  /* CREATEOBJECT */ sub_53404( -2019064318, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U382 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U382, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_LEFT_SIDE_ENGINE_HIT2A end", 0 );
    return;
}

/* P_TM2_LEFT_SIDE_ENGINE_HIT2B */ void sub_65697()
{
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_LEFT_SIDE_ENGINE_HIT2B start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        SET_VEHICLE_EXTRA( l_U423, 1, 1 );
         /* CLEANOBJECT */ sub_6456( l_U381 );
         /* CLEANOBJECT */ sub_6456( l_U382 );
        if (NOT (DOES_OBJECT_EXIST( l_U380 )))
        {
            l_U380 =  /* CREATEOBJECT */ sub_53404( -136067778, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U380 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U380, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U380, "P_LEFT_ENG_2_HD", "ap_anim_jet", 0.00000000, 1, 0 );
            }
        }
        if (NOT (DOES_OBJECT_EXIST( l_U383 )))
        {
            l_U383 =  /* CREATEOBJECT */ sub_53404( 2080140486, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U383 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U383, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U383, "P_LEFT_ENG_4_HC", "ap_anim_jet", 0.00000000, 1, 0 );
            }
        }
    }
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_LEFT_SIDE_ENGINE_HIT2B end", 0 );
    return;
}

/* P_TM2_RIGHT_SIDE_ENGINE_HIT1B */ void sub_66423()
{
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_RIGHT_SIDE_ENGINE_HIT1B start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        SET_VEHICLE_EXTRA( l_U423, 2, 1 );
        l_U430 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "FIN_Engine_Dest_loop_S", l_U423, l_U402, l_U404, l_U404, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
        if (NOT (DOES_OBJECT_EXIST( l_U384 )))
        {
            l_U384 =  /* CREATEOBJECT */ sub_53404( 446170022, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U384 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U384, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
         /* CLEANOBJECT */ sub_6456( l_U386 );
        if (NOT (DOES_OBJECT_EXIST( l_U387 )))
        {
            l_U387 =  /* CREATEOBJECT */ sub_53404( -1534515949, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U387 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U387, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U387, "P_RIGHT_ENG_2_HA", "ap_anim_jet", 0.00000000, 1, 0 );
            }
        }
        if (NOT (DOES_OBJECT_EXIST( l_U388 )))
        {
            l_U388 =  /* CREATEOBJECT */ sub_53404( -1832025700, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U388 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U388, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
    }
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_RIGHT_SIDE_ENGINE_HIT1B end", 0 );
    return;
}

/* P_TM2_RIGHT_SIDE_ENGINE_HIT2A */ void sub_67266()
{
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_RIGHT_SIDE_ENGINE_HIT2A start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        SET_VEHICLE_EXTRA( l_U423, 2, 1 );
        if (NOT (DOES_OBJECT_EXIST( l_U384 )))
        {
            l_U384 =  /* CREATEOBJECT */ sub_53404( 446170022, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U384 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U384, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
         /* CLEANOBJECT */ sub_6456( l_U387 );
         /* CLEANOBJECT */ sub_6456( l_U388 );
        l_U389 =  /* CREATEOBJECT */ sub_53404( -400668184, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U389 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U389, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        }
        l_U390 =  /* CREATEOBJECT */ sub_53404( -132257305, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U390 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U390, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U390, "P_RIGHT_ENG_3_HB", "ap_anim_jet", 0.00000000, 1, 0 );
        }
    }
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_RIGHT_SIDE_ENGINE_HIT2A end", 0 );
    return;
}

/* P_TM2_RIGHT_SIDE_ENGINE_HIT2B */ void sub_68006()
{
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_RIGHT_SIDE_ENGINE_HIT2B start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        SET_VEHICLE_EXTRA( l_U423, 2, 1 );
        if (NOT (DOES_OBJECT_EXIST( l_U384 )))
        {
            l_U384 =  /* CREATEOBJECT */ sub_53404( 446170022, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U384 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U384, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
         /* CLEANOBJECT */ sub_6456( l_U389 );
         /* CLEANOBJECT */ sub_6456( l_U390 );
        l_U391 =  /* CREATEOBJECT */ sub_53404( 507765432, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U391 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U391, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U391, "P_RIGHT_ENG_4_HA", "ap_anim_jet", 0.00000000, 0, 1 );
        }
        l_U392 =  /* CREATEOBJECT */ sub_53404( -878494344, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U392 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U392, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
     /* WRITESCRIPTLOG */ sub_1646( "GA", "P_TM2_RIGHT_SIDE_ENGINE_HIT2B end", 0 );
    return;
}

/* P_TM2_ENGINE_HIT_COMPLETE */ void sub_68777()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_TM2_ENGINE_HIT_COMPLETE start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        l_U393[0] =  /* CREATEOBJECT */ sub_53404( 1570425160, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        l_U393[1] =  /* CREATEOBJECT */ sub_53404( 1796269108, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        l_U393[2] =  /* CREATEOBJECT */ sub_53404( 1687227279, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        l_U393[3] =  /* CREATEOBJECT */ sub_53404( 1081193277, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        l_U393[4] =  /* CREATEOBJECT */ sub_53404( -646760381, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        l_U393[5] =  /* CREATEOBJECT */ sub_53404( 446170022, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U393[0] ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U393[0], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U393[0], "P_AN_FUSPRT_AB", "ap_anim_jet", 0.00000000, 0, 1 );
        }
        if (DOES_OBJECT_EXIST( l_U393[1] ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U393[1], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U393[1], "P_AN_FUSPRT_AA", "ap_anim_jet", 0.00000000, 0, 1 );
        }
        if (DOES_OBJECT_EXIST( l_U393[2] ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U393[2], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U393[2], "P_AN_TALEXP_AA", "ap_anim_jet", 0.00000000, 0, 1 );
        }
        if (DOES_OBJECT_EXIST( l_U393[3] ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U393[3], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U393[3], "P_AN_JETBOD_AA", "ap_anim_jet", 0.00000000, 0, 1 );
            START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "FIN_Explo_Plane_S", l_U393[3], 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
            START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "Veh_Explo_Truck_S", l_U393[3], 0.00000000, -5.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
        }
        if (DOES_OBJECT_EXIST( l_U393[4] ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U393[4], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U393[4], "P_AN_EXTRA_1_SWP", "ap_anim_jet", 0.00000000, 0, 1 );
        }
        if (DOES_OBJECT_EXIST( l_U393[5] ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U393[5], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U393[5], "P_AN_EXTRA_2_SWP", "ap_anim_jet", 0.00000000, 0, 1 );
        }
        if (NOT (IS_VEHICLE_DEAD( l_U423 )))
        {
            SET_VEHICLE_VISIBLE( l_U423, 0 );
        }
         /* CLEANOBJECT */ sub_6456( l_U372 );
         /* CLEANOBJECT */ sub_6456( l_U373 );
         /* CLEANOBJECT */ sub_6456( l_U374 );
         /* CLEANOBJECT */ sub_6456( l_U375 );
         /* CLEANOBJECT */ sub_6456( l_U376 );
         /* CLEANOBJECT */ sub_6456( l_U377 );
         /* CLEANOBJECT */ sub_6456( l_U378 );
         /* CLEANOBJECT */ sub_6456( l_U379 );
         /* CLEANOBJECT */ sub_6456( l_U380 );
         /* CLEANOBJECT */ sub_6456( l_U381 );
         /* CLEANOBJECT */ sub_6456( l_U382 );
         /* CLEANOBJECT */ sub_6456( l_U383 );
         /* CLEANOBJECT */ sub_6456( l_U384 );
         /* CLEANOBJECT */ sub_6456( l_U386 );
         /* CLEANOBJECT */ sub_6456( l_U385 );
         /* CLEANOBJECT */ sub_6456( l_U387 );
         /* CLEANOBJECT */ sub_6456( l_U388 );
         /* CLEANOBJECT */ sub_6456( l_U389 );
         /* CLEANOBJECT */ sub_6456( l_U390 );
         /* CLEANOBJECT */ sub_6456( l_U391 );
         /* CLEANOBJECT */ sub_6456( l_U392 );
    }
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_TM2_ENGINE_HIT_COMPLETE end", 0 );
    return;
}

/* P_PLAY_747_FINALSEQUENCE */ void sub_70349()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_PLAY_747_FINALSEQUENCE - Start", 0 );
    l_U409 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2269() )};
    l_U409._fU0 += l_U412;
    l_U409._fU4 += l_U413;
    l_U409._fU8 += l_U414;
    if (((GET_OBJECT_ANIM_CURRENT_TIME( l_U729, "P_AP_747_A", "ap_objModels" )) <= l_U407) AND ((GET_OBJECT_ANIM_CURRENT_TIME( l_U729, "P_AP_747_A", "ap_objModels" )) >= l_U406))
    {
        if (DOES_OBJECT_EXIST( l_U729 ))
        {
            SET_OBJECT_COORDS( l_U729, l_U409 );
            PLAY_OBJECT_ANIM( l_U729, "P_AP_747_A", "ap_objModels", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( l_U729, "P_AP_747_A", "ap_objModels", l_U408 );
            SET_OBJECT_ANIM_SPEED( l_U729, "P_AP_747_A", "ap_objModels", 0.50000000 );
        }
         /* P_SAFE_STOP_SOUND */ sub_8327( l_U740, 0 );
         /* P_SAFE_RELEASE_SOUND_ID */ sub_8510( ref l_U740 );
        l_U741 = GET_SOUND_ID();
        PLAY_SOUND_FRONTEND( l_U741, "S_AIR_PLANE_RS_PLANE_FLYBY_END" );
    }
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_PLAY_747_FINALSEQUENCE - End", 0 );
    return;
}

/* DISABLETIMER */ void sub_70914(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* P_CAM_SHAKE_FORCE_DEACTIVATE */ void sub_71026(int iParam0, int iParam1)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam1 == 1)
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam1 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam1 );
        }
        else
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
        }
         /* RESETTIMER */ sub_4268( iParam0 + 40 );
         /* RESETTIMER */ sub_4268( iParam0 + 76 );
         /* RESETTIMER */ sub_4268( iParam0 + 112 );
        iParam0->_fU172 = 0;
    }
    return;
}

/* F_14_05_SETUP */ int sub_71473()
{
    l_U705 =  /* CREATEPED */ sub_71503( ref l_U706 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "CS_Intro_fireloop_S", 64922, 1113, -6.70000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "CS_Intro_fireloop_Sm_S", 64925, 1118, -6.20000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "CS_Intro_fireloop_Sm_S", 64922, 1113, -6.70000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "Ambient_Furnace_Fire_S", 64918, 1123, -6.50000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "Ambient_AP_Smoke_S", 64918, 1123, -6.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "Ambient_Furnace_Fire_S", -623.50000000, 1121, -6.80000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "Ambient_AP_Smoke_S", -623.50000000, 1121, -6.10000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "Ambient_AP_Smoke_S", 64915, 1110, -6.40000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    return 1;
}

/* CREATEPED */ void sub_71503(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_48486( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_49975( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_50076( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* P_14_05_REGISTER */ void sub_72565()
{
     /* WRITESCRIPTLOG */ sub_1646( "MF", "P_14_05_REGISTER - START", 0 );
    if (NOT (IS_PED_DEAD( l_U705 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U705, "Vict_Crash", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U444 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U444, "Wlsn_Spp_Unif", 0 );
    }
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
    {
        DETACH_PED(  /* PLAYER_PED_ID */ sub_2269(), 1 );
        REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_2269() );
    }
     /* WRITESCRIPTLOG */ sub_1646( "CO", "SET_HIGHEST_ARCADE_LEVEL_UNLOCKED", 0 );
    SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 17 );
    SET_HIGHEST_DIFFICULTY_BEAT();
    CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
    CUTSCENE_ENABLE_SKIP( 0 );
    CUTSCENE_REGISTER_SWITCH_TO_LEVEL_NAME( "s_beach" );
    DISABLE_FADE_BETWEEN_SP_LEVELS();
     /* WRITESCRIPTLOG */ sub_1646( "MF", "P_14_05_REGISTER - END", 0 );
    return;
}

/* P_14_05_HANDLECUTSCENE */ void sub_72912()
{
    if (l_U678._fU52)
    {
         /* WRITESCRIPTLOG */ sub_1646( "MF", "Music Cue: 12.2", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_2", "FINALE_01_2", 0, 5000, 7000, -1082130432, 0 );
        CAMERA_ANIMATED_STOP( 0, 0 );
    }
    if (GET_CUTSCENE_TIME_MS() >= 52770)
    {
        if (NOT l_U719)
        {
            l_U719 = 1;
            if (NOT (IS_PED_DEAD( l_U705 )))
            {
                 /* WRITESCRIPTLOG */ sub_1646( "CCB", "Swapping Victor to the M14_AP_Vict_APL scene ped...", 0 );
                SET_PERSISTENT_PED_VARIATION_ENUM( l_U705, -1593189117 );
            }
             /* WRITESCRIPTLOG */ sub_1646( "MF", "Music Cue: 12_2a", 0 );
            AUDIO_MUSIC_SUSPEND( 7000 );
        }
    }
    return;
}

/* CUTSYS_DEFAULT_POSTCUTSCENE */ int sub_73249()
{
    return 1;
}

/* CUTSYS_CREATESTANDALONECUTSCENE */ void sub_73302(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* WRITESCRIPTLOG */ sub_1646( "MSWW", "CutSys_CreateStandaloneCutscene", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_55397( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam7, 0, 73413, 73464, 0, 55294, 55344, uParam6 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDOUT */ void sub_73413()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDOUT */ int sub_73464()
{
    return 1;
}

/* IS_MID_15_FAILURE_SCENE_COMPLETE */ int sub_73741()
{
    switch (l_U99)
    {
        case 0:
         /* P_START_VEHICLE_PLAYBACK */ sub_51429( l_U423, l_U531, 1.00000000, 47150.00000000, 0 );
         /* NIS_PRE_SETUP */ sub_47995( 1, 0, 0, 1 );
        ENABLE_CROSSHAIR( 0 );
         /* WRITESCRIPTLOG */ sub_1646( "RJM", "IS_MID_15_FAILURE_SCENE_COMPLETE - Going to FAILURE_SCENE_FRAME1", 0 );
        l_U99 = 1;
        break;
        case 1:
         /* CLEANOBJECT */ sub_6456( l_U729 );
        if ((ISEQ_QUERY_STATE( 2116826630, 3 )) == 0)
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
            {
                ISEQ_REGISTER_ENTITY( 2116826630, "Max",  /* PLAYER_PED_ID */ sub_2269(), 0 );
            }
             /* CLEANPED */ sub_6356( l_U444 );
            l_U444 =  /* CREATEPED */ sub_71503( ref l_U431 );
            if (NOT (IS_PED_DEAD( l_U444 )))
            {
                SET_PED_PROOFS( l_U444, 1, 1, 1, 1, 1 );
                SET_PED_GORE( l_U444, 0 );
                DETACH_PED( l_U444, 1 );
                ATTACH_PED_TO_VEHICLE( l_U444, l_U415, 0, l_U478, 180, 360.00000000, 1, 0, 0, 1 );
                ISEQ_REGISTER_ENTITY( 2116826630, "DaSilva", l_U444, 0 );
            }
            ISEQ_START( 2116826630 );
        }
        CAMERA_PLAY_ANIMATED( "LEVEL_S_FIN_CP_12", "MID_15_FIN_JET_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
         /* P_INITAILIZE_IMAGEFX_FAIL_01 */ sub_74277();
        l_U595 = GET_SOUND_ID();
        PLAY_SOUND_FRONTEND( l_U595, "S_AIR_PLANE_RS_FAIL" );
         /* CREATETIMER */ sub_3409( ref l_U460, l_U469, 1, 0 );
         /* STARTTIMER */ sub_3559( ref l_U460 );
         /* WRITESCRIPTLOG */ sub_1646( "RJM", "IS_MID_15_FAILURE_SCENE_COMPLETE - Going to FAILURE_SCENE_WAIT_FOR_PLANE_SHOT", 0 );
        l_U99 = 2;
        break;
        case 2:
        if ( /* ISTIMERDONE */ sub_3692( ref l_U460 ))
        {
             /* P_START_VEHICLE_PLAYBACK */ sub_51429( l_U415, l_U473, 1.00000000, l_U471, 0 );
            if (NOT (IS_VEHICLE_DEAD( l_U415 )))
            {
                if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
                {
                    DETACH_PED(  /* PLAYER_PED_ID */ sub_2269(), 1 );
                    ATTACH_PED_TO_VEHICLE(  /* PLAYER_PED_ID */ sub_2269(), l_U415, 0, l_U475, 0, 360.00000000, 1, 0, 0, 1 );
                }
            }
             /* WRITESCRIPTLOG */ sub_1646( "RJM", "IS_MID_15_FAILURE_SCENE_COMPLETE - Going to FAILURE_SCENE_ONE_FRAME_FOR_MAX_CAM", 0 );
            l_U99 = 3;
        }
        break;
        case 3:
         /* CLEANVEHICLE */ sub_6836( l_U423 );
         /* CLEANOBJECT */ sub_6456( l_U372 );
         /* CLEANOBJECT */ sub_6456( l_U373 );
         /* CLEANOBJECT */ sub_6456( l_U374 );
         /* CLEANOBJECT */ sub_6456( l_U375 );
         /* CLEANOBJECT */ sub_6456( l_U376 );
         /* CLEANOBJECT */ sub_6456( l_U377 );
         /* CLEANOBJECT */ sub_6456( l_U378 );
         /* CLEANOBJECT */ sub_6456( l_U379 );
         /* CLEANOBJECT */ sub_6456( l_U380 );
         /* CLEANOBJECT */ sub_6456( l_U381 );
         /* CLEANOBJECT */ sub_6456( l_U382 );
         /* CLEANOBJECT */ sub_6456( l_U383 );
         /* CLEANOBJECT */ sub_6456( l_U384 );
         /* CLEANOBJECT */ sub_6456( l_U386 );
         /* CLEANOBJECT */ sub_6456( l_U385 );
         /* CLEANOBJECT */ sub_6456( l_U387 );
         /* CLEANOBJECT */ sub_6456( l_U388 );
         /* CLEANOBJECT */ sub_6456( l_U389 );
         /* CLEANOBJECT */ sub_6456( l_U390 );
         /* CLEANOBJECT */ sub_6456( l_U391 );
         /* CLEANOBJECT */ sub_6456( l_U392 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_FIN_CP_12", "MID_15_FIN_MAX_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
         /* WRITESCRIPTLOG */ sub_1646( "RJM", "IS_MID_15_FAILURE_SCENE_COMPLETE - Going to FAILURE_SCENE_WAIT_FOR_CAR_DECELERATE", 0 );
         /* P_INITAILIZE_IMAGEFX_FAIL_02 */ sub_75419();
        l_U99 = 4;
        break;
        case 4:
        if (NOT (IS_VEHICLE_DEAD( l_U415 )))
        {
            if (( /* GET_VEHICLE_RECORDING_PLAYBACK_PERCENTAGE_PROGRESS */ sub_75666( l_U415, l_U473 )) >= l_U472)
            {
                SET_PLAYBACK_SPEED( l_U415, 0.00000000 );
                if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() )))
                {
                    PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_2269(), 47, 1000, 0, 0, 0 );
                }
                if (NOT (IS_PED_DEAD( l_U444 )))
                {
                    PED_SET_ACTION_INTENTION( l_U444, 47, 1000, 0, 0, 0 );
                }
                 /* RESET_SCRIPT_SPEECH_STRUCT */ sub_58875( ref l_U160 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_59000( 1,  /* PLAYER_PED_ID */ sub_2269(), "MAX", ref l_U160, 2, 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_59000( 0, l_U444, "DA_SILVA", ref l_U160, 2, 0 );
                 /* PLAY_SINGLE_SPEECH */ sub_59246( "SAIR_MXFALS1", ref l_U160, 8, 1 );
                 /* WRITESCRIPTLOG */ sub_1646( "RJM", "IS_MID_15_FAILURE_SCENE_COMPLETE - Going to FAILURE_SCENE_WAIT_FOR_MOCAP", 0 );
                l_U99 = 5;
            }
        }
        break;
        case 5:
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FIN_CP_12", "MID_15_FIN_MAX_CAM" )) - 2500))
        {
             /* P_IMAGEFX_START_BULLETCAM */ sub_76194( "AIR_RUNWAY2_SCRIPTED_FAIL_FX", 0 );
            FINALE_GRENADE_LAUNCHER_SETTINGS( 1, 0, 0, 0 );
             /* WRITESCRIPTLOG */ sub_1646( "RJM", "IS_MID_15_FAILURE_SCENE_COMPLETE - Shot is done", 0 );
            l_U96 = 1;
            return 1;
        }
        break;
    }
    return 0;
}

/* P_INITAILIZE_IMAGEFX_FAIL_01 */ void sub_74277()
{
     /* P_INIT_IMAGEFX */ sub_74322( ref l_U959 );
    l_U959[0]._fU4 = "FLICKER_VIBRATE_ZOOM_01";
    l_U959[0]._fU8 = 4;
    l_U959[0]._fU32 = 0;
    l_U959[1]._fU4 = "COLOR_CHANNEL_SPLIT_REDGREEN";
    l_U959[1]._fU8 = 4;
    l_U959[1]._fU12 = 500;
    l_U959[1]._fU32 = 0;
    l_U49 = 0;
    return;
}

/* P_INIT_IMAGEFX */ void sub_74322(unknown uParam0)
{
    int I;

     /* WRITESCRIPTLOG */ sub_1646( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

/* P_INITAILIZE_IMAGEFX_FAIL_02 */ void sub_75419()
{
     /* P_INIT_IMAGEFX */ sub_74322( ref l_U959 );
    l_U959[0]._fU4 = "GAMMA_SATURATION_COLOR_ZOOM";
    l_U959[0]._fU8 = 4;
    l_U959[0]._fU32 = 0;
    l_U959[1]._fU4 = "DOUBLE_WIDE_INTERLACE_FLASH_07";
    l_U959[1]._fU8 = 4;
    l_U959[1]._fU12 = 3450;
    l_U959[1]._fU32 = 0;
    l_U49 = 0;
    return;
}

/* GET_VEHICLE_RECORDING_PLAYBACK_PERCENTAGE_PROGRESS */ float sub_75666(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            return 100.00000000 * ((GET_TIME_POSITION_IN_RECORDING( uParam0 )) / (GET_TOTAL_DURATION_OF_VEHICLE_RECORDING( uParam1 )));
        }
    }
    return -1.00000000;
}

/* P_IMAGEFX_START_BULLETCAM */ void sub_76194(unknown uParam0, boolean bParam1)
{
    PRINTSTRING( "[CO] P_IMAGEFX_START_BULLETCAM: Starting BulletCam: " );
    PRINTSTRING( uParam0 );
    PRINTNL();
     /* CLEANCAMERA */ sub_5041( ref l_U51 );
    l_U51 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U51, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

/* P_RW2_START_EXPLODING_PLANE_NIS */ void sub_76665()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_RW2_START_EXPLODING_PLANE_NIS - Start", 0 );
     /* WRITESCRIPTLOG */ sub_1646( "MF", "Music Cue: 12.1", 0 );
    AUDIO_MUSIC_SUSPEND( 0 );
    CAMERA_USE_HANDY_CAM( 0, 1065353216, 0 );
    ENABLE_CROSSHAIR( 0 );
     /* P_STREAMREQ_MODELNAMES_INSERT */ sub_21066( -665082447, ref g_U1030 );
     /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_61593( l_U423, 1.75000000 );
     /* P_SAFE_STOP_PARTICLE_FX */ sub_76854( ref l_U429 );
     /* P_SAFE_REMOVE_PARTICLE_FX */ sub_8778( ref l_U429 );
     /* P_SAFE_STOP_PARTICLE_FX */ sub_76854( ref l_U430 );
     /* P_SAFE_REMOVE_PARTICLE_FX */ sub_8778( ref l_U430 );
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_7187( "S_AIR_PLANE_RS_02", ref g_U1910 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_7976( "S_AIR_PLANE_RS_02", ref g_U1910 );
    l_U821 = GET_SOUND_ID();
    PLAY_SOUND_FRONTEND( l_U821, "S_AIR_PLANE_RS_PLANE_CRASH" );
     /* P_INITAILIZE_IMAGEFX_01 */ sub_77060();
    if (NOT (IS_VEHICLE_DEAD( l_U415 )))
    {
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U415 );
        FREEZE_VEHICLE_POSITION( l_U415, 1 );
    }
     /* NIS_PRE_SETUP */ sub_47995( 1, 0, 0, 1 );
     /* NIS_CREATE_STATIC_CAM */ sub_77343( ref l_U783, (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( l_U393[3] ))) + l_U814, 0.00000000, 0.00000000, 0.00000000, 45, l_U820 );
     /* NIS_PLAY_STATIC_CAMERA */ sub_77576( ref l_U783 );
    POINT_CAM_AT_VEHICLE( l_U783._fU0, l_U423, l_U817, 1 );
    SHAKE_CAM( l_U783._fU0, "MEDIUM_EXPLOSION_SHAKE", 0.35000000 );
    if (GET_ADRENALINE_AMT() < 1.00000000)
    {
        SET_ADRENALINE_AMT( 1.00000000 );
    }
    DEACTIVATE_BULLET_TIME( 1, 1 );
    ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
     /* P_CREATE_AND_START_TIMER */ sub_77817( ref l_U859, l_U820 );
     /* P_CREATE_AND_START_TIMER */ sub_77817( ref l_U900, l_U909 );
     /* P_CREATE_AND_START_TIMER */ sub_77817( ref l_U910, l_U919 );
     /* P_CREATE_AND_START_TIMER */ sub_77817( ref l_U822, l_U831 );
     /* P_CREATE_AND_START_TIMER */ sub_77817( ref l_U832, l_U841 );
     /* P_CREATE_AND_START_TIMER */ sub_77817( ref l_U842, l_U851 );
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_RW2_START_EXPLODING_PLANE_NIS - End", 0 );
    return;
}

/* P_SAFE_STOP_PARTICLE_FX */ void sub_76854(unknown uParam0)
{
    if ((uParam0^) != 0)
    {
        STOP_PARTICLE_FX_LOOPED( (uParam0^) );
        (uParam0^) = 0;
    }
    return;
}

/* P_INITAILIZE_IMAGEFX_01 */ void sub_77060()
{
     /* P_INIT_IMAGEFX */ sub_74322( ref l_U959 );
    l_U959[0]._fU4 = "GAMMA_ZOOM_1";
    l_U959[0]._fU8 = 4;
    l_U959[0]._fU32 = 0;
    l_U959[1]._fU4 = "CONTRAST_ZOOM_FAST_BLUE";
    l_U959[1]._fU8 = 4;
    l_U959[1]._fU12 = 200;
    l_U959[1]._fU32 = 0;
    l_U49 = 0;
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_77343(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_3409( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U2, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_77576(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_3559( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_77817(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_3409( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_3559( uParam0 );
    return;
}

/* NIS_IS_SHOT_FINISHED */ int sub_78670(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_3692( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_3692( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

/* P_RW2_START_EXPLODING_PLANE_NIS_SHOT2 */ void sub_78831()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_RW2_START_EXPLODING_PLANE_NIS_SHOT2 - Start", 0 );
     /* STARTTIMER */ sub_3559( ref l_U868 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_FIN_CP_12", "PLANECRASH_CAM", 1, (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( l_U393[3] ))) + l_U852, 0.00000000, 0, 0 );
     /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_51165( 0, 1, 0, -859915232, -859915232, 0 );
     /* P_TM2_JETPLANE_SKIP_ANIMS */ sub_79042();
    l_U928 = START_PARTICLE_FX_LOOPED_ON_OBJECT( "FIN_Plane_Debris_Sparks_S", l_U393[3], l_U929, l_U932, l_U935 );
    l_U920 = START_PARTICLE_FX_LOOPED_ON_OBJECT( "FIN_Plane_Sparks_Smoke_S", l_U393[3], l_U921, l_U924, l_U927 );
    l_U946 = START_PARTICLE_FX_LOOPED_ON_OBJECT( "Ambient_Furnace_Fire_S", l_U393[3], l_U947, 0.00000000, 0.00000000, 0.00000000, 1.00000000 );
    l_U950 = START_PARTICLE_FX_LOOPED_ON_OBJECT( "Ambient_Furnace_Fire_S", l_U393[3], l_U951, 0.00000000, 0.00000000, 0.00000000, 1.00000000 );
     /* CREATETIMER */ sub_3409( ref l_U936, l_U945, 1, 0 );
     /* STARTTIMER */ sub_3559( ref l_U936 );
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_RW2_START_EXPLODING_PLANE_NIS_SHOT2 - End", 0 );
    return;
}

/* P_TM2_JETPLANE_SKIP_ANIMS */ void sub_79042()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_TM2_JETPLANE_SKIP_ANIMS - Start", 0 );
    if (DOES_OBJECT_EXIST( l_U393[0] ))
    {
        ATTACH_OBJECT_TO_VEHICLE( l_U393[0], l_U423, 0, -4.00000000, -20.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U393[0], "P_AN_FUSPRT_AB", "ap_anim_jet", 0.50000000 );
    }
    if (DOES_OBJECT_EXIST( l_U393[1] ))
    {
        ATTACH_OBJECT_TO_VEHICLE( l_U393[1], l_U423, 0, -4.00000000, -20.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U393[1], "P_AN_FUSPRT_AA", "ap_anim_jet", 0.50000000 );
    }
    if (DOES_OBJECT_EXIST( l_U393[2] ))
    {
        ATTACH_OBJECT_TO_VEHICLE( l_U393[2], l_U423, 0, l_U881, 0.00000000, 0.00000000, 0.00000000 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U393[2], "P_AN_TALEXP_AA", "ap_anim_jet", l_U880 );
    }
    if (DOES_OBJECT_EXIST( l_U393[3] ))
    {
        SET_OBJECT_ANIM_CURRENT_TIME( l_U393[3], "P_AN_JETBOD_AA", "ap_anim_jet", l_U879 );
    }
    if (DOES_OBJECT_EXIST( l_U393[4] ))
    {
        ATTACH_OBJECT_TO_VEHICLE( l_U393[4], l_U423, 0, l_U881, 0.00000000, 0.00000000, 0.00000000 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U393[4], "P_AN_EXTRA_1_SWP", "ap_anim_jet", l_U880 );
    }
    if (DOES_OBJECT_EXIST( l_U393[5] ))
    {
        ATTACH_OBJECT_TO_VEHICLE( l_U393[5], l_U423, 0, l_U881, 0.00000000, 0.00000000, 0.00000000 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U393[5], "P_AN_EXTRA_2_SWP", "ap_anim_jet", l_U880 );
    }
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_TM2_JETPLANE_SKIP_ANIMS - End", 0 );
    return;
}

/* P_INITAILIZE_IMAGEFX_02 */ void sub_80203()
{
     /* P_INIT_IMAGEFX */ sub_74322( ref l_U959 );
    l_U959[0]._fU4 = "FLASH_WHITE";
    l_U959[0]._fU8 = 4;
    l_U959[0]._fU20 = 1;
    l_U959[0]._fU32 = 0;
    l_U959[1]._fU4 = "GRADE_RED_FAST";
    l_U959[1]._fU8 = 4;
    l_U959[1]._fU32 = 0;
    l_U959[2]._fU4 = "FLASH_WHITE_2";
    l_U959[2]._fU8 = 4;
    l_U959[2]._fU12 = 2200;
    l_U959[2]._fU32 = 0;
    l_U959[3]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
    l_U959[3]._fU8 = 4;
    l_U959[3]._fU12 = 3200;
    l_U959[3]._fU32 = 0;
    l_U959[4]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
    l_U959[4]._fU8 = 4;
    l_U959[4]._fU12 = 4200;
    l_U959[4]._fU32 = 0;
    l_U959[5]._fU4 = "COLOR_CHANNEL_INTERLACE_HARD";
    l_U959[5]._fU8 = 4;
    l_U959[5]._fU12 = 4700;
    l_U959[5]._fU32 = 0;
    l_U49 = 0;
    return;
}

/* P_TM2_JETPLANE_DECELERATE */ void sub_80681()
{
    int iVar2;
    float fVar3;

    iVar2 = TIMERA() - l_U868._fU0;
    fVar3 = ((TO_FLOAT( l_U877 )) - (TO_FLOAT( iVar2 ))) / (TO_FLOAT( l_U877 ));
    l_U528 = 1.75000000 * fVar3;
    if (l_U528 >= l_U878)
    {
         /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_61593( l_U423, l_U528 );
    }
    else
    {
         /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_61593( l_U423, 0 );
    }
    return;
}

/* P_TM2_DEBUG_RECORDING_WIDGET */ void sub_81174()
{
    if (NOT l_U1133)
    {
        START_WIDGET_GROUP( "Jet fight Recording Widget" );
        ADD_WIDGET_BOOL( "Start Recording Mode", ref l_U1134 );
        START_WIDGET_GROUP( "Jet Straight Line Recording" );
        ADD_WIDGET_BOOL( "Restart Recording Vehicles", ref l_U1135 );
        ADD_WIDGET_FLOAT_SLIDER( "Jet Heading", ref l_U1139, -360.00000000, 360.00000000, 1.00000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U1136, "Jet position", 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Jet Take Off Recording" );
        ADD_WIDGET_BOOL( "Restart Recording Vehicles", ref l_U1140 );
        ADD_WIDGET_FLOAT_SLIDER( "Jet Heading", ref l_U1144, -360.00000000, 360.00000000, 1.00000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U1141, "Jet position", 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "LS Hit 1 Recording" );
        ADD_WIDGET_BOOL( "Restart Recording Vehicles", ref l_U1146 );
        ADD_WIDGET_FLOAT_SLIDER( "DaSilva Heading", ref l_U1150, -360.00000000, 360.00000000, 1.00000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U1147, "DaSilva position", 0.10000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U1133 = 1;
    }
    if (l_U1134)
    {
         /* NIS_POST_SETUP */ sub_57622( 1, 1 );
         /* P_CLEANUP_RUNWAY2 */ sub_5178( 0 );
        l_U92 = 0;
         /* TELEPORTPED */ sub_2374(  /* PLAYER_PED_ID */ sub_2269(), g_U2014[13], g_U2129[13] );
        l_U1134 = 0;
    }
    if (l_U1135)
    {
         /* CLEANVEHICLEARRAY */ sub_81989( ref l_U1122 );
        l_U1122[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_82083( 877881452, l_U1136, l_U1139 );
        l_U1135 = 0;
    }
    if (l_U1140)
    {
         /* CLEANVEHICLEARRAY */ sub_81989( ref l_U1122 );
        l_U1122[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_82083( 877881452, l_U1141, l_U1144 );
        if (NOT (DOES_OBJECT_EXIST( l_U1145 )))
        {
            l_U1145 =  /* CREATEOBJECTNOOFFSET */ sub_49120( 23244845, -620.16000000, 643.50800000, -6.73921000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            FREEZE_OBJECT_POSITION( l_U1145, 1 );
        }
        l_U1140 = 0;
    }
    if (l_U1146)
    {
         /* CLEANVEHICLEARRAY */ sub_81989( ref l_U1122 );
        l_U1122[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_82083( 1979959192, l_U1147, l_U1150 );
        l_U1122[1] =  /* CREATEVEHICLE */ sub_48359( 877881452, l_U1136, l_U1139, 1, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_51429( l_U1122[1], l_U428, 1065353216, 0, 0 );
        l_U1146 = 0;
    }
    return;
}

/* P_ADD_WIDGET_VECTOR_SLIDER */ void sub_81443(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

/* CLEANVEHICLEARRAY */ void sub_81989(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANVEHICLE */ sub_6836( (uParam0^)[I] );
    }
    return;
}

/* F_DEBUG_CREATE_RECORDING_VEHICLE */ void sub_82083(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown Result;

     /* WRITESCRIPTLOG */ sub_1646( "GA", "F_DEBUG_CREATE_RECORDING_VEHICLE start", 0 );
    Result =  /* CREATEVEHICLE */ sub_48359( uParam0, uParam1, uParam4, 1, 0, 0 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2269() ))) AND (NOT (IS_VEHICLE_DEAD( Result ))))
    {
        SET_PED_INTO_VEHICLE(  /* PLAYER_PED_ID */ sub_2269(), Result, -1 );
        SET_VEHICLE_PROOFS( Result, 1, 1, 1, 1, 1 );
        SET_VEHICLE_ENGINE_ON( Result, 1, 1 );
    }
    return Result;
}

/* P_TM2_DEBUG_TUNING_WIDGET */ void sub_82544()
{
    if (NOT l_U1151)
    {
        START_WIDGET_GROUP( "Runway Tuning Widget" );
        START_WIDGET_GROUP( "Jet Plane Fight" );
        ADD_WIDGET_FLOAT_SLIDER( "Jet Path Start Skip", ref l_U447, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_INT_SLIDER( "Jet Path Acceleration Delay", ref l_U517, 0, 100000, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "Jet Path Acceleration", ref l_U529, 0.00000000, 10.00000000, 0.01000000 );
        ADD_WIDGET_INT_SLIDER( "Jet Path Increment Delay", ref l_U530, 0, 10000, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "DaSilva Path Start Skip", ref l_U446, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay Cam Heading", ref l_U448, -360.00000000, 360.00000000, 1.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay Cam Pitch", ref l_U449, -360.00000000, 360.00000000, 1.00000000 );
        ADD_WIDGET_INT_SLIDER( "Time to Fail", ref l_U450, 0, 100000000, 50 );
        ADD_WIDGET_FLOAT_SLIDER( "Explosion Amplitude", ref l_U371, 0.00000000, 10.00000000, 0.10000000 );
        START_WIDGET_GROUP( "747 Flyover with Rumble Tuner" );
        ADD_WIDGET_INT_SLIDER( "Delay 747 Enable Effects - Far", ref l_U759, 0, 1000000, 1 );
        ADD_WIDGET_FLOAT_SLIDER( "Camera Shake Magnitude - Far", ref l_U746, -10000.00000000, 10000.00000000, 0.10000000 );
        ADD_WIDGET_INT_SLIDER( "Controller Shake Frequency - Far", ref l_U749, 0, 10000, 10 );
        ADD_WIDGET_INT_SLIDER( "Delay 747 Enable Effects - Near", ref l_U769, 0, 1000000, 1 );
        ADD_WIDGET_FLOAT_SLIDER( "Camera Shake Magnitude - Near", ref l_U747, -10000.00000000, 10000.00000000, 0.10000000 );
        ADD_WIDGET_INT_SLIDER( "Controller Shake Frequency - Near", ref l_U748, 0, 10000, 10 );
        ADD_WIDGET_INT_SLIDER( "Delay stopping the controller effects", ref l_U779, 0, 10000, 10 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U1151 = 1;
        STOP_WIDGET_GROUP();
    }
    return;
}

/* P_TM2_DEBUG_EXPLOSION_WIDGET */ void sub_83546()
{
    if (NOT l_U1152)
    {
        START_WIDGET_GROUP( "Plane Explosion Widget" );
        ADD_WIDGET_BOOL( "Setup Plane", ref l_U1153 );
        ADD_WIDGET_BOOL( "Play Plane Explosion", ref l_U1154 );
        l_U1152 = 1;
        STOP_WIDGET_GROUP();
    }
    if (l_U1153)
    {
         /* NIS_POST_SETUP */ sub_57622( 1, 1 );
         /* P_CLEANUP_RUNWAY2 */ sub_5178( 0 );
        l_U92 = 0;
         /* P_SETUP_VEHICLES */ sub_48273();
         /* P_SETUP_PLAYER */ sub_52176();
         /* CLEANOBJECTARRAY */ sub_6714( ref l_U393 );
        if (NOT (IS_VEHICLE_DEAD( l_U423 )))
        {
            SET_VEHICLE_VISIBLE( l_U423, 1 );
        }
         /* P_START_VEHICLE_RECORDINGS_LEFTSIDE_HIT1 */ sub_51296( 1.75000000 );
        l_U1153 = 0;
    }
    if (l_U1154 == 1)
    {
        if (NOT (IS_VEHICLE_DEAD( l_U423 )))
        {
            l_U393[0] =  /* CREATEOBJECT */ sub_53404( 1570425160, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            l_U393[1] =  /* CREATEOBJECT */ sub_53404( 1796269108, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            l_U393[2] =  /* CREATEOBJECT */ sub_53404( 1687227279, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            l_U393[3] =  /* CREATEOBJECT */ sub_53404( 1081193277, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            l_U393[4] =  /* CREATEOBJECT */ sub_53404( -646760381, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            l_U393[5] =  /* CREATEOBJECT */ sub_53404( 446170022, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U393[0] ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U393[0], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U393[0], "P_AN_FUSPRT_AB", "ap_anim_jet", 0.00000000, 0, 1 );
            }
            if (DOES_OBJECT_EXIST( l_U393[1] ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U393[1], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U393[1], "P_AN_FUSPRT_AA", "ap_anim_jet", 0.00000000, 0, 1 );
            }
            if (DOES_OBJECT_EXIST( l_U393[2] ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U393[2], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U393[2], "P_AN_TALEXP_AA", "ap_anim_jet", 0.00000000, 0, 1 );
            }
            if (DOES_OBJECT_EXIST( l_U393[3] ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U393[3], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U393[3], "P_AN_JETBOD_AA", "ap_anim_jet", 0.00000000, 0, 1 );
                START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "FIN_Explo_Plane_S", l_U393[3], 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
            }
            if (DOES_OBJECT_EXIST( l_U393[4] ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U393[4], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U393[4], "P_AN_EXTRA_1_SWP", "ap_anim_jet", 0.00000000, 0, 1 );
            }
            if (DOES_OBJECT_EXIST( l_U393[5] ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U393[5], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U393[5], "P_AN_EXTRA_2_SWP", "ap_anim_jet", 0.00000000, 0, 1 );
            }
        }
        if (NOT (IS_VEHICLE_DEAD( l_U423 )))
        {
            SET_VEHICLE_VISIBLE( l_U423, 0 );
        }
        l_U1154 = 0;
    }
    return;
}

/* P_TM2_DEBUG_PARTICLE_EFFECT */ void sub_84985()
{
    if (NOT l_U1155)
    {
        START_WIDGET_GROUP( "Particle Effect Tuning" );
        ADD_WIDGET_BOOL( "Setup/Play Particle Effect ", ref l_U1156 );
        ADD_WIDGET_FLOAT_SLIDER( "FX x offset", ref l_U401, 65436, 100, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "FX y offset", ref l_U403, 65436, 100, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "FX z offset", ref l_U404, 65436, 100, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Effect Scale", ref l_U1157, 65436, 100, 0.10000000 );
        STOP_WIDGET_GROUP();
        l_U1155 = 1;
    }
    if (l_U1156)
    {
         /* DISABLETIMER */ sub_70914( ref l_U519 );
         /* DISABLETIMER */ sub_70914( ref l_U508 );
         /* DISABLETIMER */ sub_70914( ref l_U451 );
        if (NOT (IS_VEHICLE_DEAD( l_U423 )))
        {
             /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_61593( l_U423, 0.00000000 );
        }
        if (NOT (IS_VEHICLE_DEAD( l_U415 )))
        {
             /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_61593( l_U415, 0.00000000 );
        }
        if (DOES_VEHICLE_EXIST( l_U423 ))
        {
            START_PARTICLE_FX_NON_LOOPED_ON_VEHICLE( "FIN_Engine_Dest_S", l_U423, l_U401, l_U403, l_U404, 0.00000000, 0.00000000, 0.00000000, l_U1157 );
        }
        l_U1156 = 0;
    }
    return;
}

/* P_TM2_DEBUG_747_FLYOVER */ void sub_85483()
{
    if (NOT l_U1158)
    {
        START_WIDGET_GROUP( "747 Flyover Tuning Widget" );
        ADD_WIDGET_BOOL( "Play 747 Flyover", ref l_U1159 );
        ADD_WIDGET_INT_SLIDER( "Delay 747 animation", ref l_U739, 0, 10000, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "747 x offset", ref l_U742, -10000.00000000, 1000.00000000, 10.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "747 y offset", ref l_U743, -10000.00000000, 1000.00000000, 10.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "747 z offset", ref l_U744, -10000.00000000, 1000.00000000, 10.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "747 Anim Speed", ref l_U745, 0.00000000, 100.00000000, 0.10000000 );
        ADD_WIDGET_BOOL( "Start 747 Camera", ref l_U1161 );
        ADD_WIDGET_FLOAT_SLIDER( "747 Camera Shake Amount", ref l_U746, 0.00000000, 100.00000000, 0.10000000 );
        ADD_WIDGET_BOOL( "Start NIS 747 ", ref l_U1160 );
        ADD_WIDGET_FLOAT_SLIDER( "747 X offset from Player", ref l_U412, -10000.00000000, 10000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "747 Y offset from Player", ref l_U413, -10000.00000000, 10000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "747 Z offset from Player", ref l_U414, -10000.00000000, 10000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Forced Animation skip time", ref l_U408, 0.00000000, 1.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        l_U1158 = 1;
    }
    if (l_U1159)
    {
         /* CLEANOBJECT */ sub_6456( l_U729 );
        l_U729 =  /* CREATEOBJECTNOOFFSET */ sub_49120( -67723549, l_U742, l_U743, l_U744, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        PLAY_OBJECT_ANIM( l_U729, "P_AP_747_A", "ap_objModels", 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U729, "P_AP_747_A", "ap_objModels", l_U745 );
        l_U1159 = 0;
    }
    if (l_U1160)
    {
         /* P_PLAY_747_FINALSEQUENCE */ sub_70349();
        l_U1160 = 0;
    }
    if (l_U1161)
    {
         /* P_SHAKE_CAM */ sub_62019( "LARGE_EXPLOSION_SHAKE", l_U746 );
        l_U1161 = 0;
    }
    return;
}

/* P_TM2_EXPLODING_PLANE_NIS_WIDGET */ void sub_86404()
{
    if (NOT l_U1162)
    {
        START_WIDGET_GROUP( "Jet Plane Explode NIS Widget" );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U814, "Camera 1 offset from vehicle", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U817, "Camera 1 look offset from vehicle", 1036831949 );
        ADD_WIDGET_INT_SLIDER( "Camera 1 Duration", ref l_U820, 0, 10000, 100 );
        ADD_WIDGET_INT_SLIDER( "Camera Shake - Fuselage Delay", ref l_U831, 0, 10000, 100 );
        ADD_WIDGET_INT_SLIDER( "Camera Shake - Tail Delay", ref l_U841, 0, 10000, 100 );
        ADD_WIDGET_INT_SLIDER( "Camera Shake - Engine Delay", ref l_U851, 0, 10000, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "Plane crash anim skip amount", ref l_U879, 0.00000000, 1.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Plane props crash anim skip amount", ref l_U880, 0.00000000, 1.00000000, 0.01000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U881, "Plane props crash anim offset", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U852, "Camera 2 offset from vehicle", 1036831949 );
        ADD_WIDGET_INT_SLIDER( "Plane slowdown duration", ref l_U877, 0, 10000, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "Plane crash slowdown clamp", ref l_U878, 0.00000000, 1000.00000000, 0.01000000 );
        ADD_WIDGET_INT_SLIDER( "Camera 2 Duration", ref l_U858, 0, 10000, 100 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U885, "Particle Effect Offset - Smoke 1", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U888, "Particle Effect Rotation - Smoke 1", 1036831949 );
        ADD_WIDGET_FLOAT_SLIDER( "Particle Effect Scale - Smoke 1", ref l_U891, 0.00000000, 1000.00000000, 0.01000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U893, "Particle Effect Offset - Sparks 1", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U896, "Particle Effect Rotation - Sparks 1", 1036831949 );
        ADD_WIDGET_FLOAT_SLIDER( "Particle Effect Scale - Sparks 1", ref l_U899, 0.00000000, 1000.00000000, 0.01000000 );
        ADD_WIDGET_INT_SLIDER( "Start Particle FX 1 Delay", ref l_U909, 0, 100000, 10 );
        ADD_WIDGET_INT_SLIDER( "End Particle FX 1 Delay", ref l_U919, 0, 100000, 10 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U921, "Particle Effect Offset - Smoke 2", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U924, "Particle Effect Rotation - Sparks 2", 1036831949 );
        ADD_WIDGET_FLOAT_SLIDER( "Particle Effect Scale - Smoke 2", ref l_U927, 0.00000000, 1000.00000000, 0.01000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U929, "Particle Effect Offset - Sparks 2", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U932, "Particle Effect Rotation - Sparks 2", 1036831949 );
        ADD_WIDGET_FLOAT_SLIDER( "Particle Effect Scale - Sparks 2", ref l_U935, 0.00000000, 1000.00000000, 0.01000000 );
        ADD_WIDGET_INT_SLIDER( "End Particle FX 2 Delay", ref l_U945, 0, 100000, 10 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U947, "Particle Effect Offset - End Fire", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_81443( ref l_U951, "Particle Effect Rotation - End Fire 2", 1036831949 );
        ADD_WIDGET_BOOL( "Play Sequence", ref l_U1163 );
        STOP_WIDGET_GROUP();
        l_U1162 = 1;
    }
    if (l_U1163)
    {
        if (l_U400 == 0)
        {
             /* P_TM2_ENGINE_HIT_COMPLETE */ sub_68777();
             /* P_PLAY_747_FINALSEQUENCE */ sub_70349();
             /* DISABLETIMER */ sub_70914( ref l_U451 );
            l_U93 = 1;
            l_U92 = 11;
             /* WRITESCRIPTLOG */ sub_1646( "CR", "Starting SUCCESS timer", 0 );
            l_U400 = 1;
            l_U405 = 1;
        }
        l_U1163 = 0;
    }
    return;
}

/* P_RELEASE_RUNWAY2_ASSETS */ void sub_88200()
{
     /* WRITESCRIPTLOG */ sub_1646( "CR", "P_RELEASE_RUNWAY2_ASSETS - START", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_88291( ref l_U605, ref g_U1030 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_88364( -665082447, ref g_U1030 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_88854( 879300975, ref g_U1247 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_89204( "level_s_fin_cp_10", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_89204( "w_sp_grnlch_aa_h", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_89204( "veh@std", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_89204( "veh@truck", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_89204( "LEVEL_S_FIN_CP_11", ref g_U1429 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_89685( "LEVEL/S_AIR/VIG_13_FIN_MAX_CAR_SHOOT.act", ref g_U1783 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_89685( "Vehicle/Vehicle_Car.act", ref g_U1783 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_90070( l_U428, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_90070( l_U531, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_90070( l_U445, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_90070( l_U473, ref g_U1638 );
     /* P_STREAMREQ_AUDIO_BANK_REMOVE */ sub_90488( "SCRIPT_MISSION\S_AIR_RUNWAY_02A", ref g_U1950 );
     /* P_STREAMREQ_AUDIO_BANK_REMOVE */ sub_90488( "SCRIPT_MISSION\S_AIR_RUNWAY_02B", ref g_U1950 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_88291(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_88364( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_88364(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5426( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_88854(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5426( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_89204(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5426( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_REMOVE */ void sub_89685(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5426( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ACTION_TREE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ void sub_90070(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5426( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a VEHICLE_RECORDING asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_REMOVE */ void sub_90488(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5426( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a AUDIO_BANK asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


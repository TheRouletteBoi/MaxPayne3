void main()
{
    l_U0 = 1;
    l_U1 = 144;
    StrCopy( ref l_U2, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U10, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = 1500;
    l_U49 = -1;
    l_U50 = {64536, 64536, 64536};
    l_U89 = 0;
    l_U91 = 1;
    l_U92 = 0;
    l_U94 = -1;
    l_U122 = 1500;
    l_U164 = {-2.00000000, 30.00000000, 0.00000000};
    l_U167 = {0.00000000, 0.00000000, 4.00000000};
    l_U170 = 3500;
    l_U171 = 1000;
    l_U181 = -1;
    l_U213 = {6.00000000, -1.20000000, 2.00000000};
    l_U216 = {0.00000000, 0.00000000, 0.00000000};
    l_U219 = 3000;
    l_U220 = 0.35000000;
    l_U230 = 100;
    l_U231 = {0.60000000, 2.10000000, 0.00000000};
    l_U234 = {-0.60000000, 2.10000000, 0.00000000};
    l_U400 = 0;
    l_U401 = 10.00000000;
    l_U451 = 0.08000000;
    l_U452 = 3800;
    l_U453 = 100.00000000;
    l_U454 = 0.40000000;
    l_U456 = {-832.00070000, -712.93200000, -6.73889600};
    l_U459 = 312.48550000;
    l_U460 = {0.10000000, -0.22000000, 0.65000000};
    l_U464 = {-620.23000000, 1039.99000000, -6.73000000};
    l_U467 = 355.22000000;
    l_U468 = 269;
    l_U470 = {-803.96550000, -510.19930000, -6.74795100};
    l_U473 = 267;
    l_U475 = {-583.37730000, -755.13710000, -6.74778800};
    l_U478 = 11.78708000;
    l_U482 = -4.00000000;
    l_U498 = 274;
    l_U499 = 277;
    l_U500 = 278;
    l_U501 = 279;
    l_U502 = 280;
    l_U503 = 291;
    l_U504 = 287;
    l_U505 = 288;
    l_U506 = 289;
    l_U507 = 290;
    l_U508 = 293;
    l_U509 = 294;
    l_U510 = 17000;
    l_U511 = 5500;
    l_U512 = 8500;
    l_U513 = 7500;
    l_U514 = 7000;
    l_U515 = 8500;
    l_U516 = 6500;
    l_U517 = 9700;
    l_U518 = 6300;
    l_U519 = 35000;
    l_U520 = 35000;
    l_U521 = 25000;
    l_U522 = 25000;
    l_U523 = 1;
    l_U524 = 0.70000000;
    l_U536 = -1;
    l_U537 = -1;
    l_U538 = -1;
    l_U539 = -1;
    l_U540 = -1;
    l_U541 = -1;
    l_U542 = -1;
    l_U543 = -1;
    l_U544 = -1;
    l_U953 = 85000;
    l_U982 = 3000;
    l_U983 = 270;
    l_U1015 = 4000;
    l_U1084 = 500;
    l_U1085 = 0.05000000;
    l_U1095 = 4000;
    l_U1097 = 0.20000000;
    l_U1107 = 12000;
    l_U1340 = 0;
    l_U1341 = 0;
    l_U1342 = 0;
    l_U1343 = 0;
    l_U1344 = 0;
    l_U1345 = 0;
    l_U1346 = 0;
    l_U1347 = 0;
    l_U1348 = 0;
    l_U1349 = 0;
    l_U1350 = 0;
    l_U1351 = 0;
    l_U1352 = 0;
    l_U1353 = 0;
    l_U1354 = 0;
    l_U1355 = 0;
    l_U1356 = 0;
    l_U1357 = 0;
    l_U1358 = 0;
    l_U1359 = 0;
    l_U1360 = 0;
    l_U1361 = 0;
    l_U1362 = 0;
    l_U1731 = 0;
    l_U1745 = 0;
    l_U1746 = 0;
    l_U1747 = 0;
    l_U1748 = {-619.78000000, -671.00000000, -5.63000000};
    l_U1751 = 0.00000000;
    l_U1752 = 0;
    l_U1753 = {-619.78000000, 238.78700000, -5.63000000};
    l_U1756 = 0.00000000;
    l_U1758 = 0;
    l_U1759 = {-832.00070000, -712.93200000, -6.73889600};
    l_U1762 = 312.48550000;
    l_U1763 = 0;
    l_U1764 = {-480.59890000, -699.52910000, -6.88737500};
    l_U1767 = 87.00000000;
    l_U1768 = 0;
    l_U1769 = {-480.59890000, -695.72060000, -6.88737500};
    l_U1772 = 87.00000000;
    l_U1773 = 0;
    l_U1774 = {-593.60880000, -729.69880000, -6.74795100};
    l_U1777 = 0;
    l_U1778 = 0;
    l_U1779 = {-590.05620000, -730.44060000, -6.74795100};
    l_U1782 = 0;
    l_U1783 = 0;
    l_U1784 = {-705.74270000, -280.78000000, -6.73923200};
    l_U1787 = 300;
    l_U1788 = 0;
    l_U1789 = {-733.70190000, -496.79240000, -6.73923200};
    l_U1792 = 322;
    l_U1793 = 0;
    l_U1794 = {-583.37730000, -755.13710000, -6.74778800};
    l_U1797 = 11.78708000;
    l_U1798 = 0;
    l_U1799 = {-617.76640000, 861.78940000, -6.73923200};
    l_U1802 = 180;
    l_U1803 = 0;
    l_U1804 = {-622.28410000, 862.60600000, -6.73923200};
    l_U1807 = 180;
    l_U1808 = 0;
    l_U1809 = {-731.56850000, -502.39140000, -6.74778800};
    l_U1812 = 322;
    l_U1813 = 0;
    l_U1814 = {-740.56110000, -497.90960000, -6.73923200};
    l_U1817 = 322;
    l_U1819 = 50000;
    l_U1820 = 50000;
    l_U1821 = 35000;
    l_U1822 = 35000;
    l_U1823 = 7500;
    l_U1824 = 6500;
    l_U1825 = 6500;
    l_U1826 = 7500;
    l_U1827 = 6500;
    l_U1828 = 7500;
    l_U1829 = 5000;
    l_U1830 = 0;
    l_U1831 = 0;
    l_U1832 = 0;
    l_U1833 = 0;
    l_U1834 = 0;
    l_U1835 = 0;
    l_U1836 = 0;
    l_U1837 = 0;
    l_U1838 = 0;
    l_U1839 = 0;
    l_U1840 = 0;
    l_U1841 = 0;
    l_U1842 = 0;
    l_U1843 = 0;
    l_U1844 = 0;
     /* WRITESCRIPTLOG */ sub_1882( "CR", "Script s_air_Runway_1.sc is starting...", 0 );
     /* P_SETUP_ASSET_ARRAYS */ sub_2000();
    l_U89 = 3;
    if (g_U830 == 12)
    {
         /* P_TELEPORT_PLAYER */ sub_2185( -801.51960000, -690.03890000, -6.74649000, 269.71960000, -4.75866100, -0.01460300 );
    }
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_2442();
        if (l_U92 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_13227();
        }
         /* P_TM2_DEBUG_RECORDING_WIDGET */ sub_81832();
         /* P_TM2_DEBUG_TUNING_WIDGET */ sub_88728();
         /* P_DEBUG_VIG13A_DIALOGUE */ sub_90790();
        WAIT( 0 );
    }
     /* P_CLEANUP_RUNWAY1 */ sub_4901();
     /* P_RELEASE_RUNWAY1_ASSETS */ sub_93375();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_air_Runway_1" );
     /* WRITESCRIPTLOG */ sub_1882( "CR", "Script s_air_Runway_1.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_1882(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_SETUP_ASSET_ARRAYS */ void sub_2000()
{
    l_U1025[0] = 2113814688;
    l_U1025[1] = 1969936254;
    l_U1025[2] = 1979959192;
    l_U1025[3] = 877881452;
    l_U1025[4] = -1053689591;
    l_U1025[5] = 975934894;
    l_U1025[6] = 1232833631;
    return;
}

/* P_TELEPORT_PLAYER */ void sub_2185(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 =  /* PLAYER_PED_ID */ sub_2215();
     /* TELEPORTPED */ sub_2320( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

/* PLAYER_PED_ID */ int sub_2215()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_2253() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_2253()
{
    return GET_PLAYER_ID();
}

/* TELEPORTPED */ void sub_2320(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_HANDLE_FAILURE */ void sub_2442()
{
    if (g_U830 == 12)
    {
        switch (l_U92)
        {
            case 0:
            if (( /* RESTARTING_CHECKPOINT */ sub_2561()) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )) || (l_U93)))
            {
                l_U92 = 1;
                 /* WRITESCRIPTLOG */ sub_1882( "CR", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_3079())
            {
                l_U92 = 3;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_3139( 0 )) == 1)
            {
                l_U92 = 2;
            }
            break;
            case 2:
             /* WRITESCRIPTLOG */ sub_1882( "CR", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
            {
                l_U92 = 3;
                 /* WRITESCRIPTLOG */ sub_1882( "CR", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_1882( "CR", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2253() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2253(), 0, 0 );
                SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_2215(), 0, 0, 0, 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2215() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2215(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            FINALE_GRENADE_EXPLODE_ON_IMPACT( 0 );
             /* P_CLEANUP_RUNWAY1 */ sub_4901();
            LOAD_SCENE( -673.08000000, -720.19460000, -4.54583900 );
            LOAD_SCENE( -447.41930000, -668.31260000, -3.62771300 );
            LOAD_SCENE( 104.01870000, -537.78030000, 35.01804000 );
            LOAD_SCENE( 99.67129000, -656.41140000, 25.83919000 );
            l_U92 = 4;
             /* WRITESCRIPTLOG */ sub_1882( "CR", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_1882( "CR", "eFailState = FAIL_RESTORE_PLAYER", 0 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_8545( ref l_U53,  /* PLAYER_PED_ID */ sub_2215() );
            l_U91 = 0;
            l_U92 = 5;
             /* WRITESCRIPTLOG */ sub_1882( "CR", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_1882( "CR", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U89 = 3;
            l_U92 = 0;
             /* WRITESCRIPTLOG */ sub_1882( "CR", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_2561()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2215(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_2253(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_2253(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2215() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2215(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_3079()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_3139(int iParam0)
{
    iParam0 = 1;
    switch (l_U38)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_3221( ref l_U40 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
            {
                l_U39 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_3355( ref l_U40, l_U39, 1, 1 );
             /* STARTTIMER */ sub_3505( ref l_U40 );
        }
        if ( /* ISTIMERDONE */ sub_3638( ref l_U40 ))
        {
             /* WRITESCRIPTLOG */ sub_1882( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2253() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2253(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U38 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U38 = 2;
            }
            else
            {
                l_U38 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1882( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_4139();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1882( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_4139();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_3221(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_3355(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_3505(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_3638(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_4139()
{
     /* WRITESCRIPTLOG */ sub_1882( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_4214( ref l_U40 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2253() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2253(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U37 = 0;
    l_U37 = l_U37;
    l_U38 = 0;
    return;
}

/* RESETTIMER */ void sub_4214(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_CLEANUP_RUNWAY1 */ void sub_4901()
{
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_CLEANUP_RUNWAY1 - START", 0 );
    ENABLE_LAST_MAN_STANDING( 1 );
    RESET_PED_MODEL_LOD_DISTANCES( 2113814688 );
     /* CLEANPED */ sub_4995( l_U497 );
     /* CLEANPEDARRAY */ sub_5084( ref l_U910 );
     /* CLEANPEDARRAY */ sub_5084( ref l_U603 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
    {
        DETACH_PED(  /* PLAYER_PED_ID */ sub_2215(), 1 );
    }
     /* CLEANVEHICLE */ sub_5203( l_U455 );
     /* CLEANVEHICLE */ sub_5203( l_U463 );
     /* CLEANVEHICLE */ sub_5203( l_U469 );
     /* CLEANVEHICLE */ sub_5203( l_U474 );
     /* CLEANVEHICLEARRAY */ sub_5306( ref l_U525 );
     /* CLEANVEHICLEARRAY */ sub_5306( ref l_U531 );
    SET_ALLOW_PLAYER_REACT_TO_EXPLOSION(  /* PLAYER_PED_ID */ sub_2215(), 0, 0 );
    ENABLE_TINNITUS( 1 );
     /* P_SAFE_STOP_SOUND */ sub_5421( l_U536, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U536 );
     /* P_SAFE_STOP_SOUND */ sub_5421( l_U537, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U537 );
     /* P_SAFE_STOP_SOUND */ sub_5421( l_U538, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U538 );
     /* P_SAFE_STOP_SOUND */ sub_5421( l_U539, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U539 );
     /* P_SAFE_STOP_SOUND */ sub_5421( l_U540, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U540 );
     /* P_SAFE_STOP_SOUND */ sub_5421( l_U541, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U541 );
     /* P_SAFE_STOP_SOUND */ sub_5421( l_U542, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U542 );
     /* P_SAFE_STOP_SOUND */ sub_5421( l_U543, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U543 );
     /* P_SAFE_STOP_SOUND */ sub_5421( l_U544, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U544 );
     /* P_SAFE_STOP_SOUND */ sub_5421( l_U94, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U94 );
     /* P_SAFE_STOP_SOUND */ sub_5421( l_U181, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U181 );
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_6032( "S_AIR_PLANE_RS_01", ref g_U1910 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_6821( "S_AIR_PLANE_RS_01", ref g_U1910 );
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_6032( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_6821( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
     /* P_STOP_SP_CHALLENGES */ sub_7922();
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_CLEANUP_RUNWAY1 - END", 0 );
    return;
}

/* CLEANPED */ void sub_4995(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANPEDARRAY */ void sub_5084(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_4995( (uParam0^)[I] );
    }
    return;
}

/* CLEANVEHICLE */ void sub_5203(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* CLEANVEHICLEARRAY */ void sub_5306(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANVEHICLE */ sub_5203( (uParam0^)[I] );
    }
    return;
}

/* P_SAFE_STOP_SOUND */ void sub_5421(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1882( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

/* P_SAFE_RELEASE_SOUND_ID */ void sub_5604(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1882( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_STOP */ void sub_6032(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_6082( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_6291( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Stopping the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        DISPLAYF( "Attempting to stop a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ int sub_6082(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB]### The SCRIPT_STREAM is loaded: {} ###", 1, 1281, ref (uParam1^)[I]._fU0 );
                return 1;
            }
        }
    }
    return 0;
}

/* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ int sub_6291(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ void sub_6821(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6967( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a SCRIPT_STREAM asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_6967(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_STOP_SP_CHALLENGES */ void sub_7922()
{
     /* WRITESCRIPTLOG */ sub_1882( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (STAT_EXISTS( "SP_VEHICLES_DESTROYED" ))
    {
        DISPLAYF( "[CCB] ### The current SP_VEHICLES_DESTROYED value is: {} ###", 1, 513, STAT_GET_INT( "SP_VEHICLES_DESTROYED" ) );
    }
    else
    {
        DISPLAYF( "[CCB] ### The SP_VEHICLES_DESTROYED stat does NOT exist!!! ###", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1882( "CCB", "Ending the Finale_Runway1 context...", 0 );
    END_CONTEXT( "Finale_Runway1" );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_8545(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_1882( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_8764( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_9928( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10242( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10721( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10242( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10721( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10242( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10721( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11037( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10721( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11037( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_10721( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_11609( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_11811( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_2215(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_1882( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_8764(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_8826( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_8826(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_9928(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_10242(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_10646( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_10646(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_10721(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_11037(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_10646( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_11609(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_11811(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_8826( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_11909( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_11909(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_13227()
{
    int iVar2;
    int I;

    iVar2 = l_U89;
    switch (l_U89)
    {
        case 0: break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpoint = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_13452();
         /* P_SET_STATIC_DATA */ sub_14180();
         /* P_R1_SETUP_HEALTH_TIMERS */ sub_18819();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U89 = 4;
         /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpoint = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpoint = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_REQUEST_RUNWAY1_PERSISTENT_ASSETS */ sub_19204();
         /* P_REQUEST_RUNWAY1_NONPERSISTENT_ASSETS */ sub_34800();
        l_U89 = 5;
         /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 5:
        if (( /* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ sub_36937( ref g_U1638 )) AND (( /* F_STREAMREQ_ACTION_TREE_IS_LOADED */ sub_36559( ref g_U1783 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_36168( ref g_U1429 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_35766( ref g_U1247 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_35369( ref g_U1030 ))))))
        {
            g_U831[12] = 1;
            if ((NOT l_U53._fU0) AND (g_U829 == 12))
            {
                 /* WRITESCRIPTLOG */ sub_1882( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
                l_U89 = 1;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_1882( "AT", "eCheckpointState = CP_LOADING_UFE_GUARDS", 0 );
                l_U89 = 6;
            }
        }
        break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUPS", 0 );
        g_U846[12] = 1;
        l_U91 = 0;
        if (( /* HAS_SAVEFILE_LOADED */ sub_37602( ref l_U53 )) == 0)
        {
             /* F_GIVEPEDWEAPON */ sub_11037(  /* PLAYER_PED_ID */ sub_2215(), 879300975, 25000, 0, 0 );
            l_U89 = 2;
             /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U89 = 6;
             /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpointState = CP_LOADING_UFE_GUARDS", 0 );
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYERS_WEAPONS", 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2215(), 0, 0 ) ))
            {
                g_U830 = 12;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_38142( ref l_U53, g_U830,  /* PLAYER_PED_ID */ sub_2215(), g_U2014[12], g_U2129[12], g_U2168[12], g_U2207[12], 0 );
                l_U89 = 6;
                 /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpointState = CP_LOADING_UFE_GUARDS", 0 );
            }
        }
        break;
        case 6:
         /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpointState = CP_LOADING_UFE_GUARDS", 0 );
        if (l_U90)
        {
            l_U951 = 1;
            l_U613 = 1;
        }
        if ((l_U951 != 4) AND (l_U951 != 0))
        {
             /* P_TM2_CREATE_UFE_ENEMIES */ sub_42901();
        }
        if (l_U951 > 2)
        {
            if ((l_U613 != 4) AND (l_U613 != 0))
            {
                 /* P_TM2_CREATE_ONFOOT_UFE_ENEMIES */ sub_46045();
            }
        }
        if ((l_U613 == 4) AND (l_U951 == 4))
        {
            l_U89 = 7;
             /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpointState = CP_SPAWN_VEHICLES_AND_DASILVA", 0 );
        }
        break;
        case 7:
        if ((( /* F_TM2_CREATE_DASILVA */ sub_47793()) == 1) AND (( /* F_SETUP_VEHICLES */ sub_46839()) == 1))
        {
            l_U89 = 8;
             /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 8:
        if (g_U846[12])
        {
            if (l_U91)
            {
                if (CUTSCENE_IS_LOADED( "mid_12_fin_concat" ))
                {
                    l_U89 = 9;
                     /* WRITESCRIPTLOG */ sub_1882( "GA", "eCheckpointState = CP_HANDLE_MID_12", 0 );
                }
                else if (CUTSCENE_NAMED_IS_LOADING( "mid_12_fin_concat" ))
                {
                     /* WRITESCRIPTLOG */ sub_1882( "GA", "Waiting for cutscene MID_12_FIN to load.", 0 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_1882( "GA", "Requesting cutscene MID_12_FIN to load.", 0 );
                    PRE_STREAM_SEAMLESS_CUTSCENE( "mid_12_fin_concat" );
                }
            }
            else
            {
                l_U89 = 9;
                 /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpointState = CP_HANDLE_MID_12", 0 );
            }
        }
        break;
        case 9:
        if (l_U90)
        {
             /* NIS_PRE_SETUP */ sub_48965( 1, 0, 0, 1 );
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_57481( ref l_U95, "mid_12_fin_concat", 49164, 49315, 50158, 52061, 52250, 57243, 250, 0 );
             /* CUTSYS_SETCUTSCENELOADEXTERIORONSKIP */ sub_58016( ref l_U95, g_U2014[12] );
            if (g_U830 != 12)
            {
                l_U95._fU4 = 2;
            }
            else
            {
                 /* F_GIVEPEDWEAPON */ sub_11037(  /* PLAYER_PED_ID */ sub_2215(), 879300975, 25000, 0, 0 );
                 /* P_TM2_START_UFE_FIGHT_VEHICLE_RECORDINGS */ sub_50366( 0.00000000 );
                DO_SCREEN_FADE_IN( 0 );
                 /* P_TM2_CREATE_UFE_JEEPS */ sub_51264();
                l_U95._fU4 = 7;
            }
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_58187( ref l_U95 ))
        {
            if (g_U830 != 12)
            {
                g_U830 = 12;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_38142( ref l_U53, g_U830,  /* PLAYER_PED_ID */ sub_2215(), g_U2014[12], g_U2129[12], g_U2168[12], g_U2207[12], 1 );
            }
             /* P_START_SP_CHALLENGES */ sub_60291();
            l_U89 = 10;
             /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpointState = CP_GAMEPLAY_BACK_UFE_TRUCKS", 0 );
        }
        break;
        case 10:
        if (l_U90)
        {
             /* STARTTIMER */ sub_3505( ref l_U954 );
             /* NIS_POST_SETUP */ sub_59832( 1, 1 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[12], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[12], 1065353216, 0 );
            ENABLE_TINNITUS( 0 );
             /* P_R1_START_HEALTH_TIMERS */ sub_60885();
             /* P_STREAMREQ_SCRIPT_STREAM_PLAY_FRONTEND */ sub_61206( "S_AIR_PLANE_RS_01", ref g_U1910 );
             /* P_STREAMREQ_SCRIPT_STREAM_PLAY_FROM_VEHICLE */ sub_61716( l_U474, "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
        }
        else if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
         /* P_TM2_APPLY_FORCE_TO_DEAD_VEHICLES */ sub_62287();
         /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_64941( ref l_U603, -1054867456, 0, 1 );
         /* P_REGISTER_PLAYER_FOR_UFE */ sub_65140();
         /* P_BF_HANDLE_REINFORCEMENT_CARS_ARRIVING */ sub_65361();
         /* P_HELICOPTER_BLADES_SPINNING */ sub_66348();
         /* P_HANDLE_CAMSHAKE_IN_GAMEPLAY */ sub_66454();
         /* P_HANDLE_SUPPORTING_JEEP_START */ sub_67524();
         /* P_HANDLE_HELICOPTER_EXPLOSION */ sub_67875();
         /* P_HANDLE_SPEED_UP_VEHICLES_FOR_CAV_SECTION */ sub_69238();
         /* P_HANDLE_PROGRESSIVE_CLEANUP */ sub_69565();
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U615, 0 ))
        {
             /* P_TM2_MAKE_ONFOOT_PEDS_RETREAT */ sub_70837();
        }
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() ))) AND (NOT (IS_PED_DEAD( l_U910[10] ))))
        {
            REGISTER_TARGET( l_U910[10],  /* PLAYER_PED_ID */ sub_2215() );
            TASK_VEHICLE_SHOOT_AT_PED( l_U910[10],  /* PLAYER_PED_ID */ sub_2215() );
        }
        if ((NOT (IS_VEHICLE_DEAD( l_U455 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() ))))
        {
            if ((NOT l_U237) AND (( /* F_GET_PLAYER_HEALTH_PERCENT */ sub_71300()) <= 0.18000000))
            {
                START_PARTICLE_FX_LOOPED_ON_VEHICLE( "veh_exhaust_truck", l_U455, l_U231, 0.00000000, 0.00000000, 0.00000000, 10.00000000 );
                START_PARTICLE_FX_LOOPED_ON_VEHICLE( "veh_exhaust_truck", l_U455, l_U234, 0.00000000, 0.00000000, 0.00000000, 10.00000000 );
                l_U237 = 1;
                 /* WRITESCRIPTLOG */ sub_1882( "CR", "Starting Particle Effects on vehicle before it blows up", 0 );
            }
        }
        if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_71654( ref l_U1033,  /* PLAYER_PED_ID */ sub_2215(), 0 ))
        {
             /* P_ACTIVATEPED */ sub_53016( l_U910[15] );
             /* P_ACTIVATEPED */ sub_53016( l_U910[16] );
             /* P_ACTIVATEPED */ sub_53016( l_U910[20] );
             /* P_ACTIVATEPED */ sub_53016( l_U910[10] );
             /* WRITESCRIPTLOG */ sub_1882( "CR", "Activating CAV & Support Jeep AI", 0 );
        }
        if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_71654( ref l_U1054,  /* PLAYER_PED_ID */ sub_2215(), 0 ))
        {
             /* STARTTIMER */ sub_3505( ref l_U1075 );
             /* STARTTIMER */ sub_3505( ref l_U1086 );
             /* WRITESCRIPTLOG */ sub_1882( "CR", "Global Vehicle Acceleration - Starting", 0 );
        }
        if ( /* ISTIMERDONE */ sub_3638( ref l_U1086 ))
        {
            l_U1096 = 1;
             /* WRITESCRIPTLOG */ sub_1882( "CR", "Global Vehicle Acceleration - Complete", 0 );
        }
        if ((NOT l_U1108) AND (( /* F_MAKE_PLAYER_VEHICLE_CATCHUP_TO_CAV */ sub_72048()) AND (l_U1096)))
        {
             /* P_MAKE_PLAYER_VEHICLE_ACCELERATE_TO_CAV */ sub_72239();
            l_U1108 = 1;
        }
        if ((NOT l_U1109) AND ( /* ISTIMERDONE */ sub_3638( ref l_U1098 )))
        {
             /* P_MAKE_PLAYER_VEHICLE_DECELERATE_FROM_CAV */ sub_72496();
            l_U1109 = 1;
        }
        if ( /* F_R1_HANDLE_PLAYER_HEALTH */ sub_72729())
        {
            l_U89 = 11;
        }
        break;
        case 11:
        if (l_U90)
        {
             /* P_R1_START_PLAYER_DIES_NIS */ sub_73337();
             /* P_CREATE_AND_START_TIMER */ sub_61070( ref l_U221, l_U230 );
             /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_6032( "S_AIR_PLANE_RS_01", ref g_U1910 );
             /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_6821( "S_AIR_PLANE_RS_01", ref g_U1910 );
             /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_6032( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
             /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_6821( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
        }
        if ( /* ISTIMERDONE */ sub_3638( ref l_U221 ))
        {
             /* P_R1_PLAYER_DIES_CAR_EXPLODES */ sub_74080();
        }
        break;
        case 13:
        if (l_U90)
        {
             /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpointState = CP_NIS_LAST_VEHICLE_EXPLODE", 0 );
             /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_6032( "S_AIR_PLANE_RS_01", ref g_U1910 );
             /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_6821( "S_AIR_PLANE_RS_01", ref g_U1910 );
             /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_6032( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
             /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_6821( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
             /* CLEANVEHICLE */ sub_5203( l_U474 );
             /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_70055( 1232833631, ref g_U1030 );
            CAMERA_USE_HANDY_CAM( 0, 1065353216, 0 );
             /* P_RW_START_LAST_EXPLODING_CAR_NIS */ sub_74671();
            g_U861[13]._fU36 = 1;
        }
        if ( /* ISTIMERDONE */ sub_3638( ref l_U124 ))
        {
            START_PARTICLE_FX_NON_LOOPED_ON_VEHICLE( "Veh_Explo_Truck_S", l_U123, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1.50000000 );
        }
        if ( /* ISTIMERDONE */ sub_3638( ref l_U172 ))
        {
             /* WRITESCRIPTLOG */ sub_1882( "GA", "Ending bullet time during exploding car NIS.", 0 );
            DEACTIVATE_BULLET_TIME( 1, 1 );
        }
        if ( /* NIS_IS_SHOT_FINISHED */ sub_75391( ref l_U133, 1 ))
        {
             /* WRITESCRIPTLOG */ sub_1882( "GA", "NIS Last Exploded vehicle complete.", 0 );
            g_U846[13] = 1;
            l_U89 = 14;
             /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 12:
        if (l_U90)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U455 )))
            {
                STOP_PLAYBACK_RECORDED_VEHICLE( l_U455 );
                FREEZE_VEHICLE_POSITION( l_U455, 1 );
            }
            if (NOT (IS_VEHICLE_DEAD( l_U469 )))
            {
                STOP_PLAYBACK_RECORDED_VEHICLE( l_U469 );
                FREEZE_VEHICLE_POSITION( l_U469, 1 );
            }
            for ( I = 0; I <= (l_U525 - 1); I++ )
            {
                if (NOT (IS_VEHICLE_DEAD( l_U525[I] )))
                {
                    STOP_PLAYBACK_RECORDED_VEHICLE( l_U525[I] );
                    FREEZE_VEHICLE_POSITION( l_U525[I], 1 );
                }
            }
            for ( I = 0; I <= (l_U531 - 1); I++ )
            {
                if (NOT (IS_VEHICLE_DEAD( l_U531[I] )))
                {
                    STOP_PLAYBACK_RECORDED_VEHICLE( l_U531[I] );
                    FREEZE_VEHICLE_POSITION( l_U531[I], 1 );
                }
            }
             /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U463, l_U983, 2.00000000, 47150.00000000, 0 );
             /* NIS_PRE_SETUP */ sub_48965( 1, 0, 0, 1 );
             /* NIS_CREATE_STATIC_CAM */ sub_73491( ref l_U984, -643.59800000, 503.71350000, -6.19582300, 10.98809000, -0.00001400, -19.61548000, 45.00000000, l_U1015 );
             /* NIS_PLAY_STATIC_CAMERA */ sub_73724( ref l_U984 );
             /* STARTTIMER */ sub_3505( ref l_U1016 );
        }
        if ( /* ISTIMERDONE */ sub_3638( ref l_U1016 ))
        {
            DO_SCREEN_FADE_OUT( 500 );
        }
        if ( /* NIS_IS_SHOT_FINISHED */ sub_75391( ref l_U984, 1 ))
        {
            l_U93 = 1;
        }
        FINALE_GRENADE_EXPLODE_ON_IMPACT( 0 );
        break;
        case 14:
         /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpointState = CP_FINISHED", 0 );
        if ((g_U830 == 13) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U89 = 0;
             /* WRITESCRIPTLOG */ sub_1882( "CR", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
     /* P_HANDLE_DIALOGUE_TRIGGERS */ sub_76223();
     /* P_HANDLE_DIALOGUES */ sub_76634();
    if (l_U89 != iVar2)
    {
        l_U90 = 1;
    }
    else
    {
        l_U90 = 0;
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_13452()
{
     /* WRITESCRIPTLOG */ sub_1882( "CR", "INITIALIZE_SCRIPT_DATA - START", 0 );
    l_U545[0] = 0;
    l_U545[1] = 0;
    l_U545[2] = 0;
    l_U545[3] = 0;
    l_U550[0] = 0;
    l_U550[1] = 0;
    l_U550[2] = 0;
    l_U550[3] = 0;
    l_U550[4] = 0;
    l_U556[0] = 0;
    l_U556[1] = 0;
    l_U556[2] = 0;
    l_U556[3] = 0;
    l_U561 = 0;
    l_U562 = 0;
    l_U524 = 0.70000000;
    l_U938[0] = {-613.46890000, -430.63040000, -6.73923200};
    l_U938[1] = {-625.44200000, -431.33230000, -6.73923200};
    l_U938[2] = {-612.28060000, -331.85210000, -6.73923200};
    l_U938[3] = {-624.91500000, -333.15200000, -6.73923200};
    l_U613 = 0;
    l_U614 = 0;
    l_U951 = 0;
    l_U952 = 0;
     /* CREATETIMER */ sub_3355( ref l_U954, l_U953, 1, 0 );
     /* CREATETIMER */ sub_3355( ref l_U963, 2000, 1, 0 );
    l_U1730 = 0;
    l_U972 = 0;
     /* CREATETIMER */ sub_3355( ref l_U973, l_U982, 1, 0 );
    l_U483 = 0;
     /* CREATETIMER */ sub_3355( ref l_U1075, l_U1084, 1, 0 );
     /* CREATETIMER */ sub_3355( ref l_U1086, l_U1095, 1, 0 );
     /* CREATETIMER */ sub_3355( ref l_U1098, l_U1107, 1, 0 );
    l_U1096 = 0;
    l_U1108 = 0;
    l_U1109 = 0;
     /* CREATETIMER */ sub_3355( ref l_U124, 1100, 1, 1 );
    l_U354 = 0;
    l_U1340 = 0;
    l_U1341 = 0;
    l_U1342 = 0;
    l_U1343 = 0;
    l_U1344 = 0;
    l_U1345 = 0;
    l_U1346 = 0;
    l_U1347 = 0;
    l_U1348 = 0;
    l_U1349 = 0;
    l_U1350 = 0;
    l_U1351 = 0;
    l_U1352 = 0;
    l_U1353 = 0;
    l_U1354 = 0;
    l_U1355 = 0;
    l_U1356 = 0;
    l_U1357 = 0;
    l_U1358 = 0;
    l_U1359 = 0;
    l_U1360 = 0;
    l_U1361 = 0;
    l_U1362 = 0;
    l_U1658 = 0;
     /* CREATETIMER */ sub_3355( ref l_U1016, l_U1015 - 500, 1, 0 );
    l_U93 = 0;
    l_U237 = 0;
     /* WRITESCRIPTLOG */ sub_1882( "CR", "INITIALIZE_SCRIPT_DATA - END", 0 );
    return;
}

/* P_SET_STATIC_DATA */ void sub_14180()
{
     /* WRITESCRIPTLOG */ sub_1882( "CR", "LOAD_ASSETS - START", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U484, 1.00000000, 1.00000000, 1.00000000, 0.00000000, 413457302, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[0], -889.52000000, -789.66000000, -5.50000000, 0.00000000, 270627203, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[1], -885.25000000, -789.66000000, -5.50000000, 0.00000000, -1964312659, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[2], -880.77000000, -789.66000000, -5.50000000, 0.00000000, 565778318, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[3], -889.67000000, -796.19000000, -5.50000000, 0.00000000, -956334494, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[4], -884.97000000, -796.19000000, -5.50000000, 0.00000000, -2142812815, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[5], -880.07000000, -796.19000000, -5.50000000, 0.00000000, 300568837, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[6], -874.67000000, -796.19000000, -5.50000000, 0.00000000, 270627203, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[7], -870.67000000, -796.19000000, -5.50000000, 0.00000000, -1964312659, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[8], -864.77000000, -789.66000000, -5.50000000, 0.00000000, 565778318, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[9], -860.67000000, -796.19000000, -5.50000000, 0.00000000, -956334494, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[10], -813.47000000, -501.30000000, 0.00000000, 0.00000000, -2142812815, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[11], -770.85000000, -530.35000000, -6.74000000, 0.00000000, 270627203, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[12], -468.61000000, -503.70000000, -6.76000000, 0.00000000, -1964312659, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[13], -770.85000000, -530.35000000, -6.74000000, 0.00000000, 565778318, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[14], -468.61000000, -503.70000000, -6.76000000, 0.00000000, -956334494, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[15], -465.61000000, -505.70000000, -6.76000000, 0.00000000, -2142812815, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[16], -461.61000000, -507.70000000, -6.76000000, 0.00000000, 300568837, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[17], -461.61000000, -509.70000000, -6.76000000, 0.00000000, 270627203, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[18], -461.61000000, -511.70000000, -6.76000000, 0.00000000, -1964312659, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[19], -461.61000000, -513.70000000, -6.76000000, 0.00000000, 565778318, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U636[20], -461.61000000, -515.70000000, -6.76000000, 0.00000000, -956334494, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U563[0], -712.54600000, -722.15860000, -6.74795100, 0.00000000, -2142812815, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U563[1], -707.38580000, -726.10050000, -6.74795100, 0.00000000, 300568837, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14277( ref l_U563[2], -677.34510000, -736.78360000, -6.74795100, 0.00000000, 270627203, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U248[0], "tb_TM2_R1_Dialogue[0] - Argggg!", -707.95920000, -700.77200000, -6.73901500, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U248[1], "tb_TM2_R1_Dialogue[1] - What are you doing?", -613.58180000, -599.83410000, -6.73901500, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U248[2], "tb_TM2_R1_Dialogue[2] - Damn it!", -626.74350000, -481.65230000, -6.73901500, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U248[3], "tb_TM2_R1_Dialogue[3] - You trying to kill him or me?", -618.43500000, -433.19900000, -6.73923200, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U248[4], "tb_TM2_R1_Dialogue[4] - Get me close!", -607.43510000, -340.77940000, -6.73923200, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U615, "tb_TM2_MaxIsCloseToOnfootPeds", -729.39940000, -701.89110000, -6.74778600, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1054, "tb_TM2_SpeedUpCavSection", -619.08000000, -288.53000000, -6.74000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 17.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1033, "tb_TM2_ActivateCAV_AI", -618.06000000, -429.61000000, -6.74000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1659[0], "tb_TM2_CleanupRoadblock[0]", -610.07000000, -384.07000000, -6.74000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 17.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1659[1], "tb_TM2_CleanupRoadblock[1]", -614.24000000, -308.17000000, -6.74000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 17.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1702, "tb_TM2_CleanupOnfootPeds", -668.92000000, -693.55000000, -6.74000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 17.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1363[0], "tb_dialogue_runway[0] - Guys on foot spawned - SAIR_DSUFE1", -814.06000000, -705.87000000, -6.50000000, 5.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1363[1], "tb_dialogue_runway[1] - shoot them or something - SAIR_DSSRT", -773.38000000, -699.55000000, -6.50000000, 5.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1363[2], "tb_dialogue_runway[2] - Shoooting the car? - SAIR_DSTDMG", -707.95920000, -700.77200000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1363[3], "tb_dialogue_runway[3] - 4x4's - SAIR_DSUFE2", -678.80000000, -696.23000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1363[4], "tb_dialogue_runway[4] - Take out the guys - SAIR_DSTGO", -644.40000000, -676.49000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1363[5], "tb_dialogue_runway[5] - Driving Noises - SAIR_DSMDN", -628.50000000, -653.26000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1363[6], "tb_dialogue_runway[6] - Take out the guys - SAIR_DSTGO", -630.41000000, -475.65000000, -6.74000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1363[7], "tb_dialogue_runway[7] - Max/DaSilva 2 line convo - SAIR_DSMXV7A", -615.96000000, -581.20000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1363[8], "tb_dialogue_runway[8] - Oh Noes, a roadblock - SAIR_DSRBLK", -629.68000000, -489.43000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1363[9], "tb_dialogue_runway[9] - Oh look! An APC! - SAIR_DSTABT", -609.77000000, -379.25000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1363[10], "tb_dialogue_runway[10] - Take out teh guys - SAIR_DSSFT", -618.19000000, -291.73000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1363[11], "tb_dialogue_runway[11] - Driving Noises - SAIR_DSMDN", -625.53000000, -98.14000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1363[12], "tb_dialogue_runway[12]", -620.69000000, -156.30000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_15581( ref l_U1363[13], "tb_dialogue_runway[13]", -624.89000000, -247.80000000, -6.74000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CAM_SHAKE_CREATE_STRUCT */ sub_18243( ref l_U402, 7, l_U451, 10, -1, l_U452, 0, 0 );
     /* WRITESCRIPTLOG */ sub_1882( "CR", "LOAD_ASSETS - END", 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_14277(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_15581(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CAM_SHAKE_CREATE_STRUCT */ void sub_18243(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (iParam0->_fU168 == 0)
    {
         /* P_CAM_SHAKE_SET_SHAKE_TYPE */ sub_18299( iParam0, uParam1 );
        iParam0->_fU192 = uParam1;
        iParam0->_fU36 = uParam2;
        iParam0->_fU148 = uParam3;
        iParam0->_fU152 = uParam4;
        iParam0->_fU156 = uParam5;
        iParam0->_fU160 = uParam7;
        iParam0->_fU176 = uParam6;
    }
     /* RESETTIMER */ sub_4214( iParam0 + 40 );
     /* RESETTIMER */ sub_4214( iParam0 + 76 );
     /* RESETTIMER */ sub_4214( iParam0 + 112 );
    iParam0->_fU172 = iParam0->_fU176;
    iParam0->_fU164 = 0;
    iParam0->_fU168 = 1;
    iParam0->_fU184 = 0;
    iParam0->_fU188 = 0;
    return;
}

/* P_CAM_SHAKE_SET_SHAKE_TYPE */ void sub_18299(int iParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case 1:
        StrCopy( ref iParam0->_fU4, "SMALL_EXPLOSION_SHAKE", 32 );
        break;
        case 2:
        StrCopy( ref iParam0->_fU4, "MEDIUM_EXPLOSION_SHAKE", 32 );
        break;
        case 3:
        StrCopy( ref iParam0->_fU4, "LARGE_EXPLOSION_SHAKE", 32 );
        break;
        case 4:
        StrCopy( ref iParam0->_fU4, "HAND_SHAKE", 32 );
        break;
        case 5:
        StrCopy( ref iParam0->_fU4, "JOLT_SHAKE", 32 );
        break;
        case 6:
        StrCopy( ref iParam0->_fU4, "VIBRATE_SHAKE", 32 );
        break;
        case 7:
        StrCopy( ref iParam0->_fU4, "WOBBLY_SHAKE", 32 );
        break;
    }
    iParam0->_fU0 = iParam0->_fU192;
    return;
}

/* P_R1_SETUP_HEALTH_TIMERS */ void sub_18819()
{
     /* WRITESCRIPTLOG */ sub_1882( "SA", "P_R1_SETUP_HEALTH_TIMERS start", 0 );
    l_U355[0]._fU36 = 5000;
    l_U355[0]._fU40 = 0.00000000;
    l_U355[1]._fU36 = 15000;
    l_U355[1]._fU40 = 0.10000000;
    l_U355[2]._fU36 = 30000;
    l_U355[2]._fU40 = 0.25000000;
    l_U355[3]._fU36 = 22500;
    l_U355[3]._fU40 = 0.65000000;
     /* WRITESCRIPTLOG */ sub_1882( "SA", "P_R1_SETUP_HEALTH_TIMERS end", 0 );
    return;
}

/* P_REQUEST_RUNWAY1_PERSISTENT_ASSETS */ void sub_19204()
{
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_REQUEST_RUNWAY1_PERSISTENT_ASSETS - START", 0 );
    if ((g_U829 == 12) || (NOT l_U91))
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_19337( 2038070575, ref g_U1030 );
    }
     /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_22167( ref l_U1025, ref g_U1030 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_22273( 879300975, ref g_U1247 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_22273( 1478009203, ref g_U1247 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_22273( 57534114, ref g_U1247 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_24255( "level_s_fin_cp_10", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_24255( "w_sp_grnlch_aa_h", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_24255( "veh@std", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_24255( "veh@truck", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_24255( "veh@helicopter", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_24255( "LEVEL_S_FIN_CP_11", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_24255( "LEVEL_S_FIN_CP_12", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_24255( "LEVEL_S_FAV2_CP_04", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_24255( "VEH@CAR_JASRE", ref g_U1429 );
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_26384( "LEVEL/S_AIR/VIG_13_FIN_MAX_CAR_SHOOT.act", ref g_U1783 );
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_26384( "Vehicle/Vehicle_Car.act", ref g_U1783 );
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_26384( "LEVEL/S_AIR/VIG_09_ChopperShooters", ref g_U1783 );
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_26384( "LEVEL/S_AIR/VIG_08_FIN_JEEP", ref g_U1783 );
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_26384( "VEHICLE/vehicle_heli", ref g_U1783 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28450( l_U468, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28450( l_U983, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28450( l_U498, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28450( l_U499, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28450( l_U500, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28450( l_U501, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28450( l_U502, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28450( l_U503, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28450( l_U508, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28450( l_U509, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28450( l_U504, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28450( l_U505, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28450( l_U506, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28450( l_U507, ref g_U1638 );
     /* P_STREAMREQ_SCRIPT_STREAM_INSERT */ sub_30633( "S_AIR_PLANE_RS_01", ref g_U1910 );
     /* P_STREAMREQ_SCRIPT_STREAM_INSERT */ sub_30633( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
     /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_32843( "SCRIPT_MISSION\S_AIR_RUNWAY_01A", ref g_U1950 );
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_REQUEST_RUNWAY1_PERSISTENT_ASSETS - END", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_19337(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_19404( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19662( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_19404(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19662( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19662( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19662( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21193( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19662( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19662( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_19662(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19723( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_19723(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_21193(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_22167(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_19337( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_22273(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_22327( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22588( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_22327(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22588( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22588( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22588( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21193( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22588( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22588( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_22588(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19723( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_24255(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_24307( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24559( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_24307(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24559( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24559( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24559( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21193( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24559( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24559( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_24559(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19723( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_INSERT */ void sub_26384(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ sub_26438( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ACTION_TREE asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26696( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ int sub_26438(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26696( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26696( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_ACTION_TREE_LOADED( uParam0 ))
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ACTION_TREE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26696( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ACTION_TREE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21193( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26696( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_ACTION_TREE_LOADED( uParam0 ))
        {
            DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ACTION_TREE is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ACTION_TREE: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26696( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ACTION_TREE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ void sub_26696(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19723( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ACTION_TREE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ void sub_28450(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ sub_28510( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING asset name: {} ###", 1, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_28780( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ int sub_28510(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_28780( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is loading: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_28780( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The VEHICLE_RECORDING asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_28780( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21193( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being removed: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_28780( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, iParam0 );
            DISPLAYF( "The VEHICLE_RECORDING is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING: {} ###", 1, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_28780( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ void sub_28780(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19723( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_INSERT */ void sub_30633(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ sub_30689( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_30953( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ int sub_30689(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_30953( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_30953( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_30953( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_21193( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_30953( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_30953( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1537, uParam0 );
                DISPLAYF( "The SCRIPT_STREAM asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM: {} ###", 1, 1537, uParam0 );
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_30953( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ void sub_30953(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19723( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_INSERT */ void sub_32843(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ sub_32896( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing AUDIO_BANK asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_33151( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ int sub_32896(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_33151( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_33151( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The AUDIO_BANK asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_33151( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21193( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_33151( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The AUDIO_BANK is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing AUDIO_BANK: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_33151( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ void sub_33151(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19723( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_REQUEST_RUNWAY1_NONPERSISTENT_ASSETS */ void sub_34800()
{
     /* WRITESCRIPTLOG */ sub_1882( "AT", "P_REQUEST_RUNWAY1_NONPERSISTENT_ASSETS start", 0 );
    if ((l_U91) AND (g_U829 != 12))
    {
         /* LOADSEAMLESSCUTSCENE */ sub_34948( "mid_12_fin_concat", 0 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_34948(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_35369(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_35766(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_36168(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ACTION_TREE_IS_LOADED */ int sub_36559(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ int sub_36937(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be requested: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to load: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be removed: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_37602(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1882( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_8545( uParam0,  /* PLAYER_PED_ID */ sub_2215() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_38142(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_1882( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_1882( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_11811( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_38433( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_38910( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_38910( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_39170( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_38910( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_39170( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_39170( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_38910( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_39170( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_39170( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_39170( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_38910( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_39170( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_39170( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_39170( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_39170( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_40750( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1882( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_38433(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_8826( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_1882( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_1882( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_38910(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_39170(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_40750(int iParam0)
{
     /* WRITE_STRING */ sub_10646( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_40838( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_40915( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_40915( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_40915( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_40915( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_40915( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_41785( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU52 );
     /* WRITE_STRING */ sub_10646( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU96 );
     /* WRITE_STRING */ sub_10646( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU100 );
     /* WRITE_STRING */ sub_10646( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU104 );
     /* WRITE_STRING */ sub_10646( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU108 );
     /* WRITE_STRING */ sub_10646( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU112 );
     /* WRITE_STRING */ sub_10646( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU116 );
     /* WRITE_STRING */ sub_10646( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU120 );
     /* WRITE_STRING */ sub_10646( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU124 );
     /* WRITE_STRING */ sub_10646( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU128 );
     /* WRITE_STRING */ sub_10646( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_41084( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_41084( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_41084( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_40838(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_40915(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_41084(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_41785(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_TM2_CREATE_UFE_ENEMIES */ void sub_42901()
{
    switch (l_U951)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_1882( "GA", "e_TM2_UFE_PedSpawn = ENTITY_STATE_INIT", 0 );
         /* P_SETUP_AI_GROUP */ sub_43036( ref l_U932, 1056964608, 0 );
        l_U952 = 0;
        l_U951 = 2;
         /* WRITESCRIPTLOG */ sub_1882( "GA", "e_TM2_UFE_PedSpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U910[l_U952] =  /* CREATEPED */ sub_43505( ref l_U636[l_U952] );
        if ((l_U952 != 17) AND ((l_U952 != 15) AND ((l_U952 != 14) AND ((l_U952 != 13) AND ((l_U952 != 12) AND ((l_U952 != 11) AND ((l_U952 != 8) AND ((l_U952 != 5) AND ((l_U952 != 2) AND (l_U952 != 0))))))))))
        {
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_44565( l_U910[l_U952], ref l_U932 );
        }
        if (NOT (IS_PED_DEAD( l_U910[l_U952] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U910[l_U952], 1 );
            SET_PED_AI_TEMPLATE( l_U910[l_U952], "AIT_EXPERT" );
            SET_PED_ALERTNESS( l_U910[l_U952], 3 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U910[l_U952], 1 );
            SET_PED_PROOFS( l_U910[l_U952], 1, 1, 0, 1, 1 );
            SET_PED_GORE( l_U910[l_U952], 0 );
            SET_PED_FORCE_USE_RAGDOLL( l_U910[l_U952], 0, 1 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
            {
                SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_2215(), 1, 2 );
                SET_PED_RELATIONSHIP_GROUP( l_U910[l_U952], 2 );
                SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP(  /* PLAYER_PED_ID */ sub_2215(), 1, 2 );
            }
        }
        if (l_U952 == 17)
        {
            if (NOT (IS_PED_DEAD( l_U910[l_U952] )))
            {
                SET_PED_PROOFS( l_U910[l_U952], 1, 1, 1, 1, 1 );
            }
        }
        l_U952++;
        if (l_U952 >= 21)
        {
            l_U951 = 3;
             /* WRITESCRIPTLOG */ sub_1882( "GA", "e_TM2_UFE_PedSpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_45376( ref l_U910, "pi_TM2_UFE_Ped" );
         /* F_GIVEPEDWEAPON */ sub_11037( l_U910[1], 1478009203, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11037( l_U910[3], 57534114, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11037( l_U910[4], 1478009203, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11037( l_U910[6], 57534114, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11037( l_U910[7], 1478009203, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11037( l_U910[9], 57534114, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11037( l_U910[16], 1478009203, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11037( l_U910[18], 57534114, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11037( l_U910[19], 1478009203, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11037( l_U910[20], 57534114, 25000, 0, 0 );
         /* P_DEACTIVATEPEDARRAY */ sub_45750( ref l_U910 );
        l_U951 = 4;
         /* WRITESCRIPTLOG */ sub_1882( "GA", "e_TM2_UFE_PedSpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

/* P_SETUP_AI_GROUP */ void sub_43036(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* CREATEPED */ void sub_43505(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_43687( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_44236( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_44337( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* LOADMODEL */ void sub_43687(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_10646( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETPEDDEFAULTSTATS */ void sub_44236(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_44337(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_44565(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_10646( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_43036( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_43036( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_45376(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_DEACTIVATEPEDARRAY */ void sub_45750(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_DEACTIVATEPED */ sub_45804( (uParam0^)[I] );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_45804(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* P_TM2_CREATE_ONFOOT_UFE_ENEMIES */ void sub_46045()
{
    switch (l_U613)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_1882( "CR", "e_TM2_UFE_OnfootPedSpawn = ENTITY_STATE_INIT", 0 );
         /* P_SETUP_AI_GROUP */ sub_43036( ref l_U607, 1056964608, 0 );
        l_U614 = 0;
        l_U613 = 2;
         /* WRITESCRIPTLOG */ sub_1882( "CR", "e_TM2_UFE_OnfootPedSpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U603[l_U614] =  /* CREATEPED */ sub_43505( ref l_U563[l_U614] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_44565( l_U603[l_U614], ref l_U607 );
        if (NOT (IS_PED_DEAD( l_U603[l_U614] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U603[l_U614], 1 );
            SET_PED_AI_TEMPLATE( l_U603[l_U614], "AIT_EXPERT" );
            SET_PED_ALERTNESS( l_U603[l_U614], 3 );
            SET_PED_COMBAT_ATTRIBUTES( l_U603[l_U614], 256, 0 );
        }
        l_U614++;
        if (l_U614 >= 3)
        {
            l_U613 = 3;
             /* WRITESCRIPTLOG */ sub_1882( "GA", "e_TM2_UFE_OnfootPedSpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_45376( ref l_U603, "pi_TM2_UFE_OnFootPed" );
         /* F_GIVEPEDWEAPON */ sub_11037( l_U603[0], 1478009203, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11037( l_U603[1], 57534114, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11037( l_U603[2], 1478009203, 25000, 0, 0 );
         /* P_DEACTIVATEPEDARRAY */ sub_45750( ref l_U603 );
        l_U613 = 4;
         /* WRITESCRIPTLOG */ sub_1882( "GA", "e_TM2_UFE_OnfootPedSpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

/* F_SETUP_VEHICLES */ int sub_46839()
{
     /* WRITESCRIPTLOG */ sub_1882( "CR", "F_SETUP_VEHICLES - START", 0 );
    l_U455 =  /* CREATEVEHICLE */ sub_46925( 1979959192, l_U456, l_U459, 0, 0, 0 );
    if (DOES_VEHICLE_EXIST( l_U455 ))
    {
        SET_VEHICLE_CAN_BE_DAMAGED( l_U455, 0 );
        SET_VEHICLE_EXTRA( l_U455, 1, 1 );
        SET_VEHICLE_COLOUR_COMBINATION( l_U455, 0 );
    }
    l_U463 =  /* CREATEVEHICLE */ sub_46925( 877881452, l_U464, l_U467, 0, 0, 0 );
    if (DOES_VEHICLE_EXIST( l_U463 ))
    {
        SET_VEHICLE_CAN_BE_DAMAGED( l_U463, 0 );
        SET_VEHICLE_EXTRA( l_U463, 1, 0 );
        SET_VEHICLE_EXTRA( l_U463, 2, 0 );
        SET_VEHICLE_COLOUR_COMBINATION( l_U463, 0 );
    }
    l_U469 =  /* CREATEVEHICLE */ sub_46925( 975934894, l_U470, l_U473, 0, 0, 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U469 )))
    {
        SET_VEHICLE_ENGINE_ON( l_U469, 1, 1 );
        SET_VEHICLE_ONLY_DAMAGED_BY_PLAYER( l_U469, 1 );
        SET_VEHICLE_FIXED_WEAPON_ACCURACY( l_U469, 0.75000000, 0 );
        SET_VEHICLE_FIXED_WEAPON_DAMAGE( l_U469, 30, 0 );
        SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_MODE( l_U469, 0, 0 );
        SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_SET( l_U469, 0, GET_HASH_KEY( "FIRING_PATTERN_CAV_STEADY_SINGLE" ), 0, 0, 0, 0, 0, 0, 0, 0, 0 );
        SET_VEHICLE_ONLY_EXPLODES_WHEN_HIT_BY_MULTIPLE_EXPLOSIONS( l_U469, 1, 3 );
    }
    l_U474 =  /* CREATEVEHICLE */ sub_46925( 1232833631, l_U475, l_U478, 0, 0, 0 );
    if ((NOT (IS_VEHICLE_DEAD( l_U474 ))) AND (DOES_VEHICLE_EXIST( l_U474 )))
    {
        SET_VEHICLE_ENGINE_ON( l_U474, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( l_U474 );
        SET_VEHICLE_DOOR_OPEN( l_U474, 2 );
        SET_VEHICLE_DOOR_OPEN( l_U474, 3 );
        SET_VEHICLE_ONLY_EXPLODES_WHEN_HIT_BY_MULTIPLE_EXPLOSIONS( l_U474, 1, 1 );
        SET_VEHICLE_REACT_TO_EXPLOSION( l_U474, 0 );
        SET_VEHICLE_CAN_BE_DAMAGED( l_U474, 0 );
    }
     /* WRITESCRIPTLOG */ sub_1882( "CR", "F_SETUP_VEHICLES - END", 0 );
    return 1;
}

/* CREATEVEHICLE */ void sub_46925(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_43687( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* F_TM2_CREATE_DASILVA */ int sub_47793()
{
     /* WRITESCRIPTLOG */ sub_1882( "GA", "F_TM2_CREATE_DASILVA start", 0 );
    l_U497 =  /* CREATEPEDINVEHICLE */ sub_47878( ref l_U484, l_U455, -1, 0, 0 );
    SET_PED_PROOFS( l_U497, 1, 1, 1, 1, 1 );
    SET_PED_GORE( l_U497, 0 );
     /* WRITESCRIPTLOG */ sub_1882( "GA", "F_TM2_CREATE_DASILVA end", 0 );
    return 1;
}

/* CREATEPEDINVEHICLE */ void sub_47878(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4)
{
    if ((HAS_MODEL_LOADED( iParam0->_fU16 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_43687( iParam0->_fU16, 1 );
    }
    if (((IS_VEHICLE_DEAD( uParam1 )) == 0) AND ((DOES_VEHICLE_EXIST( uParam1 )) == 1))
    {
        iParam0->_fU40 = CREATE_PED_INSIDE_VEHICLE( uParam1, iParam0->_fU24, iParam0->_fU16, uParam2, uParam4, iParam0->_fU48 );
    }
    else
    {
        SCRIPT_ASSERT( "The vehicle your trying to create a ped inside of is not valid!!!", 0 );
    }
    if (iParam3 == 1)
    {
        while ((DOES_PED_EXIST( iParam0->_fU40 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for ped created inside a vehicle to exist... ###", 0 );
            WAIT( 0 );
        }
    }
     /* SETPEDDEFAULTSTATS */ sub_44236( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_44337( iParam0->_fU40 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        iParam0->_fU44 = 1;
    }
    return iParam0->_fU40;
}

/* NIS_PRE_SETUP */ void sub_48965(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2253(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_2215(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_2215() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_2215(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* F_MID_12_FIN_PRECUTSCENESETUP */ int sub_49164()
{
     /* WRITESCRIPTLOG */ sub_1882( "CR", "F_MID_12_FIN_PreCutsceneSetup - Start", 0 );
     /* WRITESCRIPTLOG */ sub_1882( "CR", "F_MID_12_FIN_PreCutsceneSetup - End", 0 );
    return 1;
}

/* P_MID_12_FIN_CUTSCENEREGISTRATION */ void sub_49315()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_MID_12_FIN_CutsceneRegistration - Start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2215(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_Glk18_Aa_H", 0 );
        }
         /* MAL_GIVEPEDWEAPON */ sub_49507(  /* PLAYER_PED_ID */ sub_2215(), 879300975, 200, 1, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2215(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar3, "W_SP_GrnLch_Aa_H", 0 );
            CUTSCENE_REGISTER_PED_WEAPON_HAND(  /* PLAYER_PED_ID */ sub_2215(), uVar3, 0 );
        }
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_2215(), "/Global/VIG_13_FIN_MAX_CAR_SHOOT/VIG_13_FIN_BLEND_IN_ROOT" );
    }
    if (NOT (IS_PED_DEAD( l_U497 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U497, "Wlsn_Spp_NOJ", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( l_U463 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U463, "plane_jet", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( l_U455 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U455, "car_detective", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_MID_12_FIN_CutsceneRegistration - End", 0 );
    return;
}

/* MAL_GIVEPEDWEAPON */ void sub_49507(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                 /* MAL_WRITESCRIPTLOG */ sub_49675( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

/* MAL_WRITESCRIPTLOG */ void sub_49675(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* P_MID_12_FIN_HANDLECUTSCENE */ void sub_50158()
{
    if (l_U95._fU52)
    {
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
         /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_50235( 0, 0, 0, -859915232, -859915232, 0 );
         /* P_TM2_START_UFE_FIGHT_VEHICLE_RECORDINGS */ sub_50366( 0.00000000 );
        DO_SCREEN_FADE_IN( 0 );
         /* P_TM2_CREATE_UFE_JEEPS */ sub_51264();
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_19337( 2038070575, ref g_U1030 );
    }
    if (NOT l_U1658)
    {
        if (GET_CUTSCENE_TIME_MS() > 6790)
        {
             /* WRITESCRIPTLOG */ sub_1882( "MF", "Music Cue: 10.2", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_6", "FINALE_01_6", 1.00000000, 12000, 8000, -1082130432, 0 );
            l_U1658 = 1;
        }
    }
    return;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_50235(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* P_TM2_START_UFE_FIGHT_VEHICLE_RECORDINGS */ void sub_50366(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1882( "GA", "P_TM2_START_UFE_FIGHT_VEHICLE_RECORDINGS start", 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U455, l_U498, uParam0, l_U511, 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U525[0], l_U499, uParam0, l_U512, 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U525[1], l_U500, uParam0, l_U513, 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U525[2], l_U501, uParam0, l_U514, 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U525[3], l_U502, uParam0, l_U515, 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U525[4], l_U503, uParam0, l_U516, 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U469, l_U508, uParam0, l_U517, 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U474, l_U509, uParam0, l_U518, 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U531[0], l_U504, uParam0, l_U519, 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U531[1], l_U505, uParam0, l_U520, 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U531[2], l_U506, uParam0, l_U521, 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U531[3], l_U507, uParam0, l_U522, 0 );
     /* WRITESCRIPTLOG */ sub_1882( "GA", "P_TM2_START_UFE_FIGHT_VEHICLE_RECORDINGS end", 0 );
    return;
}

/* P_START_VEHICLE_PLAYBACK */ void sub_50497(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3, boolean bParam4)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
    }
     /* LOADVEHICLERECORDING */ sub_50575( uParam1, 1 );
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
        SET_PLAYBACK_SPEED( uParam0, uParam2 );
        if (fParam3 > 0.00000000)
        {
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, fParam3 );
        }
    }
    if (bParam4)
    {
        while ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
        {
             /* WRITE_STRING */ sub_10646( "Waiting for vehicle to start playing recorded path." );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADVEHICLERECORDING */ void sub_50575(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a recording to be loaded: Rec# {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_TM2_CREATE_UFE_JEEPS */ void sub_51264()
{
    vector[9] vVar2;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    int I;

     /* WRITESCRIPTLOG */ sub_1882( "GA", "P_TM2_CREATE_UFE_JEEPS start", 0 );
    array(ref vVar2, 9);
    vVar2[0] = {-888.95000000, -783.48000000, -5.50000000};
    vVar2[1] = {-885.95000000, -783.48000000, -5.50000000};
    vVar2[2] = {-878.95000000, -783.48000000, -5.50000000};
    vVar2[3] = {-873.95000000, -783.48000000, -5.50000000};
    vVar2[4] = {-878.95000000, -783.48000000, -5.50000000};
    vVar2[5] = {-873.95000000, -783.48000000, -5.50000000};
    vVar2[6] = {-878.95000000, -783.48000000, -5.50000000};
    vVar2[7] = {-873.95000000, -783.48000000, -5.50000000};
    vVar2[8] = {-873.95000000, -783.48000000, -5.50000000};
    for ( I = 0; I <= (l_U525 - 1); I++ )
    {
        l_U525[I] =  /* CREATEVEHICLE */ sub_46925( -1053689591, vVar2[I], 0.00000000, 0, 0, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U525[I] )))
        {
            SET_VEHICLE_ENGINE_ON( l_U525[I], 1, 1 );
            SET_VEHICLE_EXTRA( l_U525[I], 1, 0 );
            SET_VEHICLE_EXTRA( l_U525[I], 2, 0 );
            SET_VEHICLE_EXTRA( l_U525[I], 3, 0 );
            SET_VEHICLE_EXTRA( l_U525[I], 4, 0 );
            SET_VEHICLE_EXTRA( l_U525[I], 5, 0 );
            SET_VEHICLE_EXTRA( l_U525[I], 6, 0 );
            SET_VEHICLE_EXTRA( l_U525[I], 7, 1 );
            SET_VEHICLE_EXTRA( l_U525[I], 8, 1 );
            SET_VEHICLE_COLOUR_COMBINATION( l_U525[I], 1 );
            SET_VEHICLE_ONLY_DAMAGED_BY_PLAYER( l_U525[I], 1 );
        }
    }
     /* WRITESCRIPTLOG */ sub_1882( "GA", "P_TM2_CREATE_UFE_JEEPS end", 0 );
    return;
}

/* F_MID_12_FIN_POSTCUTSCENE */ int sub_52061()
{
     /* WRITESCRIPTLOG */ sub_1882( "CR", "F_MID_12_FIN_PostCutscene - Start", 0 );
    if ((NOT (IS_VEHICLE_DEAD( l_U455 ))) AND (NOT (IS_PED_DEAD( l_U497 ))))
    {
        SET_PED_INTO_VEHICLE( l_U497, l_U455, -1 );
    }
     /* WRITESCRIPTLOG */ sub_1882( "CR", "F_MID_12_FIN_PostCutscene - End", 0 );
    return 1;
}

/* P_MID_12_FIN_PREPAREBLENDOUT */ void sub_52250()
{
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_MID_12_FIN_PrepareBlendOut - End", 0 );
    if (IS_SCREEN_FADED_OUT())
    {
        DO_SCREEN_FADE_IN( 0 );
    }
    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2215(), 0 ) ))
    {
        REMOVE_WEAPON_FROM_PED(  /* PLAYER_PED_ID */ sub_2215(), GET_WEAPON_TYPE( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2215(), 0 ) ) );
    }
    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2215(), 1 ) ))
    {
        REMOVE_WEAPON_FROM_PED(  /* PLAYER_PED_ID */ sub_2215(), GET_WEAPON_TYPE( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2215(), 1 ) ) );
    }
     /* CLEANVEHICLE */ sub_5203( l_U463 );
     /* P_TM2_CREATE_UFE_SEDANS */ sub_52483();
     /* P_TM2_SET_UFE_IN_VEHICLES */ sub_52877();
     /* P_TM2_START_UFE_GAMEPLAY */ sub_55949();
     /* P_SETUP_PLAYER */ sub_56498();
    CAMERA_PLAY_ANIMATED_ATTACHED_VEHICLE_RELATIVE( "LEVEL_S_FIN_CP_11", "B_OUT_MID_12_FIN_CAM", l_U455, 0, 0 );
     /* P_CAM_SHAKE_ACTIVATE */ sub_56974( ref l_U402 );
    CAMERA_USE_HANDY_CAM( 1, l_U401, 0 );
    if (NOT l_U1658)
    {
         /* WRITESCRIPTLOG */ sub_1882( "MF", "Music Cue: 11", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_6", "FINALE_01_6", 1.00000000, 0, 0, -1082130432, 0 );
        l_U1658 = 1;
    }
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_MID_12_FIN_PrepareBlendOut - End", 0 );
    return;
}

/* P_TM2_CREATE_UFE_SEDANS */ void sub_52483()
{
    vector[9] vVar2;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    int I;

     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_TM2_CREATE_UFE_SEDANS start", 0 );
    array(ref vVar2, 9);
    vVar2[0] = {-888.95000000, -783.48000000, -5.50000000};
    vVar2[1] = {-885.95000000, -783.48000000, -5.50000000};
    vVar2[2] = {-878.95000000, -783.48000000, -5.50000000};
    vVar2[3] = {-873.95000000, -783.48000000, -5.50000000};
    for ( I = 0; I <= (l_U531 - 1); I++ )
    {
        l_U531[I] =  /* CREATEVEHICLE */ sub_46925( 2038070575, vVar2[I], 0.00000000, 0, 0, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U531[I] )))
        {
            SET_VEHICLE_ENGINE_ON( l_U531[I], 1, 1 );
            SET_VEHICLE_EXTRA( l_U531[I], 2, 1 );
            SET_VEHICLE_ONLY_DAMAGED_BY_PLAYER( l_U531[I], 1 );
            SET_VEHICLE_SIREN( l_U531[I], 1 );
        }
    }
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_TM2_CREATE_UFE_SEDANS end", 0 );
    return;
}

/* P_TM2_SET_UFE_IN_VEHICLES */ void sub_52877()
{
    vector vVar2;
    vector vVar5;
    vector vVar8;
    vector vVar11;
    int I;

     /* WRITESCRIPTLOG */ sub_1882( "GA", "P_TM2_SET_UFE_IN_VEHICLES start", 0 );
     /* P_ACTIVATEPEDARRAY */ sub_52964( ref l_U910 );
     /* P_ACTIVATEPEDARRAY */ sub_52964( ref l_U603 );
    vVar2 = {-0.25000000, -1.20000000, 0.30000000};
    vVar5 = {-0.25000000, -1.20000000, 0.60000000};
    vVar8 = {0.25000000, -0.90000000, 0.65000000};
    vVar11 = {0.25000000, -0.90000000, 0.30000000};
    if (NOT (IS_VEHICLE_DEAD( l_U525[0] )))
    {
        l_U540 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U540, "S_AIR_PLANE_RS_JEEP", l_U525[0] );
        if (NOT (IS_PED_DEAD( l_U910[0] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[0], l_U525[0], -1 );
        }
        if (NOT (IS_PED_DEAD( l_U910[1] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[1], l_U525[0], 0, vVar2, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[1], "/Global/VIG_08_FIN_JEEP/BACK_LEFT/COMBAT" );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U525[1] )))
    {
        l_U541 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U541, "S_AIR_PLANE_RS_JEEP", l_U525[1] );
        if (NOT (IS_PED_DEAD( l_U910[2] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[2], l_U525[1], -1 );
        }
        if (NOT (IS_PED_DEAD( l_U910[3] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[3], l_U525[1], 0, vVar2, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[3], "/Global/VIG_08_FIN_JEEP/BACK_LEFT/COMBAT" );
        }
        if (NOT (IS_PED_DEAD( l_U910[4] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[4], l_U525[1], 0, vVar8, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[4], "/Global/VIG_08_FIN_JEEP/BACK_RIGHT/COMBAT" );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U525[2] )))
    {
        l_U542 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U542, "S_AIR_PLANE_RS_JEEP", l_U525[2] );
        if (NOT (IS_PED_DEAD( l_U910[5] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[5], l_U525[2], -1 );
        }
        if (NOT (IS_PED_DEAD( l_U910[6] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[6], l_U525[2], 0, vVar5, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[6], "/Global/VIG_08_FIN_JEEP/BACK_LEFT/COMBAT" );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U525[3] )))
    {
        l_U543 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U543, "S_AIR_PLANE_RS_JEEP", l_U525[3] );
        if (NOT (IS_PED_DEAD( l_U910[8] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[8], l_U525[3], -1 );
        }
        if (NOT (IS_PED_DEAD( l_U910[9] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[9], l_U525[3], 0, vVar11, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[9], "/Global/VIG_08_FIN_JEEP/BACK_RIGHT/COMBAT" );
        }
        if (NOT (IS_PED_DEAD( l_U910[7] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[7], l_U525[3], 0, vVar5, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[7], "/Global/VIG_08_FIN_JEEP/BACK_LEFT/COMBAT" );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U525[4] )))
    {
        l_U544 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U544, "S_AIR_PLANE_RS_JEEP", l_U525[4] );
        if (NOT (IS_PED_DEAD( l_U910[15] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[15], l_U525[4], -1 );
             /* P_DEACTIVATEPED */ sub_45804( l_U910[15] );
        }
        if (NOT (IS_PED_DEAD( l_U910[16] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[16], l_U525[4], 0, vVar2, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[16], "/Global/VIG_08_FIN_JEEP/BACK_LEFT/COMBAT" );
             /* P_DEACTIVATEPED */ sub_45804( l_U910[16] );
        }
        if (NOT (IS_PED_DEAD( l_U910[20] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[20], l_U525[4], 0, vVar8, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[20], "/Global/VIG_08_FIN_JEEP/BACK_RIGHT/COMBAT" );
             /* P_DEACTIVATEPED */ sub_45804( l_U910[20] );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U531[0] )))
    {
        l_U536 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U536, "S_AIR_SIRENS", l_U531[0] );
        if (NOT (IS_PED_DEAD( l_U910[11] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[11], l_U531[0], -1 );
             /* P_DEACTIVATEPED */ sub_45804( l_U910[11] );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U531[1] )))
    {
        l_U537 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U537, "S_AIR_SIRENS", l_U531[1] );
        if (NOT (IS_PED_DEAD( l_U910[12] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[12], l_U531[1], -1 );
             /* P_DEACTIVATEPED */ sub_45804( l_U910[12] );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U531[2] )))
    {
        l_U538 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U538, "S_AIR_SIRENS", l_U531[2] );
        if (NOT (IS_PED_DEAD( l_U910[13] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[13], l_U531[2], -1 );
             /* P_DEACTIVATEPED */ sub_45804( l_U910[13] );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U531[3] )))
    {
        l_U539 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U539, "S_AIR_SIRENS", l_U531[3] );
        if (NOT (IS_PED_DEAD( l_U910[14] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[14], l_U531[3], -1 );
             /* P_DEACTIVATEPED */ sub_45804( l_U910[14] );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U469 )))
    {
        if (NOT (IS_PED_DEAD( l_U910[10] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[10], l_U469, -1 );
             /* P_DEACTIVATEPED */ sub_45804( l_U910[10] );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U474 )))
    {
        if (NOT (IS_PED_DEAD( l_U910[17] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[17], l_U474, -1 );
        }
        if (NOT (IS_PED_DEAD( l_U910[18] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[18], l_U474, 0, -0.80000000, 0.40000000, 0.80000000, 90, 0, 1, 0, 0, 1 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[18], "/Global/S_FAV2_VIG_09/S_FAV2_SKID/PASSENGER" );
        }
        if (NOT (IS_PED_DEAD( l_U910[19] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[19], l_U474, 0, 0.80000000, 0.40000000, 0.80000000, 65446, 0, 1, 0, 0, 1 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[19], "/Global/S_FAV2_VIG_09/S_FAV2_SKID/PASSENGER" );
        }
    }
    for ( I = 0; I <= 20; I++ )
    {
        if ((I != 17) AND ((I != 12) AND ((I != 11) AND ((I != 8) AND ((I != 5) AND ((I != 2) AND ((I != 0) AND ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() ))) AND (NOT (IS_PED_DEAD( l_U910[I] )))))))))))
        {
            REGISTER_TARGET( l_U910[I],  /* PLAYER_PED_ID */ sub_2215() );
            TASK_AIM_GUN_AT_PED( l_U910[I],  /* PLAYER_PED_ID */ sub_2215(), -1, 1 );
        }
    }
     /* WRITESCRIPTLOG */ sub_1882( "GA", "P_TM2_SET_UFE_IN_VEHICLES end", 0 );
    return;
}

/* P_ACTIVATEPEDARRAY */ void sub_52964(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_53016( (uParam0^)[I] );
    }
    return;
}

/* P_ACTIVATEPED */ void sub_53016(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* P_TM2_START_UFE_GAMEPLAY */ void sub_55949()
{
    int I;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_1882( "GA", "P_TM2_START_UFE_GAMEPLAY start", 0 );
    for ( I = 0; I <= 20; I++ )
    {
        if ((I != 17) AND ((I != 15) AND ((I != 10) AND ((I != 8) AND ((I != 5) AND ((I != 2) AND ((I != 0) AND ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() ))) AND (NOT (IS_PED_DEAD( l_U910[I] )))))))))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U910[I], 0 );
            REGISTER_TARGET( l_U910[I],  /* PLAYER_PED_ID */ sub_2215() );
            TASK_COMBAT_PED( l_U910[I],  /* PLAYER_PED_ID */ sub_2215() );
        }
    }
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -672.96670000, -692.54710000, -6.73889600,  /* PLAYER_PED_ID */ sub_2215(), 1, 80, 80, -1, 4 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        for ( I = 0; I <= 2; I++ )
        {
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() ))) AND (NOT (IS_PED_DEAD( l_U603[I] ))))
            {
                REGISTER_TARGET( l_U603[I],  /* PLAYER_PED_ID */ sub_2215() );
                TASK_PERFORM_SEQUENCE( l_U603[I], uVar3 );
            }
        }
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    SET_PED_MODEL_LOD_DISTANCES( 2113814688, 10, 100 );
     /* P_TM2_START_UFE_FIGHT_VEHICLE_RECORDINGS */ sub_50366( l_U524 );
     /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U463, l_U468, l_U523, l_U510, 0 );
    FINALE_GRENADE_EXPLODE_ON_IMPACT( 1 );
     /* WRITESCRIPTLOG */ sub_1882( "GA", "P_TM2_START_UFE_GAMEPLAY end", 0 );
    return;
}

/* P_SETUP_PLAYER */ void sub_56498()
{
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_SETUP_PLAYER - START", 0 );
    SET_CAMERA_OVERRIDE( "FINALE_GRENADE_FRONT_AIM", "FINALE_GRENADE_FRONT_AIM", 0, 1, 1 );
    SET_RAIL_RELATIVE_DIR( 5, 0 );
    SET_CAM_VIEW_MODE( 1 );
    HUD_SET_PLAYER_HEALTH_TEXTURE( "mp3_hud_health_car" );
    if ((NOT (IS_VEHICLE_DEAD( l_U455 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() ))))
    {
        ATTACH_PED_TO_VEHICLE(  /* PLAYER_PED_ID */ sub_2215(), l_U455, 0, l_U460, 0, 360.00000000, 1, 0, 0, 1 );
        PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_2215(), "/Global/VIG_13_FIN_MAX_CAR_SHOOT/VIG_13_FIN_BLEND_IN_ROOT" );
        SET_ALLOW_PLAYER_REACT_TO_EXPLOSION(  /* PLAYER_PED_ID */ sub_2215(), 1, 0 );
        SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_2215(), 1, 1, 1, 1, 1 );
        SET_PED_GORE(  /* PLAYER_PED_ID */ sub_2215(), 0 );
    }
    ENABLE_LAST_MAN_STANDING( 0 );
    SET_PAYNEKILLER_AMT( 0 );
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_SETUP_PLAYER - END", 0 );
    return;
}

/* P_CAM_SHAKE_ACTIVATE */ void sub_56974(int iParam0)
{
     /* RESETTIMER */ sub_4214( iParam0 + 40 );
     /* RESETTIMER */ sub_4214( iParam0 + 76 );
     /* RESETTIMER */ sub_4214( iParam0 + 112 );
    iParam0->_fU172 = 1;
    iParam0->_fU164 = 0;
    return;
}

/* F_MID_12_FIN_HANDLEBLENDOUT */ int sub_57243()
{
    if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FIN_CP_11", "B_OUT_MID_12_FIN_CAM" )) - 1500))
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[12], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[12], 1065353216, 0 );
        CAMERA_ANIMATED_STOP( l_U122, 1 );
        SET_CAM_SIDE_LEFT( 0 );
        if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2253() )))
        {
            PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_2215(), 47, 1500, 0.00000000, 0.00000000, 0.00000000 );
        }
        return 1;
    }
    return 0;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_57481(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_1882( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_57705( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 57602, 57652, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_57602()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_57652()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_57705(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_SETCUTSCENELOADEXTERIORONSKIP */ void sub_58016(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 0;
    iParam0->_fU84 = {uParam1};
    iParam0->_fU24 = 1;
    return;
}

/* CUTSYS_HANDLECUTSCENE */ void sub_58187(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_1882( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_1882( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_1882( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_1882( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_1882( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_1882( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_34948( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_1882( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_48965( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_48965( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_1882( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_59452( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_48965( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_59832( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_59832( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_59452(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2215(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2215(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2215(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2215(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2215(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_59832(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2253(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_2215(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_59930();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_59930()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2215(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2215(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_2215(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_2215(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_START_SP_CHALLENGES */ void sub_60291()
{
     /* WRITESCRIPTLOG */ sub_1882( "CCB", "P_START_SP_CHALLENGES", 0 );
    l_U1731 = 0;
    if (STAT_EXISTS( "SP_VEHICLES_DESTROYED" ))
    {
        DISPLAYF( "[CCB] ### The current SP_VEHICLES_DESTROYED value is: {} ###", 1, 513, STAT_GET_INT( "SP_VEHICLES_DESTROYED" ) );
    }
    else
    {
        DISPLAYF( "[CCB] ### The SP_VEHICLES_DESTROYED stat does NOT exist!!! ###", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1882( "CCB", "Starting the Finale_RS context...", 0 );
    START_CONTEXT( "Finale_RS" );
     /* WRITESCRIPTLOG */ sub_1882( "CCB", "Starting the Finale_Runway1 context...", 0 );
    START_CONTEXT( "Finale_Runway1" );
    return;
}

/* P_R1_START_HEALTH_TIMERS */ void sub_60885()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1882( "SA", "P_R1_INIT_PLAYER_HEALTH start", 0 );
    l_U400 = 0;
    for ( I = 0; I < 4; I++ )
    {
         /* DISABLETIMER */ sub_60993( ref l_U355[I]._fU0 );
    }
     /* P_CREATE_AND_START_TIMER */ sub_61070( ref l_U355[0]._fU0, l_U355[0]._fU36 );
     /* WRITESCRIPTLOG */ sub_1882( "SA", "P_R1_INIT_PLAYER_HEALTH end", 0 );
    return;
}

/* DISABLETIMER */ void sub_60993(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_61070(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_3355( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_3505( uParam0 );
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_PLAY_FRONTEND */ void sub_61206(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_6082( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_6291( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Playing the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_PLAY_FROM_VEHICLE */ void sub_61716(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_6082( uParam1, uParam2 ))
    {
        iVar5 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_6291( uParam1, uParam2 );
        if (NOT (iVar5 == -1))
        {
            if (NOT (IS_VEHICLE_DEAD( uParam0 )))
            {
                DISPLAYF( "[CCB]### Playing the SCRIPT_STREAM from vehicle: {} ###", 1, 1281, ref (uParam2^)[iVar5]._fU0 );
                PLAY_SCRIPT_STREAM_FROM_VEHICLE( uParam0, iVar5 );
            }
            else
            {
                DISPLAYF( "The ped is NOT valid!!!", 0 );
            }
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam1 );
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam1 );
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* P_TM2_APPLY_FORCE_TO_DEAD_VEHICLES */ void sub_62287()
{
    int I;

    if ((l_U550[0] == 0) AND (IS_VEHICLE_DEAD( l_U525[0] )))
    {
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U525[0] );
        APPLY_FORCE_TO_VEHICLE( l_U525[0], 2, 150.00000000, 0.00000000, 150.00000000, -5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
         /* CLEANPED */ sub_4995( l_U910[0] );
         /* P_SAFE_STOP_SOUND */ sub_5421( l_U540, 0 );
         /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U540 );
        if (NOT (IS_PED_DEAD( l_U910[1] )))
        {
             /* P_KILL_PED */ sub_62494( l_U910[1] );
        }
        l_U550[0] = 1;
        if ( /* F_RW_ARE_ALL_GAMEPLAY_VEHICLES_EXPLODED */ sub_62581())
        {
            l_U123 = l_U525[0];
            l_U89 = 13;
        }
         /* WRITESCRIPTLOG */ sub_1882( "CR", "vi_TM2_UFE_Jeeps[0] dead", 0 );
    }
    if ((l_U550[1] == 0) AND (IS_VEHICLE_DEAD( l_U525[1] )))
    {
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U525[1] );
        APPLY_FORCE_TO_VEHICLE( l_U525[1], 2, 140.00000000, 0.00000000, 140.00000000, -5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
         /* CLEANPED */ sub_4995( l_U910[2] );
         /* P_SAFE_STOP_SOUND */ sub_5421( l_U541, 0 );
         /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U541 );
        if (NOT (IS_PED_DEAD( l_U910[3] )))
        {
             /* P_KILL_PED */ sub_62494( l_U910[3] );
        }
        if (NOT (IS_PED_DEAD( l_U910[4] )))
        {
             /* P_KILL_PED */ sub_62494( l_U910[4] );
        }
        l_U550[1] = 1;
        if ( /* F_RW_ARE_ALL_GAMEPLAY_VEHICLES_EXPLODED */ sub_62581())
        {
            l_U123 = l_U525[1];
            l_U89 = 13;
        }
         /* WRITESCRIPTLOG */ sub_1882( "CR", "vi_TM2_UFE_Jeeps[1] dead", 0 );
    }
    if ((l_U550[2] == 0) AND (IS_VEHICLE_DEAD( l_U525[2] )))
    {
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U525[2] );
        APPLY_FORCE_TO_VEHICLE( l_U525[2], 2, -150.00000000, 0.00000000, 150.00000000, 5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
         /* CLEANPED */ sub_4995( l_U910[5] );
         /* P_SAFE_STOP_SOUND */ sub_5421( l_U542, 0 );
         /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U542 );
        if (NOT (IS_PED_DEAD( l_U910[6] )))
        {
             /* P_KILL_PED */ sub_62494( l_U910[6] );
        }
        l_U550[2] = 1;
        if ( /* F_RW_ARE_ALL_GAMEPLAY_VEHICLES_EXPLODED */ sub_62581())
        {
            l_U123 = l_U525[2];
            l_U89 = 13;
        }
         /* WRITESCRIPTLOG */ sub_1882( "CR", "vi_TM2_UFE_Jeeps[2] dead", 0 );
    }
    if ((l_U550[3] == 0) AND (IS_VEHICLE_DEAD( l_U525[3] )))
    {
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U525[3] );
        APPLY_FORCE_TO_VEHICLE( l_U525[3], 2, -140.00000000, 0.00000000, 140.00000000, 5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
         /* CLEANPED */ sub_4995( l_U910[8] );
         /* P_SAFE_STOP_SOUND */ sub_5421( l_U543, 0 );
         /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U543 );
        if (NOT (IS_PED_DEAD( l_U910[9] )))
        {
             /* P_KILL_PED */ sub_62494( l_U910[9] );
        }
        if (NOT (IS_PED_DEAD( l_U910[7] )))
        {
             /* P_KILL_PED */ sub_62494( l_U910[7] );
        }
        l_U550[3] = 1;
        if ( /* F_RW_ARE_ALL_GAMEPLAY_VEHICLES_EXPLODED */ sub_62581())
        {
            l_U123 = l_U525[3];
            l_U89 = 13;
        }
         /* WRITESCRIPTLOG */ sub_1882( "CR", "vi_TM2_UFE_Jeeps[3] dead", 0 );
    }
    if ((l_U550[4] == 0) AND (IS_VEHICLE_DEAD( l_U525[4] )))
    {
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U525[4] );
        APPLY_FORCE_TO_VEHICLE( l_U525[4], 2, -170.00000000, 0.00000000, 170.00000000, 5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
         /* CLEANPED */ sub_4995( l_U910[15] );
         /* P_SAFE_STOP_SOUND */ sub_5421( l_U544, 0 );
         /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U544 );
        if (DOES_PED_EXIST( l_U910[16] ))
        {
             /* P_KILL_PED */ sub_62494( l_U910[16] );
        }
        if (DOES_PED_EXIST( l_U910[20] ))
        {
             /* P_KILL_PED */ sub_62494( l_U910[20] );
        }
        l_U550[4] = 1;
        if ( /* F_RW_ARE_ALL_GAMEPLAY_VEHICLES_EXPLODED */ sub_62581())
        {
            l_U123 = l_U525[4];
            l_U89 = 13;
        }
         /* WRITESCRIPTLOG */ sub_1882( "CR", "vi_TM2_UFE_Jeeps[4] dead", 0 );
    }
    if ((l_U561 == 0) AND (IS_VEHICLE_DEAD( l_U469 )))
    {
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U469 );
        l_U561 = 1;
         /* CLEANPED */ sub_4995( l_U910[10] );
        if ( /* F_RW_ARE_ALL_GAMEPLAY_VEHICLES_EXPLODED */ sub_62581())
        {
            APPLY_FORCE_TO_VEHICLE( l_U469, 2, 50.00000000, 0.00000000, 50.00000000, -5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
            l_U123 = l_U469;
            l_U89 = 13;
        }
        else
        {
            APPLY_FORCE_TO_VEHICLE( l_U469, 2, 75.00000000, 0.00000000, 75.00000000, -5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
        }
         /* WRITESCRIPTLOG */ sub_1882( "CR", "Caveirao dead", 0 );
    }
    if ((l_U562 == 0) AND (IS_VEHICLE_DEAD( l_U474 )))
    {
        l_U562 = 1;
        START_PARTICLE_FX_NON_LOOPED_ON_VEHICLE( "FIN_Heli_SmokeTrail_S", l_U474, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
        if (NOT (IS_PED_DEAD( l_U910[18] )))
        {
             /* P_KILL_PED */ sub_62494( l_U910[18] );
            DETACH_PED_FROM_WITHIN_VEHICLE( l_U910[18], 0 );
            START_PED_FIRE( l_U910[18], 5000 );
        }
        if (NOT (IS_PED_DEAD( l_U910[19] )))
        {
             /* P_KILL_PED */ sub_62494( l_U910[19] );
            DETACH_PED_FROM_WITHIN_VEHICLE( l_U910[19], 0 );
            START_PED_FIRE( l_U910[19], 5000 );
        }
         /* CLEANPED */ sub_4995( l_U910[17] );
         /* WRITESCRIPTLOG */ sub_1882( "CR", "Helicopter dead", 0 );
    }
    for ( I = 0; I <= (l_U531 - 1); I++ )
    {
        if ((l_U556[I] == 0) AND ((DOES_VEHICLE_EXIST( l_U531[I] )) AND (IS_VEHICLE_DEAD( l_U531[I] ))))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( l_U531[I] );
            APPLY_FORCE_TO_VEHICLE( l_U531[I], 2, -20.00000000, 0.00000000, 150.00000000, 5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
            if (IS_VEHICLE_DEAD( l_U531[0] ))
            {
                 /* P_SAFE_STOP_SOUND */ sub_5421( l_U536, 0 );
                 /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U536 );
            }
            else if (IS_VEHICLE_DEAD( l_U531[1] ))
            {
                 /* P_SAFE_STOP_SOUND */ sub_5421( l_U537, 0 );
                 /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U537 );
            }
            else if (IS_VEHICLE_DEAD( l_U531[2] ))
            {
                 /* P_SAFE_STOP_SOUND */ sub_5421( l_U538, 0 );
                 /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U538 );
            }
            else if (IS_VEHICLE_DEAD( l_U531[3] ))
            {
                 /* P_SAFE_STOP_SOUND */ sub_5421( l_U539, 0 );
                 /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U539 );
            };;;;
            l_U556[I] = 1;
             /* WRITESCRIPTLOG */ sub_1882( "CR", "Sedan Dead", 0 );
        }
    }
    WAIT( 0 );
    return;
}

/* P_KILL_PED */ void sub_62494(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* F_RW_ARE_ALL_GAMEPLAY_VEHICLES_EXPLODED */ int sub_62581()
{
    if ((IS_VEHICLE_DEAD( l_U469 )) AND ((IS_VEHICLE_DEAD( l_U525[4] )) AND ((IS_VEHICLE_DEAD( l_U525[3] )) AND ((IS_VEHICLE_DEAD( l_U525[2] )) AND ((IS_VEHICLE_DEAD( l_U525[1] )) AND (IS_VEHICLE_DEAD( l_U525[0] )))))))
    {
         /* P_CAM_SHAKE_FORCE_DEACTIVATE */ sub_62735( ref l_U402, 1 );
        return 1;
    }
    return 0;
}

/* P_CAM_SHAKE_FORCE_DEACTIVATE */ void sub_62735(int iParam0, int iParam1)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam1 == 1)
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam1 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam1 );
        }
        else
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
        }
         /* RESETTIMER */ sub_4214( iParam0 + 40 );
         /* RESETTIMER */ sub_4214( iParam0 + 76 );
         /* RESETTIMER */ sub_4214( iParam0 + 112 );
        iParam0->_fU172 = 0;
    }
    return;
}

/* P_PED_ARRAY_Z_SAFETY_CHECK */ void sub_64941(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_PED_Z_SAFETY_CHECK */ sub_65007( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_PED_Z_SAFETY_CHECK */ void sub_65007(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                 /* CLEANPED */ sub_4995( uParam0 );
            }
        }
    }
    return;
}

/* P_REGISTER_PLAYER_FOR_UFE */ void sub_65140()
{
    int I;

    for ( I = 0; I <= 2; I++ )
    {
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() ))) AND (NOT (IS_PED_DEAD( l_U603[I] ))))
        {
            REGISTER_TARGET( l_U603[I],  /* PLAYER_PED_ID */ sub_2215() );
        }
    }
    for ( I = 1; I <= 20; I++ )
    {
        if ((I != 8) AND ((I != 5) AND ((I != 2) AND ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() ))) AND (NOT (IS_PED_DEAD( l_U910[I] )))))))
        {
            REGISTER_TARGET( l_U910[I],  /* PLAYER_PED_ID */ sub_2215() );
        }
    }
    return;
}

/* P_BF_HANDLE_REINFORCEMENT_CARS_ARRIVING */ void sub_65361()
{
    if ((DOES_VEHICLE_EXIST( l_U531[0] )) AND (NOT l_U545[0]))
    {
        if ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U531[0] ))) AND (NOT (IS_VEHICLE_DEAD( l_U531[0] ))))
        {
             /* WRITESCRIPTLOG */ sub_1882( "CR", "Sedan 0 arrived.", 0 );
             /* P_BF_EXIT_VEHICLE_AND_MOVE */ sub_65536( ref l_U910[11], l_U531[0], l_U938[0], 0 );
             /* F_GIVEPEDWEAPON */ sub_11037( l_U910[11], 57534114, 25000, 0, 0 );
             /* P_ACTIVATEPED */ sub_53016( l_U910[11] );
            l_U545[0] = 1;
        }
    }
    if ((DOES_VEHICLE_EXIST( l_U531[1] )) AND (NOT l_U545[1]))
    {
        if ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U531[1] ))) AND (NOT (IS_VEHICLE_DEAD( l_U531[1] ))))
        {
             /* WRITESCRIPTLOG */ sub_1882( "CR", "Sedan 1 arrived.", 0 );
             /* P_BF_EXIT_VEHICLE_AND_MOVE */ sub_65536( ref l_U910[12], l_U531[1], l_U938[1], 0 );
             /* F_GIVEPEDWEAPON */ sub_11037( l_U910[12], 57534114, 25000, 0, 0 );
             /* P_ACTIVATEPED */ sub_53016( l_U910[12] );
            l_U545[1] = 1;
        }
    }
    if ((DOES_VEHICLE_EXIST( l_U531[2] )) AND (NOT l_U545[2]))
    {
        if ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U531[2] ))) AND (NOT (IS_VEHICLE_DEAD( l_U531[2] ))))
        {
             /* WRITESCRIPTLOG */ sub_1882( "CR", "Sedan 2 arrived.", 0 );
             /* P_BF_EXIT_VEHICLE_AND_MOVE */ sub_65536( ref l_U910[13], l_U531[2], l_U938[2], 0 );
             /* F_GIVEPEDWEAPON */ sub_11037( l_U910[13], 57534114, 25000, 0, 0 );
             /* P_ACTIVATEPED */ sub_53016( l_U910[13] );
            l_U545[2] = 1;
        }
    }
    if ((DOES_VEHICLE_EXIST( l_U531[3] )) AND (NOT l_U545[3]))
    {
        if ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U531[3] ))) AND (NOT (IS_VEHICLE_DEAD( l_U531[0] ))))
        {
             /* WRITESCRIPTLOG */ sub_1882( "CR", "Sedan 3 arrived.", 0 );
             /* P_BF_EXIT_VEHICLE_AND_MOVE */ sub_65536( ref l_U910[14], l_U531[3], l_U938[3], 0 );
             /* F_GIVEPEDWEAPON */ sub_11037( l_U910[14], 57534114, 25000, 0, 0 );
             /* P_ACTIVATEPED */ sub_53016( l_U910[14] );
            l_U545[3] = 1;
        }
    }
    return;
}

/* P_BF_EXIT_VEHICLE_AND_MOVE */ void sub_65536(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, boolean bParam5)
{
    unknown uVar8;

    if ((NOT (IS_VEHICLE_DEAD( uParam1 ))) AND ((NOT (IS_PED_DEAD( (uParam0^) ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))))
    {
        REGISTER_TARGET( (uParam0^),  /* PLAYER_PED_ID */ sub_2215() );
        SET_PED_FLAG_LOCK_TO_COVER( (uParam0^), 1 );
        OPEN_SEQUENCE_TASK( ref uVar8 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (bParam5)
        {
            if (NOT (IS_VEHICLE_DEAD( uParam1 )))
            {
                TASK_LEAVE_VEHICLE( 0, uParam1 );
            }
        }
        else
        {
            TASK_LEAVE_VEHICLE_DONT_CLOSE_DOOR( 0, uParam1 );
        }
        TASK_GO_STRAIGHT_TO_COORD( 0, uParam2, 4, 20000 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar8 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar8 );
        CLEAR_SEQUENCE_TASK( uVar8 );
    }
    return;
}

/* P_HELICOPTER_BLADES_SPINNING */ void sub_66348()
{
    if ((NOT (IS_VEHICLE_DEAD( l_U474 ))) AND (DOES_VEHICLE_EXIST( l_U474 )))
    {
        SET_VEHICLE_ENGINE_ON( l_U474, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( l_U474 );
    }
    return;
}

/* P_HANDLE_CAMSHAKE_IN_GAMEPLAY */ void sub_66454()
{
     /* P_CAM_SHAKE_HANDLE */ sub_66500( ref l_U402 );
    if (IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2215() ), l_U453 ))
    {
        if (IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2215() ), l_U453 / 4 ))
        {
             /* P_SHAKE_CAM */ sub_66729( "SMALL_EXPLOSION_SHAKE", l_U454 );
             /* WRITESCRIPTLOG */ sub_1882( "CR", "Shaking Camera - Big - Explosion has gone off within 25m to the player", 0 );
        }
        else if (IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2215() ), l_U453 / 2 ))
        {
             /* P_SHAKE_CAM */ sub_66729( "SMALL_EXPLOSION_SHAKE", l_U454 / 2 );
             /* WRITESCRIPTLOG */ sub_1882( "CR", "Shaking Camera - Medium - Explosion has gone off within 50m to the player", 0 );
        }
        else
        {
             /* P_SHAKE_CAM */ sub_66729( "SMALL_EXPLOSION_SHAKE", l_U454 / 4 );
             /* WRITESCRIPTLOG */ sub_1882( "CR", "Shaking Camera - Small - Explosion has gone off within 100m to the player", 0 );
        }
    }
    return;
}

/* P_CAM_SHAKE_HANDLE */ void sub_66500(int iParam0)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam0->_fU164 == 0)
        {
             /* CREATETIMER */ sub_3355( iParam0 + 40, iParam0->_fU148, 1, 0 );
             /* STARTTIMER */ sub_3505( iParam0 + 40 );
            if (iParam0->_fU152 > 0)
            {
                 /* CREATETIMER */ sub_3355( iParam0 + 76, iParam0->_fU152, 1, 0 );
                 /* STARTTIMER */ sub_3505( iParam0 + 76 );
            }
            iParam0->_fU164 = 1;
        }
        if ( /* ISTIMERDONE */ sub_3638( iParam0 + 40 ))
        {
             /* WRITESCRIPTLOG */ sub_1882( "ML", "P_HANDLE_CAM_SHAKE is shaking the camera", "---" );
             /* P_SHAKE_CAM */ sub_66729( iParam0 + 4, iParam0->_fU36 );
            if (iParam0->_fU156 > 0)
            {
                 /* CREATETIMER */ sub_3355( iParam0 + 112, iParam0->_fU156, 1, 0 );
                 /* STARTTIMER */ sub_3505( iParam0 + 112 );
            }
        }
        if ( /* ISTIMERDONE */ sub_3638( iParam0 + 112 ))
        {
             /* P_SHAKE_CAM */ sub_66729( iParam0 + 4, iParam0->_fU36 );
             /* CREATETIMER */ sub_3355( iParam0 + 112, iParam0->_fU156, 1, 0 );
             /* STARTTIMER */ sub_3505( iParam0 + 112 );
        }
        if ( /* ISTIMERDONE */ sub_3638( iParam0 + 76 ))
        {
             /* WRITESCRIPTLOG */ sub_1882( "ML", "P_HANDLE_CAM_SHAKE is done shaking the camera", "---" );
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
             /* RESETTIMER */ sub_4214( iParam0 + 112 );
            iParam0->_fU172 = 0;
        }
    }
    return;
}

/* P_SHAKE_CAM */ void sub_66729(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    SHAKE_GAMEPLAY_CAM( uParam0, uParam1 );
    return;
}

/* P_HANDLE_SUPPORTING_JEEP_START */ void sub_67524()
{
    if ((NOT l_U972) AND ((l_U550[3]) AND (l_U550[2])))
    {
         /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_67615( l_U525[4], l_U524 / 1.50000000 );
         /* STARTTIMER */ sub_3505( ref l_U973 );
        l_U972 = 1;
         /* WRITESCRIPTLOG */ sub_1882( "CR", "CAV Supporting Jeep - Slowing Down", 0 );
    }
    if ((DOES_VEHICLE_EXIST( l_U525[4] )) AND ( /* ISTIMERDONE */ sub_3638( ref l_U973 )))
    {
         /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_67615( l_U525[4], l_U524 );
         /* WRITESCRIPTLOG */ sub_1882( "CR", "CAV Supporting Jeep - Speeding Back Up", 0 );
    }
    return;
}

/* P_SET_VEHICLE_PLAYBACK_SPEED */ void sub_67615(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            SET_PLAYBACK_SPEED( uParam0, uParam1 );
        }
    }
    return;
}

/* P_HANDLE_HELICOPTER_EXPLOSION */ void sub_67875()
{
    if ((l_U562 == 0) AND ((IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U474 ), 10.00000000 )) AND (NOT (IS_VEHICLE_DEAD( l_U474 )))))
    {
         /* WRITESCRIPTLOG */ sub_1882( "CR", "Explosion has gone off in a sphere around the Helicopter", 0 );
        l_U562 = 1;
        if (NOT (IS_VEHICLE_DEAD( l_U474 )))
        {
            START_PARTICLE_FX_NON_LOOPED_ON_VEHICLE( "FIN_Heli_SmokeTrail_S", l_U474, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
        }
        if (NOT (IS_PED_DEAD( l_U910[18] )))
        {
             /* P_KILL_PED */ sub_62494( l_U910[18] );
            DETACH_PED_FROM_WITHIN_VEHICLE( l_U910[18], 0 );
            START_PED_FIRE( l_U910[18], 5000 );
        }
        if (NOT (IS_PED_DEAD( l_U910[19] )))
        {
             /* P_KILL_PED */ sub_62494( l_U910[19] );
            DETACH_PED_FROM_WITHIN_VEHICLE( l_U910[19], 0 );
            START_PED_FIRE( l_U910[19], 5000 );
        }
        if ((NOT (IS_PED_DEAD( l_U910[17] ))) AND (NOT (IS_VEHICLE_DEAD( l_U474 ))))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( l_U474 );
            TASK_HELI_MISSION( l_U910[17], l_U474, 0, 0, 0.00000000, 0.00000000, 0.00000000, 22, 1.00000000, 0, 0.00000000, 1, 0 );
             /* WRITESCRIPTLOG */ sub_1882( "CR", "TASK_HELI_MISSION >> MISSION_CRASH on pi_TM2_UFE_Ped[17]", 0 );
        }
         /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_6032( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
         /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_6821( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
        l_U94 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U94, "S_AIR_RS_HELI_CRASH_DIVE", l_U474 );
    }
    l_U479 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U474 )};
    if ((NOT l_U483) AND ((NOT (IS_VEHICLE_DEAD( l_U474 ))) AND ((DOES_VEHICLE_EXIST( l_U474 )) AND (l_U479._fU8 < l_U482))))
    {
        START_PARTICLE_FX_NON_LOOPED_ON_VEHICLE( "Veh_Explo_Heli_S", l_U474, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
         /* P_SAFE_STOP_SOUND */ sub_5421( l_U94, 0 );
         /* P_SAFE_RELEASE_SOUND_ID */ sub_5604( ref l_U94 );
        PLAY_SOUND_FROM_VEHICLE( -1, "S_AIR_RS_HELI_CRASH_LAND", l_U474 );
        SET_VEHICLE_REACT_TO_EXPLOSION( l_U474, 1 );
        SET_VEHICLE_CAN_BE_DAMAGED( l_U474, 1 );
        EXPLODE_VEHICLE( l_U474, 1, 0 );
         /* CLEANPED */ sub_4995( l_U910[17] );
         /* WRITESCRIPTLOG */ sub_1882( "CR", "Helicopter Hits Ground Explosion taken place", 0 );
        if (STAT_EXISTS( "SP_VEHICLES_DESTROYED" ))
        {
            l_U1731 = STAT_GET_INT( "SP_VEHICLES_DESTROYED" );
            DISPLAYF( "[CCB] ### The current SP_VEHICLES_DESTROYED value is: {} ###", 1, 513, l_U1731 );
            STAT_HASH_INCREMENT_INT( -1017133960, 1 );
            DISPLAYF( "[CCB] ### The new SP_VEHICLES_DESTROYED value is: {} ###", 1, 513, STAT_GET_INT( "SP_VEHICLES_DESTROYED" ) );
        }
        else
        {
            DISPLAYF( "[CCB] ### The SP_VEHICLES_DESTROYED stat does NOT exist!!! ###", 0 );
        }
        l_U483 = 1;
    }
    return;
}

/* P_HANDLE_SPEED_UP_VEHICLES_FOR_CAV_SECTION */ void sub_69238()
{
    if ((NOT l_U1096) AND ( /* ISTIMERDONE */ sub_3638( ref l_U1075 )))
    {
        l_U524 += l_U1085;
         /* WRITE_FLOAT */ sub_40915( l_U524 );
         /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_67615( l_U455, l_U524 );
         /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_67615( l_U525[0], l_U524 );
         /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_67615( l_U525[1], l_U524 );
         /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_67615( l_U525[2], l_U524 );
         /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_67615( l_U525[3], l_U524 );
         /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_67615( l_U525[4], l_U524 );
         /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_67615( l_U469, l_U524 );
         /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_67615( l_U474, l_U524 );
         /* WRITESCRIPTLOG */ sub_1882( "CR", "P_HANDLE_SPEED_UP_VEHICLES_FOR_CAV_SECTION - Start", 0 );
         /* RESETTIMER */ sub_4214( ref l_U1075 );
         /* STARTTIMER */ sub_3505( ref l_U1075 );
    }
    return;
}

/* P_HANDLE_PROGRESSIVE_CLEANUP */ void sub_69565()
{
    int I;

    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1702, 0 ))
    {
         /* CLEANPEDARRAY */ sub_5084( ref l_U603 );
         /* WRITESCRIPTLOG */ sub_1882( "CR", "Cleaning up onfoot peds", 0 );
        l_U1730 = 1;
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1659[0], 0 ))
    {
         /* CLEANPED */ sub_4995( l_U910[11] );
         /* CLEANPED */ sub_4995( l_U910[12] );
         /* CLEANVEHICLE */ sub_5203( l_U531[0] );
         /* CLEANVEHICLE */ sub_5203( l_U531[1] );
         /* WRITESCRIPTLOG */ sub_1882( "CR", "Cleaning up first roadblock", 0 );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1659[1], 0 ))
    {
         /* CLEANPED */ sub_4995( l_U910[13] );
         /* CLEANPED */ sub_4995( l_U910[14] );
         /* CLEANVEHICLE */ sub_5203( l_U531[2] );
         /* CLEANVEHICLE */ sub_5203( l_U531[3] );
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_70055( 2038070575, ref g_U1030 );
         /* WRITESCRIPTLOG */ sub_1882( "CR", "Cleaning up second roadblock", 0 );
    }
    for ( I = 0; I <= 20; I++ )
    {
        if ((DOES_PED_EXIST( l_U910[I] )) AND ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() ))) AND (l_U1730)))
        {
            l_U1723 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2215() )};
            l_U1726 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U910[I] )};
            l_U1729 = l_U1723._fU4 - l_U1726._fU4;
            if (l_U1729 >= 15.00000000)
            {
                 /* CLEANPED */ sub_4995( l_U910[I] );
                 /* MAL_WRITESTRINGANDINT */ sub_70717( "Cleaning pi_TM2_UFE_Ped_", I );
            }
        }
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_69611(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_69687(  /* PLAYER_PED_ID */ sub_2215(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* F_ISPEDINTRIGGERBOX */ int sub_69687(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_70055(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6967( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* MAL_WRITESTRINGANDINT */ void sub_70717(unknown uParam0, unknown uParam1)
{
    DISPLAYF( "[MSWW] ### {0}: {1} ###", 2, 1537, uParam0, 513, uParam1 );
    return;
}

/* P_TM2_MAKE_ONFOOT_PEDS_RETREAT */ void sub_70837()
{
    int I;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_TM2_MAKE_ONFOOT_PEDS_RETREAT - Start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -683.15520000, -730.58610000, -6.21142400,  /* PLAYER_PED_ID */ sub_2215(), 1, 80, 80, -1, 4 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        for ( I = 0; I <= 2; I++ )
        {
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() ))) AND (NOT (IS_PED_DEAD( l_U603[I] ))))
            {
                REGISTER_TARGET( l_U603[I],  /* PLAYER_PED_ID */ sub_2215() );
                TASK_PERFORM_SEQUENCE( l_U603[I], uVar3 );
            }
        }
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_TM2_MAKE_ONFOOT_PEDS_RETREAT - End", 0 );
    return;
}

/* F_GET_PLAYER_HEALTH_PERCENT */ float sub_71300()
{
    unknown uVar2;
    unknown uVar3;
    float Result;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
    {
        uVar2 = TO_FLOAT( (GET_PED_MAX_HEALTH(  /* PLAYER_PED_ID */ sub_2215() )) - 100 );
        uVar3 = TO_FLOAT( (GET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_2215() )) - 100 );
        Result = uVar3 / uVar2;
        return Result;
    }
    return 0.00000000;
}

/* F_ISPEDINTRIGGERBOXFIRSTTIME */ void sub_71654(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 =  /* F_ISPEDINTRIGGERBOX */ sub_69687( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

/* F_MAKE_PLAYER_VEHICLE_CATCHUP_TO_CAV */ int sub_72048()
{
    if ((IS_VEHICLE_DEAD( l_U525[4] )) AND ((IS_VEHICLE_DEAD( l_U525[3] )) AND (IS_VEHICLE_DEAD( l_U525[2] ))))
    {
        return 1;
         /* WRITESCRIPTLOG */ sub_1882( "CR", "F_MAKE_PLAYER_VEHICLE_CATCHUP_TO_CAV - RETURN TRUE", 0 );
    }
    return 0;
}

/* P_MAKE_PLAYER_VEHICLE_ACCELERATE_TO_CAV */ void sub_72239()
{
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_MAKE_PLAYER_VEHICLE_ACCELERATE_TO_CAV - Start", 0 );
    l_U524 += l_U1097;
     /* WRITE_FLOAT */ sub_40915( l_U524 );
     /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_67615( l_U455, l_U524 );
     /* STARTTIMER */ sub_3505( ref l_U1098 );
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_MAKE_PLAYER_VEHICLE_ACCELERATE_TO_CAV - End", 0 );
    return;
}

/* P_MAKE_PLAYER_VEHICLE_DECELERATE_FROM_CAV */ void sub_72496()
{
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_MAKE_PLAYER_VEHICLE_DECELERATE_FROM_CAV - Start", 0 );
    l_U524 -= l_U1097;
     /* WRITE_FLOAT */ sub_40915( l_U524 );
     /* P_SET_VEHICLE_PLAYBACK_SPEED */ sub_67615( l_U455, l_U524 );
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_MAKE_PLAYER_VEHICLE_DECELERATE_FROM_CAV - End", 0 );
    return;
}

/* F_R1_HANDLE_PLAYER_HEALTH */ int sub_72729()
{
    float fVar2;
    int I;

    if (l_U400 < 4)
    {
        fVar2 = 1.00000000;
        for ( I = 0; I < l_U400; I++ )
        {
            fVar2 -= l_U355[I]._fU40;
        }
        fVar2 -= ( /* GETTIMERPERCENTAGE */ sub_72846( ref l_U355[l_U400]._fU0 )) * l_U355[l_U400]._fU40;
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
        {
            SET_PED_MAX_HEALTH(  /* PLAYER_PED_ID */ sub_2215(), 200 );
            if (fVar2 > 0.00000000)
            {
                 /* P_SET_PLAYER_HEALTH_PERCENT */ sub_73089( fVar2 );
            }
            else
            {
                return 1;
            }
        }
        if ( /* ISTIMERDONE */ sub_3638( ref l_U355[l_U400]._fU0 ))
        {
            l_U400++;
            if (l_U400 < 4)
            {
                 /* P_CREATE_AND_START_TIMER */ sub_61070( ref l_U355[l_U400]._fU0, l_U355[l_U400]._fU36 );
            }
        }
        return 0;
        break;
    }
    return 1;
}

/* GETTIMERPERCENTAGE */ void sub_72846(int iParam0)
{
    int iVar3;

    if (iParam0->_fU28)
    {
        iVar3 = TIMERA();
    }
    else
    {
        iVar3 = TIMERB();
    }
    return  /* CLAMP */ sub_72948( (TO_FLOAT( iVar3 - iParam0->_fU0 )) / (TO_FLOAT( iParam0->_fU12 )), 0.00000000, 1.00000000 );
}

/* CLAMP */ void sub_72948(float fParam0, float fParam1, float fParam2)
{
    float Result;

    Result = fParam0;
    if (fParam0 < fParam1)
    {
        Result = fParam1;
    }
    else if (fParam0 > fParam2)
    {
        Result = fParam2;
    }
    return Result;
}

/* P_SET_PLAYER_HEALTH_PERCENT */ void sub_73089(unknown uParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() )))
    {
        iVar3 = (ROUND( ((GET_PED_MAX_HEALTH(  /* PLAYER_PED_ID */ sub_2215() )) - 100) * uParam0 )) + 100;
        SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_2215(), iVar3, 0 );
    }
    return;
}

/* P_R1_START_PLAYER_DIES_NIS */ void sub_73337()
{
     /* WRITESCRIPTLOG */ sub_1882( "SA", "P_R1_START_PLAYER_DIES_NIS", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U455 )))
    {
         /* NIS_PRE_SETUP */ sub_48965( 1, 0, 0, 1 );
         /* NIS_CREATE_STATIC_CAM */ sub_73491( ref l_U182, (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U455 ))) + l_U213, 0.00000000, 0.00000000, 0.00000000, 45.00000000, l_U219 );
         /* NIS_PLAY_STATIC_CAMERA */ sub_73724( ref l_U182 );
        POINT_CAM_AT_VEHICLE( l_U182._fU0, l_U455, l_U216, 1 );
        if (GET_ADRENALINE_AMT() < 1.00000000)
        {
            SET_ADRENALINE_AMT( 1.00000000 );
        }
        DEACTIVATE_BULLET_TIME( 1, 1 );
        ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
    }
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_73491(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_3355( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U2, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_73724(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_3505( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* P_R1_PLAYER_DIES_CAR_EXPLODES */ void sub_74080()
{
     /* WRITESCRIPTLOG */ sub_1882( "SA", "P_R1_PLAYER_DIES_CAR_EXPLODES", 0 );
    if ((NOT (IS_PED_DEAD( l_U497 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() ))))
    {
        if (GET_ADRENALINE_AMT() < 0.10000000)
        {
            SET_ADRENALINE_AMT( 0.10000000 );
        }
        ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
        SET_VEHICLE_CAN_BE_DAMAGED( l_U455, 1 );
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U455 );
        EXPLODE_VEHICLE( l_U455, 1, 0 );
        SHAKE_CAM( l_U182._fU0, "SMALL_EXPLOSION_SHAKE", l_U220 );
        SET_BULLET_CAM_PREF(  /* PLAYER_PED_ID */ sub_2215(), "MISS_DEATH_FALL_01A", "", "", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
         /* P_KILL_PED */ sub_62494(  /* PLAYER_PED_ID */ sub_2215() );
         /* P_KILL_PED */ sub_62494( l_U497 );
        SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2215(), 0 );
        SET_PED_VISIBLE( l_U497, 0 );
    }
    return;
}

/* P_RW_START_LAST_EXPLODING_CAR_NIS */ void sub_74671()
{
     /* WRITESCRIPTLOG */ sub_1882( "GA", "P_RW_START_LAST_EXPLODING_CAR_NIS start", 0 );
    if ((NOT (IS_VEHICLE_DEAD( l_U123 ))) || (IS_VEHICLE_DEAD( l_U123 )))
    {
        START_PARTICLE_FX_NON_LOOPED_ON_VEHICLE( "Veh_Explo_Truck_S", l_U123, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1.50000000 );
    }
     /* NIS_PRE_SETUP */ sub_48965( 1, 0, 0, 1 );
     /* NIS_CREATE_STATIC_CAM */ sub_73491( ref l_U133, (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U123 ))) + l_U164, 0.00000000, 0.00000000, 0.00000000, 25.00000000, l_U170 );
     /* NIS_PLAY_STATIC_CAMERA */ sub_73724( ref l_U133 );
    POINT_CAM_AT_VEHICLE( l_U133._fU0, l_U455, l_U167, 1 );
    SHAKE_CAM( l_U133._fU0, "SMALL_EXPLOSION_SHAKE", 0.35000000 );
    l_U181 = GET_SOUND_ID();
    PLAY_SOUND_FRONTEND( l_U181, "S_AIR_PLANE_RS_01_FINAL_KILL" );
    if (GET_ADRENALINE_AMT() < 0.10000000)
    {
        SET_ADRENALINE_AMT( 0.10000000 );
    }
    DEACTIVATE_BULLET_TIME( 1, 1 );
    ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
     /* CREATETIMER */ sub_3355( ref l_U172, l_U171, 1, 0 );
     /* STARTTIMER */ sub_3505( ref l_U172 );
     /* STARTTIMER */ sub_3505( ref l_U124 );
     /* WRITESCRIPTLOG */ sub_1882( "GA", "P_RW_START_LAST_EXPLODING_CAR_NIS end", 0 );
    return;
}

/* NIS_IS_SHOT_FINISHED */ int sub_75391(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_3638( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_3638( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

/* P_HANDLE_DIALOGUE_TRIGGERS */ void sub_76223()
{
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1363[0], 0 )) == 1)
    {
        l_U1358 = 1;
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1363[1], 0 )) == 1)
    {
        l_U1353 = 1;
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1363[2], 0 )) == 1)
    {
        l_U1349 = 1;
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1363[3], 0 )) == 1)
    {
        l_U1345 = 1;
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1363[4], 0 )) == 1)
    {
        l_U1351 = 1;
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1363[5], 0 )) == 1)
    {
        l_U1350 = 1;
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1363[6], 0 )) == 1)
    {
        l_U1356 = 1;
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1363[7], 0 )) == 1)
    {
        l_U1347 = 1;
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1363[8], 0 )) == 1)
    {
        l_U1362 = 1;
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1363[9], 0 )) == 1)
    {
        l_U1355 = 1;
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1363[10], 0 )) == 1)
    {
        l_U1354 = 1;
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1363[11], 0 )) == 1)
    {
        l_U1348 = 1;
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1363[12], 0 )) == 1)
    {
        l_U1350 = 1;
    }
    if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_69611( ref l_U1363[13], 0 )) == 1)
    {
        l_U1346 = 1;
    }
    return;
}

/* P_HANDLE_DIALOGUES */ void sub_76634()
{
    if (l_U1340 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva and Max chat en route v 1 - SAIR_DSMXV1A", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1110 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U1110, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1110, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSMXV1A", ref l_U1110, 8, 1 );
        l_U1340 = 0;
    }
    if (l_U1341 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva and Max chat en route v 2 - SAIR_DSMXV2A", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1120 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U1120, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1120, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSMXV2A", ref l_U1120, 8, 1 );
        l_U1341 = 0;
    }
    if (l_U1342 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva and Max chat en route v 2 p 2 - SAIR_DSMXV22A", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1130 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U1130, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1130, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSMXV22A", ref l_U1130, 8, 1 );
        l_U1342 = 0;
    }
    if (l_U1343 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva and Max chat en route v 3 - SAIR_DSMXV3A", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1140 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U1140, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1140, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSMXV3A", ref l_U1140, 8, 1 );
        l_U1343 = 0;
    }
    if (l_U1344 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva and Max chat en route v 4 - SAIR_DSMXV4A", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1150 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U1150, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1150, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSMXV4A", ref l_U1150, 8, 1 );
        l_U1344 = 0;
    }
    if (l_U1345 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva and Max chat en route v 5 - SAIR_DSMXV5A", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1160 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U1160, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1160, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSMXV5A", ref l_U1160, 8, 1 );
        l_U1345 = 0;
    }
    if (l_U1346 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva and Max chat en route v 6 - SAIR_DSMXV6A", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1170 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U1170, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1170, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSMXV6A", ref l_U1170, 8, 1 );
        SET_PED_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_2215(), l_U497 );
        l_U354 = 1;
        l_U1346 = 0;
    }
    if (l_U1347 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva and Max chat en route v 7 - SAIR_DSMXV7A", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1180 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U1180, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1180, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSMXV7A", ref l_U1180, 8, 1 );
        l_U1347 = 0;
    }
    if (l_U1348 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva and Max chat en route v 8 - SAIR_DSMXV8A", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1190 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U1190, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1190, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSMXV8A", ref l_U1190, 8, 1 );
        l_U1348 = 0;
    }
    if (l_U1349 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "The Car gets shot up / Random / - SSAIR_DSTDMG", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1200 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1200, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSTDMG", ref l_U1200, 8, 1 );
        l_U1349 = 0;
    }
    if (l_U1350 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva makes driving noises / Random / Vroom-Vroom! - SAIR_DSMDN", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1210 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1210, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSTDMG", ref l_U1210, 8, 1 );
        l_U1350 = 0;
    }
    if (l_U1351 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva Takes out the guys / Random / - SAIR_DSTGO", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1220 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1220, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSTGO", ref l_U1220, 8, 1 );
        l_U1351 = 0;
    }
    if (l_U1352 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva Says Left / Random / - SAIR_DSSLT", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1230 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1230, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSSLT", ref l_U1230, 8, 1 );
        l_U1352 = 0;
    }
    if (l_U1353 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva Says Right / Random / - SAIR_DSSRT", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1240 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1240, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSSRT", ref l_U1240, 8, 1 );
        l_U1353 = 0;
    }
    if (l_U1354 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva Says in Front / Random / - SAIR_DSSFT", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1250 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1250, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSSFT", ref l_U1250, 8, 1 );
        l_U1354 = 0;
    }
    if (l_U1355 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva Says talks about the tank / Random / - SAIR_DSTABT", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1260 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1260, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSTABT", ref l_U1260, 8, 1 );
        l_U1355 = 0;
    }
    if (l_U1356 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva and Max discuss the tank v1  - SAIR_DSTNK1", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1270 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U1270, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1270, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSTNK1", ref l_U1270, 8, 1 );
        SET_PED_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_2215(), l_U497 );
        l_U354 = 1;
        l_U1356 = 0;
    }
    if (l_U1357 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva and Max discuss the tank v2  - SAIR_DSTNK2", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1280 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U1280, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1280, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSTNK2", ref l_U1280, 8, 1 );
        l_U1357 = 0;
    }
    if (l_U1358 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva some UFE guys are running in / Random / - SAIR_DSUFE1", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1290 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1290, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSUFE1", ref l_U1290, 8, 1 );
        l_U1358 = 0;
    }
    if (l_U1359 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva some UFE four by fours / Random / - SAIR_DSUFE2", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1300 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1300, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSUFE2", ref l_U1300, 8, 1 );
        l_U1359 = 0;
    }
    if (l_U1362 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Roadblock / Random / - SAIR_DSRBLK", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1330 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1330, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSRBLK", ref l_U1330, 8, 1 );
        l_U1362 = 0;
    }
    if (l_U1360 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva sees another plane coming / Random / - SAIR_DSPCM", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1310 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1310, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSPCM", ref l_U1310, 8, 1 );
        l_U1360 = 0;
    }
    if (l_U1361 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1882( "ka", "Da Silva says take the plane / Random / - SAIR_DSSTPL", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U1320 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 2, l_U497, "DA_SILVA", ref l_U1320, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_DSSTPL", ref l_U1320, 8, 1 );
        l_U1361 = 0;
    }
    if ((l_U354) AND ((NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_81525( l_U1170 ))) AND (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_81525( l_U1270 )))))
    {
        CLEAR_PED_PRIMARY_LOOKAT(  /* PLAYER_PED_ID */ sub_2215() );
        l_U354 = 0;
    }
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_76744(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_76855(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_77130(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_77175( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_77175(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_77262( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_77262(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_77314( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_77832( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_77314(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_77832(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_81525(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_81568( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_81568(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_TM2_DEBUG_RECORDING_WIDGET */ void sub_81832()
{
    if (NOT l_U1745)
    {
        START_WIDGET_GROUP( "Jet fight Recording Widget" );
        ADD_WIDGET_BOOL( "Start Recording Mode", ref l_U1746 );
        START_WIDGET_GROUP( "UFE Truck Fight Recording" );
        ADD_WIDGET_BOOL( "Restart Roadblock 1", ref l_U1798 );
        ADD_WIDGET_BOOL( "Restart Roadblock 2", ref l_U1803 );
        ADD_WIDGET_BOOL( "Restart Caveirao", ref l_U1788 );
        ADD_WIDGET_BOOL( "Restart Helicopter", ref l_U1793 );
        ADD_WIDGET_BOOL( "Restart Roadblock 3", ref l_U1808 );
        ADD_WIDGET_BOOL( "Restart Roadblock 4", ref l_U1813 );
        ADD_WIDGET_BOOL( "Restart UFE 1", ref l_U1763 );
        ADD_WIDGET_BOOL( "Restart UFE 2", ref l_U1768 );
        ADD_WIDGET_BOOL( "Restart UFE 3", ref l_U1773 );
        ADD_WIDGET_BOOL( "Restart UFE 4", ref l_U1778 );
        ADD_WIDGET_BOOL( "Restart UFE 5", ref l_U1783 );
        ADD_WIDGET_BOOL( "Restart DaSilva", ref l_U1758 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "UFE Tuning Widget" );
        ADD_WIDGET_BOOL( "Play All UFE Recordings", ref l_U1818 );
        ADD_WIDGET_FLOAT_SLIDER( "Roadblock 1 Path Start Skip", ref l_U1819, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Roadblock 2 Path Start Skip", ref l_U1820, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Roadblock 3 Path Start Skip", ref l_U1821, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Roadblock 4 Path Start Skip", ref l_U1822, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "UFE 1 Path Start Skip", ref l_U1823, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "UFE 2 Path Start Skip", ref l_U1824, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "UFE 3 Path Start Skip", ref l_U1825, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "UFE 4 Path Start Skip", ref l_U1826, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "UFE 5 Path Start Skip", ref l_U1827, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Caveirao Path Start Skip", ref l_U1828, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "DaSilva's Path Start Skip", ref l_U1829, 0.00000000, 1E8, 50.00000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Jet Recording" );
        ADD_WIDGET_BOOL( "Reset Jet Straight Line", ref l_U1747 );
        ADD_WIDGET_BOOL( "Reset Jet Take Off", ref l_U1752 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U1745 = 1;
    }
    if (l_U1746)
    {
         /* NIS_POST_SETUP */ sub_59832( 1, 1 );
         /* P_CLEANUP_RUNWAY1 */ sub_4901();
        l_U89 = 0;
         /* TELEPORTPED */ sub_2320(  /* PLAYER_PED_ID */ sub_2215(), g_U2014[12], g_U2129[12] );
        l_U1746 = 0;
    }
    if (l_U1747)
    {
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U1732 );
        l_U1732[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_83245( 877881452, l_U1748, l_U1751 );
        l_U1747 = 0;
    }
    if (l_U1752)
    {
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U1732 );
        l_U1732[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_83245( 877881452, l_U1753, l_U1756 );
        if (NOT (DOES_OBJECT_EXIST( l_U1757 )))
        {
            l_U1757 =  /* CREATEOBJECTNOOFFSET */ sub_83558( 23244845, -620.16000000, 643.50800000, -6.73921000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            FREEZE_OBJECT_POSITION( l_U1757, 1 );
        }
        l_U1752 = 0;
    }
    if (l_U1798)
    {
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U1732 );
        l_U1732[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_83245( 2038070575, l_U1799, l_U1802 );
        l_U1798 = 0;
    }
    if (l_U1803)
    {
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U1732 );
        l_U1732[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_83245( 2038070575, l_U1804, l_U1807 );
        l_U1732[1] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1799, l_U1802, 1, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[1], l_U504, 1065353216, 0, 0 );
        l_U1803 = 0;
    }
    if (l_U1788)
    {
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U1732 );
        l_U1732[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_83245( 975934894, l_U1789, l_U1792 );
        l_U1788 = 0;
    }
    if (l_U1808)
    {
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U1732 );
        l_U1732[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_83245( 2038070575, l_U1809, l_U1812 );
        l_U1732[1] =  /* CREATEVEHICLE */ sub_46925( 975934894, l_U1789, l_U1792, 1, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[1], l_U508, 1065353216, 0, 0 );
        l_U1808 = 0;
    }
    if (l_U1813)
    {
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U1732 );
        l_U1732[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_83245( 2038070575, l_U1814, l_U1817 );
        l_U1732[1] =  /* CREATEVEHICLE */ sub_46925( 975934894, l_U1789, l_U1792, 1, 0, 0 );
        l_U1732[2] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1809, l_U1812, 1, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[1], l_U508, 1065353216, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[2], l_U506, 1065353216, 0, 0 );
        l_U1813 = 0;
    }
    if (l_U1763)
    {
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U1732 );
        l_U1732[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_83245( -1053689591, l_U1764, l_U1767 );
        l_U1732[1] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1799, l_U1802, 1, 0, 0 );
        l_U1732[2] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1804, l_U1807, 1, 0, 0 );
        l_U1732[3] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1809, l_U1812, 1, 0, 0 );
        l_U1732[4] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1814, l_U1817, 1, 0, 0 );
        l_U1732[5] =  /* CREATEVEHICLE */ sub_46925( 975934894, l_U1789, l_U1792, 1, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[1], l_U504, 1, 50000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[2], l_U505, 1, 50000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[3], l_U506, 1, 35000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[4], l_U507, 1, 35000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[5], l_U508, 1065353216, 0, 0 );
        l_U1763 = 0;
    }
    if (l_U1768)
    {
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U1732 );
        l_U1732[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_83245( -1053689591, l_U1769, l_U1772 );
        l_U1732[1] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1799, l_U1802, 1, 0, 0 );
        l_U1732[2] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1804, l_U1807, 1, 0, 0 );
        l_U1732[3] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1809, l_U1812, 1, 0, 0 );
        l_U1732[4] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1814, l_U1817, 1, 0, 0 );
        l_U1732[5] =  /* CREATEVEHICLE */ sub_46925( 975934894, l_U1789, l_U1792, 1, 0, 0 );
        l_U1732[6] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1764, l_U1767, 0, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[1], l_U504, 1, 50000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[2], l_U505, 1, 50000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[3], l_U506, 1, 35000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[4], l_U507, 1, 35000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[5], l_U508, 1065353216, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[6], l_U499, 1065353216, 0, 0 );
        l_U1768 = 0;
    }
    if (l_U1773)
    {
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U1732 );
        l_U1732[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_83245( -1053689591, l_U1774, l_U1777 );
        l_U1732[1] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1799, l_U1802, 1, 0, 0 );
        l_U1732[2] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1804, l_U1807, 1, 0, 0 );
        l_U1732[3] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1809, l_U1812, 1, 0, 0 );
        l_U1732[4] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1814, l_U1817, 1, 0, 0 );
        l_U1732[5] =  /* CREATEVEHICLE */ sub_46925( 975934894, l_U1789, l_U1792, 1, 0, 0 );
        l_U1732[6] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1764, l_U1767, 0, 0, 0 );
        l_U1732[7] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1769, l_U1772, 0, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[1], l_U504, 1, 50000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[2], l_U505, 1, 50000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[3], l_U506, 1, 35000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[4], l_U507, 1, 35000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[5], l_U508, 1065353216, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[6], l_U499, 1065353216, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[7], l_U500, 1065353216, 0, 0 );
        l_U1773 = 0;
    }
    if (l_U1778)
    {
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U1732 );
        l_U1732[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_83245( -1053689591, l_U1779, l_U1782 );
        l_U1732[1] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1799, l_U1802, 1, 0, 0 );
        l_U1732[2] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1804, l_U1807, 1, 0, 0 );
        l_U1732[3] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1809, l_U1812, 1, 0, 0 );
        l_U1732[4] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1814, l_U1817, 1, 0, 0 );
        l_U1732[5] =  /* CREATEVEHICLE */ sub_46925( 975934894, l_U1789, l_U1792, 1, 0, 0 );
        l_U1732[6] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1764, l_U1767, 0, 0, 0 );
        l_U1732[7] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1769, l_U1772, 0, 0, 0 );
        l_U1732[8] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1774, l_U1777, 0, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[1], l_U504, 1, 50000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[2], l_U505, 1, 50000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[3], l_U506, 1, 35000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[4], l_U507, 1, 35000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[5], l_U508, 1065353216, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[6], l_U499, 1065353216, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[7], l_U500, 1065353216, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[8], l_U501, 1065353216, 0, 0 );
        l_U1778 = 0;
    }
    if (l_U1783)
    {
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U1732 );
        l_U1732[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_83245( -1053689591, l_U1784, l_U1787 );
        l_U1732[1] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1799, l_U1802, 1, 0, 0 );
        l_U1732[2] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1804, l_U1807, 1, 0, 0 );
        l_U1732[3] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1809, l_U1812, 1, 0, 0 );
        l_U1732[4] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1814, l_U1817, 1, 0, 0 );
        l_U1732[5] =  /* CREATEVEHICLE */ sub_46925( 975934894, l_U1789, l_U1792, 1, 0, 0 );
        l_U1732[6] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1764, l_U1767, 0, 0, 0 );
        l_U1732[7] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1769, l_U1772, 0, 0, 0 );
        l_U1732[8] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1774, l_U1777, 0, 0, 0 );
        l_U1732[9] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1779, l_U1782, 0, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[1], l_U504, 1, 50000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[2], l_U505, 1, 50000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[3], l_U506, 1, 35000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[4], l_U507, 1, 35000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[5], l_U508, 1, 3000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[6], l_U499, 1, 1500, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[7], l_U500, 1, 500, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[8], l_U501, 1, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[9], l_U502, 1, 1500, 0 );
        l_U1783 = 0;
    }
    if (l_U1758)
    {
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U1732 );
        l_U1732[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_83245( 1979959192, l_U1759, l_U1762 );
        l_U1732[1] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1799, l_U1802, 1, 0, 0 );
        l_U1732[2] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1804, l_U1807, 1, 0, 0 );
        l_U1732[3] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1809, l_U1812, 1, 0, 0 );
        l_U1732[4] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1814, l_U1817, 1, 0, 0 );
        l_U1732[5] =  /* CREATEVEHICLE */ sub_46925( 975934894, l_U1789, l_U1792, 1, 0, 0 );
        l_U1732[6] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1764, l_U1767, 0, 0, 0 );
        l_U1732[7] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1769, l_U1772, 0, 0, 0 );
        l_U1732[8] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1774, l_U1777, 0, 0, 0 );
        l_U1732[9] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1779, l_U1782, 0, 0, 0 );
        l_U1732[10] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1784, l_U1787, 0, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[1], l_U504, 1, 50000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[2], l_U505, 1, 50000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[3], l_U506, 1, 35000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[4], l_U507, 1, 35000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[5], l_U508, 1065353216, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[6], l_U499, 1065353216, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[7], l_U500, 1065353216, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[8], l_U501, 1065353216, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[9], l_U502, 1065353216, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[10], l_U503, 1065353216, 0, 0 );
        l_U1758 = 0;
    }
    if (l_U1793)
    {
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U1732 );
        l_U1732[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_83245( 1232833631, l_U1794, l_U1797 );
        l_U1732[1] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1799, l_U1802, 1, 0, 0 );
        l_U1732[2] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1804, l_U1807, 1, 0, 0 );
        l_U1732[3] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1809, l_U1812, 1, 0, 0 );
        l_U1732[4] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1814, l_U1817, 1, 0, 0 );
        l_U1732[5] =  /* CREATEVEHICLE */ sub_46925( 975934894, l_U1789, l_U1792, 1, 0, 0 );
        l_U1732[6] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1764, l_U1767, 0, 0, 0 );
        l_U1732[7] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1769, l_U1772, 0, 0, 0 );
        l_U1732[8] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1774, l_U1777, 0, 0, 0 );
        l_U1732[9] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1779, l_U1782, 0, 0, 0 );
        l_U1732[10] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1784, l_U1787, 0, 0, 0 );
        l_U1732[11] =  /* CREATEVEHICLE */ sub_46925( 1979959192, l_U1759, l_U1762, 0, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[1], l_U504, 1, 50000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[2], l_U505, 1, 50000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[3], l_U506, 1, 35000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[4], l_U507, 1, 35000, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[5], l_U508, 1, l_U517 - l_U511, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[6], l_U499, 1, l_U512 - l_U511, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[7], l_U500, 1, l_U513 - l_U511, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[8], l_U501, 1, l_U514 - l_U511, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[9], l_U502, 1, l_U515 - l_U511, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[10], l_U503, 1, l_U516 - l_U511, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[11], l_U498, 1065353216, 0, 0 );
        l_U1793 = 0;
    }
    if (l_U1818)
    {
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U1732 );
        l_U1732[1] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1799, l_U1802, 1, 0, 0 );
        l_U1732[2] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1804, l_U1807, 1, 0, 0 );
        l_U1732[3] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1809, l_U1812, 1, 0, 0 );
        l_U1732[4] =  /* CREATEVEHICLE */ sub_46925( 2038070575, l_U1814, l_U1817, 1, 0, 0 );
        l_U1732[5] =  /* CREATEVEHICLE */ sub_46925( 975934894, l_U1789, l_U1792, 1, 0, 0 );
        l_U1732[6] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1764, l_U1767, 0, 0, 0 );
        l_U1732[7] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1769, l_U1772, 0, 0, 0 );
        l_U1732[8] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1774, l_U1777, 0, 0, 0 );
        l_U1732[9] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1779, l_U1782, 0, 0, 0 );
        l_U1732[10] =  /* CREATEVEHICLE */ sub_46925( -1053689591, l_U1784, l_U1787, 0, 0, 0 );
        l_U1732[11] =  /* CREATEVEHICLE */ sub_46925( 1979959192, l_U1759, l_U1762, 0, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[1], l_U504, 1, l_U1819, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[2], l_U505, 1, l_U1820, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[3], l_U506, 1, l_U1821, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[4], l_U507, 1, l_U1822, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[5], l_U508, 1, l_U1828, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[6], l_U499, 1, l_U1823, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[7], l_U500, 1, l_U1824, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[8], l_U501, 1, l_U1825, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[9], l_U502, 1, l_U1826, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[10], l_U503, 1, l_U1827, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U1732[11], l_U498, 1, l_U1829, 0 );
        l_U1818 = 0;
    }
    return;
}

/* F_DEBUG_CREATE_RECORDING_VEHICLE */ void sub_83245(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown Result;

     /* WRITESCRIPTLOG */ sub_1882( "GA", "F_DEBUG_CREATE_RECORDING_VEHICLE start", 0 );
    Result =  /* CREATEVEHICLE */ sub_46925( uParam0, uParam1, uParam4, 1, 0, 0 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2215() ))) AND (NOT (IS_VEHICLE_DEAD( Result ))))
    {
        SET_PED_INTO_VEHICLE(  /* PLAYER_PED_ID */ sub_2215(), Result, -1 );
        SET_VEHICLE_PROOFS( Result, 1, 1, 1, 1, 1 );
        SET_VEHICLE_ENGINE_ON( Result, 1, 1 );
    }
    return Result;
}

/* CREATEOBJECTNOOFFSET */ void sub_83558(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_43687( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_TM2_DEBUG_TUNING_WIDGET */ void sub_88728()
{
    if (NOT l_U1830)
    {
        START_WIDGET_GROUP( "UFE fight" );
        ADD_WIDGET_FLOAT_SLIDER( "Jet Speed", ref l_U523, 0.00000000, 10.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Jet Path Start Skip", ref l_U510, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "DaSilva Path Start Skip", ref l_U511, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "UFE 1 Path Start Skip", ref l_U512, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "UFE 2 Path Start Skip", ref l_U513, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "UFE 3 Path Start Skip", ref l_U514, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "UFE 4 Path Start Skip", ref l_U515, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "UFE 5 Path Start Skip", ref l_U516, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Caveirao Path Start Skip", ref l_U517, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Helicopter Path Start Skip", ref l_U518, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Roadblock 1 Path Start Skip", ref l_U519, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Roadblock 2 Path Start Skip", ref l_U520, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Roadblock 3 Path Start Skip", ref l_U521, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Roadblock 4 Path Start Skip", ref l_U522, 0.00000000, 1E8, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "CAV Fight - Global Speedup Increment Amount", ref l_U1085, 0.00000000, 1E8, 0.10000000 );
        ADD_WIDGET_INT_SLIDER( "CAV Fight - Global Speedup Increment Delay", ref l_U1095, 0, 100000000, 100 );
        ADD_WIDGET_INT_SLIDER( "CAV Fight - Global Speedup Duration", ref l_U1084, 0, 100000000, 100 );
        ADD_WIDGET_INT_SLIDER( "CAV Fight - Player Veh Catchup Duration", ref l_U1107, 0, 100000000, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "CAV Fight - Player Veh Catchup Amount", ref l_U1097, 0, 100000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay Cam Heading", ref g_U2168[12], 65176, 360, 1 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay Cam Pitch", ref g_U2207[12], -360.00000000, 360.00000000, 1.00000000 );
        ADD_WIDGET_INT_SLIDER( "Time to Fail", ref l_U953, 0, 100000000, 50 );
        ADD_WIDGET_FLOAT_SLIDER( "Explosion Amplitude", ref l_U454, 0.00000000, 10.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Height for Helicopter Crash Explosion", ref l_U482, -100000.00000000, 100000.00000000, 1.00000000 );
        START_WIDGET_GROUP( "Last exploding vehicle NIS" );
        ADD_WIDGET_INT_SLIDER( "Cam duration", ref l_U170, 0, 10000000, 50 );
        ADD_WIDGET_INT_SLIDER( "Bullet time duration", ref l_U171, 0, 10000000, 10 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_90259( ref l_U164, "Camera position offset", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_90259( ref l_U167, "Camera look at offset", 1036831949 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Player Death NIS" );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_90259( ref l_U213, "Cam offset", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_90259( ref l_U216, "Lookat offset", 1036831949 );
        ADD_WIDGET_INT_SLIDER( "Explosion delay", ref l_U230, 0, 100000, 1 );
        ADD_WIDGET_INT_SLIDER( "Cam Duration", ref l_U219, 0, 100000, 1 );
        ADD_WIDGET_FLOAT_SLIDER( "Explosion cam shake amplitude", ref l_U220, 0.00000000, 100.00000000, 0.10000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_90259( ref l_U231, "Smoke Offset", 1036831949 );
        ADD_WIDGET_BOOL( "Start Player Car Explosion NIS", ref l_U1831 );
        STOP_WIDGET_GROUP();
        l_U1830 = 1;
        STOP_WIDGET_GROUP();
    }
    if (l_U1831)
    {
        l_U90 = 1;
        l_U89 = 11;
        l_U1831 = 0;
    }
    return;
}

/* P_ADD_WIDGET_VECTOR_SLIDER */ void sub_90259(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

/* P_DEBUG_VIG13A_DIALOGUE */ void sub_90790()
{
    if (l_U1832 == 0)
    {
        START_WIDGET_GROUP( "Dialogue Widget" );
        ADD_WIDGET_BOOL( "Setup for Dialogue", ref l_U1833 );
        ADD_WIDGET_BOOL( "Play - A 00 - Aghhhh!", ref l_U1834 );
        ADD_WIDGET_BOOL( "Play - A 01 - What are you doing?", ref l_U1835 );
        ADD_WIDGET_BOOL( "Play - A 02 - Damn it!", ref l_U1836 );
        ADD_WIDGET_BOOL( "Play - A 03 - You trying to kill him or me!", ref l_U1837 );
        ADD_WIDGET_BOOL( "Play - B 00 - Get me close!", ref l_U1838 );
        ADD_WIDGET_BOOL( "Play - B 01 - Watch what you're doing!", ref l_U1839 );
        ADD_WIDGET_BOOL( "Play - B 02 - Get me a shot!", ref l_U1840 );
        ADD_WIDGET_BOOL( "Play - B 03 - Are you trying to shake me off!", ref l_U1841 );
        ADD_WIDGET_BOOL( "Play - B 04 - Your careers coming down with that plane. Let's get it over with!", ref l_U1842 );
        ADD_WIDGET_BOOL( "Play - B 05 - Bring us along side it!", ref l_U1843 );
        ADD_WIDGET_BOOL( "Play - DaSilva's Lines", ref l_U1844 );
        l_U1832 = 1;
        STOP_WIDGET_GROUP();
    }
    if (l_U1833)
    {
         /* NIS_POST_SETUP */ sub_59832( 1, 1 );
        l_U89 = 0;
         /* CLEANPEDARRAY */ sub_5084( ref l_U910 );
         /* CLEANPEDARRAY */ sub_5084( ref l_U603 );
         /* CLEANVEHICLE */ sub_5203( l_U463 );
         /* CLEANVEHICLE */ sub_5203( l_U469 );
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U525 );
         /* CLEANVEHICLEARRAY */ sub_5306( ref l_U531 );
         /* P_START_VEHICLE_PLAYBACK */ sub_50497( l_U455, l_U498, 0, l_U511, 0 );
        l_U1833 = 0;
    }
    if (l_U1834)
    {
         /* WRITESCRIPTLOG */ sub_1882( "CR", "tb_TM2_R1_Dialogue[0] - Aghhhh!", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U238 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U238, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 0, l_U497, "DE_SILVA", ref l_U238, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_VIG13A", ref l_U238, 8, 1 );
        l_U1834 = 0;
    }
    if (l_U1835)
    {
         /* WRITESCRIPTLOG */ sub_1882( "CR", "tb_TM2_R1_Dialogue[1] - What are you doing?", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U238 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U238, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 0, l_U497, "DE_SILVA", ref l_U238, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_VIG13B", ref l_U238, 8, 1 );
        l_U1835 = 0;
    }
    if (l_U1836)
    {
         /* WRITESCRIPTLOG */ sub_1882( "CR", "tb_TM2_R1_Dialogue[2] - Damn it!", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U238 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U238, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 0, l_U497, "DE_SILVA", ref l_U238, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_VIG13C", ref l_U238, 8, 1 );
        l_U1836 = 0;
    }
    if (l_U1837)
    {
         /* WRITESCRIPTLOG */ sub_1882( "CR", "tb_TM2_R1_Dialogue[3] - You trying to kill him or me?", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U238 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U238, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 0, l_U497, "DE_SILVA", ref l_U238, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_VIG13D", ref l_U238, 8, 1 );
        l_U1837 = 0;
    }
    if (l_U1838)
    {
         /* WRITESCRIPTLOG */ sub_1882( "CR", "tb_TM2_R2_Dialogue[0] - Get me close!", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U238 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U238, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 0, l_U497, "DE_SILVA", ref l_U238, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_VIG13E", ref l_U238, 8, 1 );
        l_U1838 = 0;
    }
    if (l_U1839)
    {
         /* WRITESCRIPTLOG */ sub_1882( "CR", "tb_TM2_R2_Dialogue[1] - Watch what you're doing!", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U238 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U238, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 0, l_U497, "DE_SILVA", ref l_U238, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_VIG13F", ref l_U238, 8, 1 );
        l_U1839 = 0;
    }
    if (l_U1840)
    {
         /* WRITESCRIPTLOG */ sub_1882( "CR", "tb_TM2_R2_Dialogue[2] - Get me a shot!", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U238 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U238, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 0, l_U497, "DE_SILVA", ref l_U238, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_VIG13G", ref l_U238, 8, 1 );
        l_U1840 = 0;
    }
    if (l_U1841)
    {
         /* WRITESCRIPTLOG */ sub_1882( "CR", "tb_TM2_R2_Dialogue[3] - Are you trying to shake me off!", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U238 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U238, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 0, l_U497, "DE_SILVA", ref l_U238, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_VIG13H", ref l_U238, 8, 1 );
        l_U1841 = 0;
    }
    if (l_U1842)
    {
         /* WRITESCRIPTLOG */ sub_1882( "CR", "tb_TM2_R2_Dialogue[4] - Your careers coming down with that plane. Let's get it over with!", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U238 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U238, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 0, l_U497, "DE_SILVA", ref l_U238, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_VIG13J", ref l_U238, 8, 1 );
        l_U1842 = 0;
    }
    if (l_U1843)
    {
         /* WRITESCRIPTLOG */ sub_1882( "CR", "tb_TM2_R2_Dialogue[5] - Bring us along side it!", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U238 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U238, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 0, l_U497, "DE_SILVA", ref l_U238, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_VIG13K", ref l_U238, 8, 1 );
        l_U1843 = 0;
    }
    if (l_U1844)
    {
         /* WRITESCRIPTLOG */ sub_1882( "CR", "Playing DaSilva's Lines", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_76744( ref l_U238 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 0,  /* PLAYER_PED_ID */ sub_2215(), "MAX", ref l_U238, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_76855( 1, l_U497, "DE_SILVA", ref l_U238, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_77130( "SAIR_VIG12", ref l_U238, 8, 1 );
        l_U1844 = 0;
    }
    return;
}

/* P_RELEASE_RUNWAY1_ASSETS */ void sub_93375()
{
     /* WRITESCRIPTLOG */ sub_1882( "CR", "P_RELEASE_RUNWAY1_ASSETS - START", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_93466( ref l_U1025, ref g_U1030 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_70055( 2038070575, ref g_U1030 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_93586( 879300975, ref g_U1247 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_93586( 1478009203, ref g_U1247 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_93586( 57534114, ref g_U1247 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_93964( "level_s_fin_cp_10", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_93964( "w_sp_grnlch_aa_h", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_93964( "veh@std", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_93964( "veh@truck", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_93964( "LEVEL_S_FIN_CP_11", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_93964( "LEVEL_S_FIN_CP_12", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_93964( "LEVEL_S_FAV2_CP_04", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_93964( "VEH@CAR_JASRE", ref g_U1429 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_94529( "LEVEL/S_AIR/VIG_13_FIN_MAX_CAR_SHOOT.act", ref g_U1783 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_94529( "Vehicle/Vehicle_Car.act", ref g_U1783 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_94529( "LEVEL/S_AIR/VIG_09_ChopperShooters", ref g_U1783 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_94529( "LEVEL/S_AIR/VIG_08_FIN_JEEP", ref g_U1783 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_94529( "VEHICLE/vehicle_heli", ref g_U1783 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_95031( l_U468, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_95031( l_U983, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_95031( l_U498, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_95031( l_U499, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_95031( l_U500, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_95031( l_U501, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_95031( l_U502, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_95031( l_U503, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_95031( l_U508, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_95031( l_U509, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_95031( l_U504, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_95031( l_U505, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_95031( l_U506, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_95031( l_U507, ref g_U1638 );
     /* P_STREAMREQ_AUDIO_BANK_REMOVE */ sub_95589( "SCRIPT_MISSION\S_AIR_RUNWAY_01A", ref g_U1950 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_93466(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_70055( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_93586(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6967( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_93964(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6967( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_REMOVE */ void sub_94529(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6967( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ACTION_TREE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ void sub_95031(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6967( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a VEHICLE_RECORDING asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_REMOVE */ void sub_95589(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6967( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a AUDIO_BANK asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


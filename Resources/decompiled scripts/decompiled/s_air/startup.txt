void main()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;

    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 0;
    l_U43 = "SpeechMain";
    l_U44 = 0;
    l_U45 = 0;
    l_U47 = {24.41700000, -116.72100000, -2.63900000};
    l_U50 = {0.00000000, 0.00000000, 90.00000000};
    l_U53 = 0;
    l_U54 = 0;
    l_U55 = 0;
    l_U56 = 0;
    l_U57 = 0;
    l_U58 = 0;
    l_U59 = 0;
    l_U60 = 0;
    l_U61 = {-81.63000000, 28.35000000, -2.17000000};
    l_U64 = {-78.15000000, 28.35000000, -2.17000000};
    l_U67 = {-81.63000000, 8.50000000, 2.20000000};
    l_U70 = {-78.15000000, 8.50000000, 2.20000000};
    l_U73 = {-35.16600000, -89.34100000, 6.62600000};
    l_U76 = {0.00000000, 0.00000000, -135.00000000};
    l_U79 = {-35.16200000, -103.89200000, 6.62600000};
    l_U82 = {0.00000000, 0.00000000, -45.00000000};
    l_U85 = 2.38000000;
    l_U86 = 0.00000000;
    l_U87 = 0.00000000;
    l_U100 = 0;
    l_U101 = 0;
    l_U102 = 0;
    l_U103 = 0;
    l_U104 = 0;
    l_U105 = 0;
    l_U106 = 0;
    l_U107 = 0;
    l_U108 = 0;
    l_U109 = 0;
    l_U110 = {-90.35000000, 87.85000000, -5.86000000};
    l_U113 = {-68.03000000, 11.19000000, -5.86000000};
    l_U118 = 1;
    l_U119 = 0;
    l_U120 = 6.50000000;
    l_U121 = 7.50000000;
    l_U122 = 0;
    l_U123 = 0;
    l_U124 = 0;
    l_U125 = 0;
    l_U126 = 6.00000000;
    l_U127 = {-69.81000000, 76.26000000, -5.85600000};
    l_U130 = 2.00000000;
    l_U131 = {-69.81000000, 79.36300000, -5.85600000};
    l_U134 = {-69.81000000, 84.45000000, -5.85600000};
    l_U137 = 0;
    l_U138 = 0;
    l_U142 = {37.76000000, -127.31800000, -4.82200000};
    l_U145 = {18.39700000, -148.99900000, -4.93700000};
    l_U148 = {44.48900000, -140.60400000, -4.82900000};
    l_U151 = 0;
    l_U152 = 0;
    l_U153 = {-50.39000000, -128.39000000, 4.33000000};
    l_U156 = {-50.39000000, -77.25000000, 4.33000000};
    l_U159 = 2.97000000;
    l_U160 = {l_U153._fU0 + l_U159, l_U153._fU4, l_U153._fU8};
    l_U163 = {l_U156._fU0 + l_U159, l_U156._fU4, l_U156._fU8};
    g_U0 = 1;
    g_U648 = 0;
    g_U649 = {0, 0, 0};
    StrCopy( ref g_U652, "DUMMY", 32 );
    g_U660 = 1;
    g_U665 = 0;
    g_U666 = 0;
    g_U667 = 0;
    g_U670 = 0;
    g_U823 = -34153553;
    g_U824 = 263290660;
    g_U825 = 531636001;
    g_U826 = -2036798794;
    g_U827 = 2095765338;
    g_U828 = 1746120108;
    StrCopy( ref g_U2246, "ap_bgsort", 32 );
    StrCopy( ref g_U2254, "ap_mhalls", 32 );
    StrCopy( ref g_U2262, "ap_lckrm", 32 );
    StrCopy( ref g_U2270, "ap_bathroom", 32 );
    StrCopy( ref g_U2278, "GtaMloRoom_depart", 32 );
    StrCopy( ref g_U2286, "GtaMloRoom_cafe", 32 );
    StrCopy( ref g_U2294, "GtaMloRoom_escal", 32 );
    StrCopy( ref g_U2302, "GtaMloRoom_plat1", 32 );
    StrCopy( ref g_U2310, "GtaMloRoom_trackA2", 32 );
    StrCopy( ref g_U2318, "GtaMloRoom_plat2", 32 );
    StrCopy( ref g_U2326, "GtaMloRoom_tram04", 32 );
    StrCopy( ref g_U2334, "GtaMloRoom_tram01", 32 );
    StrCopy( ref g_U2342, "GtaMloRoom_tram03", 32 );
    StrCopy( ref g_U2350, "GtaMloRoom_tram06", 32 );
    StrCopy( ref g_U2358, "Room_hangar01", 32 );
    StrCopy( ref g_U2366, "ap_ticket_b", 32 );
    g_U2374 = -229120983;
    g_U2375 = -1562169288;
    g_U2376 = 976678;
    g_U2377 = -1896545036;
    g_U2378 = -1655940651;
    g_U2379 = 1819443175;
    g_U2380 = 1879721267;
    g_U2381 = -2144865775;
    g_U2382 = -147436451;
    g_U2383 = 1136740705;
    g_U2384 = -547869645;
    g_U2385 = 1831923586;
    g_U2386 = -1829540229;
    g_U2387 = -630536026;
    g_U2388 = 1232833631;
    g_U2389 = -1284912943;
    g_U2390 = -2118602313;
    g_U2391 = -1768694923;
    g_U2392 = -1462927384;
    g_U2393 = 844211825;
    g_U2394 = 529450375;
    g_U2395 = 1082868452;
    g_U2396 = -173448690;
    g_U2397 = 760387943;
    g_U2398 = 1055112793;
    g_U2399 = -1516032700;
    g_U2400 = 160797987;
    g_U2401 = 1854128078;
    g_U2402 = -177757171;
    StrCopy( ref g_U2403, "AIT_EXPERT", 32 );
    StrCopy( ref g_U2411, "AIT_NORMAL", 32 );
    StrCopy( ref g_U2419, "S_AIR_TRAM_ONBOARD_START", 32 );
    StrCopy( ref g_U2427, "S_AIR_TRAM_ONBOARD", 32 );
    StrCopy( ref g_U2435, "S_AIR_TRAM_PASSBY", 32 );
    StrCopy( ref g_U2443, "S_AIR_TRAM_MPM", 32 );
    StrCopy( ref g_U2451, "S_AIR_TRAM_ARRIVE", 32 );
    StrCopy( ref g_U2459, "S_AIR_TRAM_DEPART", 32 );
    g_U2468 = {-53.90200000, -30.69000000, 6.30000000};
    g_U2471 = {0.00000000, 0.00000000, 0.00000000};
    g_U2966 = {-354.12500000, 553.55000000, -5.86000000};
    g_U3011 = 1.60000000;
    g_U3015 = {-78.43200000, 98.01300000, -3.55600000};
    g_U3018 = {120.00000000, 0.00000000, 0.00000000};
    g_U3021 = {-78.43200000, 98.01300000, -3.55100000};
    g_U3024 = {120.00000000, 0.00000000, 0.00000000};
    g_U3038 = {-79.89600000, 38.81600000, -1.26600000};
    g_U3041 = 0;
    g_U3070 = {-79.88000000, 35.01900000, -2.00000000};
    g_U3073 = 0.00000000;
    g_U3319 = 5000;
    g_U3320 = 11.00000000;
    g_U3322 = {1.50000000, -5.80000000, 0.38000000};
    g_U3325 = {0.00000000, 0.00000000, 3.31612600};
    g_U3329 = {-1.75000000, -4.90000000, 0.25000000};
    g_U3332 = {-1.00000000, -1.10000000, 1.50000000};
    g_U3349 = 5000;
    g_U4950 = -1;
    g_U4951 = {-375.27300000, 475.04000000, -5.86000000};
    g_U4955 = 8.00000000;
    g_U4956 = 25.00000000;
    g_U4957 = 3000;
    g_U4958 = 5000;
    g_U4959 = 1;
    g_U4960 = 7650;
    g_U4961 = 2000;
     /* WRITESCRIPTLOG */ sub_2465( "AT", "Script s_air startup.sc is starting...", 0 );
    l_U37 = 1;
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        ENABLE_BULLET_CAMERA_WIPE( 1 );
    }
    while (IS_EXITFLAG_SET() == 0)
    {
        switch (l_U37)
        {
            case 0: break;
            case 1:
             /* WRITESCRIPTLOG */ sub_2465( "SP", "eScriptState = SCRIPT_SETUP", 0 );
            SET_STREAMING( 0 );
            SET_DEBUG_ACTIVE( 0 );
            SET_RANDOM_SEED( FLOOR( GET_FRAME_TIME() ) );
            DO_SCREEN_FADE_OUT( 0 );
            g_U829 = GET_CHECKPOINT_SELECTED();
            g_U830 = g_U829;
             /* P_SETUP_WEATHER_TIMEOFDAY */ sub_2796();
             /* P_SETUP_START_POSITIONS */ sub_3206();
             /* P_CREATE_PLAYER */ sub_5455();
             /* P_SETUP_PLAYER_RELATIONSHIPS */ sub_20974();
            SET_CAM_VIEW_MODE( 1 );
            l_U38._fU0 = 2;
            l_U38._fU8 = 13;
            SET_RICH_PRESENCE( ref l_U38 );
            SET_DAMAGE_TO_PLAYER_MULTIPLIER( 1.05000000 );
            if (g_U829 < 14)
            {
                l_U37 = 3;
                 /* WRITESCRIPTLOG */ sub_2465( "SP", "eScriptState = SCRIPT_START_GAMEPLAY", 0 );
            }
            else
            {
                l_U37 = 2;
                 /* WRITESCRIPTLOG */ sub_2465( "SP", "eScriptState = SCRIPT_START_DEBUG", 0 );
            }
            break;
            case 2:
             /* WRITESCRIPTLOG */ sub_2465( "SP", "eScriptState = SCRIPT_START_DEBUG", 0 );
            SET_STREAMING( 1 );
             /* P_LOAD_AREA */ sub_21378();
             /* P_FADE_IN_AND_WAIT */ sub_22395( 0 );
            if ((g_U829 < 34) AND (g_U829 > 14))
            {
                 /* F_GIVEPEDWEAPON */ sub_22586(  /* PLAYER_PED_ID */ sub_5612(), -862236369, 25000, 0, 1 );
            }
            if (g_U829 == 34)
            {
                 /* LOADNEWSCRIPTFILE */ sub_23066( "s_air_debug_ISS", 1536 );
            }
            else if (g_U829 == 35)
            {
                 /* LOADNEWSCRIPTFILE */ sub_23066( "s_air_cutscene", 1536 );
            }
            else if (g_U829 == 37)
            {
                 /* LOADNEWSCRIPTFILE */ sub_23066( "s_air_imgMetrics", 8192 );
            }
            else if (g_U829 == 36)
            {
                uVar2 =  /* CREATEOBJECTNOOFFSET */ sub_23404( 1703160427, 64701, 64785, -6.80000000, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
                if (DOES_OBJECT_EXIST( uVar2 ))
                {
                    FREEZE_OBJECT_POSITION( uVar2, 1 );
                    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( uVar2, ref g_U2358 );
                }
                uVar2 =  /* CREATEOBJECTNOOFFSET */ sub_23404( 1423542550, 64704, 64784, -6.80000000, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
                if (DOES_OBJECT_EXIST( uVar2 ))
                {
                    FREEZE_OBJECT_POSITION( uVar2, 1 );
                    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( uVar2, ref g_U2358 );
                }
                uVar2 =  /* CREATEOBJECTNOOFFSET */ sub_23404( -2104040304, 64708, 64785, -6.80000000, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
                if (DOES_OBJECT_EXIST( uVar2 ))
                {
                    FREEZE_OBJECT_POSITION( uVar2, 1 );
                    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( uVar2, ref g_U2358 );
                }
                 /* LOADMODEL */ sub_23537( -1562169288, 1 );
                 /* LOADMODEL */ sub_23537( -1896545036, 1 );
                 /* LOADMODEL */ sub_23537( 976678, 1 );
                uVar3 = CREATE_MISSION_TRAIN( 0, -69.25000000, 87.68000000, -5.86000000, 1 );
                if (NOT (IS_VEHICLE_DEAD( uVar3 )))
                {
                    SET_MISSION_TRAIN_COORDS( uVar3, -69.25000000, 87.68000000, -5.86000000 );
                    uVar4 = GET_TRAIN_CARRIAGE( uVar3, 1 );
                    uVar5 = GET_TRAIN_CABOOSE( uVar3 );
                    SET_TRAIN_CRUISE_SPEED( uVar3, 0.00000000 );
                    SET_TRAIN_SPEED( uVar3, 0.00000000 );
                    FREEZE_VEHICLE_POSITION( uVar3, 1 );
                    FORCE_TRAIN_DOOR_OPEN_CLOSE( uVar3, 1.50000000, 0, 1, 1 );
                    FREEZE_VEHICLE_POSITION( uVar4, 1 );
                    FORCE_TRAIN_DOOR_OPEN_CLOSE( uVar4, 1.50000000, 0, 1, 1 );
                    FREEZE_VEHICLE_POSITION( uVar5, 1 );
                    FORCE_TRAIN_DOOR_OPEN_CLOSE( uVar5, 1.50000000, 1, 1, 1 );
                }
                uVar3 = CREATE_MISSION_TRAIN( 1, -90.35000000, 87.78000000, -5.86000000, 1 );
                if (NOT (IS_VEHICLE_DEAD( uVar3 )))
                {
                    SET_MISSION_TRAIN_COORDS( uVar3, -90.35000000, 87.78000000, -5.86000000 );
                    uVar6 = GET_TRAIN_CARRIAGE( uVar3, 1 );
                    uVar7 = GET_TRAIN_CABOOSE( uVar3 );
                    SET_TRAIN_CRUISE_SPEED( uVar3, 0.00000000 );
                    SET_TRAIN_SPEED( uVar3, 0.00000000 );
                    FREEZE_VEHICLE_POSITION( uVar3, 1 );
                    FORCE_TRAIN_DOOR_OPEN_CLOSE( uVar3, 1.50000000, 1, 1, 1 );
                    FREEZE_VEHICLE_POSITION( uVar6, 1 );
                    FORCE_TRAIN_DOOR_OPEN_CLOSE( uVar6, 1.50000000, 0, 1, 1 );
                    FREEZE_VEHICLE_POSITION( uVar7, 1 );
                    FORCE_TRAIN_DOOR_OPEN_CLOSE( uVar7, 1.50000000, 0, 1, 1 );
                }
            };;;;
            l_U37 = 5;
             /* WRITESCRIPTLOG */ sub_2465( "SP", "eScriptState = SCRIPT_RUNNING", 0 );
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_2465( "SP", "eScriptState = SCRIPT_START_GAMEPLAY", 0 );
             /* P_SETUP_LEVEL_FLOW */ sub_24695();
             /* P_SETUP_STREAMREQ */ sub_25532();
            SET_STREAMING( 1 );
             /* P_LOAD_AREA */ sub_21378();
            if (g_U829 <= 3)
            {
                PRELOAD_MOVIE( 0, "TV_10_16x9_finale", 0, 0 );
            }
             /* P_START_GOLDENGUNS */ sub_26727();
             /* P_SETUP_FINALE_DOORS */ sub_26925();
             /* SETUP_SCRIPTED_SPEECH */ sub_26976( "SAIRAUD" );
            if (DOES_SCRIPT_EXIST( l_U43 ))
            {
                REQUEST_SCRIPT( l_U43 );
                "[doubled result, dropped if not asigned]";
                l_U37 = 4;
                 /* WRITESCRIPTLOG */ sub_2465( "SP", "eScriptState = SCRIPT_LOADING_SPEECHMAIN", 0 );
            }
            else
            {
                SCRIPT_ASSERT( "[SP] Error: SpeechMain.sc doesn't exist on the disc!!!", 0 );
            }
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_2465( "SP", "eScriptState = SCRIPT_LOADING_SPEECHMAIN", 0 );
            if ((HAS_SCRIPT_LOADED( l_U43 )) == 1)
            {
                START_NEW_SCRIPT( l_U43, 128 );
                l_U37 = 5;
                 /* WRITESCRIPTLOG */ sub_2465( "SP", "eScriptState = SCRIPT_RUNNING", 0 );
            }
            break;
            case 5:
             /* P_HANDLE_DEBUG */ sub_27448();
            if (g_U829 < 14)
            {
                 /* P_HANDLE_CHECKPOINT_THREADS */ sub_34282( ref g_U861, 14 );
                 /* P_HANDLE_STREAMREQ */ sub_35348( ref g_U1030, ref g_U1247, ref g_U1368, ref g_U1429, ref g_U1638, ref g_U1783, ref g_U1910, ref g_U1950 );
            }
            else
            {
                 /* P_HANDLE_PEOPLEMOVER_PLACEMENT_WIDGET */ sub_42565();
                 /* P_HANDLE_ESCALATOR_PLACEMENT_WIDGET */ sub_44252();
            }
            break;
        }
        WAIT( 0 );
    }
    SET_EXITFLAG_RESPONSE();
     /* WRITESCRIPTLOG */ sub_2465( "AT", "s_air startup.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_2465(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_SETUP_WEATHER_TIMEOFDAY */ void sub_2796()
{
     /* WRITESCRIPTLOG */ sub_2465( "MF", "P_SETUP_WEATHER_TIMEOFDAY", "###" );
    if ((g_U829 == 20) || (g_U829 == 0))
    {
         /* P_SET_WEATHER_TOD_9CLOUDY */ sub_2898();
    }
    else if (g_U829 < 8)
    {
         /* P_SET_WEATHER_TOD_SUNNY */ sub_2994();
    }
    else if (g_U829 < 20)
    {
         /* P_SET_WEATHER_TOD_6CLOUDY */ sub_3087();
    }
    else if (g_U829 < 28)
    {
         /* P_SET_WEATHER_TOD_SUNNY */ sub_2994();
    }
    else
    {
         /* P_SET_WEATHER_TOD_6CLOUDY */ sub_3087();
    };;;;
    return;
}

/* P_SET_WEATHER_TOD_9CLOUDY */ void sub_2898()
{
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
    FREEZE_TIME_OF_DAY( 9, 0 );
    return;
}

/* P_SET_WEATHER_TOD_SUNNY */ void sub_2994()
{
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
    FREEZE_TIME_OF_DAY( 9, 0 );
    return;
}

/* P_SET_WEATHER_TOD_6CLOUDY */ void sub_3087()
{
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
    FREEZE_TIME_OF_DAY( 6, 0 );
    return;
}

/* P_SETUP_START_POSITIONS */ void sub_3206()
{
     /* WRITESCRIPTLOG */ sub_2465( "MF", "P_SETUP_START_POSITIONS", "###" );
    g_U2014[0] = {51.97000000, -111.13000000, -0.97000000};
    g_U2129[0] = 90.00000000;
    g_U2168[0] = 0.00000000;
    g_U2207[0] = 0.00000000;
    g_U2014[1] = {38.70000000, -148.60000000, -1.49000000};
    g_U2129[1] = 0.00000000;
    g_U2168[1] = 0.00000000;
    g_U2207[1] = -5.00000000;
    g_U2014[2] = {10.45000000, -131.65000000, 2.63000000};
    g_U2129[2] = 90.20685000;
    g_U2168[2] = 86.22585000;
    g_U2207[2] = 4.87870800;
    g_U2014[3] = {-49.38100000, -153.29600000, 4.38700000};
    g_U2129[3] = 278.10960000;
    g_U2168[3] = 69.04710000;
    g_U2207[3] = 1.37897500;
    g_U2014[4] = {-52.86305000, -22.82466000, 4.40297000};
    g_U2129[4] = 134.26930000;
    g_U2168[4] = -84.77364000;
    g_U2207[4] = -6.02242300;
    g_U2014[5] = {-78.23000000, 96.89000000, -4.42000000};
    g_U2129[5] = 0.00000000;
    g_U2168[5] = 0.00000000;
    g_U2207[5] = 0.00000000;
    g_U2014[6] = {-1047.70900000, 1784.36200000, -4.84000000};
    g_U2129[6] = 180.28370000;
    g_U2168[6] = 90.02221000;
    g_U2207[6] = -5.26426500;
    g_U2014[7] = {-498.69370000, 2228.66300000, -4.84000000};
    g_U2129[7] = 0.00000000;
    g_U2168[7] = 106.25000000;
    g_U2207[7] = -7.10000000;
    g_U2014[8] = {-1027.75200000, -525.51700000, -4.91000000};
    g_U2129[8] = 175.00000000;
    g_U2168[8] = 5.00000000;
    g_U2207[8] = 0.00000000;
    g_U2014[9] = {-828.90810000, -752.69540000, -6.73900100};
    g_U2129[9] = 290.00000000;
    g_U2168[9] = 69.60000000;
    g_U2207[9] = 4.00000000;
    g_U2014[10] = {-832.18500000, -753.58300000, -6.72200000};
    g_U2129[10] = 45.00000000;
    g_U2168[10] = 11.00000000;
    g_U2207[10] = -8.00000000;
    g_U2014[11] = {-820.55000000, -712.14000000, -6.74600000};
    g_U2129[11] = -110.00000000;
    g_U2168[11] = 0.00000000;
    g_U2207[11] = 0.00000000;
    g_U2014[12] = {-824.50360000, -709.16240000, -6.74649000};
    g_U2129[12] = 0.00000000;
    g_U2168[12] = -17.00000000;
    g_U2207[12] = 1.00000000;
    g_U2014[13] = {-619.00160000, -592.16960000, -6.74649000};
    g_U2129[13] = 0.00000000;
    g_U2168[13] = 0;
    g_U2207[13] = 1.50000000;
    g_U2014[20] = {g_U2014[0]};
    g_U2129[20] = g_U2129[0];
    g_U2168[20] = g_U2168[0];
    g_U2207[20] = g_U2207[0];
    g_U2014[21] = {g_U2014[1]};
    g_U2129[21] = g_U2129[1];
    g_U2168[21] = g_U2168[1];
    g_U2207[21] = g_U2207[1];
    g_U2014[22] = {g_U2014[2]};
    g_U2129[22] = g_U2129[2];
    g_U2168[22] = g_U2168[2];
    g_U2207[22] = g_U2207[2];
    g_U2014[23] = {g_U2014[3]};
    g_U2129[23] = g_U2129[3];
    g_U2168[23] = g_U2168[3];
    g_U2207[23] = g_U2207[3];
    g_U2014[24] = {g_U2014[4]};
    g_U2129[24] = g_U2129[4];
    g_U2168[24] = g_U2168[4];
    g_U2207[24] = g_U2207[4];
    g_U2014[25] = {g_U2014[5]};
    g_U2129[25] = g_U2129[5];
    g_U2168[25] = g_U2168[5];
    g_U2207[25] = g_U2207[5];
    g_U2014[26] = {g_U2014[6]};
    g_U2129[26] = g_U2129[6];
    g_U2168[26] = g_U2168[6];
    g_U2207[26] = g_U2207[6];
    g_U2014[27] = {g_U2014[7]};
    g_U2129[27] = g_U2129[7];
    g_U2168[27] = g_U2168[7];
    g_U2207[27] = g_U2207[7];
    g_U2014[28] = {g_U2014[8]};
    g_U2129[28] = g_U2129[8];
    g_U2168[28] = g_U2168[8];
    g_U2207[28] = g_U2207[8];
    g_U2014[29] = {g_U2014[9]};
    g_U2129[29] = g_U2129[9];
    g_U2168[29] = g_U2168[9];
    g_U2207[29] = g_U2207[9];
    g_U2014[30] = {g_U2014[11]};
    g_U2129[30] = g_U2129[11];
    g_U2168[30] = g_U2168[11];
    g_U2207[30] = g_U2207[11];
    g_U2014[31] = {-627.69970000, -669.72900000, -6.73734300};
    g_U2129[31] = 316.99980000;
    g_U2168[31] = 5.12941700;
    g_U2207[31] = -0.95321500;
    g_U2014[32] = {-622.00000000, 1109.00000000, -5.73000000};
    g_U2129[32] = 316.99980000;
    g_U2168[32] = 5.12941700;
    g_U2207[32] = -0.95321500;
    g_U2014[33] = {29.75658000, -143.98990000, -2.40177200};
    g_U2129[33] = 21.74370000;
    g_U2168[33] = -3.94001200;
    g_U2207[33] = -5.57664300;
    g_U2014[34] = {29.75658000, -143.98990000, -2.40177200};
    g_U2129[34] = 21.74370000;
    g_U2168[34] = -3.94001200;
    g_U2207[34] = -5.57664300;
    g_U2014[35] = {-836.30000000, -757.00000000, -6.70000000};
    g_U2129[35] = 300.00000000;
    g_U2168[35] = 20.00000000;
    g_U2207[35] = -8.00000000;
    g_U2014[36] = {29.75658000, -143.98990000, -2.40177200};
    g_U2129[36] = 21.74370000;
    g_U2168[36] = -3.94001200;
    g_U2207[36] = -5.57664300;
    g_U2014[37] = {-836.30000000, -757.00000000, -6.70000000};
    g_U2129[37] = 300.00000000;
    g_U2168[37] = -0.69320000;
    g_U2207[37] = -3.00000000;
    return;
}

/* P_CREATE_PLAYER */ void sub_5455()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

     /* WRITESCRIPTLOG */ sub_2465( "AT", "P_CREATE_PLAYER", 0 );
    uVar2 = {g_U2014[g_U829]};
    uVar5 = g_U2129[g_U829];
    if (IS_CUSTOM_PLAYER_VARIATION() == 0)
    {
        if (g_U829 == 0)
        {
             /* F_GETMEMAX */ sub_5575( 33, uVar2, 0 );
        }
        else if (g_U829 < 8)
        {
             /* F_GETMEMAX */ sub_5575( 34, uVar2, 0 );
        }
        else if (g_U829 < 11)
        {
             /* F_GETMEMAX */ sub_5575( 35, uVar2, 0 );
        }
        else
        {
             /* F_GETMEMAX */ sub_5575( 36, uVar2, 0 );
        };;;
        if (g_U829 == 0)
        {
            PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_5612(), 2, 31, 0, 2 );
            PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_5612(), 4, 2, 0, 2 );
        }
        if (g_U829 < 8)
        {
            PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_5612(), 0, 0, 19, 0 );
            PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_5612(), 2, 22, 0, 0 );
            PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_5612(), 3, 17, 0, 0 );
            PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_5612(), 5, 8, 0, 0 );
            PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_5612(), 6, 1, 2, 0 );
            PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_5612(), 12, 0, 1, 0 );
        }
        if (g_U829 < 11)
        {
            PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_5612(), 0, 0, 7, 1 );
            PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_5612(), 2, 17, 0, 1 );
            PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_5612(), 3, 13, 0, 1 );
            PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_5612(), 5, 8, 0, 1 );
            PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_5612(), 6, 5, 0, 1 );
            PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_5612(), 11, 4, 0, 1 );
            PRELOAD_PLAYER_VARIATION(  /* PLAYER_PED_ID */ sub_5612(), 12, 2, 0, 1 );
        }
    }
    else
    {
        uVar6 =  /* F_GET_ALTERNATE_PLAYER_VARIATION */ sub_19410( GET_CUSTOM_PLAYER_VARIATION() );
         /* F_GETMEMAX */ sub_5575( uVar6, uVar2, 0 );
        if (( /* F_DOES_VARIATION_USE_HOLSTERS */ sub_19853( uVar6 )) == 1)
        {
            SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_5612(), 0, 1 );
            SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_5612(), 1, 1 );
        }
        else
        {
            SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_5612(), 0, 0 );
            SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_5612(), 1, 0 );
        }
    }
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5612() )) == 0)
    {
         /* TELEPORTPED */ sub_20826(  /* PLAYER_PED_ID */ sub_5612(), uVar2, uVar5 );
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_5612(), 1 );
        SET_LOAD_COLLISION_FOR_PED_FLAG(  /* PLAYER_PED_ID */ sub_5612(), 1 );
        REQUEST_COLLISION_AT_COORD( uVar2 );
    }
    if (g_U829 > 1)
    {
        SET_PAYNEKILLER_AMT( 9 );
    }
    else
    {
        SET_PAYNEKILLER_AMT( 3 );
    }
    return;
}

/* F_GETMEMAX */ void sub_5575(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown Result;
    unknown uVar8;

    Result = CREATE_PLAYER( uParam4, uParam1 );
    uVar8 =  /* PLAYER_PED_ID */ sub_5612();
    switch (uParam0)
    {
        case 0:
         /* P_MAKEINTROMAX_A */ sub_6105( uVar8 );
        break;
        case 1:
         /* P_MAKEINTROMAX_B */ sub_6366( uVar8 );
        break;
        case 2:
         /* P_MAKEINTROMAX_C */ sub_6627( uVar8 );
        break;
        case 3:
         /* P_MAKEROOFTOPPARTYMAX */ sub_6888( uVar8 );
        break;
        case 4:
         /* P_MAKEROOFTOPPARTYWETMAX */ sub_7159( uVar8 );
        break;
        case 5:
         /* P_MAKENIGHTCLUBMAX */ sub_7436( uVar8 );
        break;
        case 6:
         /* P_MAKENIGHTCLUBHELIHANGMAX */ sub_7701( uVar8 );
        break;
        case 8:
         /* P_MAKESTADIUMMAX */ sub_7982( uVar8 );
        break;
        case 9:
         /* P_MAKESTADIUMBMAX */ sub_8243( uVar8 );
        break;
        case 10:
         /* P_MAKESTADIUMCMAX */ sub_8506( uVar8 );
        break;
        case 11:
         /* P_MAKENY_TRIPMAX */ sub_8769( uVar8 );
        break;
        case 12:
         /* P_MAKENYBARMAX */ sub_9030( uVar8 );
        break;
        case 13:
         /* P_MAKEDOCKSMAX */ sub_9287( uVar8 );
        break;
        case 14:
         /* P_MAKEDOCKSRSV1MAX */ sub_9544( uVar8 );
        break;
        case 15:
         /* P_MAKEDOCKSRSV2MAX */ sub_9809( uVar8 );
        break;
        case 16:
         /* P_MAKEOFFICEMAX */ sub_10074( uVar8 );
        break;
        case 17:
         /* P_MAKEOFFICEFIREMAX */ sub_10333( uVar8 );
        break;
        case 18:
         /* P_MAKEFAVELA1V1MAX */ sub_10600( uVar8 );
        break;
        case 19:
         /* P_MAKEFAVELA1V2MAX */ sub_10865( uVar8 );
        break;
        case 20:
         /* P_MAKECEMETARYMAX */ sub_11130( uVar8 );
        break;
        case 21:
         /* P_MAKEFAVELA2V1MAX */ sub_11393( uVar8 );
        break;
        case 22:
         /* P_MAKEFAVELA2V2MAX */ sub_11658( uVar8 );
        break;
        case 23:
         /* P_MAKEFAVELA2V3MAX */ sub_11923( uVar8 );
        break;
        case 24:
         /* P_MAKEBUSDEPOTV1MAX */ sub_12188( uVar8 );
        break;
        case 25:
         /* P_MAKEBUSDEPOTV2MAX */ sub_12455( uVar8 );
        break;
        case 26:
         /* P_MAKEPANAMAMAX */ sub_12722( uVar8 );
        break;
        case 27:
         /* P_MAKEHOTELMAX */ sub_12981( uVar8 );
        break;
        case 28:
         /* P_MAKEHOTELMAXWITHBAG */ sub_13238( uVar8 );
        break;
        case 29:
         /* P_MAKEPOLICEBINKMAX */ sub_13509( uVar8 );
        break;
        case 30:
         /* P_MAKEPOLICEPRECINCTV1MAX */ sub_13776( uVar8 );
        break;
        case 31:
         /* P_MAKEPOLICEPRECINCTV2MAX */ sub_14055( uVar8 );
        break;
        case 32:
         /* P_MAKEPOLICEPRECINCTWITHVESTMAX */ sub_14334( uVar8 );
        break;
        case 33:
         /* P_MAKEAIRPORTMAXA */ sub_14625( uVar8 );
        break;
        case 34:
         /* P_MAKEAIRPORTMAXB */ sub_14888( uVar8 );
        break;
        case 35:
         /* P_MAKEAIRPORTMAXC */ sub_15151( uVar8 );
        break;
        case 36:
         /* P_MAKEAIRPORTMAXD */ sub_15414( uVar8 );
        break;
        case 37:
         /* P_MAKEBEACHMAX */ sub_15677( uVar8 );
        break;
        case 38:
         /* P_MAKEPILLZNBOOZEPART1MAX */ sub_15949( uVar8 );
        break;
        case 39:
         /* P_MAKEPILLZNBOOZEPART2V1MAX */ sub_16228( uVar8 );
        break;
        case 40:
         /* P_MAKEPILLZNBOOZEPART2V2MAX */ sub_16511( uVar8 );
        break;
        case 41:
         /* P_MAKEPILLZNBOOZEPART3MAX */ sub_16794( uVar8 );
        break;
        case 42:
         /* P_MAKEPILLZNBOOZEPART4V1MAX */ sub_17073( uVar8 );
        break;
        case 43:
         /* P_MAKEPILLZNBOOZEPART4V2MAX */ sub_17356( uVar8 );
        break;
        case 44:
         /* P_MAKEMAXPAYNE1COLORMAX */ sub_17641(  /* PLAYER_PED_ID */ sub_5612() );
        break;
        case 45:
         /* P_MAKEMAXPAYNE1BLACKWHITEMAX */ sub_17920(  /* PLAYER_PED_ID */ sub_5612() );
        break;
        case 46:
         /* P_MAKEMAXPAYNE2COLORMAX */ sub_18209(  /* PLAYER_PED_ID */ sub_5612() );
        break;
        case 47:
         /* P_MAKEMAXPAYNE2BLACKWHITEMAX */ sub_18488(  /* PLAYER_PED_ID */ sub_5612() );
        break;
        case 48:
         /* P_MAKE16BITMAX */ sub_18777(  /* PLAYER_PED_ID */ sub_5612() );
        break;
    }
    return Result;
}

/* PLAYER_PED_ID */ int sub_5612()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_5650() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_5650()
{
    return GET_PLAYER_ID();
}

/* P_MAKEINTROMAX_A */ void sub_6105(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeIntroMax_A", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEINTROMAX_B */ void sub_6366(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeIntroMax_B", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 29, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEINTROMAX_C */ void sub_6627(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeIntroMax_C", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEROOFTOPPARTYMAX */ void sub_6888(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeRooftopPartyMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEROOFTOPPARTYWETMAX */ void sub_7159(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeRooftopPartyWetMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 17, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 27, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 16, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 8, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKENIGHTCLUBMAX */ void sub_7436(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeNightclubMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKENIGHTCLUBHELIHANGMAX */ void sub_7701(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeNightclubHeliHangMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 24, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKESTADIUMMAX */ void sub_7982(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeStadiumMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKESTADIUMBMAX */ void sub_8243(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeStadiumBMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKESTADIUMCMAX */ void sub_8506(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeStadiumCMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKENY_TRIPMAX */ void sub_8769(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeNY_TripMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 28, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKENYBARMAX */ void sub_9030(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeNYBarMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEDOCKSMAX */ void sub_9287(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeDocksMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 17, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEDOCKSRSV1MAX */ void sub_9544(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeDocksRSV1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 16, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 23, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 14, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEDOCKSRSV2MAX */ void sub_9809(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeDocksRSV2Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 16, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 23, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 14, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 11, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEOFFICEMAX */ void sub_10074(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeOfficeMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEOFFICEFIREMAX */ void sub_10333(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeOfficeFireMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 6, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 14, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEFAVELA1V1MAX */ void sub_10600(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeFavela1V1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 9, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

/* P_MAKEFAVELA1V2MAX */ void sub_10865(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeFavela1V2Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 13, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 7, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

/* P_MAKECEMETARYMAX */ void sub_11130(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeCemetaryMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEFAVELA2V1MAX */ void sub_11393(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeFavela2V1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 7, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

/* P_MAKEFAVELA2V2MAX */ void sub_11658(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeFavela2V2Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

/* P_MAKEFAVELA2V3MAX */ void sub_11923(unknown uParam0)
{
    DISPLAYF( "[rw] P_MakeFavela2V3Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 30, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

/* P_MAKEBUSDEPOTV1MAX */ void sub_12188(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeBusDepotV1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 4, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEBUSDEPOTV2MAX */ void sub_12455(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeBusDepotV2Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 4, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPANAMAMAX */ void sub_12722(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePanamaMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 5, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 18, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEHOTELMAX */ void sub_12981(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeHotelMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 5, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEHOTELMAXWITHBAG */ void sub_13238(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeHotelMaxWithBag", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 5, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPOLICEBINKMAX */ void sub_13509(unknown uParam0)
{
    DISPLAYF( "[rw] P_MakePoliceBinkMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 16, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPOLICEPRECINCTV1MAX */ void sub_13776(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePolicePrecinctV1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPOLICEPRECINCTV2MAX */ void sub_14055(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePolicePrecinctV2Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 10, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 21, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 0, 0 );
    }
    return;
}

/* P_MAKEPOLICEPRECINCTWITHVESTMAX */ void sub_14334(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePolicePrecinctWithVestMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 11, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 20, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 1, 0 );
    }
    return;
}

/* P_MAKEAIRPORTMAXA */ void sub_14625(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeAirportMaxA", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 12, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 25, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEAIRPORTMAXB */ void sub_14888(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeAirportMaxB", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 12, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 15, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEAIRPORTMAXC */ void sub_15151(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeAirportMaxC", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 19, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 22, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 17, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 1, 0 );
    }
    return;
}

/* P_MAKEAIRPORTMAXD */ void sub_15414(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeAirportMaxC", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 7, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 17, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 2, 0, 0 );
    }
    return;
}

/* P_MAKEBEACHMAX */ void sub_15677(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeBeachMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 18, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 19, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
        SET_PED_PROP_INDEX( uParam0, 0, 0, 0, 255 );
    }
    return;
}

/* P_MAKEPILLZNBOOZEPART1MAX */ void sub_15949(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePillzNBoozePart1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPILLZNBOOZEPART2V1MAX */ void sub_16228(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePillzNBoozePart2V1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPILLZNBOOZEPART2V2MAX */ void sub_16511(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePillzNBoozePart2V2Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPILLZNBOOZEPART3MAX */ void sub_16794(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePillzNBoozePart3Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 26, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPILLZNBOOZEPART4V1MAX */ void sub_17073(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePillzNBoozePart4V1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 8, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPILLZNBOOZEPART4V2MAX */ void sub_17356(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePillzNBoozePart4V2Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 8, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 7, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEMAXPAYNE1COLORMAX */ void sub_17641(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeMaxPayne1ColorMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 34, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 19, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 16, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 4, 0, 0 );
    }
    return;
}

/* P_MAKEMAXPAYNE1BLACKWHITEMAX */ void sub_17920(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeMaxPayne1BlackWhiteMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 13, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 34, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 19, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 16, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 7, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 4, 1, 0 );
    }
    return;
}

/* P_MAKEMAXPAYNE2COLORMAX */ void sub_18209(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeMaxPayne2ColorMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 32, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 18, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEMAXPAYNE2BLACKWHITEMAX */ void sub_18488(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeMaxPayne2BlackWhiteMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 32, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 18, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 11, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 10, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 16, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 5, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 1, 0 );
    }
    return;
}

/* P_MAKE16BITMAX */ void sub_18777(unknown uParam0)
{
    DISPLAYF( "[SP] P_Make16BitMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 33, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 15, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* F_GET_ALTERNATE_PLAYER_VARIATION */ int sub_19410(unknown uParam0)
{
    unknown uVar3;

    uVar3 = uParam0;
    switch (uVar3)
    {
        case 1:
        return 44;
        break;
        case 2:
        return 46;
        break;
        case 3:
        return 3;
        break;
        case 4:
        return 10;
        break;
        case 5:
        return 15;
        break;
        case 6:
        return 18;
        break;
        case 7:
        return 20;
        break;
        case 8:
        return 24;
        break;
        case 9:
        return 26;
        break;
        case 10:
        return 31;
        break;
        case 11:
        return 36;
        break;
        case 12:
        return 1;
        break;
        case 13:
        return 16;
        break;
        case 14:
        return 29;
        break;
        case 15:
        return 32;
        break;
        case 16:
        return 41;
        break;
        case 17:
        return 37;
        break;
        case 18:
        return 48;
        break;
        case 19:
        return 45;
        break;
        case 20:
        return 47;
        break;
    }
    return 49;
}

/* F_DOES_VARIATION_USE_HOLSTERS */ int sub_19853(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        return 0;
        break;
        case 1:
        return 0;
        break;
        case 2:
        return 0;
        break;
        case 3:
        return 0;
        break;
        case 4:
        return 0;
        break;
        case 5:
        return 0;
        break;
        case 6:
        return 0;
        break;
        case 8:
        return 1;
        break;
        case 9:
        return 1;
        break;
        case 10:
        return 1;
        break;
        case 11:
        return 0;
        break;
        case 12:
        return 0;
        break;
        case 13:
        return 1;
        break;
        case 14:
        return 1;
        break;
        case 15:
        return 1;
        break;
        case 16:
        return 0;
        break;
        case 17:
        return 0;
        break;
        case 18:
        return 1;
        break;
        case 19:
        return 1;
        break;
        case 20:
        return 0;
        break;
        case 21:
        return 1;
        break;
        case 22:
        return 1;
        break;
        case 23:
        return 1;
        break;
        case 24:
        return 1;
        break;
        case 25:
        return 1;
        break;
        case 26:
        return 1;
        break;
        case 27:
        return 1;
        break;
        case 28:
        return 1;
        break;
        case 29:
        return 0;
        break;
        case 30:
        return 1;
        break;
        case 31:
        return 1;
        break;
        case 32:
        return 1;
        break;
        case 33:
        return 0;
        break;
        case 34:
        return 1;
        break;
        case 35:
        return 1;
        break;
        case 36:
        return 1;
        break;
        case 37:
        return 0;
        break;
        case 38:
        return 0;
        break;
        case 39:
        return 0;
        break;
        case 40:
        return 0;
        break;
        case 41:
        return 0;
        break;
        case 42:
        return 0;
        break;
        case 43:
        return 0;
        break;
        case 44:
        return 0;
        break;
        case 45:
        return 0;
        break;
        case 46:
        return 0;
        break;
        case 47:
        return 0;
        break;
        case 48:
        return 0;
        break;
    }
    return 0;
}

/* TELEPORTPED */ void sub_20826(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_SETUP_PLAYER_RELATIONSHIPS */ void sub_20974()
{
     /* WRITESCRIPTLOG */ sub_2465( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", "###" );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5612() )) == 0)
    {
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_5612(), 0, 1 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_5612(), 0, 2 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_5612(), 0, 6 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_5612(), 0, 7 );
    }
    return;
}

/* P_LOAD_AREA */ void sub_21378()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    string sVar7;
    unknown uVar8;

     /* WRITESCRIPTLOG */ sub_2465( "AT", "P_LOAD_AREA", "###" );
    uVar2 = {g_U2014[g_U829]};
    uVar5 = g_U2129[g_U829];
    iVar6 = -1;
    sVar7 = "";
    switch (g_U829)
    {
        case 0:
        case 20:
        iVar6 = GET_HASH_KEY( "ap_ticket_B" );
        sVar7 = "MILO_ap_ticket";
        break;
        case 1:
        case 21:
        iVar6 = GET_HASH_KEY( ref g_U2246 );
        sVar7 = "MILO_ap_bgsort";
        break;
        case 2:
        case 22:
        iVar6 = GET_HASH_KEY( ref g_U2254 );
        sVar7 = "MILO_ap_mhalls";
        break;
        case 3:
        case 23:
        iVar6 = GET_HASH_KEY( ref g_U2278 );
        sVar7 = "MILO_ap_depart";
        break;
        case 4:
        case 24:
        iVar6 = GET_HASH_KEY( ref g_U2286 );
        sVar7 = "Gta_MILO_cafe";
        break;
        case 5:
        case 25:
        iVar6 = GET_HASH_KEY( ref g_U2302 );
        sVar7 = "Gta_MILO_plat1";
        break;
        case 6:
        case 26:
        iVar6 = -1;
        break;
        case 7:
        case 27:
        iVar6 = -1;
        break;
        case 8:
        case 28:
        iVar6 = -1;
        break;
        case 35:
        iVar6 = GET_HASH_KEY( ref g_U2358 );
        sVar7 = "MILO_hangar";
        break;
        case 9:
        case 10:
        case 29:
        iVar6 = GET_HASH_KEY( ref g_U2358 );
        sVar7 = "MILO_hangar";
        break;
        case 12:
        case 13:
        case 31:
        case 32:
        iVar6 = -1;
        break;
        case 33:
        case 34:
        case 36:
        iVar6 = GET_HASH_KEY( ref g_U2246 );
        sVar7 = "MILO_ap_bgsort";
        break;
    }
    if (iVar6 == -1)
    {
        LOAD_SCENE( uVar2 );
    }
    else
    {
        uVar8 = GET_INTERIOR_FROM_NAME( sVar7, 0 );
        SET_INTERIOR_ACTIVE( uVar8, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar8, iVar6 );
    }
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5612() )) == 0)
    {
        SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_5612(), uVar2, 1 );
        SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_5612(), uVar5 );
        if (iVar6 != -1)
        {
            SET_ROOM_FOR_PED_BY_KEY(  /* PLAYER_PED_ID */ sub_5612(), iVar6 );
        }
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_5612(), 0 );
    }
    if (g_U830 == 12)
    {
        LOAD_SCENE( -673.08000000, -720.19460000, -4.54583900 );
        LOAD_SCENE( -447.41930000, -668.31260000, -3.62771300 );
        LOAD_SCENE( 104.01870000, -537.78030000, 35.01804000 );
        LOAD_SCENE( 99.67129000, -656.41140000, 25.83919000 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[g_U829], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[g_U829], 1065353216, 0 );
    return;
}

/* P_FADE_IN_AND_WAIT */ void sub_22395(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            DISPLAYF( "[SP]### Waiting for screen to fade in... ###", 0 );
            WAIT( 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_22586(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_22971( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_22971(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* LOADNEWSCRIPTFILE */ void sub_23066(unknown uParam0, unknown uParam1)
{
    REQUEST_SCRIPT( uParam0 );
    "[doubled result, dropped if not asigned]";
    while ((HAS_SCRIPT_LOADED( uParam0 )) == 0)
    {
        DISPLAYF( "[SP]### Waiting for a script to be loaded: {} ###", 1, 1537, uParam0 );
        WAIT( 0 );
    }
    DISPLAYF( "[SP]### Script loaded! ###", 0 );
    START_NEW_SCRIPT( uParam0, uParam1 );
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_23404(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_23537( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* LOADMODEL */ void sub_23537(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_22971( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_SETUP_LEVEL_FLOW */ void sub_24695()
{
    int I;

     /* WRITESCRIPTLOG */ sub_2465( "MF", "P_SETUP_LEVEL_FLOW", "###" );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_24796( ref g_U861[0], "s_air_BagProcessing", 8192, 1 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_24796( ref g_U861[1], "s_air_BagProcessing", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_24796( ref g_U861[2], "s_air_DesertedHallways", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_24796( ref g_U861[3], "s_air_Departures", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_24796( ref g_U861[4], "s_air_TramConcessions", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_24796( ref g_U861[5], "s_air_Tram_Platform_Part2", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_24796( ref g_U861[6], "s_air_Tram_2_Part1", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_24796( ref g_U861[7], "s_air_Tram_2_Part2", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_24796( ref g_U861[8], "s_air_Finale_MPM", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_24796( ref g_U861[9], "s_air_Becker", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_24796( ref g_U861[10], "s_air_Becker", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_24796( ref g_U861[11], "s_air_KillBecker", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_24796( ref g_U861[12], "s_air_Runway_1", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_24796( ref g_U861[13], "s_air_Runway_2", 8192, 0 );
     /* P_INIT_CHECKPOINT_THREAD_ARRAY */ sub_25365( ref g_U861, g_U829, 14 );
    for ( I = 0; I < 14; I++ )
    {
        g_U831[I] = 0;
        g_U846[I] = 0;
    }
    return;
}

/* P_SETUP_CHECKPOINT_THREAD */ void sub_24796(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    StrCopy( ref iParam0->_fU0, uParam1, 32 );
    iParam0->_fU32 = nil;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = uParam2;
    iParam0->_fU36 = uParam3;
    return;
}

/* P_INIT_CHECKPOINT_THREAD_ARRAY */ void sub_25365(unknown uParam0, int iParam1, int iParam2)
{
    int I;

    for ( I = 0; I <= (iParam2 - 1); I++ )
    {
        if (iParam1 == I)
        {
            (uParam0^)[I]._fU36 = 1;
        }
        else
        {
            (uParam0^)[I]._fU36 = 0;
        }
    }
    return;
}

/* P_SETUP_STREAMREQ */ void sub_25532()
{
     /* WRITESCRIPTLOG */ sub_2465( "SP", "P_SETUP_STREAMREQ", 0 );
     /* P_STREAMREQ_MODELNAMES_RESET_STRUCT */ sub_25597( ref g_U1030 );
     /* P_STREAMREQ_WEAPON_TYPE_RESET_STRUCT */ sub_25795( ref g_U1247 );
     /* P_STREAMREQ_ISEQ_RESET_STRUCT */ sub_25916( ref g_U1368 );
     /* P_STREAMREQ_ANIM_DICT_RESET_STRUCT */ sub_26030( ref g_U1429 );
     /* P_STREAMREQ_VEHICLE_RECORDING_RESET_STRUCT */ sub_26156( ref g_U1638 );
     /* P_STREAMREQ_ACTION_TREE_RESET_STRUCT */ sub_26283( ref g_U1783 );
     /* P_STREAMREQ_SCRIPT_STREAM_RESET_STRUCT */ sub_26411( ref g_U1910 );
     /* P_STREAMREQ_AUDIO_BANK_RESET_STRUCT */ sub_26541( ref g_U1950 );
    return;
}

/* P_STREAMREQ_MODELNAMES_RESET_STRUCT */ void sub_25597(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU0 = 0;
        (uParam0^)[I]._fU4 = 0;
         /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[I]._fU8 );
    }
    return;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_25689(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_RESET_STRUCT */ void sub_25795(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU0 = 0;
        (uParam0^)[I]._fU4 = 0;
         /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[I]._fU8 );
    }
    return;
}

/* P_STREAMREQ_ISEQ_RESET_STRUCT */ void sub_25916(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU0 = 0;
        (uParam0^)[I]._fU4 = 0;
         /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[I]._fU8 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_RESET_STRUCT */ void sub_26030(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        StrCopy( ref (uParam0^)[I]._fU0, "", 32 );
        (uParam0^)[I]._fU32 = 0;
         /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[I]._fU36 );
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_RESET_STRUCT */ void sub_26156(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU0 = -1;
        (uParam0^)[I]._fU4 = 0;
         /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[I]._fU8 );
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_RESET_STRUCT */ void sub_26283(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        StrCopy( ref (uParam0^)[I]._fU0, "", 64 );
        (uParam0^)[I]._fU64 = 0;
         /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[I]._fU68 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_RESET_STRUCT */ void sub_26411(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        StrCopy( ref (uParam0^)[I]._fU0, "", 32 );
        (uParam0^)[I]._fU32 = 0;
         /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[I]._fU36 );
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_RESET_STRUCT */ void sub_26541(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        StrCopy( ref (uParam0^)[I]._fU0, "", 64 );
        (uParam0^)[I]._fU64 = 0;
         /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[I]._fU68 );
    }
    return;
}

/* P_START_GOLDENGUNS */ void sub_26727()
{
    LOAD_TEXTURE_DICT( "gg_s_air" );
     /* WRITESCRIPTLOG */ sub_2465( "CO", "Starting the S_AIR_GG_RG context...", 0 );
    START_CONTEXT( "S_AIR_GG_RG" );
     /* WRITESCRIPTLOG */ sub_2465( "CO", "Starting the S_POL_GG_RP context...", 0 );
    START_CONTEXT( "S_AIR_GG_PD" );
    return;
}

/* P_SETUP_FINALE_DOORS */ void sub_26925()
{
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_26976(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_27020();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_27020()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_HANDLE_DEBUG */ void sub_27448()
{
     /* P_DEBUG_TOGGLE */ sub_27475();
     /* P_DEBUG_OUTPUT_PLAYER_POSITION */ sub_27641();
     /* P_DEBUG_CHECK_FOR_KILL_KEY */ sub_28993();
     /* P_DEBUG_CHECK_FOR_RELAX_KEY */ sub_29088();
     /* P_DEBUG_HANDLE_KILL_RADIUS */ sub_29382( 1097859072 );
     /* P_DEBUG_HANDLE_PLACEMENT_WIDGET */ sub_29833();
     /* MAL_HANDLE_TELEPORT_PLAYER_WIDGET */ sub_33218();
    return;
}

/* P_DEBUG_TOGGLE */ void sub_27475()
{
    if (IS_KEYBOARD_KEY_JUST_PRESSED( 38 ))
    {
        if (l_U0)
        {
            l_U0 = 0;
            SET_DEBUG_ACTIVE( 0 );
            PRINTSTRING( "debug off" );
            PRINTNL();
        }
        else
        {
            l_U0 = 1;
            SET_DEBUG_ACTIVE( 1 );
            PRINTSTRING( "debug on" );
            PRINTNL();
        }
        while (IS_KEYBOARD_KEY_PRESSED( 38 ))
        {
            WAIT( 0 );
        }
    }
    return;
}

/* P_DEBUG_OUTPUT_PLAYER_POSITION */ void sub_27641()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;

    iVar2 = 0;
    if (DOES_PAD_EXIST( 0 ))
    {
        iVar2 = IS_BUTTON_JUST_PRESSED( 0, 8 );
    }
    if ((IS_KEYBOARD_KEY_JUST_PRESSED( 25 )) || (iVar2))
    {
        uVar3 =  /* PLAYER_PED_ID */ sub_5612();
        if (NOT (IS_PED_DEAD( uVar3 )))
        {
            uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uVar3 )};
            uVar7 = GET_PED_HEADING( uVar3 );
            uVar8 = GET_DEBUG_CAM();
            uVar9 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_CAM_COORD( uVar8 )};
            uVar12 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_CAM_ROT( uVar8 )};
            uVar15 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD()};
            uVar18 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
            uVar21 = GET_GAMEPLAY_CAM_RELATIVE_HEADING();
            uVar22 = GET_GAMEPLAY_CAM_RELATIVE_PITCH();
            uVar24 = GET_GROUND_Z_FOR_3D_COORD( uVar4, ref uVar23 );
            PRINTNL();
            PRINTSTRING( "[SP] players position = <<" );
            PRINTFLOAT( uVar4._fU0 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar4._fU4 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar23 );
            PRINTSTRING( ">>" );
            PRINTNL();
            PRINTSTRING( "[SP] players heading = " );
            PRINTFLOAT( uVar7 );
            PRINTSTRING( "" );
            PRINTNL();
            PRINTSTRING( "[SP] Gameplay camera relative heading = " );
            PRINTFLOAT( uVar21 );
            PRINTNL();
            PRINTSTRING( "[SP] Gameplay camera relative pitch = " );
            PRINTFLOAT( uVar22 );
            PRINTNL();
            if ((IS_PED_IN_ANY_VEHICLE( uVar3 )) == 1)
            {
                 /* GET_PED_VEHICLE */ sub_28197( uVar3, ref uVar25, 1 );
                uVar26 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uVar25 )};
                uVar29 = GET_VEHICLE_HEADING( uVar25 );
                PRINTSTRING( "[SP] vehicle position = <<" );
                PRINTFLOAT( uVar26._fU0 );
                PRINTSTRING( ", " );
                PRINTFLOAT( uVar26._fU4 );
                PRINTSTRING( ", " );
                PRINTFLOAT( uVar26._fU8 );
                PRINTSTRING( ">>" );
                PRINTNL();
                PRINTSTRING( "[SP] vehicle heading = " );
                PRINTFLOAT( uVar29 );
                PRINTSTRING( "" );
                PRINTNL();
            }
            PRINTSTRING( "[SP] Debug camera position = <<" );
            PRINTFLOAT( uVar9._fU0 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar9._fU4 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar9._fU8 );
            PRINTSTRING( ">>" );
            PRINTNL();
            PRINTSTRING( "[SP] Debug camera rotation = <<" );
            PRINTFLOAT( uVar12._fU0 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar12._fU4 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar12._fU8 );
            PRINTSTRING( ">>" );
            PRINTNL();
            PRINTSTRING( "[SP] Gameplay camera position = <<" );
            PRINTFLOAT( uVar15._fU0 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar15._fU4 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar15._fU8 );
            PRINTSTRING( ">>" );
            PRINTNL();
            PRINTSTRING( "[SP] Gameplay camera rotation = <<" );
            PRINTFLOAT( uVar18._fU0 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar18._fU4 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar18._fU8 );
            PRINTSTRING( ">>" );
            PRINTNL();
        }
    }
    return;
}

/* GET_PED_VEHICLE */ int sub_28197(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (bParam2)
    {
        if (NOT (IS_PED_SITTING_IN_ANY_VEHICLE( uParam0 )))
        {
            return 0;
        }
    }
    else if (NOT (IS_PED_IN_ANY_VEHICLE( uParam0 )))
    {
        return 0;
    }
    (uParam1^) = GET_VEHICLE_PED_IS_IN( uParam0 );
    return 1;
}

/* P_DEBUG_CHECK_FOR_KILL_KEY */ void sub_28993()
{
    if ((IS_KEYBOARD_KEY_PRESSED( 20 )) == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5612() )) == 0)
        {
            SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_5612(), 0, 0 );
        }
    }
    return;
}

/* P_DEBUG_CHECK_FOR_RELAX_KEY */ void sub_29088()
{
    if ((IS_KEYBOARD_KEY_PRESSED( 19 )) == 1)
    {
         /* P_RELAX_PLAYER */ sub_29144( 0 );
    }
    return;
}

/* P_RELAX_PLAYER */ void sub_29144(int iParam0)
{
    if (((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_5650() )) == 0) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5612() )) == 0))
    {
        if (iParam0 == 1)
        {
            SET_PED_EMOTION_STATE(  /* PLAYER_PED_ID */ sub_5612(), 4 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_5612(), 1 );
        }
        else
        {
            SET_PED_EMOTION_STATE(  /* PLAYER_PED_ID */ sub_5612(), 3 );
        }
        CLEAR_PED_TASKS(  /* PLAYER_PED_ID */ sub_5612() );
        CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_5612() );
        PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_5612(), "/Global/Player/PlayerLoco/PlayerLoco_IDLE/RELAXED/relaxed_modes" );
    }
    return;
}

/* P_DEBUG_HANDLE_KILL_RADIUS */ void sub_29382(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    int iVar8;

    if ((IS_KEYBOARD_KEY_JUST_PRESSED( 37 )) == 1)
    {
         /* WRITE_STRING */ sub_22971( "[SP]### KILL ALL PEDS IN RADIUS ###" );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5612() )) == 0)
        {
            iVar3 = 0;
            uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_5612() )};
            iVar8 = 1;
            while (iVar8 == 1)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5612() )) == 0)
                {
                    iVar8 = GET_CLOSEST_ENEMY_PED(  /* PLAYER_PED_ID */ sub_5612(), uVar5, uParam0, 1, 1, 0, 1, 0, 1, ref uVar4 );
                    if (iVar8 == 1)
                    {
                        if (((GET_PED_HEALTH( uVar4 )) > 1) AND (((IS_PED_DEAD( uVar4 )) == 0) AND ((DOES_PED_EXIST( uVar4 )) == 1)))
                        {
                             /* WRITE_STRING */ sub_22971( "[SP]### thunderdome killing a ped ###" );
                             /* P_KILL_PED */ sub_29675( uVar4 );
                            SET_PED_GENERATES_DEAD_BODY_EVENTS( uVar4, 1 );
                            iVar3++;
                        }
                    }
                }
                WAIT( 0 );
            }
            PRINTSTRING( "[SP] num killed: " );
            PRINTINT( iVar3 );
            PRINTNL();
        }
    }
    return;
}

/* P_KILL_PED */ void sub_29675(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* P_DEBUG_HANDLE_PLACEMENT_WIDGET */ void sub_29833()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    char[8] cVar10;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    char[8] cVar20;
    char[8] cVar22;

    if (l_U25 == 0)
    {
        START_WIDGET_GROUP( "Placement Helper" );
        START_NEW_WIDGET_COMBO();
        ADD_TO_WIDGET_COMBO( "HEALTH_STANDARD" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_STANDARD" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_HELMET" );
        ADD_TO_WIDGET_COMBO( "WEAPON_BEANBAG_LAUNCHER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_GRENADE_LAUNCHER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_LAW" );
        ADD_TO_WIDGET_COMBO( "WEAPON_MG_21E" );
        ADD_TO_WIDGET_COMBO( "WEAPON_MG_RPD" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_38" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_COLT1911" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_DEAGLE" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_GLOCK18" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_PT92" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_TAURUS608" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_97LC" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_AK47" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_FAL" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_FAL_RUBBER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_G36K" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_RUG30" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIOT_SHIELD" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RPG" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_BENELLIM3" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_DOUBLEBARREL" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_MOSSBERG590" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_SPAS15" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_WINCHESTERSX3" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_FAMAEMT40" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_MAC10" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_MP5" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_PM12" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_UZI" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SNIPER_M82" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SNIPER_SG1" );
        ADD_TO_WIDGET_COMBO( "WEAPON_TASER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_FLASH" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_GRENADE" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_INCENDIARY" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_SMOKE" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_TEAR_GAS" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_TIN_CAN" );
        ADD_TO_WIDGET_COMBO( "INVENT_AMMOBAG" );
        ADD_TO_WIDGET_COMBO( "INVENT_PAYNE_KILLER" );
        ADD_TO_WIDGET_COMBO( "INVENT_AMMOBAG_CARRIED" );
        ADD_TO_WIDGET_COMBO( "INVENT_MPBAG_CARRIED" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_STEALTH_BOOTS" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_WALKIE_TALKIE" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_MONOCULAR" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_FIRST_AID_KIT" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_HYPO" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_SUNGLASSES" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_NIGHTVISION" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_HEAVY" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_MAX" );
        l_U9 = STOP_WIDGET_COMBO( "PICKUP TYPE", ref l_U11 );
        ADD_WIDGET_BOOL( "Grab Player Position", ref l_U12 );
        ADD_WIDGET_BOOL( "Create Pickup", ref l_U13 );
        ADD_WIDGET_BOOL( "Output Placement Function", ref l_U14 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U18._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U18._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U18._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U21._fU0, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U21._fU4, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U21._fU8, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_BOOL( "Fixed", ref l_U15 );
        ADD_WIDGET_BOOL( "Limit Pickup Angle", ref l_U16 );
        ADD_WIDGET_FLOAT_SLIDER( "Half Angle", ref l_U17, 0.00000000, 360.00000000, 1.00000000 );
        ADD_WIDGET_BOOL( "Is placement in an Interior?", ref l_U24 );
        l_U10 = ADD_TEXT_WIDGET( "Interior Room Name" );
        SET_CONTENTS_OF_TEXT_WIDGET( l_U10, "" );
        STOP_WIDGET_GROUP();
        l_U25 = 1;
    }
    if (l_U13 == 1)
    {
         /* CLEANPLACEMENT */ sub_32001( l_U8 );
        l_U8 =  /* CREATEPLACEMENT */ sub_32714(  /* F_RETURN_PICKUP */ sub_32064( l_U11 ), l_U18, l_U21, l_U15, 1, l_U16, l_U17 );
        if (l_U24 == 1)
        {
            GET_CONTENTS_OF_TEXT_WIDGET( 32, ref uVar2, l_U10 );
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U8, ref uVar2 );
        }
        l_U13 = 0;
    }
    if (l_U12 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_5612() )) == 0)
        {
            l_U18 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_5612() )};
        }
        l_U12 = 0;
    }
    if (l_U14 == 1)
    {
        StrCopy( ref cVar10, "PICKUP_", 8 );
        GET_CONTENTS_OF_COMBO_WIDGET_SELECTION( 32, ref uVar12, l_U9 );
        StrCopy( ref cVar20, "FALSE", 8 );
        if (l_U15 == 1)
        {
            StrCopy( ref cVar20, "TRUE", 8 );
        }
        StrCopy( ref cVar22, "FALSE", 8 );
        if (l_U16 == 1)
        {
            StrCopy( ref cVar22, "TRUE", 8 );
        }
        DISPLAYF( "CreatePlacement({0}{1}, (<<{2}>>), (<<{3}>>), {4}, {5}, {6}, {7})", 8, 1281, ref cVar10, 1281, ref uVar12, 1027, l_U18, 1027, l_U21, 1281, ref cVar20, 1537, "TRUE", 1281, ref cVar22, 769, l_U17 );
        l_U14 = 0;
    }
    return;
}

/* CLEANPLACEMENT */ void sub_32001(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* F_RETURN_PICKUP */ void sub_32064(unknown uParam0)
{
    int[54] iVar3;

    array(ref iVar3, 54);
    iVar3[0] = -1888453608;
    iVar3[1] = 1274757841;
    iVar3[2] = -1322620191;
    iVar3[3] = 1360803098;
    iVar3[4] = -64228399;
    iVar3[5] = 1468647706;
    iVar3[6] = 809028259;
    iVar3[7] = -217311068;
    iVar3[8] = -1377271918;
    iVar3[9] = -343443786;
    iVar3[10] = -2029912234;
    iVar3[11] = 426620576;
    iVar3[12] = 39142315;
    iVar3[13] = 525284907;
    iVar3[14] = 1676080365;
    iVar3[15] = 584407306;
    iVar3[16] = -46756431;
    iVar3[17] = -1601242092;
    iVar3[18] = 3711131;
    iVar3[19] = 1216559076;
    iVar3[20] = -597978297;
    iVar3[21] = 1295434569;
    iVar3[22] = -1138829373;
    iVar3[23] = -1141160886;
    iVar3[24] = 1699359515;
    iVar3[25] = -2117698134;
    iVar3[26] = -514108743;
    iVar3[27] = -579469575;
    iVar3[28] = 211733796;
    iVar3[29] = 280965399;
    iVar3[30] = -535211597;
    iVar3[31] = 843762214;
    iVar3[32] = 465100219;
    iVar3[33] = 750210207;
    iVar3[34] = 1160251115;
    iVar3[35] = 413078994;
    iVar3[36] = -527347232;
    iVar3[37] = 1675234620;
    iVar3[38] = 2088230095;
    iVar3[39] = -591863731;
    iVar3[40] = 1192708175;
    iVar3[41] = -1484798391;
    iVar3[42] = -4072149;
    iVar3[43] = 255084111;
    iVar3[44] = -547949121;
    iVar3[45] = -853563202;
    iVar3[46] = 455124134;
    iVar3[47] = -189960753;
    iVar3[48] = -718604917;
    iVar3[49] = -1126973237;
    iVar3[50] = 1528601552;
    iVar3[51] = -847977410;
    iVar3[52] = 2018389501;
    iVar3[53] = 865801398;
    return iVar3[uParam0];
}

/* CREATEPLACEMENT */ void sub_32714(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* MAL_HANDLE_TELEPORT_PLAYER_WIDGET */ void sub_33218()
{
    if (g_U660)
    {
        g_U661 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_5612() )};
        g_U668 = GET_GAMEPLAY_CAM_RELATIVE_HEADING();
        g_U669 = GET_GAMEPLAY_CAM_RELATIVE_PITCH();
        START_WIDGET_GROUP( "Teleport Player Widget" );
        ADD_WIDGET_FLOAT_READ_ONLY( "Player Current X", ref g_U661._fU0 );
        ADD_WIDGET_FLOAT_READ_ONLY( "Player Current Y", ref g_U661._fU4 );
        ADD_WIDGET_FLOAT_READ_ONLY( "Player Current Z", ref g_U661._fU8 );
        ADD_WIDGET_FLOAT_SLIDER( "Player X", ref g_U661._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Player Y", ref g_U661._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Player Z", ref g_U661._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Player Heading", ref g_U664, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Game Cam Heading", ref g_U668, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Game Cam Pitch", ref g_U669, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_BOOL( "Set coords to current", ref g_U667 );
        ADD_WIDGET_BOOL( "TeleportPlayer", ref g_U665 );
        ADD_WIDGET_BOOL( "Just set heading", ref g_U666 );
        ADD_WIDGET_BOOL( "Just set game cam pitch/heading", ref g_U670 );
        STOP_WIDGET_GROUP();
        g_U660 = 0;
    }
    if (g_U665 == 1)
    {
         /* MAL_TELEPORTPLAYER */ sub_33896( g_U661, g_U664, g_U668, g_U669 );
        g_U666 = 1;
        g_U665 = 0;
    }
    if (g_U666)
    {
        g_U666 = 0;
        SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_5612(), g_U664 );
    }
    if (g_U670)
    {
        g_U670 = 0;
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U668, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U669, 1065353216, 0 );
    }
    if (g_U667)
    {
        g_U667 = 0;
        g_U661 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_5612() )};
        g_U664 = GET_PED_HEADING(  /* PLAYER_PED_ID */ sub_5612() );
        g_U661._fU8 += -1.00000000;
        g_U668 = GET_GAMEPLAY_CAM_RELATIVE_HEADING();
        g_U669 = GET_GAMEPLAY_CAM_RELATIVE_PITCH();
    }
    return;
}

/* MAL_TELEPORTPLAYER */ void sub_33896(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 =  /* PLAYER_PED_ID */ sub_5612();
     /* MAL_TELEPORTPED */ sub_33943( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

/* MAL_TELEPORTPED */ void sub_33943(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_HANDLE_CHECKPOINT_THREADS */ void sub_34282(unknown uParam0, int iParam1)
{
    int J;
    int I;
    int iVar6;

    for ( J = 0; J <= (iParam1 - 1); J++ )
    {
        if (((uParam0^)[J]._fU40 == 0) AND ((uParam0^)[J]._fU36 == 1))
        {
            DISPLAYF( "[SP]### Loading a new script thread: {} ###", 1, 1281, ref (uParam0^)[J]._fU0 );
            (uParam0^)[J]._fU40 = 1;
        }
        if ((uParam0^)[J]._fU40 == 0)
        {
            ;
        }
        else if ((uParam0^)[J]._fU40 == 1)
        {
            DISPLAYF( "[SP]### Script: {} threadState = TS_REQUESTED ###", 1, 1281, ref (uParam0^)[J]._fU0 );
            iVar6 = 0;
            for ( I = 0; I <= (iParam1 - 1); I++ )
            {
                if (((uParam0^)[I]._fU40 < 4) AND ((uParam0^)[I]._fU40 > 0))
                {
                    if ((IS_THREAD_ACTIVE( (uParam0^)[I]._fU32 )) == 1)
                    {
                        iVar6++;
                    }
                }
            }
            if (iVar6 < 2)
            {
                if ((DOES_SCRIPT_EXIST( ref (uParam0^)[J]._fU0 )) == 1)
                {
                    if ((HAS_SCRIPT_LOADED( ref (uParam0^)[J]._fU0 )) == 0)
                    {
                        REQUEST_SCRIPT( ref (uParam0^)[J]._fU0 );
                        "[doubled result, dropped if not asigned]";
                    }
                    (uParam0^)[J]._fU40 = 2;
                }
                else
                {
                    SCRIPT_ASSERT( "[SP] Error: Trying to load a script that doesn't exist!", 0 );
                    (uParam0^)[J]._fU40 = 0;
                }
            }
            else
            {
                SCRIPT_ASSERT( "[SP] Error: Attempting to start another thread when 2 are already running...", 0 );
            }
        }
        else if ((uParam0^)[J]._fU40 == 2)
        {
            DISPLAYF( "[SP]### Script: {} threadState = TS_LOADING ###", 1, 1281, ref (uParam0^)[J]._fU0 );
            if ((HAS_SCRIPT_LOADED( ref (uParam0^)[J]._fU0 )) == 1)
            {
                DISPLAYF( "[SP]### Starting new script thread: {} ###", 1, 1281, ref (uParam0^)[J]._fU0 );
                (uParam0^)[J]._fU32 = START_NEW_SCRIPT( ref (uParam0^)[J]._fU0, (uParam0^)[J]._fU44 );
                (uParam0^)[J]._fU40 = 3;
            }
        }
        else if ((uParam0^)[J]._fU40 == 3)
        {
            if ((IS_THREAD_ACTIVE( (uParam0^)[J]._fU32 )) == 0)
            {
                DISPLAYF( "[SP]### Script: {} was running but is no longer active ###", 1, 1281, ref (uParam0^)[J]._fU0 );
                (uParam0^)[J]._fU40 = 4;
            }
        }
        else if ((uParam0^)[J]._fU40 == 4)
        {
            ;
        };;;;;
    }
    return;
}

/* P_HANDLE_STREAMREQ */ void sub_35348(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
     /* P_STREAMREQ_MODELNAMES_UPDATE */ sub_35381( uParam0 );
     /* P_STREAMREQ_WEAPON_TYPE_UPDATE */ sub_36117( uParam1 );
     /* P_STREAMREQ_ISEQ_UPDATE */ sub_36858( uParam2 );
     /* P_STREAMREQ_ANIM_DICT_UPDATE */ sub_38443( uParam3 );
     /* P_STREAMREQ_VEHICLE_RECORDING_UPDATE */ sub_39171( uParam4 );
     /* P_STREAMREQ_ACTION_TREE_UPDATE */ sub_39918( uParam5 );
     /* P_STREAMREQ_SCRIPT_STREAM_UPDATE */ sub_40637( uParam6 );
     /* P_STREAMREQ_AUDIO_BANK_UPDATE */ sub_41840( uParam7 );
    return;
}

/* P_STREAMREQ_MODELNAMES_UPDATE */ void sub_35381(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            if (NOT (HAS_MODEL_LOADED( (uParam0^)[I]._fU0 )))
            {
                DISPLAYF( "[CCB] ### Requesting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
                REQUEST_MODEL( (uParam0^)[I]._fU0 );
                "[doubled result, dropped if not asigned]";
                (uParam0^)[I]._fU4 = 2;
            }
            else
            {
                DISPLAYF( "[CCB] ### Requesting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
                DISPLAYF( "Trying to request a MODEL_NAME asset that was already loaded!!!", 0 );
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            if (HAS_MODEL_LOADED( (uParam0^)[I]._fU0 ))
            {
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            if (HAS_MODEL_LOADED( (uParam0^)[I]._fU0 ))
            {
                DISPLAYF( "[CCB] ### Removing requested MODEL_NAME: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            }
            else
            {
                DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
                SCRIPT_ASSERT( "Trying to remove a MODEL_NAME asset that is NOT loaded!!!", 0 );
            }
            SET_MODEL_AS_NO_LONGER_NEEDED( (uParam0^)[I]._fU0 );
            (uParam0^)[I]._fU0 = 0;
            (uParam0^)[I]._fU4 = 0;
             /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[I]._fU8 );
        };;;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_UPDATE */ void sub_36117(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            if (NOT (HAS_WEAPON_LOADED( (uParam0^)[I]._fU0 )))
            {
                DISPLAYF( "[CCB] ### Requesting WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
                REQUEST_WEAPON( (uParam0^)[I]._fU0 );
                (uParam0^)[I]._fU4 = 2;
            }
            else
            {
                DISPLAYF( "[CCB] ### Requesting WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
                DISPLAYF( "Trying to request a WEAPON_TYPE asset that was already loaded!!!", 0 );
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            if (HAS_WEAPON_LOADED( (uParam0^)[I]._fU0 ))
            {
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            if (HAS_WEAPON_LOADED( (uParam0^)[I]._fU0 ))
            {
                DISPLAYF( "[CCB] ### Removing requested WEAPON_TYPE: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            }
            else
            {
                DISPLAYF( "[CCB] ### Removing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
                SCRIPT_ASSERT( "Trying to remove a WEAPON_TYPE asset that is NOT loaded!!!", 0 );
            }
            SET_WEAPON_AS_NO_LONGER_NEEDED( (uParam0^)[I]._fU0 );
            (uParam0^)[I]._fU0 = 0;
            (uParam0^)[I]._fU4 = 0;
             /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[I]._fU8 );
        };;;
    }
    return;
}

/* P_STREAMREQ_ISEQ_UPDATE */ void sub_36858(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            if ((uParam0^)[I]._fU0 != 0)
            {
                if ((ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 2 )))
                {
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    DISPLAYF( "[CCB] ### Requesting ISEQ: {} ###", 1, 1281, ref uVar3 );
                    DISPLAYF( "Trying to request an ISEQ asset that was already loaded!!!", 0 );
                    (uParam0^)[I]._fU4 = 3;
                }
                else if (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 1 ))
                {
                    SCRIPT_ASSERT( "Trying to request an ISEQ asset that is currently loading!!!", 0 );
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    DISPLAYF( "[CCB] ### Requesting ISEQ: {} ###", 1, 1281, ref uVar3 );
                    (uParam0^)[I]._fU4 = 3;
                }
                else if ((ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 4 )))
                {
                    SCRIPT_ASSERT( "Trying to request an ISEQ asset that was interrupted or shuttingdown!!!", 0 );
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    DISPLAYF( "[CCB] ### Requesting ISEQ: {} ###", 1, 1281, ref uVar3 );
                    ISEQ_REQUEST( (uParam0^)[I]._fU0 );
                    (uParam0^)[I]._fU4 = 2;
                }
                else
                {
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    DISPLAYF( "[CCB] ### Requesting ISEQ: {} ###", 1, 1281, ref uVar3 );
                    ISEQ_REQUEST( (uParam0^)[I]._fU0 );
                    (uParam0^)[I]._fU4 = 2;
                };;;
            }
            else
            {
                SCRIPT_ASSERT( "Trying to request a DUMMY_SEQUENCE!!!", 0 );
            }
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            if ((uParam0^)[I]._fU0 != 0)
            {
                if ((ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 2 )))
                {
                    (uParam0^)[I]._fU4 = 3;
                }
            }
            else
            {
                SCRIPT_ASSERT( "Trying to load a DUMMY_SEQUENCE!!!", 0 );
            }
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            if ((uParam0^)[I]._fU0 != 0)
            {
                if ((ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 2 )))
                {
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    DISPLAYF( "[CCB] ### Removing requested ISEQ: {}", 1, 1281, ref uVar3 );
                }
                else
                {
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    DISPLAYF( "[CCB] ### Removing ISEQ: {} ###", 1, 1281, ref uVar3 );
                    if (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 1 ))
                    {
                        SCRIPT_ASSERT( "Trying to remove an ISEQ asset that is currently loading!!!", 0 );
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 4 )))
                    {
                        SCRIPT_ASSERT( "Trying to remove an ISEQ asset that is currently interupted or shutting down!!!", 0 );
                    }
                }
            }
            else
            {
                SCRIPT_ASSERT( "Trying to terminate a DUMMY_SEQUENCE!!!", 0 );
            }
            if ((uParam0^)[I]._fU0 != 0)
            {
                ISEQ_TERMINATE( (uParam0^)[I]._fU0 );
                (uParam0^)[I]._fU0 = 0;
            }
            (uParam0^)[I]._fU4 = 0;
             /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[I]._fU8 );
        };;;
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_UPDATE */ void sub_38443(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            if (NOT (HAS_ANIM_DICT_LOADED( ref (uParam0^)[I]._fU0, 0 )))
            {
                DISPLAYF( "[CCB] ### Requesting ANIM_DICT: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
                REQUEST_ANIM_DICT( ref (uParam0^)[I]._fU0, 0 );
                "[doubled result, dropped if not asigned]";
                (uParam0^)[I]._fU32 = 2;
            }
            else
            {
                DISPLAYF( "[CCB] ### Requesting ANIM_DICT: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
                DISPLAYF( "Trying to request an ANIM_DICT asset that was already loaded!!!", 0 );
                REQUEST_ANIM_DICT( ref (uParam0^)[I]._fU0, 0 );
                "[doubled result, dropped if not asigned]";
                (uParam0^)[I]._fU32 = 3;
            }
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            if (HAS_ANIM_DICT_LOADED( ref (uParam0^)[I]._fU0, 0 ))
            {
                (uParam0^)[I]._fU32 = 3;
            }
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            if (HAS_ANIM_DICT_LOADED( ref (uParam0^)[I]._fU0, 0 ))
            {
                DISPLAYF( "[CCB] ### Removing requested ANIM_DICT: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            }
            else
            {
                DISPLAYF( "[CCB] ### Removing ANIM_DICT: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
                DISPLAYF( "Trying to remove an ANIM_DICT asset that is NOT loaded!!!", 0 );
            }
            REMOVE_ANIM_DICT( ref (uParam0^)[I]._fU0, 0 );
            StrCopy( ref (uParam0^)[I]._fU0, "", 32 );
            (uParam0^)[I]._fU32 = 0;
             /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[I]._fU36 );
        };;;
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_UPDATE */ void sub_39171(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            if (NOT (HAS_VEHICLE_RECORDING_BEEN_LOADED( (uParam0^)[I]._fU0 )))
            {
                DISPLAYF( "[CCB] ### Requesting VEHICLE_RECORDING: {} ###", 1, 513, (uParam0^)[I]._fU0 );
                REQUEST_VEHICLE_RECORDING( (uParam0^)[I]._fU0 );
                (uParam0^)[I]._fU4 = 2;
            }
            else
            {
                DISPLAYF( "[CCB] ### Requesting VEHICLE_RECORDING: {} ###", 1, 513, (uParam0^)[I]._fU0 );
                DISPLAYF( "Trying to request a VEHICLE_RECORDING asset that was already loaded!!!", 0 );
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            if (HAS_VEHICLE_RECORDING_BEEN_LOADED( (uParam0^)[I]._fU0 ))
            {
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            if (HAS_VEHICLE_RECORDING_BEEN_LOADED( (uParam0^)[I]._fU0 ))
            {
                DISPLAYF( "[CCB] ### Removing requested VEHICLE_RECORDING: {}", 1, 513, (uParam0^)[I]._fU0 );
            }
            else
            {
                DISPLAYF( "[CCB] ### Removing VEHICLE_RECORDING: {} ###", 1, 513, (uParam0^)[I]._fU0 );
                SCRIPT_ASSERT( "Trying to remove a VEHICLE_RECORDING asset that is NOT loaded!!!", 0 );
            }
            REMOVE_VEHICLE_RECORDING( (uParam0^)[I]._fU0 );
            (uParam0^)[I]._fU0 = -1;
            (uParam0^)[I]._fU4 = 0;
             /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[I]._fU8 );
        };;;
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_UPDATE */ void sub_39918(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            if (NOT (IS_ACTION_TREE_LOADED( ref (uParam0^)[I]._fU0 )))
            {
                DISPLAYF( "[CCB] ### Requesting ACTION_TREE: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
                ACTION_TREE_LOAD( ref (uParam0^)[I]._fU0 );
                (uParam0^)[I]._fU64 = 2;
            }
            else
            {
                DISPLAYF( "[CCB] ### Requesting ACTION_TREE: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
                DISPLAYF( "Trying to request an ACTION_TREE asset that was already loaded!!!", 0 );
                (uParam0^)[I]._fU64 = 3;
            }
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            if (IS_ACTION_TREE_LOADED( ref (uParam0^)[I]._fU0 ))
            {
                (uParam0^)[I]._fU64 = 3;
            }
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            if (IS_ACTION_TREE_LOADED( ref (uParam0^)[I]._fU0 ))
            {
                DISPLAYF( "[CCB] ### Removing requested ACTION_TREE: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            }
            else
            {
                DISPLAYF( "[CCB] ### Removing ACTION_TREE: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
                SCRIPT_ASSERT( "Trying to remove an ACTION_TREE asset that is NOT loaded!!!", 0 );
            }
            ACTION_TREE_UNLOAD( ref (uParam0^)[I]._fU0 );
            StrCopy( ref (uParam0^)[I]._fU0, "", 64 );
            (uParam0^)[I]._fU64 = 0;
             /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[I]._fU68 );
        };;;
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_UPDATE */ void sub_40637(unknown uParam0)
{
    int J;
    int I;

    for ( J = 0; J <= ((uParam0^) - 1); J++ )
    {
        if ((uParam0^)[J]._fU32 == 1)
        {
            if (J <= 2)
            {
                if (NOT ((GET_SCRIPT_STREAM_STATE( ref (uParam0^)[J]._fU0, J )) == 2))
                {
                    if (( /* F_STREAMREQ_SCRIPT_STREAM_GET_NUM_IN_USE */ sub_40752( uParam0 )) <= 3)
                    {
                        DISPLAYF( "[CCB] ### Requesting SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam0^)[J]._fU0 );
                        REQUEST_SCRIPT_STREAM( ref (uParam0^)[J]._fU0, J );
                        (uParam0^)[J]._fU32 = 2;
                    }
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requesting SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam0^)[J]._fU0 );
                    DISPLAYF( "Trying to request a SCRIPT_STREAM asset that was already loaded!!!", 0 );
                    (uParam0^)[J]._fU32 = 3;
                }
            }
            else if (( /* F_STREAMREQ_SCRIPT_STREAM_GET_NUM_IN_USE */ sub_40752( uParam0 )) <= 3)
            {
                for ( I = 0; I <= 2; I++ )
                {
                    if ((uParam0^)[I]._fU32 == 0)
                    {
                        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
                        PRINTINT( I );
                        PRINTNL();
                        DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM asset name: {} ###", 1, 1281, ref (uParam0^)[J]._fU0 );
                        (uParam0^)[I]._fU0 = {(uParam0^)[J]._fU0};
                        (uParam0^)[I]._fU32 = (uParam0^)[J]._fU32;
                        (uParam0^)[I]._fU36 = {(uParam0^)[J]._fU36};
                        StrCopy( ref (uParam0^)[J]._fU0, "", 32 );
                        (uParam0^)[J]._fU32 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[J]._fU36 );
                        return;
                    }
                }
            }
        }
        else if ((uParam0^)[J]._fU32 == 2)
        {
            if (J <= 2)
            {
                if ((GET_SCRIPT_STREAM_STATE( ref (uParam0^)[J]._fU0, J )) == 2)
                {
                    (uParam0^)[J]._fU32 = 3;
                }
            }
        }
        else if ((uParam0^)[J]._fU32 == 4)
        {
            if (J <= 2)
            {
                if ((GET_SCRIPT_STREAM_STATE( ref (uParam0^)[J]._fU0, J )) == 2)
                {
                    DISPLAYF( "[CCB] ### Removing requested SCRIPT_STREAM: {}", 1, 1281, ref (uParam0^)[J]._fU0 );
                }
                else
                {
                    DISPLAYF( "[CCB] ### Removing requested SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam0^)[J]._fU0 );
                    DISPLAYF( "Trying to remove a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
                }
                STOP_SCRIPT_STREAM( J );
                StrCopy( ref (uParam0^)[J]._fU0, "", 32 );
                (uParam0^)[J]._fU32 = 0;
                 /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[J]._fU36 );
            }
        };;;
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_GET_NUM_IN_USE */ void sub_40752(unknown uParam0)
{
    int I;
    int Result;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 3)
        {
            Result++;
        }
    }
    return Result;
}

/* P_STREAMREQ_AUDIO_BANK_UPDATE */ void sub_41840(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            if (NOT (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam0^)[I]._fU0, 0 )))
            {
                DISPLAYF( "[CCB] ### Requesting AUDIO_BANK: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
                LOAD_SCRIPT_AUDIO_BANK( ref (uParam0^)[I]._fU0 );
                (uParam0^)[I]._fU64 = 2;
            }
            else
            {
                DISPLAYF( "[CCB] ### Requesting AUDIO_BANK: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
                DISPLAYF( "Trying to request an AUDIO_BANK asset that was already loaded!!!", 0 );
                (uParam0^)[I]._fU64 = 3;
            }
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam0^)[I]._fU0, 0 ))
            {
                (uParam0^)[I]._fU64 = 3;
            }
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam0^)[I]._fU0, 0 ))
            {
                DISPLAYF( "[CCB] ### Removing requested AUDIO_BANK: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            }
            else
            {
                DISPLAYF( "[CCB] ### Removing AUDIO_BANK: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
                SCRIPT_ASSERT( "Trying to remove an AUDIO_BANK asset that is NOT loaded!!!", 0 );
            }
            RELEASE_NAMED_SCRIPT_AUDIO_BANK( ref (uParam0^)[I]._fU0 );
            StrCopy( ref (uParam0^)[I]._fU0, "", 64 );
            (uParam0^)[I]._fU64 = 0;
             /* P_STREAMREQ_THREADID_RESET */ sub_25689( ref (uParam0^)[I]._fU68 );
        };;;
    }
    return;
}

/* P_HANDLE_PEOPLEMOVER_PLACEMENT_WIDGET */ void sub_42565()
{
    if (NOT l_U151)
    {
        START_WIDGET_GROUP( "Peoplemover Placement Widget" );
        ADD_WIDGET_BOOL( "Make Peoplemovers", ref l_U152 );
        START_WIDGET_GROUP( "Front L" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U153._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U153._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U153._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Front R" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U160._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U160._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U160._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Back L" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U156._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U156._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U156._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Back R" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U163._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U163._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U163._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Distance" );
        ADD_WIDGET_FLOAT_SLIDER( "Distance", ref l_U159, -5000.00000000, 5000.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U151 = 1;
    }
    if (l_U152)
    {
         /* CLEANOBJECT */ sub_43344( l_U167 );
         /* CLEANOBJECT */ sub_43344( l_U169 );
         /* CLEANOBJECT */ sub_43344( l_U166 );
         /* CLEANOBJECT */ sub_43344( l_U168 );
        l_U160 = {l_U153._fU0 + l_U159, l_U153._fU4, l_U153._fU8};
        l_U163 = {l_U156._fU0 + l_U159, l_U156._fU4, l_U156._fU8};
        l_U167 =  /* CREATEOBJECTMOVER */ sub_43524( g_U2393, l_U156, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U167 ))
        {
            SET_MOVER_SPEED( l_U167, 1.00000000, 0.00000000 );
            FREEZE_OBJECT_POSITION( l_U167, 1 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U167, ref g_U2278 );
        }
        l_U169 =  /* CREATEOBJECTMOVER */ sub_43524( g_U2393, l_U163, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U169 ))
        {
            SET_MOVER_SPEED( l_U169, 1.00000000, 0.00000000 );
            FREEZE_OBJECT_POSITION( l_U169, 1 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U169, ref g_U2278 );
        }
        l_U166 =  /* CREATEOBJECTMOVER */ sub_43524( g_U2393, l_U153, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U166 ))
        {
            SET_MOVER_SPEED( l_U166, 1.00000000, 0.00000000 );
            FREEZE_OBJECT_POSITION( l_U166, 1 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U166, ref g_U2278 );
        }
        l_U168 =  /* CREATEOBJECTMOVER */ sub_43524( g_U2393, l_U160, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U168 ))
        {
            SET_MOVER_SPEED( l_U168, 1.00000000, 0.00000000 );
            FREEZE_OBJECT_POSITION( l_U168, 1 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U168, ref g_U2278 );
        }
        l_U152 = 0;
    }
    return;
}

/* CLEANOBJECT */ void sub_43344(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CREATEOBJECTMOVER */ void sub_43524(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object mover with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_23537( uParam0, 1 );
    }
    Result = CREATE_OBJECT_MOVER( uParam0, uParam1, NOT bParam7, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_HANDLE_ESCALATOR_PLACEMENT_WIDGET */ void sub_44252()
{
    if (NOT l_U57)
    {
        START_WIDGET_GROUP( "Escalator Placement Helper" );
        ADD_WIDGET_BOOL( "Create Escalators", ref l_U58 );
        ADD_WIDGET_BOOL( "Print Values", ref l_U59 );
        ADD_WIDGET_BOOL( "Teleport Player", ref l_U60 );
        ADD_WIDGET_FLOAT_SLIDER( "Mover Offset X", ref l_U87, -3000.00000000, 3000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Mover Offset Y", ref l_U86, -3000.00000000, 3000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Mover Offset Z", ref l_U85, -3000.00000000, 3000.00000000, 0.01000000 );
        START_WIDGET_GROUP( "Escalator 1" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U61._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U61._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U61._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Escalator 2" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U64._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U64._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U64._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Escalator 3" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U67._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U67._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U67._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Escalator 4" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U70._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U70._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U70._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Escalator 5" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U73._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U73._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U73._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U76._fU8, -360.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Escalator 6" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U79._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U79._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U79._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U82._fU8, -360.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U57 = 1;
    }
    if (l_U58)
    {
         /* LOADMODEL */ sub_23537( g_U2394, 1 );
         /* LOADMODEL */ sub_23537( g_U2395, 1 );
         /* CLEANOBJECT */ sub_43344( l_U88 );
         /* CLEANOBJECT */ sub_43344( l_U90 );
         /* CLEANOBJECT */ sub_43344( l_U92 );
         /* CLEANOBJECT */ sub_43344( l_U94 );
         /* CLEANOBJECT */ sub_43344( l_U96 );
         /* CLEANOBJECT */ sub_43344( l_U98 );
         /* CLEANOBJECT */ sub_43344( l_U89 );
         /* CLEANOBJECT */ sub_43344( l_U91 );
         /* CLEANOBJECT */ sub_43344( l_U93 );
         /* CLEANOBJECT */ sub_43344( l_U95 );
         /* CLEANOBJECT */ sub_43344( l_U97 );
         /* CLEANOBJECT */ sub_43344( l_U99 );
        l_U88 =  /* CREATEOBJECTNOOFFSET */ sub_23404( g_U2394, l_U61, 0.00000000, 0.00000000, 180.00000000, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U88, ref g_U2302 );
        FREEZE_OBJECT_POSITION( l_U88, 1 );
        PLAY_OBJECT_ANIM( l_U88, "AP_EscSil_N1_Ad_H", "ap_anim", 0.00000000, 1, 0 );
        SET_OBJECT_ANIM_SPEED( l_U88, "AP_EscSil_N1_Ad_H", "ap_anim", 1.00000000 );
        l_U89 =  /* CREATEOBJECTMOVER */ sub_43524( g_U2395, l_U61 - (vector( l_U87, l_U86, l_U85)), 0.00000000, 0.00000000, 180.00000000, 0, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U89, ref g_U2302 );
        FREEZE_OBJECT_POSITION( l_U89, 1 );
        SET_MOVER_SPEED( l_U89, 1.00000000, 1.00000000 );
        l_U90 =  /* CREATEOBJECTNOOFFSET */ sub_23404( g_U2394, l_U64, 0.00000000, 0.00000000, 180.00000000, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U90, ref g_U2302 );
        FREEZE_OBJECT_POSITION( l_U90, 1 );
        PLAY_OBJECT_ANIM( l_U90, "AP_EscSil_N1_Ad_H", "ap_anim", 0.00000000, 1, 0 );
        SET_OBJECT_ANIM_SPEED( l_U90, "AP_EscSil_N1_Ad_H", "ap_anim", 1.00000000 );
        l_U91 =  /* CREATEOBJECTMOVER */ sub_43524( g_U2395, l_U64 - (vector( l_U87, l_U86, l_U85)), 0.00000000, 0.00000000, 180.00000000, 0, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U91, ref g_U2302 );
        FREEZE_OBJECT_POSITION( l_U91, 1 );
        SET_MOVER_SPEED( l_U91, 1.00000000, 1.00000000 );
        l_U92 =  /* CREATEOBJECTNOOFFSET */ sub_23404( g_U2394, l_U67, 0.00000000, 0.00000000, 180.00000000, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U92, ref g_U2302 );
        FREEZE_OBJECT_POSITION( l_U92, 1 );
        PLAY_OBJECT_ANIM( l_U92, "AP_EscSil_N1_Ad_H", "ap_anim", 0.00000000, 1, 0 );
        SET_OBJECT_ANIM_SPEED( l_U92, "AP_EscSil_N1_Ad_H", "ap_anim", -1.00000000 );
        l_U93 =  /* CREATEOBJECTMOVER */ sub_43524( g_U2395, l_U67 - (vector( l_U87, l_U86, l_U85)), 0.00000000, 0.00000000, 180.00000000, 0, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U93, ref g_U2302 );
        FREEZE_OBJECT_POSITION( l_U93, 1 );
        SET_MOVER_SPEED( l_U93, -1.00000000, -1.00000000 );
        l_U94 =  /* CREATEOBJECTNOOFFSET */ sub_23404( g_U2394, l_U70, 0.00000000, 0.00000000, 180.00000000, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U94, ref g_U2302 );
        FREEZE_OBJECT_POSITION( l_U94, 1 );
        PLAY_OBJECT_ANIM( l_U94, "AP_EscSil_N1_Ad_H", "ap_anim", 0.00000000, 1, 0 );
        SET_OBJECT_ANIM_SPEED( l_U94, "AP_EscSil_N1_Ad_H", "ap_anim", -1.00000000 );
        l_U95 =  /* CREATEOBJECTMOVER */ sub_43524( g_U2395, l_U70 - (vector( l_U87, l_U86, l_U85)), 0.00000000, 0.00000000, 180.00000000, 0, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U95, ref g_U2302 );
        FREEZE_OBJECT_POSITION( l_U95, 1 );
        SET_MOVER_SPEED( l_U95, -1.00000000, -1.00000000 );
        l_U96 =  /* CREATEOBJECTNOOFFSET */ sub_23404( g_U2394, l_U73, l_U76, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U96, ref g_U2278 );
        FREEZE_OBJECT_POSITION( l_U96, 1 );
        PLAY_OBJECT_ANIM( l_U96, "AP_EscSil_N1_Ad_H", "ap_anim", 0.00000000, 1, 0 );
        SET_OBJECT_ANIM_SPEED( l_U96, "AP_EscSil_N1_Ad_H", "ap_anim", -1.00000000 );
        l_U97 =  /* CREATEOBJECTMOVER */ sub_43524( g_U2395, l_U73 - (vector( l_U87, l_U86, l_U85)), l_U76, 0, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U97, ref g_U2278 );
        FREEZE_OBJECT_POSITION( l_U97, 1 );
        SET_MOVER_SPEED( l_U97, -1.00000000, -1.00000000 );
        l_U98 =  /* CREATEOBJECTNOOFFSET */ sub_23404( g_U2394, l_U79, l_U82, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U98, ref g_U2278 );
        FREEZE_OBJECT_POSITION( l_U98, 1 );
        PLAY_OBJECT_ANIM( l_U98, "AP_EscSil_N1_Ad_H", "ap_anim", 0.00000000, 1, 0 );
        SET_OBJECT_ANIM_SPEED( l_U98, "AP_EscSil_N1_Ad_H", "ap_anim", -1.00000000 );
        l_U99 =  /* CREATEOBJECTMOVER */ sub_43524( g_U2395, l_U79 - (vector( l_U87, l_U86, l_U85)), l_U82, 0, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U99, ref g_U2278 );
        FREEZE_OBJECT_POSITION( l_U99, 1 );
        SET_MOVER_SPEED( l_U99, -1.00000000, -1.00000000 );
        l_U58 = 0;
    }
    if (l_U60)
    {
         /* MAL_TELEPORTPLAYER */ sub_33896( -81.66525000, 41.45338000, -4.40909800, 172.14190000, 0, 0 );
        l_U60 = 0;
    }
    if (l_U59)
    {
        PRINTSTRING( "Escalator 1 : " );
        PRINTVECTOR( l_U61 );
        PRINTNL();
        PRINTSTRING( "Escalator 2 : " );
        PRINTVECTOR( l_U64 );
        PRINTNL();
        PRINTSTRING( "Escalator 3 : " );
        PRINTVECTOR( l_U67 );
        PRINTNL();
        PRINTSTRING( "Escalator 4 : " );
        PRINTVECTOR( l_U70 );
        PRINTNL();
        PRINTSTRING( "Escalator 5 : " );
        PRINTVECTOR( l_U73 );
        PRINTNL();
        PRINTSTRING( "Escalator 6 : " );
        PRINTVECTOR( l_U79 );
        PRINTNL();
        l_U59 = 0;
    }
    return;
}


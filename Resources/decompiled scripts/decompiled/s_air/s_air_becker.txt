void main()
{
    l_U0 = 1;
    l_U1 = 144;
    StrCopy( ref l_U2, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U10, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U18 = -1;
    l_U19 = {64536, 64536, 64536};
    l_U41 = 0;
    l_U42 = 0;
    l_U43 = 1500;
    l_U54 = 0;
    l_U92 = 0;
    l_U94 = 1;
    l_U95 = 0;
    l_U97 = 0;
    l_U142 = "level_s_fin_cp_09";
    l_U180 = 6000;
    l_U199 = 9000;
    l_U309 = 0;
    l_U324 = 6.50000000;
    l_U325 = 23;
    l_U393 = {-827.13000000, -728.27000000, -4.55000000};
    l_U396 = 170.00000000;
    l_U397 = "LEVEL/S_AIR/VIG_09_FIN_BECKER.act";
    l_U398 = 47;
    l_U399 = 51;
    l_U400 = 49;
    l_U401 = 50;
    l_U432 = 3000;
    l_U433 = 8000;
    l_U570 = -1;
    l_U571 = {-2.70000000, -3.50000000, 3.00000000};
    l_U574 = -1;
    l_U575 = {2.70000000, -3.50000000, 3.00000000};
    l_U578 = -1;
    l_U579 = -1;
    l_U594 = {-1.00000000, 5.40000000, 2.05000000};
    l_U597 = 90.00000000;
    l_U600 = 10000.00000000;
    l_U772 = {-829.22000000, -728.54000000, -6.70000000};
    l_U775 = {-834.89000000, -741.72000000, -6.70000000};
    l_U778 = {-828.06000000, -740.62000000, -6.70000000};
    l_U781 = {-824.67000000, -745.43000000, -6.70000000};
    l_U784 = {-834.87000000, -733.91000000, -6.70000000};
    l_U790 = 2000;
    l_U1070 = 1500;
    l_U1111 = {-0.50000000, -1.80000000, 0.30000000};
    l_U1114 = {1.60000000, -0.72000000, 10.83000000};
    l_U1117 = {0.65000000, -2.40000000, 0.00000000};
    l_U1120 = {1.60000000, -0.72000000, 10.83000000};
    l_U1132 = 3000;
    l_U1143 = {-831.60000000, -732.40000000, -6.70000000};
    l_U1146 = 550;
    l_U1156 = 0.25000000;
    l_U1157 = 0;
    l_U1215 = 0;
    l_U1216 = 0;
    l_U1217 = 0;
    l_U1218 = 0;
    l_U1219 = 0;
    l_U1220 = 0;
    l_U1221 = 0;
    l_U1223 = {0.00000000, 0.00000000, 0.00000000};
    l_U1226 = {0.00000000, 0.00000000, 0.00000000};
    l_U1229 = 0;
    l_U1230 = 0;
    l_U1231 = 0;
    l_U1232 = 0;
    l_U1233 = 0;
    l_U1240 = 0;
    l_U1241 = 0;
    l_U1242 = 0;
    l_U1243 = {-783.00000000, -700.00000000, -6.33000000};
    l_U1246 = 90.00000000;
    l_U1247 = 0;
    l_U1248 = {-775.66000000, -689.41000000, -6.33000000};
    l_U1251 = 90.00000000;
    l_U1252 = 0;
    l_U1253 = {-758.19000000, -674.53000000, -6.33000000};
    l_U1256 = 90.00000000;
    l_U1257 = 0;
    l_U1258 = {-809.00000000, -736.74680000, -6.73908700};
    l_U1261 = 47.63203000;
     /* WRITESCRIPTLOG */ sub_1068( "SA", "Script s_air_Becker.sc is starting...", 0 );
     /* P_SETUP_ASSET_ARRAYS */ sub_1186();
    l_U92 = 1;
    l_U54 = 0;
    if (g_U829 == 10)
    {
         /* WRITESCRIPTLOG */ sub_1068( "GA", "Setting player position and gameplay camera to face out of the hangar.", 0 );
         /* TELEPORTPED */ sub_2626(  /* PLAYER_PED_ID */ sub_2515(), g_U2014[9], g_U2129[9] );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[9], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[9], 1065353216, 0 );
    }
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_2752();
         /* P_HANDLE_DEBUG */ sub_14525();
        if (l_U97 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_18829();
        }
         /* P_TM1_DEBUG_RECORDING_WIDGET */ sub_93783();
        WAIT( 0 );
    }
     /* P_CLEANUP_BECKER */ sub_5878();
     /* P_UNLOAD_ASSETS */ sub_90737();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_air_Becker" );
     /* WRITESCRIPTLOG */ sub_1068( "SA", "Script s_air_Becker.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_1068(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_SETUP_ASSET_ARRAYS */ void sub_1186()
{
    l_U1167[0] = 2113814688;
    l_U1167[1] = 877881452;
    l_U1167[2] = -1800280432;
    l_U1167[3] = 1703160427;
    l_U1167[4] = 1423542550;
    l_U1167[5] = -2104040304;
    l_U1167[6] = -1409914275;
    l_U1167[7] = -1589640354;
    l_U1176[0] = 1478009203;
    l_U1176[1] = -612753081;
    l_U1176[2] = -1464892298;
    l_U1176[3] = 930042831;
    l_U1176[4] = -1101340804;
    l_U1176[5] = 57534114;
    l_U1176[6] = 724901397;
    l_U610[0] = 282;
    l_U610[1] = 283;
    l_U610[2] = 284;
    l_U622[0] = -1;
    l_U622[1] = -1;
    l_U622[2] = -1;
    l_U326[0][0] = {-834.80000000, -750.20000000, -6.70000000};
    l_U326[0][1] = {-834.80000000, -750.20000000, -6.70000000};
    l_U326[1][0] = {-832.00000000, -750.50000000, -6.70000000};
    l_U326[1][1] = {-832.00000000, -750.50000000, -6.70000000};
    l_U326[2][0] = {-829.00000000, -750.50000000, -6.70000000};
    l_U326[2][1] = {-829.70000000, -750.20000000, -6.70000000};
    l_U326[3][0] = {-837.50000000, -749.00000000, -6.70000000};
    l_U326[3][1] = {l_U326[3][0]};
    l_U363[0] = "p_an_boxcrt_aa";
    l_U363[1] = "p_an_boxcrt_ab";
    l_U363[2] = "p_an_boxcrt_ac";
    l_U367[0] = 0.35000000;
    l_U367[1] = 0.35000000;
    l_U367[2] = 0.35000000;
    l_U371[0] = 0.50000000;
    l_U371[1] = 0.60000000;
    l_U371[2] = 0.66660000;
    l_U319[3] = 140.00000000;
    l_U319[0] = 170.00000000;
    l_U319[1] = 175.00000000;
    l_U319[2] = 200.00000000;
    l_U810[0] = {-836.12000000, -745.49000000, -6.74000000};
    l_U810[1] = {-834.25000000, -746.53000000, -6.74000000};
    l_U810[2] = {-832.21000000, -746.80000000, -6.74000000};
    l_U810[3] = {-830.22000000, -747.29000000, -6.74000000};
    l_U810[4] = {-828.20000000, -747.64000000, -6.74000000};
    l_U810[5] = {-826.17000000, -748.10000000, -6.74000000};
    l_U810[6] = {-823.83000000, -748.97000000, -6.74000000};
    l_U810[7] = {-824.01000000, -751.71000000, -6.74000000};
    l_U810[8] = {-824.01000000, -753.82000000, -6.74000000};
    l_U810[9] = {-824.01000000, -756.15000000, -6.74000000};
    l_U810[10] = {-824.01000000, -758.36000000, -6.74000000};
    l_U810[11] = {-824.03000000, -760.48000000, -6.74000000};
    l_U810[12] = {-824.01000000, -762.48000000, -6.74000000};
    l_U810[13] = {-838.48000000, -746.44000000, -6.74000000};
    l_U810[14] = {-841.47000000, -744.40000000, -6.74000000};
    l_U810[15] = {-843.57000000, -744.40000000, -6.74000000};
    l_U810[16] = {-845.67000000, -744.40000000, -6.74000000};
    l_U810[17] = {-847.77000000, -744.40000000, -6.74000000};
    return;
}

/* PLAYER_PED_ID */ int sub_2515()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_2553() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_2553()
{
    return GET_PLAYER_ID();
}

/* TELEPORTPED */ void sub_2626(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_HANDLE_FAILURE */ void sub_2752()
{
    if ((g_U830 == 10) || (g_U830 == 9))
    {
        switch (l_U97)
        {
            case 0:
            if ((l_U95) || (( /* RESTARTING_CHECKPOINT */ sub_2879()) || ((l_U96) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))))
            {
                 /* WRITESCRIPTLOG */ sub_1068( "SA", "eFailState = FAIL_IDLE", 0 );
                l_U97 = 1;
                 /* WRITESCRIPTLOG */ sub_1068( "SA", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_3439())
            {
                l_U97 = 3;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_3499( 0 )) == 1)
            {
                l_U97 = 2;
            }
            break;
            case 2:
             /* WRITESCRIPTLOG */ sub_1068( "SA", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
            {
                l_U97 = 3;
                 /* WRITESCRIPTLOG */ sub_1068( "SA", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_1068( "SA", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2553() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2553(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2515() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2515(), 0 );
                }
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2515(), 1 );
            }
            DO_SCREEN_FADE_OUT( 0 );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_5250( "AIR_BECKER1_SCRIPTED_FAIL_FX" );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_5250( "AIR_BECKER2_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
             /* P_RESET_MAX_ACTION_TREE */ sub_5541();
             /* P_CLEANUP_BECKER */ sub_5878();
            l_U97 = 4;
             /* WRITESCRIPTLOG */ sub_1068( "SA", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_1068( "SA", "eFailState = FAIL_RESTORE_PLAYER", 0 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9778( ref l_U56,  /* PLAYER_PED_ID */ sub_2515() );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "MILO_hangar", 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "MILO_hangar", 0 ), GET_HASH_KEY( ref g_U2358 ) );
            l_U97 = 5;
             /* WRITESCRIPTLOG */ sub_1068( "SA", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_1068( "SA", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U92 = 1;
            l_U94 = 0;
            l_U95 = 0;
            l_U97 = 0;
             /* WRITESCRIPTLOG */ sub_1068( "SA", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_2879()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_2515(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_2553(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_2553(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2515() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2515(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_3439()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_3499(int iParam0)
{
    iParam0 = 1;
    switch (l_U42)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_3581( ref l_U44 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
            {
                l_U43 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_3715( ref l_U44, l_U43, 1, 1 );
             /* STARTTIMER */ sub_3865( ref l_U44 );
        }
        if ( /* ISTIMERDONE */ sub_3998( ref l_U44 ))
        {
             /* WRITESCRIPTLOG */ sub_1068( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2553() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2553(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U42 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U42 = 2;
            }
            else
            {
                l_U42 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1068( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_4499();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1068( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_4499();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_3581(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_3715(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_3865(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_3998(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_4499()
{
     /* WRITESCRIPTLOG */ sub_1068( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_4574( ref l_U44 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2553() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2553(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U41 = 0;
    l_U41 = l_U41;
    l_U42 = 0;
    return;
}

/* RESETTIMER */ void sub_4574(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_IMAGEFX_STOP_BULLETCAM */ void sub_5250(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1068( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
     /* CLEANCAMERA */ sub_5360( ref l_U55 );
    l_U54 = 1;
    return;
}

/* CLEANCAMERA */ void sub_5360(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* P_RESET_MAX_ACTION_TREE */ void sub_5541()
{
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_RESET_MAX_ACTION_TREE start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
    {
        if (IS_PLAYER_SHOOTDODGING())
        {
            SCRIPT_ASSERT( "Do not try to reset Max's action tree when he is shoot dodging.", 0 );
             /* WRITESCRIPTLOG */ sub_1068( "GA", "You cannot reset Max's action tree during a shoot dodge.", 0 );
        }
        else
        {
            PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_2515(), "/Global/Player" );
        }
    }
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_RESET_MAX_ACTION_TREE end", 0 );
    return;
}

/* P_CLEANUP_BECKER */ void sub_5878()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1068( "SA", "P_CLEANUP_ALL - START", 0 );
    CAMERA_POINT_AT_GRENADE( 0 );
    SET_POST_LMS_DAMAGE_TO_PLAYER_OVERRIDES( 0, 1.00000000 );
    ISEQ_TERMINATE( 1975594589 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_5984( 1975594589, ref g_U1368 );
    ISEQ_TERMINATE( -670135969 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_5984( -670135969, ref g_U1368 );
    ISEQ_TERMINATE( 1347850635 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_5984( 1347850635, ref g_U1368 );
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_7128( "S_AIR_PLANE_TAXI_START", ref g_U1910 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_7922( "S_AIR_PLANE_TAXI_START", ref g_U1910 );
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_7128( "S_AIR_PLANE_TAXI_LEAVE", ref g_U1910 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_7922( "S_AIR_PLANE_TAXI_LEAVE", ref g_U1910 );
    for ( I = 0; I <= 2; I++ )
    {
         /* P_SAFE_STOP_SOUND */ sub_8357( l_U622[I], 1 );
         /* P_SAFE_RELEASE_SOUND_ID */ sub_8544( ref l_U622[I] );
    }
     /* P_SAFE_STOP_SOUND */ sub_8357( l_U578, 1 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_8544( ref l_U578 );
     /* P_SAFE_STOP_SOUND */ sub_8357( l_U579, 1 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_8544( ref l_U579 );
     /* P_SAFE_REMOVE_PARTICLE_FX */ sub_8803( ref l_U570 );
     /* P_SAFE_REMOVE_PARTICLE_FX */ sub_8803( ref l_U574 );
    if ((CUTSCENE_NAMED_IS_LOADING( "14_03_FIN_concat" )) || (CUTSCENE_IS_LOADED( "14_03_FIN_concat" )))
    {
        CLEAR_NAMED_CUTSCENE( "14_03_FIN_concat" );
    }
     /* CLEANPED */ sub_8971( l_U140 );
     /* CLEANPED */ sub_8971( l_U392 );
     /* CLEANPED */ sub_8971( l_U593 );
     /* CLEANPEDARRAY */ sub_9080( ref l_U553 );
     /* CLEANPEDARRAY */ sub_9080( ref l_U757 );
     /* CLEANVEHICLEARRAY */ sub_9167( ref l_U614 );
     /* CLEANVEHICLE */ sub_9221( l_U569 );
     /* CLEANOBJECTARRAY */ sub_9323( ref l_U355 );
     /* CLEANPLACEMENT */ sub_9453( l_U141 );
     /* CLEANPLACEMENTARRAY */ sub_9517( ref l_U218 );
     /* CLEANPLACEMENTARRAY */ sub_9517( ref l_U221 );
    CAMERA_CAN_TARGET_PROJECTILES( 0 );
    RESET_PED_MODEL_LOD_DISTANCES( 2113814688 );
     /* WRITESCRIPTLOG */ sub_1068( "SA", "P_CLEANUP_ALL - END", 0 );
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_5984(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6122( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_6122(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_STOP */ void sub_7128(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_7178( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_7387( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Stopping the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        DISPLAYF( "Attempting to stop a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ int sub_7178(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB]### The SCRIPT_STREAM is loaded: {} ###", 1, 1281, ref (uParam1^)[I]._fU0 );
                return 1;
            }
        }
    }
    return 0;
}

/* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ int sub_7387(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ void sub_7922(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6122( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a SCRIPT_STREAM asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_SAFE_STOP_SOUND */ void sub_8357(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
         /* WRITESCRIPTLOG */ sub_1068( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1068( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

/* P_SAFE_RELEASE_SOUND_ID */ void sub_8544(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
         /* WRITESCRIPTLOG */ sub_1068( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1068( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

/* P_SAFE_REMOVE_PARTICLE_FX */ void sub_8803(unknown uParam0)
{
    if ((uParam0^) != 0)
    {
        REMOVE_PARTICLE_FX( (uParam0^) );
        (uParam0^) = 0;
    }
    return;
}

/* CLEANPED */ void sub_8971(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANPEDARRAY */ void sub_9080(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_8971( (uParam0^)[I] );
    }
    return;
}

/* CLEANVEHICLEARRAY */ void sub_9167(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANVEHICLE */ sub_9221( (uParam0^)[I] );
    }
    return;
}

/* CLEANVEHICLE */ void sub_9221(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* CLEANOBJECTARRAY */ void sub_9323(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANOBJECT */ sub_9375( (uParam0^)[I] );
    }
    return;
}

/* CLEANOBJECT */ void sub_9375(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CLEANPLACEMENT */ void sub_9453(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* CLEANPLACEMENTARRAY */ void sub_9517(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPLACEMENT */ sub_9453( (uParam0^)[I] );
    }
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_9778(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_1068( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_9997( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_11161( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11475( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11954( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11475( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11954( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11475( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11954( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_12270( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11954( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_12270( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11954( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_12842( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_13044( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_2515(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_1068( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_9997(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_10059( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_10059(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_11161(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_11475(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_11879( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_11879(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_11954(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_12270(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_11879( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_12842(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_13044(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_10059( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_13142( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_13142(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_DEBUG */ void sub_14525()
{
    if (NOT l_U1215)
    {
        START_WIDGET_GROUP( "Becker Boss Fight" );
        ADD_WIDGET_BOOL( "Reset Checkpoint", ref l_U1216 );
        START_WIDGET_GROUP( "Blendout" );
        ADD_WIDGET_INT_SLIDER( "End Anim Cam time", ref l_U790, 0, 1000000, 50 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Grenade delays" );
        ADD_WIDGET_INT_SLIDER( "G2 grenade delay", ref l_U180, 0, 1000000, 50 );
        ADD_WIDGET_INT_SLIDER( "G3 grenade delay", ref l_U199, 0, 1000000, 50 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Plane Enemy" );
        ADD_WIDGET_FLOAT_SLIDER( "Time to close door", ref l_U600, 0.00000000, 1E7, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Attach Rotation", ref l_U597, -360.00000000, 360.00000000, 1.00000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U594, "Attach Pos", 0.01000000 );
        STOP_WIDGET_GROUP();
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U571, "Blowback fx left", 0.01000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U575, "Blowback fx right", 0.01000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U1117, "Fail Max Cam Right Offset", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U1120, "Fail Max Cam Right Rotation", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U1111, "Fail Max Cam Left Offset", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U1114, "Fail Max Cam Left Rotation", 1036831949 );
        START_WIDGET_GROUP( "Vig 10" );
        ADD_WIDGET_BOOL( "Trigger Max thrown back", ref l_U1218 );
        ADD_WIDGET_FLOAT_SLIDER( "Explosion radius", ref l_U324, 0.00000000, 10.00000000, 0.10000000 );
        ADD_WIDGET_INT_SLIDER( "Damage in cover", ref l_U325, 0, 100000, 1 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Becker" );
        START_WIDGET_GROUP( "Aim coordinates" );
        ADD_WIDGET_BOOL( "Becker Fire Grenade", ref l_U1217 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U326[3][0], "TRUCK COVER", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U326[0][0], "Baggage Left Cover Hit 1", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U326[0][1], "Baggage Left Cover Hit 2", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U326[1][0], "Baggage Middle Cover Hit 1", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U326[1][1], "Baggage Middle Cover Hit 2", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U326[2][0], "baggage Right Cover Hit 1", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U326[2][1], "baggage Right Cover Hit 2", 1036831949 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Luggage" );
        ADD_WIDGET_BOOL( "Spawn luggage", ref l_U1219 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U1223, "Luggage position", 0.10000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U1226, "Luggage rotation", 0.10000000 );
        ADD_WIDGET_BOOL( "Grab player's position", ref l_U1220 );
        ADD_WIDGET_BOOL( "Grab luggage's position", ref l_U1221 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Becker MPM Tuning" );
        ADD_WIDGET_BOOL( "Start MPM", ref l_U1229 );
        ADD_WIDGET_FLOAT_SLIDER( "Bullet Time Mod", ref l_U1156, 0.00000000, 10.00000000, 0.01000000 );
        ADD_WIDGET_INT_SLIDER( "Duration of MPM", ref l_U1146, 0, 1000000, 25 );
        ADD_WIDGET_BOOL( "Test MPM Grenade", ref l_U1230 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U1143, "Grenade Shoot at Pos", 0.50000000 );
        ADD_WIDGET_INT_SLIDER( "Second grenade delay", ref l_U1132, 0, 1000000, 50 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Plane Door Debug" );
        ADD_WIDGET_BOOL( "Start Plane Door Debug mode", ref l_U1231 );
        ADD_WIDGET_BOOL( "Open Plane Door", ref l_U1232 );
        ADD_WIDGET_BOOL( "Close Plane Close", ref l_U1233 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U1215 = 1;
    }
    if (l_U1231)
    {
         /* P_CLEANUP_BECKER */ sub_5878();
        l_U92 = 0;
        l_U569 =  /* CREATEVEHICLE */ sub_16533( 877881452, -809.00000000, -736.74680000, -6.73908700, 47.63203000, 0, 0, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U569 )))
        {
            SET_ROOM_FOR_VEHICLE_BY_NAME( l_U569, ref g_U2358 );
            SET_VEHICLE_CAN_BE_DAMAGED( l_U569, 0 );
            SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( l_U569, 1 );
            SET_VEHICLE_ENGINE_CAN_BE_DAMAGED( l_U569, 0 );
            SET_VEHICLE_ENGINE_ON( l_U569, 1, 1 );
            SET_VEHICLE_EXTRA( l_U569, 1, 0 );
            SET_VEHICLE_EXTRA( l_U569, 2, 0 );
        }
        l_U1231 = 0;
    }
    if (l_U1232)
    {
        if (NOT (IS_VEHICLE_DEAD( l_U569 )))
        {
            SET_VEHICLE_DOOR_OPEN( l_U569, 0 );
        }
        l_U1232 = 0;
    }
    if (l_U1233)
    {
        if (NOT (IS_VEHICLE_DEAD( l_U569 )))
        {
            SET_VEHICLE_DOOR_SHUT( l_U569, 0, 0, 0 );
        }
        l_U1233 = 0;
    }
    if (l_U1216)
    {
         /* P_CLEANUP_BECKER */ sub_5878();
        l_U92 = 1;
        l_U1216 = 0;
    }
    if (l_U1218)
    {
         /* P_VIG10_MAX_THROWN_BACK */ sub_17352( GET_PED_HEADING(  /* PLAYER_PED_ID */ sub_2515() ) );
        l_U1218 = 0;
    }
    if (l_U1217)
    {
         /* P_BECKER_FIRE_GRENADE */ sub_17990(  /* F_GET_BECKER_AIM_COORD */ sub_17612(), 4000 );
        l_U1217 = 0;
    }
    if (l_U1220)
    {
        l_U1223 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2515() )};
        l_U1220 = 0;
    }
    if (l_U1221)
    {
        l_U1223 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( l_U1222 )};
        l_U1226 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_ROTATION( l_U1222 )};
        l_U1221 = 0;
    }
    if (l_U1219)
    {
        if (DOES_OBJECT_EXIST( l_U1222 ))
        {
             /* CLEANOBJECT */ sub_9375( l_U1222 );
        }
        l_U1222 =  /* CREATEOBJECTNOOFFSET */ sub_18395( -1168442120, l_U1223, l_U1226, 0, 1, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1222, ref g_U2358 );
        l_U1219 = 0;
    }
    if (l_U1229)
    {
         /* CLEANPEDARRAY */ sub_9080( ref l_U553 );
         /* CLEANPEDARRAY */ sub_9080( ref l_U757 );
        l_U92 = 15;
        l_U93 = 1;
        l_U1229 = 0;
    }
    if (l_U1230)
    {
         /* P_BECKER_FIRE_GRENADE */ sub_17990( l_U1143, 4000 );
        l_U1230 = 0;
    }
    return;
}

/* P_ADD_WIDGET_VECTOR_SLIDER */ void sub_14939(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

/* CREATEVEHICLE */ void sub_16533(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_16660( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* LOADMODEL */ void sub_16660(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_11879( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_VIG10_MAX_THROWN_BACK */ void sub_17352(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() ))) AND (NOT l_U309))
    {
         /* WRITESCRIPTLOG */ sub_1068( "SA", "Triggering Vig 10", 0 );
        PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_2515(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
        APPLY_DAMAGE_TO_PED(  /* PLAYER_PED_ID */ sub_2515(), l_U325, 0 );
        l_U309 = 1;
         /* STARTTIMER */ sub_3865( ref l_U310 );
    }
    else if ( /* ISTIMERDONE */ sub_3998( ref l_U310 ))
    {
         /* WRITESCRIPTLOG */ sub_1068( "GA", "Delay for detecting blown back complete", 0 );
        l_U309 = 0;
    }
    return;
}

/* F_GET_BECKER_AIM_COORD */ string sub_17612()
{
    int iVar2;
    unknown uVar3;

    if ( /* F_GET_PLAYER_COVER_SPOT */ sub_17648( ref iVar2 ))
    {
        uVar3 = iVar2;
        if (iVar2 == 3)
        {
            return l_U326[uVar3][0];
        }
        else if (l_U359[uVar3] < 1)
        {
            return l_U326[uVar3][0];
        }
        else
        {
            return l_U326[uVar3][1];
        }
    }
    return "[dynamic result, ret vals = 3]";
    break;
    GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2515() );
    "[doubled result, dropped if not asigned]";
    "[doubled result, dropped if not asigned]";
    break;
}

/* F_GET_PLAYER_COVER_SPOT */ int sub_17648(unknown uParam0)
{
    int I;

    if ((NOT IS_PLAYER_SHOOTDODGING()) AND ((NOT (IS_PED_VAULTING(  /* PLAYER_PED_ID */ sub_2515() ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))))
    {
        if (IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_2515() ))
        {
            for ( I = 0; I < 4; I++ )
            {
                if ( /* F_ISPEDINTRIGGERBOX */ sub_17769(  /* PLAYER_PED_ID */ sub_2515(), l_U224[I] ))
                {
                    (uParam0^) = I;
                    return 1;
                }
            }
        }
    }
    return 0;
}

/* F_ISPEDINTRIGGERBOX */ int sub_17769(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_BECKER_FIRE_GRENADE */ void sub_17990(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;

    if (NOT (IS_PED_DEAD( l_U392 )))
    {
        SET_AMMO_IN_CLIP( l_U392, 930042831, 25000 );
        DISPLAYF( "Becker shooting at coord {0}, {1}, {2}", 3, 769, uParam0._fU0, 769, uParam0._fU4, 769, uParam0._fU8 );
        OPEN_SEQUENCE_TASK( ref uVar6 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_SHOOT_AT_COORD( 0, uParam0, uParam3, 1566631136, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_AIM_GUN_AT_PED( 0,  /* PLAYER_PED_ID */ sub_2515(), -1, 0 );
        CLOSE_SEQUENCE_TASK( uVar6 );
        CLEAR_PED_TASKS( l_U392 );
        TASK_PERFORM_SEQUENCE( l_U392, uVar6 );
        CLEAR_SEQUENCE_TASK( uVar6 );
    }
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_18395(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_16660( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_HANDLE_EVENTS */ void sub_18829()
{
    int iVar2;
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    vector vVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;

    iVar2 = l_U92;
    iVar3 = ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_18868( ref l_U553 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_18868( ref l_U757 ));
     /* P_BF_HANDLE_LUGGAGE_DAMAGE_ANIMATING */ sub_18993();
     /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_19552( ref l_U553, -1054867456, 0, 1 );
     /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_19552( ref l_U757, -1054867456, 0, 1 );
    switch (l_U92)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_19997();
         /* P_SETUP_STATIC_DATA */ sub_20590();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U92 = 2;
         /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_REQUEST_BECKER_PERSISTENT_ASSETS */ sub_24036();
         /* P_REQUEST_BECKER_NONPERSISTENT_ASSETS */ sub_37381();
        l_U92 = 3;
         /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (( /* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ sub_45824( ref g_U1950 )) AND (( /* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ sub_45438( ref g_U1910 )) AND (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_45024( ref g_U1368 )) AND (( /* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ sub_44604( ref g_U1638 )) AND (( /* F_STREAMREQ_ACTION_TREE_IS_LOADED */ sub_44226( ref g_U1783 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_43835( ref g_U1429 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_43433( ref g_U1247 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_43036( ref g_U1030 )))))))))
        {
            g_U831[9] = 1;
            if ((NOT l_U56._fU0) AND ((g_U829 == 10) || (g_U829 == 9)))
            {
                 /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
                l_U92 = 4;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
                l_U92 = 6;
            }
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUPS", 0 );
        l_U94 = 0;
        g_U846[9] = 1;
        if (( /* HAS_SAVEFILE_LOADED */ sub_46452( ref l_U56 )) == 0)
        {
             /* F_GIVEPEDWEAPON */ sub_12270(  /* PLAYER_PED_ID */ sub_2515(), 57534114, 200, 0, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11475(  /* PLAYER_PED_ID */ sub_2515(), -612753081, 1, 200, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11475(  /* PLAYER_PED_ID */ sub_2515(), -1464892298, 0, 200, 0 );
            l_U92 = 5;
             /* WRITESCRIPTLOG */ sub_1068( "CR", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U92 = 6;
             /* WRITESCRIPTLOG */ sub_1068( "CR", "eCheckpointState = CP_LOAD_LEVEL_VEHICLES", 0 );
        }
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2515(), 0 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2515(), 1 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 0, 0 ) ))))
            {
                g_U830 = g_U829;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_47080( ref l_U56, g_U830,  /* PLAYER_PED_ID */ sub_2515(), g_U2014[9], g_U2129[9], g_U2168[9], g_U2207[9], 1 );
                l_U92 = 6;
                 /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
            }
        }
        break;
        case 6:
         /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_LOAD_LEVEL_VEHICLES", 0 );
         /* P_BF_CREATE_JET */ sub_51797();
        l_U92 = 7;
        break;
        case 7:
        if (l_U93)
        {
            l_U560 = 1;
        }
        if ((l_U560 != 4) AND (l_U560 != 0))
        {
             /* P_BF_SPAWN_HANGAR_ENEMIES */ sub_52117();
        }
        if (l_U560 == 4)
        {
             /* P_SETUP_BECKER */ sub_54839();
            l_U92 = 8;
        }
        break;
        case 8:
        if (g_U846[9])
        {
             /* P_BF_SETUP_WEATHER_TOD */ sub_55186();
            if (g_U830 == 10)
            {
                 /* P_BF_CREATE_PLACEMENTS */ sub_55356();
                 /* P_BF_CREATE_LUGGAGE_CARTS */ sub_56232();
                if (GET_ADRENALINE_AMT() < 0.50000000)
                {
                    SET_ADRENALINE_AMT( 0.50000000 );
                }
                CAMERA_CAN_TARGET_PROJECTILES( 1 );
                l_U92 = 15;
                 /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_BECKER_MPM_NIS", 0 );
            }
            else if (l_U94)
            {
                if (CUTSCENE_IS_LOADED( "14_03_FIN_concat" ))
                {
                    l_U92 = 9;
                     /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_HANDLE_CUT_04", 0 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_1068( "GA", "Waiting for 14_03_FIN_concat to load ...", 0 );
                }
            }
            else
            {
                l_U92 = 9;
                 /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_HANDLE_CUT_04", 0 );
            }
        }
        break;
        case 9:
        if (l_U93)
        {
             /* P_BF_CREATE_PLACEMENTS */ sub_55356();
             /* P_BF_CREATE_LUGGAGE_CARTS */ sub_56232();
            if (GET_ADRENALINE_AMT() < 0.50000000)
            {
                SET_ADRENALINE_AMT( 0.50000000 );
            }
            CAMERA_CAN_TARGET_PROJECTILES( 1 );
            SET_PLAYER_IN_BECKER_BOSS_FIGHT(  /* PLAYER_ID */ sub_2553(), 1 );
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_67584( ref l_U98, "14_03_FIN_concat", 57127, 57290, 60573, 63158, 63207, 66342, 250, 0 );
            l_U98._fU104 = 0;
            if (l_U94)
            {
                l_U98._fU4 = 2;
            }
            else
            {
                l_U98._fU4 = 7;
            }
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_68151( ref l_U98 ))
        {
            SET_POST_LMS_DAMAGE_TO_PLAYER_OVERRIDES( 10000, 0.25000000 );
            l_U92 = 10;
             /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_BECKER_GAMEPLAY_GRENADE_1", 0 );
        }
        break;
        case 10:
        if (l_U93)
        {
            if (g_U830 != 9)
            {
                g_U830 = 9;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_47080( ref l_U56, g_U830,  /* PLAYER_PED_ID */ sub_2515(), g_U2014[9], g_U2129[9], g_U2168[9], g_U2207[9], 1 );
            }
             /* P_START_GRENADE_1_GAMEPLAY */ sub_70517();
        }
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))))
        {
            if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_70828( l_U1009 )))
            {
                l_U92 = 14;
                 /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_BECKER_FAIL_HIT_WITH_GRENADE", 0 );
            }
        }
         /* P_HANDLE_GRENADE_EXPLOSIONS */ sub_70955();
         /* P_BF_HANDLE_PLAYER_GOING_INTO_FIRE */ sub_71952();
         /* P_HANDLE_BECKER_FIRING */ sub_72007();
         /* P_BF_HANDLE_PLANE */ sub_72624();
         /* P_BF_HANDLE_BECKER_TAUNTING */ sub_73872();
        if ((iVar3 <= 4) AND (NOT l_U171._fU20))
        {
             /* STARTTIMER */ sub_3865( ref l_U171 );
        }
        if ( /* ISTIMERDONE */ sub_3998( ref l_U171 ))
        {
            l_U92 = 11;
             /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_BECKER_GAMEPLAY_GRENADE_2", 0 );
        }
        break;
        case 11:
        if (l_U93)
        {
             /* P_START_GRENADE_2_GAMEPLAY */ sub_76208();
        }
         /* P_HANDLE_GRENADE_EXPLOSIONS */ sub_70955();
         /* P_BF_HANDLE_PLAYER_GOING_INTO_FIRE */ sub_71952();
         /* P_HANDLE_BECKER_FIRING */ sub_72007();
         /* P_BF_HANDLE_PLANE */ sub_72624();
         /* P_BF_HANDLE_BECKER_TAUNTING */ sub_73872();
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))))
        {
            if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_70828( l_U1009 )))
            {
                l_U92 = 14;
                 /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_BECKER_FAIL_HIT_WITH_GRENADE", 0 );
            }
        }
        if ( /* ISTIMERDONE */ sub_3998( ref l_U181 ))
        {
            if ( /* F_BF_CAN_BECKER_SHOOT_AT_PLAYER */ sub_72131())
            {
                 /* P_BECKER_FIRE_GRENADE */ sub_17990(  /* F_GET_BECKER_AIM_COORD */ sub_17612(), 4000 );
                l_U434 = 0;
            }
            else
            {
                l_U434 = 1;
                 /* RESETTIMER */ sub_4574( ref l_U435 );
            }
        }
        if (l_U434)
        {
            if (NOT l_U435._fU20)
            {
                if ( /* F_BF_CAN_BECKER_SHOOT_AT_PLAYER */ sub_72131())
                {
                     /* WRITESCRIPTLOG */ sub_1068( "GA", "Becker can fire at Max.", 0 );
                     /* STARTTIMER */ sub_3865( ref l_U435 );
                }
            }
            if ( /* ISTIMERDONE */ sub_3998( ref l_U435 ))
            {
                if ( /* F_BF_CAN_BECKER_SHOOT_AT_PLAYER */ sub_72131())
                {
                     /* WRITESCRIPTLOG */ sub_1068( "GA", "Becker firing his delayed grenade.", 0 );
                     /* P_BECKER_FIRE_GRENADE */ sub_17990(  /* F_GET_BECKER_AIM_COORD */ sub_17612(), 4000 );
                    l_U434 = 0;
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_1068( "GA", "Player went unavailable again.", 0 );
                     /* RESETTIMER */ sub_4574( ref l_U435 );
                }
            }
        }
        if ((l_U768 != 4) AND (l_U768 != 0))
        {
             /* P_BF_SPAWN_REINFORCEMENT_ENEMIES_W1 */ sub_76840();
        }
        if (l_U768 == 4)
        {
             /* P_BF_HANDLE_REINFORCEMENT_CARS_ARRIVING */ sub_79756();
        }
        if ((NOT ( /* F_BF_ARE_ANY_LIVING_REINFORCEMENT_ENEMIES_STILL_IN_CAR */ sub_81006())) AND ((l_U618[1]) AND (l_U618[0])))
        {
            if ((iVar3 <= 5) AND (NOT l_U190._fU20))
            {
                 /* STARTTIMER */ sub_3865( ref l_U190 );
            }
            if ( /* ISTIMERDONE */ sub_3998( ref l_U190 ))
            {
                l_U92 = 12;
                 /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_BECKER_GAMEPLAY_GRENADE_3", 0 );
            }
        }
        break;
        case 12:
        if (l_U93)
        {
             /* P_START_GRENADE_3_GAMEPLAY */ sub_81277();
        }
         /* P_HANDLE_GRENADE_EXPLOSIONS */ sub_70955();
         /* P_BF_HANDLE_PLAYER_GOING_INTO_FIRE */ sub_71952();
         /* P_HANDLE_BECKER_FIRING */ sub_72007();
         /* P_BF_HANDLE_PLANE */ sub_72624();
         /* P_BF_HANDLE_BECKER_TAUNTING */ sub_73872();
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))))
        {
            if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_70828( l_U1009 )))
            {
                l_U92 = 14;
                 /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_BECKER_FAIL_HIT_WITH_GRENADE", 0 );
            }
        }
        if ( /* ISTIMERDONE */ sub_3998( ref l_U200 ))
        {
            if ( /* F_BF_CAN_BECKER_SHOOT_AT_PLAYER */ sub_72131())
            {
                 /* P_BECKER_FIRE_GRENADE */ sub_17990(  /* F_GET_BECKER_AIM_COORD */ sub_17612(), 4000 );
                l_U434 = 0;
            }
            else
            {
                l_U434 = 1;
                 /* RESETTIMER */ sub_4574( ref l_U435 );
            }
        }
        if (l_U434)
        {
            if (NOT l_U435._fU20)
            {
                if ( /* F_BF_CAN_BECKER_SHOOT_AT_PLAYER */ sub_72131())
                {
                     /* WRITESCRIPTLOG */ sub_1068( "GA", "Becker can fire at Max.", 0 );
                     /* STARTTIMER */ sub_3865( ref l_U435 );
                }
            }
            if ( /* ISTIMERDONE */ sub_3998( ref l_U435 ))
            {
                if ( /* F_BF_CAN_BECKER_SHOOT_AT_PLAYER */ sub_72131())
                {
                     /* WRITESCRIPTLOG */ sub_1068( "GA", "Becker firing his delayed grenade.", 0 );
                     /* P_BECKER_FIRE_GRENADE */ sub_17990(  /* F_GET_BECKER_AIM_COORD */ sub_17612(), 4000 );
                    l_U434 = 0;
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_1068( "GA", "Player went unavailable again.", 0 );
                     /* RESETTIMER */ sub_4574( ref l_U435 );
                }
            }
        }
        if ((l_U770 != 4) AND (l_U770 != 0))
        {
             /* P_BF_SPAWN_REINFORCEMENT_ENEMIES_W2 */ sub_81909();
        }
        if (l_U770 == 4)
        {
             /* P_BF_HANDLE_REINFORCEMENT_CARS_ARRIVING */ sub_79756();
        }
        if ((NOT ( /* F_BF_ARE_ANY_LIVING_REINFORCEMENT_ENEMIES_STILL_IN_CAR */ sub_81006())) AND (l_U618[2]))
        {
            if ((iVar3 <= 5) AND (NOT l_U209._fU20))
            {
                 /* STARTTIMER */ sub_3865( ref l_U209 );
            }
            if ( /* ISTIMERDONE */ sub_3998( ref l_U209 ))
            {
                l_U92 = 13;
                 /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_BECKER_GAMEPLAY_GRENADE_4", 0 );
            }
        }
        break;
        case 13:
        if (l_U93)
        {
             /* P_START_GRENADE_4_GAMEPLAY */ sub_83572();
        }
        if (NOT IS_BULLET_CAMERA_ACTIVE())
        {
             /* P_HANDLE_GRENADE_EXPLOSIONS */ sub_70955();
        }
        if (NOT IS_BULLET_CAMERA_ACTIVE())
        {
             /* P_BF_HANDLE_PLAYER_GOING_INTO_FIRE */ sub_71952();
        }
         /* P_HANDLE_BECKER_FIRING */ sub_72007();
         /* P_BF_HANDLE_PLANE */ sub_72624();
         /* P_BF_HANDLE_BECKER_TAUNTING */ sub_73872();
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))))
        {
            if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_70828( l_U1009 )))
            {
                l_U92 = 14;
                 /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_BECKER_FAIL_HIT_WITH_GRENADE", 0 );
            }
        }
        if (l_U434)
        {
            if (NOT l_U435._fU20)
            {
                if ( /* F_BF_CAN_BECKER_SHOOT_AT_PLAYER */ sub_72131())
                {
                     /* WRITESCRIPTLOG */ sub_1068( "GA", "Becker can fire at Max.", 0 );
                     /* STARTTIMER */ sub_3865( ref l_U435 );
                }
            }
            if ( /* ISTIMERDONE */ sub_3998( ref l_U435 ))
            {
                if ( /* F_BF_CAN_BECKER_SHOOT_AT_PLAYER */ sub_72131())
                {
                     /* WRITESCRIPTLOG */ sub_1068( "GA", "Becker firing his delayed grenade.", 0 );
                     /* P_BECKER_FIRE_GRENADE */ sub_17990(  /* F_GET_BECKER_AIM_COORD */ sub_17612(), 4000 );
                    l_U434 = 0;
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_1068( "GA", "Player went unavailable again.", 0 );
                     /* RESETTIMER */ sub_4574( ref l_U435 );
                }
            }
        }
        if (NOT l_U787)
        {
            if (iVar3 == 1)
            {
                 /* WRITESCRIPTLOG */ sub_1068( "GA", "Assigning bullet cam to last living ped.", 0 );
                uVar4 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_84259( ref l_U553 );
                if (NOT (IS_PED_DEAD( uVar4 )))
                {
                    SET_BULLET_CAM_PREF( uVar4, "", "", "", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                }
                uVar4 =  /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_84259( ref l_U757 );
                if (NOT (IS_PED_DEAD( uVar4 )))
                {
                    SET_BULLET_CAM_PREF( uVar4, "", "", "", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                }
                l_U787 = 1;
            }
        }
        if (NOT l_U378)
        {
            if (iVar3 == 0)
            {
                 /* WRITESCRIPTLOG */ sub_1068( "MF", "Music Cue: 9.1", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_5", "FINALE_01_5", 0.00000000, 3000, 10000, -1082130432, 0 );
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                l_U378 = 1;
            }
        }
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (iVar3 == 0)))
        {
            SET_PLAYER_IN_BECKER_BOSS_FIGHT(  /* PLAYER_ID */ sub_2553(), 0 );
            l_U92 = 15;
             /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_BECKER_MPM_NIS", 0 );
        }
        break;
        case 14:
        if (l_U93)
        {
             /* NIS_PRE_SETUP */ sub_69042( 1, 0, 0, 1 );
             /* KILL_SPEECH */ sub_84790( ref l_U444, 0 );
            CLEAR_PROJECTILES();
            if ((NOT (IS_PED_DEAD( l_U392 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() ))))
            {
                uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2515() )};
                uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U392 )};
                if (uVar5._fU0 > uVar8._fU0)
                {
                     /* NIS_CREATE_STATIC_CAM */ sub_85095( ref l_U1039, -832.93000000, -732.41000000, -5.09000000, 14.31000000, -0.03000000, -56.84000000, 12.15000000, 0 );
                }
                else
                {
                     /* NIS_CREATE_STATIC_CAM */ sub_85095( ref l_U1039, -824.32000000, -731.04000000, -3.90000000, 8.76000000, -0.54000000, 51.43000000, 21.18000000, 0 );
                }
            }
             /* NIS_PLAY_STATIC_CAMERA */ sub_85382( ref l_U1039 );
            SHAKE_CAM( l_U1039._fU0, "HAND_SHAKE", 1065353216 );
            if (NOT (IS_PED_DEAD( l_U392 )))
            {
                CLEAR_PED_TASKS( l_U392 );
                PED_SET_ACTION_INTENTION( l_U392, 53, 1000, 0.00000000, 0.00000000, 0.00000000 );
            }
             /* STARTTIMER */ sub_3865( ref l_U1030 );
             /* STARTTIMER */ sub_3865( ref l_U1071 );
        }
        if ( /* ISTIMERDONE */ sub_3998( ref l_U1030 ))
        {
            if (NOT (IS_PED_DEAD( l_U392 )))
            {
                 /* WRITESCRIPTLOG */ sub_1068( "GA", "Kill shot fire grenade.", 0 );
                SET_PED_SHOOTS_AT_COORD( l_U392, -830.78000000, -757.17000000, 10.00000000 );
            }
        }
        if ( /* ISTIMERDONE */ sub_3998( ref l_U1071 ))
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "Showing explosion killing Max.", 0 );
            if ((NOT (IS_PED_DEAD( l_U392 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() ))))
            {
                vVar11 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2515() )};
                uVar14 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U392 )};
                if (vVar11.x > uVar14._fU0)
                {
                     /* NIS_CREATE_STATIC_CAM */ sub_85095( ref l_U1080, vVar11 + l_U1117, l_U1120, 1110704128, 1000 );
                }
                else
                {
                     /* NIS_CREATE_STATIC_CAM */ sub_85095( ref l_U1080, vVar11 + l_U1111, l_U1114, 1110704128, 1000 );
                }
                 /* NIS_PLAY_STATIC_CAMERA */ sub_85382( ref l_U1080 );
                 /* P_IMAGEFX_START_BULLETCAM */ sub_85954( "AIR_BECKER1_SCRIPTED_FAIL_FX", 0 );
                if (NOT (IS_PED_DEAD( l_U392 )))
                {
                    POINT_CAM_AT_PED( l_U1080._fU0, l_U392, 0, 0, 0, 0 );
                }
                SHAKE_CAM( l_U1080._fU0, "SMALL_EXPLOSION_SHAKE", 2.00000000 );
            }
            CLEAR_PROJECTILES();
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
            {
                uVar17 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2515() )};
                uVar17._fU4 += 0.60000000;
                uVar17._fU8 = -6.40000000;
                ADD_EXPLOSION( uVar17, 0, 2.00000000, 1, 0, 1.00000000 );
            }
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
            {
                uVar20 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2515() )};
                GET_GROUND_Z_FOR_3D_COORD( uVar20, ref uVar26 );
                uVar20._fU8 = uVar26;
                uVar23 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U392 )};
                if (uVar20._fU0 > uVar23._fU0)
                {
                     /* TELEPORTPED */ sub_2626(  /* PLAYER_PED_ID */ sub_2515(), uVar20, 10.00000000 );
                }
                else
                {
                     /* TELEPORTPED */ sub_2626(  /* PLAYER_PED_ID */ sub_2515(), uVar20, -25.00000000 );
                }
                ISEQ_REGISTER_ENTITY( 1347850635, "player",  /* PLAYER_PED_ID */ sub_2515(), 0 );
                ISEQ_START( 1347850635 );
            }
            if (GET_ADRENALINE_AMT() < 0.10000000)
            {
                SET_ADRENALINE_AMT( 0.10000000 );
            }
            ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
             /* STARTTIMER */ sub_3865( ref l_U1123 );
        }
        if ( /* ISTIMERDONE */ sub_3998( ref l_U1123 ))
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "End of kill shot on Max.", 0 );
            l_U95 = 1;
        }
        break;
        case 15:
        if (l_U93)
        {
             /* P_BF_SETUP_MPM_NIS */ sub_86732();
             /* P_START_CHECKPOINT_THREAD */ sub_87871( ref g_U861[11] );
             /* NIS_PRE_SETUP */ sub_69042( 1, 0, 0, 1 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_FIN_CP_09", "VIG_11_FIN_FWD_CAM", 0, 0, 0, 0, 0, 0, 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            SET_CAMERA_OVERRIDE( "BECKER_MPM_AIM_CAMERA", "BECKER_MPM_AIM_CAMERA", 0, 1, 1 );
             /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_60642( 1 );
             /* P_PLAYER_HOLSTER_WEAPONS */ sub_88070( ref uVar27, 1, 1 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_2515() );
                RESET_PLAYER_INPUT_GAIT( 0 );
                 /* P_RESET_MAX_ACTION_TREE */ sub_5541();
            }
             /* TELEPORTPED */ sub_2626(  /* PLAYER_PED_ID */ sub_2515(), g_U2014[10], g_U2129[10] );
            ISEQ_REGISTER_ENTITY( -670135969, "Max",  /* PLAYER_PED_ID */ sub_2515(), 0 );
            ISEQ_START( -670135969 );
            START_PLAYER_SHOOTDODGE( 0.00000000, 1.00000000, 0.00000000, 0, 0, 0.00000000, 4.00000000 );
            ADD_EXPLOSION( -834.76000000, -749.44000000, -6.74000000, 0, 2.00000000, 1, 0, 1.00000000 );
             /* P_BECKER_FIRE_GRENADE */ sub_17990( -839.62000000, -757.73000000, -6.74000000, 2000 );
             /* STARTTIMER */ sub_3865( ref l_U1133 );
            if (NOT l_U378)
            {
                 /* WRITESCRIPTLOG */ sub_1068( "MF", "Music Cue: 10.0", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_5", "FINALE_01_5", 0.00000000, 0, 0, -1082130432, 0 );
                l_U378 = 1;
            }
        }
        else
        {
            DO_SCREEN_FADE_IN( 0 );
            if (g_U830 != 10)
            {
                g_U830 = 10;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_47080( ref l_U56, g_U830,  /* PLAYER_PED_ID */ sub_2515(), g_U2014[10], g_U2129[10], g_U2168[10], g_U2207[10], 1 );
            }
            l_U92 = 16;
             /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpoint = CP_BECKER_GAMEPLAY_MPM", 0 );
        }
        break;
        case 16:
        if (l_U93)
        {
            if (NOT l_U378)
            {
                 /* WRITESCRIPTLOG */ sub_1068( "MF", "Music Cue: 10.0", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_5", "FINALE_01_5", 0.00000000, 0, 0, -1082130432, 0 );
                l_U378 = 1;
            }
        }
        if ( /* ISTIMERDONE */ sub_3998( ref l_U1133 ))
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "Becker firing second NIS grenade.", 0 );
             /* P_BECKER_FIRE_GRENADE */ sub_17990( -838.83000000, -748.04000000, -6.74000000, 1000 );
        }
        if (NOT l_U1142)
        {
            if (IS_PLAYER_SHOOTDODGING())
            {
                 /* NIS_POST_SETUP */ sub_69966( 1, 1 );
                 /* P_BF_START_MPM */ sub_89628();
                l_U1142 = 1;
            }
            else
            {
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[10], 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[10], 1065353216, 0 );
            }
        }
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS(  /* PLAYER_PED_ID */ sub_2515(), 47 )) == 3)
            {
                 /* WRITESCRIPTLOG */ sub_1068( "GA", "Drop player's two handed weapon.", 0 );
                if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2515(), 2 ) ))
                {
                    REMOVE_PED_WEAPON(  /* PLAYER_PED_ID */ sub_2515(), GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2515(), 2 ) );
                }
                PED_FINISH_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_2515(), 47 );
            }
        }
        if ( /* ISTIMERDONE */ sub_3998( ref l_U1158 ))
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "Becker shooting during MPM.", 0 );
             /* P_BECKER_FIRE_GRENADE */ sub_17990( l_U1143, 4000 );
        }
        if (NOT (IS_VEHICLE_DEAD( l_U569 )))
        {
            if (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U569 )))
            {
                 /* WRITESCRIPTLOG */ sub_1068( "GA", "Plane reached the end of it's path, deleting.", 0 );
                 /* CLEANVEHICLE */ sub_9221( l_U569 );
            }
        }
        if (IS_BULLET_CAMERA_RUNNING( 0 ))
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
            g_U846[11] = 1;
            l_U92 = 17;
             /* WRITESCRIPTLOG */ sub_1068( "GA", "eCheckpointState = CP_BECKER_MPM_WIN", 0 );
            break;
        }
        if ( /* ISTIMERDONE */ sub_3998( ref l_U1147 ))
        {
            SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
             /* P_IMAGEFX_START_BULLETCAM */ sub_85954( "AIR_BECKER2_SCRIPTED_FAIL_FX", 0 );
            l_U92 = 18;
             /* WRITESCRIPTLOG */ sub_1068( "GA", "eCheckpointState = CP_BECKER_MPM_LOSE", 0 );
            break;
        }
        break;
        case 17:
        if (l_U93)
        {
             /* P_START_MPM_WIN_SEQUENCE */ sub_90563();
        }
        if (NOT (IS_VEHICLE_DEAD( l_U569 )))
        {
            if (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U569 )))
            {
                 /* WRITESCRIPTLOG */ sub_1068( "GA", "Plane reached the end of it's path, deleting.", 0 );
                 /* CLEANVEHICLE */ sub_9221( l_U569 );
            }
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
             /* CLEANPED */ sub_8971( l_U392 );
             /* P_BF_END_MPM */ sub_93170();
            l_U92 = 19;
        }
        break;
        case 18:
         /* P_BF_END_MPM */ sub_93170();
        DEACTIVATE_BULLET_TIME( 1, 0 );
         /* NIS_CREATE_STATIC_CAM */ sub_85095( ref l_U1184, -827.23000000, -727.37000000, -3.52000000, -8.28000000, -2.09000000, 146.24000000, 44.34000000, 1000 );
         /* NIS_PLAY_STATIC_CAMERA */ sub_85382( ref l_U1184 );
        SHAKE_CAM( l_U1184._fU0, "MEDIUM_EXPLOSION_SHAKE", 1065353216 );
        CLEAR_PROJECTILES();
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
        {
            uVar45 = {(vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2515() ))) + (vector( 0.50000000, 1.00000000, 0.00000000))};
            ADD_EXPLOSION( uVar45, 0, 2.00000000, 1, 0, 1.00000000 );
            SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_2515(), 0 );
        }
        if (NOT (IS_PED_DEAD( l_U392 )))
        {
            PED_SET_ACTION_INTENTION( l_U392, 50, 1000, 0.00000000, 0.00000000, 0.00000000 );
        }
         /* CLEANVEHICLE */ sub_9221( l_U569 );
        l_U96 = 1;
        break;
        case 19:
        if ((g_U830 != 10) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U92 = 0;
             /* WRITESCRIPTLOG */ sub_1068( "SA", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U92 != iVar2)
    {
        l_U93 = 1;
    }
    else
    {
        l_U93 = 0;
    }
    return;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_18868(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* P_BF_HANDLE_LUGGAGE_DAMAGE_ANIMATING */ void sub_18993()
{
    int I;

    for ( I = 0; I <= 2; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U355[I] ))
        {
            if (l_U359[I] == 1)
            {
                if (IS_OBJECT_PLAYING_ANIM( l_U355[I], l_U363[I], "ap_anim_hangar" ))
                {
                    if ((GET_OBJECT_ANIM_CURRENT_TIME( l_U355[I], l_U363[I], "ap_anim_hangar" )) >= l_U367[I])
                    {
                         /* WRITESCRIPTLOG */ sub_1068( "GA", "Pausing luggage animation between first and second hit.", 0 );
                        SET_OBJECT_ANIM_SPEED( l_U355[I], l_U363[I], "ap_anim_hangar", 0.00000000 );
                        l_U359[I] = 2;
                    }
                }
            }
            else if (l_U359[I] == 3)
            {
                if (IS_OBJECT_PLAYING_ANIM( l_U355[I], l_U363[I], "ap_anim_hangar" ))
                {
                    if ((GET_OBJECT_ANIM_CURRENT_TIME( l_U355[I], l_U363[I], "ap_anim_hangar" )) >= 0.99000000)
                    {
                         /* WRITESCRIPTLOG */ sub_1068( "GA", "Luggage animation completed second hit.", 0 );
                        ADD_OBJECT_TO_EXPLOSION_OCCLUSION_TESTS( l_U355[I], 0 );
                        l_U359[I] = 4;
                    }
                }
            }
        }
    }
    return;
}

/* P_PED_ARRAY_Z_SAFETY_CHECK */ void sub_19552(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_PED_Z_SAFETY_CHECK */ sub_19618( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_PED_Z_SAFETY_CHECK */ void sub_19618(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                 /* CLEANPED */ sub_8971( uParam0 );
            }
        }
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_19997()
{
     /* WRITESCRIPTLOG */ sub_1068( "SA", "INITIALIZE_SCRIPT_DATA - START", 0 );
    l_U93 = 1;
    l_U96 = 0;
    l_U309 = 0;
     /* CREATETIMER */ sub_3715( ref l_U310, 1000, 1, 0 );
    l_U359[0] = 0;
    l_U359[1] = 0;
    l_U359[2] = 0;
     /* CREATETIMER */ sub_3715( ref l_U423, GET_RANDOM_INT_IN_RANGE( l_U432, l_U433 ), 1, 0 );
    l_U375 = 0;
    l_U376 = 0;
    l_U377 = 0;
    l_U378 = 0;
    l_U788 = 0;
    l_U789 = 1;
    l_U434 = 0;
     /* CREATETIMER */ sub_3715( ref l_U435, 3000, 1, 0 );
     /* CREATETIMER */ sub_3715( ref l_U171, 2000, 1, 0 );
     /* CREATETIMER */ sub_3715( ref l_U181, l_U180, 1, 0 );
     /* CREATETIMER */ sub_3715( ref l_U190, 2000, 1, 0 );
     /* CREATETIMER */ sub_3715( ref l_U200, l_U199, 1, 0 );
     /* CREATETIMER */ sub_3715( ref l_U209, 2000, 1, 0 );
    l_U598 = 0;
    l_U599 = 0;
     /* CREATETIMER */ sub_3715( ref l_U601, 2000, 1, 0 );
     /* CREATETIMER */ sub_3715( ref l_U1030, 1000, 1, 0 );
     /* CREATETIMER */ sub_3715( ref l_U1071, l_U1070, 1, 0 );
     /* CREATETIMER */ sub_3715( ref l_U1123, 2000, 1, 1 );
    l_U560 = 0;
    l_U561 = 0;
    l_U768 = 0;
    l_U769 = 0;
    l_U770 = 0;
    l_U771 = 8;
    l_U618[0] = 0;
    l_U618[1] = 0;
    l_U618[2] = 0;
    l_U787 = 0;
    l_U1142 = 0;
     /* CREATETIMER */ sub_3715( ref l_U1133, l_U1132, 1, 0 );
     /* CREATETIMER */ sub_3715( ref l_U1147, l_U1146, 1, 0 );
     /* CREATETIMER */ sub_3715( ref l_U1158, l_U1157, 1, 0 );
    l_U126 = 0;
    l_U125 = 0;
     /* CREATETIMER */ sub_3715( ref l_U454, 2000, 1, 0 );
    l_U463 = 0;
     /* CREATETIMER */ sub_3715( ref l_U464, 2000, 1, 0 );
    l_U473 = 0;
     /* WRITESCRIPTLOG */ sub_1068( "SA", "INITIALIZE_SCRIPT_DATA - END", 0 );
    return;
}

/* P_SETUP_STATIC_DATA */ void sub_20590()
{
    unknown[4] uVar2;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;
    unknown uVar51;
    unknown uVar52;
    unknown uVar53;
    unknown uVar54;
    unknown uVar55;
    unknown uVar56;
    unknown uVar57;
    unknown uVar58;
    unknown uVar59;
    unknown uVar60;
    unknown uVar61;
    unknown uVar62;
    unknown uVar63;
    unknown uVar64;
    unknown uVar65;
    unknown uVar66;
    unknown uVar67;
    unknown uVar68;
    unknown uVar69;
    unknown uVar70;
    unknown uVar71;
    unknown uVar72;
    unknown uVar73;
    unknown uVar74;
    unknown uVar75;
    unknown uVar76;
    unknown uVar77;
    unknown uVar78;
    unknown uVar79;
    unknown uVar80;
    unknown uVar81;
    unknown uVar82;
    unknown uVar83;
    unknown uVar84;
    unknown uVar85;
    unknown uVar86;

     /* WRITESCRIPTLOG */ sub_1068( "CR", "LOAD_ASSETS - START", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U127, -828.91000000, -752.69000000, -6.70000000, 90.00000000, -1283807603, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U379, l_U393, l_U396, 621371016, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U580, -809.00000000, -736.74680000, -6.73908700, l_U597, 270627203, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U474[0], -821.11000000, -724.56000000, -6.70000000, 180.00000000, -1964312659, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U474[1], -816.57000000, -727.55000000, -6.70000000, 148.00000000, 565778318, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U474[2], -814.33000000, -729.84000000, -6.70000000, 136.00000000, -956334494, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U474[3], -833.29000000, -717.46000000, -6.70000000, 180.00000000, -2142812815, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U474[4], -837.74000000, -704.05000000, -6.70000000, 220.00000000, 300568837, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U474[5], -839.45000000, -712.11000000, -6.70000000, 220.00000000, -191687929, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U626[0], -817.46000000, -739.59000000, -6.70000000, 150.00000000, -868935864, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U626[1], -819.96000000, -741.03000000, -6.70000000, 130.00000000, 1617652839, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U626[2], -819.96000000, -742.03000000, -6.70000000, 130.00000000, -605387266, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U626[3], -819.96000000, -743.03000000, -6.70000000, 130.00000000, -1806766767, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U626[4], -832.57000000, -736.78000000, -6.70000000, 130.00000000, 995987111, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U626[5], -835.99000000, -735.37000000, -6.70000000, 260.00000000, 1572979149, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U626[6], -835.20000000, -734.24000000, -6.70000000, 190.00000000, -1809698420, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U626[7], -835.20000000, -735.24000000, -6.70000000, 190.00000000, -220943734, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U626[8], -818.88000000, -732.19000000, -6.70000000, 130.00000000, 1678515151, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_20692( ref l_U626[9], -816.48000000, -729.95000000, -6.70000000, 155.00000000, 1866506332, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_21694( ref l_U224[3], "TRIGGER_COVER_1", -838.68000000, -750.74000000, -6.75000000, 2.39000000, 1.05000000, 1.66000000, 0.00000000, 0.00000000, -40.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_21694( ref l_U224[0], "TRIGGER_COVER_2", -835.11000000, -752.45000000, -6.75000000, 2.92000000, 1.05000000, 1.66000000, 0.00000000, 0.00000000, -10.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_21694( ref l_U224[1], "TRIGGER_COVER_3", -832.30000000, -752.90000000, -6.75000000, 2.67000000, 1.05000000, 1.66000000, 0.00000000, 0.00000000, -5.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_21694( ref l_U224[2], "TRIGGER_COVER_4", -828.38000000, -752.13000000, -6.75000000, 2.64000000, 1.05000000, 1.66000000, 0.00000000, 0.00000000, 20.00000000, 1 );
    array(ref uVar2, 4);
     /* P_CREATETRIGGERBOX */ sub_21694( ref uVar2[0], "tb_BF_DieInAFire[0]", -844.17000000, -742.93000000, -6.74000000, 9.21000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_21694( ref uVar2[1], "tb_BF_DieInAFire[1]", -834.91000000, -745.20000000, -6.74000000, 9.21000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_21694( ref uVar2[2], "tb_BF_DieInAFire[2]", -826.66000000, -746.35000000, -6.74000000, 9.21000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, -10.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_21694( ref uVar2[3], "tb_BF_DieInAFire[3]", -822.51000000, -756.03000000, -6.74000000, 15.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
     /* P_CREATETRIGGERREGION */ sub_22366( ref l_U865, ref uVar2 );
     /* P_CREATETRIGGERBOX */ sub_21694( ref l_U402, "tb_BF_PlayerSafeArea", -833.13000000, -755.19000000, -6.82000000, 23.69000000, 16.78000000, 3.59000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_21694( ref l_U1009, "tb_BF_PlayerFailBox", -833.10000000, -751.85000000, -6.82000000, 31.29000000, 23.81000000, 3.59000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_22905( ref l_U1006, "teth_BF_OutOfFireA", -818.67000000, -732.71000000, -6.84000000, 60.20000000, 22.37000000, 5.20000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_22905( ref l_U1007, "teth_BF_OutOfFireB", -824.87000000, -742.23000000, -6.84000000, 10.00000000, 10.00000000, 5.20000000, 0.00000000, 0.00000000, -15.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_22905( ref l_U1008, "teth_BF_OutOfFireC", -807.43000000, -752.80000000, -6.84000000, 30.00000000, 22.37000000, 5.20000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEDOORSTRUCT */ sub_23180( ref l_U143, 1854128078, -845.73500000, -764.31090000, -5.63138000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_CLOSEDOOR */ sub_23249( ref l_U143, 1 );
     /* P_SETDOORLOCKED */ sub_23506( ref l_U143, 1 );
     /* P_CREATEDOORSTRUCT */ sub_23180( ref l_U150, -177757171, -845.73510000, -766.71090000, -5.63138000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_CLOSEDOOR */ sub_23249( ref l_U150, 1 );
     /* P_SETDOORLOCKED */ sub_23506( ref l_U150, 1 );
     /* P_CREATEDOORSTRUCT */ sub_23180( ref l_U157, 1727764963, -830.87210000, -763.63670000, -5.64607000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_CLOSEDOOR */ sub_23249( ref l_U157, 1 );
     /* P_SETDOORLOCKED */ sub_23506( ref l_U157, 1 );
     /* P_CREATEDOORSTRUCT */ sub_23180( ref l_U164, 383934658, -833.27800000, -763.67880000, -5.64595000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_CLOSEDOOR */ sub_23249( ref l_U164, 1 );
     /* P_SETDOORLOCKED */ sub_23506( ref l_U164, 1 );
    SET_PED_MODEL_LOD_DISTANCES( 2113814688, 10, 80 );
     /* WRITESCRIPTLOG */ sub_1068( "CR", "LOAD_ASSETS - END", 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_20692(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_21694(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETRIGGERREGION */ void sub_22366(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
         /* WRITESCRIPTLOG */ sub_1068( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

/* P_CREATETETHERBOX */ void sub_22905(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEDOORSTRUCT */ void sub_23180(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

/* P_CLOSEDOOR */ void sub_23249(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_23275( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_23359( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_23275(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_23359(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_SETDOORLOCKED */ void sub_23506(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_23275( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_23359( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_REQUEST_BECKER_PERSISTENT_ASSETS */ void sub_24036()
{
     /* WRITESCRIPTLOG */ sub_1068( "SA", "P_REQUEST_BECKER_PERSISTENT_ASSETS - START", 0 );
     /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_24147( ref l_U1167, ref g_U1030 );
    if ((l_U94) AND (g_U829 < 9))
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_24220( -602188521, ref g_U1030 );
    }
    else
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_24220( 2038070575, ref g_U1030 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_24220( -1053689591, ref g_U1030 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_27135( -1980065396, ref g_U1247 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29079( "veh@std", ref g_U1429 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29079( "LEVEL_S_FIN_CP_11", ref g_U1429 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29079( "LEVEL_S_FIN_CP_12", ref g_U1429 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29079( "VEH@CAR_JASRE", ref g_U1429 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29079( "npc_pstl_cover_grenade", ref g_U1429 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29079( "npc_rifle_cover_grenade", ref g_U1429 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29079( "mped_grenade_core", ref g_U1429 );
         /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_31172( "SCRIPT_MISSION\S_AIR_HANGAR_01", ref g_U1950 );
         /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_31172( "SCRIPT_MISSION\S_AIR_HANGAR_02", ref g_U1950 );
         /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_33138( "Vehicle/Vehicle_Car.act", ref g_U1783 );
         /* P_STREAMREQ_VEHICLE_RECORDING_INSERT_ARRAY */ sub_35051( ref l_U610, ref g_U1638 );
    }
     /* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ sub_37135( ref l_U1176, ref g_U1247 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29079( "LEVEL_S_FIN_CP_09", ref g_U1429 );
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_33138( "LEVEL/S_AIR/S_FIN_VIG10_REACT.act", ref g_U1783 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_35131( 285, ref g_U1638 );
     /* WRITESCRIPTLOG */ sub_1068( "SA", "P_REQUEST_BECKER_PERSISTENT_ASSETS - END", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_24147(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_24220( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_24220(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_24287( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24545( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_24287(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24545( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24545( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24545( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_26076( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24545( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_24545( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_24545(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24606( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_24606(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_26076(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_27135(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_27189( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27450( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_27189(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27450( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27450( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27450( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_26076( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27450( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_27450( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_27450(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24606( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_29079(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_29131( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29383( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_29131(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29383( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29383( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29383( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_26076( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29383( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_29383( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_29383(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24606( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_INSERT */ void sub_31172(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ sub_31225( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing AUDIO_BANK asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_31480( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ int sub_31225(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_31480( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_31480( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The AUDIO_BANK asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_31480( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_26076( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_31480( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The AUDIO_BANK is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing AUDIO_BANK: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_31480( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ void sub_31480(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24606( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_INSERT */ void sub_33138(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ sub_33192( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ACTION_TREE asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_33450( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ int sub_33192(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_33450( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_33450( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_ACTION_TREE_LOADED( uParam0 ))
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ACTION_TREE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_33450( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ACTION_TREE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_26076( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_33450( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_ACTION_TREE_LOADED( uParam0 ))
        {
            DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ACTION_TREE is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ACTION_TREE: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_33450( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ACTION_TREE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ void sub_33450(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24606( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ACTION_TREE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_INSERT_ARRAY */ void sub_35051(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_35131( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ void sub_35131(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ sub_35191( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING asset name: {} ###", 1, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_35461( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ int sub_35191(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_35461( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is loading: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_35461( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The VEHICLE_RECORDING asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_35461( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_26076( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being removed: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_35461( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, iParam0 );
            DISPLAYF( "The VEHICLE_RECORDING is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING: {} ###", 1, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_35461( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ void sub_35461(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24606( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ void sub_37135(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_27135( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_REQUEST_BECKER_NONPERSISTENT_ASSETS */ void sub_37381()
{
     /* WRITESCRIPTLOG */ sub_1068( "SA", "P_REQUEST_BECKER_NONPERSISTENT_ASSETS - START", 0 );
    if ((l_U94) AND (g_U829 < 9))
    {
         /* LOADSEAMLESSCUTSCENE */ sub_37528( "14_03_FIN_concat", 0 );
    }
    else
    {
         /* P_STREAMREQ_ISEQ_INSERT */ sub_37882( -670135969, ref g_U1368 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_37882( 1347850635, ref g_U1368 );
    }
     /* P_STREAMREQ_SCRIPT_STREAM_INSERT */ sub_40720( "S_AIR_PLANE_TAXI_START", ref g_U1910 );
     /* P_STREAMREQ_SCRIPT_STREAM_INSERT */ sub_40720( "S_AIR_PLANE_TAXI_LEAVE", ref g_U1910 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_37882( 1975594589, ref g_U1368 );
     /* WRITESCRIPTLOG */ sub_1068( "SA", "P_REQUEST_BECKER_NONPERSISTENT_ASSETS - END", 0 );
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_37528(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_37882(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_37943( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_38193( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_37943(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_38193( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_38193( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_38193( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_38193( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_26076( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_26076( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_38193( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_38193( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_38193(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24606( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_INSERT */ void sub_40720(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ sub_40776( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_41040( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ int sub_40776(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_41040( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_41040( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_41040( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_26076( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_41040( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_41040( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1537, uParam0 );
                DISPLAYF( "The SCRIPT_STREAM asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM: {} ###", 1, 1537, uParam0 );
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_41040( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ void sub_41040(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_24606( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_43036(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_43433(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_43835(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ACTION_TREE_IS_LOADED */ int sub_44226(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for ACTION_TREE to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ int sub_44604(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be requested: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to load: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be removed: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_45024(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ int sub_45438(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ int sub_45824(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_46452(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1068( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9778( uParam0,  /* PLAYER_PED_ID */ sub_2515() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_47080(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_1068( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_1068( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_13044( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_47371( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_47848( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_47848( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_48108( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_47848( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_48108( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_48108( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_47848( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_48108( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_48108( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_48108( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_47848( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_48108( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_48108( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_48108( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_48108( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_49688( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1068( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_47371(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_10059( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_1068( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_1068( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_47848(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_48108(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_49688(int iParam0)
{
     /* WRITE_STRING */ sub_11879( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_49776( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_49853( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_49853( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_49853( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_49853( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_49853( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_50723( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU52 );
     /* WRITE_STRING */ sub_11879( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU96 );
     /* WRITE_STRING */ sub_11879( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU100 );
     /* WRITE_STRING */ sub_11879( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU104 );
     /* WRITE_STRING */ sub_11879( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU108 );
     /* WRITE_STRING */ sub_11879( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU112 );
     /* WRITE_STRING */ sub_11879( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU116 );
     /* WRITE_STRING */ sub_11879( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU120 );
     /* WRITE_STRING */ sub_11879( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU124 );
     /* WRITE_STRING */ sub_11879( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU128 );
     /* WRITE_STRING */ sub_11879( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_50022( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_50022( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_50022( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_49776(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_49853(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_50022(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_50723(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_BF_CREATE_JET */ void sub_51797()
{
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_CREATE_JET start", 0 );
    l_U569 =  /* CREATEVEHICLE */ sub_16533( 877881452, -809.00000000, -736.74680000, -6.73908700, 47.63203000, 0, 0, 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U569 )))
    {
        SET_ROOM_FOR_VEHICLE_BY_NAME( l_U569, ref g_U2358 );
        SET_VEHICLE_CAN_BE_DAMAGED( l_U569, 0 );
        SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( l_U569, 1 );
        SET_VEHICLE_ENGINE_CAN_BE_DAMAGED( l_U569, 0 );
        SET_VEHICLE_ENGINE_ON( l_U569, 1, 1 );
        SET_VEHICLE_EXTRA( l_U569, 1, 0 );
        SET_VEHICLE_EXTRA( l_U569, 2, 0 );
        SET_VEHICLE_DOOR_OPEN( l_U569, 0 );
    }
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_CREATE_JET end", 0 );
    return;
}

/* P_BF_SPAWN_HANGAR_ENEMIES */ void sub_52117()
{
    switch (l_U560)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_1068( "GA", "e_BF_HangarEnemySpawn = ENTITY_STATE_INIT", 0 );
        l_U561 = 0;
         /* P_SETUP_AI_GROUP */ sub_52262( ref l_U562, 1056964608, 0 );
        l_U560 = 2;
         /* WRITESCRIPTLOG */ sub_1068( "GA", "e_BF_HangarEnemySpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U553[l_U561] =  /* CREATEPED */ sub_52728( ref l_U474[l_U561] );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_53464( l_U553[l_U561], ref l_U562 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_53879( ref l_U553[l_U561], "AIT_EXPERT", 4.00000000, 25.00000000 );
        if (NOT (IS_PED_DEAD( l_U553[l_U561] )))
        {
            if (l_U561 <= 2)
            {
                SET_ROOM_FOR_PED_BY_NAME( l_U553[l_U561], ref g_U2358 );
            }
            SET_PED_ALERTNESS( l_U553[l_U561], 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U553[l_U561], 1 );
            SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U553[l_U561], 0 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U553[l_U561], 0 );
        }
        l_U561++;
        if (l_U561 >= 6)
        {
            l_U560 = 3;
             /* WRITESCRIPTLOG */ sub_1068( "GA", "e_BF_HangarEnemySpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_54268( ref l_U553, "pi_BF_HangarEnemy" );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U562._fU0, 1 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U553[0], 57534114, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U553[1], 57534114, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U553[2], 57534114, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U553[3], 57534114, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U553[4], 57534114, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U553[5], 57534114, 25000, 0, 0 );
         /* P_DEACTIVATEPEDARRAY */ sub_54561( ref l_U553 );
        l_U560 = 4;
         /* WRITESCRIPTLOG */ sub_1068( "GA", "e_BF_HangarEnemySpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

/* P_SETUP_AI_GROUP */ void sub_52262(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* CREATEPED */ void sub_52728(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_16660( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_53219( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_53320( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_53219(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_53320(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_53464(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_11879( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_52262( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_52262( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* P_SET_PED_TEMPLATE_AND_RANGES */ void sub_53879(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_54268(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_DEACTIVATEPEDARRAY */ void sub_54561(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_DEACTIVATEPED */ sub_54615( (uParam0^)[I] );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_54615(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* P_SETUP_BECKER */ void sub_54839()
{
     /* WRITESCRIPTLOG */ sub_1068( "SA", "P_SETUP_BECKER - START", 0 );
    l_U392 =  /* CREATEPED */ sub_52728( ref l_U379 );
    if (NOT (IS_PED_DEAD( l_U392 )))
    {
        FREEZE_PED_POSITION( l_U392, 1 );
        SET_ROOM_FOR_PED_BY_NAME( l_U392, ref g_U2358 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U392, 0 );
        SET_PED_AIM_LOCKONABLE( l_U392, 0 );
        SET_PED_PROOFS( l_U392, 1, 1, 1, 1, 1 );
        SET_PED_PERFECT_ACCURACY_OVERRIDE( l_U392, 1 );
        SET_PED_ALERTNESS( l_U392, 3 );
        SET_PED_CONSUMING_AMMO( l_U392, 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
        {
            REGISTER_TARGET( l_U392,  /* PLAYER_PED_ID */ sub_2515() );
        }
         /* F_GIVEPEDWEAPON */ sub_12270( l_U392, 930042831, 0, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U392, -1101340804, 25000, 1, 0 );
    }
     /* WRITESCRIPTLOG */ sub_1068( "SA", "P_SETUP_BECKER - END", 0 );
    return;
}

/* P_BF_SETUP_WEATHER_TOD */ void sub_55186()
{
     /* WRITESCRIPTLOG */ sub_1068( "SA", "P_BF_SETUP_WEATHER_TOD", 0 );
     /* P_SET_WEATHER_TOD_6CLOUDY */ sub_55257();
    return;
}

/* P_SET_WEATHER_TOD_6CLOUDY */ void sub_55257()
{
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
    FREEZE_TIME_OF_DAY( 6, 0 );
    return;
}

/* P_BF_CREATE_PLACEMENTS */ void sub_55356()
{
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_CREATE_PLACEMENTS start", 0 );
    l_U218[0] = CREATE_AMMOBAG_PLACEMENT_ROTATE( -839.70000000, -749.39000000, -6.73800000, 0.00000000, 0.00000000, 0.25000000, 10.00000000, 3.00000000, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U218[0] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U218[0], ref g_U2358 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[0], -1088031219, 200 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[0], 1138793073, 200 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[0], -1295933220, 200 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[0], -1383321053, 200 );
    }
    l_U218[1] = CREATE_AMMOBAG_PLACEMENT_ROTATE( -826.71000000, -752.05000000, -6.73800000, 0.00000000, 0.00000000, 0.75000000, 10.00000000, 3.00000000, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U218[1] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U218[1], ref g_U2358 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[1], -1088031219, 200 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[1], 1138793073, 200 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[1], -1295933220, 200 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[1], -1383321053, 200 );
    }
    l_U221[0] =  /* CREATEPLACEMENT */ sub_55869( -4072149, -839.74000000, -750.40000000, -6.74000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U221[0] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U221[0], ref g_U2358 );
    }
    l_U221[1] =  /* CREATEPLACEMENT */ sub_55869( -4072149, -826.01000000, -752.58000000, -6.74000000, 0.00000000, 0.00000000, 0.75000000, 1, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U221[1] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U221[1], ref g_U2358 );
    }
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_CREATE_PLACEMENTS end", 0 );
    return;
}

/* CREATEPLACEMENT */ void sub_55869(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_BF_CREATE_LUGGAGE_CARTS */ void sub_56232()
{
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_CREATE_LUGGAGE_CARTS start", 0 );
    l_U355[0] =  /* CREATEOBJECTNOOFFSET */ sub_18395( 1703160427, 64701, 64785, -6.80000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U355[0] ))
    {
        FREEZE_OBJECT_POSITION( l_U355[0], 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U355[0], ref g_U2358 );
        ADD_OBJECT_TO_EXPLOSION_OCCLUSION_TESTS( l_U355[0], 1 );
    }
    l_U355[1] =  /* CREATEOBJECTNOOFFSET */ sub_18395( 1423542550, 64704, 64784, -6.80000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U355[1] ))
    {
        FREEZE_OBJECT_POSITION( l_U355[1], 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U355[1], ref g_U2358 );
        ADD_OBJECT_TO_EXPLOSION_OCCLUSION_TESTS( l_U355[1], 1 );
    }
    l_U355[2] =  /* CREATEOBJECTNOOFFSET */ sub_18395( -2104040304, 64708, 64785, -6.80000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U355[2] ))
    {
        FREEZE_OBJECT_POSITION( l_U355[2], 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U355[2], ref g_U2358 );
        ADD_OBJECT_TO_EXPLOSION_OCCLUSION_TESTS( l_U355[2], 1 );
    }
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_CREATE_LUGGAGE_CARTS end", 0 );
    return;
}

/* F_BF_1403_PRECUTSCENESETUP */ int sub_57127()
{
    if (NOT (DOES_PED_EXIST( l_U140 )))
    {
        l_U140 =  /* CREATEPED */ sub_52728( ref l_U127 );
        if (NOT (IS_PED_DEAD( l_U140 )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U140, 1 );
            SET_ROOM_FOR_PED_BY_NAME( l_U140, ref g_U2358 );
        }
         /* P_DEACTIVATEPED */ sub_54615( l_U140 );
    }
    if (DOES_PED_EXIST( l_U140 ))
    {
        return 1;
        break;
    }
    return 0;
}

/* P_BF_1403_CUTSCENEREGISTRATION */ void sub_57290()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_1403_CutsceneRegistration start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
    {
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_2515(), g_U2014[9], g_U2129[9] );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "ap_sec5", "GrabSpline37", 0, 0 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U2168[9], g_U2207[9] );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE(  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_57487(), "W_PI_GLK18_AA_H", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U392 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U392, "Armo_Unif_1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U392, l_U379._fU0, l_U379._fU12 );
        uVar2 = GET_WEAPON_FROM_HAND( l_U392, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_SP_GrnLch_Aa_H", 0 );
        }
        uVar2 = GET_WEAPON_FROM_HAND( l_U392, 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 0 );
        }
        ISEQ_REGISTER_ENTITY( 1975594589, "vig09_becker", l_U392, 0 );
        CUTSCENE_REGISTER_ISEQ( 1975594589 );
        FREEZE_PED_POSITION( l_U392, 0 );
    }
     /* P_ACTIVATEPED */ sub_58197( l_U140 );
    if (NOT (IS_PED_DEAD( l_U140 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U140, "Vict_Form", 1 );
    }
     /* P_ACTIVATEPED */ sub_58197( l_U553[0] );
    if (NOT (IS_PED_DEAD( l_U553[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U553[0], "A_UFE_Sold_E", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U553[0], l_U474[0]._fU0, l_U474[0]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U553[0], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U553[0], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 0 );
        }
    }
     /* P_ACTIVATEPED */ sub_58197( l_U553[1] );
    if (NOT (IS_PED_DEAD( l_U553[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U553[1], "A_UFE_Sold_E^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U553[1], l_U474[1]._fU0, l_U474[1]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U553[1], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U553[1], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 0 );
        }
    }
     /* P_ACTIVATEPED */ sub_58197( l_U553[2] );
    if (NOT (IS_PED_DEAD( l_U553[2] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U553[2], "A_UFE_Sold_E^2", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U553[2], l_U474[2]._fU0, l_U474[2]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U553[2], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U553[2], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 0 );
        }
    }
     /* P_ACTIVATEPED */ sub_58197( l_U553[3] );
    if (NOT (IS_PED_DEAD( l_U553[3] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U553[3], "A_UFE_Sold_E^3", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U553[3], l_U474[3]._fU0, l_U474[3]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U553[3], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U553[3], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 0 );
        }
    }
     /* P_ACTIVATEPED */ sub_58197( l_U553[4] );
    if (NOT (IS_PED_DEAD( l_U553[4] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U553[4], "A_UFE_Sold_E^4", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U553[4], l_U474[4]._fU0, l_U474[4]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U553[4], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U553[4], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_AR_G36K_Aa_H^4", 0 );
        }
    }
     /* P_ACTIVATEPED */ sub_58197( l_U553[5] );
    if (NOT (IS_PED_DEAD( l_U553[5] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U553[5], "A_UFE_Sold_E^5", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U553[5], l_U474[5]._fU0, l_U474[5]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U553[5], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U553[5], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 0 );
        }
    }
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^6", 270627203 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^7", -868935864 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^8", 1617652839 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^9", -605387266 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^10", -1806766767 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^11", 995987111 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^12", 1572979149 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^13", -1809698420 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^14", -220943734 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^25", 1678515151 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^26", 1866506332 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^28", 738541963 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^29", -522275510 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^31", -903881458 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^32", 135081397 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^33", -1674168334 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^34", 814067633 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^35", -1216859927 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^36", -559168962 );
    if (NOT (IS_VEHICLE_DEAD( l_U569 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U569, "plane_jet", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U4154._fU0 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U4154._fU0, "monorail2", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U4154._fU4 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U4154._fU4, "monorail3", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U4154._fU8 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U4154._fU8, "monorail", 0 );
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( l_U143._fU0, l_U143._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( l_U150._fU0, l_U150._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( l_U157._fU0, l_U157._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( l_U164._fU0, l_U164._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( 447585719, -845.87700000, -764.39680000, -5.52251000 );
    REGISTER_HIDE_ENTITY_AT_POSITION( 1662128536, -845.87930000, -766.79880000, -5.52251000 );
    CUTSCENE_ENABLE_SKIP( 0 );
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_1403_CutsceneRegistration end", 0 );
    return;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_57487()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_57591( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2515(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2515(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_57591(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_ACTIVATEPED */ void sub_58197(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* P_BF_1403_HANDLECUTSCENE */ void sub_60573()
{
    unknown uVar2;
    unknown uVar3;

    if (l_U98._fU52)
    {
        DO_SCREEN_FADE_IN( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_60642( 1 );
         /* P_START_VEHICLE_PLAYBACK */ sub_60853( l_U569, 285, 0.00000000, 0, 0 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_24220( 2038070575, ref g_U1030 );
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_24220( -1053689591, ref g_U1030 );
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_27135( -1980065396, ref g_U1247 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29079( "veh@std", ref g_U1429 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29079( "LEVEL_S_FIN_CP_11", ref g_U1429 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29079( "LEVEL_S_FIN_CP_12", ref g_U1429 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29079( "VEH@CAR_JASRE", ref g_U1429 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29079( "npc_pstl_cover_grenade", ref g_U1429 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29079( "npc_rifle_cover_grenade", ref g_U1429 );
         /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_29079( "mped_grenade_core", ref g_U1429 );
         /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_33138( "Vehicle/Vehicle_Car.act", ref g_U1783 );
         /* P_STREAMREQ_VEHICLE_RECORDING_INSERT_ARRAY */ sub_35051( ref l_U610, ref g_U1638 );
         /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_31172( "SCRIPT_MISSION\S_AIR_HANGAR_01", ref g_U1950 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_37882( -670135969, ref g_U1368 );
         /* P_STREAMREQ_ISEQ_INSERT */ sub_37882( 1347850635, ref g_U1368 );
    }
    if (NOT (DOES_PLACEMENT_EXIST( l_U141 )))
    {
        if (GET_CUTSCENE_TIME_MS() >= 64038)
        {
             /* P_BF_1403_CREATE_FAKE_GUN */ sub_61662();
        }
    }
    if (NOT l_U125)
    {
        if (GET_CUTSCENE_TIME_MS() >= 66917)
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
            {
                 /* WRITESCRIPTLOG */ sub_1068( "GA", "Hiding left handed weapon.", 0 );
                uVar2 =  /* F_GET_TWO_HANDED_WEAPON_FROM_PLAYER */ sub_61752();
                if (GET_DOES_WEAPON_EXIST( uVar2 ))
                {
                    SET_WEAPON_VISIBLE( uVar2, 0 );
                }
                uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 1, 0 );
                if (GET_DOES_WEAPON_EXIST( uVar3 ))
                {
                    SET_WEAPON_VISIBLE( uVar3, 0 );
                }
                l_U125 = 1;
            }
        }
    }
    if (NOT l_U126)
    {
        if (( /* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ sub_45824( ref g_U1950 )) AND (( /* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ sub_45438( ref g_U1910 )) AND (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_45024( ref g_U1368 )) AND (( /* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ sub_44604( ref g_U1638 )) AND (( /* F_STREAMREQ_ACTION_TREE_IS_LOADED */ sub_44226( ref g_U1783 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_43835( ref g_U1429 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_43433( ref g_U1247 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_43036( ref g_U1030 )))))))))
        {
            if (GET_CUTSCENE_TIME_MS() > 86200)
            {
                 /* WRITESCRIPTLOG */ sub_1068( "GA", "14_03_FIN can be skipped.", 0 );
                CUTSCENE_ENABLE_SKIP( 1 );
                 /* P_T2_CLEANUP_TRAM */ sub_62783( ref g_U4154 );
                l_U126 = 1;
            }
        }
    }
    if (NOT l_U375)
    {
        if (GET_CUTSCENE_TIME_MS() > 95660)
        {
             /* WRITESCRIPTLOG */ sub_1068( "MF", "Music Cue: 8.3", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_2_5", "FINALE_01_2_5", 0.00000000, 9000, 3000, -1082130432, 0 );
            l_U375 = 1;
        }
    }
    return;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_60642(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_57591( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_57487();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2515(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* P_START_VEHICLE_PLAYBACK */ void sub_60853(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3, boolean bParam4)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
    }
     /* LOADVEHICLERECORDING */ sub_60931( uParam1, 1 );
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
        SET_PLAYBACK_SPEED( uParam0, uParam2 );
        if (fParam3 > 0.00000000)
        {
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, fParam3 );
        }
    }
    if (bParam4)
    {
        while ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
        {
             /* WRITE_STRING */ sub_11879( "Waiting for vehicle to start playing recorded path." );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADVEHICLERECORDING */ void sub_60931(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a recording to be loaded: Rec# {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_BF_1403_CREATE_FAKE_GUN */ void sub_61662()
{
    int iVar2;
    unknown uVar3;
    int iVar4;

     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_1403_CREATE_FAKE_GUN start", 0 );
    iVar2 = 3711131;
    uVar3 =  /* F_GET_TWO_HANDED_WEAPON_FROM_PLAYER */ sub_61752();
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        iVar4 = GET_WEAPON_TYPE( uVar3 );
        if (iVar4 == -1013714740)
        {
            iVar2 = 1676080365;
        }
        else if (iVar4 == 724901397)
        {
            iVar2 = 1216559076;
        }
        else if (iVar4 == -184942895)
        {
            iVar2 = -2117698134;
        }
        else if (iVar4 == 1478009203)
        {
            iVar2 = 280965399;
        };;;;
    }
    l_U141 =  /* CREATEPLACEMENT */ sub_55869( iVar2, -830.50000000, -757.50000000, -6.72000000, -1.55000000, 0.00000000, 0.50000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U141, ref g_U2358 );
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_1403_CREATE_FAKE_GUN end", 0 );
    return;
}

/* F_GET_TWO_HANDED_WEAPON_FROM_PLAYER */ int sub_61752()
{
    unknown Result;
    unknown uVar3;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_TWO_HANDED */ sub_61853( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2515(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
    }
    return 0;
}

/* IS_WEAPON_TWO_HANDED */ int sub_61853(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_T2_CLEANUP_TRAM */ void sub_62783(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_1068( "SA", "P_T2_CLEANUP_TRAM", 0 );
     /* CLEANOBJECT */ sub_9375( iParam0->_fU12 );
     /* CLEANOBJECT */ sub_9375( iParam0->_fU16 );
     /* CLEANOBJECT */ sub_9375( iParam0->_fU20 );
     /* CLEANOBJECT */ sub_9375( iParam0->_fU32 );
     /* CLEANOBJECT */ sub_9375( iParam0->_fU28 );
     /* CLEANOBJECT */ sub_9375( iParam0->_fU32 );
     /* CLEANOBJECTARRAY */ sub_9323( iParam0 + 36 );
     /* CLEANOBJECTARRAY */ sub_9323( iParam0 + 48 );
     /* CLEANOBJECTARRAY */ sub_9323( iParam0 + 60 );
     /* CLEANTRAIN */ sub_62946( iParam0->_fU0 );
    return;
}

/* CLEANTRAIN */ void sub_62946(unknown uParam0)
{
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_MISSION_TRAIN( uParam0 );
    }
    return;
}

/* CUTSYS_DEFAULT_POSTCUTSCENE */ int sub_63158()
{
    return 1;
}

/* P_BF_1403_STARTBLENDOUT */ void sub_63207()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_1403_StartBlendout start", 0 );
     /* P_T2_CLEANUP_TRAM */ sub_62783( ref g_U4154 );
     /* CLEANPLACEMENT */ sub_9453( l_U141 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_63314( -602188521, ref g_U1030 );
    if (NOT (IS_PED_DEAD( l_U392 )))
    {
        if (NOT (ISEQ_QUERY_STATE( 1975594589, 3 )))
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "Starting the checkpoint straight from the blendout.", 0 );
            ISEQ_REGISTER_ENTITY( 1975594589, "vig09_becker", l_U392, 0 );
             /* TELEPORTPED */ sub_2626( l_U392, l_U379._fU0, l_U379._fU12 );
            ISEQ_START( 1975594589 );
            if (NOT (IS_PED_DEAD( GET_PLAYER_PED(  /* PLAYER_ID */ sub_2553() ) )))
            {
                 /* MAL_TELEPORTPED */ sub_63982(  /* PLAYER_PED_ID */ sub_2515(), g_U2014[9], g_U2129[9] );
                SNAP_PLAYER_TO_COVERLINE(  /* PLAYER_ID */ sub_2553(), "ap_sec5", "GrabSpline37", 0, g_U2014[9] );
            }
        }
        FREEZE_PED_POSITION( l_U392, 1 );
        uVar2 = GET_WEAPON_FROM_HAND( l_U392, 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 1 );
        }
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() ))) AND (l_U94))
    {
        uVar3 =  /* F_GET_TWO_HANDED_WEAPON_FROM_PLAYER */ sub_61752();
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "Putting the player's rifle equipped.", 0 );
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2515(), uVar3, 0, 1 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "Giving player a G36K", 0 );
             /* F_GIVEPEDWEAPON */ sub_12270(  /* PLAYER_PED_ID */ sub_2515(), 57534114, 200, 0, 0 );
        }
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[9], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[9], 1065353216, 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_60853( l_U569, 285, 0.00000000, 0, 0 );
     /* P_BF_START_PLANE_ENEMY */ sub_64391();
     /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_31172( "SCRIPT_MISSION\S_AIR_HANGAR_02", ref g_U1950 );
     /* P_BF_ACTIVATE_HANGAR_ENEMIES */ sub_64844();
     /* P_BF_HANGAR_ENEMIES_FIRE_BLANKS */ sub_65909( 1 );
     /* P_BECKER_FIRE_GRENADE */ sub_17990( l_U326[2][0], 4000 );
    if (NOT (IS_PED_DEAD( l_U392 )))
    {
        SET_PED_CAN_BE_TARGETTED( l_U392, 0 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_FIN_CP_09", "B_OUT_MID_10_FIN_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
     /* WRITESCRIPTLOG */ sub_1068( "MF", "Music Cue: 8.3b", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_5", "FINALE_01_5", 0.00000000, 5000, 5000, -1082130432, 0 );
    l_U789 = 1;
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_1403_StartBlendout end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_63314(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6122( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* MAL_TELEPORTPED */ void sub_63982(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_BF_START_PLANE_ENEMY */ void sub_64391()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_START_PLANE_ENEMY start", 0 );
    l_U593 =  /* CREATEPED */ sub_52728( ref l_U580 );
     /* P_QUICK_ADD_PED_TO_GROUP */ sub_53464( l_U593, ref l_U562 );
     /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_53879( ref l_U593, "AIT_EXPERT", 10.00000000, 80.00000000 );
    uVar2 =  /* F_GIVEPEDWEAPON */ sub_12270( l_U593, 724901397, 25000, 0, 0 );
    ENABLE_WEAPON_ATTACHMENT( uVar2, 13, 1 );
    TOGGLE_WEAPON_ATTACHMENT( uVar2, 13, 1 );
    SET_LASER_SIGHT_ATTACHMENT( uVar2, -938171172 );
    if (NOT (IS_PED_DEAD( l_U593 )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U593, ref g_U2358 );
        SET_PED_ALERTNESS( l_U593, 3 );
        SET_PED_COMBAT_MOVEMENT( l_U593, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U569 )))
        {
            ATTACH_PED_TO_VEHICLE( l_U593, l_U569, 0, l_U594, l_U597, 360.00000000, 0, 0, 0, 1 );
        }
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
        {
            REGISTER_TARGET( l_U593,  /* PLAYER_PED_ID */ sub_2515() );
            TASK_COMBAT_PED( l_U593,  /* PLAYER_PED_ID */ sub_2515() );
        }
    }
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_START_PLANE_ENEMY end", 0 );
    return;
}

/* P_BF_ACTIVATE_HANGAR_ENEMIES */ void sub_64844()
{
    int I;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_ACTIVATE_HANGAR_ENEMIES start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
    {
        for ( I = 0; I <= 5; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U553[I] )))
            {
                REGISTER_TARGET( l_U553[I],  /* PLAYER_PED_ID */ sub_2515() );
            }
            uVar3 = GET_WEAPON_FROM_HAND( l_U553[I], 0, 0 );
            if (GET_DOES_WEAPON_EXIST( uVar3 ))
            {
                SET_WEAPON_VISIBLE( uVar3, 1 );
            }
        }
         /* P_ACTIVATEPED */ sub_58197( l_U553[0] );
        if (NOT (IS_PED_DEAD( l_U553[0] )))
        {
             /* P_TASK_ENEMY_TO_COVER_THEN_COMBAT */ sub_65113( ref l_U553[0], l_U778, 0, 0, 0, 0, 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U553[0], 1 );
        }
         /* P_ACTIVATEPED */ sub_58197( l_U553[1] );
        if (NOT (IS_PED_DEAD( l_U553[1] )))
        {
             /* P_TASK_ENEMY_TO_COVER_THEN_COMBAT */ sub_65113( ref l_U553[1], l_U781, 0, 0, 0, 0, 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U553[1], 1 );
        }
         /* P_ACTIVATEPED */ sub_58197( l_U553[4] );
        if (NOT (IS_PED_DEAD( l_U553[4] )))
        {
             /* P_TASK_ENEMY_TO_COVER_THEN_COMBAT */ sub_65113( ref l_U553[4], l_U772, 0, 0, 0, 0, 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U553[4], 1 );
        }
         /* P_ACTIVATEPED */ sub_58197( l_U553[5] );
        if (NOT (IS_PED_DEAD( l_U553[5] )))
        {
             /* P_TASK_ENEMY_TO_COVER_THEN_COMBAT */ sub_65113( ref l_U553[5], l_U775, 0, 0, 0, 0, 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U553[5], 1 );
        }
         /* P_ACTIVATEPED */ sub_58197( l_U553[2] );
        if (NOT (IS_PED_DEAD( l_U553[2] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U553[2], 0 );
            SET_PED_COMBAT_ATTRIBUTES( l_U553[2], 8192, 1 );
        }
         /* P_ACTIVATEPED */ sub_58197( l_U553[3] );
        if (NOT (IS_PED_DEAD( l_U553[3] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U553[3], 0 );
            SET_PED_COMBAT_ATTRIBUTES( l_U553[3], 8192, 1 );
        }
    }
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_ACTIVATE_HANGAR_ENEMIES end", 0 );
    return;
}

/* P_TASK_ENEMY_TO_COVER_THEN_COMBAT */ void sub_65113(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, boolean bParam6, boolean bParam7, unknown uParam8)
{
    unknown uVar11;

     /* WRITESCRIPTLOG */ sub_1068( "AT", "P_TASK_ENEMY_TO_COVER_THEN_COMBAT", 0 );
    if ((NOT (IS_PED_DEAD( (uParam0^) ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() ))))
    {
        REGISTER_TARGET( (uParam0^),  /* PLAYER_PED_ID */ sub_2515() );
        OPEN_SEQUENCE_TASK( ref uVar11 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (bParam6)
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, 3, 20000, 0.25000000, 256, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if (NOT bParam7)
        {
            if ((NOT (IS_STRING_NULL( uParam5 ))) AND (NOT (IS_STRING_NULL( uParam4 ))))
            {
                TASK_COMBAT_MOVE_TO_COVER( 0, uParam4, uParam5, 0 );
            }
            else
            {
                TASK_COMBAT_MOVE_TO_COVER_COORDS( 0, uParam1, 0 );
            }
        }
        else if ((NOT (IS_STRING_NULL( uParam5 ))) AND (NOT (IS_STRING_NULL( uParam4 ))))
        {
            TASK_COMBAT_MOVE_TO_COVER_TACTICAL( 0, uParam4, uParam5, uParam8, 0 );
        }
        else
        {
            TASK_COMBAT_MOVE_TO_COVER_TACTICAL_COORDS( 0, uParam1, uParam8, 0 );
        }
        CLOSE_SEQUENCE_TASK( uVar11 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar11 );
        CLEAR_SEQUENCE_TASK( uVar11 );
    }
    return;
}

/* P_BF_HANGAR_ENEMIES_FIRE_BLANKS */ void sub_65909(boolean bParam0)
{
    int I;
    unknown uVar4;

    for ( I = 0; I <= 5; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U553[I] )))
        {
            uVar4 = GET_WEAPON_FROM_HAND( l_U553[I], 0, 0 );
            if (GET_DOES_WEAPON_EXIST( uVar4 ))
            {
                if (bParam0)
                {
                    SET_WEAPON_CHANCE_TO_FIRE_BLANKS( uVar4, 100 );
                }
                else
                {
                    SET_WEAPON_CHANCE_TO_FIRE_BLANKS( uVar4, 0 );
                }
            }
        }
    }
    return;
}

/* F_BF_1403_HANDLEBLENDOUT */ int sub_66342()
{
    if (l_U98._fU52)
    {
        if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_66393()))
        {
            DO_SCREEN_FADE_IN( 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U392 )))
    {
        if (NOT l_U788)
        {
            if (IS_PED_SHOOTING( l_U392 ))
            {
                 /* WRITESCRIPTLOG */ sub_1068( "GA", "Becker fires grenade.", 0 );
                ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
                l_U788 = 1;
            }
        }
    }
    if (((CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FIN_CP_09", "B_OUT_MID_10_FIN_CAM" )) - 1)) || (NOT IS_ANIMATED_CAMERA_PLAYING())) AND (l_U788))
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[9], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[9], 1065353216, 0 );
        CAMERA_ANIMATED_STOP( 500, 1 );
        CAMERA_POINT_AT_GRENADE( 1 );
        if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2553() )))
        {
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_2553(), 1, 0 );
        }
        if (NOT (IS_VEHICLE_DEAD( l_U569 )))
        {
            l_U578 = GET_SOUND_ID();
            PLAY_SOUND_FROM_VEHICLE( l_U578, "S_AIR_PLANE_TAXI_HOLD", l_U569 );
             /* P_STREAMREQ_SCRIPT_STREAM_PLAY_FROM_VEHICLE */ sub_67021( l_U569, "S_AIR_PLANE_TAXI_START", ref g_U1910 );
        }
        return 1;
    }
    return 0;
}

/* F_IMAGEFX_FADE_IN */ int sub_66393()
{
    if (l_U54)
    {
         /* WRITESCRIPTLOG */ sub_1068( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U54 = 0;
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_1068( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

/* P_STREAMREQ_SCRIPT_STREAM_PLAY_FROM_VEHICLE */ void sub_67021(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_7178( uParam1, uParam2 ))
    {
        iVar5 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_7387( uParam1, uParam2 );
        if (NOT (iVar5 == -1))
        {
            if (NOT (IS_VEHICLE_DEAD( uParam0 )))
            {
                DISPLAYF( "[CCB]### Playing the SCRIPT_STREAM from vehicle: {} ###", 1, 1281, ref (uParam2^)[iVar5]._fU0 );
                PLAY_SCRIPT_STREAM_FROM_VEHICLE( uParam0, iVar5 );
            }
            else
            {
                DISPLAYF( "The ped is NOT valid!!!", 0 );
            }
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam1 );
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam1 );
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_67584(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_1068( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_67808( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 67705, 67755, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_67705()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_67755()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_67808(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_HANDLECUTSCENE */ void sub_68151(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_1068( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_1068( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_1068( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_1068( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_1068( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_1068( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_37528( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_1068( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_69042( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_69042( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_1068( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_69586( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_69042( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_69966( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_69966( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* NIS_PRE_SETUP */ void sub_69042(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2553(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_2515(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_2515() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_2515(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_69586(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2515(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2515(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2515(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_69966(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2553(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_2515(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_70064();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_70064()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_2515(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_2515(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_START_GRENADE_1_GAMEPLAY */ void sub_70517()
{
     /* WRITESCRIPTLOG */ sub_1068( "SA", "P_START_GRENADE_1_GAMEPLAY - START", 0 );
     /* NIS_POST_SETUP */ sub_69966( 1, 1 );
     /* P_CREATE_AND_START_TIMER */ sub_70632( ref l_U423, GET_RANDOM_INT_IN_RANGE( l_U432, l_U433 ) );
     /* P_BF_START_FIRES */ sub_70695();
     /* WRITESCRIPTLOG */ sub_1068( "SA", "P_START_GRENADE_1_GAMEPLAY - END", 0 );
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_70632(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_3715( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_3865( uParam0 );
    return;
}

/* P_BF_START_FIRES */ void sub_70695()
{
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_70828(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_17769(  /* PLAYER_PED_ID */ sub_2515(), uParam0 );
}

/* P_HANDLE_GRENADE_EXPLOSIONS */ void sub_70955()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    int iVar5;
    unknown uVar6;

    if (IS_EXPLOSION_IN_AREA( 0, -848.56000000, -721.49000000, -6.77000000, -788.56000000, -763.53000000, 2.79000000 ))
    {
        if (IS_EXPLOSION_IN_AREA( 0, -848.56000000, -721.49000000, -5.40000000, -788.56000000, -763.53000000, 3.86000000 ))
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "Player shot grenade out of the air.", 0 );
        }
        else
        {
            uVar2 = { /* F_GET_BECKER_AIM_COORD */ sub_17612()};
            if (IS_EXPLOSION_IN_SPHERE( 0, uVar2, l_U324 ))
            {
                if ( /* F_GET_PLAYER_COVER_SPOT */ sub_17648( ref iVar5 ))
                {
                    uVar6 = l_U319[iVar5];
                     /* P_VIG10_MAX_THROWN_BACK */ sub_17352( uVar6 );
                    if (iVar5 != 3)
                    {
                         /* P_BF_LUGGAGE_TAKES_DAMAGE */ sub_71214( iVar5 );
                    }
                    PED_SET_ACTION_INTENTION( l_U392, l_U401, 1000, 0.00000000, 0.00000000, 0.00000000 );
                     /* P_CREATE_AND_START_TIMER */ sub_70632( ref l_U454, 2000 );
                }
            }
        }
        if (l_U789)
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "Ending first blendout grenade bullet time.", 0 );
            DEACTIVATE_BULLET_TIME( 0, 0 );
            CAMERA_POINT_AT_GRENADE( 0 );
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2553() )))
            {
                SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_2553(), 0, 0 );
            }
             /* P_BF_HANGAR_ENEMIES_FIRE_BLANKS */ sub_65909( 0 );
            l_U789 = 0;
        }
        if (NOT l_U377)
        {
             /* WRITESCRIPTLOG */ sub_1068( "MF", "Music Cue: 8.4", 0 );
             /* WRITESCRIPTLOG */ sub_1068( "MF", "Music Cue: 8.5", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_4_5", "FINALE_01_4_5", 2.00000000, 5000, 3000, -1082130432, 0 );
            l_U377 = 1;
        }
    }
    return;
}

/* P_BF_LUGGAGE_TAKES_DAMAGE */ void sub_71214(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_LUGGAGE_TAKES_DAMAGE start", 0 );
    if (DOES_OBJECT_EXIST( l_U355[uParam0] ))
    {
        if (l_U359[uParam0] == 0)
        {
            PLAY_OBJECT_ANIM( l_U355[uParam0], l_U363[uParam0], "ap_anim_hangar", 1000.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( l_U355[uParam0], l_U363[uParam0], "ap_anim_hangar", 0.00000000 );
            l_U359[uParam0] = 1;
        }
        else if (l_U359[uParam0] == 2)
        {
            PLAY_OBJECT_ANIM( l_U355[uParam0], l_U363[uParam0], "ap_anim_hangar", 1000.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( l_U355[uParam0], l_U363[uParam0], "ap_anim_hangar", l_U371[uParam0] );
            l_U359[uParam0] = 3;
        }
    }
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_LUGGAGE_TAKES_DAMAGE end", 0 );
    return;
}

/* P_BF_HANDLE_PLAYER_GOING_INTO_FIRE */ void sub_71952()
{
    return;
}

/* P_HANDLE_BECKER_FIRING */ void sub_72007()
{
    if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_70828( l_U402 )))
    {
        if ( /* ISTIMERDONE */ sub_3998( ref l_U423 ))
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "Player is out in the open, firing a grenade.", 0 );
            if ( /* F_BF_CAN_BECKER_SHOOT_AT_PLAYER */ sub_72131())
            {
                 /* P_BECKER_FIRE_GRENADE */ sub_17990(  /* F_GET_BECKER_AIM_COORD */ sub_17612(), 4000 );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_1068( "GA", "Becker can't fire at the player.", 0 );
            }
             /* P_CREATE_AND_START_TIMER */ sub_70632( ref l_U423, GET_RANDOM_INT_IN_RANGE( l_U432, l_U433 ) );
        }
    }
    return;
}

/* F_BF_CAN_BECKER_SHOOT_AT_PLAYER */ int sub_72131()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    int I;

    if ( /* F_ISPLAYERINTRIGGERBOX */ sub_70828( l_U402 ))
    {
        if ((IS_PLAYER_SHOOTDODGING()) || (IS_LAST_MAN_STANDING_ACTIVE()))
        {
            return 0;
        }
        if ((GET_TIME_SINCE_LAST_LMS_ACTIVATION() > 1) AND (GET_TIME_SINCE_LAST_LMS_ACTIVATION() < 15000))
        {
            return 0;
        }
    }
    uVar2 = { /* F_GET_BECKER_AIM_COORD */ sub_17612()};
    for ( I = 0; I <= 5; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U553[I] )))
        {
            if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_72299( l_U553[I], uVar2 )) < 4.50000000)
            {
                return 0;
            }
        }
    }
    for ( I = 0; I <= 9; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U757[I] )))
        {
            if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_72299( l_U757[I], uVar2 )) < 4.50000000)
            {
                return 0;
            }
        }
    }
    return 1;
}

/* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ void sub_72299(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

/* P_BF_HANDLE_PLANE */ void sub_72624()
{
    if (NOT l_U598)
    {
        if ((NOT (IS_VEHICLE_DEAD( l_U569 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() ))))
        {
            if (((( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_18868( ref l_U553 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_18868( ref l_U757 ))) <= 2) AND (l_U92 == 13))
            {
                 /* P_BF_START_PLANE_MOVING */ sub_72736( 0.00000000 );
                l_U598 = 1;
            }
        }
    }
    if ((l_U598) AND (NOT l_U599))
    {
        if ( /* F_HAS_VEHICLE_REACHED_PATH_MARK */ sub_73416( l_U569, 285, l_U600 ))
        {
             /* P_BF_CLOSE_PLANE_DOOR */ sub_72872();
            l_U570 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "FIN_Engine_BlowBack_S", l_U569, l_U571, 0, 0, 0, 1065353216 );
            l_U574 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "FIN_Engine_BlowBack_S", l_U569, l_U575, 0, 0, 0, 1065353216 );
             /* STARTTIMER */ sub_3865( ref l_U601 );
            l_U599 = 1;
        }
    }
    if ( /* ISTIMERDONE */ sub_3998( ref l_U601 ))
    {
         /* WRITESCRIPTLOG */ sub_1068( "GA", "Can delete plane enemy.", 0 );
        if (NOT (IS_PED_DEAD( l_U593 )))
        {
             /* CLEANPED */ sub_8971( l_U593 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U569 )))
    {
        if (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U569 )))
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "Plane reached the end of it's path, deleting.", 0 );
             /* CLEANVEHICLE */ sub_9221( l_U569 );
        }
    }
    return;
}

/* P_BF_START_PLANE_MOVING */ void sub_72736(float fParam0)
{
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_START_PLANE_MOVING start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U569 )))
    {
         /* P_START_VEHICLE_PLAYBACK */ sub_60853( l_U569, 285, 1.00000000, fParam0, 0 );
        if (fParam0 == 0.00000000)
        {
            ;
        }
        else
        {
             /* P_BF_CLOSE_PLANE_DOOR */ sub_72872();
            l_U570 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "FIN_Engine_BlowBack_S", l_U569, l_U571, 0, 0, 0, 1065353216 );
            l_U574 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "FIN_Engine_BlowBack_S", l_U569, l_U575, 0, 0, 0, 1065353216 );
        }
         /* P_SAFE_STOP_SOUND */ sub_8357( l_U578, 0 );
         /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_7128( "S_AIR_PLANE_TAXI_START", ref g_U1910 );
         /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_7922( "S_AIR_PLANE_TAXI_START", ref g_U1910 );
        l_U579 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U579, "S_AIR_PLANE_TAXI_MOVE", l_U569 );
         /* P_STREAMREQ_SCRIPT_STREAM_PLAY_FROM_VEHICLE */ sub_67021( l_U569, "S_AIR_PLANE_TAXI_LEAVE", ref g_U1910 );
    }
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_START_PLANE_MOVING end", 0 );
    return;
}

/* P_BF_CLOSE_PLANE_DOOR */ void sub_72872()
{
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_CLOSE_PLANE_DOOR start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U569 )))
    {
        SET_VEHICLE_DOOR_SHUT( l_U569, 0, 0.00500000, 0 );
        SET_VEHICLE_COLLISION( l_U569, 0 );
    }
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_CLOSE_PLANE_DOOR end", 0 );
    return;
}

/* F_HAS_VEHICLE_REACHED_PATH_MARK */ void sub_73416(unknown uParam0, int iParam1, float fParam2)
{
    int Result;

    Result = 0;
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            if ((GET_CURRENT_PLAYBACK_NUMBER_FOR_VEHICLE( uParam0 )) == iParam1)
            {
                if ((GET_TIME_POSITION_IN_RECORDING( uParam0 )) >= fParam2)
                {
                    Result = 1;
                }
            }
        }
    }
    return Result;
}

/* P_BF_HANDLE_BECKER_TAUNTING */ void sub_73872()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
    {
        if (NOT l_U463)
        {
            if (NOT (IS_PED_USING_MP3_COVER_TASK(  /* PLAYER_PED_ID */ sub_2515() )))
            {
                l_U463 = 1;
                 /* STARTTIMER */ sub_3865( ref l_U464 );
            }
        }
        else if ( /* ISTIMERDONE */ sub_3998( ref l_U464 ))
        {
             /* P_CREATE_AND_START_TIMER */ sub_70632( ref l_U454, 50 );
        }
        if (IS_PED_USING_MP3_COVER_TASK(  /* PLAYER_PED_ID */ sub_2515() ))
        {
             /* RESETTIMER */ sub_4574( ref l_U464 );
            l_U463 = 0;
        }
        if (NOT l_U473)
        {
            if (IS_LAST_MAN_STANDING_ACTIVE())
            {
                l_U473 = 1;
            }
        }
        else if (NOT IS_LAST_MAN_STANDING_ACTIVE())
        {
            l_U473 = 0;
             /* P_CREATE_AND_START_TIMER */ sub_70632( ref l_U454, 2000 );
        }
        if (NOT IS_BULLET_CAMERA_ACTIVE())
        {
            if ( /* ISTIMERDONE */ sub_3998( ref l_U454 ))
            {
                if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_74135( l_U444 )))
                {
                     /* P_BECKER_ACTIVATE_TAUNT */ sub_74359();
                }
            }
        }
    }
    return;
}

/* IS_SPEECH_CURRENTLY_PLAYING */ int sub_74135(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_74178( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_74178(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* P_BECKER_ACTIVATE_TAUNT */ void sub_74359()
{
    int iVar2;
    char[12] cVar3;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BECKER_ACTIVATE_TAUNT start", 0 );
    if (NOT ( /* IS_SPEECH_CURRENTLY_PLAYING */ sub_74135( l_U444 )))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_74459( ref l_U444 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_74573( 2, l_U392, "BECKER", ref l_U444, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_74573( 1,  /* PLAYER_PED_ID */ sub_2515(), "MAX", ref l_U444, 2, 0 );
        iVar2 = GET_RANDOM_INT_IN_RANGE( 0, 100 );
        if (iVar2 < 35)
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "Playing Becker and Max speech.", 0 );
            array(ref cVar3, 2);
            StrCopy( ref cVar3[0], "SAIR_VIG09", 16 );
            StrCopy( ref cVar3[1], "SAIR_VIG10", 16 );
             /* PLAY_MULTIPLE_SPEECH */ sub_74939( ref cVar3, ref l_U444, 8, 1 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "Playing just Becker speech.", 0 );
             /* PLAY_SINGLE_SPEECH */ sub_75879( "SAIR_VIG09", ref l_U444, 8, 1 );
        }
    }
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BECKER_ACTIVATE_TAUNT end", 0 );
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_74459(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_74573(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_MULTIPLE_SPEECH */ void sub_74939(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_MULTIPLE_SPEECH_FROM_BLOCK */ sub_74986( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_MULTIPLE_SPEECH_FROM_BLOCK */ void sub_74986(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;

    StrCopy( ref cVar7, uParam1, 16 );
    return  /* PLAYSPEECHMAIN */ sub_75048( uParam0, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_75048(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_75100( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_75618( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_75100(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_75618(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_75879(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_75924( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_75924(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_75048( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* P_START_GRENADE_2_GAMEPLAY */ void sub_76208()
{
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_START_GRENADE_2_GAMEPLAY start", 0 );
     /* P_CREATE_AND_START_TIMER */ sub_70632( ref l_U423, GET_RANDOM_INT_IN_RANGE( l_U432, l_U433 ) );
     /* STARTTIMER */ sub_3865( ref l_U181 );
    l_U768 = 1;
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_START_GRENADE_2_GAMEPLAY end", 0 );
    return;
}

/* P_BF_SPAWN_REINFORCEMENT_ENEMIES_W1 */ void sub_76840()
{
    int I;

    switch (l_U768)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_1068( "GA", "e_BF_ReinforcementEnemyW1Spawn = ENTITY_STATE_INIT", 0 );
        l_U769 = 0;
        for ( I = 0; I <= 1; I++ )
        {
            l_U614[I] =  /* CREATEVEHICLE */ sub_16533( -1053689591, 2.00000000, 1.00000000, 1.00000000, 0.00000000, 0, 0, 0 );
            if (NOT (IS_VEHICLE_DEAD( l_U614[I] )))
            {
                SET_VEHICLE_ENGINE_ON( l_U614[I], 1, 1 );
                SET_VEHICLE_EXTRA( l_U614[I], 1, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 2, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 3, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 4, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 5, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 6, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 7, 1 );
                SET_VEHICLE_EXTRA( l_U614[I], 8, 1 );
                SET_VEHICLE_COLOUR_COMBINATION( l_U614[I], 1 );
            }
        }
         /* P_START_VEHICLE_PLAYBACK */ sub_60853( l_U614[0], l_U610[0], 1.00000000, 0, 0 );
        l_U622[0] = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U622[0], "S_AIR_HANGAR_JEEP_01", l_U614[0] );
         /* P_START_VEHICLE_PLAYBACK */ sub_60853( l_U614[1], l_U610[1], 0.85000000, 0, 0 );
        l_U622[1] = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U622[1], "S_AIR_HANGAR_JEEP_02", l_U614[1] );
        l_U768 = 2;
         /* WRITESCRIPTLOG */ sub_1068( "GA", "e_BF_ReinforcementEnemyW1Spawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        if (l_U769 == 0)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[0] )))
            {
                l_U757[l_U769] =  /* CREATEPEDINVEHICLE */ sub_77572( ref l_U626[l_U769], l_U614[0], -1, 0, 0 );
            }
        }
        if (l_U769 == 1)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[0] )))
            {
                l_U757[l_U769] =  /* CREATEPEDINVEHICLE */ sub_77572( ref l_U626[l_U769], l_U614[0], 0, 0, 0 );
            }
        }
        if (l_U769 == 2)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[0] )))
            {
                l_U757[l_U769] =  /* CREATEPEDINVEHICLE */ sub_77572( ref l_U626[l_U769], l_U614[0], 2, 0, 0 );
            }
        }
        if (l_U769 == 3)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[0] )))
            {
                l_U757[l_U769] =  /* CREATEPEDINVEHICLE */ sub_77572( ref l_U626[l_U769], l_U614[0], 1, 0, 0 );
            }
        }
        if (l_U769 == 4)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[1] )))
            {
                l_U757[l_U769] =  /* CREATEPEDINVEHICLE */ sub_77572( ref l_U626[l_U769], l_U614[1], -1, 0, 0 );
            }
        }
        if (l_U769 == 5)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[1] )))
            {
                l_U757[l_U769] =  /* CREATEPEDINVEHICLE */ sub_77572( ref l_U626[l_U769], l_U614[1], 0, 0, 0 );
            }
        }
        if (l_U769 == 6)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[1] )))
            {
                l_U757[l_U769] =  /* CREATEPEDINVEHICLE */ sub_77572( ref l_U626[l_U769], l_U614[1], 2, 0, 0 );
            }
        }
        if (l_U769 == 7)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[1] )))
            {
                l_U757[l_U769] =  /* CREATEPEDINVEHICLE */ sub_77572( ref l_U626[l_U769], l_U614[1], 1, 0, 0 );
            }
        }
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_53464( l_U757[l_U769], ref l_U562 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_53879( ref l_U757[l_U769], "AIT_EXPERT", 4.00000000, 25.00000000 );
        if (NOT (IS_PED_DEAD( l_U757[l_U769] )))
        {
            SET_PED_ALERTNESS( l_U757[l_U769], 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U757[l_U769], 1 );
            SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U757[l_U769], 0 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U757[l_U769], 0 );
            SET_BULLET_CAM_PREF( l_U757[l_U769], "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        }
        l_U769++;
        if (l_U769 >= 8)
        {
            l_U768 = 3;
             /* WRITESCRIPTLOG */ sub_1068( "GA", "e_BF_ReinforcementEnemyW1Spawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_54268( ref l_U757, "pi_BF_ReinforcementEnemy" );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U562._fU0, 1 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U757[0], 1478009203, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U757[1], 1478009203, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U757[2], 57534114, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U757[3], 57534114, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U757[4], 1478009203, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U757[5], -612753081, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U757[6], 57534114, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U757[7], 57534114, 25000, 0, 0 );
         /* P_BF_START_AGA */ sub_79241();
        l_U768 = 4;
         /* WRITESCRIPTLOG */ sub_1068( "GA", "e_BF_ReinforcementEnemyW1Spawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

/* CREATEPEDINVEHICLE */ void sub_77572(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4)
{
    if ((HAS_MODEL_LOADED( iParam0->_fU16 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_16660( iParam0->_fU16, 1 );
    }
    if (((IS_VEHICLE_DEAD( uParam1 )) == 0) AND ((DOES_VEHICLE_EXIST( uParam1 )) == 1))
    {
        iParam0->_fU40 = CREATE_PED_INSIDE_VEHICLE( uParam1, iParam0->_fU24, iParam0->_fU16, uParam2, uParam4, iParam0->_fU48 );
    }
    else
    {
        SCRIPT_ASSERT( "The vehicle your trying to create a ped inside of is not valid!!!", 0 );
    }
    if (iParam3 == 1)
    {
        while ((DOES_PED_EXIST( iParam0->_fU40 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for ped created inside a vehicle to exist... ###", 0 );
            WAIT( 0 );
        }
    }
     /* SETPEDDEFAULTSTATS */ sub_53219( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_53320( iParam0->_fU40 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        iParam0->_fU44 = 1;
    }
    return iParam0->_fU40;
}

/* P_BF_START_AGA */ void sub_79241()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_START_AGA start", 0 );
    l_U568 = PEDGROUPTASK_ADVANCE_CREATE( l_U562._fU0 );
    for ( I = 0; I < l_U553; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U553[I] )))
        {
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U562._fU0, l_U568, l_U553[I] );
            SET_PED_FLAG_LOCK_TO_COVER( l_U553[I], 0 );
        }
    }
    for ( I = 0; I <= 7; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U757[I] )))
        {
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U562._fU0, l_U568, l_U757[I] );
        }
    }
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )))
    {
        PEDGROUPTASK_ADVANCE_SETTARGET_PED( l_U562._fU0, l_U568,  /* PLAYER_PED_ID */ sub_2515() );
    }
    PEDGROUPTASK_ADVANCE_SETTIMETOHIDE( l_U562._fU0, l_U568, 3.00000000 );
    PEDGROUPTASK_ADVANCE_SETTIMETOIDLE( l_U562._fU0, l_U568, 4.00000000 );
    PEDGROUPTASK_ADVANCE_SETNUMPEDSTOADVANCE( l_U562._fU0, l_U568, 1 );
    PEDGROUPTASK_ADVANCE_TRIGGER_MOVE( l_U562._fU0, l_U568 );
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_START_AGA end", 0 );
    return;
}

/* P_BF_HANDLE_REINFORCEMENT_CARS_ARRIVING */ void sub_79756()
{
    int I;

    if ((DOES_VEHICLE_EXIST( l_U614[0] )) AND (NOT l_U618[0]))
    {
        if (NOT (IS_VEHICLE_DEAD( l_U614[0] )))
        {
            if (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U614[0] )))
            {
                 /* WRITESCRIPTLOG */ sub_1068( "GA", "Car 0 arrived.", 0 );
                 /* P_BF_EXIT_VEHICLE_AND_COVER */ sub_79930( ref l_U757[0], l_U614[0], l_U781, 0 );
                 /* P_BF_EXIT_VEHICLE_AND_COVER */ sub_79930( ref l_U757[1], l_U614[0], l_U778, 0 );
                 /* P_BF_EXIT_VEHICLE_AND_COVER */ sub_79930( ref l_U757[2], l_U614[0], l_U775, 0 );
                 /* P_BF_EXIT_VEHICLE_AND_COVER */ sub_79930( ref l_U757[3], l_U614[0], l_U775, 0 );
                l_U618[0] = 1;
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "Car 0 blew up before it could arrive.", 0 );
            for ( I = 0; I <= 3; I++ )
            {
                 /* CLEANPED */ sub_8971( l_U757[I] );
            }
             /* P_SAFE_STOP_SOUND */ sub_8357( l_U622[0], 0 );
             /* P_SAFE_RELEASE_SOUND_ID */ sub_8544( ref l_U622[0] );
            l_U618[0] = 1;
        }
    }
    if ((DOES_VEHICLE_EXIST( l_U614[1] )) AND (NOT l_U618[1]))
    {
        if (NOT (IS_VEHICLE_DEAD( l_U614[1] )))
        {
            if (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U614[1] )))
            {
                 /* WRITESCRIPTLOG */ sub_1068( "GA", "Car 1 arrived.", 0 );
                 /* P_BF_EXIT_VEHICLE_AND_COVER */ sub_79930( ref l_U757[4], l_U614[1], l_U784, 0 );
                 /* P_BF_EXIT_VEHICLE_AND_COVER */ sub_79930( ref l_U757[5], l_U614[1], l_U775, 0 );
                 /* P_BF_EXIT_VEHICLE_AND_COVER */ sub_79930( ref l_U757[6], l_U614[1], l_U772, 0 );
                 /* P_BF_EXIT_VEHICLE_AND_COVER */ sub_79930( ref l_U757[7], l_U614[1], l_U778, 0 );
                l_U618[1] = 1;
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "Car 1 blew up before it could arrive.", 0 );
            for ( I = 4; I <= 7; I++ )
            {
                 /* CLEANPED */ sub_8971( l_U757[I] );
            }
             /* P_SAFE_STOP_SOUND */ sub_8357( l_U622[1], 0 );
             /* P_SAFE_RELEASE_SOUND_ID */ sub_8544( ref l_U622[1] );
            l_U618[1] = 1;
        }
    }
    if ((DOES_VEHICLE_EXIST( l_U614[2] )) AND (NOT l_U618[2]))
    {
        if (NOT (IS_VEHICLE_DEAD( l_U614[2] )))
        {
            if (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U614[2] )))
            {
                 /* WRITESCRIPTLOG */ sub_1068( "GA", "Car 2 arrived.", 0 );
                 /* P_BF_EXIT_VEHICLE_AND_COVER */ sub_79930( ref l_U757[8], l_U614[2], l_U778, 1 );
                 /* P_BF_EXIT_VEHICLE_AND_COVER */ sub_79930( ref l_U757[9], l_U614[2], l_U781, 0 );
                l_U618[2] = 1;
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1068( "GA", "Car 2 blew up before it could arrive.", 0 );
            for ( I = 8; I <= 9; I++ )
            {
                 /* CLEANPED */ sub_8971( l_U757[I] );
            }
             /* P_SAFE_STOP_SOUND */ sub_8357( l_U622[2], 0 );
             /* P_SAFE_RELEASE_SOUND_ID */ sub_8544( ref l_U622[2] );
            l_U618[2] = 1;
        }
    }
    return;
}

/* P_BF_EXIT_VEHICLE_AND_COVER */ void sub_79930(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, boolean bParam5)
{
    unknown uVar8;

    if ((NOT (IS_PED_DEAD( (uParam0^) ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() ))))
    {
        REGISTER_TARGET( (uParam0^),  /* PLAYER_PED_ID */ sub_2515() );
        OPEN_SEQUENCE_TASK( ref uVar8 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (bParam5)
        {
            TASK_LEAVE_VEHICLE( 0, uParam1 );
        }
        else
        {
            TASK_LEAVE_VEHICLE_DONT_CLOSE_DOOR( 0, uParam1 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_MOVE_TO_COVER_COORDS( 0, uParam2, 0 );
        CLOSE_SEQUENCE_TASK( uVar8 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar8 );
        CLEAR_SEQUENCE_TASK( uVar8 );
    }
    return;
}

/* F_BF_ARE_ANY_LIVING_REINFORCEMENT_ENEMIES_STILL_IN_CAR */ int sub_81006()
{
    int I;

    for ( I = 0; I <= 9; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U757[I] )))
        {
            if (IS_PED_IN_ANY_VEHICLE( l_U757[I] ))
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_START_GRENADE_3_GAMEPLAY */ void sub_81277()
{
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_START_GRENADE_3_GAMEPLAY start", 0 );
     /* P_CREATE_AND_START_TIMER */ sub_70632( ref l_U423, GET_RANDOM_INT_IN_RANGE( l_U432, l_U433 ) );
     /* STARTTIMER */ sub_3865( ref l_U200 );
    l_U770 = 1;
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_START_GRENADE_3_GAMEPLAY end", 0 );
    return;
}

/* P_BF_SPAWN_REINFORCEMENT_ENEMIES_W2 */ void sub_81909()
{
    switch (l_U770)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_1068( "GA", "e_BF_ReinforcementEnemyW2Spawn = ENTITY_STATE_INIT", 0 );
        l_U771 = 8;
        l_U614[2] =  /* CREATEVEHICLE */ sub_16533( 2038070575, 1.00000000, 1.00000000, 1.00000000, 0.00000000, 0, 0, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U614[2] )))
        {
            SET_VEHICLE_ENGINE_ON( l_U614[2], 1, 1 );
            SET_VEHICLE_SIREN( l_U614[2], 1 );
        }
         /* P_START_VEHICLE_PLAYBACK */ sub_60853( l_U614[2], l_U610[2], 1065353216, 0, 0 );
        l_U622[2] = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U622[2], "S_AIR_HANGAR_POLICE_01", l_U614[2] );
        l_U770 = 2;
         /* WRITESCRIPTLOG */ sub_1068( "GA", "e_BF_ReinforcementEnemyW2Spawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        if (l_U771 == 8)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[2] )))
            {
                l_U757[l_U771] =  /* CREATEPEDINVEHICLE */ sub_77572( ref l_U626[l_U771], l_U614[2], -1, 0, 0 );
            }
        }
        else if (l_U771 == 9)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[2] )))
            {
                l_U757[l_U771] =  /* CREATEPEDINVEHICLE */ sub_77572( ref l_U626[l_U771], l_U614[2], 0, 0, 0 );
            }
        }
        else
        {
            l_U757[l_U771] =  /* CREATEPED */ sub_52728( ref l_U626[l_U771] );
        }
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_53464( l_U757[l_U771], ref l_U562 );
         /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_53879( ref l_U757[l_U771], "AIT_EXPERT", 4.00000000, 25.00000000 );
         /* P_GIVE_PED_THROW_PROJECTILE */ sub_82588( l_U757[l_U771], -1980065396, 4 );
        if (NOT (IS_PED_DEAD( l_U757[l_U771] )))
        {
            SET_PED_ALERTNESS( l_U757[l_U771], 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U757[l_U771], 1 );
            SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U757[l_U771], 0 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U757[l_U771], 0 );
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U562._fU0, l_U568, l_U757[l_U771] );
        }
        l_U771++;
        if (l_U771 >= 10)
        {
            l_U770 = 3;
             /* WRITESCRIPTLOG */ sub_1068( "GA", "e_BF_ReinforcementEnemyW2Spawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_54268( ref l_U757, "pi_BF_ReinforcementEnemy" );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U562._fU0, 1 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U757[8], -1464892298, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_12270( l_U757[9], 57534114, 25000, 0, 0 );
        l_U770 = 4;
         /* WRITESCRIPTLOG */ sub_1068( "GA", "e_BF_ReinforcementEnemyW2Spawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

/* P_GIVE_PED_THROW_PROJECTILE */ void sub_82588(unknown uParam0, int iParam1, unknown uParam2)
{
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_GIVE_PED_THROW_PROJECTILE start", 0 );
    if ((iParam1 == -1986694060) || ((iParam1 == -1258125182) || ((iParam1 == -1629340685) || ((iParam1 == -1980065396) || ((iParam1 == -1378176668) || (iParam1 == -378310276))))))
    {
         /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11475( uParam0, iParam1, 5, uParam2, 0 );
    }
    else if ((iParam1 == 735364275) || (iParam1 == 1545805694))
    {
         /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11475( uParam0, iParam1, 6, uParam2, 0 );
    }
    else
    {
        SCRIPT_ASSERT( "Unknown holster for projectile type.  Please extend P_GIVE_PED_THROW_PROJECTILE to include this projectile type.", 0 );
         /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11475( uParam0, iParam1, 5, uParam2, 0 );
    }
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_GIVE_PED_THROW_PROJECTILE end", 0 );
    return;
}

/* P_START_GRENADE_4_GAMEPLAY */ void sub_83572()
{
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_START_GRENADE_4_GAMEPLAY start", 0 );
    if ( /* F_BF_CAN_BECKER_SHOOT_AT_PLAYER */ sub_72131())
    {
         /* P_BECKER_FIRE_GRENADE */ sub_17990(  /* F_GET_BECKER_AIM_COORD */ sub_17612(), 4000 );
        l_U434 = 0;
    }
    else
    {
        l_U434 = 1;
         /* RESETTIMER */ sub_4574( ref l_U435 );
    }
     /* P_CREATE_AND_START_TIMER */ sub_70632( ref l_U423, GET_RANDOM_INT_IN_RANGE( l_U432, l_U433 ) );
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_START_GRENADE_4_GAMEPLAY end", 0 );
    return;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_84259(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_18868( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* KILL_SPEECH */ void sub_84790(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_74178( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_85095(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_3715( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U2, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_85382(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_3865( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* P_IMAGEFX_START_BULLETCAM */ void sub_85954(unknown uParam0, boolean bParam1)
{
    PRINTSTRING( "[CO] P_IMAGEFX_START_BULLETCAM: Starting BulletCam: " );
    PRINTSTRING( uParam0 );
    PRINTNL();
     /* CLEANCAMERA */ sub_5360( ref l_U55 );
    l_U55 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U55, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

/* P_BF_SETUP_MPM_NIS */ void sub_86732()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_SETUP_MPM_NIS start", 0 );
    if (NOT (IS_PED_DEAD( l_U392 )))
    {
        if (NOT (ISEQ_QUERY_STATE( 1975594589, 3 )))
        {
            ISEQ_REGISTER_ENTITY( 1975594589, "vig09_becker", l_U392, 0 );
             /* TELEPORTPED */ sub_2626( l_U392, l_U379._fU0, l_U379._fU12 );
            ISEQ_START( 1975594589 );
            PED_SET_ACTION_INTENTION( l_U392, 56, 1000, 0, 0, 0 );
        }
        FREEZE_PED_POSITION( l_U392, 1 );
        SET_PED_CAN_BE_TARGETTED( l_U392, 0 );
    }
    if (NOT l_U598)
    {
         /* P_BF_START_PLANE_MOVING */ sub_72736( 15000.00000000 );
        l_U598 = 1;
    }
     /* P_BF_CLOSE_PLANE_DOOR */ sub_72872();
     /* CLEANPED */ sub_8971( l_U593 );
    for ( I = 0; I <= 2; I++ )
    {
        if (NOT (DOES_VEHICLE_EXIST( l_U614[I] )))
        {
            if (I == 2)
            {
                l_U614[I] =  /* CREATEVEHICLE */ sub_16533( 2038070575, 1.00000000, 1.00000000, 1.00000000, 0.00000000, 0, 0, 0 );
                SET_VEHICLE_SIREN( l_U614[I], 1 );
            }
            else
            {
                l_U614[I] =  /* CREATEVEHICLE */ sub_16533( -1053689591, 1.00000000, 1.00000000, 1.00000000, 0.00000000, 0, 0, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 1, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 2, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 3, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 4, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 5, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 6, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 7, 1 );
                SET_VEHICLE_EXTRA( l_U614[I], 8, 1 );
                SET_VEHICLE_COLOUR_COMBINATION( l_U614[I], 1 );
            }
             /* P_START_VEHICLE_PLAYBACK */ sub_60853( l_U614[I], l_U610[I], 1065353216, 0, 0 );
            SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE( l_U614[I] );
        }
    }
     /* P_STREAMREQ_AUDIO_BANK_REMOVE */ sub_87405( "SCRIPT_MISSION\S_AIR_HANGAR_01", ref g_U1950 );
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_7128( "S_AIR_PLANE_TAXI_START", ref g_U1910 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_7922( "S_AIR_PLANE_TAXI_START", ref g_U1910 );
    SET_CAM_VIEW_MODE( 0 );
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_SETUP_MPM_NIS end", 0 );
    return;
}

/* P_STREAMREQ_AUDIO_BANK_REMOVE */ void sub_87405(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6122( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a AUDIO_BANK asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_START_CHECKPOINT_THREAD */ void sub_87871(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_88070(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_88109( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_57591( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_61853( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2515(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2515(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2515(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2515(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2515(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_61853( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2515(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2515(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2515(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_88109(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* P_BF_START_MPM */ void sub_89628()
{
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_START_MPM start", 0 );
    if (GET_ADRENALINE_AMT() < 0.10000000)
    {
        SET_ADRENALINE_AMT( 0.10000000 );
    }
    DEACTIVATE_BULLET_TIME( 1, 1 );
    ACTIVATE_BULLET_TIME( 0, l_U1156, 1 );
    SET_PLAYER_CAN_CANCEL_SHOOTDODGE( 0 );
    SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_2515(), 0 );
    DISPLAY_HUD( 0 );
    ENABLE_CROSSHAIR( 1 );
    SET_SILHOUETTE_ACTIVE( 0 );
    SET_INSTANT_FIRE_FORCED( 0 );
    SET_BULLET_CAM_ON_NEXT_PROJECTILE( l_U392, "FINALE_01_MEDIUM_FAILSAFE" );
    SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_2515(), 1, 1, 1, 1, 1 );
     /* STARTTIMER */ sub_3865( ref l_U1147 );
     /* STARTTIMER */ sub_3865( ref l_U1158 );
    ENABLE_MPM( 1 );
    ENABLE_ALL_ADRENALINE( 0 );
    SET_CROSSHAIR_PULSE();
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_START_MPM end", 0 );
    return;
}

/* P_START_MPM_WIN_SEQUENCE */ void sub_90563()
{
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_START_MPM_WIN_SEQUENCE start", 0 );
     /* CLEANPED */ sub_8971( l_U140 );
     /* CLEANPED */ sub_8971( l_U593 );
     /* CLEANPEDARRAY */ sub_9080( ref l_U553 );
     /* CLEANPEDARRAY */ sub_9080( ref l_U757 );
     /* CLEANVEHICLEARRAY */ sub_9167( ref l_U614 );
    if (NOT (IS_VEHICLE_ON_SCREEN( l_U569 )))
    {
         /* CLEANVEHICLE */ sub_9221( l_U569 );
    }
     /* CLEANOBJECTARRAY */ sub_9323( ref l_U355 );
     /* CLEANPLACEMENTARRAY */ sub_9517( ref l_U218 );
     /* P_UNLOAD_ASSETS */ sub_90737();
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_START_MPM_WIN_SEQUENCE end", 0 );
    return;
}

/* P_UNLOAD_ASSETS */ void sub_90737()
{
     /* WRITESCRIPTLOG */ sub_1068( "CR", "P_UNLOAD_ASSETS - START", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_90810( ref l_U1167, ref g_U1030 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_63314( -602188521, ref g_U1030 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_63314( 2038070575, ref g_U1030 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_63314( -1053689591, ref g_U1030 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ sub_90957( ref l_U1176, ref g_U1247 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_91031( -1980065396, ref g_U1247 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_91399( l_U142, ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_91399( "veh@std", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_91399( "LEVEL_S_FIN_CP_11", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_91399( "LEVEL_S_FIN_CP_12", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_91399( "LEVEL_S_FIN_CP_09", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_91399( "VEH@CAR_JASRE", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_91399( "npc_pstl_cover_grenade", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_91399( "npc_rifle_cover_grenade", ref g_U1429 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_91399( "mped_grenade_core", ref g_U1429 );
     /* P_STREAMREQ_AUDIO_BANK_REMOVE */ sub_87405( "SCRIPT_MISSION\S_AIR_HANGAR_01", ref g_U1950 );
     /* P_STREAMREQ_AUDIO_BANK_REMOVE */ sub_87405( "SCRIPT_MISSION\S_AIR_HANGAR_02", ref g_U1950 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_92058( l_U397, ref g_U1783 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_92058( "LEVEL/S_AIR/S_FIN_VIG10_REACT.act", ref g_U1783 );
    if (g_U830 == 8)
    {
         /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_92058( "Vehicle/Vehicle_Car.act", ref g_U1783 );
    }
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE_ARRAY */ sub_92499( ref l_U610, ref g_U1638 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_92579( 285, ref g_U1638 );
     /* WRITESCRIPTLOG */ sub_1068( "CR", "P_UNLOAD_ASSETS - END", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_90810(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_63314( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ void sub_90957(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_91031( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_91031(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6122( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_91399(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6122( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_REMOVE */ void sub_92058(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6122( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ACTION_TREE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_REMOVE_ARRAY */ void sub_92499(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_92579( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ void sub_92579(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_6122( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a VEHICLE_RECORDING asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_BF_END_MPM */ void sub_93170()
{
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_END_MPM start", 0 );
    SET_CAM_VIEW_MODE( 1 );
    SET_PLAYER_CAN_CANCEL_SHOOTDODGE( 1 );
    SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_2515(), 1 );
    ENABLE_CROSSHAIR( 0 );
    DISPLAY_HUD( 0 );
    SET_SILHOUETTE_ACTIVE( 1 );
    SET_INSTANT_FIRE_FORCED( 0 );
    SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_2515(), 0, 0, 0, 0, 0 );
    ENABLE_MPM( 0 );
    ENABLE_ALL_ADRENALINE( 1 );
     /* WRITESCRIPTLOG */ sub_1068( "GA", "P_BF_END_MPM end", 0 );
    return;
}

/* P_TM1_DEBUG_RECORDING_WIDGET */ void sub_93783()
{
    if (NOT l_U1240)
    {
        START_WIDGET_GROUP( "Hangar fight Recording Widget" );
        ADD_WIDGET_BOOL( "Start Recording Mode", ref l_U1241 );
        START_WIDGET_GROUP( "Reinforcement arriving Recording" );
        ADD_WIDGET_BOOL( "Restart UFE A Recording Vehicle", ref l_U1242 );
        ADD_WIDGET_FLOAT_SLIDER( "UFE A Heading", ref l_U1246, -360.00000000, 360.00000000, 1.00000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U1243, "UFE A position", 0.10000000 );
        ADD_WIDGET_BOOL( "Restart UFE B Recording Vehicle", ref l_U1247 );
        ADD_WIDGET_FLOAT_SLIDER( "UFE B Heading", ref l_U1251, -360.00000000, 360.00000000, 1.00000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U1248, "UFE B position", 0.10000000 );
        ADD_WIDGET_BOOL( "Restart UFE C Recording Vehicle", ref l_U1252 );
        ADD_WIDGET_FLOAT_SLIDER( "UFE C Heading", ref l_U1256, -360.00000000, 360.00000000, 1.00000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U1253, "UFE C position", 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Plane leaving Hangar." );
        ADD_WIDGET_BOOL( "Restart Plane Recording Vehicle", ref l_U1257 );
        ADD_WIDGET_FLOAT_SLIDER( "Plane Heading", ref l_U1261, -360.00000000, 360.00000000, 1.00000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_14939( ref l_U1258, "Plane position", 0.10000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U1240 = 1;
    }
    if (l_U1241)
    {
         /* NIS_POST_SETUP */ sub_69966( 1, 1 );
         /* P_CLEANUP_BECKER */ sub_5878();
        l_U92 = 0;
         /* TELEPORTPED */ sub_2626(  /* PLAYER_PED_ID */ sub_2515(), g_U2014[9], g_U2129[9] );
        l_U1241 = 0;
    }
    if (l_U1242)
    {
         /* CLEANVEHICLEARRAY */ sub_9167( ref l_U1234 );
        l_U1234[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_94592( -1053689591, l_U1243, l_U1246 );
        l_U1242 = 0;
    }
    if (l_U1247)
    {
         /* CLEANVEHICLEARRAY */ sub_9167( ref l_U1234 );
        l_U1234[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_94592( -1053689591, l_U1248, l_U1251 );
        l_U1234[1] =  /* CREATEVEHICLE */ sub_16533( -1053689591, l_U1243, l_U1246, 0, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_60853( l_U1234[1], 282, 1065353216, 0, 0 );
        l_U1247 = 0;
    }
    if (l_U1252)
    {
         /* CLEANVEHICLEARRAY */ sub_9167( ref l_U1234 );
        l_U1234[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_94592( 2038070575, l_U1253, l_U1256 );
        l_U1234[1] =  /* CREATEVEHICLE */ sub_16533( 2038070575, l_U1243, l_U1246, 0, 0, 0 );
        l_U1234[2] =  /* CREATEVEHICLE */ sub_16533( 2038070575, l_U1248, l_U1251, 0, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_60853( l_U1234[1], 282, 1065353216, 0, 0 );
         /* P_START_VEHICLE_PLAYBACK */ sub_60853( l_U1234[2], 283, 1065353216, 0, 0 );
        SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE( l_U1234[1] );
        SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE( l_U1234[2] );
        l_U1252 = 0;
    }
    if (l_U1257)
    {
         /* CLEANVEHICLEARRAY */ sub_9167( ref l_U1234 );
        l_U1234[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_94592( 877881452, l_U1258, l_U1261 );
        l_U1257 = 0;
    }
    return;
}

/* F_DEBUG_CREATE_RECORDING_VEHICLE */ void sub_94592(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown Result;

     /* WRITESCRIPTLOG */ sub_1068( "GA", "F_DEBUG_CREATE_RECORDING_VEHICLE start", 0 );
    Result =  /* CREATEVEHICLE */ sub_16533( uParam0, uParam1, uParam4, 1, 0, 0 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2515() ))) AND (NOT (IS_VEHICLE_DEAD( Result ))))
    {
        SET_PED_INTO_VEHICLE(  /* PLAYER_PED_ID */ sub_2515(), Result, -1 );
        SET_VEHICLE_PROOFS( Result, 1, 1, 1, 1, 1 );
        SET_VEHICLE_ENGINE_ON( Result, 1, 1 );
    }
    return Result;
}


void main()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;
    unknown uVar51;
    unknown uVar52;
    unknown uVar53;
    unknown uVar54;
    unknown uVar55;
    unknown uVar56;
    unknown uVar57;
    unknown uVar58;
    unknown uVar59;
    unknown uVar60;
    unknown uVar61;
    unknown uVar62;
    unknown uVar63;
    unknown uVar64;
    unknown uVar65;
    unknown uVar66;
    unknown uVar67;
    unknown uVar68;
    unknown uVar69;
    unknown uVar70;
    unknown uVar71;
    unknown uVar72;
    unknown uVar73;
    unknown uVar74;
    unknown uVar75;
    unknown uVar76;
    unknown uVar77;
    unknown uVar78;
    unknown uVar79;
    unknown uVar80;
    unknown uVar81;
    unknown uVar82;
    unknown uVar83;
    unknown uVar84;
    unknown uVar85;
    unknown uVar86;
    unknown uVar87;
    unknown uVar88;
    unknown uVar89;
    unknown uVar90;
    unknown uVar91;
    unknown uVar92;
    unknown uVar93;
    unknown uVar94;
    unknown uVar95;
    unknown uVar96;
    unknown uVar97;
    unknown uVar98;
    unknown uVar99;
    unknown uVar100;
    unknown uVar101;
    unknown uVar102;
    unknown uVar103;
    unknown uVar104;
    unknown uVar105;
    unknown uVar106;
    unknown uVar107;
    unknown uVar108;
    unknown uVar109;
    unknown uVar110;
    unknown uVar111;
    unknown uVar112;
    unknown uVar113;
    unknown uVar114;
    unknown uVar115;
    unknown uVar116;
    unknown uVar117;
    unknown uVar118;
    unknown uVar119;
    unknown uVar120;
    unknown uVar121;
    unknown uVar122;
    unknown uVar123;
    unknown uVar124;
    unknown uVar125;
    int iVar126;
    int iVar127;
    int iVar128;
    int iVar129;
    int iVar130;
    int iVar131;

    array(ref uVar2._fU56._fU68._fU16, 64);
    ref uVar2._fU56._fU68;
    ref uVar2._fU56;
    ref uVar2;
    uVar2 = {sub_34( ref l_U0 )};
    iVar126 = STAT_HASH_GET_INT( -1635294723 );
    iVar127 = STAT_HASH_GET_INT( 1137002674 );
    iVar128 = iVar126;
    iVar129 = iVar127;
    iVar130 = 0;
    while (NOT IS_EXITFLAG_SET())
    {
        iVar126 = (STAT_HASH_GET_INT( -1635294723 )) - iVar128;
        iVar127 = (STAT_HASH_GET_INT( 1137002674 )) - iVar129;
        if (iVar126 > 0)
        {
            if (iVar127 > 0)
            {
                iVar131 = (sub_4637( 1 )) + (sub_4637( 0 ));
                if (iVar131 == 0)
                {
                    iVar130 += iVar126;
                    sub_4813( ref uVar2, iVar130, (sub_4000( ref uVar2 )) - uVar2._fU424._fU0, 1 );
                }
            }
        }
        iVar128 = STAT_HASH_GET_INT( -1635294723 );
        iVar129 = STAT_HASH_GET_INT( 1137002674 );
        WAIT( 500 );
    }
    sub_4813( ref uVar2, iVar130, (sub_4000( ref uVar2 )) - uVar2._fU424._fU0, 1 );
    SET_EXITFLAG_RESPONSE();
    return;
}

void sub_34(int iParam0)
{
    unknown Result;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;
    unknown uVar51;
    unknown uVar52;
    unknown uVar53;
    unknown uVar54;
    unknown uVar55;
    unknown uVar56;
    unknown uVar57;
    unknown uVar58;
    unknown uVar59;
    unknown uVar60;
    unknown uVar61;
    unknown uVar62;
    unknown uVar63;
    unknown uVar64;
    unknown uVar65;
    unknown uVar66;
    unknown uVar67;
    unknown uVar68;
    unknown uVar69;
    unknown uVar70;
    unknown uVar71;
    unknown uVar72;
    unknown uVar73;
    unknown uVar74;
    unknown uVar75;
    unknown uVar76;
    unknown uVar77;
    unknown uVar78;
    unknown uVar79;
    unknown uVar80;
    unknown uVar81;
    unknown uVar82;
    unknown uVar83;
    unknown uVar84;
    unknown uVar85;
    unknown uVar86;
    unknown uVar87;
    unknown uVar88;
    unknown uVar89;
    unknown uVar90;
    unknown uVar91;
    unknown uVar92;
    unknown uVar93;
    unknown uVar94;
    unknown uVar95;
    unknown uVar96;
    unknown uVar97;
    unknown uVar98;
    unknown uVar99;
    unknown uVar100;
    unknown uVar101;
    unknown uVar102;
    unknown uVar103;
    unknown uVar104;
    unknown uVar105;
    unknown uVar106;
    unknown uVar107;
    unknown uVar108;
    unknown uVar109;
    unknown uVar110;
    unknown uVar111;
    unknown uVar112;
    unknown uVar113;
    unknown uVar114;
    unknown uVar115;
    unknown uVar116;
    unknown uVar117;
    unknown uVar118;
    unknown uVar119;
    unknown uVar120;
    unknown uVar121;
    unknown uVar122;
    unknown uVar123;
    unknown uVar124;
    unknown uVar125;
    unknown uVar126;

    array(ref Result._fU56._fU68._fU16, 64);
    ref Result._fU56._fU68;
    ref Result._fU56;
    ref Result;
    Result._fU0 = iParam0->_fU0;
    Result._fU4 = iParam0->_fU4;
    Result._fU444 = DOES_LAUNCH_PARAM_EXIST( Result._fU0, "persistUntilReset" );
    Result._fU16 = DOES_LAUNCH_PARAM_EXIST( Result._fU0, "alwaysToast" );
    Result._fU448 = DOES_LAUNCH_PARAM_EXIST( Result._fU0, "resetSource" );
    Result._fU424._fU16 = DOES_LAUNCH_PARAM_EXIST( Result._fU0, "secondarySourceInverted" );
    DEBUG_GET_BG_SCRIPT_NAME( iParam0->_fU0, 24, ref Result._fU472 );
    GET_BG_SCRIPT_LEADERBOARD_NAME( Result._fU0, 32, ref Result._fU24 );
    Result._fU56._fU68._fU0 = sub_265( ref Result._fU24 );
    Result._fU56._fU68._fU12 = LEADERBOARDS_GET_NUMBER_OF_COLUMNS( Result._fU56._fU68._fU0 );
    if (Result._fU56._fU68._fU0 == 138)
    {
        return Result;
    }
    else if (Result._fU56._fU68._fU12 != 5)
    {
        return Result;
    }
    if (sub_3662( Result._fU56._fU68._fU0 ))
    {
        while (LEADERBOARDS_READ_PENDING( Result._fU56._fU68._fU0 ))
        {
            WAIT( 25 );
        }
        if (LEADERBOARDS_READ_FINISHED_AND_SUCCEEDED( Result._fU56._fU68._fU0 ))
        {
            if (sub_3773( Result._fU56._fU68._fU0, ref Result._fU56 ))
            {
                Result._fU56._fU68._fU276 = 1;
            }
            Result._fU8 = 1;
        }
    }
    if (NOT Result._fU8)
    {
        ;
    }
    else
    {
        Result._fU404._fU0 = sub_3844( ref Result );
        Result._fU404._fU4 = 0;
        if (Result._fU444)
        {
            Result._fU404._fU12 = sub_3920( ref Result, 1 );
        }
        Result._fU424._fU0 = sub_4000( ref Result );
        Result._fU424._fU4 = 0;
        if (Result._fU444)
        {
            Result._fU424._fU12 = sub_3920( ref Result, 2 );
        }
        Result._fU404._fU8 = sub_3920( ref Result, 3 );
        Result._fU424._fU8 = sub_3920( ref Result, 4 );
        Result._fU20 = sub_4182( ref Result );
        if (Result._fU448)
        {
            Result._fU452._fU0 = sub_4388( ref Result );
            Result._fU452._fU4 = Result._fU452._fU0;
        }
    }
    LEADERBOARDS_READ_RELEASE_DATA( Result._fU56._fU68._fU0 );
    return Result;
}

int sub_265(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_HASH_KEY( uParam0 );
    if (-953398085 == iVar3)
    {
        return 8;
    }
    else if (-1027154863 == iVar3)
    {
        return 9;
    }
    else if (1334183486 == iVar3)
    {
        return 10;
    }
    else if (-2057048212 == iVar3)
    {
        return 11;
    }
    else if (-1434408255 == iVar3)
    {
        return 12;
    }
    else if (794820843 == iVar3)
    {
        return 13;
    }
    else if (-1113896046 == iVar3)
    {
        return 14;
    }
    else if (1551691025 == iVar3)
    {
        return 15;
    }
    else if (-2004202414 == iVar3)
    {
        return 16;
    }
    else if (1654174590 == iVar3)
    {
        return 23;
    }
    else if (1933530315 == iVar3)
    {
        return 24;
    }
    else if (1175714421 == iVar3)
    {
        return 25;
    }
    else if (-876189361 == iVar3)
    {
        return 27;
    }
    else if (-2057347966 == iVar3)
    {
        return 28;
    }
    else if (1687122883 == iVar3)
    {
        return 29;
    }
    else if (-1501982304 == iVar3)
    {
        return 30;
    }
    else if (163375924 == iVar3)
    {
        return 31;
    }
    else if (977346343 == iVar3)
    {
        return 32;
    }
    else if (-618202374 == iVar3)
    {
        return 34;
    }
    else if (-72462569 == iVar3)
    {
        return 35;
    }
    else if (1461583872 == iVar3)
    {
        return 36;
    }
    else if (-2147276114 == iVar3)
    {
        return 37;
    }
    else if (153966342 == iVar3)
    {
        return 38;
    }
    else if (-1400721215 == iVar3)
    {
        return 39;
    }
    else if (1490132976 == iVar3)
    {
        return 40;
    }
    else if (-1571482003 == iVar3)
    {
        return 41;
    }
    else if (-442829348 == iVar3)
    {
        return 42;
    }
    else if (-1217776767 == iVar3)
    {
        return 43;
    }
    else if (-1639902146 == iVar3)
    {
        return 44;
    }
    else if (220368992 == iVar3)
    {
        return 45;
    }
    else if (-1064416598 == iVar3)
    {
        return 46;
    }
    else if (-554463549 == iVar3)
    {
        return 47;
    }
    else if (-1340093966 == iVar3)
    {
        return 48;
    }
    else if (897041347 == iVar3)
    {
        return 49;
    }
    else if (-112464092 == iVar3)
    {
        return 50;
    }
    else if (-980552813 == iVar3)
    {
        return 51;
    }
    else if (-118650984 == iVar3)
    {
        return 52;
    }
    else if (291282701 == iVar3)
    {
        return 53;
    }
    else if (-260679992 == iVar3)
    {
        return 54;
    }
    else if (-1174811148 == iVar3)
    {
        return 55;
    }
    else if (-1023812182 == iVar3)
    {
        return 56;
    }
    else if (-831579046 == iVar3)
    {
        return 57;
    }
    else if (-1235010999 == iVar3)
    {
        return 58;
    }
    else if (1852263743 == iVar3)
    {
        return 59;
    }
    else if (86943279 == iVar3)
    {
        return 60;
    }
    else if (-2139275894 == iVar3)
    {
        return 61;
    }
    else if (-1127297143 == iVar3)
    {
        return 62;
    }
    else if (-487420669 == iVar3)
    {
        return 63;
    }
    else if (-76640740 == iVar3)
    {
        return 64;
    }
    else if (-856530587 == iVar3)
    {
        return 65;
    }
    else if (1858738948 == iVar3)
    {
        return 66;
    }
    else if (2094039508 == iVar3)
    {
        return 67;
    }
    else if (1037941968 == iVar3)
    {
        return 68;
    }
    else if (821281036 == iVar3)
    {
        return 69;
    }
    else if (-268184626 == iVar3)
    {
        return 70;
    }
    else if (1489669064 == iVar3)
    {
        return 71;
    }
    else if (1130524002 == iVar3)
    {
        return 72;
    }
    else if (1399092646 == iVar3)
    {
        return 73;
    }
    else if (734550260 == iVar3)
    {
        return 74;
    }
    else if (-1184391504 == iVar3)
    {
        return 75;
    }
    else if (-2033921121 == iVar3)
    {
        return 76;
    }
    else if (-362186472 == iVar3)
    {
        return 77;
    }
    else if (-1691835238 == iVar3)
    {
        return 78;
    }
    else if (90110671 == iVar3)
    {
        return 79;
    }
    else if (-816682944 == iVar3)
    {
        return 80;
    }
    else if (2108138575 == iVar3)
    {
        return 81;
    }
    else if (-710652216 == iVar3)
    {
        return 82;
    }
    else if (335999761 == iVar3)
    {
        return 83;
    }
    else if (-831015519 == iVar3)
    {
        return 84;
    }
    else if (-1871094666 == iVar3)
    {
        return 85;
    }
    else if (1659189030 == iVar3)
    {
        return 86;
    }
    else if (1256380012 == iVar3)
    {
        return 87;
    }
    else if (1851744486 == iVar3)
    {
        return 88;
    }
    else if (1599699502 == iVar3)
    {
        return 89;
    }
    else if (64506942 == iVar3)
    {
        return 90;
    }
    else if (-293059433 == iVar3)
    {
        return 91;
    }
    else if (-1202054380 == iVar3)
    {
        return 92;
    }
    else if (-804889157 == iVar3)
    {
        return 93;
    }
    else if (-185136473 == iVar3)
    {
        return 94;
    }
    else if (-959200617 == iVar3)
    {
        return 95;
    }
    else if (541583202 == iVar3)
    {
        return 96;
    }
    else if (-1899803821 == iVar3)
    {
        return 97;
    }
    else if (-487485892 == iVar3)
    {
        return 98;
    }
    else if (1667838881 == iVar3)
    {
        return 99;
    }
    else if (-548978776 == iVar3)
    {
        return 102;
    }
    else if (-832194675 == iVar3)
    {
        return 103;
    }
    else if (914920279 == iVar3)
    {
        return 104;
    }
    else if (-2047046904 == iVar3)
    {
        return 105;
    }
    else if (604963646 == iVar3)
    {
        return 106;
    }
    else if (866332908 == iVar3)
    {
        return 107;
    }
    else if (-2001333759 == iVar3)
    {
        return 108;
    }
    else if (-1082020163 == iVar3)
    {
        return 109;
    }
    else if (1783108983 == iVar3)
    {
        return 110;
    }
    else if (1617061130 == iVar3)
    {
        return 111;
    }
    else if (179837252 == iVar3)
    {
        return 112;
    }
    else if (263520609 == iVar3)
    {
        return 113;
    }
    else if (1201402944 == iVar3)
    {
        return 114;
    }
    else if (1771264175 == iVar3)
    {
        return 115;
    }
    else if (1332809131 == iVar3)
    {
        return 116;
    }
    else if (-1379041883 == iVar3)
    {
        return 117;
    }
    else if (560426845 == iVar3)
    {
        return 118;
    }
    else if (-1500175557 == iVar3)
    {
        return 119;
    }
    else if (1054953673 == iVar3)
    {
        return 120;
    }
    else if (1223117442 == iVar3)
    {
        return 121;
    }
    else if (654739262 == iVar3)
    {
        return 122;
    }
    else if (1659862667 == iVar3)
    {
        return 123;
    }
    else if (1831611047 == iVar3)
    {
        return 124;
    }
    else if (729659228 == iVar3)
    {
        return 125;
    }
    else if (1683792344 == iVar3)
    {
        return 126;
    }
    else if (-1680230631 == iVar3)
    {
        return 127;
    }
    else if (1406249916 == iVar3)
    {
        return 128;
    }
    else if (-424703953 == iVar3)
    {
        return 129;
    }
    else if (-201852515 == iVar3)
    {
        return 130;
    }
    else if (-554654591 == iVar3)
    {
        return 131;
    }
    else if (-99933485 == iVar3)
    {
        return 132;
    }
    else if (8565090 == iVar3)
    {
        return 133;
    }
    else if (2054596507 == iVar3)
    {
        return 134;
    }
    else if (-1070253465 == iVar3)
    {
        return 135;
    }
    else if (-253299202 == iVar3)
    {
        return 136;
    }
    else if (-308060883 == iVar3)
    {
        return 137;
    }
    else if (-1225548861 == iVar3)
    {
        return 138;
    }
    else if (546083939 == iVar3)
    {
        return 139;
    }
    else if (2025436557 == iVar3)
    {
        return 140;
    }
    else if (-1225774550 == iVar3)
    {
        return 141;
    }
    else if (298546902 == iVar3)
    {
        return 142;
    }
    else if (-423416024 == iVar3)
    {
        return 143;
    }
    else if (2045005178 == iVar3)
    {
        return 144;
    }
    else if (-1829866843 == iVar3)
    {
        return 145;
    }
    else if (-2055163816 == iVar3)
    {
        return 146;
    }
    else if (249591797 == iVar3)
    {
        return 147;
    }
    else if (376798870 == iVar3)
    {
        return 148;
    }
    else if (841040710 == iVar3)
    {
        return 149;
    }
    else if (-316389431 == iVar3)
    {
        return 150;
    }
    else if (-1415289236 == iVar3)
    {
        return 151;
    }
    else if (1747831507 == iVar3)
    {
        return 152;
    }
    else if (-1164452068 == iVar3)
    {
        return 153;
    }
    else if (-1065865247 == iVar3)
    {
        return 154;
    };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    return 138;
}

void sub_3662(unknown uParam0)
{
    return LEADERBOARDS_READ_FOR_LOCAL_GAMER_EX( uParam0, 1 );
}

void sub_3773(unknown uParam0, unknown uParam1)
{
    return LEADERBOARDS_READ_GET_ROW_DATA_FOR_LOCAL_GAMER_EX( uParam0, 1, uParam1 );
}

void sub_3844(int iParam0)
{
    return GET_LAUNCH_PARAM_VALUE( iParam0->_fU0, "primarySource" );
}

int sub_3920(int iParam0, unknown uParam1)
{
    if (ref ref iParam0->_fU56->_fU68->_fU276)
    {
        return FLOOR( ref ref iParam0->_fU56->_fU68->_fU16[uParam1] );
        break;
    }
    return 0;
}

void sub_4000(int iParam0)
{
    if (ref iParam0->_fU424->_fU16)
    {
        return GET_LAUNCH_PARAM_VALUE( iParam0->_fU0, "secondarySourceInverted" );
        break;
    }
    return GET_LAUNCH_PARAM_VALUE( iParam0->_fU0, "secondarySource" );
}

int sub_4182(int iParam0)
{
    if (COMPARE_AGAINST_SCORE_PARAM( iParam0->_fU0, ref iParam0->_fU404->_fU8, "platinum" ))
    {
        return 4;
    }
    else if (COMPARE_AGAINST_SCORE_PARAM( iParam0->_fU0, ref iParam0->_fU404->_fU8, "gold" ))
    {
        return 3;
    }
    else if (COMPARE_AGAINST_SCORE_PARAM( iParam0->_fU0, ref iParam0->_fU404->_fU8, "silver" ))
    {
        return 2;
    }
    else if (COMPARE_AGAINST_SCORE_PARAM( iParam0->_fU0, ref iParam0->_fU404->_fU8, "bronze" ))
    {
        return 1;
    };;;;
    return 0;
}

void sub_4388(int iParam0)
{
    return GET_LAUNCH_PARAM_VALUE( iParam0->_fU0, "resetSource" );
}

void sub_4637(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    int Result;
    unknown uVar6;

    uVar3 = sub_4647();
    uVar4 = GET_WEAPON_FROM_HAND( uVar3, uParam0, 0 );
    Result = 0;
    if (GET_DOES_WEAPON_EXIST( uVar4 ))
    {
        uVar6 = GET_WEAPON_TYPE( uVar4 );
        Result = GET_WEAPON_AMMO_IN_CLIP( uVar4 );
    }
    return Result;
}

void sub_4647()
{
    return GET_PLAYER_PED( INT_TO_PLAYERINDEX( GET_PLAYER_ID() ) );
}

void sub_4813(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    boolean bVar6;

    if (NOT iParam0->_fU8)
    {
        return;
    }
    sub_4842( iParam0, ref iParam1, ref iParam2, ref bVar6 );
    if (iParam1 > (ref iParam0->_fU404->_fU8))
    {
        sub_5076( iParam0 );
        if (COMPARE_AGAINST_SCORE_PARAM( iParam0->_fU0, iParam1, "minimum" ))
        {
            iParam0->_fU12 = 1;
            STAT_HASH_SET_INT( -221891432, GET_REAL_TIME() );
        }
    }
    else if ((iParam2 != (ref iParam0->_fU424->_fU8)) AND (iParam1 == (ref iParam0->_fU404->_fU8)))
    {
        if ((ref iParam0->_fU424->_fU16) || (iParam2 > (ref iParam0->_fU424->_fU8)))
        {
            sub_5076( iParam0 );
        }
    }
    else if (bVar6)
    {
        sub_5076( iParam0 );
    };;;
    if (iParam0->_fU448)
    {
        if ((ref iParam0->_fU452->_fU0) != (sub_4388( iParam0 )))
        {
            if (iParam0->_fU12)
            {
                sub_5743( iParam0, 0 );
            }
            sub_6211( iParam0 );
        }
    }
    if (iParam0->_fU4 == 3)
    {
        if (NOT (GET_CHALLENGE_PROGRESS( iParam0->_fU0 )))
        {
            if (sub_6446( iParam0 ))
            {
                sub_5743( iParam0, 0 );
            }
        }
        else if ((iParam0->_fU12) AND (uParam3))
        {
            sub_5743( iParam0, 0 );
        }
    }
    else if ((iParam0->_fU12) AND (uParam3))
    {
        sub_5743( iParam0, 0 );
    }
    return;
}

void sub_4842(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if (iParam0->_fU444)
    {
        if ((uParam1^) != (ref iParam0->_fU404->_fU4))
        {
            ref iParam0->_fU404->_fU12 += (uParam1^) - (ref iParam0->_fU404->_fU4);
            ref iParam0->_fU404->_fU4 = (uParam1^);
            (uParam3^) = 1;
        }
        if ((uParam2^) != (ref iParam0->_fU424->_fU4))
        {
            ref iParam0->_fU424->_fU12 += (uParam2^) - (ref iParam0->_fU424->_fU4);
            ref iParam0->_fU424->_fU4 = (uParam2^);
            (uParam3^) = 1;
        }
        (uParam1^) = ref iParam0->_fU404->_fU12;
        (uParam2^) = ref iParam0->_fU424->_fU12;
    }
    else
    {
        ref iParam0->_fU404->_fU4 = (uParam1^);
        ref iParam0->_fU424->_fU4 = (uParam2^);
    }
    return;
}

void sub_5076(int iParam0)
{
    int iVar3;
    int iVar4;

    if (iParam0->_fU444)
    {
        ref iParam0->_fU404->_fU8 = ref iParam0->_fU404->_fU12;
        ref iParam0->_fU424->_fU8 = ref iParam0->_fU424->_fU12;
    }
    else
    {
        ref iParam0->_fU404->_fU8 = ref iParam0->_fU404->_fU4;
        ref iParam0->_fU424->_fU8 = ref iParam0->_fU424->_fU4;
    }
    iVar3 = (ref iParam0->_fU404->_fU8) * 10000;
    if (ref iParam0->_fU424->_fU16)
    {
        if ((ref iParam0->_fU424->_fU8) < 9999)
        {
            iVar3 += 10000 - ((ref iParam0->_fU424->_fU8) + 1);
        }
    }
    else if ((ref iParam0->_fU424->_fU8) < 9999)
    {
        iVar3 += ref iParam0->_fU424->_fU8;
    }
    else
    {
        iVar3 += 9999;
    }
    ref ref iParam0->_fU56->_fU68->_fU16[0] = TO_FLOAT( iVar3 );
    ref ref iParam0->_fU56->_fU68->_fU16[3] = TO_FLOAT( ref iParam0->_fU404->_fU8 );
    ref ref iParam0->_fU56->_fU68->_fU16[4] = TO_FLOAT( ref iParam0->_fU424->_fU8 );
    ref ref iParam0->_fU56->_fU68->_fU16[1] = TO_FLOAT( ref iParam0->_fU404->_fU12 );
    ref ref iParam0->_fU56->_fU68->_fU16[2] = TO_FLOAT( ref iParam0->_fU424->_fU12 );
    sub_5447( iParam0 );
    iVar4 = sub_4182( iParam0 );
    if (iVar4 > iParam0->_fU20)
    {
        GIVE_BG_SCRIPT_AWARD( iParam0->_fU0, 0 );
        iParam0->_fU20 = iVar4;
    }
    return;
}

void sub_5447(int iParam0)
{
    LEADERBOARDS_WRITE_PLAYER_DATA( ref ref iParam0->_fU56->_fU68->_fU0, (iParam0 + 56) + 68 );
    LEADERBOARDS_WRITE_FLUSH();
    return;
}

void sub_5743(int iParam0, boolean bParam1)
{
    int iVar4;

    if ((bParam1) || (iParam0->_fU12))
    {
        iVar4 = 0;
        if ((sub_5774( 979805897 )) == -1)
        {
            iVar4 = 1;
        }
        else if ((sub_5774( 1847786293 )) == -1)
        {
            iVar4 = 2;
        }
        else if (bParam1)
        {
            iVar4 = 1;
        };;;
        if (iVar4 > 0)
        {
            iParam0->_fU12 = 0;
            if (iVar4 == 1)
            {
                sub_5909( 979805897, iParam0->_fU0, 0 );
                sub_5909( -24484267, sub_6035( iParam0 ), 0 );
                sub_5909( 983652344, ref iParam0->_fU404->_fU8, 0 );
            }
            else
            {
                sub_5909( 1847786293, iParam0->_fU0, 0 );
                sub_5909( -854133973, sub_6035( iParam0 ), 0 );
                sub_5909( 1976648753, ref iParam0->_fU404->_fU8, 0 );
            }
        }
    }
    return;
}

int sub_5774(unknown uParam0)
{
    if (SCRIPT_VAR_HASH_EXISTS( uParam0 ))
    {
        return SCRIPT_VAR_HASH_GET_INT( uParam0 );
        break;
    }
    return -1;
}

void sub_5909(unknown uParam0, int iParam1, int iParam2)
{
    boolean bVar5;

    bVar5 = true;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( uParam0 )))
    {
        SCRIPT_VAR_HASH_ADD_INT( uParam0 );
    }
    else if (iParam2 == 1)
    {
        bVar5 = (SCRIPT_VAR_HASH_GET_INT( uParam0 )) < iParam1;
    }
    else if (iParam2 == 2)
    {
        bVar5 = (SCRIPT_VAR_HASH_GET_INT( uParam0 )) > iParam1;
    };;;
    if (bVar5)
    {
        SCRIPT_VAR_HASH_SET_INT( uParam0, iParam1 );
    }
    return;
}

int sub_6035(unknown uParam0)
{
    switch (sub_4182( uParam0 ))
    {
        case 4: return 3;
        case 3: return 2;
        case 2: return 1;
        case 1: return 0;
    }
    return 5;
}

void sub_6211(int iParam0)
{
    if (iParam0->_fU444)
    {
        ref ref iParam0->_fU56->_fU68->_fU16[1] = 0.00000000;
        ref ref iParam0->_fU56->_fU68->_fU16[2] = 0.00000000;
        sub_5447( iParam0 );
    }
    iParam0->_fU12 = 0;
    ref iParam0->_fU404->_fU0 = sub_3844( iParam0 );
    ref iParam0->_fU404->_fU4 = 0;
    ref iParam0->_fU404->_fU12 = 0;
    ref iParam0->_fU424->_fU0 = sub_4000( iParam0 );
    ref iParam0->_fU424->_fU4 = 0;
    ref iParam0->_fU424->_fU12 = 0;
    if (iParam0->_fU448)
    {
        ref iParam0->_fU452->_fU0 = sub_4388( iParam0 );
        ref iParam0->_fU452->_fU4 = ref iParam0->_fU452->_fU0;
    }
    return;
}

int sub_6446(int iParam0)
{
    if ((COMPARE_AGAINST_SCORE_PARAM( iParam0->_fU0, ref iParam0->_fU404->_fU4, "platinum" )) || ((COMPARE_AGAINST_SCORE_PARAM( iParam0->_fU0, ref iParam0->_fU404->_fU4, "gold" )) || ((COMPARE_AGAINST_SCORE_PARAM( iParam0->_fU0, ref iParam0->_fU404->_fU4, "silver" )) || (COMPARE_AGAINST_SCORE_PARAM( iParam0->_fU0, ref iParam0->_fU404->_fU4, "bronze" )))))
    {
        SET_CHALLENGE_PROGRESS( iParam0->_fU0 );
        return 1;
    }
    return 0;
}


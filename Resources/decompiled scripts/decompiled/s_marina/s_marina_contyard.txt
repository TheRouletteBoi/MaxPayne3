void main()
{
    unknown uVar2;
    unknown uVar3;

    l_U0 = 1;
    l_U1 = 144;
    StrCopy( ref l_U2, "Ambient_Lightning_Flash_BG_S", 32 );
    StrCopy( ref l_U10, "Ambient_Lightning_Flash_FG_S", 32 );
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 1.00000000;
    l_U25 = {0.00000000, 0.00000000, 0.00000000};
    l_U28 = {0.00000000, 0.00000000, 0.00000000};
    l_U31 = 1.00000000;
    l_U32 = 0;
    l_U33 = 0;
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0.50000000;
    l_U38 = 0;
    l_U39 = 0;
    l_U40 = {0, 0, 0};
    StrCopy( ref l_U43, "DUMMY", 32 );
    l_U51 = 1;
    l_U56 = 0;
    l_U57 = 0;
    l_U58 = 0;
    l_U61 = 0;
    l_U106 = -1;
    l_U107 = {64536, 64536, 64536};
    l_U152 = "PED_DEF";
    l_U194 = 1.00000000;
    l_U206 = 0;
    l_U247 = 0;
    l_U267 = 0;
    l_U268 = 1;
    l_U269 = 0;
    l_U270 = 1.00000000;
    l_U271 = -5.00000000;
    l_U272 = 0;
    l_U273 = 0;
    l_U274 = 0;
    l_U278 = 42;
    l_U279 = 0;
    l_U280 = 0;
    l_U281 = 0;
    l_U282 = 0;
    l_U283 = 0;
    l_U284 = 90.00000000;
    l_U285 = {0.00000000, 0.00000000, 0.00000000};
    l_U288 = {0.00000000, 0.00000000, 0.00000000};
    l_U291 = 0;
    l_U292 = 0;
    l_U293 = 0;
    l_U294 = 0;
    l_U295 = 0;
    l_U296 = 0;
    l_U297 = nil;
    l_U298 = {0.00000000, 0.00000000, 0.00000000};
    l_U301 = 0;
    l_U302 = 0;
    l_U303 = 0;
    l_U305 = 0;
    l_U306 = 0;
    l_U307 = 1500;
    l_U375 = 1;
    l_U376 = 0;
    l_U377 = 1;
    l_U378 = 0;
    l_U389 = "S_MARINA_CONTAINER_YARD_GARAGE_DOOR_BUTTON";
    l_U390 = "S_MARINA_CONTAINER_YARD_GARAGE_DOOR_OPEN";
    l_U391 = "mid_05_docks_concat";
    l_U392 = "MID_04_DOCKS_pt1";
    l_U443 = 0;
    l_U444 = {63.12078000, 17.23630000, 1.83300000};
    l_U447 = {64.37900000, 17.40000000, 1.84200000};
    l_U450 = {64.71500000, 16.17000000, 1.83500000};
    l_U453 = -150.51000000;
    l_U454 = 160.09400000;
    l_U455 = 94.65700000;
    l_U459 = {62.43300000, 6.63100000, 2.01900000};
    l_U474 = 0;
    l_U475 = 0;
    l_U755 = 0;
    l_U1086 = {95.46098000, 47.81125000, 1.80000100};
    l_U1136 = "SCRIPT_MISSION\S_MARINA_CONTAINER_YARD";
    l_U1320 = 0;
    l_U1321 = 0;
    l_U1322 = 0;
    l_U1323 = 0;
     /* WRITESCRIPTLOG */ sub_1058( "GA", "Script s_marina_ContYard.sc is starting...", 0 );
     /* P_LOAD_ASSETS */ sub_1176();
     /* P_LOAD_WEAPONS */ sub_3123( 4, 1 );
     /* P_SETUP_STATIC_DATA */ sub_3657();
     /* P_INITIALIZE_SCRIPT_DATA */ sub_6607();
     /* P_CREATE_PLACEMENTS */ sub_7307();
     /* P_CY_PRE_LOAD_CARD_PLAYER_ASSETS */ sub_9042();
    if (g_U788 == 4)
    {
         /* WRITESCRIPTLOG */ sub_1058( "SBA", "Dev menu start for s_marina_ContYard.sc", 0 );
        if (NOT ( /* HAS_SAVEFILE_LOADED */ sub_9278( ref l_U317 )))
        {
            uVar2 =  /* F_GIVEPEDWEAPON */ sub_11967(  /* PLAYER_PED_ID */ sub_9425(), 68019059, 90, 0, 1 );
            if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
            {
                SET_WEAPON_LIGHT_DATA_BY_NAME( uVar2, "Flashlight_Docks" );
                ENABLE_WEAPON_ATTACHMENT( uVar2, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar2, 14, 1 );
                ENABLE_WEAPON_ATTACHMENT( uVar2, 8, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar2, 8, 1 );
            }
            uVar3 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11216(  /* PLAYER_PED_ID */ sub_9425(), 1194438308, 1, 500, 1 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U936[4], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U973[4], 1065353216, 0 );
        l_U376 = 1;
        g_U1225 = 1;
    }
    else
    {
         /* LOADSEAMLESSCUTSCENE */ sub_14210( l_U392, 0 );
    }
    while (NOT g_U1225)
    {
        WAIT( 0 );
    }
    START_CONTEXT( "DOCKS_CON_YARD_TO_WET" );
     /* WRITESCRIPTLOG */ sub_1058( "GA", "Script s_marina_ContYard.sc active.", 0 );
    if (HAS_PLACEMENT_BEEN_COLLECTED( l_U1315 ))
    {
        l_U1316 = 1;
    }
     /* P_START_GAMEPLAY */ sub_14677();
    while (NOT IS_EXITFLAG_SET())
    {
        if (l_U374)
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        else
        {
             /* P_HANDLE_CHECKPOINTS */ sub_19738();
             /* P_HANDLE_EVENTS */ sub_23692();
            if (g_U789 == 4)
            {
                 /* P_HANDLE_MUSIC */ sub_49966();
            }
             /* P_HANDLE_DEBUG_TUNING_WIDGET */ sub_51008();
        }
        if ((( /* F_SAFE_TO_CLOSE_GARAGE_DOOR */ sub_51576()) == 1) AND (l_U1313))
        {
            g_U1662 = 1;
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_ALL */ sub_21854();
     /* P_UNLOAD_ASSETS */ sub_48075( 0 );
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_marina_ContYard" );
    SET_EXITFLAG_RESPONSE();
     /* WRITESCRIPTLOG */ sub_1058( "GA", "Script s_marina_ContYard.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_1058(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_LOAD_ASSETS */ void sub_1176()
{
     /* WRITESCRIPTLOG */ sub_1058( "GA", "LOAD_ASSETS start", 0 );
    if (g_U788 == 4)
    {
         /* BLOCKLOADMODEL */ sub_1250( g_U1031 );
         /* BLOCKLOADMODEL */ sub_1250( g_U1056 );
         /* BLOCKLOADMODEL */ sub_1250( g_U1064 );
         /* BLOCKLOADMODEL */ sub_1250( g_U1093 );
         /* BLOCKLOADMODEL */ sub_1250( g_U1105 );
         /* BLOCKLOADMODEL */ sub_1250( g_U1106 );
         /* BLOCKLOADMODEL */ sub_1250( g_U1094 );
         /* BLOCKLOADMODEL */ sub_1250( g_U1100 );
         /* BLOCKLOADMODEL */ sub_1250( g_U1099 );
         /* BLOCKLOADMODEL */ sub_1250( g_U1061 );
         /* BLOCKLOADMODEL */ sub_1250( g_U1062 );
         /* BLOCKLOADMODEL */ sub_1250( g_U1059 );
         /* BLOCKLOADMODEL */ sub_1250( g_U1060 );
         /* BLOCKLOADMODEL */ sub_1250( g_U1063 );
         /* BLOCKLOADMODEL */ sub_1250( -72345008 );
    }
    else
    {
         /* LOADMODEL */ sub_1847( g_U1031, 1 );
         /* LOADMODEL */ sub_1847( g_U1056, 1 );
         /* LOADMODEL */ sub_1847( g_U1064, 1 );
         /* LOADMODEL */ sub_1847( g_U1093, 1 );
         /* LOADMODEL */ sub_1847( g_U1105, 1 );
         /* LOADMODEL */ sub_1847( g_U1106, 1 );
         /* LOADMODEL */ sub_1847( g_U1094, 1 );
         /* LOADMODEL */ sub_1847( g_U1063, 1 );
         /* LOADMODEL */ sub_1847( -72345008, 1 );
    }
     /* LOADISEQ */ sub_2186( -219356027, 0 );
     /* LOADMODEL */ sub_1847( g_U774, 1 );
    STOP_SCRIPT_STREAM( 0 );
     /* LOADSCRIPTSTREAM */ sub_2527( "Mid_04_Docks_PT1_Blendout", 0, 1 );
     /* LOADAUDIOBANK */ sub_2707( l_U1136, 0 );
    l_U1317 = GET_SOUND_ID();
    l_U1318 = GET_SOUND_ID();
    l_U1319 = GET_SOUND_ID();
     /* SETUP_SCRIPTED_SPEECH */ sub_2910( "SMARAUD" );
     /* LOADMODEL */ sub_1847( -1784229265, 1 );
     /* WRITESCRIPTLOG */ sub_1058( "GA", "LOAD_ASSETS end", 0 );
    return;
}

/* BLOCKLOADMODEL */ void sub_1250(unknown uParam0)
{
    DISPLAYF( "[MSWW]### Trying to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_1452( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
        WAIT( 0 );
    }
    DISPLAYF( "[MSWW]### Has loaded model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
    return;
}

/* WRITE_STRING */ void sub_1452(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* LOADMODEL */ void sub_1847(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_1452( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADISEQ */ void sub_2186(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* LOADSCRIPTSTREAM */ void sub_2527(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for script stream to be loaded: {} : {} ###", 2, 1537, uParam0, 513, uParam1 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADAUDIOBANK */ void sub_2707(unknown uParam0, int iParam1)
{
    LOAD_SCRIPT_AUDIO_BANK( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for script audio bank to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_2910(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_2954();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_2954()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_LOAD_WEAPONS */ void sub_3123(unknown uParam0, unknown uParam1)
{
     /* LOADWEAPON */ sub_3157( 68019059, uParam1 );
    switch (uParam0)
    {
        case 0:
        case 1:
         /* LOADWEAPON */ sub_3157( -1074756423, uParam1 );
        break;
        case 2:
         /* LOADWEAPON */ sub_3157( -612753081, uParam1 );
        break;
        case 3:
         /* LOADWEAPON */ sub_3157( 1194438308, uParam1 );
         /* LOADWEAPON */ sub_3157( -612753081, uParam1 );
        break;
        case 4:
         /* LOADWEAPON */ sub_3157( 1194438308, uParam1 );
         /* LOADWEAPON */ sub_3157( -612753081, uParam1 );
         /* LOADWEAPON */ sub_3157( -168327769, uParam1 );
         /* LOADWEAPON */ sub_3157( -1074756423, uParam1 );
        break;
        case 5:
        case 6:
         /* LOADWEAPON */ sub_3157( 1194438308, uParam1 );
         /* LOADWEAPON */ sub_3157( -168327769, uParam1 );
         /* LOADWEAPON */ sub_3157( -612753081, uParam1 );
         /* LOADWEAPON */ sub_3157( -1074756423, uParam1 );
        break;
        case 7:
        case 8:
        case 9:
         /* LOADWEAPON */ sub_3157( -110877124, uParam1 );
         /* LOADWEAPON */ sub_3157( -1980065396, uParam1 );
         /* LOADWEAPON */ sub_3157( -168327769, uParam1 );
         /* LOADWEAPON */ sub_3157( 1194438308, uParam1 );
         /* LOADWEAPON */ sub_3157( -612753081, uParam1 );
         /* LOADWEAPON */ sub_3157( -1074756423, uParam1 );
         /* LOADWEAPON */ sub_3157( 1308526797, uParam1 );
        break;
    }
    return;
}

/* LOADWEAPON */ void sub_3157(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load weapon: {!f1} : {1} ###", 2, 1, 199730165, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_SETUP_STATIC_DATA */ void sub_3657()
{
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_SETUP_STATIC_DATA start", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3756( ref l_U393[0], l_U444, l_U453, -1015047309, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3756( ref l_U393[1], l_U447, l_U454, 1003622787, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3756( ref l_U393[2], l_U450, l_U455, 379492490, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3756( ref l_U504, 80.78976000, 15.08299000, 4.75393300, 0, 1243612658, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3756( ref l_U519, 80.77718000, 19.12700000, 1.80014300, 80.00000000, 1830887211, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3756( ref l_U534, 88.93834000, 13.64053000, 1.80000000, 0, 1280344819, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3756( ref l_U795, 98.75500000, 18.39440000, 1.80000000, 99.06937000, 1934291, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3756( ref l_U809, 105.45380000, 21.69389000, 1.80000000, 165.44360000, -163944303, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3756( ref l_U823, 105.29720000, 14.13414000, 1.80000000, 92.60873000, 250924998, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3756( ref l_U879, 99.46000000, 34.66000000, 1.80000000, 165.77000000, 1054060686, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3756( ref l_U893, 96.03421000, 38.41009000, 1.74396200, 260, -862974661, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3756( ref l_U844, 102.51680000, 42.29248000, 3.35028100, 180, 1622600241, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3756( ref l_U913[0], 96.93000000, 36.27000000, 1.76000000, 265, 2087017195, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3756( ref l_U913[1], 96.11500000, 36.32000000, 1.76000000, 265, 1176748703, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_3756( ref l_U1071, 86.40000000, 46.36000000, 1.80000000, 285, 1541475021, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U555, "TRIGGER_SECTION1_SHORTWAY", 66.80000000, 11.76000000, 1.53000000, 2.00000000, 9.00000000, 2.25000000, 0.00000000, 0.00000000, 20.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U669, "TRIGGER_SECTION1_STANDAROUND", 61.70000000, 9.22000000, 1.53000000, 3.59000000, 2.23000000, 2.25000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U576, "TRIGGER_SECTION1_LOWROAD", 79.60000000, 17.85500000, 1.53000000, 6.00000000, 8.00000000, 7.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U597, "TRIGGER_SECTION1_HIGHROAD", 83.80000000, 10.50000000, 1.53000000, 2.07000000, 3.42000000, 5.51000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U691, "TRIGGER_SECTION1_PUNISHPLAYERAGAIN", 62.88000000, 14.72000000, 1.53000000, 22.12000000, 14.87000000, 3.25000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U618, "TRIG_FREE_CORNER_COVER", 70.80000000, 19.68000000, 1.53000000, 8.49000000, 5.02000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U639, "TRIG_SEC2_TIMER", 88.97000000, 13.87000000, 1.60000000, 5.00000000, 6.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U756, "TRIG_SECTION2_CHOKEPOINT", 93.39000000, 14.88000000, 1.60000000, 4.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U1006, "TRIGGER_SECTION3_FORKLIFTYARD", 99.42000000, 17.69000000, 1.53000000, 2.50000000, 3.59000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U985, "TRIG_SECTION3_CORNER_START", 100.16000000, 16.33000000, 1.53000000, 7.90000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, -87.54000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U1027, "TRIGGER_SECTION3_FORKLIFTYARDSTART", 100.03000000, 37.15000000, 1.00000000, 8.01000000, 4.00000000, 5.11000000, 0.00000000, 0.00000000, 24.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U943, "TRIGGER_SECTION3_ACTIVATE", 101.70000000, 23.65000000, 1.53000000, 4.00000000, 4.40000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U964, "TRIGGER_TACTICAL_COVER_ACTIVATE", 96.93000000, 23.87000000, 1.53000000, 4.00000000, 4.40000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U858, "TRIG_LUMBER_PILE", 102.40400000, 41.96000000, 3.00000000, 2.25000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U1137, "TRIGGER_BOX_GARAGE_ALLEY", 90.59000000, 49.09000000, 1.80000000, 6.00000000, 9.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U1115, "TRIGGER_YARD_ALLEY_ENTRY", 87.40000000, 48.96000000, 1.75000000, 3.43000000, 8.82000000, 4.13000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U1050, "TRIGGER_FORCE_WALK_MID_05", 65.43000000, 46.12000000, 1.64000000, 7.00000000, 3.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U1158, "TRIG_GARAGE_HALFWAY", 65.40000000, 50.35000000, 1.64000000, 2.00000000, 6.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_4498( ref l_U353, "TRIGGER_GARAGE_EXTERIOR", 70.14000000, 62.42600000, -0.60000000, 20.00000000, 10.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_6165( ref l_U1048, "TETH_FORKLIFT_YARD", 98.79000000, 32.90000000, 1.00000000, 25.83000000, 40.55000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATELIGHTNING */ sub_6274( ref l_U485, 1.00000000, 237.85000000, 123.73000000, 90.71000000, 1, 1, 1000, 1056964608, 0 );
    MARK_COVERPOINTMP3_SEARCHABLE( "ma_sec3", "YARD_CC_49", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "ma_sec3", "Corner_Position05", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "ma_sec3", "Corner_Position02", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "ma_sec2", "SLP_WAREHOUSE_CC_87", 1 );
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_SETUP_STATIC_DATA end", 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_3756(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_4498(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_6165(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATELIGHTNING */ void sub_6274(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_1058( "BSW", "[SP]### P_CreateLightning ###", 0 );
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = uParam5;
    iParam0->_fU20 = uParam6;
    iParam0->_fU60 = uParam7;
    iParam0->_fU64 = uParam8;
    iParam0->_fU68 = uParam9;
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_6607()
{
     /* WRITESCRIPTLOG */ sub_1058( "GA", "INITIALIZE_SCRIPT_DATA start", 0 );
    l_U374 = 0;
    g_U1011 = 0;
    g_U1010 = 0;
    l_U457 = 0;
    ENABLE_STATIC_EMITTER( "CRATE_ROOM_MUSIC", 1 );
    l_U462 = 0;
    l_U463 = 0;
    l_U464 = 0;
    l_U443 = 0;
    l_U503 = 0;
    l_U518 = 0;
    l_U533 = 0;
    l_U548 = 0;
    l_U690 = 0;
    l_U749 = 0;
    l_U750 = 0;
    l_U751 = 0;
    l_U752 = 0;
    l_U754 = 0;
    l_U753 = 0;
    l_U843 = 0;
    l_U1049 = 0;
    l_U755 = 0;
    l_U1316 = 0;
    l_U1085 = 0;
     /* CREATETIMER */ sub_6866( ref l_U476, 1000, 1, 0 );
     /* CREATETIMER */ sub_6866( ref l_U786, 3000, 1, 0 );
    l_U1095 = 0;
    l_U1091 = 0;
    l_U1092 = 0;
    l_U1090 = 0;
    l_U1104 = 0;
    l_U1089 = 3;
    l_U375 = 1;
    l_U376 = 0;
    l_U1312 = 0;
    l_U1313 = 0;
    l_U1191 = -1;
    l_U1190 = 0;
    l_U1100[0] = 0;
    l_U1100[1] = 0;
    l_U1100[2] = 0;
    l_U475 = 0;
     /* RESETTIMER */ sub_7135( ref l_U730 );
     /* WRITESCRIPTLOG */ sub_1058( "GA", "INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

/* CREATETIMER */ void sub_6866(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* RESETTIMER */ void sub_7135(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_CREATE_PLACEMENTS */ void sub_7307()
{
    vector vVar2;
    vector vVar5;

     /* MLOG */ sub_7363( "P_CREATE_PLACEMENTS", 0, 0 );
     /* P_CREATE_S_MAR_GG_9M_02 */ sub_7442();
    if (NOT l_U1316)
    {
        vVar2 = {58.25000000, 3.90000000, 2.11000000};
        vVar5 = {-0.40000000, 0.00000000, 1.30000000};
         /* CLEANPLACEMENT */ sub_8047( l_U1315 );
        l_U1315 =  /* CREATEPLACEMENT */ sub_8132( 843762214, vVar2, vVar5, 1, 0, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1315, "Trns_Room_Stortrans" );
    }
     /* CLEANPLACEMENT */ sub_8047( l_U1314 );
    l_U1314 = CREATE_AMMOBAG_PLACEMENT_ROTATE( 58.00000000, 4.34000000, 2.00000000, 0, 0, 0, 0, -1.00000000, 0, 1119092736 );
     /* P_SETUP_AMMO_BAG_DEFAULTS */ sub_8649( l_U1314 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1314, "Trns_Room_Stortrans" );
    return;
}

/* MLOG */ void sub_7363(unknown uParam0, string sParam1, string sParam2)
{
    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "ML";
    }
    if (IS_STRING_NULL( sParam1 ))
    {
        sParam1 = "---";
    }
     /* WRITESCRIPTLOG */ sub_1058( sParam2, uParam0, sParam1 );
    return;
}

/* P_CREATE_S_MAR_GG_9M_02 */ void sub_7442()
{
     /* WRITESCRIPTLOG */ sub_1058( "CO", "P_CREATE_S_MAR_GG_9M_02", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_7567( ref g_U683, g_U774, -1306471529, 1901108184, 83.69000000, 10.56000000, 4.80000000, 0.00000000, 0.00000000, 1.00000000, "" );
     /* P_CREATECOLLECTIBLE */ sub_7724( ref g_U683 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_7567(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1058( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_7724(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_1058( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_7807( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_1058( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1058( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_7807( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_8047( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_8132( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_1058( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1058( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_7807(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* CLEANPLACEMENT */ void sub_8047(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* CREATEPLACEMENT */ void sub_8132(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_SETUP_AMMO_BAG_DEFAULTS */ void sub_8649(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        SET_AMMOBAG_REGEN_TIME( uParam0, 10.00000000 );
        SET_AMMOBAG_REGEN_RANGE( uParam0, 3.00000000 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1088031219, 45 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 954369040, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1138793073, 95 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1087746638, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1295933220, 30 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1383321053, 85 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1481241171, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1889644301, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -790090695, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1742569970, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1575030772, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1622373246, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 558118158, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1701914198, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1126469201, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 936600426, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 205668857, 0 );
    }
    return;
}

/* P_CY_PRE_LOAD_CARD_PLAYER_ASSETS */ void sub_9042()
{
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CY_PRE_LOAD_CARD_PLAYER_ASSETS start", 0 );
     /* LOADISEQ */ sub_2186( -219356027, 0 );
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CY_PRE_LOAD_CARD_PLAYER_ASSETS end", 0 );
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_9278(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1058( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9519( uParam0,  /* PLAYER_PED_ID */ sub_9425() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* PLAYER_PED_ID */ int sub_9425()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_9463() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_9463()
{
    return GET_PLAYER_ID();
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_9519(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_1058( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_9738( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_10902( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11216( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11651( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11216( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11651( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11216( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11651( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11967( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11651( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11967( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11651( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_12539( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_12741( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_9425(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_1058( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_9738(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9800( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_9800(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_10902(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_11216(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_1452( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_11651(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_11967(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_1452( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_12539(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_12741(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9800( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_12839( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_12839(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_14210(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_START_GAMEPLAY */ void sub_14677()
{
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_START_GAMEPLAY start", 0 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
     /* P_SETDOORLOCKED */ sub_14756( ref g_U1460, 1 );
     /* P_SETDOORLOCKED */ sub_14756( ref g_U1453, 1 );
     /* P_SETDOORLATCH */ sub_15030( ref g_U1467, 0 );
     /* P_CLOSEDOOR */ sub_15111( ref g_U1467, 1 );
    if (NOT (DOES_OBJECT_EXIST( g_U1532 )))
    {
         /* P_CREATE_WH_GARAGEDOOR */ sub_15268();
    }
     /* P_CREATE_YARD_PROPS */ sub_15916();
     /* PROCESS_CONTAINER_CHAIRS */ sub_16640();
     /* P_CY_CREATE_CARDPLAYER_CS */ sub_16795();
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_START_GAMEPLAY end", 0 );
    return;
}

/* P_SETDOORLOCKED */ void sub_14756(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_14786( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_14870( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_14786(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_14870(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_SETDOORLATCH */ void sub_15030(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_14786( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_14870( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

/* P_CLOSEDOOR */ void sub_15111(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_14786( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_14870( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* P_CREATE_WH_GARAGEDOOR */ void sub_15268()
{
     /* WRITESCRIPTLOG */ sub_1058( "SP", "P_CREATE_WH_GARAGEDOOR", "###" );
     /* CLEANOBJECT */ sub_15349( g_U1532 );
    g_U1532 =  /* CREATEOBJECT */ sub_15432( g_U1063, g_U1656, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( g_U1532 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1532, ref g_U1178 );
        FREEZE_OBJECT_POSITION( g_U1532, 1 );
        PLAY_OBJECT_ANIM( g_U1532, "p_ma_botdor_aa_h", ref g_U1138, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( g_U1532, "p_ma_botdor_aa_h", ref g_U1138, 0 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U1532, "p_ma_botdor_aa_h", ref g_U1138, 0.10000000 );
    }
    return;
}

/* CLEANOBJECT */ void sub_15349(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CREATEOBJECT */ void sub_15432(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_1847( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_CREATE_YARD_PROPS */ void sub_15916()
{
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CREATE_YARD_PROPS start", 0 );
     /* CLEANOBJECT */ sub_15349( l_U1093 );
    l_U1093 =  /* CREATEOBJECT */ sub_15432( g_U1056, 103.48000000, 31.54000000, 3.12000000, 0.00000000, 90.00000000, 0.00000000, 0, 1, 0 );
    SET_OBJECT_HEALTH( l_U1093, 60 );
    SET_OBJECT_TARGETTABLE( l_U1093, 1 );
    CAMERA_CAN_TARGET_OBJECT( 1, l_U1093 );
    SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( l_U1093, 1 );
    FREEZE_OBJECT_POSITION( l_U1093, 1 );
    l_U1094 =  /* CREATEOBJECTNOOFFSET */ sub_16151( g_U1064, 103.68800000, 33.01800000, 1.83600000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1094 ))
    {
        SET_OBJECT_PROOFS( l_U1094, 1, 0, 0, 1, 1 );
        ENABLE_COVERPOINTMP3( "GenCover", "DB17D472_B7A5FF90_Corner1", 1 );
        ENABLE_COVERPOINTMP3( "GenCover", "DB17D472_B7A5FF90_Corner2", 1 );
    }
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CREATE_YARD_PROPS end", 0 );
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_16151(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_1847( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* PROCESS_CONTAINER_CHAIRS */ void sub_16640()
{
     /* MAL_RECREATEOBJECT */ sub_16706( ref l_U1096[2], -1784229265, g_U1570, 0, 0, g_U1575, 1, 1 );
    return;
}

/* MAL_RECREATEOBJECT */ void sub_16706(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* CLEANOBJECT */ sub_15349( (uParam0^) );
    (uParam0^) =  /* CREATEOBJECTNOOFFSET */ sub_16151( uParam1, uParam2, uParam5, 0, uParam9, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), uParam8 );
    return;
}

/* P_CY_CREATE_CARDPLAYER_CS */ void sub_16795()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CY_CREATE_CARDPLAYER_CS start", 0 );
     /* P_SETUP_AI_GROUP */ sub_16888( ref l_U437, 1056964608, 0 );
    for ( I = 0; I <= 2; I++ )
    {
        l_U433[I] =  /* CREATEPED */ sub_17293( ref l_U393[I] );
        if ( /* IS_PED_VALID */ sub_18019( l_U433[I] ))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U433[I], 1 );
            FREEZE_PED_POSITION( l_U433[I], 0 );
        }
         /* MAL_SETTEMPLATEANDRANGES */ sub_18138( ref l_U433[I], ref g_U1602, 5, 10, 1 );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_18654( l_U433[I], ref l_U437 );
        SET_PED_ALERTNESS( l_U433[I], 3 );
         /* PED_SET_REGISTER_TARGET_PLAYER */ sub_19060( ref l_U433[I] );
        SET_PED_PATH_CAN_AVOID_DYNAMIC_OBJECTS( l_U433[I], 0 );
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_19311( ref l_U433, "CS_CardPlayer " );
    if ((IS_PED_DEAD( l_U433[0] )) == 0)
    {
         /* F_GIVEPEDWEAPON */ sub_11967( l_U433[0], -1074756423, 25000, 0, 0 );
         /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11216( l_U433[0], -612753081, 0, 25000, 0 );
    }
    if ((IS_PED_DEAD( l_U433[1] )) == 0)
    {
         /* F_GIVEPEDWEAPON */ sub_11967( l_U433[1], 68019059, 25000, 0, 0 );
    }
    if ((IS_PED_DEAD( l_U433[2] )) == 0)
    {
         /* F_GIVEPEDWEAPON */ sub_11967( l_U433[2], -1074756423, 25000, 0, 0 );
    }
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CY_CREATE_CARDPLAYER_CS end", 0 );
    return;
}

/* P_SETUP_AI_GROUP */ void sub_16888(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* CREATEPED */ void sub_17293(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_1847( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_17784( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_17885( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_17784(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_17885(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* IS_PED_VALID */ int sub_18019(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

/* MAL_SETTEMPLATEANDRANGES */ void sub_18138(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
     /* MAL_WRITESCRIPTLOG */ sub_18202( "MAL_SetTemplateAndRanges" );
    PRINTSTRING( "[MSWW]### Template Name: " );
     /* WRITE_STRING */ sub_1452( uParam1 );
    PRINTSTRING( "[MSWW]### Min Range: " );
     /* WRITE_FLOAT */ sub_18386( fParam2 );
    PRINTSTRING( "[MSWW]### Max Range: " );
     /* WRITE_FLOAT */ sub_18386( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
         /* MAL_SETPEDCOMBATATTRIBUTES */ sub_18556( uParam0, 1, 0 );
    }
    return;
}

/* MAL_WRITESCRIPTLOG */ void sub_18202(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar3, 1537, "MSWW", 1537, uParam0, 1537, "###" );
    return;
}

/* WRITE_FLOAT */ void sub_18386(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* MAL_SETPEDCOMBATATTRIBUTES */ void sub_18556(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_18654(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_1452( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_16888( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_16888( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* PED_SET_REGISTER_TARGET_PLAYER */ void sub_19060(unknown uParam0)
{
    if (( /* IS_MAX_VALID */ sub_19111()) AND ( /* IS_PED_VALID */ sub_18019( (uParam0^) )))
    {
         /* PED_SET_REGISTER_TARGET */ sub_19177( uParam0,  /* PLAYER_PED_ID */ sub_9425() );
    }
    return;
}

/* IS_MAX_VALID */ int sub_19111()
{
    if ( /* IS_PED_VALID */ sub_18019(  /* PLAYER_PED_ID */ sub_9425() ))
    {
        return 1;
    }
    return 0;
}

/* PED_SET_REGISTER_TARGET */ void sub_19177(unknown uParam0, unknown uParam1)
{
    if (( /* IS_PED_VALID */ sub_18019( uParam1 )) AND ( /* IS_PED_VALID */ sub_18019( (uParam0^) )))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_19311(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_HANDLE_CHECKPOINTS */ void sub_19738()
{
    if (g_U789 == 4)
    {
        if (( /* RESTARTING_CHECKPOINT */ sub_19797()) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )) == 1))
        {
             /* WRITESCRIPTLOG */ sub_1058( "SBA", "Player died or is restarting container yard checkpoint", "***" );
            if ( /* IS_RESTART_ACTIVE */ sub_20328())
            {
                ;
            }
            else
            {
                 /* P_SETUP_PLAYER_DEATH_CAM */ sub_20382( 1 );
                while (( /* F_CHECK_QUIT_RETRY */ sub_20472( 0 )) == 0)
                {
                    WAIT( 0 );
                }
                while ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )) == 1)
                {
                    WAIT( 0 );
                }
            }
            if ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_9463() )) == 0)
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_9463(), 0, 0 );
            }
            if (IS_DEATH_PANEL_WIPE_ALLOWED() == 0)
            {
                DO_SCREEN_FADE_OUT( 0 );
            }
             /* P_CLEAN_UP_DEATHCAM */ sub_21759();
             /* P_CLEANUP_ALL */ sub_21854();
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9519( ref l_U317,  /* PLAYER_PED_ID */ sub_9425() );
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_9425(), 1 );
             /* WRITESCRIPTLOG */ sub_1058( "SBA", "Reloading garage interior.", "***" );
            l_U458 = GET_INTERIOR_AT_COORDS( g_U790[4] );
            LOAD_SCENE_FOR_ROOM_BY_KEY( l_U458, GET_HASH_KEY( "trns_Room_Stortrans" ) );
            LOAD_SCENE( g_U790[4] );
            MARK_INTERIOR_COLLISION_REQUIRED( l_U458 );
             /* P_SETUP_STATIC_DATA */ sub_3657();
             /* P_INITIALIZE_SCRIPT_DATA */ sub_6607();
             /* P_CREATE_PLACEMENTS */ sub_7307();
             /* P_CY_PRE_LOAD_CARD_PLAYER_ASSETS */ sub_9042();
             /* P_START_GAMEPLAY */ sub_14677();
            l_U376 = 2;
             /* LOADSCRIPTSTREAM */ sub_2527( "Mid_04_Docks_PT1_Blendout", 0, 1 );
             /* LOADMODEL */ sub_1847( -72345008, 1 );
             /* P_SETDOORLOCKED */ sub_14756( ref g_U1481, 0 );
            g_U1228 = 1;
            g_U789 = 4;
             /* P_RESET_CHECKPOINT_THREAD */ sub_23358( ref g_U1236[5] );
            while ((GET_NUMBER_OF_THREADS_RUNNING_THIS_SCRIPT( "s_marina_BoatRepair" )) > 0)
            {
                 /* WRITESCRIPTLOG */ sub_1058( "SBA", "Waiting for boat repair to unload...", "***" );
                WAIT( 0 );
            }
            while ((GET_STABLE_NUM_OF_STREAMING_REQUESTS() > 0) AND (GET_NUMBER_OF_STREAMING_REQUESTS() > 0))
            {
                 /* WRITESCRIPTLOG */ sub_1058( "SBA", "Waiting for streaming...", "***" );
                WAIT( 0 );
            }
            l_U375 = 2;
            g_U1228 = 0;
            if ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_9463() )) == 0)
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_9463(), 1, 0 );
            }
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_9425(), 0 );
            if (IS_DEATH_PANEL_WIPE_ALLOWED())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
        }
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_19797()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_9425(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_9463(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_9463(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_9425() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_9425(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_20328()
{
    return g_U648;
}

/* P_SETUP_PLAYER_DEATH_CAM */ void sub_20382(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1058( "NS", "P_SETUP_PLAYER_DEATH_CAM()", 0 );
    uParam0 = uParam0;
    return;
}

/* F_CHECK_QUIT_RETRY */ int sub_20472(int iParam0)
{
    iParam0 = 1;
    switch (l_U306)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_20554( ref l_U308 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )))
            {
                l_U307 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_6866( ref l_U308, l_U307, 1, 1 );
             /* STARTTIMER */ sub_20697( ref l_U308 );
        }
        if ( /* ISTIMERDONE */ sub_20830( ref l_U308 ))
        {
             /* WRITESCRIPTLOG */ sub_1058( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_9463() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_9463(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U306 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U306 = 2;
            }
            else
            {
                l_U306 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1058( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_21331();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1058( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_21331();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_20554(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* STARTTIMER */ void sub_20697(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_20830(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_21331()
{
     /* WRITESCRIPTLOG */ sub_1058( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_7135( ref l_U308 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_9463() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_9463(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U305 = 0;
    l_U305 = l_U305;
    l_U306 = 0;
    return;
}

/* P_CLEAN_UP_DEATHCAM */ void sub_21759()
{
     /* WRITESCRIPTLOG */ sub_1058( "NS", "P_CLEAN_UP_DEATHCAM()", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    DESTROY_ALL_CAMS();
    return;
}

/* P_CLEANUP_ALL */ void sub_21854()
{
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CLEANUP_ALL start", 0 );
     /* RESETTIMER */ sub_7135( ref l_U730 );
    STOP_SOUND( l_U1317, 0 );
    STOP_SOUND( l_U1319, 0 );
    STOP_SOUND( l_U1318, 0 );
    STOP_SCRIPT_STREAM( 0 );
    ENABLE_WALLA_ZONE( "S_MARINA_WZ_CONTAINER_YARD", 0 );
    CLEAR_INTERIOR_COLLISION_REQUIRED( GET_INTERIOR_AT_COORDS( g_U790[4] ) );
     /* TERMINATEISEQ */ sub_22035( -219356027, 0 );
     /* CLEANPLACEMENT */ sub_8047( l_U1315 );
     /* CLEANPLACEMENT */ sub_8047( l_U1314 );
     /* CLEANPLACEMENT */ sub_8047( g_U683._fU0 );
     /* CLEANOBJECT */ sub_15349( g_U1532 );
     /* CLEANOBJECT */ sub_15349( l_U1189 );
     /* P_CLEAN_EARLY_CONTYARD_OBJECTS */ sub_22388();
     /* P_CLEAN_ALL_CY_PEDS */ sub_22469();
     /* CLEANOBJECTARRAY */ sub_22844( ref l_U1096 );
     /* CLEAR_LOADED_CUTSCENE */ sub_22925( l_U392 );
     /* CLEAR_LOADED_CUTSCENE */ sub_22925( l_U391 );
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CLEANUP_ALL end", 0 );
    return;
}

/* TERMINATEISEQ */ void sub_22035(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_CLEAN_EARLY_CONTYARD_OBJECTS */ void sub_22388()
{
     /* CLEANOBJECT */ sub_15349( l_U1093 );
     /* CLEANOBJECT */ sub_15349( l_U1094 );
     /* CLEANOBJECT */ sub_15349( l_U456 );
    return;
}

/* P_CLEAN_ALL_CY_PEDS */ void sub_22469()
{
     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_CLEAN_ALL_CY_PEDS", 0 );
     /* CLEANPED */ sub_22543( l_U433[0] );
     /* CLEANPED */ sub_22543( l_U433[1] );
     /* CLEANPED */ sub_22543( l_U433[2] );
     /* CLEANPED */ sub_22543( l_U517 );
     /* CLEANPED */ sub_22543( l_U532 );
     /* CLEANPED */ sub_22543( l_U547 );
     /* CLEANPED */ sub_22543( l_U808 );
     /* CLEANPED */ sub_22543( l_U822 );
     /* CLEANPED */ sub_22543( l_U836 );
     /* CLEANPED */ sub_22543( l_U857 );
     /* CLEANPED */ sub_22543( l_U892 );
     /* CLEANPED */ sub_22543( l_U906 );
     /* CLEANPEDARRAY */ sub_22748( ref l_U940 );
     /* CLEANPED */ sub_22543( l_U1084 );
    return;
}

/* CLEANPED */ void sub_22543(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANPEDARRAY */ void sub_22748(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_22543( (uParam0^)[I] );
    }
    return;
}

/* CLEANOBJECTARRAY */ void sub_22844(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANOBJECT */ sub_15349( (uParam0^)[I] );
    }
    return;
}

/* CLEAR_LOADED_CUTSCENE */ void sub_22925(unknown uParam0)
{
    if ((CUTSCENE_NAMED_IS_LOADING( uParam0 )) || (CUTSCENE_IS_LOADED( uParam0 )))
    {
         /* WRITESCRIPTLOG */ sub_1058( "SBA", "Clearing cutscene:", 0 );
         /* WRITE_STRING */ sub_1452( uParam0 );
        CLEAR_NAMED_CUTSCENE( uParam0 );
    }
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_23358(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_HANDLE_EVENTS */ void sub_23692()
{
    unknown uVar2;

     /* P_HANDLE_CONTAINER_STEREO */ sub_23720();
    if (NOT l_U462)
    {
        l_U462 = 1;
        if ((NOT l_U474) AND (g_U788 < 4))
        {
             /* P_PLAY_CUTSCENE_MID_04_DOCKS */ sub_24048();
            l_U474 = 1;
        }
        else
        {
             /* P_SETUP_MID04_BLENDOUT_NO_CUTSCENE */ sub_25415();
        }
         /* P_RUN_MID04_BLENDOUT */ sub_26056();
        g_U789 = 4;
        if (NOT l_U317._fU0)
        {
             /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_26894( ref l_U317, g_U789,  /* PLAYER_PED_ID */ sub_9425(), g_U790[4], g_U899[4], g_U936[4], g_U973[4], 1 );
        }
         /* WRITESCRIPTLOG */ sub_1058( "BSW", "kick the fight off", 0 );
        l_U463 = 1;
    }
    if (l_U464)
    {
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_31504( l_U691 ))
        {
             /* WRITESCRIPTLOG */ sub_1058( "SBA", "Max left garage!  Resetting viewmode.", 0 );
            SET_CAM_VIEW_MODE( 1 );
            STOP_SCRIPT_STREAM( 0 );
            l_U464 = 0;
        }
    }
    if ( /* ISTIMERDONE */ sub_20830( ref l_U465 ))
    {
        if ( /* IS_MAX_VALID */ sub_19111())
        {
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_9463(), 0, 0 );
        }
    }
     /* P_HANDLE_CARD_PLAYERS_EARLY_REACTION */ sub_31744();
     /* P_UNBLOCK_CARD_PLAYERS */ sub_32189();
    if (NOT l_U503)
    {
         /* P_CREATESECTION1CS */ sub_32507();
        l_U503 = 1;
    }
    if (NOT l_U518)
    {
         /* P_SECTION1WENTSHORTWAY */ sub_33334();
         /* P_CREATE_AND_START_TIMER */ sub_26750( ref l_U712, 12000 );
    }
    if ( /* ISTIMERDONE */ sub_20830( ref l_U712 ))
    {
         /* WRITESCRIPTLOG */ sub_1058( "SBA", "tPlayerTooSlow timer has gone off", "***" );
        l_U749 = 1;
    }
    if ((NOT l_U690) AND ((l_U463 == 1) AND (l_U503 == 1)))
    {
         /* CREATETIMER */ sub_6866( ref l_U660, 5000, 1, 0 );
         /* STARTTIMER */ sub_20697( ref l_U660 );
    }
    if (( /* F_ISPEDINTRIGGERBOX */ sub_31547(  /* PLAYER_PED_ID */ sub_9425(), l_U669 )) AND ((l_U533 == 0) AND (( /* ISTIMERDONE */ sub_20830( ref l_U660 )) == 1)))
    {
         /* P_SECTION1NEARONGROUNDPUNISHESPLAYERFORSTANDINGAROUNDLIKEALEMON */ sub_34955();
    }
    if (l_U749)
    {
        if (NOT l_U750)
        {
             /* P_TASK_ENEMY_MOVE_COMBAT_COVER */ sub_35384( l_U808, 96.12415000, 16.61239000, 1.80000000, 0, 0 );
             /* PED_SET_COMBAT_RANGES */ sub_34230( ref l_U808, 3, 15 );
             /* PED_TASK_COMBAT_SNAP_TO_COVER */ sub_35673( l_U822, "GenCover", "DB17D472_B4AF2198_Corner1", 0, 1 );
             /* PED_TASK_COMBAT_SNAP_TO_COVER */ sub_35673( l_U836, "ma_sec3", "YARD_CC_53", 0, 1 );
            l_U750 = 1;
        }
        if (NOT l_U751)
        {
            if ( /* F_ARE_FIRST_ENEMIES_DEAD */ sub_35881())
            {
                 /* P_START_PED_SEARCH */ sub_36058( l_U547 );
                 /* PED_SET_COMBAT_RANGES */ sub_34230( ref l_U547, 3, 30 );
                 /* WRITESCRIPTLOG */ sub_1058( "SBA", "Starting tPlayerStillTooSlow timer", 0 );
                 /* P_CREATE_AND_START_TIMER */ sub_26750( ref l_U721, 15000 );
                l_U751 = 1;
            }
            else if ( /* F_ISPLAYERINTRIGGERBOX */ sub_31504( l_U576 ))
            {
                if ( /* IS_PED_VALID */ sub_18019( l_U547 ))
                {
                    CLEAR_PED_TASKS( l_U547 );
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U547, 0 );
                    l_U751 = 1;
                }
            }
        }
        else if (NOT l_U752)
        {
            if (IS_PED_DEAD( l_U547 ))
            {
                if ( /* ISTIMERDONE */ sub_20830( ref l_U721 ))
                {
                     /* WRITESCRIPTLOG */ sub_1058( "SBA", "tPlayerStillTooSlow timer has gone off", 0 );
                     /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_36438( ref l_U808, 0 );
                     /* P_START_PED_SEARCH */ sub_36058( l_U808 );
                    l_U752 = 1;
                }
            }
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_36545( ref l_U597, 0 ))
        {
             /* WRITESCRIPTLOG */ sub_1058( "SBA", "Hit tbSection1HighRoad", "***" );
             /* P_SECTION1ANDILLGOTHEHIGHROAD */ sub_36722();
             /* P_SEC2_CORENR_ACTIVATE */ sub_37055();
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_36545( ref l_U639, 0 ))
        {
             /* STARTTIMER */ sub_20697( ref l_U786 );
             /* WRITESCRIPTLOG */ sub_1058( "SBA", "tbSec2Timer timer has started", "***" );
        }
        if (NOT l_U754)
        {
            if (( /* ISTIMERDONE */ sub_20830( ref l_U786 )) || ( /* F_ISPLAYERINTRIGGERBOX */ sub_31504( l_U756 )))
            {
                 /* WRITESCRIPTLOG */ sub_1058( "SBA", "Freeing up last two sec2 guys", "***" );
                 /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_36438( ref l_U808, 0 );
                 /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_36438( ref l_U822, 0 );
                 /* PED_SET_LOCK_TO_COVER */ sub_35739( ref l_U822, 0 );
                 /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_36438( ref l_U836, 0 );
                 /* PED_SET_LOCK_TO_COVER */ sub_35739( ref l_U836, 0 );
                l_U754 = 1;
            }
        }
    }
    else if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_36545( ref l_U576, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_1058( "SBA", "Hit tbSection1LowRoad", "***" );
         /* RESETTIMER */ sub_7135( ref l_U712 );
         /* P_SECTION1OHYOUGOTHELOWROAD */ sub_37768();
         /* CREATETIMER */ sub_6866( ref l_U777, 4000, 1, 0 );
         /* STARTTIMER */ sub_20697( ref l_U777 );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_36545( ref l_U597, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_1058( "SBA", "Hit tbSection1HighRoad", "***" );
         /* P_SECTION1ANDILLGOTHEHIGHROAD */ sub_36722();
         /* P_SEC2_CORENR_ACTIVATE */ sub_37055();
    }
    if ( /* ISTIMERDONE */ sub_20830( ref l_U777 ))
    {
         /* P_TASK_ENEMY_MOVE_COMBAT */ sub_37154( l_U808, 94.96800000, 14.76400000, 1.80000000, 1, 0 );
         /* P_TASK_ENEMY_MOVE_COMBAT */ sub_37154( l_U822, 97.31000000, 16.07700000, 1.80000000, 1, 0 );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_36545( ref l_U756, 0 ))
    {
         /* P_TASK_ENEMY_MOVE_COMBAT */ sub_37154( l_U836, 100.43400000, 17.59300000, 1.80000000, 1, 0 );
    }
    if ((l_U751) AND (NOT l_U753))
    {
        if ( /* IS_PED_VALID */ sub_18019( l_U547 ))
        {
            if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_36545( ref l_U618, 0 ))
            {
                 /* P_UNBLOCK_AND_COMBAT_PED */ sub_37903( ref l_U547,  /* PLAYER_PED_ID */ sub_9425() );
                l_U753 = 1;
            }
        }
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_36545( ref l_U1006, 0 ))
    {
         /* P_CREATESECTION3CS */ sub_38333();
        CLEAR_INTERIOR_COLLISION_REQUIRED( GET_INTERIOR_AT_COORDS( g_U790[4] ) );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_36545( ref l_U985, 0 ))
    {
         /* P_TASK_ENEMY_MOVE_COMBAT */ sub_37154( l_U892, 95.58789000, 26.82498000, 1.79997600, 1, 1 );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_36545( ref l_U964, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_1058( "SBA", "Player is in tbSection3TacticalCoverActivate", 0 );
         /* P_ACTIVATEPED */ sub_39510( l_U940[1] );
         /* PED_SET_LOCK_TO_COVER */ sub_35739( ref l_U940[0], 0 );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_36545( ref l_U943, 0 ))
    {
         /* P_SECTION3RUNACROSSTHEYARD */ sub_39651();
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_36545( ref l_U1027, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_1058( "SBA", "Player is in tbSection3ForkliftYardStart", 0 );
        g_U1011 = 1;
        l_U1049 = 1;
        ENABLE_WALLA_ZONE( "S_MARINA_WZ_CONTAINER_YARD", 0 );
    }
    if (NOT l_U1085)
    {
        if (( /* F_CY_LIVING_CS */ sub_40460()) <= 1)
        {
            l_U1089 = 2;
            l_U1085 = 1;
        }
        else if (l_U1049)
        {
            l_U1089 = 0;
            l_U1085 = 1;
        }
    }
    if (l_U1089 != 3)
    {
         /* P_MOVE_SHOTGUN_GUY */ sub_40938();
    }
    else if ((NOT l_U1104) AND (l_U1085))
    {
        if (( /* F_GETDOOROPENRATIO */ sub_42460( ref g_U1467 )) > 0.40000000)
        {
             /* WRITESCRIPTLOG */ sub_1058( "SBA", "Opening and latching the final gate", 0 );
             /* P_OPENDOOR */ sub_41452( ref g_U1467, 1, 0, 1065353216 );
             /* P_SETDOORLATCH */ sub_15030( ref g_U1467, 1 );
            l_U1104 = 1;
        }
    }
    if (NOT l_U1091)
    {
        if (( /* F_CY_LIVING_CS */ sub_40460()) <= 1)
        {
             /* P_CY_ASSIGN_LAST_CS_BULLET_CAM */ sub_42668();
            l_U1091 = 1;
        }
    }
    if (( /* F_CY_LIVING_CS */ sub_40460()) == 0)
    {
        l_U376 = 5;
        if (l_U475 == 0)
        {
             /* P_CREATE_AND_START_TIMER */ sub_26750( ref l_U730, 40000 );
            l_U475 = 1;
        }
    }
    if ( /* ISTIMERDONE */ sub_20830( ref l_U730 ))
    {
         /* P_SPEECH_PLAY_MAX_MONOLOGUE */ sub_43449( "SMAR_MHTKMB", ref l_U739 );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_36545( ref l_U691, 0 ))
    {
         /* STARTTIMER */ sub_20697( ref l_U476 );
    }
    if ( /* ISTIMERDONE */ sub_20830( ref l_U476 ))
    {
         /* P_STARTLIGHTNING */ sub_44858( ref l_U485 );
    }
     /* P_HANDLE_THUNDER_LIGHTNING */ sub_45064( ref l_U485 );
     /* P_HANDLE_CY_FORKLIFT_EXPLOSION */ sub_45169();
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_36545( ref l_U1137, 0 ))
    {
         /* P_CREATE_CY_TO_BOATYARD_GARAGE_DOOR */ sub_45424( g_U1663 );
         /* P_START_GARAGE_ROOM */ sub_45629();
         /* DISABLETIMER */ sub_46257( ref l_U730 );
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_36545( ref l_U1115, 0 ))
    {
         /* P_TETHER_CY_ENEMIES */ sub_46317();
    }
    if (l_U1312 == 0)
    {
        if ( /* IS_MAX_VALID */ sub_19111())
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_31504( l_U1050 ))
            {
                uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9425(), 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
                {
                    if (( /* IS_WEAPON_TWO_HANDED */ sub_46766( uVar2 )) == 1)
                    {
                         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_47076( 0 );
                    }
                }
            }
            if ( /* UPDATE_FORCEWALK_AND_TRIGGER_PAIR */ sub_47729( l_U1050, l_U1158, 1 ))
            {
                 /* P_CLEAN_ALL_CY_PEDS */ sub_22469();
                 /* P_CLEAN_EARLY_CONTYARD_OBJECTS */ sub_22388();
                 /* P_UNLOAD_ASSETS */ sub_48075( 1 );
                 /* P_PLAY_CUTSCENE_MID_05_DOCKS */ sub_48518();
                 /* P_SETDOORLOCKED */ sub_14756( ref g_U1481, 1 );
                if ( /* IS_MAX_VALID */ sub_19111())
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_9425(), 0 );
                }
                l_U1312 = 1;
                l_U374 = 1;
            }
        }
    }
    return;
}

/* P_HANDLE_CONTAINER_STEREO */ void sub_23720()
{
    if (l_U457 == 0)
    {
         /* WRITESCRIPTLOG */ sub_1058( "GA", "Creating Stereo prop.", 0 );
         /* LOADMODEL */ sub_1847( -72345008, 1 );
        l_U456 =  /* CREATEOBJECT */ sub_15432( -72345008, 63.51000000, 19.05000000, 2.64000000, 0.00000000, 0.00000000, 15.00000000, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U456, ref g_U1184 );
        l_U457 = 1;
    }
    if ((DOES_OBJECT_EXIST( l_U456 )) == 1)
    {
        if ((HAS_OBJECT_BEEN_DAMAGED( l_U456 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_1058( "GA", "Stereo prop damaged, turning off music.", 0 );
            ENABLE_STATIC_EMITTER( "CRATE_ROOM_MUSIC", 0 );
        }
    }
    return;
}

/* P_PLAY_CUTSCENE_MID_04_DOCKS */ void sub_24048()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;

     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_PLAY_CUTSCENE_MID_04_DOCKS start", 0 );
     /* NIS_PRE_SETUP */ sub_24142( 1, 0, 0, 0 );
     /* KILL_ANY_MISSION_SPEECH */ sub_24318( 0 );
     /* LOADSEAMLESSCUTSCENE */ sub_14210( l_U392, 1 );
     /* LOADISEQ */ sub_2186( -219356027, 1 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1063, g_U1656 );
    if ( /* IS_MAX_VALID */ sub_19111())
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9425(), 0, 0 ), "W_PI_38_ba_h", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_9425(), g_U790[4], 0.00000000 );
    }
    ISEQ_REGISTER_ENTITY( -219356027, "cs_cont_1", l_U433[0], 0 );
    ISEQ_REGISTER_ENTITY( -219356027, "cs_cont_2", l_U433[1], 0 );
    ISEQ_REGISTER_ENTITY( -219356027, "cs_cont_3", l_U433[2], 0 );
    ISEQ_REGISTER_ENTITY( -219356027, "max",  /* PLAYER_PED_ID */ sub_9425(), 0 );
    CUTSCENE_REGISTER_ISEQ( -219356027 );
    START_SEAMLESS_CUTSCENE();
    WAIT( 1 );
    SET_CAM_VIEW_MODE( 0 );
    DO_SCREEN_FADE_IN( 0 );
     /* NIS_CREATE_STATIC_CAM */ sub_24840( ref uVar2, 61.46722000, 3.41898600, 3.61960100, 0.00000000, 0.00000000, -9.99994800, 1110704128, 1000 );
     /* NIS_PLAY_STATIC_CAMERA */ sub_25072( ref uVar2 );
    while (NOT HAS_CUTSCENE_FINISHED())
    {
        WAIT( 0 );
    }
     /* MAL_PLAYOBJECTANIM */ sub_25245( g_U1532, "p_ma_botdor_aa_h", ref g_U1138, 3.50000000, 0.15000000 );
     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_PLAY_CUTSCENE_MID_04_DOCKS end", 0 );
    return;
}

/* NIS_PRE_SETUP */ void sub_24142(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_9463(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_9425(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_9425() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_9425(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_24318(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_24840(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_6866( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U649, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_25072(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_20697( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* MAL_PLAYOBJECTANIM */ void sub_25245(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        PLAY_OBJECT_ANIM( uParam0, uParam1, uParam2, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uParam0, uParam1, uParam2, uParam4 );
        SET_OBJECT_ANIM_SPEED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_SETUP_MID04_BLENDOUT_NO_CUTSCENE */ void sub_25415()
{
     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_SETUP_MID04_BLENDOUT_NO_CUTSCENE", 0 );
     /* LOADISEQ */ sub_2186( -219356027, 1 );
    ISEQ_REGISTER_ENTITY( -219356027, "cs_cont_1", l_U433[0], 0 );
    ISEQ_REGISTER_ENTITY( -219356027, "cs_cont_2", l_U433[1], 0 );
    ISEQ_REGISTER_ENTITY( -219356027, "cs_cont_3", l_U433[2], 0 );
    ISEQ_REGISTER_ENTITY( -219356027, "max",  /* PLAYER_PED_ID */ sub_9425(), 0 );
     /* MAL_TELEPORTPLAYER */ sub_25665( g_U790[4], 0.00000000, 0, 0 );
    ISEQ_START( -219356027 );
     /* MAL_PLAYOBJECTANIM */ sub_25245( g_U1532, "p_ma_botdor_aa_h", ref g_U1138, 2.27000000, 0.24200000 );
     /* TELEPORTPED */ sub_25909( l_U433[0], l_U393[0]._fU0, l_U393[0]._fU12 );
     /* TELEPORTPED */ sub_25909( l_U433[1], l_U393[1]._fU0, l_U393[1]._fU12 );
     /* TELEPORTPED */ sub_25909( l_U433[2], l_U393[2]._fU0, l_U393[2]._fU12 );
    return;
}

/* MAL_TELEPORTPLAYER */ void sub_25665(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 =  /* PLAYER_PED_ID */ sub_9425();
     /* MAL_TELEPORTPED */ sub_25712( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

/* MAL_TELEPORTPED */ void sub_25712(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* TELEPORTPED */ void sub_25909(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_RUN_MID04_BLENDOUT */ void sub_26056()
{
     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_RUN_MID04_BLENDOUT", 0 );
     /* TELEPORTPED */ sub_25909( l_U433[0], l_U393[0]._fU0, l_U393[0]._fU12 );
     /* TELEPORTPED */ sub_25909( l_U433[1], l_U393[1]._fU0, l_U393[1]._fU12 );
     /* TELEPORTPED */ sub_25909( l_U433[2], l_U393[2]._fU0, l_U393[2]._fU12 );
    if (IS_SCREEN_FADED_OUT())
    {
        DO_SCREEN_FADE_IN( 0 );
    }
    PLAY_SCRIPT_STREAM_FRONTEND( 0 );
    SET_CAM_VIEW_MODE( 0 );
    if ( /* IS_MAX_VALID */ sub_19111())
    {
        SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_9463(), 1, 0 );
    }
     /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_26303( 500, 1, 0, -10.00000000, 0.00000000, 0 );
     /* NIS_POST_SETUP */ sub_26431( 1, 0 );
    WAIT( 1 );
     /* P_CREATE_AND_START_TIMER */ sub_26750( ref l_U465, 3000 );
    l_U464 = 1;
    return;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_26303(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* NIS_POST_SETUP */ void sub_26431(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_9463(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_9425(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_26529();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_26529()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9425(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9425(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_9425(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_9425(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_CREATE_AND_START_TIMER */ void sub_26750(unknown uParam0, unknown uParam1)
{
     /* CREATETIMER */ sub_6866( uParam0, uParam1, 1, 0 );
     /* STARTTIMER */ sub_20697( uParam0 );
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_26894(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_1058( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_1058( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_12741( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_27185( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_27662( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_27662( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_27922( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_27662( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_27922( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_27922( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_27662( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_27922( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_27922( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_27922( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_27662( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_27922( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_27922( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_27922( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_27922( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_29502( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1058( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_27185(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9800( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_1058( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_1058( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_27662(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_27922(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_29502(int iParam0)
{
     /* WRITE_STRING */ sub_1452( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_29590( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_18386( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_18386( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_18386( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_18386( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_18386( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_30494( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU52 );
     /* WRITE_STRING */ sub_1452( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU96 );
     /* WRITE_STRING */ sub_1452( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU100 );
     /* WRITE_STRING */ sub_1452( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU104 );
     /* WRITE_STRING */ sub_1452( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU108 );
     /* WRITE_STRING */ sub_1452( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU112 );
     /* WRITE_STRING */ sub_1452( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU116 );
     /* WRITE_STRING */ sub_1452( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU120 );
     /* WRITE_STRING */ sub_1452( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU124 );
     /* WRITE_STRING */ sub_1452( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU128 );
     /* WRITE_STRING */ sub_1452( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_29793( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_29793( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_29793( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_29590(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_29793(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_30494(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_31504(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_31547(  /* PLAYER_PED_ID */ sub_9425(), uParam0 );
}

/* F_ISPEDINTRIGGERBOX */ int sub_31547(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_HANDLE_CARD_PLAYERS_EARLY_REACTION */ void sub_31744()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    int I;

    if (NOT l_U443)
    {
        uVar2 = { /* MAL_GETPEDCOORDS */ sub_31809(  /* PLAYER_PED_ID */ sub_9425() )};
        if ((uVar2._fU4 > 7.60000000) || (( /* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ sub_31886( ref l_U433 )) > 0))
        {
            if ((l_U1100[2]) || ((l_U1100[1]) || (l_U1100[0])))
            {
                ;
            }
            else
            {
                for ( I = 0; I <= 2; I++ )
                {
                     /* MAL_SETACTINT */ sub_32096( l_U433[I], 47, 1000 );
                }
            }
            l_U443 = 1;
        }
    }
    return;
}

/* MAL_GETPEDCOORDS */ vector sub_31809(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return "[dynamic result, ret vals = 3]";
        break;
        GET_PED_COORDS( uParam0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        break;
    }
    return vector( 0, 0, 0);
}

/* F_GET_NUM_DEAD_PEDS_IN_ARRAY */ void sub_31886(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

/* MAL_SETACTINT */ void sub_32096(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, l_U40 );
    }
    return;
}

/* P_UNBLOCK_CARD_PLAYERS */ void sub_32189()
{
    int I;

    for ( I = 0; I <= 2; I++ )
    {
        if (NOT l_U1100[I])
        {
            if ((IS_PED_DEAD( l_U433[I] )) || (( /* MAL_GETACTINTSTATUS */ sub_32263( l_U433[I], 47 )) == 1))
            {
                 /* MAL_FINISHACTINT */ sub_32368( ref l_U433[I], 47 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U433[I], 0 );
                FREEZE_PED_POSITION( l_U433[I], 0 );
                l_U1100[I] = 1;
            }
        }
    }
    return;
}

/* MAL_GETACTINTSTATUS */ int sub_32263(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* MAL_FINISHACTINT */ void sub_32368(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

/* P_CREATESECTION1CS */ void sub_32507()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CreateSection1CS start", 0 );
     /* P_SETUP_AI_GROUP */ sub_16888( ref l_U549, 1056964608, 0 );
    l_U517 =  /* CREATEPED */ sub_17293( ref l_U504 );
     /* F_GIVEPEDWEAPON */ sub_11967( l_U517, -1074756423, 25000, 0, 0 );
     /* P_QUICK_ADD_PED_TO_GROUP */ sub_18654( l_U517, ref l_U549 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND (NOT (IS_PED_DEAD( l_U517 ))))
    {
        SET_PED_AI_TEMPLATE( l_U517, ref g_U1586 );
        REGISTER_TARGET( l_U517,  /* PLAYER_PED_ID */ sub_9425() );
        SET_PED_EMOTION_STATE( l_U517, 1 );
         /* P_TASK_AIM_NO_REACT */ sub_32723( l_U517 );
        SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U517, 1 );
    }
    l_U532 =  /* CREATEPED */ sub_17293( ref l_U519 );
     /* F_GIVEPEDWEAPON */ sub_11967( l_U532, -168327769, 25000, 0, 0 );
     /* P_QUICK_ADD_PED_TO_GROUP */ sub_18654( l_U532, ref l_U549 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND (NOT (IS_PED_DEAD( l_U532 ))))
    {
        SET_PED_AI_TEMPLATE( l_U532, ref g_U1594 );
        SET_PED_COMBAT_RANGE_MAX( l_U532, 16 );
        REGISTER_TARGET( l_U532,  /* PLAYER_PED_ID */ sub_9425() );
        SET_PED_EMOTION_STATE( l_U532, 1 );
        SET_PED_COMBAT_ATTRIBUTES( l_U532, 1, 0 );
    }
    l_U547 =  /* CREATEPED */ sub_17293( ref l_U534 );
     /* F_GIVEPEDWEAPON */ sub_11967( l_U547, 1194438308, 25000, 0, 0 );
     /* P_QUICK_ADD_PED_TO_GROUP */ sub_18654( l_U547, ref l_U549 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND (NOT (IS_PED_DEAD( l_U547 ))))
    {
        SET_PED_AI_TEMPLATE( l_U547, ref g_U1602 );
        SET_PED_COMBAT_RANGE_MIN( l_U547, 3 );
        SET_PED_COMBAT_RANGE_MAX( l_U547, 10 );
        SET_PED_EMOTION_STATE( l_U547, 1 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_AIM_GUN_AT_COORD( 0, 87.45934000, 17.22695000, 1.77155400, -1, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U547, uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    SET_PED_NAME_DEBUG( l_U547, "S1BehindTrailer" );
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CreateSection1CS end", 0 );
    return;
}

/* P_TASK_AIM_NO_REACT */ void sub_32723(unknown uParam0)
{
    unknown uVar3;

    if ( /* IS_PED_VALID */ sub_18019( uParam0 ))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )))
        {
            TASK_AIM_GUN_AT_PED( 0,  /* PLAYER_PED_ID */ sub_9425(), -1, 0 );
        }
        CLOSE_SEQUENCE_TASK( uVar3 );
        CLEAR_PED_TASKS( uParam0 );
        TASK_PERFORM_SEQUENCE( uParam0, uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

/* P_SECTION1WENTSHORTWAY */ void sub_33334()
{
    unknown uVar2;

    if ((IS_PED_DEAD( l_U433[2] )) || ((IS_PED_DEAD( l_U433[1] )) || ((IS_PED_DEAD( l_U433[0] )) || ( /* F_ISPLAYERINTRIGGERBOX */ sub_31504( l_U555 )))))
    {
         /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_Section1WentShortWay started", 0 );
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND (NOT (IS_PED_DEAD( l_U517 ))))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 75.45000000, 16.25000000, 4.92000000,  /* PLAYER_PED_ID */ sub_9425(), 4, 0, 0.50000000, 0.50000000, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_9425() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            CLEAR_PED_TASKS( l_U517 );
            TASK_PERFORM_SEQUENCE( l_U517, uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND (NOT (IS_PED_DEAD( l_U532 ))))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_PAUSE( 0, 3000 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 75.00000000, 19.65200000, 1.80000000,  /* PLAYER_PED_ID */ sub_9425(), 3, 0, 0.50000000, 0.50000000, 1, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_9425() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U532, uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
         /* P_CREATE_SECTION_2_CS */ sub_33782();
        ENABLE_WALLA_ZONE( "S_MARINA_WZ_CONTAINER_YARD", 1 );
        l_U518 = 1;
         /* WRITESCRIPTLOG */ sub_1058( "GA", "P_Section1WentShortWay end", 0 );
    }
    return;
}

/* P_CREATE_SECTION_2_CS */ void sub_33782()
{
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CREATE_SECTION_2_CS start", 0 );
     /* P_SETUP_AI_GROUP */ sub_16888( ref l_U837, 1056964608, 0 );
     /* PED_INITIALIZE */ sub_33911( ref l_U795, ref l_U808, -168327769, "AIT_NORMAL", 0, 25000, 2, 68019059, 25000 );
     /* P_QUICK_ADD_PED_TO_GROUP */ sub_18654( l_U808, ref l_U837 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND (NOT (IS_PED_DEAD( l_U808 ))))
    {
         /* PED_SET_COMBAT_RANGES */ sub_34230( ref l_U808, 3, 10 );
         /* P_TASK_AIM_NO_REACT */ sub_32723( l_U808 );
    }
    SET_PED_NAME_DEBUG( l_U808, "S2InCorner" );
     /* PED_INITIALIZE */ sub_33911( ref l_U809, ref l_U822, 1194438308, "AIT_NORMAL", 0, 25000, 2, 0, 25000 );
     /* P_QUICK_ADD_PED_TO_GROUP */ sub_18654( l_U822, ref l_U837 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND (NOT (IS_PED_DEAD( l_U822 ))))
    {
         /* PED_SET_COMBAT_RANGES */ sub_34230( ref l_U822, 5, 20 );
         /* P_TASK_AIM_NO_REACT */ sub_32723( l_U822 );
    }
    SET_PED_NAME_DEBUG( l_U822, "S2BehindCrates" );
     /* PED_INITIALIZE */ sub_33911( ref l_U823, ref l_U836, -1074756423, "AIT_NORMAL", 0, 25000, 2, 0, 25000 );
     /* P_QUICK_ADD_PED_TO_GROUP */ sub_18654( l_U836, ref l_U837 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND (NOT (IS_PED_DEAD( l_U836 ))))
    {
         /* PED_SET_COMBAT_RANGES */ sub_34230( ref l_U836, 5, 20 );
         /* P_TASK_AIM_NO_REACT */ sub_32723( l_U836 );
    }
    SET_PED_NAME_DEBUG( l_U836, "S2BehindTrailer" );
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CREATE_SECTION_2_CS end", 0 );
    return;
}

/* PED_INITIALIZE */ void sub_33911(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, int iParam7, unknown uParam8)
{
    unknown uVar11;

     /* CLEANPED */ sub_22543( (uParam1^) );
    (uParam1^) =  /* CREATEPED */ sub_17293( uParam0 );
    if ( /* IS_PED_VALID */ sub_18019( (uParam1^) ))
    {
        uVar11 =  /* F_GIVEPEDWEAPON */ sub_11967( (uParam1^), uParam2, uParam5, 0, 1 );
        if (iParam7 != 0)
        {
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11216( (uParam1^), iParam7, 0, uParam8, 0 );
        }
        SET_PED_AI_TEMPLATE( (uParam1^), uParam3 );
        SET_PED_ALERTNESS( (uParam1^), uParam6 );
        switch (uParam4)
        {
            case 0: break;
            case 1:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            break;
            case 2:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            break;
            case 3:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            break;
        }
    }
    return;
}

/* PED_SET_COMBAT_RANGES */ void sub_34230(unknown uParam0, float fParam1, float fParam2)
{
    if ( /* IS_PED_VALID */ sub_18019( (uParam0^) ))
    {
        if (fParam1 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam1 );
        }
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam2 );
        }
    }
    return;
}

/* P_SECTION1NEARONGROUNDPUNISHESPLAYERFORSTANDINGAROUNDLIKEALEMON */ void sub_34955()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_Section1NearOnGroundPunishesPlayerForStandingAroundLikeALemon start", 0 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND ((NOT (IS_PED_DEAD( l_U532 ))) AND (l_U533 == 0)))
    {
        l_U533 = 1;
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )))
        {
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_9425() );
        }
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U532 );
        TASK_PERFORM_SEQUENCE( l_U532, uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_Section1NearOnGroundPunishesPlayerForStandingAroundLikeALemon end", 0 );
    return;
}

/* P_TASK_ENEMY_MOVE_COMBAT_COVER */ void sub_35384(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, unknown uParam5)
{
    unknown uVar8;
    unknown uVar9;

    uVar9 = nil;
    if (bParam4)
    {
        uVar9 =  /* PLAYER_PED_ID */ sub_9425();
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
         /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_TASK_ENEMY_MOVE_COMBAT_COVER start", "***" );
        OPEN_SEQUENCE_TASK( ref uVar8 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam5 );
        TASK_COMBAT_MOVE_TO_COVER_COORDS( 0, uParam1, uVar9 );
        CLOSE_SEQUENCE_TASK( uVar8 );
        CLEAR_PED_TASKS( uParam0 );
        TASK_PERFORM_SEQUENCE( uParam0, uVar8 );
        CLEAR_SEQUENCE_TASK( uVar8 );
    }
    return;
}

/* PED_TASK_COMBAT_SNAP_TO_COVER */ void sub_35673(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if ( /* IS_PED_VALID */ sub_18019( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
         /* PED_SET_LOCK_TO_COVER */ sub_35739( ref uParam0, uParam4 );
        TASK_COMBAT_SNAP_TO_COVER( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

/* PED_SET_LOCK_TO_COVER */ void sub_35739(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_18019( (uParam0^) ))
    {
        SET_PED_FLAG_LOCK_TO_COVER( (uParam0^), uParam1 );
    }
    return;
}

/* F_ARE_FIRST_ENEMIES_DEAD */ int sub_35881()
{
    if ((IS_PED_DEAD( l_U433[2] )) AND ((IS_PED_DEAD( l_U433[1] )) AND ((IS_PED_DEAD( l_U433[0] )) AND ((IS_PED_DEAD( l_U517 )) AND (IS_PED_DEAD( l_U532 ))))))
    {
         /* WRITESCRIPTLOG */ sub_1058( "GA", "First five guys are DEAD!", 0 );
        return 1;
    }
    return 0;
}

/* P_START_PED_SEARCH */ void sub_36058(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_START_PED_SEARCH", "***" );
    if ( /* IS_PED_VALID */ sub_18019( uParam0 ))
    {
        CLEAR_PED_TASKS( uParam0 );
        TASK_SEARCH_FOR_UNSEEN_ENEMY( uParam0, 1 );
        SET_PED_ALERTNESS( uParam0, 3 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 0 );
    }
    return;
}

/* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ void sub_36438(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_18019( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_36545(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_31547(  /* PLAYER_PED_ID */ sub_9425(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* P_SECTION1ANDILLGOTHEHIGHROAD */ void sub_36722()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_Section1AndIllGoTheHighRoad start", 0 );
    if ((NOT (IS_PED_DEAD( l_U547 ))) AND (l_U548 == 0))
    {
        l_U548 = 1;
         /* TELEPORTPED */ sub_25909( l_U547, 89.01728000, 12.66312000, 1.80008500, 174.65590000 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )))
        {
            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_9425() );
        }
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U547 );
        TASK_PERFORM_SEQUENCE( l_U547, uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
         /* WRITESCRIPTLOG */ sub_1058( "MSWW", "Leaving High Road", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_Section1AndIllGoTheHighRoad end", 0 );
    return;
}

/* P_SEC2_CORENR_ACTIVATE */ void sub_37055()
{
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_SEC2_CORENR_ACTIVATE start", 0 );
     /* P_TASK_ENEMY_MOVE_COMBAT */ sub_37154( l_U808, 94.96800000, 14.76400000, 1.80000000, 1, 0 );
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_SEC2_CORENR_ACTIVATE end", 0 );
    return;
}

/* P_TASK_ENEMY_MOVE_COMBAT */ void sub_37154(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, unknown uParam5)
{
    unknown uVar8;

    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
         /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_TASK_ENEMY_MOVE_COMBAT start", "***" );
        REGISTER_TARGET( uParam0,  /* PLAYER_PED_ID */ sub_9425() );
        OPEN_SEQUENCE_TASK( ref uVar8 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (bParam4)
        {
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, uParam1,  /* PLAYER_PED_ID */ sub_9425(), uParam5, 8, 40, -1082130432, 3 );
        }
        else
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, 3, -1, 1048576000, 0, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_9425() );
        CLOSE_SEQUENCE_TASK( uVar8 );
        CLEAR_PED_TASKS( uParam0 );
        TASK_PERFORM_SEQUENCE( uParam0, uVar8 );
        CLEAR_SEQUENCE_TASK( uVar8 );
    }
    return;
}

/* P_SECTION1OHYOUGOTHELOWROAD */ void sub_37768()
{
     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_Section1OhYouGoTheLowRoad start", 0 );
    if (NOT l_U548)
    {
         /* P_TASK_ENEMY_MOVE_COMBAT */ sub_37154( l_U547, 88.80000000, 16.40000000, 1.80000000, 1, 1 );
    }
     /* P_UNBLOCK_AND_COMBAT_PED */ sub_37903( ref l_U532,  /* PLAYER_PED_ID */ sub_9425() );
     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_Section1OhYouGoTheLowRoad end", 0 );
    return;
}

/* P_UNBLOCK_AND_COMBAT_PED */ void sub_37903(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS( (uParam0^) );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 0 );
        TASK_COMBAT_PED( (uParam0^), uParam1 );
    }
    return;
}

/* P_CREATESECTION3CS */ void sub_38333()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CreateSection3CS start", 0 );
    if (NOT l_U843)
    {
        l_U843 = 1;
         /* P_SETUP_AI_GROUP */ sub_16888( ref l_U907, 1.00000000, 0 );
         /* CLEANPED */ sub_22543( l_U857 );
        l_U857 =  /* CREATEPED */ sub_17293( ref l_U844 );
         /* F_GIVEPEDWEAPON */ sub_11967( l_U857, -1074756423, 25000, 0, 0 );
         /* F_GIVEPEDWEAPONTOHOLSTER */ sub_11216( l_U857, -612753081, 0, 25000, 0 );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_18654( l_U857, ref l_U907 );
         /* MAL_SETTEMPLATEANDRANGES */ sub_18138( ref l_U857, ref g_U1586, -1082130432, -1082130432, 1 );
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND (NOT (IS_PED_DEAD( l_U857 ))))
        {
            SET_PED_ALERTNESS( l_U857, 3 );
             /* P_TASK_AIM_NO_REACT */ sub_32723( l_U857 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U857, 1 );
            SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U857, 1 );
        }
         /* CLEANPED */ sub_22543( l_U892 );
        l_U892 =  /* CREATEPED */ sub_17293( ref l_U879 );
         /* F_GIVEPEDWEAPON */ sub_11967( l_U892, -168327769, 25000, 0, 0 );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_18654( l_U892, ref l_U907 );
         /* MAL_SETTEMPLATEANDRANGES */ sub_18138( ref l_U892, ref g_U1586, 3, 12, 1 );
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND (NOT (IS_PED_DEAD( l_U892 ))))
        {
            SET_PED_ALERTNESS( l_U892, 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U892, 1 );
            SET_PED_COMBAT_ATTRIBUTES( l_U892, 1, 0 );
        }
         /* CLEANPED */ sub_22543( l_U906 );
        l_U906 =  /* CREATEPED */ sub_17293( ref l_U893 );
         /* F_GIVEPEDWEAPON */ sub_11967( l_U906, -1074756423, 25000, 0, 0 );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_18654( l_U906, ref l_U907 );
         /* MAL_SETTEMPLATEANDRANGES */ sub_18138( ref l_U906, ref g_U1586, -1082130432, -1082130432, 1 );
        if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND (NOT (IS_PED_DEAD( l_U906 ))))
        {
            SET_PED_ALERTNESS( l_U906, 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U906, 1 );
        }
        for ( I = 0; I <= (l_U940 - 1); I++ )
        {
             /* CLEANPED */ sub_22543( l_U940[I] );
            l_U940[I] =  /* CREATEPED */ sub_17293( ref l_U913[I] );
             /* F_GIVEPEDWEAPON */ sub_11967( l_U940[I], -1074756423, 25000, 0, 0 );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_18654( l_U940[I], ref l_U907 );
             /* MAL_SETTEMPLATEANDRANGES */ sub_18138( ref l_U940[I], ref g_U1586, -1082130432, -1082130432, 1 );
             /* PED_SET_ALERTNESS */ sub_39043( ref l_U940[I], 3 );
        }
         /* PED_TASK_COMBAT_SNAP_TO_COVER */ sub_35673( l_U940[0], "GenCover", "DB17D472_93C2DF68_Corner1", 0, 1 );
         /* P_DEACTIVATEPED */ sub_39179( l_U940[1] );
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_19311( ref l_U940, "TacticalCover" );
    }
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CreateSection3CS end", 0 );
    return;
}

/* PED_SET_ALERTNESS */ void sub_39043(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_18019( (uParam0^) ))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

/* P_DEACTIVATEPED */ void sub_39179(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* P_ACTIVATEPED */ void sub_39510(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* P_SECTION3RUNACROSSTHEYARD */ void sub_39651()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_Section3RunAcrossTheYard start", 0 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND (NOT (IS_PED_DEAD( l_U906 ))))
    {
         /* PED_SET_REGISTER_TARGET_PLAYER */ sub_19060( ref l_U906 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 104.58120000, 34.94937000, 1.80005300,  /* PLAYER_PED_ID */ sub_9425(), 4, 1, 1056964608, 0, 1, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        CLEAR_PED_TASKS( l_U906 );
        TASK_PERFORM_SEQUENCE( l_U906, uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() ))) AND (NOT (IS_PED_DEAD( l_U857 ))))
    {
         /* PED_TASK_COMBAT_SNAP_TO_COVER */ sub_35673( l_U857, "GenCover", "DB17D472_F5617DED_Popover1", 0, 0 );
    }
     /* P_CREATE_SECTION3_SHOTGUN_GUY */ sub_39970();
    l_U1090 = 1;
     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_Section3RunAcrossTheYard end", 0 );
    return;
}

/* P_CREATE_SECTION3_SHOTGUN_GUY */ void sub_39970()
{
     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_CREATE_SECTION3_SHOTGUN_GUY", "***" );
     /* CLEANPED */ sub_22543( l_U1084 );
    l_U1084 =  /* CREATEPED */ sub_17293( ref l_U1071 );
     /* F_GIVEPEDWEAPON */ sub_11967( l_U1084, -168327769, 25000, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U1084 )))
    {
        SET_PED_COMBAT_MOVEMENT( l_U1084, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1084, 1 );
        SET_PED_AI_TEMPLATE( l_U1084, ref g_U1586 );
        SET_PED_COMBAT_RANGE_MIN( l_U1084, 3 );
        SET_PED_COMBAT_RANGE_MAX( l_U1084, 20 );
        SET_PED_ALERTNESS( l_U1084, 3 );
        TASK_AIM_GUN_AT_COORD( l_U1084, 94.00000000, 48.60000000, 2.94000000, -1, 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1084, 1, 0 );
        SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( l_U1084, 1 );
    }
    return;
}

/* F_CY_LIVING_CS */ int sub_40460()
{
    int Result;

    if (l_U1090)
    {
        Result = ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_40501( ref l_U433 )) + ( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_40501( ref l_U940 ));
        if (NOT (IS_PED_DEAD( l_U517 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U532 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U547 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U808 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U822 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U836 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U857 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U892 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U906 )))
        {
            Result++;
        }
        if (NOT (IS_PED_DEAD( l_U1084 )))
        {
            Result++;
        }
        return Result;
    }
    return 10;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_40501(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* P_MOVE_SHOTGUN_GUY */ void sub_40938()
{
    unknown uVar2;

    switch (l_U1089)
    {
        case 0:
        if ( /* IS_PED_VALID */ sub_18019( l_U1084 ))
        {
             /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_MOVE_SHOTGUN_GUY: eCYSG_State = eCYSG_ShootGate", 0 );
            PLAY_AUDIO_EVENT_FROM_PED( "NPC_MOSSBERG_SINGLESHOT", l_U1084 );
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_SHOOT_AT_COORD( 0, 94.00000000, 48.60000000, 2.94000000, 500, 1566631136, 1, 0 );
            CLOSE_SEQUENCE_TASK( uVar2 );
            CLEAR_PED_TASKS( l_U1084 );
            TASK_PERFORM_SEQUENCE( l_U1084, uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U1084 ), 94.00000000, 48.60000000, 2.94000000, 50, 1, -168327769, 0 );
            l_U1089 = 1;
        }
        break;
        case 1:
        if (( /* F_GET_SCRIPT_TASK_STATUS */ sub_41285( l_U1084, 31 )) == 7)
        {
             /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_MOVE_SHOTGUN_GUY: eCYSG_State = eCYSG_RunOut", 0 );
             /* P_OPENDOOR */ sub_41452( ref g_U1467, 1, 0, 1065353216 );
             /* P_SETDOORLATCH */ sub_15030( ref g_U1467, 1 );
            SET_PED_COMBAT_MOVEMENT( l_U1084, 2 );
             /* P_CONTAINER_SHOTGUN_CS_GO_THROUGH_DOOR */ sub_41634();
            l_U1089 = 3;
             /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_MOVE_SHOTGUN_GUY: going to eCYSG_Done", 0 );
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_MOVE_SHOTGUN_GUY: eCYSG_State = eCYSG_WalkOut", 0 );
        SET_PED_COMBAT_MOVEMENT( l_U1084, 2 );
         /* P_CONTAINER_SHOTGUN_CS_GO_THROUGH_DOOR_CAUTIOUS */ sub_42053();
        l_U1089 = 3;
        break;
        case 3: break;
    }
    return;
}

/* F_GET_SCRIPT_TASK_STATUS */ int sub_41285(unknown uParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        return GET_SCRIPT_TASK_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* P_OPENDOOR */ void sub_41452(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_14786( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_14870( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* P_CONTAINER_SHOTGUN_CS_GO_THROUGH_DOOR */ void sub_41634()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CONTAINER_SHOTGUN_CS_GO_THROUGH_DOOR start", 0 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )))
    {
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, l_U1086,  /* PLAYER_PED_ID */ sub_9425(), 1, 3, 15, -1, 3 );
    }
    CLOSE_SEQUENCE_TASK( uVar2 );
    CLEAR_PED_TASKS( l_U1084 );
    TASK_PERFORM_SEQUENCE( l_U1084, uVar2 );
    CLEAR_SEQUENCE_TASK( uVar2 );
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CONTAINER_SHOTGUN_CS_GO_THROUGH_DOOR end", 0 );
    return;
}

/* P_CONTAINER_SHOTGUN_CS_GO_THROUGH_DOOR_CAUTIOUS */ void sub_42053()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_CONTAINER_SHOTGUN_CS_GO_THROUGH_DOOR_CAUTIOUS start", 0 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )))
    {
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, l_U1086,  /* PLAYER_PED_ID */ sub_9425(), 0, 3, 15, -1, 2 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, 97.23406000, 46.33731000, 1.80000000,  /* PLAYER_PED_ID */ sub_9425(), 1, 8, 15, -1, 2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_9425() );
    }
    CLOSE_SEQUENCE_TASK( uVar2 );
    CLEAR_PED_TASKS( l_U1084 );
    TASK_PERFORM_SEQUENCE( l_U1084, uVar2 );
    CLEAR_SEQUENCE_TASK( uVar2 );
     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_CONTAINER_SHOTGUN_CS_GO_THROUGH_DOOR_CAUTIOUS end", 0 );
    return;
}

/* F_GETDOOROPENRATIO */ void sub_42460(int iParam0)
{
    int iVar3;
    float Result;

    if (( /* F_DOESDOOREXIST */ sub_14786( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_14870( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

/* P_CY_ASSIGN_LAST_CS_BULLET_CAM */ void sub_42668()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CY_ASSIGN_LAST_CS_BULLET_CAM start", 0 );
    for ( I = 0; I <= 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U433[I] )))
        {
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U433[I], 1 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U517 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U517, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U532 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U532, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U547 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U547, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U808 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U808, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U822 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U822, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U836 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U836, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U857 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U857, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U892 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U892, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U906 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U906, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U1084 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U1084, 1 );
    }
     /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_43137( ref l_U940 );
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_CY_ASSIGN_LAST_CS_BULLET_CAM end", 0 );
    return;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_43137(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_40501( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* P_SPEECH_PLAY_MAX_MONOLOGUE */ void sub_43449(unknown uParam0, unknown uParam1)
{
     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_SPEECH_PLAY_MAX_MONOLOGUE", "***" );
    if ( /* IS_MAX_VALID */ sub_19111())
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_43548( uParam1 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43657( 0,  /* PLAYER_PED_ID */ sub_9425(), "MAX", uParam1, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_43657( 1,  /* PLAYER_PED_ID */ sub_9425(), "MAX", uParam1, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_43910( uParam0, uParam1, 8, 1 );
    }
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_43548(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_43657(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_43910(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_43955( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_43955(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_44042( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_44042(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_44094( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_44612( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_44094(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_44612(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_STARTLIGHTNING */ void sub_44858(int iParam0)
{
    vector vVar3;

     /* WRITESCRIPTLOG */ sub_1058( "BSW", "[SP]### P_StartLightning ###", 0 );
    vVar3 = {0.00000000, 0.00000000, 0.00000000};
    if (iParam0->_fU16 == 1)
    {
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( ref l_U2, iParam0->_fU4, vVar3, iParam0->_fU0 );
    }
    else
    {
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( ref l_U10, iParam0->_fU4, vVar3, iParam0->_fU0 );
    }
    if (iParam0->_fU20 == 1)
    {
         /* CREATETIMER */ sub_6866( iParam0 + 24, iParam0->_fU60, 1, 0 );
         /* STARTTIMER */ sub_20697( iParam0 + 24 );
    }
    return;
}

/* P_HANDLE_THUNDER_LIGHTNING */ void sub_45064(int iParam0)
{
    if (( /* ISTIMERDONE */ sub_20830( iParam0 + 24 )) == 1)
    {
        if (iParam0->_fU68 == 0)
        {
            TRIGGER_THUNDER( iParam0->_fU64, 1 );
        }
        else
        {
            TRIGGER_LIGHTNING( 0 );
        }
    }
    return;
}

/* P_HANDLE_CY_FORKLIFT_EXPLOSION */ void sub_45169()
{
    if ((DOES_OBJECT_EXIST( l_U1094 )) AND (NOT l_U1095))
    {
        if (HAS_FRAGMENT_ROOT_OF_OBJECT_BEEN_DAMAGED( l_U1094 ))
        {
             /* WRITESCRIPTLOG */ sub_1058( "SBA", "Forklift done blown up", "$$$" );
            l_U1095 = 1;
            ENABLE_COVERPOINTMP3( "GenCover", "DB17D472_B7A5FF90_Corner1", 0 );
            ENABLE_COVERPOINTMP3( "GenCover", "DB17D472_B7A5FF90_Corner2", 0 );
        }
    }
    return;
}

/* P_CREATE_CY_TO_BOATYARD_GARAGE_DOOR */ void sub_45424(unknown uParam0, unknown uParam1, unknown uParam2)
{
     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_CREATE_CY_TO_BOATYARD_GARAGE_DOOR", "***" );
     /* CLEANOBJECT */ sub_15349( g_U1660 );
    g_U1660 =  /* CREATEOBJECT */ sub_15432( g_U1093, uParam0, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( g_U1660 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U1660, ref g_U1192 );
        FREEZE_OBJECT_POSITION( g_U1660, 1 );
    }
    return;
}

/* P_START_GARAGE_ROOM */ void sub_45629()
{
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_START_GARAGE_ROOM", 0 );
    l_U1189 =  /* CREATEOBJECTNOOFFSET */ sub_16151( g_U1094, 71.38000000, 57.10000000, 3.35000000, 0.00000000, 0.00000000, 180.00000000, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1189 ))
    {
        FREEZE_OBJECT_POSITION( l_U1189, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1189, ref g_U1192 );
    }
    if (DOES_OBJECT_EXIST( g_U1660 ))
    {
        PLAY_OBJECT_ANIM( g_U1660, "P_MA_BOTDOR_CA_H", ref g_U1138, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U1660, "P_MA_BOTDOR_CA_H", ref g_U1138, 0.00000000 );
        SET_OBJECT_ANIM_SPEED( g_U1660, "P_MA_BOTDOR_CA_H", ref g_U1138, 0.00000000 );
    }
    l_U1313 = 1;
    if (NOT (DOES_PLACEMENT_EXIST( g_U1576[0] )))
    {
        g_U1576[0] = CREATE_PLACEMENT_ROTATE( -4072149, 70.45000000, 48.63000000, 2.83000000, 0, 0, 0, 0, 0, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1576[0], ref g_U1192 );
    }
    if (NOT (DOES_PLACEMENT_EXIST( g_U1579 )))
    {
        g_U1579 = CREATE_PLACEMENT_ROTATE( 1699359515, 75.36500000, 52.38000000, 2.29000000, 1.57000000, -1, 0.00000000, 0, 0, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1579, ref g_U1192 );
    }
    if (NOT (DOES_PLACEMENT_EXIST( g_U1580 )))
    {
        g_U1580 = CREATE_AMMOBAG_PLACEMENT_ROTATE( 72.63200000, 49.09000000, 1.99000000, 0.00000000, 0.00000000, 3.90000000, 0, -1, 0, 1119092736 );
         /* P_SETUP_AMMO_BAG_DEFAULTS */ sub_8649( g_U1580 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U1580, ref g_U1192 );
    }
    if (CUTSCENE_IS_LOADED( l_U392 ))
    {
        CLEAR_NAMED_CUTSCENE( l_U392 );
    }
     /* LOADSEAMLESSCUTSCENE */ sub_14210( l_U391, 0 );
    return;
}

/* DISABLETIMER */ void sub_46257(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* P_TETHER_CY_ENEMIES */ void sub_46317()
{
     /* P_TETHERPEDARRAY */ sub_46358( ref l_U1048, ref l_U433, 1 );
     /* P_TETHERPED */ sub_46432( ref l_U1048, l_U517, 1 );
     /* P_TETHERPED */ sub_46432( ref l_U1048, l_U532, 1 );
     /* P_TETHERPED */ sub_46432( ref l_U1048, l_U547, 1 );
     /* P_TETHERPED */ sub_46432( ref l_U1048, l_U808, 1 );
     /* P_TETHERPED */ sub_46432( ref l_U1048, l_U822, 1 );
     /* P_TETHERPED */ sub_46432( ref l_U1048, l_U836, 1 );
     /* P_TETHERPED */ sub_46432( ref l_U1048, l_U857, 1 );
     /* P_TETHERPED */ sub_46432( ref l_U1048, l_U892, 1 );
     /* P_TETHERPED */ sub_46432( ref l_U1048, l_U906, 1 );
     /* P_TETHERPED */ sub_46432( ref l_U1048, l_U1084, 1 );
    return;
}

/* P_TETHERPEDARRAY */ void sub_46358(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam1^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam1^)[I] )))
        {
             /* P_TETHERPED */ sub_46432( uParam0, (uParam1^)[I], uParam2 );
        }
    }
    return;
}

/* P_TETHERPED */ void sub_46432(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* IS_WEAPON_TWO_HANDED */ int sub_46766(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_47076(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9425(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_47199( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_47434();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_9425(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_47199(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_47434()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9425(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_47199( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9425(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_9425(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_9425(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* UPDATE_FORCEWALK_AND_TRIGGER_PAIR */ int sub_47729(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, boolean bParam42)
{
    if ( /* IS_MAX_VALID */ sub_19111())
    {
        if ((NOT (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_9425() ))) AND ( /* F_ISPLAYERINTRIGGERBOX */ sub_31504( uParam0 )))
        {
             /* WRITESCRIPTLOG */ sub_1058( "RJM", "UPDATE_FORCEWALK_AND_TRIGGER_PAIR - Force walk enabled", 0 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_9425(), 1 );
        }
        else if ((GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_9425() )) AND (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_31504( uParam0 ))))
        {
             /* WRITESCRIPTLOG */ sub_1058( "RJM", "UPDATE_FORCEWALK_AND_TRIGGER_PAIR - Force walk disabled", 0 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_9425(), 0 );
        }
    }
    if ( /* F_ISPLAYERINTRIGGERBOX */ sub_31504( uParam21 ))
    {
        if (bParam42)
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_9425(), 0 );
        }
        return 1;
    }
    return 0;
}

/* P_UNLOAD_ASSETS */ void sub_48075(boolean bParam0)
{
    if (NOT bParam0)
    {
         /* WRITESCRIPTLOG */ sub_1058( "GA", "P_UNLOAD_ASSETS start", 0 );
    }
     /* UNLOADMODEL */ sub_48151( g_U1031 );
     /* UNLOADMODEL */ sub_48151( g_U1056 );
     /* UNLOADMODEL */ sub_48151( g_U1064 );
     /* UNLOADMODEL */ sub_48151( g_U1100 );
     /* UNLOADMODEL */ sub_48151( g_U1099 );
     /* UNLOADMODEL */ sub_48151( g_U1061 );
     /* UNLOADMODEL */ sub_48151( g_U1062 );
     /* UNLOADMODEL */ sub_48151( g_U1059 );
     /* UNLOADMODEL */ sub_48151( g_U1060 );
     /* UNLOADMODEL */ sub_48151( g_U774 );
     /* UNLOADMODEL */ sub_48151( -1784229265 );
     /* UNLOADMODEL */ sub_48151( -72345008 );
    if (NOT bParam0)
    {
         /* UNLOADMODEL */ sub_48151( g_U1094 );
        RELEASE_SOUND_ID( l_U1317 );
        RELEASE_SOUND_ID( l_U1319 );
        RELEASE_SOUND_ID( l_U1318 );
        RELEASE_NAMED_SCRIPT_AUDIO_BANK( l_U1136 );
    }
     /* WRITESCRIPTLOG */ sub_1058( "GA", "P_UNLOAD_ASSETS end", 0 );
    return;
}

/* UNLOADMODEL */ void sub_48151(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_1452( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* P_PLAY_CUTSCENE_MID_05_DOCKS */ void sub_48518()
{
     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_PLAY_CUTSCENE_MID_05_DOCKS start", "***" );
     /* NIS_PRE_SETUP */ sub_24142( 1, 0, 0, 1 );
     /* LOADSEAMLESSCUTSCENE */ sub_14210( l_U391, 1 );
     /* P_PLAYER_HOLSTER_WEAPONS */ sub_48639( ref l_U1294, 1, 1 );
     /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_47076( 1 );
    if ( /* IS_MAX_VALID */ sub_19111())
    {
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_9425(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_9425(), g_U790[5], g_U899[5] );
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1481._fU0, g_U1481._fU4 );
    START_SEAMLESS_CUTSCENE();
    CUTSCENE_ENABLE_SKIP( 0 );
    while (NOT HAS_CUTSCENE_FINISHED())
    {
        WAIT( 0 );
    }
     /* MAL_WRITESCRIPTLOG */ sub_18202( "CUTSCENE FINISHED!" );
    if (DOES_OBJECT_EXIST( g_U1660 ))
    {
        PLAY_OBJECT_ANIM( g_U1660, "P_MA_BOTDOR_CA_H", ref g_U1138, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U1660, "P_MA_BOTDOR_CA_H", ref g_U1138, 1.00000000 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U936[5], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U973[5], 1065353216, 0 );
     /* NIS_POST_SETUP */ sub_26431( 1, 1 );
    g_U1010 = 1;
     /* WRITESCRIPTLOG */ sub_1058( "SBA", "P_PLAY_CUTSCENE_MID_05_DOCKS end", "***" );
    return;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_48639(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_48678( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9425(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_47199( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_46766( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9425(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_9425(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_9425(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_9425(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9425(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_9425(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9425(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_9425(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9425(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_46766( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_9425(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_9425(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_9425(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_48678(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* P_HANDLE_MUSIC */ void sub_49966()
{
    if (l_U377 != l_U375)
    {
         /* WRITESCRIPTLOG */ sub_1058( "TEH", "playing music:changed CUR FLAG", 0 );
         /* WRITE_INT */ sub_29793( l_U375 );
         /* WRITE_INT */ sub_29793( l_U376 );
        l_U377 = l_U375;
    }
    else if (l_U378 != l_U376)
    {
         /* WRITESCRIPTLOG */ sub_1058( "TEH", "playing music:changed NEW FLAG", 0 );
         /* WRITE_INT */ sub_29793( l_U375 );
         /* WRITE_INT */ sub_29793( l_U376 );
        l_U378 = l_U376;
    }
    switch (l_U375)
    {
        case 1:
        l_U388 = 0;
        l_U375 = 3;
        l_U376 = 3;
        AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_3", "", 0, 5000, 5000, -1082130432, 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1058( "TEH", "playing music: Warehouse Restart checkpoint ", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_3", "", 0, 5000, 5000, -1082130432, 0 );
        l_U388 = 0;
        l_U375 = 3;
        l_U376 = 3;
        break;
        case 3:
        if (l_U376 == 3)
        {
            AUDIO_MUSIC_PRELOAD_ONESHOT( "DOCKS_ONESHOT_14", 0 );
            if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
            {
                 /* WRITESCRIPTLOG */ sub_1058( "TEH", "playing music: Sussesfully preloaded DOCKS_ONESHOT_14", 0 );
                l_U388 = 1;
                l_U375 = 4;
                l_U376 = 4;
            }
        }
        break;
        case 4:
        if (l_U376 == 4)
        {
            if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( 0 ))
            {
                 /* WRITESCRIPTLOG */ sub_1058( "TEH", "playing music: Sussesfully played MC_ONESHOT_PLAY_ONESHOT_14", 0 );
                AUDIO_MUSIC_PLAY_ONESHOT();
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_1058( "TEH", "playing music:  MC_ONESHOT_PLAY_ONESHOT_14 wasn't loaded !", 0 );
            }
             /* WRITESCRIPTLOG */ sub_1058( "TEH", "playing music: MC_SHOOTING_STARTS", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_3_5", "", 0, 3000, 5000, -1082130432, 0 );
            SET_STATIC_EMITTER_VOLUME( "CRATE_ROOM_MUSIC", -6.00000000 );
            l_U388 = 0;
            l_U375 = 5;
        }
        break;
        case 5:
        if (l_U376 == 5)
        {
            AUDIO_MUSIC_FORCE_TRACK( "DOCKS_SONG_02", "DOCKS_02_3", "", 0, 5000, 5000, -1082130432, 0 );
            l_U375 = 6;
        }
        break;
    }
    return;
}

/* P_HANDLE_DEBUG_TUNING_WIDGET */ void sub_51008()
{
    if (NOT l_U1320)
    {
        START_WIDGET_GROUP( "Container Yard Tuning" );
        ADD_WIDGET_BOOL( "Reset Container Yard", ref l_U1321 );
        ADD_WIDGET_BOOL( "Reset Forklift Test", ref l_U1323 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_51193( ref g_U1656, "Garage Door Position", 1036831949 );
        ADD_WIDGET_BOOL( "Create Garage Door", ref l_U1322 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_51193( ref l_U459, "Max's Start Pos", 1036831949 );
        STOP_WIDGET_GROUP();
        l_U1320 = 1;
    }
    if (l_U1321)
    {
         /* P_CLEANUP_ALL */ sub_21854();
         /* TELEPORTPED */ sub_25909(  /* PLAYER_PED_ID */ sub_9425(), g_U790[4], g_U899[4] );
         /* P_SETUP_STATIC_DATA */ sub_3657();
         /* P_INITIALIZE_SCRIPT_DATA */ sub_6607();
         /* P_START_GAMEPLAY */ sub_14677();
        l_U1321 = 0;
    }
    if (l_U1323)
    {
         /* P_CLEANUP_ALL */ sub_21854();
         /* TELEPORTPED */ sub_25909(  /* PLAYER_PED_ID */ sub_9425(), 97.28000000, 29.08000000, 1.90000000, 270.00000000 );
         /* P_SETUP_STATIC_DATA */ sub_3657();
         /* P_INITIALIZE_SCRIPT_DATA */ sub_6607();
         /* P_CREATE_YARD_PROPS */ sub_15916();
        l_U1323 = 0;
    }
    if (l_U1322)
    {
         /* P_CREATE_WH_GARAGEDOOR */ sub_15268();
        l_U1322 = 0;
    }
    return;
}

/* P_ADD_WIDGET_VECTOR_SLIDER */ void sub_51193(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

/* F_SAFE_TO_CLOSE_GARAGE_DOOR */ int sub_51576()
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_9425() )) == 0) AND ((DOES_OBJECT_EXIST( g_U1660 )) == 1))
    {
        if (((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_9425() ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( g_U1660 ), 1 )) > 3.00000000) AND ( /* F_ISPEDINTRIGGERBOX */ sub_31547(  /* PLAYER_PED_ID */ sub_9425(), l_U353 )))
        {
            return 1;
        }
    }
    return 0;
}


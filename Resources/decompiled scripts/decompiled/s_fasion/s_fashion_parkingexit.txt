void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    l_U71 = 0;
    l_U123 = 0;
    l_U125 = 1;
    l_U126 = 0;
    l_U127 = 0;
    l_U165 = 286;
    l_U166 = 299;
    l_U167 = 1.27000000;
    l_U168 = 6150;
    l_U169 = 2.00000000;
    l_U170 = 0.50000000;
    l_U171 = 1400;
    l_U181 = -1;
    l_U182 = {0.00000000, 2.50000000, 0.30000000};
    l_U185 = {-0.75000000, 2.55000000, 0.29000000};
    l_U188 = {0.35000000, 2.50000000, 0.25000000};
    l_U223 = 1000;
    l_U224 = 1.50000000;
    l_U225 = 125;
    l_U235 = 1.50000000;
    l_U236 = 3900.00000000;
    l_U319 = 2000;
    l_U387 = -1;
    l_U388 = {2.00000000, 0.00000000, 2.00000000};
    l_U391 = {0.00000000, 0.00000000, 0.00000000};
    l_U394 = 750;
    l_U395 = 1250;
    l_U405 = 1500;
    l_U518 = 5500;
    l_U530 = -5.00000000;
    l_U531 = 2.50000000;
    l_U552 = 400;
    l_U562 = 500;
    l_U772 = 2000;
    l_U870 = 250;
    l_U871 = 250;
    l_U968 = 0;
    l_U969 = 0;
    l_U970 = 0;
    l_U971 = {-2.53000000, 65.55000000, -60.00000000};
    l_U974 = 270.00000000;
    l_U975 = 0;
    l_U976 = 0;
    l_U977 = 0;
     /* WRITESCRIPTLOG */ sub_718( "SP", "Script s_fashion_ParkingExit.sc is starting up...", 0 );
     /* P_EX_POPULATE_VARIABLE_ARRAYS */ sub_836();
    l_U123 = 1;
    l_U71 = 0;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_1576();
        if (l_U127 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_13938();
        }
         /* P_EX_DEBUG_RECORDING_WIDGET */ sub_83593();
         /* P_EX_DEBUG_EXIT_TUNING_WIDGET */ sub_84352();
        WAIT( 0 );
    }
     /* P_CLEANUP_EX */ sub_4438( 0 );
     /* P_RELEASE_EX_ASSETS */ sub_85950();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_fashion_ParkingExit" );
     /* WRITESCRIPTLOG */ sub_718( "SP", "Script s_fashion_ParkingExit.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_718(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_EX_POPULATE_VARIABLE_ARRAYS */ void sub_836()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_POPULATE_VARIABLE_ARRAYS start", 0 );
    l_U109[0] = 1274459925;
    l_U109[1] = -1125914163;
    l_U109[2] = -826503810;
    l_U109[3] = -1738137390;
    l_U109[4] = -674073824;
    l_U109[5] = -455782833;
    l_U109[6] = -239844571;
    l_U109[7] = -1522400210;
    l_U109[8] = 1071653504;
    l_U109[9] = -1154707606;
    l_U120[0] = 68019059;
    l_U120[1] = -168327769;
     /* P_GLOBAL_INITIALIZE_ROOFTOP_LEVEL1_VEHICLE_DATA */ sub_1083();
     /* P_GLOBAL_INITIALIZE_ROOFTOP_EXIT_VEHICLE_DATA */ sub_1318();
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_POPULATE_VARIABLE_ARRAYS end", 0 );
    return;
}

/* P_GLOBAL_INITIALIZE_ROOFTOP_LEVEL1_VEHICLE_DATA */ void sub_1083()
{
     /* WRITESCRIPTLOG */ sub_718( "CCB", "P_GLOBAL_INITIALIZE_ROOFTOP_LEVEL1_VEHICLE_DATA", 0 );
    g_U1293[0] = -1522400210;
    g_U1439[0] = {-5.36000000, 89.36000000, -60.60000000};
    g_U1558[0] = -90.00000000;
    g_U1293[1] = 1071653504;
    g_U1439[1] = {-17.97000000, 84.50000000, -60.60000000};
    g_U1558[1] = 90.00000000;
    return;
}

/* P_GLOBAL_INITIALIZE_ROOFTOP_EXIT_VEHICLE_DATA */ void sub_1318()
{
     /* WRITESCRIPTLOG */ sub_718( "CCB", "P_GLOBAL_INITIALIZE_ROOFTOP_EXIT_VEHICLE_DATA", 0 );
    g_U1296[0] = -239844571;
    g_U1446[0] = {-2.53000000, 65.55000000, -60.00000000};
    g_U1561[0] = 270.00000000;
    return;
}

/* P_HANDLE_FAILURE */ void sub_1576()
{
    if (g_U723 == 7)
    {
        switch (l_U127)
        {
            case 0:
            if ((l_U126) || (( /* RESTARTING_CHECKPOINT */ sub_1778()) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() ))))
            {
                STOP_IMAGEFX( g_U1697, 0 );
                l_U127 = 1;
                 /* WRITESCRIPTLOG */ sub_718( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            if (DOES_PED_EXIST( l_U514[2] ))
            {
                if (IS_PED_DEAD( l_U514[2] ))
                {
                    AUDIO_MUSIC_SUSPEND( 5000 );
                    l_U127 = 1;
                     /* WRITESCRIPTLOG */ sub_718( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
                }
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_2421())
            {
                l_U127 = 2;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_2481( 0 )) == 1)
            {
                l_U127 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
            {
                l_U127 = 3;
                 /* WRITESCRIPTLOG */ sub_718( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_718( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1715() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1715(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1677() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1677(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
             /* P_IMAGEFX_STOP_BULLETCAM */ sub_4166( "ROOF_VAN_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
             /* P_CLEANUP_EX */ sub_4438( 1 );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( ref g_U1635, 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( ref g_U1635, 0 ), GET_HASH_KEY( ref g_U1611 ) );
            l_U127 = 4;
             /* WRITESCRIPTLOG */ sub_718( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_718( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U73._fU0)
            {
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9250( ref l_U73,  /* PLAYER_PED_ID */ sub_1677() );
            }
            l_U127 = 5;
             /* WRITESCRIPTLOG */ sub_718( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_718( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U123 = 1;
            l_U126 = 0;
            l_U125 = 0;
            l_U127 = 0;
             /* WRITESCRIPTLOG */ sub_718( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* PLAYER_PED_ID */ int sub_1677()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1715() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1715()
{
    return GET_PLAYER_ID();
}

/* RESTARTING_CHECKPOINT */ int sub_1778()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1677(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1715(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1715(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1677() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1677(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_2421()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_2481(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_2563( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_2697( ref l_U43, l_U42, 1, 1 );
             /* STARTTIMER */ sub_2847( ref l_U43 );
        }
        if ( /* ISTIMERDONE */ sub_2980( ref l_U43 ))
        {
             /* WRITESCRIPTLOG */ sub_718( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1715() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1715(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_718( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_3481();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_718( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_3481();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_2563(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_2697(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_2847(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_2980(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_3481()
{
     /* WRITESCRIPTLOG */ sub_718( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_3556( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1715() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1715(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

/* RESETTIMER */ void sub_3556(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_IMAGEFX_STOP_BULLETCAM */ void sub_4166(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_718( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
     /* CLEANCAMERA */ sub_4276( ref l_U72 );
    l_U71 = 1;
    return;
}

/* CLEANCAMERA */ void sub_4276(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* P_CLEANUP_EX */ void sub_4438(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_CLEANUP_EX start", 0 );
    SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 0 );
    CAMERA_CAN_TARGET_TIRES( 0 );
     /* P_SAFE_REMOVE_PARTICLE_FX */ sub_4515( ref l_U181 );
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_09_RP_concat" )) || (CUTSCENE_IS_LOADED( "MID_09_RP_concat" )))
    {
        CLEAR_NAMED_CUTSCENE( "MID_09_RP_concat" );
    }
    if ((CUTSCENE_NAMED_IS_LOADING( "01_03_rp_concat" )) || (CUTSCENE_IS_LOADED( "01_03_rp_concat" )))
    {
        CLEAR_NAMED_CUTSCENE( "01_03_rp_concat" );
    }
    if ((CUTSCENE_NAMED_IS_LOADING( "01_04_BP_concat" )) || (CUTSCENE_IS_LOADED( "01_04_BP_concat" )))
    {
        CLEAR_NAMED_CUTSCENE( "01_04_BP_concat" );
    }
    if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "ROOFTOP_ONESHOT_08" ))
    {
        AUDIO_MUSIC_STOP_ONESHOT();
    }
    if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "ROOFTOP_ONESHOT_RODRIGO_VAN" ))
    {
        AUDIO_MUSIC_STOP_ONESHOT();
    }
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_4946( "S_FASHION_VAN_START", ref g_U1168 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_5737( "S_FASHION_VAN_START", ref g_U1168 );
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_4946( "S_FASHION_VAN_SUCCESS", ref g_U1168 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_5737( "S_FASHION_VAN_SUCCESS", ref g_U1168 );
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_4946( "S_FASHION_VAN_ROD_EXIT", ref g_U1168 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_5737( "S_FASHION_VAN_ROD_EXIT", ref g_U1168 );
     /* P_SAFE_STOP_SOUND */ sub_6904( l_U387, 0 );
     /* P_SAFE_RELEASE_SOUND_ID */ sub_7087( ref l_U387 );
    ISEQ_TERMINATE( 1850370443 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7312( 1850370443, ref g_U967 );
    ISEQ_TERMINATE( -1310687981 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7312( -1310687981, ref g_U967 );
    ISEQ_TERMINATE( -206765881 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7312( -206765881, ref g_U967 );
    ISEQ_TERMINATE( 218169473 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7312( 218169473, ref g_U967 );
    ISEQ_TERMINATE( -923981292 );
     /* P_STREAMREQ_ISEQ_REMOVE */ sub_7312( -923981292, ref g_U967 );
     /* KILL_SPEECH */ sub_7802( ref l_U564, 0 );
    if (NOT bParam0)
    {
        UI_SET( 25, 2, 1537, "SPSlotLoader", 1537, "" );
    }
     /* CLEANPEDARRAY */ sub_8111( ref l_U220 );
     /* CLEANPEDARRAY */ sub_8111( ref l_U305 );
     /* CLEANPEDARRAY */ sub_8111( ref l_U514 );
     /* CLEANPEDARRAY */ sub_8111( ref l_U864 );
     /* CLEANPEDARRAY */ sub_8111( ref l_U954 );
    if (NOT bParam0)
    {
         /* CLEANPEDARRAY */ sub_8111( ref g_U1684 );
         /* CLEANPEDARRAY */ sub_8111( ref g_U1691 );
    }
     /* CLEANVEHICLEARRAY */ sub_8331( ref g_U1288 );
     /* CLEANVEHICLEARRAY */ sub_8331( ref g_U1291 );
     /* CLEANVEHICLE */ sub_8385( l_U959 );
     /* CLEANOBJECT */ sub_8497( l_U164 );
     /* P_STOP_SP_CHALLENGES */ sub_8553( bParam0 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_CLEANUP_EX end", 0 );
    return;
}

/* P_SAFE_REMOVE_PARTICLE_FX */ void sub_4515(unknown uParam0)
{
    if ((uParam0^) != 0)
    {
        REMOVE_PARTICLE_FX( (uParam0^) );
        (uParam0^) = 0;
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_STOP */ void sub_4946(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_4996( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_5205( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Stopping the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        DISPLAYF( "Attempting to stop a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ int sub_4996(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB]### The SCRIPT_STREAM is loaded: {} ###", 1, 1281, ref (uParam1^)[I]._fU0 );
                return 1;
            }
        }
    }
    return 0;
}

/* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ int sub_5205(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ void sub_5737(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5883( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a SCRIPT_STREAM asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ int sub_5883(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if ((uParam1^)[I] == iParam0)
            {
                DISPLAYF( "[CCB] ### The THREADID index matches the asset requested for removal: {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
            else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID index is in use and is active: {} ###", 1, 513, (uParam1^)[I] );
                Result = I;
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is in use, but is no longer active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL: {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

/* P_SAFE_STOP_SOUND */ void sub_6904(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
         /* WRITESCRIPTLOG */ sub_718( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_718( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

/* P_SAFE_RELEASE_SOUND_ID */ void sub_7087(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
         /* WRITESCRIPTLOG */ sub_718( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_718( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

/* P_STREAMREQ_ISEQ_REMOVE */ void sub_7312(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5883( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a ISEQ asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

/* KILL_SPEECH */ void sub_7802(int iParam0, unknown uParam1)
{
    if (NOT ( /* IS_SCRIPT_SPEECH_STRUCT_VALID */ sub_7830( (iParam0^) )))
    {
        ;
    }
    else
    {
        PRINTSTRING( "\n KILL SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
        {
            if (iParam0->_fU8 == g_U6[iParam0->_fU4])
            {
                STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
            }
        }
    }
    return;
}

/* IS_SCRIPT_SPEECH_STRUCT_VALID */ boolean sub_7830(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

/* CLEANPEDARRAY */ void sub_8111(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_8161( (uParam0^)[I] );
    }
    return;
}

/* CLEANPED */ void sub_8161(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANVEHICLEARRAY */ void sub_8331(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANVEHICLE */ sub_8385( (uParam0^)[I] );
    }
    return;
}

/* CLEANVEHICLE */ void sub_8385(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* CLEANOBJECT */ void sub_8497(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_8553(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_718( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        if (SCRIPT_VAR_HASH_EXISTS( -1911384788 ))
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "Restoring the TiresPopped script variable.", 0 );
            SCRIPT_VAR_HASH_SET_INT( -1911384788, l_U961 );
            DISPLAYF( "[CCB] ### The current TiresPopped value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -1911384788 ) );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "The TiresPopped script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_718( "CCB", "Stopping the Rooftop_Party_Parkade context.", 0 );
        END_CONTEXT( "Rooftop_Party_Parkade" );
         /* WRITESCRIPTLOG */ sub_718( "CCB", "Stopping the Rooftop_Party context.", 0 );
        END_CONTEXT( "Rooftop_Party" );
    }
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_9250(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_718( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_9469( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_10633( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10947( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11426( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10947( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11426( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10947( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11426( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11742( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11426( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_11742( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_11426( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_12314( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_12516( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1677(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_718( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_9469(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9531( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_9531(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_10633(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_10947(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_11351( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_11351(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_11426(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_11742(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_11351( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_12314(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_12516(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9531( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_12614( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_12614(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_13938()
{
    int iVar2;
    int I;

    iVar2 = l_U123;
     /* P_PED_ARRAY_Z_SAFETY_CHECK */ sub_13985( ref l_U305, -65.00000000, 0, 1 );
    if (g_U723 == 7)
    {
         /* P_HANDLE_VEHICLE_CHALLENGES */ sub_14204( ref g_U1288, ref g_U1316 );
         /* P_HANDLE_VEHICLE_CHALLENGES */ sub_14204( ref g_U1291, ref g_U1319 );
    }
     /* P_HANDLE_SP_CHALLENGES */ sub_14554();
    switch (l_U123)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_718( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
         /* P_INITIALIZE_SCRIPT_DATA */ sub_15184();
         /* P_SET_STATIC_DATA */ sub_15932();
         /* P_INITIALIZE_SP_CHALLENGES */ sub_18494();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U123 = 2;
         /* WRITESCRIPTLOG */ sub_718( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_718( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
         /* P_REQUEST_EX_PERSISTENT_ASSETS */ sub_19209();
         /* P_REQUEST_EX_NONPERSISTENT_ASSETS */ sub_32256();
        l_U123 = 3;
         /* WRITESCRIPTLOG */ sub_718( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (( /* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ sub_40393( ref g_U1221 )) AND (( /* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ sub_40007( ref g_U1168 )) AND (( /* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ sub_39587( ref g_U1133 )) AND (( /* F_STREAMREQ_ISEQ_IS_LOADED */ sub_39173( ref g_U967 )) AND (( /* F_STREAMREQ_ANIM_DICT_IS_LOADED */ sub_38782( ref g_U1028 )) AND (( /* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ sub_38380( ref g_U918 )) AND ( /* F_STREAMREQ_MODELNAMES_IS_LOADED */ sub_37983( ref g_U821 ))))))))
        {
            if ((NOT l_U73._fU0) AND (g_U722 == 7))
            {
                l_U123 = 4;
                 /* WRITESCRIPTLOG */ sub_718( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U123 = 6;
                 /* WRITESCRIPTLOG */ sub_718( "SP", "eCheckpointState = CP_EX_PRE_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        g_U1264[7] = 1;
        l_U125 = 0;
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1677(), 0 );
        }
        if (( /* HAS_SAVEFILE_LOADED */ sub_41035( ref l_U73 )) == 0)
        {
             /* F_GIVEPEDWEAPON */ sub_11742(  /* PLAYER_PED_ID */ sub_1677(), 68019059, 200, 0, 0 );
             /* F_GIVEPEDWEAPONTOHOLSTER */ sub_10947(  /* PLAYER_PED_ID */ sub_1677(), 68019059, 0, 200, 0 );
            l_U123 = 5;
             /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U123 = 6;
             /* WRITESCRIPTLOG */ sub_718( "SP", "eCheckpointState = CP_EX_PRE_CREATE_ASSETS", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1677(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1677(), 0, 0 ) )))
            {
                l_U123 = 6;
                 /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_EX_PRE_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 6:
        if (l_U124)
        {
            ;
        }
         /* P_GLOBAL_CREATE_ROOFTOP_LEVEL1_VEHICLES */ sub_41571();
         /* P_GLOBAL_CREATE_ROOFTOP_EXIT_VEHICLES */ sub_42861();
        l_U123 = 7;
         /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        break;
        case 7:
        if (g_U1264[7])
        {
            if (l_U125)
            {
                if (CUTSCENE_IS_LOADED( "MID_09_RP_concat" ))
                {
                    l_U123 = 8;
                     /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_EX_HANDLE_MID_09_RP", 0 );
                }
                else if (CUTSCENE_NAMED_IS_LOADING( "MID_09_RP_concat" ))
                {
                     /* WRITESCRIPTLOG */ sub_718( "GA", "Waiting for cutscene MID_09_RP_concat to load.", 0 );
                }
                else
                {
                     /* WRITESCRIPTLOG */ sub_718( "GA", "Requesting cutscene MID_09_RP_concat to load.", 0 );
                    PRE_STREAM_SEAMLESS_CUTSCENE( "MID_09_RP_concat" );
                }
            }
            else
            {
                 /* P_EX_CREATE_DEAD_BODIES */ sub_43985();
                l_U123 = 8;
                 /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_EX_HANDLE_MID_09_RP", 0 );
            }
        }
        break;
        case 8:
        if (l_U124)
        {
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_54725( ref l_U782, "MID_09_RP_concat", 46357, 47243, 48761, 51546, 51595, 52821, 250, 0 );
            if (l_U125)
            {
                l_U782._fU4 = 2;
                 /* CUTSYS_SETCUTSCENELOADINTERIORONSKIP */ sub_55277( ref l_U782, ref g_U1635, ref g_U1611 );
            }
            else
            {
                l_U782._fU4 = 7;
            }
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_55391( ref l_U782 ))
        {
            if (NOT l_U73._fU0)
            {
                g_U723 = 7;
                 /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_57661( ref l_U73, g_U723,  /* PLAYER_PED_ID */ sub_1677(), g_U1333[7], g_U1450[7], g_U1486[7], g_U1522[7], 1 );
            }
             /* CLEANOBJECT */ sub_8497( l_U164 );
             /* P_EX_CREATE_L1_GATE */ sub_49011( 0 );
             /* P_START_SP_CHALLENGES */ sub_62275();
            l_U123 = 9;
             /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_EX_GP_SHOOT_VAN_TIRE", 0 );
        }
        break;
        case 9:
        if (l_U124)
        {
             /* P_EX_START_VAN_MPM */ sub_62891();
        }
        if ( /* F_HAS_VEHICLE_REACHED_PATH_MARK */ sub_63175( g_U1291[0], l_U165, l_U168 ))
        {
            l_U123 = 11;
             /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_EX_NIS_VAN_ESCAPE", 0 );
        }
        for ( I = 0; I <= 5; I++ )
        {
            if (NOT (IS_VEHICLE_DEAD( g_U1291[0] )))
            {
                if (IS_VEHICLE_TYRE_BURST( g_U1291[0], I ))
                {
                    PLAY_SOUND_FROM_VEHICLE( -1, "S_FASHION_TIRE_POPS", g_U1291[0] );
                    l_U123 = 10;
                     /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_EX_NIS_VAN_CRASH", 0 );
                }
            }
        }
        break;
        case 11:
        if (l_U124)
        {
             /* P_EX_END_VAN_MPM */ sub_63539();
             /* P_EX_START_VAN_ESCAPE_NIS */ sub_63748();
            AUDIO_MUSIC_SUSPEND( 5000 );
        }
        if (NOT IS_ANIMATED_CAMERA_PLAYING())
        {
            l_U126 = 1;
        }
        else if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_ROOFTOP_CP_08", "VIG_05_VAN_ESCAPE_CAM" )) - 3750))
        {
            l_U126 = 1;
        }
        break;
        case 10:
        if (l_U124)
        {
             /* STARTTIMER */ sub_2847( ref l_U226 );
        }
        if ( /* ISTIMERDONE */ sub_2980( ref l_U226 ))
        {
             /* P_EX_END_VAN_MPM */ sub_63539();
             /* P_EX_START_VAN_CRASH_NIS */ sub_64490();
            l_U237 = 1;
        }
        if ( /* ISTIMERDONE */ sub_2980( ref l_U172 ))
        {
             /* P_EX_START_VAN_CRASH_FX */ sub_64859();
        }
        if ((l_U237 != 4) AND (l_U237 != 0))
        {
             /* F_EX_SPAWN_V4_ENEMIES */ sub_65282();
        }
        if (l_U237 == 4)
        {
             /* P_EX_HANDLE_V4_EVENTS */ sub_67055();
        }
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_ROOFTOP_CP_08", "VIG_05_VAN_CRASH_CAM" )) - 1))
        {
             /* WRITESCRIPTLOG */ sub_718( "GA", "VIG_05_VAN_CRASH_CAM cam done, returning to gameplay cam.", 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
            {
                 /* TELEPORTPED */ sub_51726(  /* PLAYER_PED_ID */ sub_1677(), 1.94000000, 71.62000000, -60.80000000, 245.00000000 );
            }
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 9.12000000, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -2.60000000, 1065353216, 0 );
            PLAYER_USE_COVERPOINT(  /* PLAYER_ID */ sub_1715(), "GenCover", "F771B893_F5617DED_Corner2", 0 );
             /* NIS_POST_SETUP */ sub_57206( 1, 1 );
            l_U123 = 12;
             /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_EX_GP_COMBAT_VAN_CS", 0 );
        }
        break;
        case 12:
        if (l_U124)
        {
             /* LOADSEAMLESSCUTSCENE */ sub_32393( "01_03_rp_concat", 0 );
             /* P_STREAMREQ_MODELNAMES_INSERT */ sub_19383( 975934894, ref g_U821 );
            AUDIO_MUSIC_REQUEST_ONESHOT( "ROOFTOP_ONESHOT_RODRIGO_VAN", 0 );
             /* STARTTIMER */ sub_2847( ref l_U338 );
             /* STARTTIMER */ sub_2847( ref l_U347 );
        }
         /* P_GBL_HANDLE_PAINKILLER_TUTORIAL */ sub_69859();
         /* P_EX_HANDLE_V4_EVENTS */ sub_67055();
        if (NOT IS_BULLET_CAMERA_ACTIVE())
        {
            if ( /* ISTIMERDONE */ sub_2980( ref l_U347 ))
            {
                 /* P_SPEECH_PLAY_MONOLOGUE */ sub_71002( "SRTP_MSDSH", ref l_U356 );
            }
        }
        if (NOT l_U317)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_72323( ref l_U305 )) <= 1)
            {
                 /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_72447( ref l_U305 );
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                l_U317 = 1;
            }
        }
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
        {
            if ( /* F_ISPLAYERINTRIGGERBOX */ sub_72667( l_U719 ))
            {
                 /* KILL_SPEECH */ sub_7802( ref l_U356, 0 );
                l_U123 = 13;
                 /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_EX_NIS_RODRIGO_SHOT", 0 );
            }
        }
        if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_72323( ref l_U305 )) == 0)
        {
            if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
            {
                 /* KILL_SPEECH */ sub_7802( ref l_U356, 1 );
                l_U123 = 14;
                 /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_EX_GP_OPEN_VAN", 0 );
            }
        }
        break;
        case 14:
        if (l_U124)
        {
            if (NOT ( /* F_ISPLAYERINTRIGGERBOX */ sub_72667( l_U366 )))
            {
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
                if (NOT (IS_VEHICLE_DEAD( g_U1291[0] )))
                {
                    CAMERA_POINT_AT_VEHICLE( g_U1291[0], l_U405 );
                    l_U387 = GET_SOUND_ID();
                    PLAY_SOUND_FROM_VEHICLE( l_U387, "S_FASHION_VAN_STRUGGLE_LOOP", g_U1291[0] );
                }
            }
             /* STARTTIMER */ sub_2847( ref l_U396 );
             /* STARTTIMER */ sub_2847( ref l_U406 );
             /* STARTTIMER */ sub_2847( ref l_U415 );
             /* STARTTIMER */ sub_2847( ref l_U434 );
             /* STARTTIMER */ sub_2847( ref l_U453 );
             /* WRITESCRIPTLOG */ sub_718( "GA", "Starting ROOFTOP_SONG_03 music track with ROOFTOP_SONG_03_1_4 mood. Fade in 5 sec", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "ROOFTOP_SONG_03", "ROOFTOP_SONG_03_1_4", "", 0.00000000, 5000, -1, -1082130432, 0 );
        }
        if ( /* ISTIMERDONE */ sub_2980( ref l_U406 ))
        {
             /* WRITESCRIPTLOG */ sub_718( "GA", "Stop forcing the camera to look at the van.", 0 );
            CAMERA_CLEAR_POINT_AT_TARGET();
        }
        if ( /* ISTIMERDONE */ sub_2980( ref l_U415 ))
        {
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_71002( "SRTP_MARCA", ref l_U424 );
        }
        if ( /* ISTIMERDONE */ sub_2980( ref l_U434 ))
        {
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_71002( "SRTP_MXSEVN2", ref l_U443 );
        }
        if ( /* ISTIMERDONE */ sub_2980( ref l_U453 ))
        {
             /* P_SPEECH_PLAY_MONOLOGUE */ sub_71002( "SRTP_MXSEVN1", ref l_U462 );
        }
        if ( /* ISTIMERDONE */ sub_2980( ref l_U396 ))
        {
             /* P_EX_ROCK_VAN */ sub_73524();
             /* CREATETIMER */ sub_2697( ref l_U396, GET_RANDOM_INT_IN_RANGE( l_U394, l_U395 ), 1, 0 );
             /* STARTTIMER */ sub_2847( ref l_U396 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_72667( l_U719 ))
        {
            if (NOT l_U406._fU16)
            {
                CAMERA_CLEAR_POINT_AT_TARGET();
            }
             /* P_SAFE_STOP_SOUND */ sub_6904( l_U387, 0 );
             /* P_SAFE_RELEASE_SOUND_ID */ sub_7087( ref l_U387 );
             /* KILL_SPEECH */ sub_7802( ref l_U424, 0 );
             /* KILL_SPEECH */ sub_7802( ref l_U462, 0 );
             /* KILL_SPEECH */ sub_7802( ref l_U443, 0 );
            l_U123 = 13;
             /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_EX_NIS_RODRIGO_SHOT", 0 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOX */ sub_72667( l_U366 ))
        {
            if (NOT l_U406._fU16)
            {
                CAMERA_CLEAR_POINT_AT_TARGET();
            }
             /* P_SAFE_STOP_SOUND */ sub_6904( l_U387, 0 );
             /* P_SAFE_RELEASE_SOUND_ID */ sub_7087( ref l_U387 );
             /* KILL_SPEECH */ sub_7802( ref l_U424, 1 );
            l_U123 = 15;
             /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_EX_NIS_RODRIGO_EXIT_VAN", 0 );
        }
        break;
        case 13:
        if (l_U124)
        {
            l_U472 = 1;
        }
        if ( /* F_EX_SPAWN_V5_PEDS */ sub_74157())
        {
            if (NOT l_U740)
            {
                 /* P_EX_START_V5A */ sub_74820();
                l_U740 = 1;
            }
        }
        if ( /* ISTIMERDONE */ sub_2980( ref l_U773 ))
        {
             /* P_EX_V5_SHOOT_RODR */ sub_75600();
        }
        if (IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
            if (IS_BULLET_CAMERA_RUNNING( 0 ))
            {
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                 /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_75963( 0, 1, 0, -859915232, -859915232, 0 );
            }
        }
        if ( /* NIS_IS_SHOT_FINISHED */ sub_76094( ref l_U741, 1 ))
        {
             /* P_KILL_PED */ sub_76263( l_U514[2] );
            l_U126 = 1;
        }
        break;
        case 15:
        if (l_U124)
        {
            l_U472 = 1;
        }
        if ((l_U529) AND (NOT l_U528))
        {
             /* P_EX_START_VIG_05_RP_CAM */ sub_76385();
             /* WRITESCRIPTLOG */ sub_718( "GA", "Playing audio music one shot ROOFTOP_ONESHOT_RODRIGO_VAN", 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
            l_U528 = 1;
        }
        if ( /* F_EX_SPAWN_V5_PEDS */ sub_74157())
        {
            if (NOT l_U529)
            {
                 /* P_EX_START_VIG_05_RP_SEQ */ sub_76886();
                 /* CREATETIMER */ sub_2697( ref l_U543, l_U552, 1, 0 );
                 /* STARTTIMER */ sub_2847( ref l_U543 );
                l_U529 = 1;
            }
        }
        if ( /* ISTIMERDONE */ sub_2980( ref l_U543 ))
        {
            PLAY_IMAGEFX( "FLICKER_VIBRATE_LONG", 4, 0 );
            PLAY_IMAGEFX( "FLICKER_VIBRATE_LONG", 4, 0 );
            PLAY_IMAGEFX( "FLICKER_VIBRATE_LONG", 4, 0 );
             /* CREATETIMER */ sub_2697( ref l_U553, l_U562, 1, 0 );
             /* STARTTIMER */ sub_2847( ref l_U553 );
        }
        if ( /* ISTIMERDONE */ sub_2980( ref l_U553 ))
        {
            PLAY_IMAGEFX( "FLASH_RED", 4, 0 );
        }
        if ( /* ISTIMERDONE */ sub_2980( ref l_U534 ))
        {
             /* P_EX_START_V5_ENEMIES_RUNNING */ sub_77942();
        }
        if (NOT l_U532)
        {
            if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_ROOFTOP_CP_07", "MID_09C_RP_CAM" )) - 1))
            {
                 /* P_EX_VIG_05_RP_CAM_TO_GAMEPLAY */ sub_78632();
                l_U532 = 1;
            }
        }
        if ((NOT l_U533) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() ))))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS(  /* PLAYER_PED_ID */ sub_1677(), 56 )) == 3)
            {
                 /* WRITESCRIPTLOG */ sub_718( "GA", "Putting Max into shootdodge.", 0 );
                TASK_SHOOTDODGE(  /* PLAYER_PED_ID */ sub_1677(), 1, 0, 0 );
                PED_FINISH_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_1677(), 56 );
                l_U533 = 1;
            }
        }
        if ((l_U532) AND (l_U533))
        {
            l_U123 = 16;
             /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_EX_GP_RODRIGO_CHASED", 0 );
        }
        break;
        case 16:
        if (l_U124)
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
             /* NIS_POST_SETUP */ sub_57206( 1, 1 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
            {
                CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_1677() );
            }
             /* P_EX_START_VAN_MPM */ sub_62891();
            SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 1 );
        }
        if (NOT IS_BULLET_CAMERA_ACTIVE())
        {
            if ( /* ISTIMERDONE */ sub_2980( ref l_U519 ))
            {
                 /* P_EX_END_VAN_MPM */ sub_63539();
                SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 0 );
                 /* P_EX_V5_SHOOT_RODR */ sub_75600();
            }
        }
        if (IS_PED_DEAD( l_U514[0] ))
        {
            if (NOT (IS_PED_DEAD( l_U514[1] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( l_U514[1] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( l_U514[1], 1 );
                }
            }
        }
        else if (IS_PED_DEAD( l_U514[1] ))
        {
            if (NOT (IS_PED_DEAD( l_U514[0] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( l_U514[0] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( l_U514[0], 1 );
                }
            }
        }
        if ((IS_PED_DEAD( l_U514[1] )) AND ((IS_PED_DEAD( l_U514[0] )) AND (NOT l_U563)))
        {
             /* WRITESCRIPTLOG */ sub_718( "GA", "Starting ROOFTOP_SONG_03 music track with ROOFTOP_SONG_03_1 mood. Fade in 5 sec", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "ROOFTOP_SONG_03", "ROOFTOP_SONG_03_1", "", 0.00000000, 5000, -1, -1082130432, 0 );
            l_U563 = 1;
        }
        if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND ((IS_PED_DEAD( l_U514[1] )) AND (IS_PED_DEAD( l_U514[0] ))))
        {
             /* P_EX_END_VAN_MPM */ sub_63539();
            SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 0 );
            SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
            if (IS_ARCADE_MODE_ACTIVE())
            {
                DISPLAY_ARCADE_MODE_LEVEL_END( "s_club" );
                l_U123 = 0;
                 /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_IDLE", 0 );
            }
            else
            {
                l_U123 = 17;
                 /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_EX_LOAD_01_03_RP", 0 );
            }
        }
        break;
        case 17:
        if (l_U124)
        {
             /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_80032( -674073824, ref g_U821 );
             /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_80032( -1522400210, ref g_U821 );
             /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_80032( 1071653504, ref g_U821 );
             /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_67906( "LEVEL_S_FAS_00", ref g_U1028 );
             /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_67906( "DAM_DEAD", ref g_U1028 );
             /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_67906( "LEVEL_S_ROOFTOP_CP_07", ref g_U1028 );
             /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_67906( "LEVEL_S_ROOFTOP_CP_08", ref g_U1028 );
             /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_67906( "LEVEL_S_CEM_CP_02", ref g_U1028 );
             /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_67906( "veh@std", ref g_U1028 );
             /* CLEANPEDARRAY */ sub_8111( ref l_U864 );
             /* CLEANVEHICLEARRAY */ sub_8331( ref g_U1288 );
        }
        if (CUTSCENE_IS_LOADED( "01_03_rp_concat" ))
        {
            l_U123 = 18;
             /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_EX_HANDLE_01_03_RP", 0 );
        }
        else if (CUTSCENE_NAMED_IS_LOADING( "01_03_rp_concat" ))
        {
             /* WRITESCRIPTLOG */ sub_718( "GA", "Waiting for cutscene 01_03_rp_concat to load.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_718( "GA", "Requesting cutscene 01_03_rp_concat to load.", 0 );
            PRE_STREAM_SEAMLESS_CUTSCENE( "01_03_rp_concat" );
        }
        break;
        case 18:
        if (l_U124)
        {
            if ( /* F_IS_TUTORIAL_LEVEL */ sub_69904())
            {
                SET_TUTORIAL_COMPLETE();
            }
             /* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ sub_54725( ref l_U872, "01_03_rp_concat", 81012, 81860, 82841, 51546, 83246, 83300, 0, 1 );
            l_U872._fU4 = 2;
        }
        if ( /* CUTSYS_HANDLECUTSCENE */ sub_55391( ref l_U872 ))
        {
            l_U123 = 19;
             /* WRITESCRIPTLOG */ sub_718( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 19:
        SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 1 );
        SWITCH_TO_LEVEL_NAME( "s_clubride" );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U123 = 0;
         /* WRITESCRIPTLOG */ sub_718( "SP", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    if (l_U123 != iVar2)
    {
        l_U124 = 1;
    }
    else
    {
        l_U124 = 0;
    }
    return;
}

/* P_PED_ARRAY_Z_SAFETY_CHECK */ void sub_13985(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_PED_Z_SAFETY_CHECK */ sub_14051( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_PED_Z_SAFETY_CHECK */ void sub_14051(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                 /* CLEANPED */ sub_8161( uParam0 );
            }
        }
    }
    return;
}

/* P_HANDLE_VEHICLE_CHALLENGES */ void sub_14204(unknown uParam0, unknown uParam1)
{
    int J;
    int I;
    int iVar6;

    for ( J = 0; J <= ((uParam0^) - 1); J++ )
    {
        for ( I = 0; I <= 5; I++ )
        {
            if (NOT (uParam1^)[J])
            {
                if (NOT (IS_VEHICLE_DEAD( (uParam0^)[J] )))
                {
                    if (IS_VEHICLE_TYRE_BURST( (uParam0^)[J], I ))
                    {
                        (uParam1^)[J] = 1;
                        DISPLAYF( "[CCB] ### The vehicle {} tire {} was popped... ###", 2, 513, J, 513, I );
                        iVar6 = (SCRIPT_VAR_HASH_GET_INT( -1911384788 )) + 1;
                        SCRIPT_VAR_HASH_SET_INT( -1911384788, iVar6 );
                        DISPLAYF( "[CCB] ### The current TiresPopped value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -1911384788 ) );
                    }
                }
            }
        }
    }
    return;
}

/* P_HANDLE_SP_CHALLENGES */ void sub_14554()
{
    switch (l_U960)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_718( "CCB", "eOldPainless - STATE_CHALLENGE_IDLE", 0 );
        l_U960 = 1;
        break;
        case 1:
        if (l_U123 >= 17)
        {
            if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
            {
                SCRIPT_VAR_HASH_SET_INT( 1701971384, 1 );
                DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_718( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
            }
             /* WRITESCRIPTLOG */ sub_718( "CCB", "eOldPainless - STATE_CHALLENGE_COMPLETE", 0 );
            l_U960 = 2;
        }
        break;
        case 2: break;
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_15184()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U124 = 1;
    l_U191 = 0;
    l_U192 = 0;
     /* CREATETIMER */ sub_2697( ref l_U226, l_U225, 1, 0 );
     /* CREATETIMER */ sub_2697( ref l_U172, l_U171, 1, 0 );
    l_U237 = 0;
    l_U238 = 0;
    l_U317 = 0;
     /* CREATETIMER */ sub_2697( ref l_U320, l_U319, 1, 0 );
     /* CREATETIMER */ sub_2697( ref l_U329, 4000, 1, 0 );
     /* CREATETIMER */ sub_2697( ref l_U338, 1000, 1, 0 );
     /* CREATETIMER */ sub_2697( ref l_U347, 2000, 1, 0 );
     /* CREATETIMER */ sub_2697( ref l_U396, GET_RANDOM_INT_IN_RANGE( l_U394, l_U395 ), 1, 0 );
     /* CREATETIMER */ sub_2697( ref l_U406, l_U405, 1, 0 );
     /* CREATETIMER */ sub_2697( ref l_U415, 1000, 1, 0 );
     /* CREATETIMER */ sub_2697( ref l_U434, 12000, 1, 0 );
     /* CREATETIMER */ sub_2697( ref l_U453, 30000, 1, 0 );
    l_U472 = 0;
    l_U473 = 0;
    l_U528 = 0;
    l_U529 = 0;
     /* CREATETIMER */ sub_2697( ref l_U519, l_U518, 1, 0 );
    l_U563 = 0;
     /* CREATETIMER */ sub_2697( ref l_U534, 1500, 1, 0 );
    l_U532 = 0;
    l_U533 = 0;
    l_U740 = 0;
     /* NIS_CREATE_STATIC_CAM */ sub_15605( ref l_U741, 12.65000000, 66.82000000, -57.70000000, -21.67000000, 0.00000000, 102.98000000, 45.00000000, l_U772 + 500 );
     /* CREATETIMER */ sub_2697( ref l_U773, l_U772, 1, 0 );
    l_U809 = 0;
    l_U810 = 0;
    l_U869 = 0;
    l_U899 = 0;
    l_U900 = 0;
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_15605(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_2697( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U649, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* P_SET_STATIC_DATA */ void sub_15932()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_SET_STATIC_DATA start", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U574[0], -9.89000000, 93.73000000, -60.60000000, 42.00000000, -1550329440, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U574[1], -10.12000000, 82.27000000, -60.60000000, 155.00000000, -1262110880, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U574[2], -12.63000000, 85.96000000, -60.60000000, 4.99999000, 2081133087, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U574[3], -17.20000000, 89.39000000, -60.60000000, 120.00000000, 1511481962, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U574[4], -0.52000000, 68.85000000, -60.60000000, -90.00000000, -2059862796, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U574[5], -3.65000000, 71.33000000, -60.60000000, 180.00000000, 1065080950, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U653[0], -3.65000000, 73.18000000, -60.60000000, -165.00000000, 729226934, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U653[1], -14.56000000, 75.78000000, -60.60000000, -65.00000000, -1730416413, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U653[2], -9.06000000, 75.58000000, -60.60000000, 0.00000000, -730930695, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U653[3], -15.06000000, 68.99000000, -60.60000000, -90.00000000, 1339277097, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U653[4], -3.26000000, 62.77000000, -60.60000000, -55.00000000, -939193033, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U193[0], 14.85000000, 65.30000000, -60.78300000, -90.00000000, 2012628874, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U193[1], 14.60000000, 64.25000000, -60.78300000, -90.00000000, 269832974, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U239[0], 11.90000000, 65.50000000, -60.78300000, 45.00000000, -777779627, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U239[1], 14.60000000, 64.25000000, -60.78300000, -90.00000000, 269832974, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U239[2], 14.85000000, 65.30000000, -60.78300000, -90.00000000, 2012628874, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U239[3], 13.36000000, 65.80000000, -60.78300000, -90.00000000, -975914295, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U239[4], 13.16000000, 65.00000000, -60.78300000, -90.00000000, -1890849302, 26, 0, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U474[0], -10.63000000, 64.89000000, -60.80000000, -90.00000000, -975914295, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U474[1], -14.92000000, 61.49400000, -60.79900000, -316.00000000, -1546199977, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U474[2], 13.16000000, 65.00000000, -60.78300000, -90.00000000, -1890849302, 26, 0, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U811[0], 2.62200000, 70.00000000, -60.79490000, 67.27100000, -1890849302, 26, 0, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U811[1], 3.25500000, 69.60800000, -60.79490000, 74.30000000, -777779627, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U811[2], 7.30700000, 67.81100000, -60.79490000, 49.30000000, 269832974, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U811[3], 2.15000000, 70.93000000, -60.79490000, 81.98400000, 2012628874, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U901[0], 2.62200000, 70.00000000, -60.79490000, 67.27100000, 1494617230, 26, 0, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U901[1], -3.65000000, 73.18000000, -60.60000000, -165.00000000, 729226934, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U901[2], -14.56000000, 75.78000000, -60.60000000, -65.00000000, -1730416413, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_16038( ref l_U901[3], -14.56000000, 75.78000000, -60.60000000, -65.00000000, -730930695, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_17492( ref l_U719, "tb_EX_PlayerLeftParkingGarage", 29.42000000, 68.00000000, -60.80000000, 10.00000000, 15.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_17492( ref l_U366, "tb_EX_PlayerAtBackOfVan", 11.10000000, 65.40000000, -60.80000000, 2.00000000, 2.00000000, 4.00000000, 0.00000000, 0.00000000, -10.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_17755( ref l_U318, "teth_EX_ParkingExitArea", -2.58000000, 68.00000000, -60.80000000, 38.00000000, 20.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATEDOORSTRUCT */ sub_17873( ref l_U128[0], 165185988, -16.27658000, 53.91801000, -60.49547000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_17945( ref l_U128[0], 1 );
     /* P_CREATEDOORSTRUCT */ sub_17873( ref l_U128[1], -937562161, -13.87658000, 53.91801000, -60.49547000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_17945( ref l_U128[1], 1 );
     /* P_CREATEDOORSTRUCT */ sub_17873( ref l_U128[2], -937562161, -16.31178000, 59.90420000, -59.67923000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_17945( ref l_U128[2], 1 );
     /* P_CREATEDOORSTRUCT */ sub_17873( ref l_U128[3], 165185988, -13.91178000, 59.90420000, -59.67923000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_17945( ref l_U128[3], 1 );
     /* P_CREATEDOORSTRUCT */ sub_17873( ref l_U128[4], -937562161, 4.57178000, 57.96377000, -59.69566000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_17945( ref l_U128[4], 1 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_16038(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_17492(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_17755(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEDOORSTRUCT */ void sub_17873(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

/* P_SETDOORLOCKED */ void sub_17945(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_17975( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_18059( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_17975(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_18059(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_18494()
{
     /* WRITESCRIPTLOG */ sub_718( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U960 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1701971384 )))
    {
         /* WRITESCRIPTLOG */ sub_718( "CCB", "Creating the OldPainless script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1701971384 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
        if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "The OldPainless script variable was successfully created...", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_718( "CCB", "The OldPainless script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1701971384, 0 );
        DISPLAYF( "[CCB] ### The current OldPainless value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1701971384 ) );
    }
    return;
}

/* P_REQUEST_EX_PERSISTENT_ASSETS */ void sub_19209()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_REQUEST_EX_PERSISTENT_ASSETS start", 0 );
     /* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ sub_19310( ref l_U109, ref g_U821 );
     /* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ sub_22232( ref l_U120, ref g_U918 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_24276( "LEVEL_S_FAS_00", ref g_U1028 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_24276( "DAM_DEAD", ref g_U1028 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_24276( "LEVEL_S_ROOFTOP_CP_07", ref g_U1028 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_24276( "LEVEL_S_ROOFTOP_CP_08", ref g_U1028 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_24276( "LEVEL_S_CEM_CP_02", ref g_U1028 );
     /* P_STREAMREQ_ANIM_DICT_INSERT */ sub_24276( "veh@std", ref g_U1028 );
     /* P_STREAMREQ_ACTION_TREE_INSERT */ sub_26311( "VEHICLE/vehicle_car", ref g_U1146 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28225( l_U165, ref g_U1133 );
     /* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ sub_28225( l_U166, ref g_U1133 );
     /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_30257( "SCRIPT_MISSION\S_FASHION_TIRE_POPS", ref g_U1221 );
     /* P_STREAMREQ_AUDIO_BANK_INSERT */ sub_30257( "SCRIPT_MISSION\S_FASHION_VAN_STRUGGLE", ref g_U1221 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_REQUEST_EX_PERSISTENT_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT_ARRAY */ void sub_19310(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_INSERT */ sub_19383( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_MODELNAMES_INSERT */ void sub_19383(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 =  /* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ sub_19450( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar4 );
            PRINTNL();
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19708( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Inserting MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_INDEX_AVAILABLE */ int sub_19450(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19708( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is loading: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19708( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                     /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19708( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The MODEL_NAME is being requested: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21239( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The MODEL_NAME is being removed: {!f1} ###", 2, 1, -874832622, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19708( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The MODEL_NAME is already loaded: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ sub_19708( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_MODELNAMES_THREADID_SET_ID */ void sub_19708(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19769( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ int sub_19769(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else
        {
            DISPLAYF( "[CCB] ### The THREADID index is being used: {} ###", 1, 513, I );
            if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
            {
                DISPLAYF( "[CCB] ### The THREADID is active: {} ###", 1, 513, (uParam1^)[I] );
                if ((uParam1^)[I] == iParam0)
                {
                    DISPLAYF( "The THREADID was already requested by this thread!!!", 0 );
                    DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                    (uParam1^)[I] = nil;
                    Result = I;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The THREADID index was requested by another thread!!! {} ###", 1, 513, I );
                }
            }
            else
            {
                DISPLAYF( "[CCB] ### The THREADID is NOT active!!! {} ###", 1, 513, (uParam1^)[I] );
                DISPLAYF( "[CCB] ### Resetting the THREADID index value to NULL. {} ###", 1, 513, I );
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

/* P_STREAMREQ_THREADID_RESET */ void sub_21239(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT_ARRAY */ void sub_22232(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_INSERT */ sub_22306( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_INSERT */ void sub_22306(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ sub_22360( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22621( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_INDEX_AVAILABLE */ int sub_22360(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22621( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is loading: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22621( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The WEAPON_TYPE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22621( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The WEAPON_TYPE is being requested: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21239( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The WEAPON_TYPE is being removed: {!f1} ###", 2, 1, 199730165, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22621( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The WEAPON_TYPE is already loaded: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            DISPLAYF( "The WEAPON_TYPE asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing WEAPON_TYPE: {!f1} ###", 2, 1, 199730165, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ sub_22621( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_WEAPON_TYPE_THREADID_SET_ID */ void sub_22621(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19769( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ANIM_DICT_INSERT */ void sub_24276(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ sub_24328( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ANIM_DICT asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24580( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ANIM_DICT_IS_INDEX_AVAILABLE */ int sub_24328(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24580( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24580( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ANIM_DICT asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24580( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ANIM_DICT is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21239( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ANIM_DICT is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24580( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            DISPLAYF( "[CCB] ### The ANIM_DICT is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ANIM_DICT asset is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ANIM_DICT: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
             /* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ sub_24580( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ANIM_DICT_THREADID_SET_ID */ void sub_24580(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19769( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_INSERT */ void sub_26311(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ sub_26365( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing ACTION_TREE asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26623( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_ACTION_TREE_IS_INDEX_AVAILABLE */ int sub_26365(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26623( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26623( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_ACTION_TREE_LOADED( uParam0 ))
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The ACTION_TREE asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26623( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The ACTION_TREE is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The ACTION_TREE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21239( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The ACTION_TREE is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26623( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_ACTION_TREE_LOADED( uParam0 ))
        {
            DISPLAYF( "[CCB] ### The ACTION_TREE is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The ACTION_TREE is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing ACTION_TREE: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ sub_26623( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ACTION_TREE - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ACTION_TREE_THREADID_SET_ID */ void sub_26623(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19769( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ACTION_TREE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_INSERT */ void sub_28225(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ sub_28285( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING asset name: {} ###", 1, 513, uParam0 );
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
         /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_28555( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_INDEX_AVAILABLE */ int sub_28285(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_28555( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is loading: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_28555( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The VEHICLE_RECORDING asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_28555( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being requested: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21239( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is being removed: {} ###", 1, 513, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_28555( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            DISPLAYF( "[CCB] ### The VEHICLE_RECORDING is already loaded: {} ###", 1, 513, iParam0 );
            DISPLAYF( "The VEHICLE_RECORDING is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing VEHICLE_RECORDING: {} ###", 1, 513, iParam0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
             /* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ sub_28555( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_VEHICLE_RECORDING_THREADID_SET_ID */ void sub_28555(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19769( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_INSERT */ void sub_30257(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ sub_30310( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing AUDIO_BANK asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
         /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_30565( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_AUDIO_BANK_IS_INDEX_AVAILABLE */ int sub_30310(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_30565( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_30565( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The AUDIO_BANK asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_30565( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    DISPLAYF( "[CCB] ### The AUDIO_BANK is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                     /* P_STREAMREQ_THREADID_RESET */ sub_21239( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The AUDIO_BANK is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_30565( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            DISPLAYF( "[CCB] ### The AUDIO_BANK is already loaded: {} ###", 1, 1537, uParam0 );
            DISPLAYF( "The AUDIO_BANK is already loaded, but the asset status flag was not set!!!", 0 );
            DISPLAYF( "[CCB] ### Storing AUDIO_BANK: {} ###", 1, 1537, uParam0 );
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
             /* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ sub_30565( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_AUDIO_BANK_THREADID_SET_ID */ void sub_30565(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19769( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_REQUEST_EX_NONPERSISTENT_ASSETS */ void sub_32256()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_REQUEST_EX_NONPERSISTENT_ASSETS start", 0 );
    if ((l_U125) AND (g_U722 != 7))
    {
         /* LOADSEAMLESSCUTSCENE */ sub_32393( "MID_09_RP_concat", 0 );
    }
     /* P_STREAMREQ_ISEQ_INSERT */ sub_32742( 1850370443, ref g_U967 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_32742( -1310687981, ref g_U967 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_32742( -206765881, ref g_U967 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_32742( 218169473, ref g_U967 );
     /* P_STREAMREQ_ISEQ_INSERT */ sub_32742( -923981292, ref g_U967 );
     /* P_STREAMREQ_SCRIPT_STREAM_INSERT */ sub_35619( "S_FASHION_VAN_START", ref g_U1168 );
     /* P_STREAMREQ_SCRIPT_STREAM_INSERT */ sub_35619( "S_FASHION_VAN_SUCCESS", ref g_U1168 );
     /* P_STREAMREQ_SCRIPT_STREAM_INSERT */ sub_35619( "S_FASHION_VAN_ROD_EXIT", ref g_U1168 );
    AUDIO_MUSIC_REQUEST_ONESHOT( "ROOFTOP_ONESHOT_08", 0 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_REQUEST_EX_NONPERSISTENT_ASSETS end", 0 );
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_32393(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* P_STREAMREQ_ISEQ_INSERT */ void sub_32742(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 =  /* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ sub_32803( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
            PRINTINT( iVar12 );
            PRINTNL();
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar4 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
             /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_33053( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

/* F_STREAMREQ_ISEQ_IS_INDEX_AVAILABLE */ int sub_32803(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_33053( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is loading: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_33053( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                        DISPLAYF( "The ISEQ asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_33053( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is already loading: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                         /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_33053( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### Re-requesting ISEQ: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_21239( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        DISPLAYF( "[CCB] ### The ISEQ is being requested: {} ###", 1, 1281, ref uVar5 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_21239( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                DISPLAYF( "[CCB] ### The ISEQ is being removed: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_33053( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                DISPLAYF( "[CCB] ### The ISEQ is already loaded: {} ###", 1, 1281, ref uVar5 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing ISEQ: {} ###", 1, 1281, ref uVar5 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                 /* P_STREAMREQ_ISEQ_THREADID_SET_ID */ sub_33053( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_ISEQ_THREADID_SET_ID */ void sub_33053(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19769( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_INSERT */ void sub_35619(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ sub_35675( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        DISPLAYF( "[CCB] ### Found NULL array index: ###", 0 );
        PRINTINT( iVar4 );
        PRINTNL();
        DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM asset name: {} ###", 1, 1537, uParam0 );
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_35939( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_INDEX_AVAILABLE */ int sub_35675(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_35939( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is loading: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_35939( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                         /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_35939( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being requested: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                         /* P_STREAMREQ_THREADID_RESET */ sub_21239( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                    DISPLAYF( "The SCRIPT_STREAM asset is already loaded!!!", 0 );
                     /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_35939( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is being removed: {} ###", 1, 1281, ref (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_35939( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                DISPLAYF( "[CCB] ### The SCRIPT_STREAM is already loaded: {} ###", 1, 1537, uParam0 );
                DISPLAYF( "The SCRIPT_STREAM asset is already loaded, but the asset status flag was not set!!!", 0 );
                DISPLAYF( "[CCB] ### Storing SCRIPT_STREAM: {} ###", 1, 1537, uParam0 );
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                 /* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ sub_35939( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

/* P_STREAMREQ_SCRIPT_STREAM_THREADID_SET_ID */ void sub_35939(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_INSERT */ sub_19769( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        DISPLAYF( "[CCB] ### Storing the THREADID: {} ###", 1, 513, uParam2 );
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

/* F_STREAMREQ_MODELNAMES_IS_LOADED */ int sub_37983(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be requested: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to load: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for MODEL_NAME to be removed: {!f1}", 2, 1, -874832622, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_WEAPON_TYPE_IS_LOADED */ int sub_38380(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be requested: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to load: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for WEAPON_TYPE to be removed: {!f1}", 2, 1, 199730165, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ANIM_DICT_IS_LOADED */ int sub_38782(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be requested: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to load: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the ANIM_DICT to be removed: {} ###", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_ISEQ_IS_LOADED */ int sub_39173(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be requested: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to load: {} ###", 1, 1281, ref uVar3 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            DISPLAYF( "[CCB]### Waiting for the ISEQ to be removed: {} ###", 1, 1281, ref uVar3 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_VEHICLE_RECORDING_IS_LOADED */ int sub_39587(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be requested: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to load: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            DISPLAYF( "[CCB]### Waiting for the VEHICLE_RECORDING to be removed: {} ###", 1, 513, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_SCRIPT_STREAM_IS_LOADED */ int sub_40007(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for SCRIPT_STREAM to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* F_STREAMREQ_AUDIO_BANK_IS_LOADED */ int sub_40393(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be requested: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to load: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            DISPLAYF( "[CCB] ### Waiting for AUDIO_BANK to be removed: {}", 1, 1281, ref (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

/* HAS_SAVEFILE_LOADED */ int sub_41035(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_718( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_9250( uParam0,  /* PLAYER_PED_ID */ sub_1677() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_GLOBAL_CREATE_ROOFTOP_LEVEL1_VEHICLES */ void sub_41571()
{
    int I;

     /* WRITESCRIPTLOG */ sub_718( "CCB", "P_GLOBAL_CREATE_ROOFTOP_LEVEL1_VEHICLES", 0 );
    for ( I = 0; I <= (g_U1288 - 1); I++ )
    {
        if (NOT (DOES_VEHICLE_EXIST( g_U1288[I] )))
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "Creating viRooftopLevel1Vehicle_:", 0 );
            PRINTINT( I );
            PRINTNL();
            g_U1288[I] =  /* CREATEVEHICLE */ sub_41812( g_U1293[I], g_U1439[I], g_U1558[I], 0, 0, 0 );
             /* P_GLOBAL_SETUP_ROOFTOP_LEVEL1_VEHICLE */ sub_42375( ref g_U1288, I );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "The viRooftopLevel1Vehicle_ ped was already created.", 0 );
        }
    }
    return;
}

/* CREATEVEHICLE */ void sub_41812(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_41939( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* LOADMODEL */ void sub_41939(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_11351( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_GLOBAL_SETUP_ROOFTOP_LEVEL1_VEHICLE */ void sub_42375(unknown uParam0, int iParam1)
{
    if (NOT (IS_VEHICLE_DEAD( (uParam0^)[iParam1] )))
    {
        SET_ROOM_FOR_VEHICLE_BY_NAME( (uParam0^)[iParam1], ref g_U1611 );
        SET_VEHICLE_ON_GROUND_PROPERLY( (uParam0^)[iParam1] );
        SET_VEHICLE_FREEZE_AFTER_BLOWING_UP( (uParam0^)[iParam1], 1 );
        SET_VEHICLE_PROOFS( (uParam0^)[iParam1], 0, 0, 1, 0, 0 );
        SET_VEHICLE_CAN_BE_DAMAGED( (uParam0^)[iParam1], 1 );
        SET_VEHICLE_ONLY_DAMAGED_BY_PLAYER( (uParam0^)[iParam1], 1 );
        SET_VEHICLE_ENGINE_HEALTH( (uParam0^)[iParam1], 600.00000000 );
        SET_VEHICLE_PETROL_TANK_HEALTH( (uParam0^)[iParam1], 300.00000000 );
        SET_VEHICLE_DOORS_LOCKED( (uParam0^)[iParam1], 3 );
        SET_VEHICLE_LIGHTS( (uParam0^)[iParam1], 1 );
        if (iParam1 == 1)
        {
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 1, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 2, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 3, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 4, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 5, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 6, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 7, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 8, 1 );
            SET_VEHICLE_COLOUR_COMBINATION( (uParam0^)[iParam1], 2 );
        }
    }
    return;
}

/* P_GLOBAL_CREATE_ROOFTOP_EXIT_VEHICLES */ void sub_42861()
{
    int I;

     /* WRITESCRIPTLOG */ sub_718( "CCB", "P_GLOBAL_CREATE_ROOFTOP_EXIT_VEHICLES", 0 );
    for ( I = 0; I <= (g_U1291 - 1); I++ )
    {
        if (NOT (DOES_VEHICLE_EXIST( g_U1291[I] )))
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "Creating viRooftopExitVehicle_:", 0 );
            PRINTINT( I );
            PRINTNL();
            g_U1291[I] =  /* CREATEVEHICLE */ sub_41812( g_U1296[I], g_U1446[I], g_U1561[I], 0, 0, 0 );
             /* P_GLOBAL_SETUP_ROOFTOP_EXIT_VEHICLE */ sub_43116( ref g_U1291, I );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "The viRooftopExitVehicle_ ped was already created.", 0 );
        }
    }
    return;
}

/* P_GLOBAL_SETUP_ROOFTOP_EXIT_VEHICLE */ void sub_43116(unknown uParam0, int iParam1)
{
    if (NOT (IS_VEHICLE_DEAD( (uParam0^)[iParam1] )))
    {
        SET_ROOM_FOR_VEHICLE_BY_NAME( (uParam0^)[iParam1], ref g_U1611 );
        SET_VEHICLE_ON_GROUND_PROPERLY( (uParam0^)[iParam1] );
        SET_VEHICLE_FREEZE_AFTER_BLOWING_UP( (uParam0^)[iParam1], 1 );
        SET_VEHICLE_PROOFS( (uParam0^)[iParam1], 0, 0, 1, 0, 0 );
        SET_VEHICLE_CAN_BE_DAMAGED( (uParam0^)[iParam1], 1 );
        SET_VEHICLE_ONLY_DAMAGED_BY_PLAYER( (uParam0^)[iParam1], 1 );
        SET_VEHICLE_ENGINE_HEALTH( (uParam0^)[iParam1], 600.00000000 );
        SET_VEHICLE_PETROL_TANK_HEALTH( (uParam0^)[iParam1], 300.00000000 );
        SET_VEHICLE_DOORS_LOCKED( (uParam0^)[iParam1], 3 );
        SET_VEHICLE_LIGHTS( (uParam0^)[iParam1], 1 );
        if (iParam1 == 0)
        {
            SET_VEHICLE_ENGINE_CAN_BE_DAMAGED( (uParam0^)[iParam1], 0 );
            SET_VEHICLE_COLOUR_COMBINATION( (uParam0^)[iParam1], 2 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 1, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 2, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 3, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 4, 1 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 5, 0 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 6, 0 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 7, 0 );
            SET_VEHICLE_EXTRA( (uParam0^)[iParam1], 8, 0 );
        }
    }
    return;
}

/* P_EX_CREATE_DEAD_BODIES */ void sub_43985()
{
    int[6] iVar2;
    int I;
    int[5] iVar10;

     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_CREATE_DEAD_BODIES start", 0 );
    array(ref iVar2, 6);
    iVar2[0] = 3;
    iVar2[1] = 7;
    iVar2[2] = 11;
    iVar2[3] = 12;
    iVar2[4] = 1;
    iVar2[5] = 8;
    for ( I = 0; I <= 5; I++ )
    {
        if (NOT (DOES_PED_EXIST( g_U1684[I] )))
        {
            g_U1684[I] =  /* CREATEPED */ sub_44150( ref l_U574[I] );
            if (NOT (IS_PED_DEAD( g_U1684[I] )))
            {
                SET_ROOM_FOR_PED_BY_NAME( g_U1684[I], ref g_U1611 );
                 /* P_GBL_CREATE_BLOOD_POOL_FOR_PED */ sub_44937( g_U1684[I], 1.00000000, 1082130432, 1101004800 );
                 /* P_CREATE_DEAD_BODY */ sub_45042( g_U1684[I], iVar2[I] );
            }
        }
    }
    array(ref iVar10, 5);
    iVar10[0] = 3;
    iVar10[1] = 7;
    iVar10[2] = 11;
    iVar10[3] = 12;
    iVar10[4] = 0;
    for ( I = 0; I <= 4; I++ )
    {
        if (NOT (DOES_PED_EXIST( g_U1691[I] )))
        {
            g_U1691[I] =  /* CREATEPED */ sub_44150( ref l_U653[I] );
            if (NOT (IS_PED_DEAD( g_U1691[I] )))
            {
                SET_ROOM_FOR_PED_BY_NAME( g_U1691[I], ref g_U1611 );
                 /* P_GBL_CREATE_BLOOD_POOL_FOR_PED */ sub_44937( g_U1691[I], 1.00000000, 1082130432, 1101004800 );
                 /* P_CREATE_DEAD_BODY */ sub_45042( g_U1691[I], iVar10[I] );
            }
        }
    }
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_CREATE_DEAD_BODIES end", 0 );
    return;
}

/* CREATEPED */ void sub_44150(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_41939( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_44641( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_44742( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_44641(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_44742(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_GBL_CREATE_BLOOD_POOL_FOR_PED */ void sub_44937(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        ADD_BLOOD_POOL( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 ), uParam1, uParam2, uParam3 );
    }
    return;
}

/* P_CREATE_DEAD_BODY */ void sub_45042(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
         /* WRITE_STRING */ sub_11351( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

/* F_EX_MID09_PRECUTSCENE */ int sub_46357()
{
    if (l_U782._fU52)
    {
        l_U809 = 1;
    }
    if ( /* F_EX_SPAWN_MID_09_PEDS */ sub_46412())
    {
        return 1;
    }
    return 0;
}

/* F_EX_SPAWN_MID_09_PEDS */ int sub_46412()
{
    switch (l_U809)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_M9_PedSpawnState = ENTITY_STATE_INIT", 0 );
        l_U810 = 0;
         /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_M9_PedSpawnState = ENTITY_STATE_INIT", 0 );
        l_U809 = 2;
        break;
        case 2:
        l_U864[l_U810] =  /* CREATEPED */ sub_44150( ref l_U811[l_U810] );
        if (NOT (IS_PED_DEAD( l_U864[l_U810] )))
        {
            if (l_U810 > 0)
            {
                 /* F_GIVEPEDWEAPON */ sub_11742( l_U864[l_U810], 68019059, 25000, 0, 0 );
            }
            SET_ROOM_FOR_PED_BY_NAME( l_U864[l_U810], ref g_U1611 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U864[l_U810], 1 );
        }
         /* P_DEACTIVATEPED */ sub_46758( l_U864[l_U810] );
        l_U810++;
        if (l_U810 >= 4)
        {
             /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_M9_PedSpawnState = ENTITY_STATE_POST_CREATE_SETUP", 0 );
            l_U809 = 3;
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_46995( ref l_U864, "pi_EX_M9_Ped" );
         /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_M9_PedSpawnState = ENTITY_STATE_COMPLETE", 0 );
        l_U809 = 4;
        break;
    }
    if (l_U809 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

/* P_DEACTIVATEPED */ void sub_46758(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_46995(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_EX_MID09_CUTSCENEREGISTRATION */ void sub_47243()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
    {
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_1677(), g_U1333[7], g_U1450[7] );
        ISEQ_REGISTER_ENTITY( 1850370443, "player",  /* PLAYER_PED_ID */ sub_1677(), 0 );
        CUTSCENE_REGISTER_ISEQ( 1850370443 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE(  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_47374(), "W_PI_PT92_Aa_H", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U864[0] )))
    {
         /* WRITESCRIPTLOG */ sub_718( "CCB", "Registering the piRodrigo ped.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U864[0], "RODR_SUIT", 1 );
    }
    if (NOT (IS_PED_DEAD( l_U864[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U864[1], "G_CS_KidN_A", 1 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U864[1], 0, 0 ) ))
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "Registering the pi_EX_M9_Ped[1] ped's weapon.", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U864[1], 0, 0 ), "W_PI_38_Ba_H", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "The pi_EX_M9_Ped[1] ped's weapon is NOT valid!!!", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U864[2] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U864[2], "G_CS_KidN_B", 1 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U864[2], 0, 0 ) ))
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "Registering the pi_EX_M9_Ped[2] ped's weapon.", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U864[2], 0, 0 ), "W_PI_38_Ba_H^1", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "The pi_EX_M9_Ped[2] ped's weapon is NOT valid!!!", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U864[3] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U864[3], "G_CS_KidN_C", 1 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U864[3], 0, 0 ) ))
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "Registering the pi_EX_M9_Ped[3] ped's weapon.", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U864[3], 0, 0 ), "W_PI_38_Ba_H^2", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "The pi_EX_M9_Ped[3] ped's weapon is NOT valid!!!", 0 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( g_U1291[0] )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U1291[0], "van_nyc", 0 );
        SET_VEHICLE_LIGHTS( g_U1291[0], 1 );
    }
    return;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_47374()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1677(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_47478( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1677(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1677(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1677(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_47478(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_EX_MID09_HANDLECUTSCENE */ void sub_48761()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    if (l_U782._fU52)
    {
         /* P_ACTIVATEPEDARRAY */ sub_48817( ref l_U864 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
         /* P_EX_CREATE_L1_GATE */ sub_49011( 1 );
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_49759( 1 );
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_49958( ref uVar2, 1, 1 );
         /* P_START_VEHICLE_PLAYBACK */ sub_51125( g_U1291[0], l_U165, 0.00000000, 0, 0 );
    }
    return;
}

/* P_ACTIVATEPEDARRAY */ void sub_48817(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_48869( (uParam0^)[I] );
    }
    return;
}

/* P_ACTIVATEPED */ void sub_48869(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* P_EX_CREATE_L1_GATE */ void sub_49011(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_CREATE_L1_GATE start", 0 );
    l_U164 =  /* CREATEOBJECT */ sub_49123( -1154707606, -11.57800000, 80.10500000, -60.80000000, 0.00000000, 0.00000000, -90.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U164 ))
    {
        FREEZE_OBJECT_POSITION( l_U164, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U164, ref g_U1611 );
        if (bParam0)
        {
            PLAY_OBJECT_ANIM( l_U164, "Parkade_Gate_OPEN", "LEVEL_S_FAS_00", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( l_U164, "Parkade_Gate_OPEN", "LEVEL_S_FAS_00", 1.00000000 );
        }
        else
        {
            PLAY_OBJECT_ANIM( l_U164, "Parkade_Gate_CLOSE", "LEVEL_S_FAS_00", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( l_U164, "Parkade_Gate_CLOSE", "LEVEL_S_FAS_00", 1.00000000 );
        }
    }
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_CREATE_L1_GATE end", 0 );
    return;
}

/* CREATEOBJECT */ void sub_49123(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_41939( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_49759(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1677(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_47478( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_47374();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1677(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_49958(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_49997( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1677(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_47478( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_50242( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1677(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1677(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1677(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1677(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1677(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1677(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1677(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1677(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1677(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_50242( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1677(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1677(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_1677(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_49997(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* IS_WEAPON_TWO_HANDED */ int sub_50242(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_START_VEHICLE_PLAYBACK */ void sub_51125(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3, boolean bParam4)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
    }
     /* LOADVEHICLERECORDING */ sub_51203( uParam1, 1 );
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
        SET_PLAYBACK_SPEED( uParam0, uParam2 );
        if (fParam3 > 0.00000000)
        {
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, fParam3 );
        }
    }
    if (bParam4)
    {
        while ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
        {
             /* WRITE_STRING */ sub_11351( "Waiting for vehicle to start playing recorded path." );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADVEHICLERECORDING */ void sub_51203(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a recording to be loaded: Rec# {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* CUTSYS_DEFAULT_POSTCUTSCENE */ int sub_51546()
{
    return 1;
}

/* P_EX_MID09_PREPAREBLENDOUT */ void sub_51595()
{
     /* CLEANPEDARRAY */ sub_8111( ref l_U864 );
    if ((NOT (ISEQ_QUERY_STATE( 1850370443, 3 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() ))))
    {
        ISEQ_REGISTER_ENTITY( 1850370443, "player",  /* PLAYER_PED_ID */ sub_1677(), 0 );
         /* TELEPORTPED */ sub_51726(  /* PLAYER_PED_ID */ sub_1677(), g_U1333[7], g_U1450[7] );
        ISEQ_START( 1850370443 );
    }
     /* P_START_VEHICLE_PLAYBACK */ sub_51125( g_U1291[0], l_U165, l_U167, 0, 0 );
     /* P_STREAMREQ_SCRIPT_STREAM_PLAY_FROM_VEHICLE */ sub_51868( g_U1291[0], "S_FASHION_VAN_START", ref g_U1168 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_ROOFTOP_CP_07", "B_OUT_MID_09_RP_FWD_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1486[7], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1522[7], 1065353216, 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1715() )))
    {
        SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1715(), 1, 0 );
    }
    l_U191 = 1;
     /* WRITESCRIPTLOG */ sub_718( "CCB", "Starting ROOFTOP_SONG_03 music track with ROOFTOP_SONG_03_1_4_5 mood.", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "ROOFTOP_SONG_03", "ROOFTOP_SONG_03_1_4_5", 0, 0, -1, -1, -1082130432, 0 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "Playing audio music one shot ROOFTOP_ONESHOT_08", 0 );
    AUDIO_MUSIC_PLAY_ONESHOT();
    if (NOT (IS_VEHICLE_DEAD( g_U1291[0] )))
    {
        SET_VEHICLE_LIGHTS( g_U1291[0], 2 );
    }
    return;
}

/* TELEPORTPED */ void sub_51726(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_PLAY_FROM_VEHICLE */ void sub_51868(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_4996( uParam1, uParam2 ))
    {
        iVar5 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_5205( uParam1, uParam2 );
        if (NOT (iVar5 == -1))
        {
            if (NOT (IS_VEHICLE_DEAD( uParam0 )))
            {
                DISPLAYF( "[CCB]### Playing the SCRIPT_STREAM from vehicle: {} ###", 1, 1281, ref (uParam2^)[iVar5]._fU0 );
                PLAY_SCRIPT_STREAM_FROM_VEHICLE( uParam0, iVar5 );
            }
            else
            {
                DISPLAYF( "The ped is NOT valid!!!", 0 );
            }
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam1 );
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam1 );
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* F_EX_MID09_HANDLEBLENDOUT */ int sub_52821()
{
    if (l_U782._fU52)
    {
        if (NOT ( /* F_IMAGEFX_FADE_IN */ sub_52873()))
        {
            DO_SCREEN_FADE_IN( 0 );
        }
    }
     /* P_EX_SPAWN_VAN_PASSENGERS */ sub_53122();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U1486[7], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U1522[7], 1065353216, 0 );
    SET_CAM_SIDE_LEFT( 0 );
    if ((IS_ANIMATED_CAMERA_PLAYING()) AND (NOT l_U869))
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_ROOFTOP_CP_07", "B_OUT_MID_09_RP_FWD_CAM" )) - l_U870))
        {
            CAMERA_ANIMATED_STOP( l_U871, 1 );
        }
    }
    if ((ISEQ_QUERY_ENTITY_STATE( 1850370443, "player", 6 )) || (ISEQ_QUERY_ENTITY_STATE( 1850370443, "player", 5 )))
    {
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
         /* WRITESCRIPTLOG */ sub_718( "GA", "Setting the player to running coming out of the MID_09_RP blendout.", 0 );
        SIMULATE_PLAYER_INPUT_GAIT(  /* PLAYER_ID */ sub_1715(), 3, 1500, 0 );
        if (NOT (IS_PED_DEAD( l_U220[0] )))
        {
            SET_PED_CAN_BE_TARGETTED( l_U220[0], 0 );
        }
        if (NOT (IS_PED_DEAD( l_U220[1] )))
        {
            SET_PED_CAN_BE_TARGETTED( l_U220[1], 0 );
        }
        return 1;
    }
    return 0;
}

/* F_IMAGEFX_FADE_IN */ int sub_52873()
{
    if (l_U71)
    {
         /* WRITESCRIPTLOG */ sub_718( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U71 = 0;
        return 1;
        break;
    }
     /* WRITESCRIPTLOG */ sub_718( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

/* P_EX_SPAWN_VAN_PASSENGERS */ void sub_53122()
{
    switch (l_U191)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_VanPassengerSpawnState = ENTITY_STATE_INIT", 0 );
        l_U192 = 0;
         /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_VanPassengerSpawnState = ENTITY_STATE_CREATING", 0 );
        l_U191 = 2;
        break;
        case 2:
        if (NOT (IS_VEHICLE_DEAD( g_U1291[0] )))
        {
            if (l_U192 == 0)
            {
                l_U220[l_U192] =  /* CREATEPEDINVEHICLE */ sub_53394( ref l_U193[l_U192], g_U1291[0], -1, 0, 0 );
            }
            else
            {
                l_U220[l_U192] =  /* CREATEPEDINVEHICLE */ sub_53394( ref l_U193[l_U192], g_U1291[0], 0, 0, 0 );
            }
        }
        if (NOT (IS_PED_DEAD( l_U220[l_U192] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U220[l_U192], 1 );
            SET_ROOM_FOR_PED_BY_NAME( l_U220[l_U192], ref g_U1611 );
        }
        l_U192++;
        if (l_U192 >= 2)
        {
             /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_VanPassengerSpawnState = ENTITY_STATE_POST_CREATE_SETUP", 0 );
            l_U191 = 3;
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_46995( ref l_U220, "pi_EX_VanPassenger" );
         /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_VanPassengerSpawnState = ENTITY_STATE_COMPLETE", 0 );
        l_U191 = 4;
        break;
    }
    return;
}

/* CREATEPEDINVEHICLE */ void sub_53394(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4)
{
    if ((HAS_MODEL_LOADED( iParam0->_fU16 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_41939( iParam0->_fU16, 1 );
    }
    if (((IS_VEHICLE_DEAD( uParam1 )) == 0) AND ((DOES_VEHICLE_EXIST( uParam1 )) == 1))
    {
        iParam0->_fU40 = CREATE_PED_INSIDE_VEHICLE( uParam1, iParam0->_fU24, iParam0->_fU16, uParam2, uParam4, iParam0->_fU48 );
    }
    else
    {
        SCRIPT_ASSERT( "The vehicle your trying to create a ped inside of is not valid!!!", 0 );
    }
    if (iParam3 == 1)
    {
        while ((DOES_PED_EXIST( iParam0->_fU40 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for ped created inside a vehicle to exist... ###", 0 );
            WAIT( 0 );
        }
    }
     /* SETPEDDEFAULTSTATS */ sub_44641( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_44742( iParam0->_fU40 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        iParam0->_fU44 = 1;
    }
    return iParam0->_fU40;
}

/* CUTSYS_CREATECUTSCENEWITHBLENDOUT */ void sub_54725(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
     /* WRITESCRIPTLOG */ sub_718( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return  /* CUTSYS_PRIVATE_CREATECUTSCENE */ sub_54949( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 54846, 54896, uParam8 );
}

/* CUTSYS_DEFAULT_PREPAREBLENDIN */ void sub_54846()
{
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDIN */ int sub_54896()
{
    return 1;
}

/* CUTSYS_PRIVATE_CREATECUTSCENE */ void sub_54949(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

/* CUTSYS_SETCUTSCENELOADINTERIORONSKIP */ void sub_55277(int iParam0, unknown uParam1, unknown uParam2)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 1;
    iParam0->_fU76 = uParam1;
    iParam0->_fU80 = uParam2;
    iParam0->_fU24 = 1;
    return;
}

/* CUTSYS_HANDLECUTSCENE */ void sub_55391(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
             /* WRITESCRIPTLOG */ sub_718( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
             /* WRITESCRIPTLOG */ sub_718( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                 /* WRITESCRIPTLOG */ sub_718( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
             /* WRITESCRIPTLOG */ sub_718( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
             /* WRITESCRIPTLOG */ sub_718( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
             /* WRITESCRIPTLOG */ sub_718( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
             /* LOADSEAMLESSCUTSCENE */ sub_32393( iParam0->_fU0, 0 );
             /* WRITESCRIPTLOG */ sub_718( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
             /* NIS_PRE_SETUP */ sub_56282( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
         /* NIS_PRE_SETUP */ sub_56282( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
         /* WRITESCRIPTLOG */ sub_718( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                 /* P_SET_PLAYER_WEAPONS_VISIBLE */ sub_56826( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
         /* NIS_PRE_SETUP */ sub_56282( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
             /* NIS_POST_SETUP */ sub_57206( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
         /* NIS_POST_SETUP */ sub_57206( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

/* NIS_PRE_SETUP */ void sub_56282(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1715(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1677(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_1677() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1677(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_SET_PLAYER_WEAPONS_VISIBLE */ void sub_56826(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1677(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1677(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1677(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1677(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_1677(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

/* NIS_POST_SETUP */ void sub_57206(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1715(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_1677(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_57304();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_57304()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1677(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_1677(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1677(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_1677(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_57661(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_718( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_718( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_12516( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_57952( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_58429( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_58429( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_58689( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_58429( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_58689( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_58689( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_58429( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_58689( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_58689( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_58689( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_58429( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_58689( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_58689( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_58689( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_58689( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_60269( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_718( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_57952(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_9531( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_718( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_718( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_58429(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_58689(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_60269(int iParam0)
{
     /* WRITE_STRING */ sub_11351( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_60357( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_60434( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_60434( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_60434( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_60434( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_60434( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_61304( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU52 );
     /* WRITE_STRING */ sub_11351( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU96 );
     /* WRITE_STRING */ sub_11351( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU100 );
     /* WRITE_STRING */ sub_11351( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU104 );
     /* WRITE_STRING */ sub_11351( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU108 );
     /* WRITE_STRING */ sub_11351( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU112 );
     /* WRITE_STRING */ sub_11351( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU116 );
     /* WRITE_STRING */ sub_11351( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU120 );
     /* WRITE_STRING */ sub_11351( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU124 );
     /* WRITE_STRING */ sub_11351( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU128 );
     /* WRITE_STRING */ sub_11351( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_60603( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_60603( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_60603( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_60357(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_60434(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_60603(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_61304(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_START_SP_CHALLENGES */ void sub_62275()
{
     /* WRITESCRIPTLOG */ sub_718( "CCB", "P_START_SP_CHALLENGES", 0 );
    if (g_U722 == 7)
    {
         /* WRITESCRIPTLOG */ sub_718( "CCB", "Starting the Rooftop_Party_Parkade context...", 0 );
        START_CONTEXT( "Rooftop_Party_Parkade" );
        if (SCRIPT_VAR_HASH_EXISTS( -1911384788 ))
        {
            SCRIPT_VAR_HASH_SET_INT( -1911384788, 0 );
            DISPLAYF( "[CCB] ### The current TiresPopped value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( -1911384788 ) );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "The TiresPopped script variable is NOT valid!!!", 0 );
        }
        if (SCRIPT_VAR_HASH_EXISTS( 1016076860 ))
        {
            SCRIPT_VAR_HASH_SET_INT( 1016076860, 0 );
            DISPLAYF( "[CCB] ### The current VehiclesDestroyed value is: {} ###", 1, 513, SCRIPT_VAR_HASH_GET_INT( 1016076860 ) );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_718( "CCB", "The VehiclesDestroyed script variable is NOT valid!!!", 0 );
        }
    }
    return;
}

/* P_EX_START_VAN_MPM */ void sub_62891()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_VAN_MPM start", 0 );
    if (GET_ADRENALINE_AMT() < 0.10000000)
    {
        SET_ADRENALINE_AMT( 0.10000000 );
    }
    ACTIVATE_BULLET_TIME( 0, l_U170, 1 );
    SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_1677(), 0 );
    DISPLAY_HUD( 0 );
    ENABLE_CROSSHAIR( 1 );
    SET_SILHOUETTE_ACTIVE( 0 );
    SET_CROSSHAIR_PULSE();
    ENABLE_MPM( 1 );
    ENABLE_ALL_ADRENALINE( 0 );
    if (NOT (IS_VEHICLE_DEAD( g_U1291[0] )))
    {
        SET_PLAYBACK_SPEED( g_U1291[0], l_U169 );
    }
    CAMERA_CAN_TARGET_TIRES( 1 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_VAN_MPM end", 0 );
    return;
}

/* F_HAS_VEHICLE_REACHED_PATH_MARK */ void sub_63175(unknown uParam0, int iParam1, float fParam2)
{
    int Result;

    Result = 0;
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            if ((GET_CURRENT_PLAYBACK_NUMBER_FOR_VEHICLE( uParam0 )) == iParam1)
            {
                if ((GET_TIME_POSITION_IN_RECORDING( uParam0 )) >= fParam2)
                {
                    Result = 1;
                }
            }
        }
    }
    return Result;
}

/* P_EX_END_VAN_MPM */ void sub_63539()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_END_VAN_MPM start", 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_1677(), 1 );
    ENABLE_CROSSHAIR( 0 );
    DISPLAY_HUD( 0 );
    SET_SILHOUETTE_ACTIVE( 1 );
    ENABLE_MPM( 0 );
    ENABLE_ALL_ADRENALINE( 1 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1715() )))
    {
        SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1715(), 0, 0 );
    }
    CAMERA_CAN_TARGET_TIRES( 0 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_END_VAN_MPM end", 0 );
    return;
}

/* P_EX_START_VAN_ESCAPE_NIS */ void sub_63748()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_VAN_ESCAPE_NIS start", 0 );
     /* NIS_PRE_SETUP */ sub_56282( 1, 0, 0, 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_ROOFTOP_CP_08", "VIG_05_VAN_ESCAPE_CAM", 0, 0, 0, 0, 0.00000000, 0, l_U223 );
     /* P_IMAGEFX_START_BULLETCAM */ sub_63942( "ROOF_VAN_SCRIPTED_FAIL_FX", 0 );
    if (NOT (IS_VEHICLE_DEAD( g_U1291[0] )))
    {
        SET_PLAYBACK_SPEED( g_U1291[0], l_U224 );
    }
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_VAN_ESCAPE_NIS end", 0 );
    return;
}

/* P_IMAGEFX_START_BULLETCAM */ void sub_63942(unknown uParam0, boolean bParam1)
{
    PRINTSTRING( "[CO] P_IMAGEFX_START_BULLETCAM: Starting BulletCam: " );
    PRINTSTRING( uParam0 );
    PRINTNL();
     /* CLEANCAMERA */ sub_4276( ref l_U72 );
    l_U72 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U72, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

/* P_EX_START_VAN_CRASH_NIS */ void sub_64490()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_VAN_CRASH_NIS start", 0 );
     /* NIS_PRE_SETUP */ sub_56282( 1, 0, 0, 1 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_ROOFTOP_CP_08", "VIG_05_VAN_CRASH_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
     /* P_START_VEHICLE_PLAYBACK */ sub_51125( g_U1291[0], l_U166, l_U235, l_U236, 0 );
     /* P_STREAMREQ_SCRIPT_STREAM_STOP */ sub_4946( "S_FASHION_VAN_START", ref g_U1168 );
     /* P_STREAMREQ_SCRIPT_STREAM_REMOVE */ sub_5737( "S_FASHION_VAN_START", ref g_U1168 );
     /* P_STREAMREQ_SCRIPT_STREAM_PLAY_FROM_VEHICLE */ sub_51868( g_U1291[0], "S_FASHION_VAN_SUCCESS", ref g_U1168 );
     /* STARTTIMER */ sub_2847( ref l_U172 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_VAN_CRASH_NIS end", 0 );
    return;
}

/* P_EX_START_VAN_CRASH_FX */ void sub_64859()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_VAN_CRASH_FX start", 0 );
    if (NOT (IS_VEHICLE_DEAD( g_U1291[0] )))
    {
        l_U181 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "Ambient_Steam_Giant_S", g_U1291[0], l_U182, 0, 0, 0, 1065353216 );
        START_PARTICLE_FX_NON_LOOPED_ON_VEHICLE( "veh_glass_clear", g_U1291[0], l_U185, 0, 0, 0, 1065353216 );
        START_PARTICLE_FX_NON_LOOPED_ON_VEHICLE( "CS_RFTP_Van_Sparks_S", g_U1291[0], l_U188, 0, 0, 0, 1065353216 );
    }
    PLAY_IMAGEFX( "DISTORT_INTERLACE_MIDDLE", 4, 0 );
    PLAY_IMAGEFX( "FLASH_WHITE", 4, 0 );
    PLAY_IMAGEFX( "GAMMA_ZOOM_1", 4, 0 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_VAN_CRASH_FX end", 0 );
    return;
}

/* F_EX_SPAWN_V4_ENEMIES */ int sub_65282()
{
    switch (l_U237)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_V4_Ped_SpawnState = ENTITY_STATE_INIT", 0 );
         /* P_SETUP_AI_GROUP */ sub_65418( ref l_U311, 1056964608, 0 );
        l_U238 = 0;
         /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_V4_Ped_SpawnState = ENTITY_STATE_CREATING", 0 );
        l_U237 = 2;
        break;
        case 2:
        l_U305[l_U238] =  /* CREATEPED */ sub_44150( ref l_U239[l_U238] );
        if (NOT (IS_PED_DEAD( l_U305[l_U238] )))
        {
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_65949( l_U305[l_U238], ref l_U311 );
             /* P_SET_PED_TEMPLATE_AND_RANGES */ sub_66364( ref l_U305[l_U238], "AIT_NOVICE", -1082130432, -1082130432 );
             /* P_TETHERPED */ sub_66503( ref l_U318, l_U305[l_U238], 1 );
            SET_ROOM_FOR_PED_BY_NAME( l_U305[l_U238], ref g_U1611 );
            SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U305[l_U238], 0 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U305[l_U238], 0 );
            SET_PED_ALERTNESS( l_U305[l_U238], 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U305[l_U238], 1 );
        }
         /* P_DEACTIVATEPED */ sub_46758( l_U305[l_U238] );
        l_U238++;
        if (l_U238 >= 5)
        {
             /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_V4_Ped_SpawnState = ENTITY_STATE_POST_CREATE_SETUP", 0 );
            l_U237 = 3;
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_46995( ref l_U305, "pi_EX_V4_Ped" );
         /* F_GIVEPEDWEAPON */ sub_11742( l_U305[0], -168327769, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11742( l_U305[1], 68019059, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11742( l_U305[2], 68019059, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11742( l_U305[3], 68019059, 25000, 0, 0 );
         /* STARTTIMER */ sub_2847( ref l_U320 );
         /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_V4_Ped_SpawnState = ENTITY_STATE_COMPLETE", 0 );
        l_U237 = 4;
        break;
    }
    if (l_U237 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

/* P_SETUP_AI_GROUP */ void sub_65418(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_65949(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_11351( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_65418( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_65418( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* P_SET_PED_TEMPLATE_AND_RANGES */ void sub_66364(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

/* P_TETHERPED */ void sub_66503(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* P_EX_HANDLE_V4_EVENTS */ void sub_67055()
{
    if ( /* ISTIMERDONE */ sub_2980( ref l_U320 ))
    {
         /* P_EX_START_V4_EXIT_VAN */ sub_67103();
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_67906( "LEVEL_S_CEM_CP_02", ref g_U1028 );
         /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_67906( "veh@std", ref g_U1028 );
         /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_68288( "VEHICLE/vehicle_car", ref g_U1146 );
    }
    if ( /* ISTIMERDONE */ sub_2980( ref l_U329 ))
    {
         /* CLEANPED */ sub_8161( l_U305[3] );
         /* CLEANPED */ sub_8161( l_U305[4] );
    }
    if ( /* ISTIMERDONE */ sub_2980( ref l_U338 ))
    {
         /* WRITESCRIPTLOG */ sub_718( "GA", "V4 enemies now firing real bullets.", 0 );
        if (NOT (IS_PED_DEAD( l_U305[0] )))
        {
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U305[0], 0, 0 ), 25 );
        }
        if (NOT (IS_PED_DEAD( l_U305[1] )))
        {
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U305[1], 0, 0 ), 25 );
        }
        if (NOT (IS_PED_DEAD( l_U305[2] )))
        {
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U305[2], 0, 0 ), 25 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U305[0] )))
    {
        if (NOT (IS_PED_VISIBLE( l_U305[0] )))
        {
            if (ISEQ_QUERY_ENTITY_STATE( -1310687981, "GMED", 3 ))
            {
                SET_PED_VISIBLE( l_U305[0], 1 );
                SET_PED_VISIBLE_DURING_SEQUENCE( l_U305[0], 1 );
            }
        }
    }
    if (NOT (IS_PED_DEAD( l_U305[1] )))
    {
        if (NOT (IS_PED_VISIBLE( l_U305[1] )))
        {
            if (ISEQ_QUERY_ENTITY_STATE( -1310687981, "GMED1", 3 ))
            {
                SET_PED_VISIBLE( l_U305[1], 1 );
                SET_PED_VISIBLE_DURING_SEQUENCE( l_U305[1], 1 );
                 /* CLEANPED */ sub_8161( l_U220[1] );
            }
        }
    }
    if (NOT (IS_PED_DEAD( l_U305[2] )))
    {
        if (NOT (IS_PED_VISIBLE( l_U305[2] )))
        {
            if (ISEQ_QUERY_ENTITY_STATE( -1310687981, "GMED2", 3 ))
            {
                SET_PED_VISIBLE( l_U305[2], 1 );
                SET_PED_VISIBLE_DURING_SEQUENCE( l_U305[2], 1 );
                 /* CLEANPED */ sub_8161( l_U220[0] );
            }
        }
    }
    if (NOT (IS_PED_DEAD( l_U305[3] )))
    {
        if (NOT (IS_PED_VISIBLE( l_U305[3] )))
        {
            if (ISEQ_QUERY_ENTITY_STATE( -206765881, "GMED3", 3 ))
            {
                SET_PED_VISIBLE( l_U305[3], 1 );
                SET_PED_VISIBLE_DURING_SEQUENCE( l_U305[3], 1 );
            }
        }
    }
    if (NOT (IS_PED_DEAD( l_U305[4] )))
    {
        if (NOT (IS_PED_VISIBLE( l_U305[4] )))
        {
            if (ISEQ_QUERY_ENTITY_STATE( -206765881, "RODR", 3 ))
            {
                SET_PED_VISIBLE( l_U305[4], 1 );
                SET_PED_VISIBLE_DURING_SEQUENCE( l_U305[4], 1 );
            }
        }
    }
    return;
}

/* P_EX_START_V4_EXIT_VAN */ void sub_67103()
{
    int I;

     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_V4_EXIT_VAN start", 0 );
     /* P_ACTIVATEPEDARRAY */ sub_48817( ref l_U305 );
    for ( I = 0; I <= 4; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U305[I] )))
        {
            SET_PED_VISIBLE( l_U305[I], 0 );
            SET_PED_VISIBLE_DURING_SEQUENCE( l_U305[I], 0 );
        }
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() ))) AND (NOT (IS_PED_DEAD( l_U305[0] ))))
    {
        ISEQ_REGISTER_ENTITY( -1310687981, "GMED", l_U305[0], 0 );
        REGISTER_TARGET( l_U305[0],  /* PLAYER_PED_ID */ sub_1677() );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U305[0], 0 );
        SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U305[0], 0, 0 ), 100 );
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() ))) AND (NOT (IS_PED_DEAD( l_U305[1] ))))
    {
        ISEQ_REGISTER_ENTITY( -1310687981, "GMED1", l_U305[1], 0 );
        REGISTER_TARGET( l_U305[1],  /* PLAYER_PED_ID */ sub_1677() );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U305[1], 0 );
        SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U305[1], 0, 0 ), 100 );
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() ))) AND (NOT (IS_PED_DEAD( l_U305[2] ))))
    {
        ISEQ_REGISTER_ENTITY( -1310687981, "GMED2", l_U305[2], 0 );
        REGISTER_TARGET( l_U305[2],  /* PLAYER_PED_ID */ sub_1677() );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U305[2], 0 );
        SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U305[2], 0, 0 ), 100 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U1291[0] )))
    {
        ISEQ_REGISTER_ENTITY( -1310687981, "VAN", g_U1291[0], 2 );
    }
    ISEQ_START( -1310687981 );
    if (NOT (IS_PED_DEAD( l_U305[3] )))
    {
        ISEQ_REGISTER_ENTITY( -206765881, "GMED3", l_U305[3], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U305[4] )))
    {
        ISEQ_REGISTER_ENTITY( -206765881, "RODR", l_U305[4], 0 );
    }
    ISEQ_START( -206765881 );
     /* STARTTIMER */ sub_2847( ref l_U329 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_V4_EXIT_VAN end", 0 );
    return;
}

/* P_STREAMREQ_ANIM_DICT_REMOVE */ void sub_67906(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5883( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ANIM_DICT asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_ACTION_TREE_REMOVE */ void sub_68288(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5883( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a ACTION_TREE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_GBL_HANDLE_PAINKILLER_TUTORIAL */ void sub_69859()
{
    if ((NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1715() ))) AND ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() ))) AND ((NOT g_U1699) AND ( /* F_IS_TUTORIAL_LEVEL */ sub_69904()))))
    {
        if (NOT g_U1698)
        {
            if ((GET_PAYNEKILLER_AMT() > 0) AND ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (IS_PLAYER_CONTROL_ON(  /* PLAYER_ID */ sub_1715() )))))
            {
                if (( /* F_GET_PLAYER_HEALTH_PERCENT */ sub_70073()) < 0.40000000)
                {
                     /* P_DISPLAY_TUTORIAL_INSTRUCTION_NEWHOT */ sub_70235( "TUT_PAINKILLER", 1 );
                    SET_GAME_PAUSED( 1 );
                    DISABLE_RESTART_CHECKPOINT( 1 );
                    SET_CONTROL_CONFIG_OPTION_DISABLED( 1 );
                     /* CREATETIMER */ sub_2697( ref g_U1700, 500, 1, 1 );
                     /* STARTTIMER */ sub_2847( ref g_U1700 );
                    g_U1698 = 1;
                }
            }
        }
        else if ((g_U1700._fU16) || ( /* ISTIMERDONE */ sub_2980( ref g_U1700 )))
        {
            if (IS_CONTROL_PRESSED( 2, 19 ))
            {
                 /* WRITESCRIPTLOG */ sub_718( "GA", "Player completed painkiller tutorial.", 0 );
                 /* P_END_TUTORIAL_INSTRUCTION_NEWHOT */ sub_70538();
                STOP_IMAGEFX( g_U1697, 0 );
                SET_GAME_PAUSED( 0 );
                DISABLE_RESTART_CHECKPOINT( 0 );
                SET_CONTROL_CONFIG_OPTION_DISABLED( 0 );
                SET_PLAYER_FORCE_PAIN_KILLER( 1 );
                g_U1698 = 0;
                g_U1699 = 1;
            }
        }
        if ((IS_LAST_MAN_STANDING_ACTIVE()) || (IS_BULLET_CAMERA_ACTIVE()))
        {
             /* WRITESCRIPTLOG */ sub_718( "GA", "Prematurely ending painkiller tutorial.", 0 );
             /* P_END_TUTORIAL_INSTRUCTION_NEWHOT */ sub_70538();
            SET_GAME_PAUSED( 0 );
            DISABLE_RESTART_CHECKPOINT( 0 );
            SET_CONTROL_CONFIG_OPTION_DISABLED( 0 );
            SET_PLAYER_FORCE_PAIN_KILLER( 0 );
            g_U1698 = 0;
        }
    }
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )) AND (g_U1698))
    {
         /* P_GBL_EARLY_CANCEL_PAINKILLER_TUTORIAL */ sub_70820();
    }
    return;
}

/* F_IS_TUTORIAL_LEVEL */ int sub_69904()
{
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (IS_TUTORIAL_COMPLETE())
    {
        return 0;
    }
    return 1;
}

/* F_GET_PLAYER_HEALTH_PERCENT */ float sub_70073()
{
    unknown uVar2;
    unknown uVar3;
    float Result;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
    {
        uVar2 = TO_FLOAT( (GET_PED_MAX_HEALTH(  /* PLAYER_PED_ID */ sub_1677() )) - 100 );
        uVar3 = TO_FLOAT( (GET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1677() )) - 100 );
        Result = uVar3 / uVar2;
        return Result;
    }
    return 0.00000000;
}

/* P_DISPLAY_TUTORIAL_INSTRUCTION_NEWHOT */ void sub_70235(unknown uParam0, boolean bParam1)
{
    UI_SET( 25, 2, 1537, "SPSlotLoader", 1537, uParam0 );
    if (bParam1)
    {
        STOP_IMAGEFX( g_U1697, 0 );
        g_U1697 = PLAY_IMAGEFX( "INTERLACE_DESATURATED_PANEL_02", 3, 0 );
    }
    return;
}

/* P_END_TUTORIAL_INSTRUCTION_NEWHOT */ void sub_70538()
{
    UI_SET( 15, 2, 1537, "animMainText", 257, 1 );
    return;
}

/* P_GBL_EARLY_CANCEL_PAINKILLER_TUTORIAL */ void sub_70820()
{
    if (g_U1698)
    {
         /* P_END_TUTORIAL_INSTRUCTION_NEWHOT */ sub_70538();
        STOP_IMAGEFX( g_U1697, 0 );
        SET_GAME_PAUSED( 0 );
        DISABLE_RESTART_CHECKPOINT( 0 );
        SET_CONTROL_CONFIG_OPTION_DISABLED( 0 );
        SET_PLAYER_FORCE_PAIN_KILLER( 0 );
        g_U1698 = 0;
    }
    return;
}

/* P_SPEECH_PLAY_MONOLOGUE */ void sub_71002(unknown uParam0, unknown uParam1)
{
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_71040( uParam1 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_71149( 0,  /* PLAYER_PED_ID */ sub_1677(), "MAX", uParam1, 2, 0 );
     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_71149( 1,  /* PLAYER_PED_ID */ sub_1677(), "MAX", uParam1, 2, 0 );
     /* PLAY_SINGLE_SPEECH */ sub_71402( uParam0, uParam1, 8, 1 );
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_71040(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_71149(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_71402(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_71447( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_71447(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_71534( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_71534(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_71586( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_72104( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_71586(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_72104(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_72323(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_72447(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_72323( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_72667(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_72710(  /* PLAYER_PED_ID */ sub_1677(), uParam0 );
}

/* F_ISPEDINTRIGGERBOX */ int sub_72710(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_EX_ROCK_VAN */ void sub_73524()
{
    int iVar2;

    if (NOT (IS_VEHICLE_DEAD( g_U1291[0] )))
    {
        iVar2 = GET_RANDOM_INT_IN_RANGE( 0, 150 );
        if (iVar2 < 50)
        {
            l_U391._fU0 = 5.00000000;
        }
        else if (iVar2 < 100)
        {
            l_U391._fU0 = -5.00000000;
        }
        else
        {
            l_U391._fU0 = 0.00000000;
        }
        iVar2 = GET_RANDOM_INT_IN_RANGE( 0, 150 );
        if (iVar2 < 50)
        {
            l_U391._fU4 = 5.00000000;
        }
        else if (iVar2 < 100)
        {
            l_U391._fU4 = -5.00000000;
        }
        else
        {
            l_U391._fU4 = 0.00000000;
        }
        APPLY_FORCE_TO_VEHICLE( g_U1291[0], 2, l_U388, l_U391, 0, 1, 1, 1 );
        PLAY_SOUND_FROM_VEHICLE( -1, "S_FASHION_VAN_STRUGGLE_THUD", g_U1291[0] );
    }
    return;
}

/* F_EX_SPAWN_V5_PEDS */ int sub_74157()
{
    switch (l_U472)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_V5_PedSpawnState = ENTITY_STATE_INIT", 0 );
        l_U473 = 0;
         /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_V5_PedSpawnState = ENTITY_STATE_CREATING", 0 );
        l_U472 = 2;
        break;
        case 2:
        l_U514[l_U473] =  /* CREATEPED */ sub_44150( ref l_U474[l_U473] );
        if (NOT (IS_PED_DEAD( l_U514[l_U473] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U514[l_U473], ref g_U1611 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U514[l_U473], 1 );
            SET_PED_ALERTNESS( l_U514[l_U473], 3 );
            SET_PED_COMBAT_ATTRIBUTES( l_U514[l_U473], 16, 0 );
            SET_PED_AS_ONE_SHOT_KILL( l_U514[l_U473], 1 );
        }
         /* P_DEACTIVATEPED */ sub_46758( l_U514[l_U473] );
        l_U473++;
        if (l_U473 >= 3)
        {
             /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_V5_PedSpawnState = ENTITY_STATE_POST_CREATE_SETUP", 0 );
            l_U472 = 3;
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_46995( ref l_U514, "pi_EX_V5_Ped" );
         /* F_GIVEPEDWEAPON */ sub_11742( l_U514[0], 68019059, 25000, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_11742( l_U514[1], 68019059, 25000, 0, 0 );
         /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_V5_PedSpawnState = ENTITY_STATE_COMPLETE", 0 );
        l_U472 = 4;
        break;
    }
    if (l_U472 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

/* P_EX_START_V5A */ void sub_74820()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_V5A start", 0 );
    if ((NOT (IS_PED_DEAD( l_U514[2] ))) AND (NOT (IS_PED_DEAD( l_U514[0] ))))
    {
        SET_PED_CAN_INITIATE_BULLET_CAM( l_U514[0], 1 );
        SET_BULLET_CAM_PREF( l_U514[2], "", "", "", "PIST_CUSTOM_ROOF_RODRIGO_01", 0, 0, 0, 0, 0, 0, 0, 0 );
        REGISTER_TARGET( l_U514[0], l_U514[2] );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -9.34000000, 64.89000000, -60.80000000, l_U514[2], 3, 0, 1056964608, 0, 1, 0 );
        TASK_AIM_GUN_AT_PED( 0, l_U514[2], -1, 0 );
        TASK_AIM_GUN_AT_COORD( 0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U514[2] ), -1, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U514[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    if (NOT (IS_PED_DEAD( l_U514[2] )))
    {
        ISEQ_REGISTER_ENTITY( -923981292, "RODR", l_U514[2], 0 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U514[2], 1 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U1291[0] )))
    {
        ISEQ_REGISTER_ENTITY( -923981292, "VAN", g_U1291[0], 2 );
        FREEZE_VEHICLE_POSITION( g_U1291[0], 1 );
    }
    ISEQ_START( -923981292 );
     /* CLEANPED */ sub_8161( l_U514[1] );
     /* NIS_PRE_SETUP */ sub_56282( 1, 0, 0, 1 );
     /* NIS_CREATE_STATIC_CAM */ sub_15605( ref l_U741, 12.65000000, 66.82000000, -57.70000000, -21.67000000, 0.00000000, 102.98000000, 45.00000000, l_U772 + 500 );
     /* NIS_PLAY_STATIC_CAMERA */ sub_75373( ref l_U741 );
     /* STARTTIMER */ sub_2847( ref l_U773 );
     /* CLEANPEDARRAY */ sub_8111( ref l_U305 );
     /* TELEPORTPED */ sub_51726(  /* PLAYER_PED_ID */ sub_1677(), 14.21000000, 74.64000000, -60.70000000, 180.00000000 );
     /* P_ACTIVATEPEDARRAY */ sub_48817( ref l_U514 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_V5A end", 0 );
    return;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_75373(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_2847( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* P_EX_V5_SHOOT_RODR */ void sub_75600()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_V5_SHOOT_RODR start", 0 );
    CAMERA_FREEZE_FRAME( 0, 0, 0, 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    if (NOT (IS_PED_DEAD( l_U514[2] )))
    {
        if (NOT (IS_PED_DEAD( l_U514[0] )))
        {
            SET_PED_SHOOTS_AT_COORD( l_U514[0], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U514[2], 3227, 0, 0, 0 ) );
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U514[0], 0 );
        }
        else if (NOT (IS_PED_DEAD( l_U514[1] )))
        {
            SET_PED_SHOOTS_AT_COORD( l_U514[1], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U514[2], 3227, 0, 0, 0 ) );
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U514[1], 0 );
        }
    }
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_V5_SHOOT_RODR end", 0 );
    return;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_75963(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* NIS_IS_SHOT_FINISHED */ int sub_76094(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_2980( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_2980( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

/* P_KILL_PED */ void sub_76263(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* P_EX_START_VIG_05_RP_CAM */ void sub_76385()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_VIG_05_RP_CAM start", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
    {
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_49759( 1 );
         /* TELEPORTPED */ sub_51726(  /* PLAYER_PED_ID */ sub_1677(), 9.79700000, 65.84900000, -60.78300000, -135.00000000 );
    }
     /* P_ACTIVATEPED */ sub_48869( l_U514[2] );
     /* NIS_PRE_SETUP */ sub_56282( 1, 0, 0, 1 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_ROOFTOP_CP_07", "MID_09C_RP_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
    SET_CAMERA_OVERRIDE( "SAVE_RODRIGO_AIM_CAMERA", "SAVE_RODRIGO_AIM_CAMERA", 0, 1, 1 );
    if ((NOT (IS_PED_DEAD( l_U514[0] ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() ))))
    {
        SET_PED_DEFAULT_AIM_AT_PED(  /* PLAYER_PED_ID */ sub_1677(), l_U514[0] );
    }
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_VIG_05_RP_CAM end", 0 );
    return;
}

/* P_EX_START_VIG_05_RP_SEQ */ void sub_76886()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_VIG_05_RP_SEQ start", 0 );
    if (NOT (IS_PED_DEAD( l_U514[2] )))
    {
        ISEQ_REGISTER_ENTITY( 218169473, "RODR", l_U514[2], 0 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U514[2], 1 );
    }
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
    {
        ISEQ_REGISTER_ENTITY( 218169473, "MAX",  /* PLAYER_PED_ID */ sub_1677(), 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U1291[0] )))
    {
        ISEQ_REGISTER_ENTITY( 218169473, "VAN", g_U1291[0], 2 );
        FREEZE_VEHICLE_POSITION( g_U1291[0], 1 );
    }
    ISEQ_START( 218169473 );
     /* P_STREAMREQ_SCRIPT_STREAM_PLAY_FRONTEND */ sub_77182( "S_FASHION_VAN_ROD_EXIT", ref g_U1168 );
     /* STARTTIMER */ sub_2847( ref l_U519 );
     /* STARTTIMER */ sub_2847( ref l_U534 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_VIG_05_RP_SEQ end", 0 );
    return;
}

/* P_STREAMREQ_SCRIPT_STREAM_PLAY_FRONTEND */ void sub_77182(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if ( /* F_STREAMREQ_SCRIPT_STREAM_IS_ASSET_LOADED */ sub_4996( uParam0, uParam1 ))
    {
        iVar4 =  /* F_STREAMREQ_SCRIPT_STREAM_GET_SLOT */ sub_5205( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            DISPLAYF( "[CCB]### Playing the SCRIPT_STREAM: {} ###", 1, 1281, ref (uParam1^)[iVar4]._fU0 );
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            DISPLAYF( "[CCB]### The SCRIPT_STREAM slot is NOT valid!!! {} ###", 1, 1537, uParam0 );
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        DISPLAYF( "[CCB]### The SCRIPT_STREAM asset is NOT loaded!!! {} ###", 1, 1537, uParam0 );
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

/* P_EX_START_V5_ENEMIES_RUNNING */ void sub_77942()
{
    unknown uVar2;

     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_V5_ENEMIES_RUNNING start", 0 );
     /* P_ACTIVATEPED */ sub_48869( l_U514[0] );
     /* P_ACTIVATEPED */ sub_48869( l_U514[1] );
    if (NOT (IS_PED_DEAD( l_U514[2] )))
    {
        if (NOT (IS_PED_DEAD( l_U514[0] )))
        {
            SET_PED_CAN_INITIATE_BULLET_CAM( l_U514[0], 1 );
            SET_BULLET_CAM_PREF( l_U514[2], "", "", "", "PIST_CUSTOM_ROOF_RODRIGO_01", 0, 0, 0, 0, 0, 0, 0, 0 );
            REGISTER_TARGET( l_U514[0], l_U514[2] );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( l_U514[0], -0.49000000, 65.49000000, -60.79900000, l_U514[2], 3, 0, 1056964608, 0, 1, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U514[1] )))
        {
            SET_PED_CAN_INITIATE_BULLET_CAM( l_U514[1], 1 );
            SET_BULLET_CAM_PREF( l_U514[2], "", "", "", "PIST_CUSTOM_ROOF_RODRIGO_01", 0, 0, 0, 0, 0, 0, 0, 0 );
            REGISTER_TARGET( l_U514[1], l_U514[2] );
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -13.83000000, 68.36000000, -60.79900000, l_U514[2], 3, 0, 1056964608, 0, 1, 0 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -2.56000000, 68.58000000, -60.79900000, l_U514[2], 3, 0, 1056964608, 0, 1, 0 );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U514[1], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
    }
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_START_V5_ENEMIES_RUNNING end", 0 );
    return;
}

/* P_EX_VIG_05_RP_CAM_TO_GAMEPLAY */ void sub_78632()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_VIG_05_RP_CAM_TO_GAMEPLAY start", 0 );
     /* P_EX_PLAY_DIALOGUE_CSRWA */ sub_78725();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U530, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U531, 1065353216, 0 );
    CAMERA_FREEZE_FRAME( 1, 500, 0, 0 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_VIG_05_RP_CAM_TO_GAMEPLAY end", 0 );
    return;
}

/* P_EX_PLAY_DIALOGUE_CSRWA */ void sub_78725()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_PLAY_DIALOGUE_CSRWA start", 0 );
     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_71040( ref l_U564 );
    if (NOT (IS_PED_DEAD( l_U514[2] )))
    {
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_71149( 2, l_U514[2], "RODRIGO", ref l_U564, 2, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U514[0] )))
    {
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_71149( 1, l_U514[0], "M1_CS_1k_Avg", ref l_U564, 2, 0 );
    }
     /* PLAY_SINGLE_SPEECH */ sub_71402( "SRTP_CSRWA", ref l_U564, 7, 1 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_PLAY_DIALOGUE_CSRWA end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE */ void sub_80032(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5883( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                        DISPLAYF( "Trying to remove a MODEL_NAME asset that was requested by another thread!!!", 0 );
                        return;
                    }
                }
            }
        }
    }
    else
    {
        DISPLAYF( "[CCB] ### Removing MODEL_NAME: {!f1} ###", 2, 1, -874832622, 513, iParam0 );
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

/* F_EX_0103_PRECUTSCENE */ int sub_81012()
{
    if (l_U872._fU52)
    {
        l_U899 = 1;
    }
    if ( /* F_EX_SPAWN_0103_PEDS */ sub_81066())
    {
         /* P_EX_0103_CREATE_CAV */ sub_81645();
        return 1;
    }
    return 0;
}

/* F_EX_SPAWN_0103_PEDS */ int sub_81066()
{
    switch (l_U899)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_0103_PedSpawnState = ENTITY_STATE_INIT", 0 );
        l_U900 = 0;
         /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_0103_PedSpawnState = ENTITY_STATE_INIT", 0 );
        l_U899 = 2;
        break;
        case 2:
        l_U954[l_U900] =  /* CREATEPED */ sub_44150( ref l_U901[l_U900] );
         /* F_GIVEPEDWEAPON */ sub_11742( l_U954[l_U900], 68019059, 25000, 0, 0 );
        if (NOT (IS_PED_DEAD( l_U954[l_U900] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U954[l_U900], ref g_U1611 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U954[l_U900], 1 );
        }
         /* P_DEACTIVATEPED */ sub_46758( l_U954[l_U900] );
        l_U900++;
        if (l_U900 >= 4)
        {
             /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_0103_PedSpawnState = ENTITY_STATE_POST_CREATE_SETUP", 0 );
            l_U899 = 3;
        }
        break;
        case 3:
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_46995( ref l_U954, "pi_EX_0103_Ped" );
         /* WRITESCRIPTLOG */ sub_718( "GA", "e_EX_0103_PedSpawnState = ENTITY_STATE_COMPLETE", 0 );
        l_U899 = 4;
        break;
    }
    if (l_U899 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

/* P_EX_0103_CREATE_CAV */ void sub_81645()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_0103_CREATE_CAV start", 0 );
    l_U959 =  /* CREATEVEHICLE */ sub_41812( 975934894, 62.98000000, 39.03000000, -60.80000000, 153.62000000, 0, 0, 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U959 )))
    {
        SET_VEHICLE_COLOUR_COMBINATION( l_U959, 0 );
        SET_VEHICLE_LIGHTS( l_U959, 2 );
    }
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_EX_0103_CREATE_CAV end", 0 );
    return;
}

/* P_EX_0103_CUTSCENEREGISTRATION */ void sub_81860()
{
    int I;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
    {
         /* WRITESCRIPTLOG */ sub_718( "CCB", "Registering the Player ped.", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_1677(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
    }
    if (NOT (IS_PED_DEAD( l_U954[0] )))
    {
         /* WRITESCRIPTLOG */ sub_718( "CCB", "Registering the pi_EX_0103_Ped[0] ped.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U954[0], "Rodr_Suit", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U954[0], 0, 0 ), "W_PI_PT92_Aa_H^1", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U954[1] )))
    {
         /* WRITESCRIPTLOG */ sub_718( "CCB", "Registering the pi_EX_0103_Ped[1] ped.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U954[1], "R_SPP_Sold_A", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U954[1], 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U954[2] )))
    {
         /* WRITESCRIPTLOG */ sub_718( "CCB", "Registering the pi_EX_0103_Ped[2] ped.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U954[2], "R_SPP_Sold_A^2", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U954[2], 0, 0 ), "W_PI_Clt1911_Aa_H^1", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U954[3] )))
    {
         /* WRITESCRIPTLOG */ sub_718( "CCB", "Registering the pi_EX_0103_Ped[3] ped.", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U954[3], "R_SPP_Sold_A^4", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U954[3], 0, 0 ), "W_PI_PT92_Aa_H", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( l_U959 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U959, "cavierao", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U1291[0] )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U1291[0], "van_nyc", 0 );
        SET_VEHICLE_LIGHTS( g_U1291[0], 2 );
    }
    for ( I = 0; I <= 4; I++ )
    {
         /* P_GBL_CREATE_BLOOD_POOL_FOR_PED */ sub_44937( g_U1691[I], 0.00000000, 4.00000000, 120.00000000 );
    }
    CUTSCENE_ENABLE_SKIP( 0 );
    SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 1 );
    CUTSCENE_REGISTER_SWITCH_TO_LEVEL_NAME( "s_clubride" );
    DISABLE_FADE_BETWEEN_SP_LEVELS();
    AUD_ENABLE_PRE_BINK_SHUTDOWN( 1 );
    return;
}

/* P_EX_0103_HANDLECUTSCENE */ void sub_82841()
{
    int I;

    if (l_U872._fU52)
    {
         /* P_ACTIVATEPEDARRAY */ sub_48817( ref l_U954 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() )))
        {
            REMOVE_ALL_PED_WEAPONS(  /* PLAYER_PED_ID */ sub_1677() );
        }
         /* WRITESCRIPTLOG */ sub_718( "CCB", "Suspending music...", 0 );
        AUDIO_MUSIC_SUSPEND( 20000 );
        for ( I = 0; I <= 4; I++ )
        {
            if (DOES_PED_EXIST( l_U305[I] ))
            {
                REMOVE_ALL_ENVIRONMENT_BLOOD_AT_COORD( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U305[I] ), 1.50000000 );
            }
        }
        for ( I = 0; I <= 2; I++ )
        {
            if (DOES_PED_EXIST( l_U514[I] ))
            {
                REMOVE_ALL_ENVIRONMENT_BLOOD_AT_COORD( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U514[I] ), 1.50000000 );
            }
        }
        for ( I = 0; I <= 5; I++ )
        {
            if (DOES_PED_EXIST( g_U1684[I] ))
            {
                REMOVE_ALL_ENVIRONMENT_BLOOD_AT_COORD( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U1684[I] ), 1.50000000 );
            }
        }
         /* CLEANPEDARRAY */ sub_8111( ref l_U305 );
         /* CLEANPEDARRAY */ sub_8111( ref l_U514 );
         /* CLEANPEDARRAY */ sub_8111( ref g_U1684 );
        g_U1273 = 1;
    }
    return;
}

/* P_EX_0103_PREPAREBLENDOUT */ void sub_83246()
{
    DO_SCREEN_FADE_OUT( 0 );
    return;
}

/* CUTSYS_DEFAULT_HANDLEBLENDOUT */ int sub_83300()
{
    return 1;
}

/* P_EX_DEBUG_RECORDING_WIDGET */ void sub_83593()
{
    if (NOT l_U968)
    {
        START_WIDGET_GROUP( "Parking Exit Recording Widget" );
        ADD_WIDGET_BOOL( "Start Recording Mode", ref l_U969 );
        START_WIDGET_GROUP( "Van escaping." );
        ADD_WIDGET_BOOL( "Restart Van Recording Vehicle", ref l_U970 );
        ADD_WIDGET_FLOAT_SLIDER( "Van Heading", ref l_U974, -360.00000000, 360.00000000, 1.00000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_83853( ref l_U971, "Van position", 0.10000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U968 = 1;
    }
    if (l_U969)
    {
         /* NIS_POST_SETUP */ sub_57206( 1, 1 );
         /* P_CLEANUP_EX */ sub_4438( 1 );
         /* P_EX_END_VAN_MPM */ sub_63539();
        l_U123 = 0;
         /* TELEPORTPED */ sub_51726(  /* PLAYER_PED_ID */ sub_1677(), g_U1333[7], g_U1450[7] );
         /* NIS_POST_SETUP */ sub_57206( 1, 1 );
        l_U969 = 0;
    }
    if (l_U970)
    {
         /* CLEANVEHICLEARRAY */ sub_8331( ref l_U962 );
        l_U962[0] =  /* F_DEBUG_CREATE_RECORDING_VEHICLE */ sub_84124( -239844571, l_U971, l_U974 );
        l_U970 = 0;
    }
    return;
}

/* P_ADD_WIDGET_VECTOR_SLIDER */ void sub_83853(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

/* F_DEBUG_CREATE_RECORDING_VEHICLE */ void sub_84124(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown Result;

     /* WRITESCRIPTLOG */ sub_718( "GA", "F_DEBUG_CREATE_RECORDING_VEHICLE start", 0 );
    Result =  /* CREATEVEHICLE */ sub_41812( uParam0, uParam1, uParam4, 1, 0, 0 );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1677() ))) AND (NOT (IS_VEHICLE_DEAD( Result ))))
    {
        SET_PED_INTO_VEHICLE(  /* PLAYER_PED_ID */ sub_1677(), Result, -1 );
        SET_VEHICLE_PROOFS( Result, 1, 1, 1, 1, 1 );
        SET_VEHICLE_ENGINE_ON( Result, 1, 1 );
        SET_ROOM_FOR_VEHICLE_BY_NAME( Result, ref g_U1611 );
    }
    return Result;
}

/* P_EX_DEBUG_EXIT_TUNING_WIDGET */ void sub_84352()
{
    if (NOT l_U975)
    {
        START_WIDGET_GROUP( "Parking Exit Tuning" );
        START_WIDGET_GROUP( "MID_09_RP blendout" );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay cam heading", ref g_U1486[7], -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay cam pitch", ref g_U1522[7], -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_INT_SLIDER( "Time before anim cam ended", ref l_U870, 0, 100000, 50 );
        ADD_WIDGET_INT_SLIDER( "Anim cam interp time", ref l_U871, 0, 100000, 50 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Van MPM variables" );
        ADD_WIDGET_FLOAT_SLIDER( "Van Escape Speed", ref l_U167, 0.00000000, 10.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Van Escaped", ref l_U168, 0.00000000, 1E7, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Van MPM Speed", ref l_U169, 0.00000000, 10.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Bullet Time Mod", ref l_U170, 0.00000000, 10.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Van escape NIS" );
        ADD_WIDGET_INT_SLIDER( "Cam Interp time", ref l_U223, 0, 100000, 50 );
        ADD_WIDGET_FLOAT_SLIDER( "Van Speed", ref l_U224, 0.00000000, 10.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Van crash NIS" );
        ADD_WIDGET_FLOAT_SLIDER( "Van crash speed", ref l_U235, 0.00000000, 10.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Van crash start time", ref l_U236, 0, 100000, 50 );
        ADD_WIDGET_INT_SLIDER( "Van crash contact", ref l_U171, 0, 1000000, 50 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_83853( ref l_U182, "Smoke FX Pos", 0.10000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_83853( ref l_U185, "Headlight FX Pos", 0.01000000 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_83853( ref l_U188, "Wall FX Pos", 0.01000000 );
        ADD_WIDGET_BOOL( "Play crash FX", ref l_U977 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "VIG_04_RP Enemies" );
        ADD_WIDGET_INT_SLIDER( "Rear enemy timer", ref l_U319, 0, 1000000, 50 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "VIG_05_RP event" );
        ADD_WIDGET_FLOAT_SLIDER( "V5 game cam heading", ref l_U530, -360.00000000, 360.00000000, 1.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "V5 game pitch heading", ref l_U531, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_INT_SLIDER( "V5 Shoot Rodrigo", ref l_U518, 0, 1000000, 50 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Rodrigo Shot Safety NIS" );
        ADD_WIDGET_INT_SLIDER( "V5A Shoot Rodrigo", ref l_U772, 0, 1000000, 50 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Rock Van" );
        ADD_WIDGET_BOOL( "Rock Van", ref l_U976 );
        ADD_WIDGET_INT_SLIDER( "Rock Van Timer Min", ref l_U394, 0, 1000000, 50 );
        ADD_WIDGET_INT_SLIDER( "Rock Van Timer Max", ref l_U395, 0, 1000000, 50 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_83853( ref l_U388, "Force", 1036831949 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_83853( ref l_U391, "Offset", 1036831949 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U975 = 1;
    }
    if ((NOT (IS_VEHICLE_DEAD( g_U1291[0] ))) AND (l_U976))
    {
         /* WRITESCRIPTLOG */ sub_718( "GA", "Debug rocking van.", 0 );
        APPLY_FORCE_TO_VEHICLE( g_U1291[0], 2, l_U388, l_U391, 0, 1, 1, 1 );
        l_U976 = 0;
    }
    if (l_U977)
    {
         /* P_SAFE_REMOVE_PARTICLE_FX */ sub_4515( ref l_U181 );
         /* P_EX_START_VAN_CRASH_FX */ sub_64859();
        l_U977 = 0;
    }
    return;
}

/* P_RELEASE_EX_ASSETS */ void sub_85950()
{
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_RELEASE_EX_ASSETS start", 0 );
     /* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ sub_86029( ref l_U109, ref g_U821 );
     /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_80032( 975934894, ref g_U821 );
     /* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ sub_86148( ref l_U120, ref g_U918 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_67906( "LEVEL_S_FAS_00", ref g_U1028 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_67906( "DAM_DEAD", ref g_U1028 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_67906( "LEVEL_S_ROOFTOP_CP_07", ref g_U1028 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_67906( "LEVEL_S_ROOFTOP_CP_08", ref g_U1028 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_67906( "LEVEL_S_CEM_CP_02", ref g_U1028 );
     /* P_STREAMREQ_ANIM_DICT_REMOVE */ sub_67906( "veh@std", ref g_U1028 );
     /* P_STREAMREQ_ACTION_TREE_REMOVE */ sub_68288( "VEHICLE/vehicle_car", ref g_U1146 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_86767( l_U165, ref g_U1133 );
     /* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ sub_86767( l_U166, ref g_U1133 );
     /* P_STREAMREQ_AUDIO_BANK_REMOVE */ sub_87160( "SCRIPT_MISSION\S_FASHION_TIRE_POPS", ref g_U1221 );
     /* P_STREAMREQ_AUDIO_BANK_REMOVE */ sub_87160( "SCRIPT_MISSION\S_FASHION_VAN_STRUGGLE", ref g_U1221 );
     /* WRITESCRIPTLOG */ sub_718( "GA", "P_RELEASE_EX_ASSETS end", 0 );
    return;
}

/* P_STREAMREQ_MODELNAMES_REMOVE_ARRAY */ void sub_86029(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_MODELNAMES_REMOVE */ sub_80032( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE_ARRAY */ void sub_86148(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_STREAMREQ_WEAPON_TYPE_REMOVE */ sub_86222( (uParam0^)[I], uParam1 );
    }
    return;
}

/* P_STREAMREQ_WEAPON_TYPE_REMOVE */ void sub_86222(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5883( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a WEAPON_TYPE asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_VEHICLE_RECORDING_REMOVE */ void sub_86767(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5883( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a VEHICLE_RECORDING asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}

/* P_STREAMREQ_AUDIO_BANK_REMOVE */ void sub_87160(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 =  /* F_STREAMREQ_THREADID_IS_INDEX_AVAILABLE_FOR_REMOVE */ sub_5883( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    DISPLAYF( "[CCB] ### Requested ThreadID: {} ###", 1, 513, iVar5 );
                    DISPLAYF( "Trying to remove a AUDIO_BANK asset that was requested by another thread!!!", 0 );
                    return;
                }
            }
        }
    }
    return;
}


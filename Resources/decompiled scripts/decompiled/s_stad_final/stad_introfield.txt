void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U44 = 0;
    l_U45 = 0;
    l_U46 = 1500;
    l_U75 = 0;
    l_U113 = 0;
    l_U115 = 1;
    l_U116 = 0;
    l_U117 = 0;
    l_U118 = 1;
    l_U278 = {-0.39000000, 28.40000000, 0.23000000};
    l_U281 = 0.00000000;
    l_U296 = {-4.29000000, 66.97000000, -3.19000000};
    l_U299 = 180.00000000;
    l_U311 = 0;
    l_U313 = 0;
    l_U314 = {2.40600000, 0.81100000, 0.00000000};
    l_U317 = 9500;
    l_U327 = {11.20000000, 71.11000000, -3.10000000};
    l_U330 = -85.63000000;
    l_U331 = {26.74000000, 70.91000000, -3.20008700};
    l_U334 = 177.90000000;
    l_U335 = {29.00000000, 58.47000000, -3.22000000};
    l_U338 = 90.00000000;
    l_U339 = {36.60000000, 66.00000000, -3.20011100};
    l_U342 = 0.00000000;
    l_U343 = {48.90000000, 72.30000000, -3.20000000};
    l_U346 = 180.00000000;
    l_U347 = 0;
    l_U348 = 0;
    l_U349 = 0;
    l_U350 = 0;
    l_U351 = 0;
    l_U352 = 0;
    l_U353 = 0;
    l_U364 = 0;
    l_U375 = 0;
    l_U1091 = {35.60753000, 61.47223000, 11.64517000};
    l_U1094 = 144.49880000;
    l_U1114 = 8525;
    l_U1210 = 0;
    l_U1272 = 0;
    l_U1282 = 0;
    l_U1283 = nil;
    l_U1284 = nil;
    l_U1355 = 0;
    l_U1356 = 0;
    l_U1357 = 0;
    l_U1358 = 0;
    l_U1359 = 0;
    l_U1568 = 0;
    l_U1607 = {5.28000000, 70.37000000, -3.20134900};
    l_U1610 = 65446;
    l_U1910 = 0;
    l_U1911 = 1;
    l_U1912 = 0;
    l_U1913 = 0;
    l_U1963 = 0;
    l_U1974 = 0;
    l_U1976 = 0;
    l_U1978 = {31.85000000, 60.76800000, -2.10000000};
    l_U1990 = 0;
    l_U1991 = 0;
    l_U2010 = 0;
    l_U2011 = 0;
    l_U2026 = 0;
    l_U2027 = 0;
    sub_888( "Script stad_IntroField.sc is starting up..." );
    sub_915();
    l_U113 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_1173();
        if (l_U116 == 0)
        {
            sub_11064();
            sub_69632();
            sub_69790();
        }
        WAIT( 0 );
    }
    sub_3617();
    sub_69856();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "stad_IntroField" );
    sub_888( "Script stad_field.sc is terminating..." );
    return;
}

void sub_888(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_915()
{
    sub_954( "AT", "P_SETUP_ASSET_ARRAYS", 0 );
    l_U2012[0] = -442116668;
    l_U2012[1] = 1049690760;
    l_U2012[2] = 1689856371;
    l_U2012[3] = 279061184;
    l_U2012[4] = -2056814065;
    l_U2012[5] = 1427023677;
    l_U2012[6] = -2073357282;
    l_U2020[0] = 150541352;
    l_U2020[1] = -1074756423;
    l_U2020[2] = -2075384407;
    l_U2020[3] = 68019059;
    return;
}

void sub_954(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1173()
{
    if (g_U855 == 1)
    {
        switch (l_U116)
        {
            case 0:
            if ((sub_1328()) || (IS_PED_DEAD( sub_1255() )))
            {
                l_U116 = 1;
                sub_888( "eFailState = FAIL_WAITING_FOR_PLAYER" );
            }
            break;
            case 1:
            if (sub_1816())
            {
                l_U116 = 2;
            }
            else if ((sub_1856( 0 )) == 1)
            {
                l_U116 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_1255() )))
            {
                if ((g_U888[2]._fU40 != 4) AND (g_U888[2]._fU40 != 0))
                {
                    sub_954( "CR", "Shutting down script for MCE_PRACTICE.", 0 );
                    sub_3301( ref g_U888[2] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U888[2]._fU32 );
                    g_U3869 = 0;
                    ACTION_TREE_FORCE_UNLOAD( "NPC\AMED.act" );
                }
                l_U116 = 3;
                sub_888( "eFailState = FAIL_CLEANUP_ALL" );
            }
            break;
            case 3:
            sub_888( "eFailState = FAIL_CLEANUP_ALL" );
            if (NOT (IS_ACTION_TREE_LOADED( "NPC\AMED.act" )))
            {
                if ((NOT (IS_PED_DEAD( sub_1255() ))) AND (NOT (IS_PLAYER_DEAD( sub_1277() ))))
                {
                    SET_PLAYER_CONTROL( sub_1277(), 0, 0 );
                    if (GET_IS_PED_FORCED_TO_WALK( sub_1255() ))
                    {
                        SET_PED_FORCED_TO_WALK( sub_1255(), 0 );
                    }
                }
                DO_SCREEN_FADE_OUT( 0 );
                DESTROY_ALL_CAMS();
                RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
                AUDIO_MUSIC_SUSPEND( 500 );
                AUDIO_MUSIC_STOP_ONESHOT();
                sub_3617();
                l_U116 = 4;
                sub_888( "eFailState = FAIL_RESTORE_PLAYER" );
            }
            else
            {
                sub_888( "Waiting for AMED.act to unload" );
                ACTION_TREE_FORCE_UNLOAD( "NPC\AMED.act" );
            }
            break;
            case 4:
            sub_888( "eFailState = FAIL_RESTORE_PLAYER" );
            if (l_U77._fU0)
            {
                sub_6860( ref l_U77, sub_1255() );
            }
            l_U116 = 5;
            sub_888( "eFailState = FAIL_RESTART_CHECKPOINT" );
            break;
            case 5:
            sub_888( "eFailState = FAIL_RESTART_CHECKPOINT" );
            l_U113 = 1;
            l_U115 = 0;
            l_U116 = 0;
            sub_888( "eFailState = FAIL_IDLE" );
            break;
        }
    }
    return;
}

int sub_1255()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1277() );
    }
    return 0;
}

void sub_1277()
{
    return GET_PLAYER_ID();
}

int sub_1328()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1255() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1255(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1277(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1277(), 1 );
            if ((IS_PED_VISIBLE( sub_1255() )) == 0)
            {
                SET_PED_VISIBLE( sub_1255(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1816()
{
    return g_U648;
}

int sub_1856(int iParam0)
{
    iParam0 = 1;
    switch (l_U45)
    {
        case 0:
        if (NOT (sub_1917( ref l_U47 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1255() )))
            {
                l_U46 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_2027( ref l_U47, l_U46, 1, 1 );
            sub_2163( ref l_U47 );
        }
        if (sub_2283( ref l_U47 ))
        {
            sub_954( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1255() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1277() )))
            {
                SET_PLAYER_CONTROL( sub_1277(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U45 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U45 = 2;
            }
            else
            {
                l_U45 = 3;
            }
        }
        break;
        case 2:
        sub_954( "NS", "Player will QUIT", 0 );
        sub_2770();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_954( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2770();
        return 1;
        break;
    }
    return 0;
}

int sub_1917(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_2027(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2163(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_2283(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2770()
{
    sub_954( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2820( ref l_U47 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1277() )))
    {
        SET_PLAYER_CONTROL( sub_1277(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U44 = 0;
    l_U44 = l_U44;
    l_U45 = 0;
    return;
}

void sub_2820(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_3301(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_3617()
{
    sub_888( "P_CLEANUP_FIELD" );
    sub_3654( ref l_U252 );
    sub_3790( 1224272620, ref g_U1214 );
    ISEQ_TERMINATE( -1110817698 );
    sub_4110( -1110817698, ref g_U1263 );
    ISEQ_TERMINATE( -1424164141 );
    sub_4110( -1424164141, ref g_U1263 );
    ISEQ_TERMINATE( 2130328435 );
    sub_4110( 2130328435, ref g_U1263 );
    ISEQ_TERMINATE( -1191130939 );
    sub_4110( -1191130939, ref g_U1263 );
    sub_4434( "S_STAD_EDI_KILL1", ref g_U2034 );
    sub_4762( "S_STAD_EDI_KILL1", ref g_U2034 );
    sub_4434( "S_STAD_VIG15_YELLS", ref g_U2034 );
    sub_4762( "S_STAD_VIG15_YELLS", ref g_U2034 );
    if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "STADIUM_ONESHOT_1" ))
    {
        AUDIO_MUSIC_STOP_ONESHOT();
    }
    sub_5035( g_U3705 );
    sub_3688( l_U277 );
    sub_3688( l_U295 );
    sub_3688( l_U1090 );
    sub_5123( ref l_U679 );
    sub_5215( l_U1336 );
    sub_5263( l_U1977 );
    sub_5263( g_U3704 );
    sub_5319( sub_1255(), 0 );
    sub_5561( 0, 0, 0, -859915232, -859915232, 0 );
    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        SET_PED_AS_ONE_SHOT_KILL( sub_1255(), 0 );
        SET_PED_ALLOWED_TO_DUCK( sub_1255(), 1 );
        sub_5703( 0 );
    }
    SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
    CAMERA_CLEAR_POINT_AT_TARGET();
    sub_5907( ref l_U1209 );
    sub_5907( ref l_U310 );
    sub_5907( ref l_U312 );
    sub_5907( ref l_U1973 );
    sub_5907( ref l_U1975 );
    sub_6026( ref l_U1914, 1 );
    sub_6181();
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_comeon", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_3d_comeon", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_getoutofthere", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_3d_getoutofthere", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_getoffthatfield", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_3d_getoffthatfield", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_3d_comeon02", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_comeon02", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_getover", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_3d_getover", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_killed", 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_3d_killed", 0 );
    return;
}

void sub_3654(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_3688( (uParam0^)[I] );
    }
    return;
}

void sub_3688(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_3790(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_3888( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

int sub_3888(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_4110(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_3888( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

void sub_4434(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_4451( uParam0, uParam1 ))
    {
        iVar4 = sub_4550( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    return;
}

int sub_4451(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_4550(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

void sub_4762(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_3888( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_5035(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_5123(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_5155( ref (uParam0^)[I] );
    }
    return;
}

void sub_5155(int iParam0)
{
    sub_3688( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

void sub_5215(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_5263(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

int sub_5319(unknown uParam0, boolean bParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (bParam1)
        {
            if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 )))
            {
                sub_888( "MAL_SetCanTriggerBulletCam: Ped is not able to trigger BC, adding" );
                SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
                return 1;
            }
        }
        else if (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 ))
        {
            sub_888( "MAL_SetCanTriggerBulletCam turning off BC" );
            SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
            return 1;
        }
    }
    return 0;
}

void sub_5561(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_5703(boolean bParam0)
{
    if (bParam0)
    {
        sub_888( "MAL_SetFootstepsType setting movement type to STUMBLE" );
        SET_FOOT_STEP_AUDIO_MOVEMENT( sub_1255(), 1 );
    }
    else
    {
        sub_888( "MAL_SetFootstepsType setting movement type to NORMAL" );
        SET_FOOT_STEP_AUDIO_MOVEMENT( sub_1255(), 0 );
    }
    return;
}

void sub_5907(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_6026(int iParam0, int iParam1)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam1 == 1)
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam1 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam1 );
        }
        else
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
        }
        sub_2820( iParam0 + 40 );
        sub_2820( iParam0 + 76 );
        sub_2820( iParam0 + 112 );
        iParam0->_fU172 = 0;
    }
    return;
}

void sub_6181()
{
    sub_954( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    return;
}

void sub_6860(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_954( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_7044( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_8121( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_8413( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_8773( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_8413( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_8773( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_8413( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_8773( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_9058( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_8773( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_9058( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_8773( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_9551( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_9712( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1255(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_954( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_7044(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_7076( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_7076(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_8121(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_8413(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_8729( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_8729(unknown uParam0)
{
    return;
}

void sub_8773(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_9058(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_8729( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_9551(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_9712(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_7076( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_9784( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_9784(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_11064()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;

    iVar2 = l_U113;
    switch (l_U113)
    {
        case 0: break;
        case 1:
        sub_888( "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA" );
        sub_11270();
        sub_12132();
        sub_15568();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U113 = 2;
        sub_954( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_888( "eCheckpointState = CP_INITIAL_REQUEST_ASSETS" );
        sub_15716();
        sub_21494();
        l_U113 = 3;
        sub_954( "AT", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_25824( ref g_U2034 )) AND ((sub_25697( ref g_U2012 )) AND ((sub_25506( ref g_U1263 )) AND ((sub_25379( ref g_U1354 )) AND ((sub_25258( ref g_U1214 )) AND (sub_25138( ref g_U1069 )))))))
        {
            if ((NOT l_U77._fU0) AND (g_U854 <= 1))
            {
                l_U113 = 4;
                sub_888( "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP" );
            }
            else
            {
                l_U113 = 5;
                sub_954( "GA", "eCheckpointState = CP_SETUP", 0 );
            }
        }
        break;
        case 4:
        sub_954( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        if (g_U854 == 1)
        {
            l_U115 = 0;
        }
        sub_26170( ref l_U77 );
        l_U113 = 5;
        sub_954( "GA", "eCheckpointState = CP_SETUP", 0 );
        break;
        case 5:
        if (l_U114)
        {
            sub_26408();
            sub_11888( ref g_U2884, 0.00000000, 90.00000000 );
            sub_11888( ref g_U2891, -90.00000000, 0.00000000 );
            sub_27223( ref g_U2884, 1 );
            sub_27223( ref g_U2891, 1 );
            ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_EdisonHelpsMax", 1, 0, 0, 0 );
            ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_TunnelEndCorner", 1, 0, 0, 0 );
            sub_27469();
            sub_27630();
            l_U119 = 1;
            l_U262 = 1;
        }
        if (sub_28071())
        {
            if (sub_30675( ref l_U679, "FieldVictim", ref l_U944, 1, 1, 1 ))
            {
                if (l_U115)
                {
                    if (sub_32610())
                    {
                        if (CUTSCENE_IS_LOADED( "03_01_STAD_concat" ))
                        {
                            sub_33484();
                            sub_33880( ref l_U679, 0, 0, -1 );
                            sub_34063( l_U277, 0 );
                            sub_34063( l_U1090, 0 );
                            SET_HELPER_TRACKING_MODE( 1 );
                            l_U113 = 6;
                            sub_888( "eCheckpointState = CP_INTRO" );
                        }
                    }
                }
                else
                {
                    sub_33484();
                    l_U113 = 6;
                    sub_888( "eCheckpointState = CP_INTRO" );
                }
            }
        }
        break;
        case 6:
        if (l_U114)
        {
            sub_38708( ref l_U120, "03_01_STAD_concat", 34312, 34331, 36271, 36670, 36689, 38685, 250, 0 );
            l_U120._fU100 = g_U853;
            if (l_U115)
            {
                l_U120._fU4 = 1;
            }
            else
            {
                l_U120._fU4 = 7;
                AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1", "", 0, 15000, -1, -1082130432, 0 );
            }
            SET_SWEAT_ENABLED( 0 );
            l_U115 = 0;
        }
        if (sub_39212( ref l_U120 ))
        {
            if (NOT l_U77._fU0)
            {
                g_U855 = 1;
                sub_41378( ref l_U77, g_U855, sub_1255(), g_U2138[1] + l_U314, g_U2256[1], g_U2296[1], g_U2336[1], 0 );
            }
            sub_40079( 1, 0, 0, 1 );
            l_U113 = 7;
        }
        break;
        case 7:
        if (l_U114)
        {
            sub_954( "[SA]", "Entering progression state STATE_FIELD.", "[STATE]" );
            sub_33880( ref l_U679, 1, 0, -1 );
            uVar3 = GET_WEAPON_FROM_HAND( l_U1090, 0, 0 );
            sub_31723( ref uVar3, 13, 1 );
            SET_LASER_SIGHT_ATTACHMENT( uVar3, -789406068 );
            sub_45123();
            sub_47409( ref l_U1090, 0 );
            sub_47456( 0 );
            sub_47409( ref l_U277, 0 );
            sub_47499();
        }
        sub_47699();
        if (sub_48295( ref l_U1134, 0 ))
        {
            sub_954( "GA", "Player has reached safety from sniper.", 0 );
            sub_48497( ref l_U1090 );
            sub_2820( ref l_U1124 );
        }
        if (NOT l_U1134._fU64)
        {
            if ((NOT (IS_PED_DEAD( sub_1255() ))) AND (NOT (IS_PED_DEAD( l_U1090 ))))
            {
                if ((NOT l_U1124._fU16) AND (NOT l_U1124._fU20))
                {
                    if ((sub_48690( l_U1632 )) || (sub_2283( ref l_U1115 )))
                    {
                        sub_954( "GA", "Sniper aiming at Player.", 0 );
                        TASK_AIM_GUN_AT_PED( l_U1090, sub_1255(), -1, 1 );
                        sub_38592( ref l_U1124, 3500 );
                    }
                }
            }
            if (sub_2283( ref l_U1124 ))
            {
                sub_954( "GA", "Sniper shooting Max.", 0 );
                sub_48844();
            }
        }
        else if (NOT l_U1133)
        {
            if ((NOT (sub_48690( l_U1134 ))) AND (sub_48690( l_U628 )))
            {
                sub_954( "GA", "Player walked back out on the field.", 0 );
                TASK_AIM_GUN_AT_PED( l_U1090, sub_1255(), -1, 1 );
                sub_38592( ref l_U1124, 3500 );
                l_U1133 = 1;
            }
        }
        else if (sub_2283( ref l_U1124 ))
        {
            sub_954( "GA", "Sniper shooting Max.", 0 );
            sub_48844();
        }
        if (sub_48690( l_U1134 ))
        {
            sub_954( "GA", "Player has reached safety from sniper.", 0 );
            sub_48497( ref l_U1090 );
            sub_2820( ref l_U1124 );
            l_U1133 = 0;
        };;;
        if ((sub_48295( ref l_U1653, 0 )) || ((sub_48295( ref l_U1632, 0 )) || (sub_48295( ref l_U1611, 0 ))))
        {
            l_U118 = 1;
            l_U113 = 13;
            break;
        }
        if ((sub_2283( ref l_U1105 )) || ((sub_2283( ref l_U1096 )) == 1))
        {
            sub_49320( 32.98799000, 49.15228000, 8.79198100 );
        }
        if (sub_2283( ref l_U318 ))
        {
            sub_888( "RETURN TO GAMEPLAY CAM OH YEAH" );
            sub_40956( 1, 1 );
            SIMULATE_PLAYER_INPUT_GAIT( sub_1277(), 3, 5000, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 1000, 1 );
            sub_49524();
            sub_38592( ref l_U1273, 2000 );
            sub_2163( ref l_U1115 );
            AUDIO_MUSIC_PLAY_ONESHOT();
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_5", "", 0, 1000, -1, -1082130432, 0 );
        }
        sub_49749();
        if (sub_48295( ref l_U397, 0 ))
        {
            sub_51243( l_U277, 47, 5000 );
            sub_2820( ref l_U1273 );
        }
        if (sub_51304())
        {
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            sub_5907( ref l_U1209 );
            sub_51434();
            l_U113 = 8;
        }
        break;
        case 8:
        if (l_U114)
        {
            sub_954( "[SA]", "Entering progression state STATE_PASSOS_HELPS_MAX.", "[STATE]" );
            sub_51820();
            sub_51897();
            sub_52013();
            sub_52308( 0 );
            sub_5907( ref l_U310 );
            l_U310 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            l_U311 = 1;
        }
        if (l_U311 == 1)
        {
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                if ((IS_BULLET_CAMERA_SCENE_ACTIVE( l_U310 )) == 0)
                {
                    SETUP_BULLET_CAMERA_ANIM_SCENE( l_U310, l_U277, l_U277 );
                }
                else
                {
                    sub_954( "SP", "Starting Steady Max Image FX Bullet Cam", 0 );
                    l_U311 = 0;
                }
            }
        }
        if (sub_52628())
        {
            sub_52709();
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1", "", 0, 10000, -1, -1082130432, 0 );
        }
        if (sub_52942( ref l_U277, 55, 1 ))
        {
            sub_53087();
        }
        if (NOT l_U2011)
        {
            if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_STAD_CP_01", "VIG_07B_START_TO_END_CAM" )) - 100))
            {
                l_U2011 = 1;
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( 4.09000000, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( -19.00000000, 1065353216, 0 );
                CAMERA_ANIMATED_STOP( 500, 1 );
            }
        }
        uVar4 = sub_1255();
        if (sub_52942( ref uVar4, 55, 1 ))
        {
            sub_954( "GA", "Passos Help Max return to gameplay cam.", 0 );
            sub_5907( ref l_U310 );
            sub_53579();
            l_U113 = 9;
        }
        break;
        case 9:
        if (l_U114)
        {
            sub_954( "[SA]", "Entering progression state STATE_TUNNEL.", "[STATE]" );
            sub_45123();
            sub_53841( "SSTD_MGDTT", ref uVar5 );
        }
        if ((sub_48295( ref l_U418, 0 )) == 1)
        {
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                sub_52308( 0 );
                sub_954( "SP", "Playing Basement Doors Image FX", 0 );
                PLAY_IMAGEFX( "TRIPLE_MOVE_RIGHT_COLOR_SPLIT1", 4, 0 );
                sub_45123();
            }
        }
        sub_54050();
        if (NOT l_U1133)
        {
            if ((NOT (sub_48690( l_U1134 ))) AND (sub_48690( l_U628 )))
            {
                l_U118 = 1;
                l_U113 = 13;
                break;
            }
        }
        else if (sub_2283( ref l_U1124 ))
        {
            sub_954( "GA", "Sniper shooting Max.", 0 );
            sub_48844();
        }
        if (sub_48690( l_U1134 ))
        {
            sub_954( "GA", "Player has reached safety from sniper.", 0 );
            sub_48497( ref l_U1090 );
            sub_2820( ref l_U1124 );
            l_U1133 = 0;
        }
        if (sub_52942( ref l_U277, 47, 0 ))
        {
            if ((sub_48295( ref l_U481, 0 )) == 1)
            {
                sub_55029();
                SET_PED_INVINCIBLE( sub_1255(), 0 );
                sub_52308( 0 );
                sub_5907( ref l_U312 );
                l_U312 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
                l_U313 = 1;
            }
        }
        if (l_U313 == 1)
        {
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                if ((IS_BULLET_CAMERA_SCENE_ACTIVE( l_U312 )) == 0)
                {
                    SETUP_BULLET_CAMERA_ANIM_SCENE( l_U312, l_U277, l_U277 );
                }
                else
                {
                    sub_954( "SP", "Starting Head Crack Image FX Bullet Cam", 0 );
                    l_U313 = 0;
                }
            }
        }
        if (sub_55880())
        {
            sub_55987();
        }
        if (sub_56226())
        {
            sub_56289();
            ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_MaxStumble01", 0, 0, 0, 0 );
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            sub_5907( ref l_U312 );
            sub_38592( ref l_U1964, 1500 );
        }
        if (sub_2283( ref l_U1964 ))
        {
            sub_53841( "SSTD_VIG09A", ref uVar15 );
        }
        if (sub_56558())
        {
            sub_5703( 1 );
            sub_56718();
            sub_38592( ref l_U1346, 6000 );
            AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_2", 0 );
        }
        if ((sub_52957( sub_1255(), 55 )) == 1)
        {
            SIMULATE_PLAYER_INPUT_GAIT( sub_1277(), 3, 2000, 0 );
            uVar25 = sub_1255();
            sub_53023( ref uVar25, 55 );
            DISPLAY_HUD( 1 );
            sub_5703( 0 );
        }
        if (sub_2283( ref l_U1346 ))
        {
            sub_45123();
            sub_56995();
        }
        if (sub_57147())
        {
            sub_57279( sub_1255(), l_U277 );
        }
        if (sub_48295( ref l_U523, 0 ))
        {
            sub_57349();
            sub_57786();
            sub_57279( l_U277, sub_1255() );
        }
        if (sub_52942( ref l_U277, 37, 1 ))
        {
            sub_37452( ref l_U1579 );
            sub_37534( 1, l_U277, "PASSOS", ref l_U1579, 2, 0 );
            sub_37773( "SSTD_BTPD", ref l_U1579, 8, 1 );
        }
        if (sub_48295( ref l_U502, 0 ))
        {
            CLEAR_PED_PRIMARY_LOOKAT( l_U277 );
            l_U113 = 10;
        }
        break;
        case 10:
        if (l_U114)
        {
            sub_954( "[SA]", "Entering progression state STATE_BLOOD_SMEAR_NIS.", "[STATE]" );
            sub_52308( 0 );
            l_U1990 = 0;
            l_U1991 = 0;
            sub_38592( ref l_U1992, 900 );
            l_U1568 = 1;
        }
        if (sub_2283( ref l_U1992 ))
        {
            AUDIO_MUSIC_PLAY_ONESHOT();
        }
        switch (l_U1568)
        {
            case 0: break;
            case 1:
            sub_954( "SP", "nisBloodSmearState = NIS2_SETUP", 0 );
            sub_5263( g_U3704 );
            sub_40079( 1, 0, 0, 0 );
            sub_34063( sub_1255(), 0 );
            sub_58397( l_U277, "/Global/PASSOS_THROUGH_BASEMENT/PASSOS_THROUGH_BASEMENT_CONTROL/SECTION_1_DOORS_TO_BIN/BLOOD_TRAIL_WAIT" );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_01", "VIG_11_STADIUM_IDLE_A_TO_IDLE_B_CAM", 1, 10.45500000, 71.86000000, -1.63300000, 90.00000000, 0, 0 );
            SET_CAMERA_OVERRIDE( "UNARMED_INJURED_CAMERA", "", 0, 1, 1 );
            sub_38592( ref l_U2001, 500 );
            l_U1568 = 2;
            sub_954( "SP", "nisBloodSmearState = NIS2_PLAYING", 0 );
            break;
            case 2:
            if (sub_2283( ref l_U2001 ))
            {
                sub_58654();
            }
            if (NOT l_U1990)
            {
                if (CAMERA_ANIMATED_CURRENT_TIME() > 1619)
                {
                    l_U1990 = 1;
                    CLEAR_PED_TASKS_IMMEDIATELY( sub_1255() );
                    sub_58942( l_U1607, l_U1610, 0, 0 );
                    sub_34063( sub_1255(), 1 );
                }
            }
            if (NOT l_U1991)
            {
                if (CAMERA_ANIMATED_CURRENT_TIME() > 5369)
                {
                    sub_58397( l_U277, "/Global/PASSOS_THROUGH_BASEMENT/PASSOS_THROUGH_BASEMENT_CONTROL/SECTION_1_DOORS_TO_BIN/COVER_A_TO_BIN" );
                    l_U1991 = 1;
                    sub_58397( sub_1255(), "/Global/S_STAD_INJ1/S_STAD_INJ_SEQ/S_STAD_INJ1/S_STAD_INJ_FIELD/IDLE/STAD_INJ_IDLE" );
                }
            }
            if (CAMERA_ANIMATED_CURRENT_TIME() > 8940)
            {
                sub_888( "Bloodsmear Anim Cam Finished" );
                CAMERA_ANIMATED_STOP( 2750, 1 );
                CAMERA_POINT_AT_COORD( 30.47922000, 71.51909000, -1.90999900, 0 );
                sub_38592( ref l_U1589, 2800 );
                sub_38592( ref l_U1598, 2000 );
                l_U1910 = 1;
                sub_59381();
                l_U1568 = 3;
            }
            break;
            case 3:
            if (sub_2283( ref l_U1598 ))
            {
                if ((NOT (IS_PED_DEAD( l_U277 ))) AND (NOT (IS_PED_DEAD( sub_1255() ))))
                {
                    SET_PED_PRIMARY_LOOKAT( l_U277, sub_1255() );
                    FREEZE_PED_POSITION( sub_1255(), 0 );
                    SIMULATE_PLAYER_INPUT_GAIT( sub_1277(), 2, 1250, 0 );
                }
            }
            if (sub_2283( ref l_U1589 ))
            {
                l_U1568 = 0;
                sub_40956( 1, 1 );
                l_U113 = 11;
            }
            break;
        }
        break;
        case 11:
        if (l_U114)
        {
            sub_954( "[SA]", "Entering progression state STATE_LOCKER_ROOM.", "[STATE]" );
            AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_10", 0 );
            sub_53841( "SSTD_TCRA", ref uVar26 );
            l_U1674 = 0;
            l_U1911 = 0;
            l_U1912 = 1;
        }
        sub_54050();
        if (NOT l_U1913)
        {
            uVar36 = {sub_60453( sub_1255() )};
            if ((NOT (IS_SPHERE_VISIBLE( 8.90405900, 70.50001000, -2.44081100, 1.00000000, 0 ))) AND (uVar36._fU0 > 13.50000000))
            {
                l_U1913 = 1;
                sub_27223( ref g_U2933, 1 );
                sub_27223( ref g_U2926, 1 );
                sub_60590( ref g_U2933, 1 );
                sub_60590( ref g_U2926, 1 );
                sub_3688( l_U295 );
                sub_57457( 279061184, ref g_U1069 );
                sub_60753( 0 );
            }
        }
        if (sub_62001())
        {
            sub_57279( l_U277, sub_1255() );
            sub_36747( l_U277, l_U331, l_U334 );
        }
        if (NOT l_U544._fU64)
        {
            if ((sub_62148( "Y", "Greater", 71.60000000 )) AND (sub_62148( "X", "Greater", 10.90000000 )))
            {
                CLEAR_PED_PRIMARY_LOOKAT( l_U277 );
                sub_62387();
                CAMERA_CLEAR_POINT_AT_TARGET();
                l_U544._fU64 = 1;
            }
        }
        if (sub_62537())
        {
            CLEAR_PED_PRIMARY_LOOKAT( l_U277 );
            sub_36747( l_U277, l_U335, l_U338 );
            sub_38592( ref l_U1273, 4000 );
        }
        if (l_U349)
        {
            if ((NOT (IS_ANY_SPEECH_PLAYING( sub_1255() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( l_U277 ))) AND (NOT (sub_49795( l_U354 )))))
            {
                if ((l_U364 < 3) AND (sub_2283( ref l_U1273 )))
                {
                    sub_37452( ref l_U354 );
                    sub_37534( 1, l_U277, "PASSOS", ref l_U354, 2, 0 );
                    sub_37773( "SSTD_MNFM", ref l_U354, 7, 1 );
                    sub_38592( ref l_U1273, 11000 );
                    l_U364++;
                }
            }
        }
        if (NOT l_U352)
        {
            if ((sub_48295( ref l_U586, 0 )) || (sub_48295( ref l_U565, 0 )))
            {
                sub_954( "GA", "Passos moving to Dark Room door.", 0 );
                l_U352 = 1;
                CLEAR_PED_PRIMARY_LOOKAT( l_U277 );
                sub_62922();
                l_U349 = 0;
                sub_2820( ref l_U1273 );
            }
        }
        if (sub_63009())
        {
            sub_36747( l_U277, l_U339, l_U342 );
        }
        if (sub_63112( ref l_U1424, 0 ))
        {
            sub_63276( 0 );
        }
        else
        {
            sub_63276( 1 );
        }
        if (sub_48295( ref l_U649, 0 ))
        {
            SIMULATE_PLAYER_INPUT_GAIT( sub_1277(), 3, 5000, 0 );
        }
        if (sub_63806())
        {
            l_U113 = 12;
        }
        break;
        case 12:
        if (l_U114)
        {
            sub_954( "[SA]", "Entering progression state STATE_DARK_ROOM.", "[STATE]" );
            if (NOT (IS_PED_DEAD( l_U277 )))
            {
                CLEAR_PED_PRIMARY_LOOKAT( l_U277 );
            }
            sub_64045();
            sub_38592( ref l_U1981, 2000 );
            sub_38592( ref l_U1325, 1500 );
            sub_38592( ref l_U1155, 10600 );
            sub_38592( ref l_U1164, 11400 );
            sub_38592( ref l_U1346, 6000 );
            sub_52308( 0 );
            sub_5907( ref l_U1973 );
            l_U1973 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            l_U1974 = 1;
        }
        if (l_U1974 == 1)
        {
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                if ((IS_BULLET_CAMERA_SCENE_ACTIVE( l_U1973 )) == 0)
                {
                    SETUP_BULLET_CAMERA_ANIM_SCENE( l_U1973, sub_1255(), sub_1255() );
                }
                else
                {
                    sub_954( "SP", "Curved Wall Lean Image FX started...", 0 );
                    l_U1974 = 0;
                }
            }
        }
        if (sub_2283( ref l_U1981 ))
        {
            sub_64564( ref l_U1977, 1427023677, l_U1978, ref g_U2452, 1, 0 );
            sub_64976( l_U1977, "BLOOD_PARENT", "st_objModels", 1065353216, 0 );
        }
        sub_54050();
        if (sub_2283( ref l_U1346 ))
        {
            sub_56995();
            sub_5703( 0 );
        }
        if (l_U2010)
        {
            if (CAMERA_ANIMATED_CURRENT_TIME() > 6000)
            {
                CAMERA_ANIMATED_STOP( 1000, 1 );
                CAMERA_POINT_AT_COORD( 37.24014000, 70.47929000, -2.09090200, 0 );
                sub_40956( 1, 1 );
                if (NOT (IS_PED_DEAD( l_U277 )))
                {
                    CLEAR_PED_DEFAULT_AIM( l_U277 );
                    TASK_CLEAR_LOOK_AT( l_U277 );
                }
                sub_54128( ref l_U1914 );
                l_U2010 = 0;
                sub_65221( ref g_U888[2] );
            }
        }
        if (sub_65247())
        {
            CAMERA_CLEAR_POINT_AT_TARGET();
            sub_64564( ref l_U1977, -2073357282, l_U1978, ref g_U2452, 1, 0 );
        }
        if (sub_65387())
        {
            sub_5703( 1 );
            sub_65513();
            sub_38592( ref l_U1346, 6000 );
            sub_52308( 0 );
            sub_5907( ref l_U1975 );
            l_U1975 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            l_U1976 = 1;
        }
        if (l_U1976 == 1)
        {
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                if ((IS_BULLET_CAMERA_SCENE_ACTIVE( l_U1975 )) == 0)
                {
                    SETUP_BULLET_CAMERA_ANIM_SCENE( l_U1975, sub_1255(), sub_1255() );
                }
                else
                {
                    sub_954( "SP", "Dark Room Lean Image FX started...", 0 );
                    sub_59381();
                    l_U1976 = 0;
                }
            }
        }
        if (sub_2283( ref l_U1155 ))
        {
            sub_954( "SA", "Playing S_STAD_VIG15_YELLS", 0 );
            if (NOT (IS_PED_DEAD( l_U277 )))
            {
                sub_55332( l_U277, "S_STAD_VIG15_YELLS", ref g_U2034 );
            }
        }
        if (sub_2283( ref l_U1164 ))
        {
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1", "", 0, 8000, -1, -1082130432, 0 );
            sub_66021();
            sub_66080( l_U277, 49.00301000, 70.72737000, -1.92489500 );
            PLAY_SOUND_FROM_PED( -1, "S_STAD_LOCKER_ROOM_SHOTS", l_U277 );
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                sub_954( "SP", "Playing Dark Room Passos shot 1 Image FX", 0 );
                PLAY_IMAGEFX( "kill_flash_double", 3, 0 );
            }
            sub_2163( ref l_U1173 );
        }
        if (sub_2283( ref l_U1173 ))
        {
            sub_66080( l_U277, 49.00301000, 70.72737000, -1.92489500 );
            PLAY_SOUND_FROM_PED( -1, "S_STAD_LOCKER_ROOM_SHOTS", l_U277 );
            sub_36747( l_U277, l_U343, l_U346 );
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                sub_954( "SP", "Playing Dark Room Passos shot 2 Image FX", 0 );
                PLAY_IMAGEFX( "kill_flash_double", 3, 0 );
            }
            sub_2163( ref l_U1191 );
        }
        if (sub_2283( ref l_U1191 ))
        {
            sub_66080( l_U277, 49.00301000, 70.72737000, -1.92489500 );
            PLAY_SOUND_FROM_PED( -1, "S_STAD_LOCKER_ROOM_SHOTS", l_U277 );
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                sub_954( "SP", "Playing Dark Room Passos shot 3 Image FX", 0 );
                PLAY_IMAGEFX( "kill_flash_double", 3, 0 );
            }
            sub_2163( ref l_U1200 );
        }
        if (sub_2283( ref l_U1200 ))
        {
            sub_66080( l_U277, 49.00301000, 70.72737000, -1.92489500 );
            PLAY_SOUND_FROM_PED( -1, "S_STAD_LOCKER_ROOM_SHOTS", l_U277 );
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                sub_954( "SP", "Playing Dark Room Passos shot 4 Image FX", 0 );
                PLAY_IMAGEFX( "kill_flash_double", 3, 0 );
            }
            sub_2163( ref l_U1182 );
            sub_38592( ref l_U1273, 10000 );
        }
        if (sub_2283( ref l_U1182 ))
        {
            sub_66880();
        }
        if ((l_U375 < 2) AND ((NOT (IS_ANY_SPEECH_PLAYING( sub_1255() ))) AND ((NOT (IS_ANY_SPEECH_PLAYING( l_U277 ))) AND (NOT (sub_49795( l_U365 ))))))
        {
            if (sub_2283( ref l_U1273 ))
            {
                sub_37452( ref l_U365 );
                sub_37534( 1, l_U277, "PASSOS", ref l_U365, 2, 0 );
                sub_37773( "SSTD_VIG16", ref l_U365, 7, 1 );
                sub_38592( ref l_U1273, 11000 );
                l_U375++;
            }
        }
        if (sub_2283( ref l_U1325 ))
        {
            sub_67194();
            sub_67254();
        }
        if ((sub_48295( ref l_U607, 0 )) == 1)
        {
            DISABLE_RESTART_CHECKPOINT( 1 );
            ISEQ_TERMINATE( 2130328435 );
            sub_4110( 2130328435, ref g_U1263 );
            sub_3688( l_U277 );
            g_U3869 = 1;
            l_U113 = 14;
        }
        break;
        case 13:
        if (l_U114)
        {
            sub_40079( 1, 1, 256, 0 );
            SET_PED_INVINCIBLE( sub_1255(), 0 );
            DO_SCREEN_FADE_OUT( 250 );
            l_U117 = 1;
        }
        sub_67514();
        break;
        case 14:
        if ((g_U855 == 2) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U113 = 0;
            sub_888( "eCheckpointState = CP_IDLE" );
        }
        break;
    }
    sub_68447();
    sub_68779();
    if (l_U113 != iVar2)
    {
        l_U114 = 1;
    }
    else
    {
        l_U114 = 0;
    }
    return;
}

void sub_11270()
{
    sub_888( "P_INITIALIZE_SCRIPT_DATA" );
    l_U119 = 0;
    l_U262 = 0;
    l_U263 = 0;
    l_U347 = 0;
    l_U348 = 0;
    l_U349 = 0;
    l_U350 = 0;
    l_U351 = 0;
    l_U352 = 0;
    l_U1334 = 0;
    l_U1335 = 0;
    l_U1133 = 0;
    l_U1355 = 0;
    l_U1356 = 0;
    l_U1357 = 0;
    l_U1358 = 0;
    l_U1359 = 0;
    l_U1565 = 1;
    l_U1566 = 1;
    l_U1567 = 1;
    l_U353 = 0;
    l_U1911 = 1;
    l_U1912 = 0;
    sub_2027( ref l_U670, 2000, 1, 0 );
    sub_2027( ref l_U1115, l_U1114, 1, 0 );
    sub_2027( ref l_U1124, 1500, 1, 0 );
    sub_2027( ref l_U1173, 2000, 1, 0 );
    sub_2027( ref l_U1182, 500, 1, 0 );
    sub_2027( ref l_U1273, 4000, 1, 0 );
    sub_2027( ref l_U1325, 750, 1, 0 );
    sub_2027( ref l_U1191, 1000, 1, 0 );
    sub_2027( ref l_U1200, 750, 1, 0 );
    sub_2027( ref l_U1164, 11000, 1, 0 );
    sub_2027( ref l_U1337, 6000, 1, 0 );
    sub_2027( ref l_U1346, 6000, 1, 0 );
    l_U1568 = 0;
    l_U1913 = 0;
    sub_11642( ref g_U2933, 0, 1, 65446 );
    sub_11642( ref g_U2926, 0, 1, 90 );
    sub_11888( ref g_U2933, 65445, 65447 );
    sub_11888( ref g_U2926, 89, 91 );
    l_U311 = 0;
    l_U313 = 0;
    l_U1963 = 0;
    l_U1974 = 0;
    l_U1976 = 0;
    l_U1990 = 0;
    l_U1991 = 0;
    l_U2010 = 0;
    l_U2011 = 0;
    l_U117 = 0;
    sub_2820( ref l_U1838 );
    l_U1910 = 0;
    l_U1674 = 2;
    l_U1282 = 0;
    l_U1272 = 0;
    l_U1283 = nil;
    l_U1284 = nil;
    l_U364 = 0;
    l_U375 = 0;
    l_U114 = 1;
    return;
}

void sub_11642(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_11654( iParam0 )) == 0)
    {
        sub_11720( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

int sub_11654(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_11720(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_11888(int iParam0, float fParam1, float fParam2)
{
    if ((sub_11654( iParam0 )) == 0)
    {
        sub_11720( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

void sub_12132()
{
    sub_888( "P_SET_STATIC_DATA" );
    sub_12236( ref l_U376, "TRIG_3D_IMAGE_FX", 0.00000000, 16.61000000, 0.00000000, 15.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12236( ref l_U397, "TRIGGER_PASSOS_TO_STAIRS", 0.16000000, 23.75000000, -0.03000000, 11.76000000, 12.06000000, 4.21000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12236( ref l_U418, "TRIG_BSMT_DOORS_IMAGE_FX", -0.03000000, 45.63000000, -3.41000000, 3.00000000, 2.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12236( ref l_U439, "TRIGGER_START_STEADY", -0.08000000, 31.81000000, -0.50000000, 7.90000000, 1.36000000, 2.71000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12236( ref l_U460, "TRIGGER_PASSOS_INTO_BASEMENT", 0.16000000, 40.64000000, -2.84000000, 12.82000000, 8.44000000, 8.34000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12236( ref l_U481, "TRIGGER_START_HEADCRACK", -0.31000000, 52.65000000, -3.41000000, 5.03000000, 15.45000000, 3.21000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12236( ref l_U502, "TRIG_BLOODTRAIL", 7.11000000, 70.89000000, -3.37000000, 3.08000000, 3.04000000, 2.12000000, 0.00000000, 0.00000000, 45.00000000, 1 );
    sub_12236( ref l_U544, "TRIGGER_PASSOS_TO_SHOWERS", 16.03000000, 73.11000000, -3.52000000, 2.51000000, 5.15000000, 2.53000000, 0.00000000, 0.00000000, 1.03000000, 1 );
    sub_12236( ref l_U523, "TRIGGER_FIELD_TUNNEL_EXIT", -0.02000000, 66.70000000, -3.19000000, 5.00000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12236( ref l_U1360[0], "TRIGGER_DEACTIVATE_GRAV_WELL_0", 29.51000000, 64.48000000, -3.20000000, 3.02000000, 5.91000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12236( ref l_U1360[1], "TRIGGER_DEACTIVATE_GRAV_WELL_1", 30.57000000, 53.74000000, -3.20000000, 1.07000000, 5.82000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12236( ref l_U1360[2], "TRIGGER_DEACTIVATE_GRAV_WELL_2", 23.67000000, 57.63000000, -3.20000000, 1.97000000, 1.64000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13261( ref l_U1424, ref l_U1360 );
    sub_12236( ref l_U565, "TRIGGER_PASSOS_TO_DARKROOM_01", 26.86000000, 66.47000000, -3.52000000, 2.51000000, 5.15000000, 2.53000000, 0.00000000, 0.00000000, 111.94000000, 1 );
    sub_12236( ref l_U586, "TRIGGER_PASSOS_TO_DARKROOM_02", 24.57000000, 54.66000000, -3.52000000, 2.51000000, 5.15000000, 2.53000000, 0.00000000, 0.00000000, 24.47000000, 1 );
    sub_12236( ref l_U607, "TRIGGER_END_FIELD", 35.99000000, 70.91000000, -3.22000000, 2.51000000, 3.00000000, 2.53000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12236( ref l_U1134, "tb_PlayerSafeFromSniper", -0.08000000, 30.20000000, 0.20000000, 5.00000000, 7.99000000, 2.94000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12236( ref l_U628, "TRIGGER_REACTIVATE_SNIPER", 0.16000000, 21.68000000, -0.03000000, 11.76000000, 12.06000000, 4.21000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12236( ref l_U1611, "TRIGGER_DIE_MAX_DIE_RIGHT", 25.75000000, 8.18000000, -0.10000000, 62.44000000, 16.12000000, 3.27000000, 0.00000000, 0.00000000, -59.94000000, 1 );
    sub_12236( ref l_U1653, "TRIGGER_DIE_MAX_DIE_REAR", -0.73000000, -18.25000000, -0.10000000, 81.69000000, 14.75000000, 3.27000000, 0.00000000, 0.00000000, -9.67999000, 1 );
    sub_12236( ref l_U1632, "TRIGGER_DIE_MAX_DIE_LEFT", -10.06000000, 10.35000000, -0.10000000, 42.77000000, 13.38000000, 3.27000000, 0.00000000, 0.00000000, 90.41000000, 1 );
    sub_12236( ref l_U1847, "tbImageFXWall", 1.40000000, 54.77000000, -3.73729000, 1.00000000, 1.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12236( ref l_U1868, "tbImageFXCorner01", 6.95958000, 69.80270000, -3.74000000, 10.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12236( ref l_U1889, "tbImageFXCorner02", 25.77000000, 64.00000000, -3.74000000, 10.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12236( ref l_U649, "TRIGGER_MAKEGOWALK", 30.80000000, 58.94000000, -3.24000000, 2.90000000, 4.45000000, 2.29000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14552( ref l_U147[0], 9.20000000, 23.92000000, 0.17000000, 205.00000000, 1670196971, 7, 3, 2, 0, 0 );
    sub_14552( ref l_U147[1], 9.40000000, 23.92000000, 0.17000000, 205.00000000, 253926538, 7, 3, 2, 0, 0 );
    sub_14552( ref l_U147[2], 9.60000000, 23.92000000, 0.17000000, 205.00000000, -236362279, 7, 3, 2, 0, 0 );
    sub_14552( ref l_U147[3], 9.80000000, 23.92000000, 0.17000000, 205.00000000, 1048803264, 7, 3, 2, 0, 0 );
    sub_14552( ref l_U147[4], 10.00000000, 23.92000000, 0.17000000, 205.00000000, -1259721122, 7, 3, 2, 0, 0 );
    sub_14552( ref l_U147[5], 10.20000000, 23.92000000, 0.17000000, 205.00000000, -55197192, 7, 3, 2, 0, 0 );
    sub_14552( ref l_U147[6], 9.00000000, 23.92000000, 0.17000000, 205.00000000, -1838870036, 7, 3, 2, 0, 0 );
    sub_14552( ref l_U147[7], 9.00000000, 23.92000000, 0.17000000, 205.00000000, 762087143, 7, 3, 2, 0, 0 );
    ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_MaxStumble01", 1, 0, 0, 0 );
    ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_MaxStumbleFall02", 0, 0, 0, 0 );
    sub_15080( ref l_U1914, 7, 0.10000000, 0, -1, 1500, 0, 0 );
    return;
}

void sub_12236(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_13261(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
        sub_954( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

void sub_14552(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_15080(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (iParam0->_fU168 == 0)
    {
        sub_15108( iParam0, uParam1 );
        iParam0->_fU192 = uParam1;
        iParam0->_fU36 = uParam2;
        iParam0->_fU148 = uParam3;
        iParam0->_fU152 = uParam4;
        iParam0->_fU156 = uParam5;
        iParam0->_fU160 = uParam7;
        iParam0->_fU176 = uParam6;
    }
    sub_2820( iParam0 + 40 );
    sub_2820( iParam0 + 76 );
    sub_2820( iParam0 + 112 );
    iParam0->_fU172 = iParam0->_fU176;
    iParam0->_fU164 = 0;
    iParam0->_fU168 = 1;
    iParam0->_fU184 = 0;
    iParam0->_fU188 = 0;
    return;
}

void sub_15108(int iParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case 1:
        StrCopy( ref iParam0->_fU4, "SMALL_EXPLOSION_SHAKE", 32 );
        break;
        case 2:
        StrCopy( ref iParam0->_fU4, "MEDIUM_EXPLOSION_SHAKE", 32 );
        break;
        case 3:
        StrCopy( ref iParam0->_fU4, "LARGE_EXPLOSION_SHAKE", 32 );
        break;
        case 4:
        StrCopy( ref iParam0->_fU4, "HAND_SHAKE", 32 );
        break;
        case 5:
        StrCopy( ref iParam0->_fU4, "JOLT_SHAKE", 32 );
        break;
        case 6:
        StrCopy( ref iParam0->_fU4, "VIBRATE_SHAKE", 32 );
        break;
        case 7:
        StrCopy( ref iParam0->_fU4, "WOBBLY_SHAKE", 32 );
        break;
    }
    iParam0->_fU0 = iParam0->_fU192;
    return;
}

void sub_15568()
{
    return;
}

void sub_15716()
{
    sub_888( "P_REQUEST_FIELD_PERSISTENT_ASSETS start" );
    sub_15781( ref l_U2012, ref g_U1069 );
    sub_17189( ref l_U2020, ref g_U1214 );
    sub_18206( "LEVEL_S_STAD_CP_01", ref g_U1354 );
    sub_18206( "LEVEL_S_STAD_LOCKER", ref g_U1354 );
    sub_19248( "/LEVEL/S_STAD/s_stad_inj1.act", ref g_U2012 );
    if ((NOT l_U77._fU0) AND (g_U854 == 0))
    {
        sub_20256( 0, 1 );
    }
    else
    {
        sub_20256( 0, 0 );
    }
    sub_888( "P_REQUEST_FIELD_PERSISTENT_ASSETS end" );
    return;
}

void sub_15781(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_15816( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_15816(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_15851( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_15982( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_15851(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_15982( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_15982( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_15982( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_16630( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_15982( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_15982( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_15982(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16002( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_16002(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_16630(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_17189(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_17224( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_17224(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_17245( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_17377( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_17245(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_17377( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_17377( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_17377( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_16630( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_17377( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_17377( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_17377(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16002( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_18206(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_18227( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_18364( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_18227(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_18364( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_18364( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_18364( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_16630( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_18364( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_18364( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18364(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16002( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_19248(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_19269( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_19408( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_19269(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being requested!!!", 0 );
                sub_19408( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is already loading!!!", 0 );
                sub_19408( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_ACTION_TREE_LOADED( uParam0 ))
                {
                    sub_19408( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ACTION_TREE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_16630( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being removed!!!", 0 );
                sub_19408( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_ACTION_TREE_LOADED( uParam0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_19408( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ACTION_TREE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19408(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16002( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ACTION_TREE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_20256(boolean bParam0, boolean bParam1)
{
    if (NOT bParam0)
    {
        if (NOT bParam1)
        {
            sub_18206( "PLGE_RIFLE_CROUCH", ref g_U1354 );
            sub_18206( "PLGE_PSTL_CROUCH", ref g_U1354 );
            sub_18206( "PLGE_RIFLE_KNEE", ref g_U1354 );
            sub_18206( "PLGE_PSTL_KNEE", ref g_U1354 );
            sub_18206( "PLGE_PSTL_CORE", ref g_U1354 );
            sub_18206( "PLGE_PSTL_COVER", ref g_U1354 );
        }
        sub_18206( "PLGE_RIFLE_CORE", ref g_U1354 );
        sub_18206( "PLGE_RIFLE_CORE_RELOAD", ref g_U1354 );
        sub_18206( "PLGE_PSTL_CORE_RELOAD", ref g_U1354 );
        sub_18206( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
        sub_18206( "PLGE_PSTL_HANDSIG", ref g_U1354 );
        sub_18206( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
        sub_18206( "PLGE_PSTL_ACTIONS", ref g_U1354 );
        sub_18206( "PLGE_RIFLE_COVER", ref g_U1354 );
        sub_18206( "PLGE_RIFLE_REACT", ref g_U1354 );
        sub_18206( "PLGE_PSTL_REACT", ref g_U1354 );
        sub_18206( "PLGE_RIFLE_COVER_EXIT", ref g_U1354 );
        sub_18206( "PLGE_PSTL_COVER_EXIT", ref g_U1354 );
        sub_18206( "PLGE_PSTL_FULLBODY", ref g_U1354 );
    }
    else
    {
        sub_20862( "PLGE_RIFLE_CROUCH", 0, 1 );
        sub_20862( "PLGE_PSTL_CROUCH", 0, 1 );
        sub_20862( "PLGE_RIFLE_CORE", 0, 1 );
        sub_20862( "PLGE_PSTL_CORE", 0, 1 );
        sub_20862( "PLGE_RIFLE_CORE_RELOAD", 0, 1 );
        sub_20862( "PLGE_PSTL_CORE_RELOAD", 0, 1 );
        sub_20862( "PLGE_RIFLE_HANDSIG", 0, 1 );
        sub_20862( "PLGE_PSTL_HANDSIG", 0, 1 );
        sub_20862( "PLGE_RIFLE_ACTIONS", 0, 1 );
        sub_20862( "PLGE_PSTL_ACTIONS", 0, 1 );
        sub_20862( "PLGE_RIFLE_KNEE", 0, 1 );
        sub_20862( "PLGE_PSTL_KNEE", 0, 1 );
        sub_20862( "PLGE_RIFLE_COVER", 0, 1 );
        sub_20862( "PLGE_PSTL_COVER", 0, 1 );
        sub_20862( "PLGE_RIFLE_REACT", 0, 1 );
        sub_20862( "PLGE_PSTL_REACT", 0, 1 );
        sub_20862( "PLGE_RIFLE_COVER_EXIT", 0, 1 );
        sub_20862( "PLGE_PSTL_COVER_EXIT", 0, 1 );
        sub_20862( "PLGE_PSTL_FULLBODY", 0, 1 );
    }
    return;
}

void sub_20862(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_21494()
{
    sub_888( "P_REQUEST_FIELD_NONPERSISTENT_ASSETS start" );
    if ((l_U115) AND (g_U855 == 0))
    {
        sub_954( "AT", "Requesting 03_01_STAD_concat ...", 0 );
        sub_21639( "03_01_STAD_concat", 0 );
        sub_17224( 1224272620, ref g_U1214 );
    }
    sub_21910( -1110817698, ref g_U1263 );
    sub_21910( -1424164141, ref g_U1263 );
    sub_21910( 2130328435, ref g_U1263 );
    sub_21910( -1191130939, ref g_U1263 );
    sub_23897( "S_STAD_EDI_KILL1", ref g_U2034 );
    sub_23897( "S_STAD_VIG15_YELLS", ref g_U2034 );
    AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_1", 0 );
    sub_888( "P_REQUEST_FIELD_NONPERSISTENT_ASSETS end" );
    return;
}

void sub_21639(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_21910(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_21945( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_22097( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_21945(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_22097( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_22097( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_22097( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_22097( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_16630( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_16630( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_22097( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_22097( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22097(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16002( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_23897(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_23918( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_24059( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_23918(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                sub_24059( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                sub_24059( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        sub_24059( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                        sub_16630( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    sub_24059( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                sub_24059( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                sub_24059( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_24059(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16002( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_25138(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25258(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25379(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25506(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_25697(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25824(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_26170(unknown uParam0)
{
    sub_954( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_6860( uParam0, sub_1255() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_26408()
{
    sub_26475( ref l_U679[0], -5.36000000, 17.09000000, 0.17000000, 336.30000000, g_U652, -1259721122, -442116668, 5, 12, 0, 68019059, 0 );
    l_U950[0]._fU36 = 8000;
    l_U950[0]._fU76 = 5500;
    sub_26475( ref l_U679[1], 9.71000000, 23.92000000, 0.17000000, 205.00000000, g_U652, -236362279, -442116668, 5, 12, 0, -1074756423, 0 );
    l_U950[1]._fU36 = 6000;
    l_U950[1]._fU76 = 4250;
    sub_26475( ref l_U679[2], 9.62700000, 12.61500000, 0.17000000, 332.04400000, g_U652, 1048803264, -442116668, 5, 12, 0, 68019059, 0 );
    l_U950[2]._fU36 = 7000;
    l_U950[2]._fU76 = 2250;
    sub_26475( ref l_U679[3], 12.90000000, 16.61500000, 0.17000000, 24.13000000, g_U652, 1048803264, -442116668, 5, 12, 0, 68019059, 0 );
    l_U950[3]._fU36 = 5000;
    l_U950[3]._fU76 = 3500;
    sub_26475( ref l_U679[4], 15.54800000, 2.54400000, 0.17000000, 0.00000000, g_U652, 253926538, -442116668, 5, 12, 0, 68019059, 0 );
    l_U950[4]._fU36 = 4250;
    l_U950[4]._fU76 = 3500;
    sub_26475( ref l_U679[5], -3.72400000, 10.33300000, 0.17261100, 285.89880000, g_U652, 1670196971, 1689856371, 5, 12, 0, 68019059, 0 );
    l_U950[5]._fU36 = 6000;
    l_U950[5]._fU76 = 5000;
    return;
}

void sub_26475(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
    sub_26528( uParam0, uParam1, uParam4, uParam18, 68019059, 2, g_U3928, uParam15, uParam16, uParam14, uParam19, uParam17, uParam13, uParam5 );
    return;
}

void sub_26528(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU68 = uParam4;
    iParam0->_fU72 = uParam5;
    iParam0->_fU76 = uParam6;
    iParam0->_fU80 = uParam7;
    iParam0->_fU84 = {uParam8};
    iParam0->_fU116 = uParam16;
    iParam0->_fU120 = uParam17;
    iParam0->_fU124 = uParam18;
    iParam0->_fU128 = uParam19;
    iParam0->_fU132 = uParam20;
    iParam0->_fU136 = uParam21;
    iParam0->_fU140 = {uParam22};
    return;
}

void sub_27223(int iParam0, int iParam1)
{
    if ((sub_11654( iParam0 )) == 0)
    {
        sub_11720( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_27469()
{
    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        SET_PAYNEKILLER_AMT( 0 );
        SET_PED_HEALTH( sub_1255(), 127, 0 );
        SET_CAM_SIDE_LEFT( 1 );
        ENABLE_PED_JUMPING( sub_1255(), 0 );
        SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1277(), 0 );
        SET_ADRENALINE_NOT_ALLOW( 1 );
        ENABLE_LAST_MAN_STANDING( 0 );
        SET_PED_ALLOWED_TO_DUCK( sub_1255(), 0 );
        SET_CAMERA_OVERRIDE( "UNARMED_INJURED_CAMERA", "", 0, 1, 1 );
    }
    return;
}

void sub_27630()
{
    g_U3705 = sub_27669( 1049690760, -10.46000000, 5.99000000, 0.70000000, 18.00000000, 0, 0, 0 );
    return;
}

void sub_27669(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_27780( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_27780(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_8729( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_28071()
{
    switch (l_U119)
    {
        case 0: break;
        case 1:
        sub_28138();
        l_U119 = 2;
        break;
        case 2:
        sub_29431();
        l_U119 = 3;
        break;
        case 3:
        sub_29692();
        l_U119 = 4;
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_28138()
{
    sub_28173( ref l_U264, l_U278, l_U281, g_U2376, 26, 6, 0, 0, 0 );
    sub_28277( ref l_U277, ref l_U264, 1, 0, 0 );
    sub_29155( ref l_U277, "Pass_Stad_Hat" );
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        FREEZE_PED_POSITION( l_U277, 1 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U277, 1 );
        SET_PED_SWEAT( l_U277, 0.00000000, 0.00000000 );
        SET_PED_HEALTH( l_U277, 400, 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( l_U277, 0 );
        SET_PED_GORE_AS_ALLY( l_U277 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U277, 1 );
        SET_PED_CAN_INTERACT_WITH_DOORS( l_U277, 0 );
        SET_PED_CAN_PUSH_PLAYER( l_U277, 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( l_U277, 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_CAN_AI_KICK_THROUGH_CORPSES( l_U277, 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_VISIBLE( l_U277, 0 );
        SET_PED_INVINCIBLE( l_U277, 1 );
    }
    return;
}

void sub_28173(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_28277(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
    sub_3688( (uParam0^) );
    (uParam0^) = sub_28297( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
            sub_888( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
    sub_29051( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

void sub_28297(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_27780( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_28776( iParam0->_fU40 );
    sub_28856( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_28776(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_28856(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_29051(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

void sub_29155(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        sub_8729( uParam1 );
        SET_PERSISTENT_PED_VARIATION( (uParam0^), uParam1 );
    }
    return;
}

void sub_29431()
{
    sub_28173( ref l_U282, l_U296, l_U299, 279061184, 26, 6, 0, 0, 0 );
    sub_28277( ref l_U295, ref l_U282, 1, 0, 0 );
    sub_29155( ref l_U295, "M3_CS_06_Avg" );
    if (NOT (IS_PED_DEAD( l_U295 )))
    {
        FREEZE_PED_POSITION( l_U295, 1 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U295, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U295, 1 );
        SET_PED_NAME_DEBUG( l_U295, "Headcrack" );
        SET_PED_VISIBLE( l_U295, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U295, ref g_U2444 );
    }
    SET_PED_NAME_DEBUG( l_U295, "piHeadcrack" );
    l_U2025 = sub_9058( l_U295, 150541352, 25000, 0, 0 );
    return;
}

void sub_29692()
{
    sub_28173( ref l_U1077, l_U1091, l_U1094, g_U2377, 8, 4, 2, 0, 0 );
    sub_28277( ref l_U1090, ref l_U1077, 0, 0, 0 );
    sub_29155( ref l_U1090, "M3_CP_S1_Avg" );
    sub_29797( ref l_U1090, "AIT_SNIPER", 1, 1000, 0 );
    SET_PED_FLAG_SNIPE_MOVING_TARGETS_OVERRIDE( l_U1090, 1 );
    SET_PED_NAME_DEBUG( l_U1090, "piFieldSniper" );
    if (NOT (IS_PED_DEAD( l_U1090 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1090, 1 );
        FREEZE_PED_POSITION( l_U1090, 1 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1090, "Room_Pressbooth" );
        SET_PED_PERFECT_ACCURACY_OVERRIDE( l_U1090, 1 );
        SET_PED_ENABLE_SPAWN_INACCURACY( l_U1090, 0 );
        SET_PED_CONSUMING_AMMO( l_U1090, 0 );
    }
    sub_9058( l_U1090, -2075384407, 25000, 0, 0 );
    sub_30150( ref l_U1090, 0 );
    sub_30202( ref l_U1090, 0 );
    sub_30258( l_U1090, 1148846080 );
    sub_30339( ref l_U1090, 2, 3 );
    sub_30391( ref l_U1090 );
    sub_30561( ref l_U1090, 3 );
    return;
}

void sub_29797(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
    sub_888( "MAL_SetTemplateAndRanges" );
    sub_8729( uParam1 );
    sub_29848( fParam2 );
    sub_29848( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
        sub_29051( uParam0, 1, 0 );
    }
    return;
}

void sub_29848(unknown uParam0)
{
    return;
}

void sub_30150(unknown uParam0, boolean bParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam1 );
    }
    return;
}

void sub_30202(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_CONSUMING_AMMO( (uParam0^), uParam1 );
    }
    return;
}

void sub_30258(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        sub_888( "MAL_SetPedSightRange" );
        SET_PED_SEEING_RANGE( uParam0, uParam1, 75 );
    }
    return;
}

void sub_30339(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_RELATIONSHIP( (uParam0^), uParam1, uParam2 );
    }
    return;
}

void sub_30391(unknown uParam0)
{
    sub_30408( uParam0, sub_1255() );
    return;
}

void sub_30408(unknown uParam0, unknown uParam1)
{
    sub_30422( uParam0, uParam1 );
    sub_30483( uParam0, uParam1 );
    return;
}

void sub_30422(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_30483(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_30561(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

int sub_30675(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5)
{
    int I;

    sub_8729( uParam1 );
    if (NOT bParam4)
    {
        sub_30705( uParam2, uParam3, 1 );
        for ( I = 0; I < (uParam0^); I++ )
        {
            sub_30902( ref (uParam0^)[I] );
            sub_31923( (uParam0^)[I]._fU0, uParam2 );
        }
        sub_32201( uParam0, uParam1 );
    }
    else if ((uParam0^)[0]._fU172 == 0)
    {
        sub_30705( uParam2, uParam3, 1 );
    }
    if ((uParam0^)[0]._fU172 < (uParam0^))
    {
        sub_30902( ref (uParam0^)[(uParam0^)[0]._fU172] );
        sub_31923( (uParam0^)[(uParam0^)[0]._fU172]._fU0, uParam2 );
        (uParam0^)[0]._fU172++;
    }
    else
    {
        sub_32201( uParam0, uParam1 );
        return 1;
    }
    if (bParam5)
    {
        sub_32467( uParam0, 1, 0, -1 );
    }
    return 0;
}

void sub_30705(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_30902(int iParam0)
{
    unknown uVar3;

    sub_888( "MAL_EnemyStructCreate starting" );
    sub_31017( iParam0 + 0, iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU72, iParam0->_fU80, iParam0->_fU84, iParam0->_fU116, iParam0->_fU120, iParam0->_fU124, 1 );
    if (NOT (ARE_STRINGS_EQUAL( iParam0 + 140, ref g_U652 )))
    {
        sub_8729( iParam0 + 140 );
        sub_31397( iParam0 + 0, iParam0 + 140 );
    }
    if (iParam0->_fU128)
    {
        sub_888( "MAL_EnemyStructCreate giving ped backup weapon" );
        sub_31526( iParam0->_fU0, iParam0->_fU76, 25000, 1, 0 );
    }
    if (iParam0->_fU132)
    {
        uVar3 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
        sub_31723( ref uVar3, 14, 1 );
    }
    if (iParam0->_fU136 != 0)
    {
        sub_31849( iParam0 + 0, iParam0->_fU136 );
    }
    return iParam0->_fU0;
}

void sub_31017(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
    sub_28173( uParam1, uParam2, uParam5, uParam18, 7, 3, 2, 0, 0 );
    (uParam0^) = sub_28277( uParam0, uParam1, 1, 1, uParam19 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
    }
    sub_31101( (uParam0^), uParam6, 25000, 0, 0 );
    sub_29797( uParam0, ref uParam8, uParam16, uParam17, 1 );
    sub_31295( uParam0, uParam7 );
    return (uParam0^);
}

void sub_31101(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                sub_888( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_31295(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

void sub_31397(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), uParam1 );
    }
    return;
}

void sub_31526(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                sub_888( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_31723(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

void sub_31849(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PERSISTENT_PED_VARIATION_ENUM( (uParam0^), uParam1 );
    }
    return;
}

void sub_31923(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_8729( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_30705( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_30705( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_32201(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I]._fU0, ref cVar5 );
        }
    }
    return;
}

void sub_32467(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_32517( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_32517(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FREEZE_PROCESSING( iParam0->_fU0, uParam1 );
    }
    return;
}

int sub_32610()
{
    char[64] cVar2;

    switch (l_U262)
    {
        case 1:
        sub_954( "AT", "eSpawn0301 = ENTITY_STATE_INIT", 0 );
        l_U263 = 0;
        l_U262 = 2;
        sub_954( "AT", "eSpawn0301 = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        StrCopy( ref cVar2, "Creating pi_IM_0301_Entities[", 64 );
        ConcatString(ref cVar2, l_U263, 64);
        ConcatString(ref cVar2, "]", 64);
        sub_954( "AT", ref cVar2, 0 );
        l_U252[l_U263] = sub_28297( ref l_U147[l_U263] );
        if (NOT (IS_PED_DEAD( l_U252[l_U263] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U252[l_U263], 1 );
            StrCopy( ref cVar2, "pi_IM_0301_Entities[", 64 );
            ConcatString(ref cVar2, l_U263, 64);
            ConcatString(ref cVar2, "]", 64);
            SET_PED_NAME_DEBUG( l_U252[l_U263], ref cVar2 );
        }
        if (l_U263 < 5)
        {
            if (l_U263 < 2)
            {
                sub_9058( l_U252[l_U263], 68019059, 25000, 0, 0 );
            }
            else
            {
                sub_9058( l_U252[l_U263], -1074756423, 25000, 0, 0 );
            }
        }
        else if (l_U263 == 5)
        {
            sub_8413( l_U252[l_U263], 68019059, 1, 25000, 0 );
        }
        else if (l_U263 == 6)
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U252[l_U263], "Room_Pressbooth" );
            l_U261 = sub_9058( l_U252[l_U263], 1224272620, 25000, 0, 0 );
            sub_31723( ref l_U261, 13, 1 );
        }
        else if (l_U263 == 7)
        {
            sub_9058( l_U252[l_U263], 68019059, 25000, 0, 0 );
        };;;;
        sub_33245( l_U252[l_U263] );
        l_U263++;
        if (l_U263 >= l_U252)
        {
            l_U262 = 4;
            sub_954( "AT", "eSpawn0301 = ENTITY_STATE_COMPLETE", 0 );
        }
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_33245(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_33484()
{
    int I;

    sub_33526( l_U679[0], -1191130939, "PistolRight" );
    sub_33526( l_U679[1], -1191130939, "RifleRight" );
    sub_33526( l_U679[2], -1191130939, "PistolBack01" );
    sub_33526( l_U679[3], -1191130939, "PistolBack02" );
    sub_33526( l_U679[4], -1191130939, "PistolLeft" );
    sub_33526( l_U679[5], -1191130939, "LeftPointer" );
    for ( I = 0; I < l_U679; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U679[I]._fU0 )))
        {
            SET_PED_DROPS_WEAPONS_WHEN_DEAD( l_U679[I]._fU0, 0 );
        }
    }
    return;
}

void sub_33526(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45)
{
    sub_33550( uParam0._fU0, uParam44, uParam45 );
    return;
}

void sub_33550(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

void sub_33880(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_33930( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_33930(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_VISIBLE( iParam0->_fU0, uParam1 );
    }
    else
    {
        sub_888( "MAL_ES_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

void sub_34063(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
        sub_888( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

int sub_34312()
{
    return 1;
}

void sub_34331()
{
    sub_888( "P_0301_Register start" );
    REMOVE_ALL_PED_WEAPONS( sub_1255() );
    sub_8413( sub_1255(), 68019059, 1, 25000, 0 );
    sub_34407( ref l_U252 );
    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        sub_954( "AT", "Registered player.", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HOLSTER( sub_1255(), 1 ), "W_PI_PT92_Aa_H^3", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_1255(), g_U2138[0] + l_U314, g_U2256[0] );
        CUTSCENE_REGISTER_ISEQ( -1110817698 );
        sub_33550( sub_1255(), -1110817698, "LeadoutMax" );
    }
    CUTSCENE_REGISTER_ISEQ( -1191130939 );
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        sub_33550( l_U277, -1110817698, "LeadoutPassos" );
    }
    if (NOT (IS_PED_DEAD( l_U252[0] )))
    {
        sub_954( "AT", "Registered pi_IM_0301_Entities[0]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[0], "G_CS_K_Sold_PB^4", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U252[0], 0, 0 ), "W_PI_PT92_Aa_H^1", 1 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 0 IS DEAD", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U252[1] )))
    {
        sub_954( "AT", "Registered pi_IM_0301_Entities[1]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[1], "G_CS_K_Sold_PB^3", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U252[1], 0, 0 ), "W_PI_PT92_Aa_H^2", 1 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 1 IS DEAD", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U252[2] )))
    {
        sub_954( "AT", "Registered pi_IM_0301_Entities[2]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[2], "G_CS_K_Sold_PB^2", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U252[2], 0, 0 ), "W_AR_AK47_Aa_H", 1 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 2 IS DEAD", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U252[3] )))
    {
        sub_954( "AT", "Registered pi_IM_0301_Entities[3]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[3], "G_CS_K_Sold_PB^1", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U252[3], 0, 0 ), "W_AR_AK47_Aa_H^1", 1 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 3 IS DEAD", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U252[4] )))
    {
        sub_954( "AT", "Registered pi_IM_0301_Entities[4]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[4], "G_CS_K_Sold_PB", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U252[4], 0, 0 ), "W_AR_AK47_Aa_H^2", 1 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 4 IS DEAD", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U252[5] )))
    {
        sub_954( "AT", "Registered pi_IM_0301_Entities[5]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[5], "Pass_heli_pilo", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HOLSTER( l_U252[5], 1 ), "W_PI_PT92_Aa_H^4", 1 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 5 IS DEAD", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U252[6] )))
    {
        sub_954( "AT", "Registered pi_IM_0301_Entities[6]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[6], "M_Crac_Snip_Avg", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U252[6], 0, 0 ), "W_SR_M82_Aa_H", 0 );
        l_U1095 = GET_WEAPON_FROM_HAND( l_U252[6], 0, 0 );
        sub_31723( ref l_U1095, 13, 1 );
        SET_LASER_SIGHT_ATTACHMENT( l_U1095, -789406068 );
        TOGGLE_WEAPON_ATTACHMENT( l_U1095, 13, 0 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 6 IS DEAD", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U252[7] )))
    {
        sub_954( "AT", "Registered pi_IM_0301_Entities[7]", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U252[7], "G_CS_Bag_Avg", 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U252[7], 0, 0 ), "W_PI_PT92_Aa_H", 1 );
    }
    else
    {
        SCRIPT_ASSERT( "PED 7 IS DEAD", 0 );
    }
    sub_888( "P_0301_Register end" );
    return;
}

void sub_34407(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_34438( (uParam0^)[I] );
    }
    return;
}

void sub_34438(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_36271()
{
    if (l_U120._fU52)
    {
        AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1", "", 0, 15000, -1, -1082130432, 0 );
    }
    if (NOT l_U2027)
    {
        if (GET_CUTSCENE_TIME() > 5)
        {
            l_U2027 = 1;
            sub_18206( "PLGE_RIFLE_CROUCH", ref g_U1354 );
            sub_18206( "PLGE_PSTL_CROUCH", ref g_U1354 );
            sub_18206( "PLGE_RIFLE_KNEE", ref g_U1354 );
            sub_18206( "PLGE_PSTL_KNEE", ref g_U1354 );
            sub_18206( "PLGE_PSTL_CORE", ref g_U1354 );
            sub_18206( "PLGE_PSTL_COVER", ref g_U1354 );
            l_U2027 = 1;
        }
    }
    sub_34063( l_U277, 0 );
    sub_33880( ref l_U679, 0, 0, -1 );
    if (l_U353 == 0)
    {
        if (GET_CUTSCENE_TIME_MS() > 31500)
        {
            TOGGLE_WEAPON_ATTACHMENT( l_U1095, 13, 1 );
            l_U353 = 1;
        }
    }
    if (NOT l_U2026)
    {
        if (GET_CUTSCENE_TIME() > 40)
        {
            APPLY_PLAYER_PRELOAD_VARIATION( sub_1255(), 0 );
            l_U2026 = 1;
        }
    }
    return;
}

int sub_36670()
{
    return 1;
}

void sub_36689()
{
    int I;

    if (NOT (ISEQ_QUERY_STATE( -1110817698, 3 )))
    {
        sub_36747( sub_1255(), g_U2138[0] + l_U314, g_U2256[0] );
        sub_33550( sub_1255(), -1110817698, "LeadoutMax" );
        sub_33550( l_U277, -1110817698, "LeadoutPassos" );
        ISEQ_START( -1110817698 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_01", "B_OUT_03_01_CAM", 1, 4.56000000, -3.96000000, 4.00000000, 0.00000000, 0, 0 );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "03_01_stad_txt_comeon", 1 );
    l_U1283 = "SSTD_FDQA";
    l_U1284 = "03_01_stad_txt_comeon";
    sub_3654( ref l_U252 );
    sub_3790( 1224272620, ref g_U1214 );
    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        REMOVE_ALL_PED_WEAPONS( sub_1255() );
    }
    SET_HELPER_TRACKING_MODE( 0 );
    FREEZE_TIME_OF_DAY( 21, 0 );
    sub_33880( ref l_U679, 1, 0, -1 );
    sub_32467( ref l_U679, 0, 0, -1 );
    if (NOT (ISEQ_QUERY_STATE( -1191130939, 3 )))
    {
        ISEQ_START( -1191130939 );
        sub_37154( ref l_U679, 0, -1 );
    }
    sub_37349( l_U1090, l_U679[5]._fU0, -1, 1 );
    DO_SCREEN_FADE_IN( 0 );
    if ((NOT (IS_PED_DEAD( l_U277 ))) AND (NOT (IS_PED_DEAD( sub_1255() ))))
    {
        sub_37452( ref l_U1285 );
        sub_37534( 0, sub_1255(), "MAX", ref l_U1285, 2, 0 );
        sub_37534( 1, sub_1255(), "MAX", ref l_U1285, 2, 0 );
        sub_37773( "SSTD_FDMB", ref l_U1285, 8, 1 );
    }
    for ( I = 0; I < l_U950; I++ )
    {
        sub_38592( ref l_U950[I]._fU0, l_U950[I]._fU36 );
    }
    sub_38592( ref l_U1096, 3000 );
    sub_38592( ref l_U1105, 6000 );
    sub_38592( ref l_U318, l_U317 );
    return;
}

void sub_36747(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_37154(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
        sub_37206( (uParam0^)[I] );
    }
    return;
}

void sub_37206(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43)
{
    sub_37234( uParam0, uParam0._fU56, uParam0._fU68 );
    return;
}

void sub_37234(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_COORDS( uParam0._fU0, uParam44, 1 );
        SET_PED_HEADING( uParam0._fU0, uParam47 );
    }
    return;
}

void sub_37349(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        TASK_AIM_GUN_AT_PED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_37452(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_37534(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_37773(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_37797( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_37797(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_37852( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_37852(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_37887( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_38381( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_37887(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_38381(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_38592(unknown uParam0, unknown uParam1)
{
    sub_2027( uParam0, uParam1, 1, 0 );
    sub_2163( uParam0 );
    return;
}

int sub_38685()
{
    return 1;
}

void sub_38708(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_954( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_38833( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 38793, 38811, uParam8 );
}

void sub_38793()
{
    return;
}

int sub_38811()
{
    return 1;
}

void sub_38833(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_39212(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_954( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_954( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_954( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_954( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_954( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_954( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_21639( iParam0->_fU0, 0 );
            sub_954( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_40079( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_40079( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_954( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_40607( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_40079( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_40956( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_40956( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_40079(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1255() )))
        {
            SET_PLAYER_CONTROL( sub_1277(), 0, uParam2 );
            SET_PED_DUCKING( sub_1255(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1255() );
            }
            SET_PED_INVINCIBLE( sub_1255(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_40607(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_1255(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1255(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1255(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1255(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1255(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_40956(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        SET_PLAYER_CONTROL( sub_1277(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1255(), 0 );
        if (bParam0)
        {
            sub_41037();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_41037()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1255() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1255(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1255(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1255(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1255(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_41378(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_954( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_954( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_9712( iParam1 );
        sub_41637( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_42088( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_42088( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_42320( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_42088( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_42320( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_42320( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_42088( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_42320( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_42320( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_42320( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_42088( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_42320( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_42320( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_42320( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_42320( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_43878( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_954( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_41637(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_7076( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_954( "TEH", "Ending context", 0 );
        sub_954( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_42088(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_42320(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_43878(int iParam0)
{
    sub_8729( "CHECKPOINT DATA" );
    sub_43917( iParam0->_fU4 );
    sub_29848( iParam0->_fU16 );
    sub_29848( iParam0->_fU20 );
    sub_29848( iParam0->_fU24 );
    sub_43970( iParam0->_fU28 );
    sub_43970( iParam0->_fU56 );
    sub_43970( iParam0->_fU60 );
    sub_43970( iParam0->_fU64 );
    sub_43970( iParam0->_fU68 );
    sub_43970( iParam0->_fU72 );
    sub_43970( iParam0->_fU76 );
    sub_43970( iParam0->_fU80 );
    sub_43970( iParam0->_fU84 );
    sub_43970( iParam0->_fU88 );
    sub_43970( iParam0->_fU92 );
    sub_29848( iParam0->_fU32 );
    sub_43970( iParam0->_fU36 );
    sub_43970( iParam0->_fU40 );
    sub_43970( iParam0->_fU44 );
    sub_29848( iParam0->_fU136 );
    sub_44175( iParam0->_fU140 );
    sub_43970( iParam0->_fU52 );
    sub_8729( "---nRightHolsterAttachmentEnabled: " );
    sub_43970( iParam0->_fU96 );
    sub_8729( "---nRightHolsterAttachmentToggled: " );
    sub_43970( iParam0->_fU100 );
    sub_8729( "---nLeftHolsterAttachmentEnabled: " );
    sub_43970( iParam0->_fU104 );
    sub_8729( "---nLeftHolsterAttachmentToggled: " );
    sub_43970( iParam0->_fU108 );
    sub_8729( "---nRifleHolsterAttachmentEnabled: " );
    sub_43970( iParam0->_fU112 );
    sub_8729( "---nRifleHolsterAttachmentToggled: " );
    sub_43970( iParam0->_fU116 );
    sub_8729( "---nRightHandAttachmentEnabled: " );
    sub_43970( iParam0->_fU120 );
    sub_8729( "---nRightHandAttachmentToggled: " );
    sub_43970( iParam0->_fU124 );
    sub_8729( "---nLeftHandAttachmentEnabled: " );
    sub_43970( iParam0->_fU128 );
    sub_8729( "---nLeftHandAttachmentToggled: " );
    sub_43970( iParam0->_fU132 );
    sub_43970( l_U1 );
    sub_43970( 144 );
    return;
}

void sub_43917(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_43970(unknown uParam0)
{
    return;
}

void sub_44175(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_45123()
{
    int iVar2;

    iVar2 = 1500;
    sub_45142( ref l_U1675 );
    switch (l_U1674)
    {
        case 0:
        l_U1675[0]._fU4 = "INJURED_WALK_01";
        l_U1675[0]._fU8 = 3;
        l_U1675[0]._fU32 = 0;
        iVar2 = 2775;
        l_U1674 = 1;
        break;
        case 1:
        l_U1675[0]._fU4 = "INJURED_WALK_02";
        l_U1675[0]._fU8 = 3;
        l_U1675[0]._fU32 = 0;
        iVar2 = 3200;
        l_U1674 = 2;
        break;
        case 2:
        l_U1675[0]._fU4 = "INJURED_WALK_03";
        l_U1675[0]._fU8 = 3;
        l_U1675[0]._fU32 = 0;
        iVar2 = 2500;
        l_U1674 = 3;
        break;
        case 3:
        l_U1675[0]._fU4 = "GRADE_RED_FAST";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1675[1]._fU4 = "FLICKER_VIBRATE_INTERLACE_M";
        l_U1675[1]._fU8 = 4;
        l_U1675[1]._fU20 = 1;
        l_U1675[1]._fU32 = 0;
        l_U1675[1]._fU12 = 400;
        l_U1675[2]._fU4 = "FLICKER_VIBRATE_INTERLACE_M";
        l_U1675[2]._fU8 = 4;
        l_U1675[2]._fU32 = 0;
        l_U1675[3]._fU4 = "DOUBLE_MASK_INTERLACE_TWITCH";
        l_U1675[3]._fU8 = 4;
        l_U1675[3]._fU20 = 1;
        l_U1675[3]._fU32 = 0;
        l_U1675[3]._fU12 = 800;
        l_U1675[4]._fU4 = "INJURED_WALK_01";
        l_U1675[4]._fU8 = 3;
        l_U1675[4]._fU32 = 0;
        iVar2 = 3500;
        l_U1674 = 4;
        break;
        case 4:
        l_U1675[0]._fU4 = "INJURED_WALK_04";
        l_U1675[0]._fU8 = 3;
        l_U1675[0]._fU32 = 0;
        iVar2 = 1500;
        l_U1674 = 5;
        break;
        case 5:
        l_U1675[0]._fU4 = "GRADE_YELLOW_FAST";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1675[1]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
        l_U1675[1]._fU20 = 1;
        l_U1675[1]._fU8 = 4;
        l_U1675[1]._fU32 = 0;
        l_U1675[1]._fU12 = 400;
        l_U1675[2]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
        l_U1675[2]._fU8 = 4;
        l_U1675[2]._fU32 = 0;
        l_U1675[3]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
        l_U1675[3]._fU8 = 4;
        l_U1675[3]._fU32 = 0;
        l_U1675[3]._fU12 = 800;
        l_U1675[4]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
        l_U1675[4]._fU8 = 4;
        l_U1675[4]._fU20 = 1;
        l_U1675[4]._fU32 = 0;
        l_U1675[4]._fU12 = 1200;
        l_U1675[5]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
        l_U1675[5]._fU8 = 4;
        l_U1675[5]._fU32 = 0;
        iVar2 = 1600;
        l_U1674 = 6;
        break;
        case 6:
        l_U1675[0]._fU4 = "TRIPLE_INTERLACE_MOVE_RIGHT";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        iVar2 = 1500;
        l_U1674 = 7;
        break;
        case 7:
        l_U1675[0]._fU4 = "GRADE_MAGENTA_FAST";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1675[1]._fU4 = "FLICKER_VIBRATE_01";
        l_U1675[1]._fU8 = 4;
        l_U1675[1]._fU20 = 1;
        l_U1675[1]._fU32 = 0;
        l_U1675[1]._fU12 = 400;
        l_U1675[2]._fU4 = "FLICKER_VIBRATE_01";
        l_U1675[2]._fU8 = 4;
        l_U1675[2]._fU32 = 0;
        l_U1675[3]._fU4 = "GAMMA_SATURATION_COLOR_ZOOM_3";
        l_U1675[3]._fU8 = 4;
        l_U1675[3]._fU32 = 0;
        l_U1675[3]._fU12 = 800;
        iVar2 = 1500;
        l_U1674 = 8;
        break;
        case 8:
        l_U1675[0]._fU4 = "TRIPLE_INTERLACE_HOLD";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        iVar2 = 1800;
        l_U1674 = 9;
        break;
        case 9:
        l_U1675[0]._fU4 = "CONTRAST_ZOOM_FAST_BLUE";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1675[1]._fU4 = "FLICKER_VIBRATE_INTERLACE_M";
        l_U1675[1]._fU8 = 4;
        l_U1675[1]._fU20 = 1;
        l_U1675[1]._fU32 = 0;
        l_U1675[1]._fU12 = 600;
        l_U1675[2]._fU4 = "FLICKER_VIBRATE_INTERLACE_M";
        l_U1675[2]._fU8 = 4;
        l_U1675[2]._fU32 = 0;
        l_U1675[3]._fU4 = "INJURED_WALK_03";
        l_U1675[3]._fU8 = 3;
        l_U1675[3]._fU32 = 0;
        l_U1675[3]._fU12 = 600;
        iVar2 = 2500;
        l_U1674 = 10;
        break;
        case 10:
        l_U1675[0]._fU4 = "TRIPLE_MOVE_RIGHT_FAST";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        iVar2 = 1500;
        l_U1674 = 11;
        break;
        case 11:
        l_U1675[0]._fU4 = "TRIPLE_IMAGE_MASK_L_FAST";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        iVar2 = 900;
        l_U1674 = 0;
        break;
    }
    sub_2027( ref l_U1838, iVar2, 1, 0 );
    sub_2163( ref l_U1838 );
    l_U74 = 0;
    return;
}

void sub_45142(unknown uParam0)
{
    int I;

    sub_954( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

void sub_47409(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        FREEZE_PED_POSITION( (uParam0^), uParam1 );
    }
    return;
}

void sub_47456(unknown uParam0)
{
    unknown uVar3;

    uVar3 = sub_1255();
    sub_47409( ref uVar3, uParam0 );
    return;
}

void sub_47499()
{
    sub_954( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_954( "CCB", "Starting the Stadium context...", 0 );
    START_CONTEXT( "Stadium" );
    sub_954( "CCB", "Starting the Stadium_To_Stands context...", 0 );
    START_CONTEXT( "Stadium_To_Stands" );
    return;
}

void sub_47699()
{
    int I;

    for ( I = 0; I < l_U679; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U679[I]._fU0 )))
        {
            if (sub_2283( ref l_U950[I]._fU0 ))
            {
                sub_47784( l_U679[I]._fU0 );
                sub_38592( ref l_U950[I]._fU40, l_U950[I]._fU76 );
            }
            if ((sub_47898( l_U679[I]._fU0 )) || (sub_2283( ref l_U950[I]._fU40 )))
            {
                sub_47974( l_U679[I]._fU0 );
                sub_48206( l_U679[I]._fU0 );
            }
        }
    }
    return;
}

void sub_47784(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, 47, 1000, g_U649 );
    }
    return;
}

int sub_47898(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( uParam0, 47 )) == 1)
        {
            return 1;
        }
    }
    return 0;
}

void sub_47974(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_FINISH_ACTION_INTENTION( uParam0, 47 );
        if (NOT (IS_PED_DEAD( l_U1090 )))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( l_U1090 );
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( uParam0, 3228, g_U649 )};
            TASK_AIM_GUN_AT_PED( l_U1090, uParam0, -1, 1 );
            SET_PED_SHOOTS_AT_COORD( l_U1090, uVar3 );
            if (IS_SCRIPTEDFX_ENABLED() == 1)
            {
                PLAY_IMAGEFX( "FLASH_WHITE", 4, 0 );
            }
        }
        START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "Blood_headsoup_S_01", uParam0, 0, 0, 0, 0, 0, 0, 65488, 2.00000000 );
    }
    return;
}

void sub_48206(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_48295(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_48337( sub_1255(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_48337(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_48497(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

void sub_48690(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_48337( sub_1255(), uParam0 );
}

void sub_48844()
{
    sub_37349( l_U1090, sub_1255(), -1, 1 );
    sub_30422( ref l_U1090, sub_1255() );
    sub_30483( ref l_U1090, sub_1255() );
    sub_47409( ref l_U1090, 0 );
    TASK_SHOOT_AT_PED( l_U1090, sub_1255(), -1, -256437761, 1, 0, 0 );
    return;
}

void sub_49320(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( l_U1090 )))
    {
        SET_PED_SHOOTS_AT_COORD( l_U1090, uParam0 );
        if (IS_SCRIPTEDFX_ENABLED() == 1)
        {
            PLAY_IMAGEFX( "FLASH_WHITE", 4, 0 );
        }
    }
    return;
}

void sub_49524()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((NOT (IS_PED_DEAD( l_U277 ))) AND ((NOT (IS_PED_DEAD( sub_1255() ))) == 0))
    {
        CAMERA_POINT_AT_PED( l_U277, 0 );
        TASK_LOOK_AT_PED( sub_1255(), l_U277, -1, 0 );
    }
    sub_37534( 0, sub_1255(), "MAX", ref uVar2, 2, 0 );
    sub_37534( 1, sub_1255(), "MAX", ref uVar2, 2, 0 );
    sub_37773( "SSTD_FDMC", ref uVar2, 8, 1 );
    return;
}

void sub_49749()
{
    int iVar2;

    if (NOT sub_49759())
    {
        if (NOT l_U1282)
        {
            if (((IS_PED_DEAD( l_U277 )) == 0) AND (((DOES_PED_EXIST( l_U277 )) == 1) AND (((IS_PED_DEAD( sub_1255() )) == 0) AND ((NOT l_U460._fU64) AND (sub_2283( ref l_U1273 ))))))
            {
                sub_37452( ref l_U1211[l_U1210] );
                sub_37534( 0, sub_1255(), "MAX", ref l_U1211[l_U1210], 2, 0 );
                sub_37534( 1, l_U277, "PASSOS", ref l_U1211[l_U1210], 2, 0 );
                sub_37773( l_U1283, ref l_U1211[l_U1210], 8, 1 );
                sub_38592( ref l_U1273, 4000 );
                if (IS_SCRIPTEDFX_ENABLED() == 1)
                {
                    sub_954( "SP", "Playing Passos Beckoning to Max Image FX", 0 );
                    sub_5907( ref l_U1209 );
                    l_U1209 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
                    SETUP_BULLET_CAMERA_SCENE( l_U1209, l_U1284, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
                    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
                }
                l_U1210++;
                if (l_U1210 >= l_U1211)
                {
                    l_U1210 = 0;
                }
                l_U1282 = 1;
            }
        }
        else if (l_U1282)
        {
            l_U1282 = 0;
            l_U1272 = sub_48690( l_U376 );
            iVar2 = l_U1210;
            if (iVar2 == 0)
            {
                l_U1283 = "SSTD_FDQA";
                if (l_U1272 == 0)
                {
                    l_U1284 = "03_01_stad_txt_comeon";
                }
                else
                {
                    l_U1284 = "03_01_stad_txt_3d_comeon";
                }
            }
            else if (iVar2 == 1)
            {
                l_U1283 = "SSTD_FDQB";
                if (l_U1272 == 0)
                {
                    l_U1284 = "03_01_stad_txt_getoutofthere";
                }
                else
                {
                    l_U1284 = "03_01_stad_txt_3d_getoutofthere";
                }
            }
            else if (iVar2 == 2)
            {
                l_U1283 = "SSTD_FDQC";
                if (l_U1272 == 0)
                {
                    l_U1284 = "03_01_stad_txt_getoffthatfield";
                }
                else
                {
                    l_U1284 = "03_01_stad_txt_3d_getoffthatfield";
                }
            }
            else if (iVar2 == 3)
            {
                l_U1283 = "SSTD_FDQD";
                if (l_U1272 == 0)
                {
                    l_U1284 = "03_01_stad_txt_comeon02";
                }
                else
                {
                    l_U1284 = "03_01_stad_txt_3d_comeon02";
                }
            }
            else if (iVar2 == 4)
            {
                l_U1283 = "SSTD_FDQE";
                if (l_U1272 == 0)
                {
                    l_U1284 = "03_01_stad_txt_getover";
                }
                else
                {
                    l_U1284 = "03_01_stad_txt_3d_getover";
                }
            }
            else if (iVar2 == 5)
            {
                l_U1283 = "SSTD_FDQF";
                if (l_U1272 == 0)
                {
                    l_U1284 = "03_01_stad_txt_killed";
                }
                else
                {
                    l_U1284 = "03_01_stad_txt_3d_killed";
                }
            };;;;;;
            BULLET_CAMERA_PRELOAD_TEXT_BINK( l_U1284, 1 );
        }
    }
    return;
}

int sub_49759()
{
    int I;

    for ( I = 0; I < l_U1211; I++ )
    {
        if ((sub_49795( l_U1211[I] )) == 1)
        {
            return 1;
        }
    }
    return 0;
}

int sub_49795(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_49808( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_49808(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_51243(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U649 );
    }
    return;
}

int sub_51304()
{
    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        if (GET_PED_REACHED_TARGETED_GRAVWELL_CENTER( sub_1255(), "st_00_fd_simple", "GravWell_EdisonHelpsMax", 1 ))
        {
            return 1;
        }
    }
    return 0;
}

void sub_51434()
{
    ISEQ_UNREGISTER_ENTITY( -1110817698, "LeadoutMax" );
    ISEQ_UNREGISTER_ENTITY( -1110817698, "LeadoutPassos" );
    sub_51503( -1110817698, 1 );
    sub_4110( -1110817698, ref g_U1263 );
    return;
}

void sub_51503(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_51820()
{
    if ((NOT (IS_PED_DEAD( sub_1255() ))) AND (NOT (IS_PLAYER_DEAD( sub_1277() ))))
    {
        SET_PLAYER_CONTROL( sub_1277(), 0, 0 );
        SET_PED_FORCED_TO_WALK( sub_1255(), 1 );
    }
    return;
}

void sub_51897()
{
    sub_33550( sub_1255(), -1424164141, "SteadyMax" );
    sub_33550( l_U277, -1424164141, "SteadyPassos" );
    sub_33550( l_U295, -1424164141, "HeadcrackCS" );
    ISEQ_START( -1424164141 );
    return;
}

void sub_52013()
{
    sub_954( "GA", "Starting Passos Help Max cameras.", 0 );
    sub_40079( 1, 0, 0, 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_01", "VIG_07B_START_TO_END_CAM", 0, g_U649, 0.00000000, 1, 500 );
    CAMERA_CLEAR_POINT_AT_TARGET();
    SET_CAMERA_OVERRIDE( "TUNNEL_INJURED_CAMERA", "", 0, 1, 1 );
    sub_52200( ref l_U679, 0, -1 );
    return;
}

void sub_52200(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            sub_48206( (uParam0^)[I]._fU0 );
        }
    }
    return;
}

void sub_52308(boolean bParam0)
{
    sub_954( "SP", "P_RESET_RANDOM_IMAGE_FX", 0 );
    if (bParam0)
    {
        sub_52366( ref l_U1675 );
    }
    sub_2820( ref l_U1838 );
    return;
}

void sub_52366(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        STOP_IMAGEFX( (uParam0^)[I]._fU0, 0 );
    }
    return;
}

int sub_52628()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        if (((PED_GET_ACTION_INTENTION_STATUS( l_U277, 53 )) == 3) AND (NOT l_U347))
        {
            l_U347 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_52709()
{
    if ((NOT (IS_PED_DEAD( l_U277 ))) AND (NOT (IS_PED_DEAD( sub_1255() ))))
    {
        sub_954( "AT", "Passos asks Max if he's okay.", 0 );
        sub_37452( ref l_U1295 );
        sub_37534( 0, sub_1255(), "MAX", ref l_U1295, 2, 0 );
        sub_37534( 1, l_U277, "PASSOS", ref l_U1295, 2, 0 );
        sub_37773( "SSTD_FDMA", ref l_U1295, 8, 1 );
    }
    return;
}

int sub_52942(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if ((sub_52957( (uParam0^), uParam1 )) == 1)
    {
        if (bParam2)
        {
            sub_53023( uParam0, uParam1 );
        }
        return 1;
    }
    return 0;
}

int sub_52957(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

void sub_53023(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

void sub_53087()
{
    if (((IS_PED_DEAD( l_U277 )) == 0) AND (((DOES_PED_EXIST( l_U277 )) == 1) AND ((IS_PED_DEAD( sub_1255() )) == 0)))
    {
        sub_53156( "SSTDAUD" );
        sub_37452( ref l_U1569 );
        sub_37534( 1, sub_1255(), "MAX", ref l_U1569, 2, 0 );
        sub_37534( 0, l_U277, "PASSOS", ref l_U1569, 2, 0 );
        sub_37773( "SSTD_FDPD", ref l_U1569, 8, 1 );
    }
    return;
}

void sub_53156(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_53176();
    return;
}

void sub_53176()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_53579()
{
    if ((NOT (IS_PLAYER_DEAD( sub_1277() ))) AND (NOT (IS_PED_DEAD( sub_1255() ))))
    {
        if (NOT l_U2011)
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 4.09000000, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -19.00000000, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 750, 1 );
        }
        PED_FINISH_ACTION_INTENTION( sub_1255(), 55 );
        SET_PLAYER_CONTROL( sub_1277(), 1, 0 );
        TASK_CLEAR_LOOK_AT( sub_1255() );
        sub_40956( 1, 1 );
    }
    return;
}

void sub_53841(unknown uParam0, unknown uParam1)
{
    sub_37452( uParam1 );
    sub_37534( 0, sub_1255(), "MAX", uParam1, 2, 0 );
    sub_37534( 1, sub_1255(), "MAX", uParam1, 2, 0 );
    sub_37773( uParam0, uParam1, 8, 1 );
    return;
}

void sub_54050()
{
    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        if ((GET_PED_SPEED( sub_1255() )) > 0.10000000)
        {
            if ((l_U1963 == 1) AND (NOT l_U1914._fU172))
            {
                sub_54128( ref l_U1914 );
            }
            sub_54199( ref l_U1914 );
            l_U1963 = 0;
        }
        else if ((l_U1914._fU172) AND (NOT l_U1963))
        {
            l_U1963 = 1;
            sub_6026( ref l_U1914, 1 );
            sub_54407( "JOLT_SHAKE", 0.15000000 );
        }
    }
    return;
}

void sub_54128(int iParam0)
{
    sub_2820( iParam0 + 40 );
    sub_2820( iParam0 + 76 );
    sub_2820( iParam0 + 112 );
    iParam0->_fU172 = 1;
    iParam0->_fU164 = 0;
    return;
}

void sub_54199(int iParam0)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam0->_fU164 == 0)
        {
            sub_2027( iParam0 + 40, iParam0->_fU148, 1, 0 );
            sub_2163( iParam0 + 40 );
            if (iParam0->_fU152 > 0)
            {
                sub_2027( iParam0 + 76, iParam0->_fU152, 1, 0 );
                sub_2163( iParam0 + 76 );
            }
            iParam0->_fU164 = 1;
        }
        if (sub_2283( iParam0 + 40 ))
        {
            sub_954( "ML", "P_HANDLE_CAM_SHAKE is shaking the camera", "---" );
            sub_54407( iParam0 + 4, iParam0->_fU36 );
            if (iParam0->_fU156 > 0)
            {
                sub_2027( iParam0 + 112, iParam0->_fU156, 1, 0 );
                sub_2163( iParam0 + 112 );
            }
        }
        if (sub_2283( iParam0 + 112 ))
        {
            sub_54407( iParam0 + 4, iParam0->_fU36 );
            sub_2027( iParam0 + 112, iParam0->_fU156, 1, 0 );
            sub_2163( iParam0 + 112 );
        }
        if (sub_2283( iParam0 + 76 ))
        {
            sub_954( "ML", "P_HANDLE_CAM_SHAKE is done shaking the camera", "---" );
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
            sub_2820( iParam0 + 112 );
            iParam0->_fU172 = 0;
        }
    }
    return;
}

void sub_54407(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    SHAKE_GAMEPLAY_CAM( uParam0, uParam1 );
    return;
}

void sub_55029()
{
    if (((IS_PED_DEAD( l_U295 )) == 0) AND ((DOES_PED_EXIST( l_U295 )) == 1))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( l_U295 );
        FREEZE_PED_POSITION( l_U295, 0 );
        SET_PED_VISIBLE( l_U295, 1 );
    }
    sub_55127( l_U295, l_U296, l_U299 );
    sub_888( "PLAYER IN TRIGGERBOX FIRST TIME!" );
    sub_954( "GA", "Triggering head crack.", 0 );
    sub_53023( ref l_U277, 47 );
    sub_51243( l_U277, 48, 1000 );
    sub_51243( l_U295, 47, 1000 );
    sub_55332( l_U295, "S_STAD_EDI_KILL1", ref g_U2034 );
    sub_37452( ref l_U300 );
    sub_37534( 2, l_U295, "M3_CS_06_AVG", ref l_U300, 2, 0 );
    sub_37534( 1, l_U277, "PASSOS", ref l_U300, 2, 0 );
    sub_37773( "SSTD_BTPC", ref l_U300, 8, 1 );
    return;
}

void sub_55127(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_55332(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = -1;
    if (sub_4451( uParam1, uParam2 ))
    {
        iVar5 = sub_4550( uParam1, uParam2 );
        if (NOT (iVar5 == -1))
        {
            if (NOT (IS_PED_DEAD( uParam0 )))
            {
                PLAY_SCRIPT_STREAM_FROM_PED( uParam0, iVar5 );
            }
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

int sub_55880()
{
    if ((ISEQ_QUERY_ENTITY_STATE( -1424164141, "HeadcrackCS", 3 )) AND (NOT (IS_PED_DEAD( l_U295 ))))
    {
        if ((sub_52942( ref l_U295, 52, 1 )) AND ((NOT l_U1334) == 1))
        {
            l_U1334 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_55987()
{
    sub_954( "GA", "Swapping headcrack gun for gun placement.", 0 );
    l_U1336 = sub_56097( 39142315, -0.20000000, 65.92000000, -3.19000000, 4.70000000, 0.00000000, 3.00000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1336, ref g_U2444 );
    REMOVE_ALL_PED_WEAPONS( l_U295 );
    return;
}

void sub_56097(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

int sub_56226()
{
    if (((PED_GET_ACTION_INTENTION_STATUS( l_U277, 54 )) == 1) AND (NOT l_U1335))
    {
        l_U1335 = 1;
        return 1;
    }
    return 0;
}

void sub_56289()
{
    PED_FINISH_ACTION_INTENTION( l_U277, 54 );
    sub_31101( l_U277, 150541352, 25000, 0, 0 );
    sub_5215( l_U1336 );
    if (((IS_PED_DEAD( l_U295 )) == 0) AND ((DOES_PED_EXIST( l_U295 )) == 1))
    {
        if ((GET_DOES_WEAPON_EXIST( l_U2025 )) == 1)
        {
            REMOVE_PED_WEAPON( l_U295, l_U2025 );
        }
        SET_PED_COLLISION( l_U295, 0 );
    }
    return;
}

int sub_56558()
{
    if ((IS_PED_DEAD( sub_1255() )) == 0)
    {
        if ((GET_PED_REACHED_TARGETED_GRAVWELL_CENTER( sub_1255(), "st_00_fd_simple", "GravWell_MaxStumble01", 0 )) AND (NOT l_U1356))
        {
            l_U1356 = 1;
            sub_888( "REACHED CENTRE OF GRAVWELL" );
            return 1;
        }
    }
    return 0;
}

void sub_56718()
{
    DISPLAY_HUD( 0 );
    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        PED_SET_ACTION_INTENTION( sub_1255(), 55, 1000, g_U649 );
        if ((DOES_PED_EXIST( l_U295 )) == 1)
        {
            if (((IS_PED_DEAD( l_U295 )) == 0) || ((IS_PED_DEAD( l_U295 )) == 1))
            {
                TASK_LOOK_AT_PED( sub_1255(), l_U295, -1, 0 );
            }
        }
        SET_CAM_SIDE_LEFT( 1 );
    }
    return;
}

void sub_56995()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    sub_954( "NS", "P_PLAY_STUMBLE_SPEECH", 0 );
    sub_37452( ref uVar2 );
    STOP_CURRENT_PLAYING_AMBIENT_SPEECH( sub_1255() );
    PLAY_PED_AMBIENT_SPEECH( sub_1255(), "STUMBLE_PAIN_LARGE", 1, 1, 0, 0, 30000 );
    sub_37534( 0, sub_1255(), "MAX", ref uVar2, 2, 0 );
    sub_37773( "SSTD_STCR", ref uVar2, 8, 1 );
    return;
}

int sub_57147()
{
    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        if ((GET_PED_REACHED_TARGETED_GRAVWELL_CENTER( sub_1255(), "st_00_fd_simple", "GravWell_TunnelEndCorner", 0 )) AND (NOT l_U1359))
        {
            l_U1359 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_57279(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        SET_PED_PRIMARY_LOOKAT( uParam0, uParam1 );
    }
    return;
}

void sub_57349()
{
    sub_954( "GA", "P_FIELD_EARLY_PED_CLEANUP start", 0 );
    sub_51503( -1191130939, 1 );
    sub_4110( -1191130939, ref g_U1263 );
    sub_3688( l_U1090 );
    sub_5123( ref l_U679 );
    sub_57457( g_U2377, ref g_U1069 );
    sub_57457( 1689856371, ref g_U1069 );
    sub_57457( -2056814065, ref g_U1069 );
    sub_5263( g_U3704 );
    sub_5035( g_U3705 );
    sub_57457( 1049690760, ref g_U1069 );
    sub_954( "GA", "P_FIELD_EARLY_PED_CLEANUP end", 0 );
    return;
}

void sub_57457(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_3888( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_57786()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( l_U277 );
        sub_36747( l_U277, l_U327, l_U330 );
        sub_33550( l_U277, 2130328435, "Passos" );
        ISEQ_START( 2130328435 );
    }
    return;
}

void sub_58397(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

void sub_58654()
{
    char[12] cVar2;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if ((NOT (IS_PED_DEAD( l_U277 ))) AND (NOT (IS_PED_DEAD( sub_1255() ))))
    {
        array(ref cVar2, 2);
        StrCopy( ref cVar2[0], "SSTD_BTMA", 16 );
        StrCopy( ref cVar2[1], "SSTD_BTMAB", 16 );
        sub_37452( ref l_U1305 );
        sub_37534( 0, sub_1255(), "MAX", ref l_U1305, 2, 0 );
        sub_37534( 1, l_U277, "PASSOS", ref l_U1305, 2, 0 );
        sub_58802( ref cVar2, ref l_U1305, 7, 1 );
    }
    return;
}

void sub_58802(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_58826( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_58826(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;

    StrCopy( ref cVar7, uParam1, 16 );
    return sub_37852( uParam0, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

void sub_58942(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_1255();
    sub_36747( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

void sub_59381()
{
    int iVar2;

    iVar2 = 2500;
    sub_45142( ref l_U1675 );
    switch (l_U1674)
    {
        case 0:
        l_U1675[0]._fU4 = "INJURED_WALK_01";
        l_U1675[0]._fU8 = 3;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 1;
        break;
        case 1:
        l_U1675[0]._fU4 = "FLICKER_VIBRATE_INTERLACE_M";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 2;
        break;
        case 2:
        l_U1675[0]._fU4 = "INJURED_WALK_02";
        l_U1675[0]._fU8 = 3;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 3;
        break;
        case 3:
        l_U1675[0]._fU4 = "DOUBLE_MASK_INTERLACE_TWITCH";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 4;
        break;
        case 4:
        l_U1675[0]._fU4 = "INJURED_WALK_04";
        l_U1675[0]._fU8 = 3;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 5;
        break;
        case 5:
        l_U1675[0]._fU4 = "FLICKER_VIBRATE_LIGHTEN";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 6;
        break;
        case 6:
        l_U1675[0]._fU4 = "TRIPLE_IMAGE_MASK_L_FAST";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 7;
        break;
        case 7:
        l_U1675[0]._fU4 = "FLICKER_VIBRATE_01";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        l_U1674 = 0;
        break;
        case 8:
        l_U1675[0]._fU4 = "TRIPLE_MOVE_RIGHT_FAST";
        l_U1675[0]._fU8 = 4;
        l_U1675[0]._fU32 = 0;
        break;
    }
    sub_2027( ref l_U1838, iVar2, 1, 0 );
    sub_2163( ref l_U1838 );
    l_U74 = 0;
    return;
}

vector sub_60453(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return "[dynamic result, ret vals = 3]";
        break;
        GET_PED_COORDS( uParam0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        break;
    }
    return vector( 0, 0, 0);
}

void sub_60590(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_11654( iParam0 )) == 0)
    {
        sub_11720( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_60753(boolean bParam0)
{
    if (NOT bParam0)
    {
        sub_60795( "PLGE_RIFLE_CROUCH", ref g_U1354 );
        sub_60795( "PLGE_PSTL_CROUCH", ref g_U1354 );
        sub_60795( "PLGE_RIFLE_CORE", ref g_U1354 );
        sub_60795( "PLGE_PSTL_CORE", ref g_U1354 );
        sub_60795( "PLGE_RIFLE_CORE_RELOAD", ref g_U1354 );
        sub_60795( "PLGE_PSTL_CORE_RELOAD", ref g_U1354 );
        sub_60795( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
        sub_60795( "PLGE_PSTL_HANDSIG", ref g_U1354 );
        sub_60795( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
        sub_60795( "PLGE_PSTL_ACTIONS", ref g_U1354 );
        sub_60795( "PLGE_RIFLE_KNEE", ref g_U1354 );
        sub_60795( "PLGE_PSTL_KNEE", ref g_U1354 );
        sub_60795( "PLGE_RIFLE_COVER", ref g_U1354 );
        sub_60795( "PLGE_PSTL_COVER", ref g_U1354 );
        sub_60795( "PLGE_RIFLE_REACT", ref g_U1354 );
        sub_60795( "PLGE_PSTL_REACT", ref g_U1354 );
        sub_60795( "PLGE_RIFLE_COVER_EXIT", ref g_U1354 );
        sub_60795( "PLGE_PSTL_COVER_EXIT", ref g_U1354 );
        sub_60795( "PLGE_PSTL_FULLBODY", ref g_U1354 );
    }
    else
    {
        sub_61513( "PLGE_RIFLE_CROUCH" );
        sub_61513( "PLGE_PSTL_CROUCH" );
        sub_61513( "PLGE_RIFLE_CORE" );
        sub_61513( "PLGE_PSTL_CORE" );
        sub_61513( "PLGE_RIFLE_CORE_RELOAD" );
        sub_61513( "PLGE_PSTL_CORE_RELOAD" );
        sub_61513( "PLGE_RIFLE_HANDSIG" );
        sub_61513( "PLGE_PSTL_HANDSIG" );
        sub_61513( "PLGE_RIFLE_ACTIONS" );
        sub_61513( "PLGE_PSTL_ACTIONS" );
        sub_61513( "PLGE_RIFLE_KNEE" );
        sub_61513( "PLGE_PSTL_KNEE" );
        sub_61513( "PLGE_RIFLE_COVER" );
        sub_61513( "PLGE_PSTL_COVER" );
        sub_61513( "PLGE_RIFLE_REACT" );
        sub_61513( "PLGE_PSTL_REACT" );
        sub_61513( "PLGE_RIFLE_COVER_EXIT" );
        sub_61513( "PLGE_PSTL_COVER_EXIT" );
        sub_61513( "PLGE_PSTL_FULLBODY" );
    }
    return;
}

void sub_60795(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_3888( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_61513(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

int sub_62001()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        if ((sub_52942( ref l_U277, 47, 1 )) AND (NOT l_U348))
        {
            l_U348 = 1;
            return 1;
        }
    }
    return 0;
}

int sub_62148(unknown uParam0, unknown uParam1, float fParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    float fVar8;

    uVar5 = {sub_60453( sub_1255() )};
    if (ARE_STRINGS_EQUAL( uParam0, "X" ))
    {
        fVar8 = uVar5._fU0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Y" ))
    {
        fVar8 = uVar5._fU4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Z" ))
    {
        fVar8 = uVar5._fU8;
    };;;
    if (ARE_STRINGS_EQUAL( uParam1, "Greater" ))
    {
        if (fVar8 > fParam2)
        {
            return 1;
        }
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Less" ))
    {
        if (fVar8 < fParam2)
        {
            return 1;
        }
    }
    return 0;
}

void sub_62387()
{
    sub_954( "GA", "Passos moving in to showers.", 0 );
    PED_SET_ACTION_INTENTION( l_U277, 49, 5000, g_U649 );
    if ((NOT (IS_PED_DEAD( sub_1255() ))) AND (NOT (IS_PED_DEAD( l_U277 ))))
    {
        SET_PED_DEFAULT_AIM_AT_PED( l_U277, sub_1255() );
    }
    return;
}

int sub_62537()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        if ((sub_52942( ref l_U277, 49, 1 )) AND ((NOT l_U349) == 1))
        {
            l_U349 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_62922()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        PED_SET_ACTION_INTENTION( l_U277, 50, 1000, g_U649 );
        CLEAR_PED_PRIMARY_LOOKAT( l_U277 );
    }
    return;
}

int sub_63009()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        if ((sub_52942( ref l_U277, 50, 1 )) AND (NOT l_U350))
        {
            l_U350 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_63112(int iParam0, unknown uParam1)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if (sub_48690( iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam1) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU548 = 1;
    return Result;
}

void sub_63276(int iParam0)
{
    if (l_U1565 != iParam0)
    {
        ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_MaxStumbles02", iParam0, 0, 0, 0 );
        l_U1565 = iParam0;
    }
    if (l_U1566 != iParam0)
    {
        ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_MaxStumbles03", iParam0, 0, 0, 0 );
        ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_MaxStumbles04", iParam0, 0, 0, 0 );
        l_U1566 = iParam0;
    }
    if (l_U1567 != iParam0)
    {
        ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_ShowersToDarkroom01", iParam0, 0, 0, 0 );
        ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_ShowersToDarkroom02", iParam0, 0, 0, 0 );
        ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_ShowersToDarkroom03", iParam0, 0, 0, 0 );
        ENABLE_GRAVITY_WELL( "st_00_fd_simple", "GravWell_ShowersToDarkroom04", iParam0, 0, 0, 0 );
        l_U1567 = iParam0;
    }
    return;
}

int sub_63806()
{
    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        if ((GET_PED_REACHED_TARGETED_GRAVWELL_CENTER( sub_1255(), "st_00_fd_simple", "GravWell_MaxStumbles02", 0 )) AND (NOT l_U1357))
        {
            l_U1357 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_64045()
{
    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        sub_954( "[SA]", "Second smear.", 0 );
        sub_40079( 0, 0, 0, 1 );
        AUDIO_MUSIC_PLAY_ONESHOT();
        SET_PED_SYNC_POINT( sub_1255(), g_U3972, -90.00000000 );
        PED_SET_ACTION_INTENTION( sub_1255(), 52, 5000, g_U649 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_01", "VIG_15_STADIUM_CAM", 1, 28.10000000, 59.08200000, -1.45100000, 0.00000000, 1, 750 );
        l_U2010 = 1;
        WAIT( 1 );
        SET_PLAYER_CONTROL( sub_1277(), 0, 0 );
        sub_5703( 1 );
    }
    return;
}

void sub_64564(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_64593( uParam0, uParam1, uParam2, g_U649, uParam5, uParam6, uParam7 );
    return;
}

void sub_64593(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    sub_64619( uParam0, uParam1, uParam2, uParam5, uParam9, uParam10 );
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), uParam8 );
    }
    return;
}

void sub_64619(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_5263( (uParam0^) );
    (uParam0^) = sub_64650( uParam1, uParam2, uParam5, 0, uParam9, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), uParam8 );
    return;
}

void sub_64650(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_27780( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_64976(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        PLAY_OBJECT_ANIM( uParam0, uParam1, uParam2, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uParam0, uParam1, uParam2, uParam4 );
        SET_OBJECT_ANIM_SPEED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_65221(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

int sub_65247()
{
    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        if (GET_PED_REACHED_TARGETED_GRAVWELL_CENTER( sub_1255(), "st_00_fd_simple", "GravWell_MaxStumbles03", 0 ))
        {
            return 1;
        }
    }
    return 0;
}

int sub_65387()
{
    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        if ((GET_PED_REACHED_TARGETED_GRAVWELL_CENTER( sub_1255(), "st_00_fd_simple", "GravWell_MaxStumbles04", 0 )) AND (NOT l_U1358))
        {
            l_U1358 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_65513()
{
    if (NOT (IS_PED_DEAD( sub_1255() )))
    {
        sub_954( "[SA]", "Third smear.", 0 );
        SET_PED_SYNC_POINT( sub_1255(), 35.80000000, 64.86700000, -3.20000000, 0.00000000 );
        PED_SET_ACTION_INTENTION( sub_1255(), 53, 1000, g_U649 );
        CAMERA_CLEAR_POINT_AT_TARGET();
        SET_CAM_SIDE_LEFT( 1 );
    }
    return;
}

void sub_66021()
{
    sub_27223( ref g_U2968, 0 );
    sub_27223( ref g_U2975, 0 );
    return;
}

void sub_66080(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_SHOOTS_AT_COORD( uParam0, uParam1 );
    }
    return;
}

void sub_66880()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        PED_ACTION_TREE_PLAY_NODE( l_U277, "/Global/PASSOS_THROUGH_BASEMENT/PASSOS_THROUGH_BASEMENT_CONTROL/INTO_DARKROOM/AFTER_DARKROOM_HOLD" );
    }
    return;
}

void sub_67194()
{
    if (NOT (IS_PED_DEAD( l_U277 )))
    {
        PED_SET_ACTION_INTENTION( l_U277, 51, 1000, g_U649 );
    }
    return;
}

void sub_67254()
{
    if ((NOT (IS_PED_DEAD( l_U277 ))) AND (NOT (IS_PED_DEAD( sub_1255() ))))
    {
        sub_37452( ref l_U1315 );
        sub_37534( 0, sub_1255(), "MAX", ref l_U1315, 2, 0 );
        sub_37534( 1, l_U277, "PASSOS", ref l_U1315, 2, 0 );
        sub_37773( "SSTD_BTPA", ref l_U1315, 8, 1 );
    }
    return;
}

void sub_67514()
{
    vector vVar2;
    float fVar5;
    vector vVar6;
    vector vVar9;
    vector vVar12;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;

    switch (l_U117)
    {
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
            l_U117 = 2;
        }
        break;
        case 2:
        if (l_U118)
        {
            vVar2 = {14.71981000, -0.81798800, 0.17263800};
            fVar5 = 299.43780000;
            vVar6 = {14.11945000, -4.56673700, 0.41104700};
            vVar9 = {7.19548600, 0.00000300, -16.67859000};
        }
        else
        {
            vVar2 = {1.34340600, 25.28127000, 0.17263800};
            fVar5 = 215.09000000;
            vVar6 = {-2.98952500, 21.23214000, 0.53261800};
            vVar9 = {1.03530700, 0.00003300, -48.05409000};
        }
        FREEZE_PED_POSITION( sub_1255(), 1 );
        CLEAR_PED_TASKS_IMMEDIATELY( sub_1255() );
        sub_58942( vVar2, fVar5, 0, 0 );
        sub_30391( ref l_U1090 );
        SET_PED_AI_TEMPLATE( l_U1090, "AIT_EXPERT" );
        SET_PED_ACCURACY( l_U1090, 31186664 );
        TASK_AIM_GUN_AT_COORD( l_U1090, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( sub_1255(), 65488, g_U649 ), -1, 1 );
        sub_47409( ref l_U1090, 1 );
        vVar12 = {l_U1077._fU0};
        vVar12 = {vVar12 + (vector( 0, 0, 0.20000000))};
        sub_36747( l_U1090, vVar12, GET_PED_HEADING( l_U1090 ) );
        sub_5907( ref l_U1209 );
        sub_67952( ref uVar15, vVar6, vVar9, 1110704128, 1000 );
        sub_68161( ref uVar15 );
        DO_SCREEN_FADE_IN( 250 );
        l_U117 = 3;
        break;
        case 3:
        if (IS_SCREEN_FADED_IN())
        {
            FREEZE_PED_POSITION( sub_1255(), 0 );
            uVar46 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( sub_1255(), 65488, g_U649 )};
            SET_PED_SHOOTS_AT_COORD( l_U1090, uVar46 );
            l_U117 = 4;
        }
        break;
        case 4: break;
    }
    return;
}

void sub_67952(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_2027( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U723, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_68161(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_2163( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_68447()
{
    if (sub_68467( ref l_U1847, sub_1255(), 0 ))
    {
        PLAY_IMAGEFX( "DOUBLE_WIDE_INTERLACE_FLASH_07", 4, 0 );
    }
    if (l_U1910)
    {
        PLAY_IMAGEFX( "GAMMA_SATURATION_COLOR_ZOOM", 4, 0 );
        l_U1910 = 0;
    }
    if (sub_68467( ref l_U1868, sub_1255(), 0 ))
    {
        PLAY_IMAGEFX( "GAMMA_SATURATION_COLOR_ZOOM_3", 4, 0 );
    }
    if (sub_68467( ref l_U1889, sub_1255(), 0 ))
    {
        PLAY_IMAGEFX( "GAMMA_ZOOM_1", 4, 0 );
    }
    return;
}

void sub_68467(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_48337( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_68779()
{
    if ((sub_2283( ref l_U1838 )) == 1)
    {
        if (l_U1911 == 1)
        {
            sub_45123();
        }
        if (l_U1912 == 1)
        {
            sub_59381();
        }
    }
    sub_68843( ref l_U1675 );
    return;
}

void sub_68843(unknown uParam0)
{
    int I;
    int J;

    switch (l_U74)
    {
        case 0:
        sub_954( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                sub_2027( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                sub_2163( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U74 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (sub_2283( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                    sub_2027( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                    sub_2163( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                            sub_2027( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                            sub_2163( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if (sub_2283( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

void sub_69632()
{
    if (NOT l_U1355)
    {
        sub_38592( ref l_U1337, 6000 );
        l_U1355 = 1;
    }
    if (sub_2283( ref l_U1337 ))
    {
        if (NOT (IS_PED_DEAD( sub_1255() )))
        {
            if ((GET_PED_SPEED( sub_1255() )) > 0.10000000)
            {
                PLAY_PED_AMBIENT_SPEECH( sub_1255(), "STUMBLE_PAIN", 1, 1, 0, 0, 30000 );
            }
        }
        sub_38592( ref l_U1337, GET_RANDOM_INT_IN_RANGE( 6000, 7000 ) );
    }
    return;
}

void sub_69790()
{
    if (GET_ADRENALINE_AMT() > 0.01000000)
    {
        SET_ADRENALINE_AMT( 0.00000000 );
    }
    return;
}

void sub_69856()
{
    sub_888( "P_RELEASE_FIELD_ASSETS" );
    sub_69904( ref l_U2012, ref g_U1069 );
    sub_69971( ref l_U2020, ref g_U1214 );
    sub_60795( "LEVEL_S_STAD_CP_01", ref g_U1354 );
    sub_60795( "LEVEL_S_STAD_LOCKER", ref g_U1354 );
    sub_70127( "/LEVEL/S_STAD/s_stad_inj1.act", ref g_U2012 );
    sub_60753( 0 );
    return;
}

void sub_69904(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_57457( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_69971(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_3790( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_70127(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_3888( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U62 = 0;
    l_U63 = 0;
    l_U64 = 1500;
    l_U75 = 0;
    l_U128 = 0;
    l_U130 = 1;
    l_U131 = 0;
    l_U180 = 0;
    l_U181 = 0;
    l_U182 = 0;
    l_U223 = {94.00000000, -9.80000000, 9.60000000};
    l_U226 = 90.00000000;
    l_U448 = 0;
    l_U449 = 10.00000000;
    l_U463 = {90.40000000, 14.96000000, 9.62000000};
    l_U466 = 270.00000000;
    l_U1196 = 0;
    l_U1251 = 0;
    l_U1252 = 0;
    l_U1253 = 0;
    l_U1497 = 0;
    l_U1498 = 0;
    l_U1543 = 0;
    l_U1811 = 0;
    l_U1871 = 1.00000000;
    l_U1882 = 0;
    l_U1883 = 2000;
    l_U1957 = {85.25000000, 25.81000000, 9.60000000};
    l_U1960 = 180.00000000;
    l_U1961 = {93.24000000, 3.54000000, 9.64000000};
    l_U1964 = 0.00000000;
    l_U2054 = {30.87078000, 66.10243000, 12.55022000};
    l_U2057 = 349.67400000;
    l_U2058 = {39.86000000, 58.87000000, 13.30000000};
    l_U2088 = 1;
    l_U2089 = 500;
    l_U2090 = 1000;
    l_U2186 = 0;
    l_U2187 = 0;
    l_U2188 = 0;
    l_U2189 = {92.58926000, -9.65747400, 9.60318000};
    l_U2192 = 89.75311000;
    l_U2193 = 0;
    l_U2293 = 0;
    l_U2294 = 0;
    l_U2295 = 0;
    l_U2325 = 0;
    l_U2326 = 0;
    l_U2336 = 0;
    l_U2337 = 0;
    l_U2348 = 0;
    l_U2349 = 0;
    l_U2350 = 0;
    l_U2351 = 0;
    l_U2352 = 0;
    l_U2353 = 0;
    l_U2373 = 0;
    l_U2414 = {86.19653000, 55.85049000, 10.99039000};
    l_U2417 = {-9.01161700, -0.00001100, 165.71690000};
    sub_812( "SP", "Script stad_concession.sc is starting up...", 0 );
    sub_861();
    l_U128 = 1;
    l_U75 = 0;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_1171();
        if (l_U131 == 0)
        {
            sub_14260();
        }
        WAIT( 0 );
    }
    sub_5986( 0 );
    sub_84565();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "stad_concession" );
    sub_812( "SP", "Script stad_concession.sc is terminating...", 0 );
    return;
}

void sub_812(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_861()
{
    sub_812( "GA", "P_CON_POPULATE_VARIABLE_ARRAYS start", 0 );
    l_U113[0] = g_U2390;
    l_U113[1] = -1652775333;
    l_U113[2] = 1816766229;
    l_U113[3] = 1873472982;
    l_U113[4] = -1993976541;
    l_U113[5] = -2096019114;
    l_U113[6] = g_U2382;
    l_U113[7] = g_U2383;
    l_U113[8] = -1601625009;
    l_U113[9] = g_U847;
    l_U124[0] = 1194438308;
    l_U124[1] = 1478009203;
    l_U124[2] = 434544317;
    sub_812( "GA", "P_CON_POPULATE_VARIABLE_ARRAYS end", 0 );
    return;
}

void sub_1171()
{
    if (g_U855 == 6)
    {
        switch (l_U131)
        {
            case 0:
            if (((IS_PED_DEAD( g_U4007 )) AND (DOES_PED_EXIST( g_U4007 ))) || ((sub_1326()) || (IS_PED_DEAD( sub_1253() ))))
            {
                if (IS_PED_DEAD( g_U4007 ))
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                    RESET_LAST_MAN_STANDING();
                    if (NOT (IS_PED_DEAD( sub_1253() )))
                    {
                        SET_PED_INVINCIBLE( sub_1253(), 1 );
                    }
                }
                l_U1965._fU164 = 0;
                sub_1863( ref l_U1965 );
                l_U131 = 1;
                sub_812( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_4377())
            {
                l_U131 = 2;
            }
            else if ((sub_4417( 0 )) == 1)
            {
                l_U131 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_1253() )))
            {
                if ((g_U888[7]._fU40 != 4) AND (g_U888[7]._fU40 != 0))
                {
                    sub_812( "CR", "Shutting down script for MCE_BLEACHERS.", 0 );
                    sub_5469( ref g_U888[7] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U888[7]._fU32 );
                    g_U3879 = 0;
                }
                l_U131 = 3;
                sub_812( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_812( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_1253() ))) AND (NOT (IS_PLAYER_DEAD( sub_1275() ))))
            {
                SET_PLAYER_CONTROL( sub_1275(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_1253() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_1253(), 0 );
                }
                SET_PED_INVINCIBLE( sub_1253(), 0 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            sub_5764( "STAD_PASSOS_CONCESSION_SCRIPTED_FAIL_FX" );
            TERMINATE_GAME_BULLET_CAMERA();
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            sub_5986( 1 );
            sub_9264( 6 );
            STREAM_HELPERS_REQUEST_AT_LOC( 84.59229000, 31.32314000, 9.59993600, 1 );
            l_U131 = 4;
            sub_812( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_812( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U77._fU0)
            {
                sub_10038( ref l_U77, sub_1253() );
            }
            l_U131 = 5;
            sub_812( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_812( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U128 = 1;
            l_U130 = 0;
            l_U131 = 0;
            sub_812( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_1253()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1275() );
    }
    return 0;
}

void sub_1275()
{
    return GET_PLAYER_ID();
}

int sub_1326()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1253() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1253(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1275(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1275(), 1 );
            if ((IS_PED_VISIBLE( sub_1253() )) == 0)
            {
                SET_PED_VISIBLE( sub_1253(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1863(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        switch (iParam0->_fU164)
        {
            case 0:
            if (NOT ((sub_1961( iParam0->_fU0, 37 )) == 1))
            {
                iParam0->_fU168 = 0;
                iParam0->_fU176 = 0;
                iParam0->_fU180 = 0;
                iParam0->_fU172 = 0;
                TASK_AIM_GUN_AT_COORD( iParam0->_fU0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU0 ), -1, 1 );
            }
            break;
            case 1:
            if ((NOT iParam0->_fU216) AND (sub_2095( iParam0 )))
            {
                sub_2206( iParam0 );
            }
            else if (NOT iParam0->_fU168)
            {
                sub_2679( iParam0 );
            }
            break;
            case 4:
            if (sub_3104( iParam0 + 120 ))
            {
                sub_812( "MSWW", "SniperBehaviour: Duck timer done", "###" );
                if (sub_2095( iParam0 ))
                {
                    sub_2206( iParam0 );
                }
                else if (iParam0->_fU212)
                {
                    sub_3361( iParam0 );
                }
                else
                {
                    sub_2679( iParam0 );
                }
            }
            break;
            case 2:
            if ((NOT iParam0->_fU216) AND (sub_2095( iParam0 )))
            {
                sub_2206( iParam0 );
            }
            else if (NOT iParam0->_fU176)
            {
                sub_3361( iParam0 );
            }
            break;
            case 3:
            if ((NOT iParam0->_fU216) AND (sub_2095( iParam0 )))
            {
                sub_2206( iParam0 );
            }
            else if (NOT iParam0->_fU180)
            {
                sub_3728( iParam0 );
            }
            else if ((sub_4106( iParam0->_fU0 )) == 3)
            {
                sub_3728( iParam0 );
            };;;
            break;
            case 5:
            if (NOT iParam0->_fU184)
            {
                PED_ACTION_TREE_PLAY_NODE( iParam0->_fU0, "/Global/SNIPER_BEHAVIOR/SNIPER3SET_SEQ/STATES/DUCK" );
                iParam0->_fU168 = 0;
                iParam0->_fU176 = 0;
                iParam0->_fU180 = 0;
                iParam0->_fU172 = 0;
                iParam0->_fU184 = 1;
            }
            break;
        }
    }
    return;
}

int sub_1961(unknown uParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        return GET_SCRIPT_TASK_STATUS( uParam0, uParam1 );
    }
    return 0;
}

int sub_2095(int iParam0)
{
    if ((NOT (IS_PED_DEAD( sub_1253() ))) AND (NOT (IS_PED_DEAD( iParam0->_fU0 ))))
    {
        if (IS_PED_IN_CROSSHAIR_CYLINDER( iParam0->_fU0, iParam0->_fU196, 1000, iParam0->_fU200, -1082130432 ))
        {
            return 1;
        }
    }
    return 0;
}

void sub_2206(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        if ((NOT iParam0->_fU184) AND (NOT iParam0->_fU172))
        {
            sub_2271( "Sniper ducks" );
            CLEAR_PED_TASKS( iParam0->_fU0 );
            PED_SET_ACTION_INTENTION( iParam0->_fU0, 47, 1000, g_U649 );
        }
        iParam0->_fU168 = 0;
        iParam0->_fU176 = 0;
        iParam0->_fU180 = 0;
        iParam0->_fU172 = 1;
        iParam0->_fU184 = 0;
        sub_2389( iParam0 + 120, iParam0->_fU156, 1, 0 );
        sub_2527( iParam0 + 120 );
        iParam0->_fU164 = 4;
    }
    return;
}

void sub_2271(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_2389(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2527(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

void sub_2679(int iParam0)
{
    unknown uVar3;

    if ((NOT (IS_PED_DEAD( sub_1253() ))) AND (NOT (IS_PED_DEAD( iParam0->_fU0 ))))
    {
        if ((iParam0->_fU184) || (iParam0->_fU172))
        {
            CLEAR_PED_TASKS( iParam0->_fU0 );
            PED_SET_ACTION_INTENTION( iParam0->_fU0, 48, 1000, g_U649 );
        }
        sub_2781( iParam0 + 0 );
        iParam0->_fU168 = 1;
        iParam0->_fU176 = 0;
        iParam0->_fU180 = 0;
        iParam0->_fU172 = 0;
        iParam0->_fU184 = 0;
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_AIM_GUN_AT_PED( 0, sub_1253(), iParam0->_fU192, 0 );
        TASK_SHOOT_AT_PED( 0, sub_1253(), -1, iParam0->_fU208, 0, 0, iParam0->_fU204 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
        iParam0->_fU164 = 1;
    }
    return;
}

void sub_2781(unknown uParam0)
{
    sub_2798( uParam0, sub_1253() );
    return;
}

void sub_2798(unknown uParam0, unknown uParam1)
{
    sub_2812( uParam0, uParam1 );
    sub_2873( uParam0, uParam1 );
    return;
}

void sub_2812(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_2873(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

int sub_3104(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_3361(int iParam0)
{
    unknown uVar3;

    if ((NOT (IS_PED_DEAD( sub_1253() ))) AND (NOT (IS_PED_DEAD( iParam0->_fU0 ))))
    {
        if ((iParam0->_fU184) || (iParam0->_fU172))
        {
            CLEAR_PED_TASKS( iParam0->_fU0 );
            PED_SET_ACTION_INTENTION( iParam0->_fU0, 48, 1000, g_U649 );
        }
        iParam0->_fU168 = 0;
        iParam0->_fU176 = 1;
        iParam0->_fU180 = 0;
        iParam0->_fU172 = 0;
        iParam0->_fU184 = 0;
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_AIM_GUN_AT_COORD( 0, iParam0->_fU72, 2000, 0 );
        TASK_AIM_GUN_AT_COORD( 0, iParam0->_fU84, 2000, 0 );
        SET_SEQUENCE_TO_REPEAT( uVar3, 1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
        iParam0->_fU164 = 2;
    }
    return;
}

void sub_3728(int iParam0)
{
    float fVar3;
    float fVar4;
    float fVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;

    if ((NOT (IS_PED_DEAD( sub_1253() ))) AND (NOT (IS_PED_DEAD( iParam0->_fU0 ))))
    {
        if ((iParam0->_fU184) || (iParam0->_fU172))
        {
            CLEAR_PED_TASKS( iParam0->_fU0 );
            PED_SET_ACTION_INTENTION( iParam0->_fU0, 48, 1000, g_U649 );
        }
        iParam0->_fU168 = 0;
        iParam0->_fU176 = 0;
        iParam0->_fU180 = 1;
        iParam0->_fU172 = 0;
        iParam0->_fU184 = 0;
        fVar3 = (GET_RANDOM_FLOAT_IN_RANGE( -0.50000000, 0.50000000 )) + (ref iParam0->_fU96->_fU0);
        fVar4 = (GET_RANDOM_FLOAT_IN_RANGE( -0.50000000, 0.50000000 )) + (ref iParam0->_fU96->_fU4);
        fVar5 = (GET_RANDOM_FLOAT_IN_RANGE( -0.50000000, 0.50000000 )) + (ref iParam0->_fU96->_fU8);
        uVar6 = {fVar3, fVar4, ref iParam0->_fU96->_fU8};
        OPEN_SEQUENCE_TASK( ref uVar9 );
        TASK_AIM_GUN_AT_COORD( 0, uVar6, 3000, 1 );
        TASK_SHOOT_AT_COORD( 0, uVar6, 1000, 1566631136, 0, 0 );
        TASK_AIM_GUN_AT_COORD( 0, uVar6, 1000, 0 );
        TASK_AIM_GUN_AT_COORD( 0, uVar6, -1, 0 );
        CLOSE_SEQUENCE_TASK( uVar9 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar9 );
        CLEAR_SEQUENCE_TASK( uVar9 );
        iParam0->_fU164 = 3;
    }
    return;
}

int sub_4106(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        return GET_SEQUENCE_PROGRESS( uParam0 );
    }
    return -1;
}

void sub_4377()
{
    return g_U648;
}

int sub_4417(int iParam0)
{
    iParam0 = 1;
    switch (l_U63)
    {
        case 0:
        if (NOT (sub_4478( ref l_U65 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1253() )))
            {
                l_U64 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_2389( ref l_U65, l_U64, 1, 1 );
            sub_2527( ref l_U65 );
        }
        if (sub_3104( ref l_U65 ))
        {
            sub_812( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1253() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1275() )))
            {
                SET_PLAYER_CONTROL( sub_1275(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U63 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U63 = 2;
            }
            else
            {
                l_U63 = 3;
            }
        }
        break;
        case 2:
        sub_812( "NS", "Player will QUIT", 0 );
        sub_4937();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_812( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_4937();
        return 1;
        break;
    }
    return 0;
}

int sub_4478(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_4937()
{
    sub_812( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4987( ref l_U65 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1275() )))
    {
        SET_PLAYER_CONTROL( sub_1275(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U62 = 0;
    l_U62 = l_U62;
    l_U63 = 0;
    return;
}

void sub_4987(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_5469(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_5764(unknown uParam0)
{
    sub_812( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_5847( ref l_U76 );
    l_U75 = 1;
    return;
}

void sub_5847(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_5986(boolean bParam0)
{
    sub_812( "GA", "P_CLEANUP_CON start", 0 );
    sub_6035( -263036009, 0 );
    sub_6243( -263036009, ref g_U1263 );
    sub_6035( -1310389432, 0 );
    sub_6243( -1310389432, ref g_U1263 );
    sub_6035( 727272178, 0 );
    sub_6243( 727272178, ref g_U1263 );
    sub_6035( -647680815, 0 );
    sub_6243( -647680815, ref g_U1263 );
    sub_6035( -813779471, 0 );
    sub_6243( -813779471, ref g_U1263 );
    sub_6035( -1414847258, 0 );
    sub_6243( -1414847258, ref g_U1263 );
    sub_6035( 1812693303, 0 );
    sub_6243( 1812693303, ref g_U1263 );
    sub_6035( 1154908660, 0 );
    sub_6243( 1154908660, ref g_U1263 );
    sub_6822( "MID_04B_STAD_CON_RUN_BLENDOUT", ref g_U2034 );
    sub_7163( "MID_04B_STAD_CON_RUN_BLENDOUT", ref g_U2034 );
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_04B_STADIUM" )) || (CUTSCENE_IS_LOADED( "MID_04B_STADIUM" )))
    {
        CLEAR_NAMED_CUTSCENE( "MID_04B_STADIUM" );
    }
    if (NOT (IS_PED_DEAD( sub_1253() )))
    {
        SET_PED_FORCED_TO_WALK( sub_1253(), 0 );
    }
    sub_7448( ref l_U441 );
    sub_7448( ref l_U445 );
    sub_7557( g_U4007 );
    sub_7557( l_U467 );
    sub_7557( g_U4186 );
    sub_7655( ref g_U4187 );
    if (NOT bParam0)
    {
        sub_7725( ref g_U4008 );
        sub_7725( ref g_U4141 );
    }
    sub_7557( l_U2040 );
    sub_7757( ref l_U1207 );
    sub_7725( ref l_U1013 );
    sub_7725( ref l_U1270 );
    sub_7757( ref l_U1499 );
    sub_7871( ref l_U1965 );
    sub_8049( l_U2206 );
    sub_8094( ref l_U2207, 0 );
    sub_8976( bParam0 );
    sub_7481( g_U4191 );
    SET_PED_HAS_SPECIAL_GUN_SOUND( g_U4007, 0 );
    sub_812( "GA", "P_CLEANUP_CON end", 0 );
    return;
}

void sub_6035(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_6243(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_6355( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_6355(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_6822(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_6839( uParam0, uParam1 ))
    {
        iVar4 = sub_6938( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    return;
}

int sub_6839(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_6938(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

void sub_7163(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_6355( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_7448(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_7481( (uParam0^)[I] );
    }
    return;
}

void sub_7481(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_7557(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_7655(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_7557( (uParam0^)[I] );
    }
    return;
}

void sub_7725(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_7757( ref (uParam0^)[I] );
    }
    return;
}

void sub_7757(int iParam0)
{
    sub_7557( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

void sub_7871(int iParam0)
{
    iParam0->_fU164 = 0;
    I_SEQUENCE_UNREGISTER_ENTITY( "S_STAD_SNIPBEH", "stad_sniper" );
    sub_7945( "S_STAD_SNIPBEH", 0 );
    sub_7557( iParam0->_fU0 );
    return;
}

void sub_7945(unknown uParam0, int iParam1)
{
    if ((I_SEQUENCE_IS_LOADED( uParam0 )) == 1)
    {
        I_SEQUENCE_TERMINATE( uParam0 );
    }
    if (iParam1 == 1)
    {
        while ((I_SEQUENCE_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_8049(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_8094(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_8138( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_8138( iParam0, 0 );
        sub_8338( iParam0, 0 );
        if ((IS_PED_DEAD( sub_1253() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_1253() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_1253(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_8138(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_8338(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_8489( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_8489(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_8550( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_8550( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_8550(int iParam0)
{
    if (((IS_PED_DEAD( sub_1253() )) == 0) AND ((IS_PLAYER_DEAD( sub_1275() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_1253() )) == 1) || (((IS_PED_GETTING_UP( sub_1253() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_1253() )) == 1) || (((IS_PED_IN_COVER( sub_1253() )) == 1) || (((IS_PED_DUCKING( sub_1253() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_1253() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_8976(boolean bParam0)
{
    sub_812( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        sub_812( "CCB", "Stopping the Stadium_Stores context...", 0 );
        END_CONTEXT( "Stadium_Stores" );
    }
    else
    {
        sub_812( "CCB", "Stopping the Stadium_To_Stands context...", 0 );
        END_CONTEXT( "Stadium_To_Stands" );
    }
    return;
}

void sub_9264(unknown uParam0)
{
    vector vVar3;
    unknown uVar6;
    int iVar7;
    string sVar8;
    unknown uVar9;

    sub_2271( "P_LOAD_AREA" );
    vVar3 = {g_U2138[uParam0]};
    uVar6 = g_U2256[uParam0];
    iVar7 = -1;
    switch (uParam0)
    {
        case 2:
        case 21:
        iVar7 = GET_HASH_KEY( ref g_U2460 );
        sVar8 = "Int_Bsmt_01";
        break;
        case 3:
        case 22:
        iVar7 = GET_HASH_KEY( "Room_Hallway_01" );
        sVar8 = "Int_Bsmt_02";
        break;
        case 4:
        case 23:
        iVar7 = GET_HASH_KEY( "Room_Staircase_02" );
        sVar8 = "Int_Bsmt_03";
        break;
        case 5:
        case 24:
        iVar7 = GET_HASH_KEY( ref g_U2484 );
        sVar8 = "int_store_00";
        break;
        case 9:
        case 27:
        iVar7 = GET_HASH_KEY( ref g_U2548 );
        sVar8 = "int_Trophy_01";
        break;
        case 10:
        vVar3 = {-97.16455000, 22.49700000, 26.58807000};
        SET_PED_COORDS( sub_1253(), -2.36477500, 2.76315900, 1.17283500, 1 );
        SET_PED_HEADING( sub_1253(), uVar6 );
        LOAD_SCENE( -2.36477500, 2.76315900, 1.17283500 );
        break;
    }
    if (iVar7 == -1)
    {
        LOAD_SCENE( vVar3 );
    }
    else
    {
        uVar9 = GET_INTERIOR_FROM_NAME( sVar8, 0 );
        SET_INTERIOR_ACTIVE( uVar9, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar9, iVar7 );
    }
    if ((IS_PED_DEAD( sub_1253() )) == 0)
    {
        SET_PED_COORDS( sub_1253(), vVar3, 1 );
        SET_PED_HEADING( sub_1253(), uVar6 );
        FREEZE_PED_POSITION( sub_1253(), 0 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    return;
}

void sub_10038(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_812( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_10222( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_11299( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_11591( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_11951( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_11591( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_11951( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_11591( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_11951( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_12236( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_11951( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_12236( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_11951( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_12729( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_12890( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1253(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_812( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_10222(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_10254( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_10254(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_11299(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_11591(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_11907( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_11907(unknown uParam0)
{
    return;
}

void sub_11951(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_12236(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_11907( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_12729(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_12890(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_10254( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_12962( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_12962(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_14260()
{
    int iVar2;

    iVar2 = l_U128;
    if (g_U855 == 6)
    {
        sub_14289();
    }
    switch (l_U128)
    {
        case 0: break;
        case 1:
        sub_812( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_14830();
        sub_15370();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U128 = 2;
        sub_812( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_812( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_21211();
        sub_25996();
        l_U128 = 3;
        sub_812( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_30155( ref g_U2034 )) AND ((sub_29964( ref g_U1263 )) AND ((sub_29837( ref g_U1354 )) AND ((sub_29716( ref g_U1214 )) AND (sub_29596( ref g_U1069 ))))))
        {
            if ((NOT l_U77._fU0) AND (g_U854 == 6))
            {
                l_U128 = 4;
                sub_812( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U128 = 6;
                sub_812( "SP", "eCheckpointState = CP_CONCESSION_PRE_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 4:
        sub_812( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        l_U130 = 0;
        g_U3876 = 1;
        FREEZE_TIME_OF_DAY( 21, 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        if ((sub_30548( ref l_U77 )) == 0)
        {
            sub_12236( sub_1253(), 68019059, 50, 0, 0 );
            sub_11591( sub_1253(), 1194438308, 0, 50, 0 );
            l_U128 = 5;
            sub_812( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U128 = 6;
            sub_812( "SP", "eCheckpointState = CP_CONCESSION_PRE_CREATE_ASSETS", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_1253() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_1253(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_1253(), 0, 0 ) )))
            {
                l_U128 = 6;
                sub_812( "GA", "eCheckpointState = CP_CONCESSION_PRE_CREATE_ASSETS", 0 );
            }
        }
        break;
        case 6:
        if (l_U129)
        {
            l_U1955 = 1;
        }
        if (sub_31084())
        {
            if (sub_32933())
            {
                if (sub_34246())
                {
                    if (sub_34614())
                    {
                        if (NOT l_U130)
                        {
                            sub_35577();
                        }
                        sub_37117();
                        sub_38233();
                        sub_39012();
                        sub_39185( ref g_U3269, 0 );
                        sub_39185( ref g_U3276, 0 );
                        sub_39407( ref g_U3276, 0, 1, 0.30000000 );
                        sub_39407( ref g_U3269, 1, 1, 0.15000000 );
                        l_U128 = 7;
                        sub_812( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
                    }
                }
            }
        }
        break;
        case 7:
        if (g_U3876)
        {
            l_U128 = 8;
            sub_812( "GA", "eCheckpointState = CP_HANDLE_MID_04B_STAD", 0 );
        }
        break;
        case 8:
        if (l_U129)
        {
            sub_51312( ref l_U153, "MID_04B_STADIUM", 39743, 39798, 41459, 41477, 41559, 46506, 250, 0 );
            if (l_U130)
            {
                l_U153._fU4 = 2;
            }
            else
            {
                l_U153._fU4 = 7;
            }
        }
        if (sub_51738( ref l_U153 ))
        {
            if (NOT l_U77._fU0)
            {
                g_U855 = 6;
                sub_53913( ref l_U77, g_U855, sub_1253(), g_U2138[g_U855], g_U2256[g_U855], g_U2296[g_U855], g_U2336[g_U855], 1 );
            }
            l_U128 = 9;
            sub_812( "GA", "eCheckpointState = CP_CONCESSIONS_RUN", 0 );
        }
        break;
        case 9:
        sub_57568( l_U129 );
        sub_1863( ref l_U1965 );
        break;
        case 10:
        sub_59099( l_U129 );
        sub_1863( ref l_U1965 );
        break;
        case 11:
        if (sub_65610( ref l_U1884, 1 ))
        {
            sub_65748();
            sub_66128( 0, 0, 0, -859915232, -859915232, 0 );
            sub_53482( 1, 1 );
            sub_7725( ref l_U1013 );
            l_U128 = 14;
            sub_812( "GA", "eCheckpointState = CP_CONCESSION_CP_GONE", 0 );
        }
        break;
        case 12:
        sub_66311( l_U129 );
        break;
        case 13:
        if (sub_65610( ref l_U2383, 1 ))
        {
            sub_812( "CO", "You are on it", 0 );
            sub_65370( ref l_U2420 );
            sub_36106( l_U2488, l_U2489, l_U2492 );
            sub_73190( ref l_U2488, 88.07162000, 52.45227000, 11.84583000, -256437761, 1 );
            sub_72336( sub_72298(), 0.25000000 );
        }
        if (sub_65610( ref l_U2420, 1 ))
        {
            sub_73357( ref l_U2488, g_U4007, -256437761, 1 );
            sub_72336( sub_72298(), 0.25000000 );
        }
        if (IS_BULLET_CAMERA_ACTIVE())
        {
            sub_2271( "IS_BULLET_CAMERA_ACTIVE" );
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            if (NOT (IS_PED_DEAD( g_U4007 )))
            {
                START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "Blood_headsoup_S_01", g_U4007, 0, 0, 0, 0, 0, 0, 65488, 2.00000000 );
                SET_PED_TO_RAGDOLL( g_U4007, 5000, 6000, 0, 0, 0, 1, -1056964608 );
                SET_PED_CORPSE( g_U4007, 1 );
                sub_72336( sub_73676(), 1.00000000 );
            }
        }
        break;
        case 14:
        sub_73738( l_U129 );
        break;
        case 15:
        sub_78916( l_U129 );
        break;
        case 16:
        if (NOT ((IS_PED_DEAD( l_U2040 )) || (IS_BULLET_CAMERA_RUNNING( 0 ))))
        {
            if ((sub_47132( g_U4007, 54 )) == 3)
            {
                if ((NOT (IS_PED_DEAD( l_U2040 ))) AND (NOT (IS_PED_DEAD( g_U4007 ))))
                {
                    SET_PED_SHOOTS_AT_COORD( g_U4007, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U2040, 65488, 0, 0, 0.00000000 ) );
                }
                sub_83424( ref g_U4007, 54 );
                sub_44506( ref l_U2555, 1000 );
            }
            if (sub_3104( ref l_U2555 ))
            {
                sub_83501( l_U2040 );
            }
        }
        else
        {
            sub_66128( 0, 0, 0, -859915232, -859915232, 0 );
        }
        if (IS_PED_DEAD( l_U2040 ))
        {
            if (NOT (IS_PED_DEAD( g_U4007 )))
            {
                CLEAR_PED_TASKS_IMMEDIATELY( g_U4007 );
                SET_PED_INVINCIBLE( g_U4007, 0 );
                SET_PED_ACCURACY( g_U4007, -729479261 );
            }
            l_U128 = 17;
            sub_812( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 17:
        if (l_U129)
        {
            AUDIO_MUSIC_SUSPEND( 7000 );
            sub_83742();
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            g_U3879 = 1;
        }
        if ((g_U855 == 7) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U128 = 0;
            sub_812( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U128 != iVar2)
    {
        l_U129 = 1;
    }
    else
    {
        l_U129 = 0;
    }
    return;
}

void sub_14289()
{
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        if (((sub_14345( sub_1253(), g_U4007, 1 )) < l_U449) AND ((PED_GET_ACTION_INTENTION_STATUS( g_U4007, 51 )) == 3))
        {
            if ((NOT (IS_PED_DEAD( sub_1253() ))) AND ((NOT (IS_PED_DEAD( g_U4007 ))) AND (NOT l_U448)))
            {
                l_U448 = 1;
                TASK_LOOK_AT_PED( g_U4007, sub_1253(), -1, 0 );
            }
        }
        else if (l_U448)
        {
            if (NOT (IS_PED_DEAD( g_U4007 )))
            {
                l_U448 = 0;
                TASK_CLEAR_LOOK_AT( g_U4007 );
            }
        }
    }
    return;
}

void sub_14345(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_14830()
{
    sub_812( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U129 = 1;
    sub_14900( "SSTDAUD" );
    l_U1196 = 0;
    sub_2389( ref l_U1873, l_U1883, 1, 0 );
    l_U1811 = 0;
    l_U2134 = 0;
    l_U2135 = 0;
    l_U2136 = 0;
    l_U2137 = 0;
    l_U2138 = 0;
    sub_2389( ref l_U2139, 3000, 1, 0 );
    l_U2187 = 0;
    l_U2188 = 0;
    sub_2389( ref l_U2061, l_U2088, 1, 0 );
    sub_2389( ref l_U2070, l_U2089, 1, 0 );
    sub_2389( ref l_U2079, l_U2090, 1, 0 );
    l_U1955 = 0;
    l_U1956 = 0;
    l_U180 = 0;
    l_U181 = 0;
    sub_2389( ref l_U183, 1000, 1, 0 );
    l_U1251 = 0;
    l_U1252 = 0;
    l_U1253 = 0;
    l_U2193 = 0;
    l_U1497 = 0;
    l_U1498 = 0;
    l_U132 = 0;
    l_U2294 = 0;
    l_U2295 = 0;
    l_U2293 = 0;
    l_U1543 = 0;
    l_U2325 = 0;
    l_U2326 = 0;
    l_U2336 = 0;
    l_U2186 = 0;
    l_U2337 = 0;
    l_U2348 = 0;
    l_U2349 = 0;
    l_U2350 = 0;
    l_U2351 = 0;
    l_U2352 = 0;
    l_U2353 = 0;
    l_U2373 = 0;
    sub_812( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_14900(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_14920();
    return;
}

void sub_14920()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_15370()
{
    sub_812( "GA", "P_SET_STATIC_DATA start", 0 );
    sub_15454( ref l_U1915[0], 91.79931000, 2.07550300, 9.65311000, 0.00000000, 2069722096, 7, 3, 2, 0, 0 );
    sub_15454( ref l_U1915[1], 91.79931000, 2.07550300, 9.65311000, 0.00000000, 957054562, 26, 6, 0, 0, 0 );
    sub_15454( ref l_U1915[2], 91.79931000, 2.07550300, 9.65311000, 0.00000000, 1530933710, 26, 6, 0, 0, 0 );
    sub_15454( ref l_U450, l_U463, 0.00000000, -587133859, 26, 6, 0, 0, 0 );
    sub_15753( ref l_U227, "TRIGGER_ENTERED_FOODCOURT", 80.41000000, 48.12000000, 9.35000000, 1.08000000, 4.91000000, 2.53000000, 0.00000000, 0.00000000, 40.00000000, 1 );
    sub_15753( ref l_U290, "TRIGGER_RAMP_ENTRANCE", 67.55000000, 74.45000000, 9.55000000, 2.70000000, 2.24000000, 2.00000000, 0.00000000, 0.00000000, -19.00000000, 1 );
    sub_15753( ref l_U269, "MAX_HALFWAY_UP_RAMP", 64.89000000, 79.97000000, 8.41000000, 3.06000000, 4.61000000, 6.09000000, 0.00000000, 0.00000000, -15.22000000, 1 );
    sub_15753( ref l_U311, "MAX_IN_RAMP", 68.65000000, 77.54000000, 9.43000000, 2.62000000, 4.00000000, 6.00000000, 0.00000000, 0.00000000, -19.11000000, 1 );
    sub_15753( ref l_U332, "TRIGGER_FC_WAVE2", 81.88000000, 62.86000000, 8.76000000, 3.75000000, 14.14000000, 4.85000000, 0.00000000, 0.00000000, -35.71000000, 1 );
    sub_15753( ref l_U248, "TRIGGER_ACTIVATE_FOODCOURT_VCPF", 82.31000000, 49.62000000, 9.35000000, 1.08000000, 4.91000000, 2.53000000, 0.00000000, 0.00000000, 40.00000000, 1 );
    sub_15753( ref l_U353, "TRIGGER_PASSOS_INTO_FC", 75.68000000, 34.41000000, 0.92000000, 2.14000000, 24.86000000, 18.62000000, 0.00000000, 0.00000000, -70.00000000, 1 );
    sub_15753( ref l_U374, "TRIGGER_DEACTIVATE", 89.94000000, 15.30000000, 9.56000000, 3.48000000, 18.36000000, 2.06000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15753( ref l_U395, "TRIGGER_REACTIVATE", 86.04000000, 15.30000000, 9.56000000, 3.48000000, 18.36000000, 2.06000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    l_U395._fU64 = 1;
    sub_15753( ref l_U416, "tbPlayMono_MXDRPLB", 49.36000000, 81.62000000, 11.56000000, 3.06000000, 4.61000000, 6.09000000, 0.00000000, 0.00000000, -2.43999000, 1 );
    sub_15753( ref l_U609[0], "Amb Speech PETS A", 92.13000000, -21.38000000, 8.99000000, 7.32000000, 5.05000000, 4.19000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15753( ref l_U609[1], "Amb Speech PETS B", 89.08000000, -17.41000000, 8.99000000, 1.59000000, 4.09000000, 4.19000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15753( ref l_U609[2], "Amb Speech PETS C", 94.60000000, -14.95000000, 8.99000000, 2.24000000, 4.09000000, 4.19000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15753( ref l_U609[3], "Amb Speech PETS D", 85.17000000, -4.20000000, 8.99000000, 4.60000000, 12.84000000, 4.19000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15753( ref l_U609[4], "Amb Speech PETS E", 88.12000000, -0.24000000, 8.99000000, 1.40000000, 2.97000000, 4.19000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15753( ref l_U609[5], "Amb Speech PETS G", 95.00000000, 3.68000000, 8.99000000, 1.89000000, 4.49000000, 4.19000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17027( ref l_U468, ref l_U609 );
    sub_15753( ref l_U736, "SPEECH BAR", 94.32000000, 25.12000000, 8.67000000, 4.91000000, 5.09000000, 4.85000000, 0.00000000, 0.00000000, 90.00000000, 1 );
    sub_15753( ref l_U2092, "TRIGGER_VIG35C_PASSOS_MOVE_LOUNGE", 38.57000000, 79.27000000, 12.63000000, 5.24000000, 5.53000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15753( ref l_U2113, "TRIGGER_VIG35D_PASSOS_MOVE_BOOTH", 41.09000000, 70.80000000, 12.55000000, 6.01000000, 5.52000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15753( ref l_U1553[0], "TRIGGER_IN_ENTRANCE_01", 82.90000000, 50.21000000, 9.35000000, 9.35000000, 3.71000000, 2.53000000, 0.00000000, 0.00000000, 40.00000000, 1 );
    sub_15753( ref l_U1553[1], "TRIGGER_IN_ENTRANCE_02", 88.36000000, 53.42000000, 9.35000000, 3.00000000, 6.62000000, 2.53000000, 0.00000000, 0.00000000, 39.33000000, 1 );
    sub_15753( ref l_U1553[2], "TRIGGER_IN_ENTRANCE_03", 93.33000000, 43.80000000, 9.35000000, 3.00000000, 22.97000000, 2.53000000, 0.00000000, 0.00000000, 24.55000000, 1 );
    sub_15753( ref l_U1553[3], "TRIGGER_IN_ENTRANCE_04", 101.37000000, 42.33000000, 9.35000000, 3.00000000, 17.16000000, 2.53000000, 0.00000000, 0.00000000, 19.76000000, 1 );
    sub_15753( ref l_U1660[0], "TRIG_FAR_RIGHT_RAILING01", 93.72000000, 57.25000000, 9.35000000, 3.00000000, 15.73000000, 7.00000000, 0.00000000, 0.00000000, 36.32000000, 1 );
    sub_15753( ref l_U1660[1], "TRIG_FAR_RIGHT_RAILING02", 83.47000000, 67.08000000, 9.35000000, 2.33000000, 14.23000000, 7.00000000, 0.00000000, 0.00000000, 53.75000000, 1 );
    sub_15753( ref l_U1638[0], "TRIG_NEAR_RIGHT_RAILING01", 71.38000000, 73.94000000, 9.35000000, 2.48000000, 12.94000000, 7.00000000, 0.00000000, 0.00000000, 67.56000000, 1 );
    sub_15753( ref l_U1725[0], "TRIG_FAR_LEFT_RAILING01", 81.28000000, 59.69000000, 9.35000000, 2.40000000, 11.63000000, 7.00000000, 0.00000000, 0.00000000, 49.50000000, 1 );
    sub_15753( ref l_U1703[0], "TRIG_NEAR_LEFT_RAILING01", 70.07000000, 66.38000000, 9.35000000, 2.40000000, 14.04000000, 7.00000000, 0.00000000, 0.00000000, 66.07000000, 1 );
    sub_15753( ref l_U1747[0], "TRIG_FRONT_RAILING01", 60.02000000, 73.60000000, 9.35000000, 8.72000000, 10.36000000, 7.00000000, 0.00000000, 0.00000000, -14.92000000, 1 );
    sub_15753( ref l_U1747[1], "TRIG_FRONT_RAILING02", 54.37000000, 74.31000000, 9.35000000, 5.72000000, 10.35000000, 7.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15753( ref l_U1790, "TRIGGER_ATTACK_PASSOS", 83.13000000, 67.08000000, 13.88000000, 2.33000000, 10.07000000, 2.53000000, 0.00000000, 0.00000000, 49.78000000, 1 );
    sub_18627( ref l_U1812, "TETHER_FOODCOURT_01", 85.06000000, 65.39000000, 13.88000000, 1.21000000, 5.02000000, 2.53000000, 0.00000000, 0.00000000, 49.78000000, 1 );
    sub_18627( ref l_U1813, "TETHER_FOODCOURT_02", 81.28000000, 68.29000000, 13.88000000, 1.21000000, 5.50000000, 2.53000000, 0.00000000, 0.00000000, 54.29000000, 1 );
    sub_18627( ref l_U1814, "TETHER_FOODCOURT_03", 74.04000000, 72.32000000, 13.88000000, 1.21000000, 11.54000000, 2.53000000, 0.00000000, 0.00000000, 63.51000000, 1 );
    sub_18627( ref l_U1815, "TETHER_FOODCOURT_04", 66.91000000, 75.36000000, 13.88000000, 1.21000000, 5.42000000, 2.53000000, 0.00000000, 0.00000000, 73.50000000, 1 );
    sub_18627( ref l_U1816, "TETHER_FOODCOURT_05", 63.86000000, 72.93000000, 13.88000000, 5.87000000, 1.34000000, 2.53000000, 0.00000000, 0.00000000, 73.50000000, 1 );
    sub_18627( ref l_U1817, "TETHER_FOODCOURT_06", 64.97000000, 69.15000000, 13.88000000, 1.21000000, 5.42000000, 2.53000000, 0.00000000, 0.00000000, 73.50000000, 1 );
    sub_18627( ref l_U1818, "TETHER_FOODCOURT_07", 70.47000000, 67.00000000, 13.88000000, 1.21000000, 7.02000000, 2.53000000, 0.00000000, 0.00000000, -115.96000000, 1 );
    sub_18627( ref l_U438, "TETHER_BOOTH", 37.23000000, 66.55000000, 11.32000000, 15.57000000, 13.02000000, 4.53000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_18627( ref l_U439, "TETHER_LEFT_SIDE_OF_THE_BOOTH", 42.74000000, 68.50000000, 12.27000000, 4.57000000, 8.67000000, 3.64000000, 0.00000000, 0.00000000, 20.00000000, 1 );
    sub_18627( ref l_U440, "TETHER_TOP_OF_THE_STAIRS", 49.37000000, 80.80000000, 12.27000000, 3.31000000, 4.66000000, 3.64000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_18627( ref l_U437, "TETHER_COVER", 31.77000000, 66.91000000, 12.00000000, 3.42000000, 3.49000000, 5.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_18627( ref l_U2194[0], "TETHER_LOWERFC_1", 63.95000000, 69.70000000, 9.37000000, 31.62000000, 14.99000000, 4.63000000, 0.00000000, 0.00000000, -13.73000000, 1 );
    sub_18627( ref l_U2194[1], "TETHER_LOWERFC_2", 76.02000000, 67.79000000, 9.37000000, 14.74000000, 10.94000000, 4.63000000, 0.00000000, 0.00000000, -43.00000000, 1 );
    sub_15753( ref l_U898[0], "FoodCourt_Mono_A", 56.70000000, 73.37000000, 9.00000000, 9.04000000, 8.79000000, 3.96000000, 0.00000000, 0.00000000, -6.35000000, 1 );
    sub_15753( ref l_U898[1], "FoodCourt_Mono_B", 64.66000000, 72.10000000, 9.00000000, 8.69000000, 7.15000000, 3.96000000, 0.00000000, 0.00000000, -19.73000000, 1 );
    sub_15753( ref l_U898[2], "FoodCourt_Mono_C", 72.15000000, 69.26000000, 9.00000000, 8.78000000, 8.13000000, 3.96000000, 0.00000000, 0.00000000, -30.62000000, 1 );
    sub_15753( ref l_U898[3], "FoodCourt_Mono_D", 79.20000000, 64.96000000, 9.00000000, 8.78000000, 8.13000000, 3.96000000, 0.00000000, 0.00000000, -40.28000000, 1 );
    sub_15753( ref l_U898[4], "FoodCourt_Mono_E", 85.89000000, 59.79000000, 9.00000000, 8.78000000, 8.13000000, 3.96000000, 0.00000000, 0.00000000, -44.56000000, 1 );
    sub_17027( ref l_U757, ref l_U898 );
    sub_20074( ref l_U2207, 2, 81.12507000, 69.34450000, 10.91859000, 81.12507000, 69.34450000, 10.91859000, 81.12507000, 69.34450000, 10.91859000, 3.00000000, 6.00000000, 1, 0 );
    sub_20734( ref l_U2207, 0 );
    sub_20784( ref l_U2207, 30, "POI_STADFCBLOOD" );
    sub_20945( ref l_U2207, 0 );
    sub_21005( ref l_U2207, 1 );
    sub_812( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_15454(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_15753(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_17027(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
        sub_812( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

void sub_18627(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_20074(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_20089( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_20457( iParam0 );
    return;
}

void sub_20089(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_20457(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_20536( iParam0 );
    return;
}

void sub_20536(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_8138( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_8138( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_8138( iParam0, 1 );
            }
            else
            {
                sub_8138( iParam0, 0 );
            };;;
        }
        else
        {
            sub_8138( iParam0, 0 );
        }
    }
    else
    {
        sub_8138( iParam0, 0 );
    }
    return;
}

void sub_20734(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_20784(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_20815( iParam0 );
    return;
}

void sub_20815(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_20945(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_8489( iParam0 );
    return;
}

void sub_21005(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_21211()
{
    sub_812( "GA", "P_REQUEST_CON_PERSISTENT_ASSETS start", 0 );
    sub_21280( ref l_U113, ref g_U1069 );
    sub_22688( ref l_U124, ref g_U1214 );
    sub_23693( "DAM_KO", ref g_U1354 );
    sub_23693( "DAM_DEAD", ref g_U1354 );
    sub_23693( "LEVEL_S_STAD_CP_03", ref g_U1354 );
    sub_23693( "LEVEL_S_STAD_PU", ref g_U1354 );
    sub_23693( "PAS_INT", ref g_U1354 );
    sub_24766( 0, 0 );
    sub_812( "GA", "P_REQUEST_CON_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_21280(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_21315( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_21315(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_21350( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_21481( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_21350(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_21481( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_21481( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_21481( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_22129( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_21481( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_21481( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_21481(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_21501( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_21501(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_22129(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_22688(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_22723( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_22723(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_22744( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_22876( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_22744(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_22876( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_22876( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_22876( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_22129( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_22876( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_22876( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22876(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_21501( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_23693(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_23714( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_23851( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_23714(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_23851( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_23851( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_23851( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_22129( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_23851( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_23851( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_23851(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_21501( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_24766(boolean bParam0, boolean bParam1)
{
    if (NOT bParam0)
    {
        if (NOT bParam1)
        {
            sub_23693( "PLGE_RIFLE_CROUCH", ref g_U1354 );
            sub_23693( "PLGE_PSTL_CROUCH", ref g_U1354 );
            sub_23693( "PLGE_RIFLE_KNEE", ref g_U1354 );
            sub_23693( "PLGE_PSTL_KNEE", ref g_U1354 );
            sub_23693( "PLGE_PSTL_CORE", ref g_U1354 );
            sub_23693( "PLGE_PSTL_COVER", ref g_U1354 );
        }
        sub_23693( "PLGE_RIFLE_CORE", ref g_U1354 );
        sub_23693( "PLGE_RIFLE_CORE_RELOAD", ref g_U1354 );
        sub_23693( "PLGE_PSTL_CORE_RELOAD", ref g_U1354 );
        sub_23693( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
        sub_23693( "PLGE_PSTL_HANDSIG", ref g_U1354 );
        sub_23693( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
        sub_23693( "PLGE_PSTL_ACTIONS", ref g_U1354 );
        sub_23693( "PLGE_RIFLE_COVER", ref g_U1354 );
        sub_23693( "PLGE_RIFLE_REACT", ref g_U1354 );
        sub_23693( "PLGE_PSTL_REACT", ref g_U1354 );
        sub_23693( "PLGE_RIFLE_COVER_EXIT", ref g_U1354 );
        sub_23693( "PLGE_PSTL_COVER_EXIT", ref g_U1354 );
        sub_23693( "PLGE_PSTL_FULLBODY", ref g_U1354 );
    }
    else
    {
        sub_25372( "PLGE_RIFLE_CROUCH", 0, 1 );
        sub_25372( "PLGE_PSTL_CROUCH", 0, 1 );
        sub_25372( "PLGE_RIFLE_CORE", 0, 1 );
        sub_25372( "PLGE_PSTL_CORE", 0, 1 );
        sub_25372( "PLGE_RIFLE_CORE_RELOAD", 0, 1 );
        sub_25372( "PLGE_PSTL_CORE_RELOAD", 0, 1 );
        sub_25372( "PLGE_RIFLE_HANDSIG", 0, 1 );
        sub_25372( "PLGE_PSTL_HANDSIG", 0, 1 );
        sub_25372( "PLGE_RIFLE_ACTIONS", 0, 1 );
        sub_25372( "PLGE_PSTL_ACTIONS", 0, 1 );
        sub_25372( "PLGE_RIFLE_KNEE", 0, 1 );
        sub_25372( "PLGE_PSTL_KNEE", 0, 1 );
        sub_25372( "PLGE_RIFLE_COVER", 0, 1 );
        sub_25372( "PLGE_PSTL_COVER", 0, 1 );
        sub_25372( "PLGE_RIFLE_REACT", 0, 1 );
        sub_25372( "PLGE_PSTL_REACT", 0, 1 );
        sub_25372( "PLGE_RIFLE_COVER_EXIT", 0, 1 );
        sub_25372( "PLGE_PSTL_COVER_EXIT", 0, 1 );
        sub_25372( "PLGE_PSTL_FULLBODY", 0, 1 );
    }
    return;
}

void sub_25372(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_25996()
{
    sub_812( "GA", "P_REQUEST_CON_NONPERSISTENT_ASSETS start", 0 );
    sub_26069( -263036009, ref g_U1263 );
    sub_26069( -1310389432, ref g_U1263 );
    sub_26069( 727272178, ref g_U1263 );
    sub_26069( -647680815, ref g_U1263 );
    sub_26069( -813779471, ref g_U1263 );
    sub_26069( -1414847258, ref g_U1263 );
    sub_26069( 1812693303, ref g_U1263 );
    sub_26069( 1154908660, ref g_U1263 );
    sub_28125( "MID_04B_STAD_CON_RUN_BLENDOUT", ref g_U2034 );
    if ((l_U130) AND (g_U854 < 6))
    {
        sub_29215( "MID_04B_STADIUM", 0 );
    }
    sub_812( "GA", "P_REQUEST_CON_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_26069(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_26104( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_26256( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_26104(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_26256( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_26256( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_26256( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_26256( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_22129( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_22129( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_26256( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_26256( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_26256(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_21501( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_28125(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_28146( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_28287( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_28146(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                sub_28287( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                sub_28287( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        sub_28287( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                        sub_22129( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    sub_28287( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                sub_28287( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                sub_28287( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_28287(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_21501( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_29215(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_29596(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_29716(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_29837(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_29964(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_30155(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_30548(unknown uParam0)
{
    sub_812( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_10038( uParam0, sub_1253() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_31084()
{
    char[64] cVar2;

    switch (l_U1955)
    {
        case 1:
        sub_812( "AT", "e_ST_SpawnCS = ENTITY_STATE_INIT", 0 );
        l_U1956 = 1;
        l_U1955 = 2;
        sub_812( "AT", "e_ST_SpawnCS = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        StrCopy( ref cVar2, "Creating piStores_Cutscene_CS[", 64 );
        ConcatString(ref cVar2, l_U1956, 64);
        ConcatString(ref cVar2, "]", 64);
        if (NOT (DOES_PED_EXIST( g_U4187[l_U1956] )))
        {
            g_U4187[l_U1956] = sub_31338( ref l_U1915[l_U1956] );
            if (NOT (IS_PED_DEAD( g_U4187[l_U1956] )))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4187[l_U1956], 1 );
                SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4187[l_U1956], 1 );
                SET_PED_AIM_LOCKONABLE( g_U4187[l_U1956], 0 );
                SET_PED_CAN_BE_TARGETTED( g_U4187[l_U1956], 0 );
                SET_PED_AS_ONE_SHOT_KILL( g_U4187[l_U1956], 1 );
                STOP_PED_SPEAKING( g_U4187[l_U1956], 1 );
                SET_PED_INVINCIBLE( g_U4187[l_U1956], 1 );
                FREEZE_PED_POSITION( g_U4187[l_U1956], 1 );
                if (l_U1956 != 1)
                {
                    SET_ROOM_FOR_PED_BY_NAME( g_U4187[l_U1956], ref g_U2484 );
                }
            }
        }
        l_U1956++;
        if (l_U1956 >= g_U4187)
        {
            l_U1955 = 3;
            sub_812( "AT", "e_ST_SpawnCS = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_32506( ref g_U4187, "piStores_Cutscene_CS" );
        if ((NOT (IS_PED_DEAD( g_U4187[2] ))) AND (NOT (IS_PED_DEAD( g_U4187[1] ))))
        {
            sub_32657( g_U4187[1], l_U1957, l_U1960 );
            sub_32657( g_U4187[2], l_U1961, l_U1964 );
            sub_32760( g_U4187[1], 1154908660, "Sniped" );
            sub_32760( g_U4187[2], 1154908660, "Executed" );
            ISEQ_START( 1154908660 );
        }
        l_U1955 = 4;
        sub_812( "AT", "e_ST_SpawnCS = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_31338(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_31508( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_31977( iParam0->_fU40 );
    sub_32057( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_31508(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_11907( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_31977(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_32057(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_32506(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_32657(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_32760(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

int sub_32933()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;

    if (DOES_PED_EXIST( l_U467 ))
    {
        sub_812( "GA", "Dead washroom CS exists.", 0 );
        return 1;
        break;
    }
    sub_812( "GA", "Creating Dead Washroom CS", 0 );
    sub_15454( ref uVar2, 115.03250000, -3.42266600, 9.60178200, 0, -1072749639, 7, 3, 2, 0, 0 );
    l_U467 = sub_33088( ref g_U4411, ref uVar2, 1, 0, 0 );
    sub_33310( l_U467, 0 );
    return 0;
}

void sub_33088(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
    sub_7557( (uParam0^) );
    (uParam0^) = sub_31338( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
            sub_2271( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
    sub_33216( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

void sub_33216(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

void sub_33310(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
        sub_11907( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

int sub_34246()
{
    if (DOES_PED_EXIST( g_U4186 ))
    {
        sub_812( "GA", "Dead CP exists.", 0 );
        return 1;
        break;
    }
    sub_812( "GA", "Creating Dead CP.", 0 );
    g_U4186 = sub_31338( ref l_U450 );
    if (NOT (IS_PED_DEAD( g_U4186 )))
    {
        sub_32657( g_U4186, l_U463, l_U466 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4186, 1 );
        SET_ROOM_FOR_PED_BY_NAME( g_U4186, ref g_U2492 );
        FREEZE_PED_POSITION( g_U4186, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4186, 1 );
        SET_PED_AS_ONE_SHOT_KILL( g_U4186, 1 );
        STOP_PED_SPEAKING( g_U4186, 1 );
        SET_PED_INVINCIBLE( g_U4186, 1 );
        SET_PED_CAN_BE_TARGETTED( g_U4186, 0 );
        SET_FREEZE_PED_AIM( g_U4186, 1 );
        SET_PED_AIM_LOCKONABLE( g_U4186, 0 );
        SET_PED_NAME_DEBUG( g_U4186, "pi_DeadCPRestaurant" );
    }
    sub_32760( g_U4186, 1812693303, "DeadVCPF" );
    ISEQ_START( 1812693303 );
    return 0;
}

int sub_34614()
{
    if (DOES_PED_EXIST( g_U4007 ))
    {
        return 1;
        break;
    }
    sub_34675( ref l_U210, l_U223, l_U226, g_U2376, 26, 6, 0, 0, 0 );
    g_U4007 = sub_33088( ref g_U4007, ref l_U210, 1, 0, 0 );
    sub_34809( ref g_U4007, "Pass_Stad_Hat" );
    if ((NOT (IS_PED_DEAD( g_U4007 ))) AND (DOES_PED_EXIST( g_U4007 )))
    {
        SET_PED_HEALTH( g_U4007, 400, 0 );
        SET_PED_GORE_AS_ALLY( g_U4007 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4007, 1 );
        SET_PED_CONSUMING_AMMO( g_U4007, 0 );
    }
    sub_34951( ref g_U4007 );
    sub_2271( "Giving Edison a gun" );
    sub_12236( g_U4007, 68019059, 25000, 0, 0 );
    sub_35105( ref g_U4007, 2, 3 );
    sub_35159( g_U4007, 1 );
    SET_PED_CAN_INITIATE_BULLET_CAM( g_U4007, 1 );
    SET_PED_VALIDATE_BULLET_CAM_HIT( g_U4007, 0 );
    SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U4007, 1 );
    SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4007, 1 );
    SET_AI_SHOULD_ALWAYS_MISS_PED( g_U4007, 1 );
    SET_PED_CAN_PUSH_PLAYER( g_U4007, 1 );
    SET_PED_RESIST_TO_OBJECT_COLLISION( g_U4007, 1 );
    "[doubled result, dropped if not asigned]";
    "[doubled result, dropped if not asigned]";
    SET_CAN_AI_KICK_THROUGH_CORPSES( g_U4007, 1 );
    "[doubled result, dropped if not asigned]";
    "[doubled result, dropped if not asigned]";
    SET_PED_AS_ONE_SHOT_KILL( g_U4007, 1 );
    SET_PED_NAME_DEBUG( g_U4007, "STORES_EDISON!" );
    SET_PED_HAS_SPECIAL_GUN_SOUND( g_U4007, 1 );
    return 0;
}

void sub_34675(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_34809(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        sub_11907( uParam1 );
        SET_PERSISTENT_PED_VARIATION( (uParam0^), uParam1 );
    }
    return;
}

void sub_34951(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

void sub_35105(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_RELATIONSHIP( (uParam0^), uParam1, uParam2 );
    }
    return;
}

int sub_35159(unknown uParam0, boolean bParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (bParam1)
        {
            if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 )))
            {
                sub_2271( "MAL_SetCanTriggerBulletCam: Ped is not able to trigger BC, adding" );
                SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
                return 1;
            }
        }
        else if (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 ))
        {
            sub_2271( "MAL_SetCanTriggerBulletCam turning off BC" );
            SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
            return 1;
        }
    }
    return 0;
}

void sub_35577()
{
    sub_812( "GA", "P_CREATE_STORES_SNIPER start", 0 );
    sub_2271( "Creating stores sniper" );
    sub_35751( ref l_U1965, 41.08343000, 61.76176000, 11.64524000, 76.52078000, 49.85817000, 11.80000000, 76.52078000, 49.65817000, 11.60000000, 86.96375000, 22.01132000, 9.60026400, g_U2383, 40.49274000, 61.63966000, 11.64522000, 214.59710000, 4000 );
    sub_34809( ref l_U1965._fU0, "M3_CP_S1B_Avg" );
    SET_ROOM_FOR_PED_BY_NAME( l_U1965._fU0, "Room_Pressbooth" );
    l_U1965._fU164 = 0;
    l_U1965._fU204 = 1;
    l_U1965._fU216 = 1;
    SET_PED_PERFECT_ACCURACY_OVERRIDE( l_U1965._fU0, 0 );
    sub_1863( ref l_U1965 );
    sub_812( "GA", "P_CREATE_STORES_SNIPER end", 0 );
    return;
}

void sub_35751(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU72 = {uParam4};
    iParam0->_fU84 = {uParam7};
    iParam0->_fU96 = {uParam10};
    iParam0->_fU68 = uParam17;
    iParam0->_fU160 = uParam13;
    iParam0->_fU108 = {uParam14};
    iParam0->_fU164 = 0;
    iParam0->_fU168 = 0;
    iParam0->_fU172 = 0;
    iParam0->_fU176 = 0;
    iParam0->_fU180 = 0;
    iParam0->_fU184 = 0;
    iParam0->_fU192 = uParam18;
    iParam0->_fU156 = 1500;
    iParam0->_fU196 = 3;
    iParam0->_fU200 = 0;
    iParam0->_fU204 = 0;
    iParam0->_fU208 = -256437761;
    iParam0->_fU212 = 0;
    iParam0->_fU216 = 0;
    sub_34675( iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU160, 7, 3, 2, 0, 0 );
    iParam0->_fU0 = sub_33088( iParam0 + 0, iParam0 + 4, 1, 1, 0 );
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( iParam0->_fU0, 1 );
        SET_PED_INVINCIBLE( iParam0->_fU0, 1 );
        SET_PED_GORE( iParam0->_fU0, 0 );
        FREEZE_PED_POSITION( iParam0->_fU0, 1 );
        sub_36106( iParam0->_fU0, iParam0->_fU56, iParam0->_fU68 );
        SET_PED_ALERTNESS( iParam0->_fU0, 3 );
        SET_PED_ACCURACY( iParam0->_fU0, 31186664 );
        SET_PED_CAN_BE_TARGETTED( iParam0->_fU0, 0 );
        SET_PED_AI_TEMPLATE( iParam0->_fU0, "AIT_EXPERT" );
        SET_PED_PERFECT_ACCURACY_OVERRIDE( iParam0->_fU0, 1 );
        SET_PED_CONSUMING_AMMO( iParam0->_fU0, 0 );
    }
    iParam0->_fU188 = sub_36272( iParam0->_fU0, -2075384407, 25000, 0, 0 );
    ENABLE_WEAPON_ATTACHMENT( iParam0->_fU188, 13, 1 );
    TOGGLE_WEAPON_ATTACHMENT( iParam0->_fU188, 13, 1 );
    SET_LASER_SIGHT_ATTACHMENT( iParam0->_fU188, -12373631 );
    sub_36600( "S_STAD_SNIPBEH", "LEVEL_S_STAD_PU", "/LEVEL/S_STAD/s_stad_snipbeh.act", "/Global/SNIPER_BEHAVIOR", 1 );
    sub_25372( "LEVEL_S_STAD_PU", 0, 1 );
    I_SEQUENCE_REGISTER_ENTITY( "S_STAD_SNIPBEH", "stad_sniper", iParam0->_fU0, 0 );
    I_SEQUENCE_START( "S_STAD_SNIPBEH" );
    while (NOT (I_SEQUENCE_QUERY_ENTITY_STATE( "S_STAD_SNIPBEH", "stad_sniper", 3 )))
    {
        WAIT( 0 );
    }
    sub_36106( iParam0->_fU0, iParam0->_fU56, iParam0->_fU68 );
    PED_ACTION_TREE_PLAY_NODE( iParam0->_fU0, "/Global/SNIPER_BEHAVIOR/SNIPER3SET_SEQ/STATES/DUCK_TO_PEEK" );
    sub_2781( iParam0 + 0 );
    return;
}

void sub_36106(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_36272(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                sub_2271( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_36600(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    if ((I_SEQUENCE_IS_LOADED( uParam0 )) == 0)
    {
        I_SEQUENCE_SETUP( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            while ((I_SEQUENCE_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_37117()
{
    int I;
    int iVar3;
    vector[2] vVar4;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    sub_812( "SP", "P_CREATE_STORE_PLACEMENTS", "###" );
    sub_7481( l_U441[0] );
    l_U441[0] = sub_37227( -4072149, 36.04000000, 77.72000000, 14.48800000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U441[0], ref g_U2564 );
    array(ref vVar4, 2);
    vVar4[0] = {90.50000000, 61.95000000, 11.09500000};
    vVar4[1] = {90.50000000, 61.95000000, 10.81500000};
    if (IS_ARCADE_MODE_ACTIVE())
    {
        iVar3 = 2;
    }
    else
    {
        iVar3 = 1;
    }
    for ( I = 0; I <= (iVar3 - 1); I++ )
    {
        sub_7481( l_U445[I] );
        l_U445[I] = sub_37227( -4072149, vVar4[I], 0, 0, 0, 1, 0, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U445[I], ref g_U2500 );
    }
    sub_37511();
    return;
}

void sub_37227(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_37511()
{
    sub_812( "CO", "Add_Placement_CL_S_STA_GG_M8_01", 0 );
    sub_37631( ref g_U739, g_U847, 945952788, -942653930, 88.35000000, -16.91000000, 10.65000000, 1.50000000, 0.00000000, 1.50000000, "Int_store_00" );
    sub_37760( ref g_U739 );
    return;
}

void sub_37631(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_812( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_37760(int iParam0)
{
    sub_812( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_37821( iParam0->_fU12 )) == 1)
        {
            sub_812( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_812( "CO", "has never been collected.", 0 );
        }
        if ((sub_37821( iParam0->_fU12 )) == 0)
        {
            sub_7481( iParam0->_fU0 );
            iParam0->_fU0 = sub_37227( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_812( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_812( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_37821(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_38233()
{
    sub_38247( ref g_U3941 );
    g_U3941[0] = sub_38337( -1652775333, -4.14443000, 10.10766000, 0.14177000, 0, 0, 2.56000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[0] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[0], 1 );
    }
    g_U3941[1] = sub_38337( 1816766229, 10.25816000, 2.27307000, 0.14177000, 0, 0, 1.88000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[1] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[1], 1 );
    }
    g_U3941[2] = sub_38337( 1873472982, 13.91821000, 23.57691000, 0.14177000, 0, 0, 2.23000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[2] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[2], 1 );
    }
    g_U3941[3] = sub_38337( -1993976541, 11.90281000, 13.09956000, 0.14177000, 0, 0, 2.95000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[3] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[3], 1 );
    }
    g_U3941[4] = sub_38337( -1993976541, 10.14508000, 8.20610000, 0.14177000, 0, 0, 90.68000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[4] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[4], 1 );
    }
    g_U3941[5] = sub_38337( -2096019114, 3.94087000, 16.99167000, 0.14177000, 0, 0, -1.16000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[5] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[5], 1 );
    }
    return;
}

void sub_38247(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_8049( (uParam0^)[I] );
    }
    return;
}

void sub_38337(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_31508( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_39012()
{
    sub_11907( "[SP]### P_CREATE_STADIUM_OBJECTS ###" );
    if (DOES_OBJECT_EXIST( g_U3704 ))
    {
        sub_8049( g_U3704 );
    }
    g_U3704 = sub_38337( g_U2390, -10.46000000, 5.99000000, 0.70000000, 0.00000000, 0.00000000, 18.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U3704 ))
    {
        FREEZE_OBJECT_POSITION( g_U3704, 1 );
    }
    return;
}

void sub_39185(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_39197( iParam0 )) == 0)
    {
        sub_39263( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_39197(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_39263(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_39407(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_39197( iParam0 )) == 0)
    {
        sub_39263( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

int sub_39743()
{
    sub_812( "AT", "F_MID04B_PRESETUP", 0 );
    sub_35577();
    return 1;
}

void sub_39798()
{
    sub_812( "AT", "P_MID04B_REGISTRATION", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_6", "", 0, 12000, -1, -1082130432, 0 );
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        sub_812( "GA", "Registering Passos script ped with midscene MID_04B_STADIUM", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U4007, "Pass_heli_pilo", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U4007, 0, 0 ), "W_PI_PT92_Aa_H^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U4007, 88.40800000, 22.80700000, 9.58500000, 90.35800000 );
        ISEQ_REGISTER_ENTITY( -1310389432, "Passos", g_U4007, 0 );
        CUTSCENE_REGISTER_ISEQ( -1310389432 );
    }
    if (NOT (IS_PED_DEAD( g_U4186 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U4186, "M_Crac_Sold_SR", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U4186, l_U463, l_U466 );
        sub_6035( 1812693303, 0 );
        sub_6243( 1812693303, ref g_U1263 );
    }
    if (NOT (IS_PED_DEAD( g_U4187[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U4187[1], "G_CS_K_Sold_SR", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U4187[1], l_U1957, l_U1960 );
        if (NOT (ISEQ_QUERY_STATE( 1154908660, 3 )))
        {
            ISEQ_REGISTER_ENTITY( 1154908660, "Sniped", g_U4187[1], 0 );
        }
    }
    if (NOT (IS_PED_DEAD( g_U4187[2] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U4187[2], "G_CS_K_Sold_SR^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U4187[2], l_U1961, l_U1964 );
        if (NOT (ISEQ_QUERY_STATE( 1154908660, 3 )))
        {
            ISEQ_REGISTER_ENTITY( 1154908660, "Executed", g_U4187[2], 0 );
        }
    }
    if (((NOT (ISEQ_QUERY_STATE( 1154908660, 3 ))) AND (NOT (IS_PED_DEAD( g_U4187[2] )))) || (NOT (IS_PED_DEAD( g_U4187[1] ))))
    {
        CUTSCENE_REGISTER_ISEQ( 1154908660 );
    }
    if (NOT (IS_PED_DEAD( sub_1253() )))
    {
        TASK_CLEAR_LOOK_AT( sub_1253() );
        CLEAR_PED_TASKS( sub_1253() );
        sub_40595( 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( sub_40884(), "W_PI_PT92_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_1253(), 88.35500000, 23.27600000, 9.61400000, 90.35800000 );
        ISEQ_REGISTER_ENTITY( -263036009, "Max", sub_1253(), 0 );
        CUTSCENE_REGISTER_ISEQ( -263036009 );
    }
    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U1965._fU188, "W_SR_M82_Aa_H", 0 );
    CUTSCENE_ENABLE_SKIP( 0 );
    sub_41266( 0 );
    sub_41359( 0 );
    return;
}

void sub_40595(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1253() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_1253(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_40675( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_40884();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1253(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_40675(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_40884()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1253() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_1253(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_40675( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1253(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_1253(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_1253(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_41266(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 3) AND (g_U1[I] >= 1))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_41359(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_41459()
{
    return;
}

int sub_41477()
{
    sub_34246();
    if (NOT (IS_PED_DEAD( g_U4186 )))
    {
        SET_PED_INVINCIBLE( g_U4186, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4186, 1 );
        FREEZE_PED_POSITION( g_U4186, 1 );
    }
    return 1;
}

void sub_41559()
{
    sub_812( "AT", "P_MID04B_PREPARE_BLENDOUT", 0 );
    DISPLAY_HUD( 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_03", "B_OUT_MID_04B_STADIUM_FWD_CAM", 0, g_U649, 0.00000000, 0, 0 );
    l_U1965._fU212 = 1;
    l_U1965._fU164 = 2;
    sub_2781( ref l_U1965._fU0 );
    sub_1863( ref l_U1965 );
    if (NOT (ISEQ_QUERY_STATE( -263036009, 3 )))
    {
        sub_32657( sub_1253(), 88.35500000, 23.27600000, 9.61400000, 90.35800000 );
        sub_32760( sub_1253(), -263036009, "Max" );
        ISEQ_START( -263036009 );
        sub_41848( "MID_04B_STAD_CON_RUN_BLENDOUT", ref g_U2034 );
        sub_7163( "MID_04B_STAD_CON_RUN_BLENDOUT", ref g_U2034 );
    }
    if (NOT (ISEQ_QUERY_ENTITY_STATE( -1310389432, "Passos", 3 )))
    {
        sub_36106( g_U4007, 88.40800000, 22.80700000, 9.58500000, 90.35800000 );
        sub_32760( g_U4007, -1310389432, "Passos" );
        ISEQ_START( -1310389432 );
    }
    sub_42215( ref g_U4187[1] );
    sub_42215( ref g_U4187[2] );
    if (NOT (ISEQ_QUERY_STATE( 1154908660, 3 )))
    {
        sub_32657( g_U4187[1], l_U1957, l_U1960 );
        sub_32657( g_U4187[2], l_U1961, l_U1964 );
        sub_32760( g_U4187[1], 1154908660, "Sniped" );
        sub_32760( g_U4187[2], 1154908660, "Executed" );
        ISEQ_START( 1154908660 );
    }
    if (l_U130)
    {
        sub_26069( 1812693303, ref g_U1263 );
        sub_7557( g_U4186 );
    }
    sub_43176( ref l_U2206, -1601625009, 40.00000000, 61.90000000, 14.20000000, 1, 0 );
    SET_OBJECT_COLLISION( l_U2206, 0 );
    AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_3_4_6", "", 0, 4000, -1, -1082130432, 0 );
    if ((WAS_CUTSCENE_SKIPPED()) || (g_U855 == 6))
    {
        if (NOT (IS_PED_DEAD( sub_1253() )))
        {
            if (NOT (IS_SCRIPTED_SPEECH_PLAYING( sub_1253() )))
            {
                sub_43398( ref l_U143 );
                sub_43480( 0, sub_1253(), "MAX", ref l_U143, 2, 0 );
                sub_43480( 1, sub_1253(), "MAX", ref l_U143, 2, 0 );
                sub_43719( "SSTD_STMA", ref l_U143, 8, 1 );
            }
        }
    }
    sub_44506( ref l_U192, 6110 );
    sub_44506( ref l_U201, 3000 );
    sub_44554();
    sub_45491( ref l_U1207 );
    return;
}

void sub_41848(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_6839( uParam0, uParam1 ))
    {
        iVar4 = sub_6938( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

void sub_42215(unknown uParam0)
{
    sub_2271( "MAL_RemoveAllGunsFromPed started" );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        sub_2271( "MAL_RemoveAllGunsFromPed WEAPONHAND_LEFT" );
        sub_42341( GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
        if ((GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
        }
        sub_42341( GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
        sub_2271( "MAL_RemoveAllGunsFromPed WEAPONHAND_RIGHT" );
        sub_42341( GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
        if ((GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
        }
        sub_42341( GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
        sub_2271( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_PISTOL_LEFT" );
        sub_42341( GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
        }
        sub_42341( GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
        sub_2271( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_PISTOL_RIGHT" );
        sub_42341( GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
        }
        sub_42341( GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
        sub_2271( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_RIFLE" );
        sub_42341( GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
        }
        sub_42341( GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
    }
    sub_2271( "MAL_RemoveAllGunsFromPed ended" );
    return;
}

void sub_42341(unknown uParam0)
{
    return;
}

void sub_43176(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    sub_43203( uParam0, uParam1, uParam2, g_U649, uParam5, uParam6 );
    return;
}

void sub_43203(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_8049( (uParam0^) );
    (uParam0^) = sub_38337( uParam1, uParam2, uParam5, 0, uParam9, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), uParam8 );
    return;
}

void sub_43398(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_43480(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_43719(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_43743( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_43743(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_43798( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_43798(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_43833( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_44327( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_43833(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_44327(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_44506(unknown uParam0, unknown uParam1)
{
    sub_2389( uParam0, uParam1, 1, 0 );
    sub_2527( uParam0 );
    return;
}

void sub_44554()
{
    char[32] cVar2;

    sub_2271( "P_Pre_FOODCOURT_VCPF" );
    sub_44648( ref l_U1013[0], 83.65000000, 66.50000000, 14.04000000, 55.00000000, g_U2500, -78608831, g_U2384, 4, 10, 1, 68019059, 0 );
    sub_44648( ref l_U1013[1], 84.00000000, 65.50000000, 14.04000000, 55.00000000, g_U2500, 1334062158, g_U2384, 7, 20, 1, 1478009203, 0 );
    sub_44648( ref l_U1013[2], 63.80000000, 71.37000000, 14.10000000, 300.00000000, g_U2500, -947527620, g_U2384, 6, 20, 1, 1478009203, 0 );
    sub_44648( ref l_U1013[3], 86.70400000, 54.39400000, 14.04000000, 40.00000000, g_U2500, 1938398204, g_U2384, 4, 10, 1, 68019059, 0 );
    sub_44648( ref l_U1207, 49.59829000, 81.86976000, 12.99799000, 288.56000000, g_U2508, -720005599, g_U2384, 4, 30, 0, 1478009203, 1 );
    sub_44648( ref l_U1270[0], 69.44875000, 77.58754000, 9.54103100, 160.18340000, g_U2508, -803235789, g_U2384, 5, 15, 1, 68019059, 0 );
    sub_44648( ref l_U1270[1], 69.90605000, 78.94419000, 9.55876800, 161.06410000, g_U2508, -578390938, g_U2384, 5, 15, 1, 434544317, 0 );
    sub_44648( ref l_U1270[2], 71.22384000, 78.47866000, 9.53894900, 90.00000000, g_U2508, -641386835, g_U2384, 5, 15, 1, 68019059, 0 );
    sub_44648( ref l_U1270[3], 72.49902000, 77.78740000, 9.54347800, 90.00000000, g_U2508, -1395748641, g_U2384, 5, 15, 1, 434544317, 0 );
    sub_44648( ref l_U1270[4], 71.92077000, 76.29224000, 9.53656300, 90.00000000, g_U2508, -1023592701, g_U2384, 5, 15, 1, 68019059, 0 );
    StrCopy( ref cVar2, "Room_Pressbooth", 32 );
    sub_44648( ref l_U1499, 43.06530000, 65.15382000, 12.56234000, 0, cVar2, -78608831, g_U2384, 1084227584, 1094713344, 1, 1478009203, 1 );
    return;
}

void sub_44648(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
    sub_44701( uParam0, uParam1, uParam4, uParam18, 68019059, 2, g_U3928, uParam15, uParam16, uParam14, uParam19, uParam17, uParam13, uParam5 );
    return;
}

void sub_44701(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU68 = uParam4;
    iParam0->_fU72 = uParam5;
    iParam0->_fU76 = uParam6;
    iParam0->_fU80 = uParam7;
    iParam0->_fU84 = {uParam8};
    iParam0->_fU116 = uParam16;
    iParam0->_fU120 = uParam17;
    iParam0->_fU124 = uParam18;
    iParam0->_fU128 = uParam19;
    iParam0->_fU132 = uParam20;
    iParam0->_fU136 = uParam21;
    iParam0->_fU140 = {uParam22};
    return;
}

void sub_45491(int iParam0)
{
    unknown uVar3;

    sub_2271( "MAL_EnemyStructCreate starting" );
    sub_45606( iParam0 + 0, iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU72, iParam0->_fU80, iParam0->_fU84, iParam0->_fU116, iParam0->_fU120, iParam0->_fU124, 1 );
    if (NOT (ARE_STRINGS_EQUAL( iParam0 + 140, ref g_U652 )))
    {
        sub_11907( iParam0 + 140 );
        sub_45986( iParam0 + 0, iParam0 + 140 );
    }
    if (iParam0->_fU128)
    {
        sub_2271( "MAL_EnemyStructCreate giving ped backup weapon" );
        sub_46115( iParam0->_fU0, iParam0->_fU76, 25000, 1, 0 );
    }
    if (iParam0->_fU132)
    {
        uVar3 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
        sub_46312( ref uVar3, 14, 1 );
    }
    if (iParam0->_fU136 != 0)
    {
        sub_46438( iParam0 + 0, iParam0->_fU136 );
    }
    return iParam0->_fU0;
}

void sub_45606(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
    sub_34675( uParam1, uParam2, uParam5, uParam18, 7, 3, 2, 0, 0 );
    (uParam0^) = sub_33088( uParam0, uParam1, 1, 1, uParam19 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
    }
    sub_36272( (uParam0^), uParam6, 25000, 0, 0 );
    sub_45707( uParam0, ref uParam8, uParam16, uParam17, 1 );
    sub_45884( uParam0, uParam7 );
    return (uParam0^);
}

void sub_45707(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
    sub_2271( "MAL_SetTemplateAndRanges" );
    sub_11907( uParam1 );
    sub_45758( fParam2 );
    sub_45758( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
        sub_33216( uParam0, 1, 0 );
    }
    return;
}

void sub_45758(unknown uParam0)
{
    return;
}

void sub_45884(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

void sub_45986(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), uParam1 );
    }
    return;
}

void sub_46115(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                sub_2271( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_46312(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

void sub_46438(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PERSISTENT_PED_VARIATION_ENUM( (uParam0^), uParam1 );
    }
    return;
}

int sub_46506()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    if (l_U153._fU52)
    {
        sub_812( "AT", "F_MID04B_HANDLE_BLENDOUT", 0 );
        if (NOT sub_46568())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        if (NOT (IS_PED_DEAD( g_U4187[1] )))
        {
            SET_PED_INVINCIBLE( g_U4187[1], 0 );
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4187[1], 0 );
            FREEZE_PED_POSITION( g_U4187[1], 0 );
            SET_PED_CORPSE( g_U4187[1], 0 );
        }
        if (NOT (IS_PED_DEAD( g_U4187[2] )))
        {
            SET_PED_INVINCIBLE( g_U4187[2], 0 );
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4187[2], 0 );
            FREEZE_PED_POSITION( g_U4187[2], 0 );
            SET_PED_CORPSE( g_U4187[2], 0 );
        }
        if (NOT (IS_PED_DEAD( l_U1965._fU0 )))
        {
            TASK_AIM_GUN_AT_PED( l_U1965._fU0, g_U4007, -1, 1 );
        }
    }
    if (sub_3104( ref l_U192 ))
    {
        uVar2 = {sub_47027( g_U4007 )};
        uVar2._fU8 += 2;
        SET_PED_SHOOTS_AT_COORD( l_U1965._fU0, uVar2 );
    }
    if (sub_47117( ref g_U4007, 45, 1 ))
    {
        if (NOT (IS_PED_DEAD( l_U1965._fU0 )))
        {
            TASK_AIM_GUN_AT_COORD( l_U1965._fU0, l_U1965._fU72, -1, 0 );
        }
    }
    if (NOT l_U181)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() > 7575)
        {
            l_U181 = 1;
            sub_36106( g_U4007, 81.86842000, 39.51786000, 9.59894100, 12.00000000 );
            sub_47445( g_U4007, "/Global/PASSOS_FOODCOURT/PASSOS_FOODCOURT_SEQ/SUPPRESS/ENTER_COVER" );
        }
    }
    if (NOT l_U183._fU20)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_STAD_CP_03", "B_OUT_MID_04B_STADIUM_FWD_CAM" )) - 750))
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 1000, 1 );
            SIMULATE_PLAYER_INPUT_GAIT( sub_1275(), 3, 1500, 0 );
            sub_2527( ref l_U183 );
        }
    }
    if (sub_47678( ref l_U1013, "FoodcourtVCPF", ref l_U1190, 1.00000000, 1, 1 ))
    {
        if (sub_47678( ref l_U1270, "FC_Reinforce", ref l_U1491, 1.00000000, 1, 1 ))
        {
            if (sub_3104( ref l_U183 ))
            {
                sub_45491( ref l_U1499 );
                sub_48666();
                sub_51147( ref l_U143, 0 );
                return 1;
            }
        }
    }
    return 0;
}

int sub_46568()
{
    if (l_U75)
    {
        sub_812( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U75 = 0;
        return 1;
        break;
    }
    sub_812( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

vector sub_47027(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return "[dynamic result, ret vals = 3]";
        break;
        GET_PED_COORDS( uParam0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        break;
    }
    return vector( 0, 0, 0);
}

int sub_47117(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if ((sub_47132( (uParam0^), uParam1 )) == 1)
    {
        if (bParam2)
        {
            sub_47198( uParam0, uParam1 );
        }
        return 1;
    }
    return 0;
}

int sub_47132(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

void sub_47198(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

void sub_47445(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

int sub_47678(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5)
{
    int I;

    sub_11907( uParam1 );
    if (NOT bParam4)
    {
        sub_47708( uParam2, uParam3, 1 );
        for ( I = 0; I < (uParam0^); I++ )
        {
            sub_45491( ref (uParam0^)[I] );
            sub_47925( (uParam0^)[I]._fU0, uParam2 );
        }
        sub_48203( uParam0, uParam1 );
    }
    else if ((uParam0^)[0]._fU172 == 0)
    {
        sub_47708( uParam2, uParam3, 1 );
    }
    if ((uParam0^)[0]._fU172 < (uParam0^))
    {
        sub_45491( ref (uParam0^)[(uParam0^)[0]._fU172] );
        sub_47925( (uParam0^)[(uParam0^)[0]._fU172]._fU0, uParam2 );
        (uParam0^)[0]._fU172++;
    }
    else
    {
        sub_48203( uParam0, uParam1 );
        return 1;
    }
    if (bParam5)
    {
        sub_48469( uParam0, 1, 0, -1 );
    }
    return 0;
}

void sub_47708(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_47925(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_11907( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_47708( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_47708( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_48203(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I]._fU0, ref cVar5 );
        }
    }
    return;
}

void sub_48469(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_48519( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_48519(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FREEZE_PROCESSING( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_48666()
{
    int I;

    sub_2271( "P_Post_FOODCOURT_VCPF" );
    sub_48715( ref l_U1013[2], 0 );
    sub_48780( ref l_U1013, 2, 6 );
    sub_48894( ref l_U1013, 1, 0, -1 );
    sub_49019( ref l_U1013, 0, -1 );
    sub_49200( ref l_U1013, 1 );
    sub_49328( ref l_U1013, "Flashlight_Stadium" );
    SET_BULLET_CAM_PREF( l_U1013[0]._fU0, "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    SET_BULLET_CAM_PREF( l_U1013[1]._fU0, "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    SET_BULLET_CAM_PREF( l_U1013[2]._fU0, "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    SET_BULLET_CAM_PREF( l_U1013[3]._fU0, "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    SET_PED_ALLOWED_TO_KNEEL_AND_FIRE( l_U1013[0]._fU0, 0 );
    SET_PED_ALLOWED_TO_KNEEL_AND_FIRE( l_U1013[1]._fU0, 0 );
    SET_PED_ALLOWED_TO_KNEEL_AND_FIRE( l_U1013[2]._fU0, 0 );
    SET_PED_ALLOWED_TO_KNEEL_AND_FIRE( l_U1013[3]._fU0, 0 );
    l_U1819[0] = l_U1812;
    l_U1819[1] = l_U1813;
    l_U1819[2] = l_U1814;
    l_U1819[3] = l_U1815;
    l_U1819[4] = l_U1816;
    l_U1819[5] = l_U1817;
    l_U1819[6] = l_U1818;
    l_U1827[0] = 5;
    l_U1827[1] = 4;
    l_U1830[0] = 6;
    l_U1830[1] = 4;
    l_U1833[0] = 3;
    l_U1833[1] = 4;
    l_U1836[0] = 1;
    l_U1836[1] = 2;
    l_U1839[0] = 0;
    l_U1839[1] = 1;
    l_U1842[0] = 0;
    l_U1842[1] = 1;
    for ( I = 0; I < 4; I++ )
    {
        l_U1845[I] = 0;
    }
    l_U1855[0] = {86.52000000, 51.38000000, 10.68000000};
    l_U1855[1] = {85.28000000, 54.56000000, 10.67000000};
    l_U1855[2] = {85.36000000, 54.71000000, 10.37000000};
    l_U1855[3] = {85.34000000, 54.51000000, 11.62000000};
    l_U1855[4] = {86.05000000, 54.19000000, 9.72000000};
    SET_PED_NAME_DEBUG( l_U1013[0]._fU0, "FoodcourtVCPF 0" );
    SET_PED_NAME_DEBUG( l_U1013[1]._fU0, "FoodcourtVCPF 1" );
    SET_PED_NAME_DEBUG( l_U1013[2]._fU0, "FoodcourtVCPF 2" );
    SET_PED_NAME_DEBUG( l_U1013[3]._fU0, "FoodcourtVCPF 3" );
    sub_48944( ref l_U1207, 1 );
    sub_49071( l_U1207 );
    sub_48519( ref l_U1207, 1 );
    sub_50338( ref l_U1207, 0 );
    sub_50456( ref l_U1207, l_U440, 1 );
    SET_PED_CAN_SLOW_DOWN_WHEN_TURNING( l_U1207._fU0, 0 );
    sub_50577( l_U1207, 1 );
    SET_PED_NAME_DEBUG( l_U1207._fU0, "Ramp" );
    sub_7757( ref l_U1270[2] );
    sub_7757( ref l_U1270[4] );
    sub_48894( ref l_U1270, 1, 0, -1 );
    sub_49019( ref l_U1270, 0, -1 );
    sub_50709( ref l_U1270, ref l_U2194, 1 );
    sub_48469( ref l_U1270, 1, 0, -1 );
    sub_49200( ref l_U1270, 1 );
    SET_PED_NAME_DEBUG( l_U1270[0]._fU0, "FC_Reinforce 0" );
    SET_PED_NAME_DEBUG( l_U1270[1]._fU0, "FC_Reinforce 1" );
    SET_PED_NAME_DEBUG( l_U1270[2]._fU0, "FC_Reinforce 2" );
    SET_PED_NAME_DEBUG( l_U1270[3]._fU0, "FC_Reinforce 3" );
    SET_PED_NAME_DEBUG( l_U1270[4]._fU0, "FC_Reinforce 4" );
    sub_48944( ref l_U1499, 1 );
    sub_48519( ref l_U1499, 1 );
    sub_50338( ref l_U1499, 0 );
    sub_50456( ref l_U1499, l_U438, 1 );
    SET_PED_FIRE_AT_COVER( l_U1499._fU0, 0 );
    SET_PED_NAME_DEBUG( l_U1499._fU0, "Schroedinger" );
    return;
}

void sub_48715(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        iParam0->_fU80 = uParam1;
        SET_PED_COMBAT_MOVEMENT( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_48780(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_48816( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

void sub_48816(int iParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_RELATIONSHIP( iParam0->_fU0, uParam1, uParam2 );
    }
    return;
}

void sub_48894(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_48944( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_48944(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        FREEZE_PED_POSITION( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_49019(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
        sub_49071( (uParam0^)[I] );
    }
    return;
}

void sub_49071(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43)
{
    sub_49099( uParam0, uParam0._fU56, uParam0._fU68 );
    return;
}

void sub_49099(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_COORDS( uParam0._fU0, uParam44, 1 );
        SET_PED_HEADING( uParam0._fU0, uParam47 );
    }
    return;
}

void sub_49200(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_49234( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_49234(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_CAN_INITIATE_BULLET_CAM( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_49328(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_49362( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_49362(int iParam0, unknown uParam1)
{
    if (iParam0->_fU132)
    {
        if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
        {
            SET_WEAPON_LIGHT_DATA_BY_NAME( GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 ), uParam1 );
        }
    }
    return;
}

void sub_50338(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_VISIBLE( iParam0->_fU0, uParam1 );
    }
    else
    {
        sub_2271( "MAL_ES_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

void sub_50456(int iParam0, unknown uParam1, unknown uParam2)
{
    sub_50474( ref uParam1, iParam0->_fU0, uParam2 );
    return;
}

void sub_50474(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_50577(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( uParam0._fU0, uParam44 );
    }
    return;
}

void sub_50709(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        sub_50748( uParam0, (uParam1^)[I], uParam2, 0, -1 );
    }
    return;
}

void sub_50748(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    int I;

    if (iParam4 == -1)
    {
        iParam4 = (uParam0^) - 1;
    }
    for ( I = uParam3; I <= iParam4; I++ )
    {
        sub_50456( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

void sub_51147(int iParam0, unknown uParam1)
{
    if (NOT (sub_51161( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

boolean sub_51161(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_51312(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_812( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_51437( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 51397, 51415, uParam8 );
}

void sub_51397()
{
    return;
}

int sub_51415()
{
    return 1;
}

void sub_51437(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_51738(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_812( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_812( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_812( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_812( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_812( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_812( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_29215( iParam0->_fU0, 0 );
            sub_812( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_52605( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_52605( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_812( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_53133( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_52605( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_53482( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_53482( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_52605(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1253() )))
        {
            SET_PLAYER_CONTROL( sub_1275(), 0, uParam2 );
            SET_PED_DUCKING( sub_1253(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1253() );
            }
            SET_PED_INVINCIBLE( sub_1253(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_53133(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_1253() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_1253(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1253(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1253(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1253(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1253(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_53482(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1253() )))
    {
        SET_PLAYER_CONTROL( sub_1275(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1253(), 0 );
        if (bParam0)
        {
            sub_53563();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_53563()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1253() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1253(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1253(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1253(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1253(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_53913(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_812( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_812( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_12890( iParam1 );
        sub_54172( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_54623( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_54623( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_54855( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_54623( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_54855( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_54855( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_54623( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_54855( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_54855( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_54855( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_54623( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_54855( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_54855( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_54855( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_54855( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_56413( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_812( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_54172(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_10254( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_812( "TEH", "Ending context", 0 );
        sub_812( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_54623(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_54855(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_56413(int iParam0)
{
    sub_11907( "CHECKPOINT DATA" );
    sub_56452( iParam0->_fU4 );
    sub_45758( iParam0->_fU16 );
    sub_45758( iParam0->_fU20 );
    sub_45758( iParam0->_fU24 );
    sub_42341( iParam0->_fU28 );
    sub_42341( iParam0->_fU56 );
    sub_42341( iParam0->_fU60 );
    sub_42341( iParam0->_fU64 );
    sub_42341( iParam0->_fU68 );
    sub_42341( iParam0->_fU72 );
    sub_42341( iParam0->_fU76 );
    sub_42341( iParam0->_fU80 );
    sub_42341( iParam0->_fU84 );
    sub_42341( iParam0->_fU88 );
    sub_42341( iParam0->_fU92 );
    sub_45758( iParam0->_fU32 );
    sub_42341( iParam0->_fU36 );
    sub_42341( iParam0->_fU40 );
    sub_42341( iParam0->_fU44 );
    sub_45758( iParam0->_fU136 );
    sub_56697( iParam0->_fU140 );
    sub_42341( iParam0->_fU52 );
    sub_11907( "---nRightHolsterAttachmentEnabled: " );
    sub_42341( iParam0->_fU96 );
    sub_11907( "---nRightHolsterAttachmentToggled: " );
    sub_42341( iParam0->_fU100 );
    sub_11907( "---nLeftHolsterAttachmentEnabled: " );
    sub_42341( iParam0->_fU104 );
    sub_11907( "---nLeftHolsterAttachmentToggled: " );
    sub_42341( iParam0->_fU108 );
    sub_11907( "---nRifleHolsterAttachmentEnabled: " );
    sub_42341( iParam0->_fU112 );
    sub_11907( "---nRifleHolsterAttachmentToggled: " );
    sub_42341( iParam0->_fU116 );
    sub_11907( "---nRightHandAttachmentEnabled: " );
    sub_42341( iParam0->_fU120 );
    sub_11907( "---nRightHandAttachmentToggled: " );
    sub_42341( iParam0->_fU124 );
    sub_11907( "---nLeftHandAttachmentEnabled: " );
    sub_42341( iParam0->_fU128 );
    sub_11907( "---nLeftHandAttachmentToggled: " );
    sub_42341( iParam0->_fU132 );
    sub_42341( l_U1 );
    sub_42341( 144 );
    return;
}

void sub_56452(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_56697(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_57568(boolean bParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;

    if (bParam0)
    {
        sub_44506( ref l_U2197, 3500 );
        ENABLE_GRAVITY_WELL( "s_stad_manual_placement", "GravityWell_Entering_Concession", 1, 0, 0, 0 );
        sub_2389( ref l_U2374, 1500, 1, 0 );
    }
    if (sub_57687( ref l_U353, 0 ))
    {
        sub_57844( g_U4007, 58, 1000 );
        if ((NOT l_U2374._fU20) AND (NOT l_U2374._fU16))
        {
            sub_2527( ref l_U2374 );
        }
        l_U1965._fU164 = 1;
        l_U1965._fU212 = 0;
        l_U1965._fU72 = {87.32078000, 25.52820000, 11.33464000};
        l_U1965._fU84 = {87.32078000, 25.52820000, 11.33464000};
    }
    if (sub_47117( ref g_U4007, 45, 1 ))
    {
        TASK_AIM_GUN_AT_COORD( l_U1965._fU0, l_U1965._fU72, -1, 0 );
    }
    if (l_U1965._fU212)
    {
        if (sub_3104( ref l_U2197 ))
        {
            l_U1965._fU212 = 0;
            l_U1965._fU72 = {87.32078000, 25.52820000, 11.33464000};
            l_U1965._fU84 = {87.32078000, 25.52820000, 11.33464000};
            if (NOT l_U353._fU64)
            {
                l_U353._fU64 = 1;
                sub_57844( g_U4007, 58, 1000 );
            }
            if (sub_57687( ref l_U374, 0 ))
            {
                l_U1965._fU164 = 2;
                l_U395._fU64 = 0;
            }
            else if ((NOT l_U2374._fU20) AND (NOT l_U2374._fU16))
            {
                sub_2527( ref l_U2374 );
            }
            l_U1965._fU164 = 1;;
        }
    }
    else if (sub_57687( ref l_U374, 0 ))
    {
        l_U1965._fU164 = 2;
        l_U395._fU64 = 0;
    }
    if (sub_57687( ref l_U395, 0 ))
    {
        if ((NOT l_U2374._fU20) AND (NOT l_U2374._fU16))
        {
            sub_2527( ref l_U2374 );
        }
        l_U1965._fU164 = 1;
        l_U374._fU64 = 0;
    }
    if (sub_3104( ref l_U2374 ))
    {
        SET_PED_PERFECT_ACCURACY_OVERRIDE( l_U1965._fU0, 1 );
    }
    sub_58398( l_U2040, 11.00000000, 1, 0 );
    if (sub_58489())
    {
        sub_58599();
    }
    if (sub_57687( ref l_U736, 0 ))
    {
        sub_58766( "SSTD_BTTB", ref uVar3 );
    }
    if (sub_57687( ref l_U227, 0 ))
    {
        sub_58865( ref g_U3269, 0 );
        sub_58865( ref g_U3276, 0 );
        sub_47198( ref g_U4007, 58 );
        l_U128 = 10;
        sub_812( "GA", "eCheckpointState = CP_CONCESSIONS_HIDING", 0 );
    }
    return;
}

void sub_57687(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_57729( sub_1253(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_57729(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_57844(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U649 );
    }
    return;
}

void sub_58398(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_7557( uParam0 );
            }
        }
    }
    return;
}

int sub_58489()
{
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( g_U4007, 47 )) == 1)
        {
            sub_2271( "F_IS_PASSOS_IN_FOOD_COURT_ENTRANCE" );
            return 1;
        }
    }
    return 0;
}

void sub_58599()
{
    sub_2271( "P_PASSOS_ENTER_FOOD_COURT" );
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        PED_FINISH_ACTION_INTENTION( g_U4007, 47 );
        sub_36106( g_U4007, 82.18000000, 50.08000000, 9.58000000, -50.00000000 );
        PED_SET_ACTION_INTENTION( g_U4007, 48, 1000, g_U649 );
    }
    return;
}

void sub_58766(unknown uParam0, unknown uParam1)
{
    sub_43398( uParam1 );
    sub_43480( 0, sub_1253(), "MAX", uParam1, 2, 0 );
    sub_43480( 1, sub_1253(), "MAX", uParam1, 2, 0 );
    sub_43719( uParam0, uParam1, 8, 1 );
    return;
}

void sub_58865(int iParam0, int iParam1)
{
    if ((sub_39197( iParam0 )) == 0)
    {
        sub_39263( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_59099(boolean bParam0)
{
    if (bParam0)
    {
        sub_44506( ref l_U1873, l_U1883 );
        l_U1965._fU164 = 2;
        sub_59140();
        sub_59254( "SSTD_STPB", ref l_U2020 );
        l_U132 = 1;
        sub_59374();
        sub_8049( l_U2206 );
        STREAM_HELPERS_REQUEST_AT_LOC( 84.59229000, 31.32314000, 9.59993600, 0 );
    }
    if ((sub_59547( ref l_U2207 )) == 1)
    {
        sub_43398( ref l_U2363 );
        sub_43480( 0, sub_1253(), "MAX", ref l_U2363, 2, 0 );
        sub_43480( 1, sub_1253(), "MAX", ref l_U2363, 2, 0 );
        sub_43719( "EXPLORE_ITEM", ref l_U2363, 8, 1 );
    }
    sub_59884( ref l_U2207 );
    if (l_U132 == 1)
    {
        if (NOT sub_61630())
        {
            sub_61696();
        }
    }
    if (sub_58489())
    {
        sub_58599();
    }
    if (sub_3104( ref l_U1873 ))
    {
        l_U1882 = 1;
    }
    if (sub_57687( ref l_U248, 0 ))
    {
        sub_7871( ref l_U1965 );
        sub_62766();
        ENABLE_GRAVITY_WELL( "s_stad_manual_placement", "GravityWell_Entering_Concession", 0, 0, 0, 0 );
        sub_63268();
        sub_63315( g_U4007, ref g_U2500 );
        if (NOT l_U1196)
        {
            sub_63370();
            l_U1196 = 1;
        }
    }
    if ((NOT l_U1196) AND (l_U1882))
    {
        if (sub_63964())
        {
            sub_812( "[SA]", "Player fired weapon before guards spawned. Spawning and alerting guards!", 0 );
            sub_63370();
            l_U1196 = 1;
            l_U128 = 12;
            sub_812( "GA", "eCheckpointState = CP_CONCESSION_FIGHT", 0 );
        }
    }
    if ((sub_64202()) AND (l_U1196))
    {
        l_U128 = 12;
        sub_812( "GA", "eCheckpointState = CP_CONCESSION_FIGHT", 0 );
        SET_PED_HAS_SPECIAL_GUN_SOUND( g_U4007, 0 );
    }
    if (l_U1196)
    {
        if (NOT (IS_PED_DEAD( l_U1013[0]._fU0 )))
        {
            if (GET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1013[0]._fU0 ))
            {
                sub_63658( ref l_U1013, 0, 0, -1 );
            }
        }
    }
    if (sub_64809())
    {
        sub_812( "GA", "Concession enemies left.", 0 );
        l_U1543 = 1;
        sub_7757( ref l_U1499 );
        sub_65001();
        l_U128 = 11;
        sub_812( "GA", "eCheckpointState = CP_NIS_CP_LEAVE", 0 );
        SET_PED_HAS_SPECIAL_GUN_SOUND( g_U4007, 0 );
    }
    return;
}

void sub_59140()
{
    sub_2271( "P_PASSOS_FOOD_COURT_TAKE_COVER" );
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        PED_SET_ACTION_INTENTION( g_U4007, 49, 10000, g_U649 );
    }
    return;
}

void sub_59254(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( sub_1253() ))) AND (NOT (IS_PED_DEAD( g_U4007 ))))
    {
        sub_43398( uParam1 );
        sub_43480( 1, g_U4007, "PASSOS", uParam1, 2, 0 );
        sub_43480( 0, sub_1253(), "MAX", uParam1, 2, 0 );
        sub_43719( uParam0, uParam1, 7, 1 );
    }
    return;
}

void sub_59374()
{
    sub_812( "MF", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - START", 0 );
    g_U4002 = GET_PAYNEKILLER_AMT();
    sub_812( "MF", "P_GBL_REFRESH_PAYNE_KILLER_COUNT - END", 0 );
    return;
}

int sub_59547(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_59559( iParam0 )) == 0)))
    {
        if ((sub_59723() == 1) AND (((IS_PED_RELOADING( sub_1253() )) == 0) AND (((IS_PED_GETTING_UP( sub_1253() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_1253() )) == 0) AND (((IS_PED_IN_COVER( sub_1253() )) == 0) AND (((IS_PED_DUCKING( sub_1253() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_59559(int iParam0)
{
    return iParam0->_fU56;
}

int sub_59723()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

int sub_59884(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_1253() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1253() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_57729( sub_1253(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_57729( sub_1253(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_8489( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_8550( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_59723() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_8094( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_8138( iParam0, 0 );
                            sub_8338( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_8138( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_1253() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_1253(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_8138( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_8338( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_1253() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_1253(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_1253() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_1253(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_1253() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_1253(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_8138( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_8338( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_1253() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_1253() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_1253() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_1253(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_8338( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

void sub_61630()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_61696()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if (sub_61711( ref l_U468, 0 ))
    {
        ;
    }
    if (NOT (sub_4478( ref g_U3992 )))
    {
        sub_44506( ref g_U3992, g_U4001 );
    }
    if ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND (sub_61986()))
    {
        sub_812( "MF", "Playing Speech: SSTD_MFSP", 0 );
        sub_58766( ref g_U4003, ref uVar2 );
        sub_4987( ref g_U3992 );
        return;
    }
    if (sub_61746( ref l_U757, 0 ))
    {
        if (sub_62221( ref l_U1004, 10000, 20000 ))
        {
            sub_812( "MF", "Playing Speech: SSTD_PECH", 0 );
            sub_58766( "SSTD_PECH", ref uVar2 );
            return;
        }
    }
    else if ((NOT l_U1004._fU16) AND (sub_4478( ref l_U1004 )))
    {
        sub_812( "MF", "Disabling ambient dialogue timer: tmr_FoodCourt_Amb_Mono", 0 );
        sub_62669( ref l_U1004 );
    }
    return;
}

void sub_61711(int iParam0, unknown uParam1)
{
    if (iParam0->_fU548)
    {
        return 0;
    }
    else
    {
        iParam0->_fU548 = sub_61746( iParam0, uParam1 );
    }
    return iParam0->_fU548;
}

void sub_61746(int iParam0, unknown uParam1)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD( sub_1253() )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if (sub_61805( iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam1) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU548 = 1;
    return Result;
}

void sub_61805(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_57729( sub_1253(), uParam0 );
}

int sub_61986()
{
    if (GET_PAYNEKILLER_AMT() > g_U4002)
    {
        sub_812( "MF", "Player picked up Payne Killers!", 0 );
        sub_42341( g_U4002 );
        sub_42341( GET_PAYNEKILLER_AMT() );
        g_U4002 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U4002 = GET_PAYNEKILLER_AMT();
    return 0;
}

int sub_62221(int iParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (sub_4478( iParam0 )))
    {
        sub_812( "MF", "F_GBL_IS_PLAYER_READY_TO_SAY_EXPLORE_SPEECH_MONOLOGUE - Starting Timer", 0 );
        sub_2389( iParam0, 5000, 1, 0 );
        sub_2527( iParam0 );
    }
    if ((GET_PED_SPEED( sub_1253() )) < 0.10000000)
    {
        iParam0->_fU12 = uParam1;
    }
    else
    {
        iParam0->_fU12 = uParam2;
    }
    if (sub_3104( iParam0 ))
    {
        sub_812( "MF", "F_GBL_IS_PLAYER_READY_TO_SAY_EXPLORE_SPEECH_MONOLOGUE - Timer is complete!", 0 );
        return 1;
    }
    return 0;
}

void sub_62669(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_62766()
{
    sub_2271( "P_CREATE_1ST_SNIPER" );
    sub_7557( l_U2040 );
    sub_34675( ref l_U2041, l_U2054, l_U2057, g_U2384, 7, 3, 2, 0, 0 );
    l_U2040 = sub_33088( ref l_U2040, ref l_U2041, 1, 0, 0 );
    sub_34809( ref l_U2040, "M3_CP_S1A_Avg" );
    sub_34951( ref l_U2040 );
    sub_36272( l_U2040, 1194438308, 25000, 0, 0 );
    sub_45707( ref l_U2040, ref g_U3928, 3, 15, 1 );
    sub_62946( ref l_U2040, l_U437 );
    sub_63034( l_U2040, "foodCourt_Simple", "Corner Position25" );
    SET_PED_CAN_BE_MELEED( l_U2040, 0 );
    SET_PED_CAN_MELEE( l_U2040, 0 );
    SET_PED_NAME_DEBUG( l_U2040, "piAttSniper" );
    return;
}

void sub_62946(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        sub_50474( ref uParam1, (uParam0^), 1 );
    }
    return;
}

void sub_63034(unknown uParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        OPEN_SEQUENCE_TASK( ref uVar5 );
        TASK_COMBAT_SNAP_TO_COVER( 0, uParam1, uParam2, 0 );
        CLOSE_SEQUENCE_TASK( uVar5 );
        TASK_PERFORM_SEQUENCE( uParam0, uVar5 );
        CLEAR_SEQUENCE_TASK( uVar5 );
        SET_PED_FLAG_LOCK_TO_COVER( uParam0, 1 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( uParam0, 1 );
    }
    return;
}

void sub_63268()
{
    sub_39185( ref g_U3269, 1 );
    sub_39185( ref g_U3276, 1 );
    return;
}

void sub_63315(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_ROOM_FOR_PED_BY_NAME( uParam0, uParam1 );
    }
    return;
}

void sub_63370()
{
    if (NOT l_U1196)
    {
        sub_2271( "P_ACTIVATE_FOODCOURT_VCPF" );
        sub_48894( ref l_U1013, 0, 0, -1 );
        sub_32760( l_U1013[0]._fU0, 727272178, "s_stad_vcpf_patrol_1" );
        sub_32760( l_U1013[1]._fU0, 727272178, "s_stad_vcpf_patrol_2" );
        sub_32760( l_U1013[2]._fU0, 727272178, "s_stad_vcpf_patrol_3" );
        sub_32760( l_U1013[3]._fU0, 727272178, "s_stad_vcpf_patrol_4" );
        sub_49019( ref l_U1013, 0, -1 );
        ISEQ_START( 727272178 );
        sub_48469( ref l_U1013, 0, 0, -1 );
        sub_63658( ref l_U1013, 0, 0, -1 );
        sub_43398( ref l_U1197 );
        sub_43480( 2, l_U1013[0]._fU0, "M3_CP_05_MUS", ref l_U1197, 2, 0 );
        sub_43480( 3, l_U1013[1]._fU0, "M3_CP_06_AVG", ref l_U1197, 2, 0 );
        sub_43480( 4, l_U1013[2]._fU0, "M3_CP_07_AVG", ref l_U1197, 2, 0 );
        sub_43719( "SSTD_STCA", ref l_U1197, 8, 1 );
        l_U1196 = 1;
    }
    return;
}

void sub_63658(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_63708( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_63708(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( iParam0->_fU0, uParam1 );
    }
    return;
}

int sub_63964()
{
    if (HAS_SHOT_BEEN_FIRED_IN_AREA( sub_47027( sub_1253() ), l_U1871, 0, ref l_U1872 ))
    {
        if (l_U1872 == sub_1253())
        {
            return 1;
        }
    }
    return 0;
}

int sub_64202()
{
    unknown uVar2;

    uVar2 = sub_1253();
    if (NOT (IS_PED_DEAD( l_U1013[2]._fU0 )))
    {
        if (NOT (IS_PED_DEAD( sub_1253() )))
        {
            if ((sub_64281( l_U1013[2]._fU0, uVar2 )) || (sub_63964()))
            {
                sub_812( "[AT]", "Player fired weapon. Alert guards!", 0 );
                return 1;
            }
            if (HAS_PED_CLEAR_LOS_TO_PED_IN_FRONT( l_U1013[2]._fU0, sub_1253() ))
            {
                sub_812( "[AT]", "Guard can see Max. Alert guards!", 0 );
                return 1;
            }
            if ((sub_14345( l_U1013[2]._fU0, sub_1253(), 1 )) < 25.00000000)
            {
                sub_812( "[AT]", "Max is too close to the guard. Alert guards!", 0 );
                return 1;
            }
            if (IS_PED_SHOOTING( l_U1013[3]._fU0 ))
            {
                return 1;
            }
        }
    }
    else
    {
        return 1;
    }
    return 0;
}

int sub_64281(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
    {
        ;
    }
    if ((NOT (IS_PED_DEAD( uParam1 ))) || (IS_PED_DEAD( uParam1 )))
    {
        ;
    }
    if (HAS_PED_BEEN_DAMAGED_BY_PED( uParam0, uParam1, 0 ))
    {
        return 1;
        break;
    }
    return 0;
}

int sub_64809()
{
    if (NOT (IS_PED_DEAD( l_U1013[2]._fU0 )))
    {
        if (((sub_64892( ref l_U1013[2], 52 )) == 1) AND (ISEQ_QUERY_ENTITY_STATE( 727272178, "s_stad_vcpf_patrol_3", 3 )))
        {
            return 1;
        }
    }
    return 0;
}

void sub_64892(int iParam0, unknown uParam1)
{
    return sub_47132( iParam0->_fU0, uParam1 );
}

void sub_65001()
{
    sub_812( "GA", "P_CONCESSION_ENEMIES_LEAVE_NIS_START start", 0 );
    sub_65110( ref l_U1884, 70.94202000, 68.37791000, 11.58295000, 22.11711000, -0.00011400, 53.47490000, 45.00000000, 5000 );
    sub_52605( 0, 0, 0, 1 );
    SET_PLAYER_CONTROL( sub_1275(), 0, 0 );
    sub_63658( ref l_U1013, 1, 0, -1 );
    sub_7757( ref l_U1013[3] );
    sub_65370( ref l_U1884 );
    sub_812( "GA", "P_CONCESSION_ENEMIES_LEAVE_NIS_START end", 0 );
    return;
}

void sub_65110(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_2389( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U723, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_65370(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_2527( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

int sub_65610(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_3104( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_3104( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_65748()
{
    sub_812( "RJM", "P_PASSOS_MOVE_INTO_FOODCOURT start", 0 );
    ENABLE_NORMAL_LINE( "foodCourt_Simple", "foodCourtHighCover04", 1 );
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        ISEQ_UNREGISTER_ENTITY( -1310389432, "Passos" );
        SET_ROOM_FOR_PED_BY_NAME( g_U4007, ref g_U2500 );
        ISEQ_TERMINATE( -1310389432 );
        sub_6243( -1310389432, ref g_U1263 );
    }
    if ((NOT (IS_PED_DEAD( sub_1253() ))) AND (NOT (IS_PED_DEAD( g_U4007 ))))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( g_U4007 );
        ISEQ_REGISTER_ENTITY( -813779471, "passos_entity", g_U4007, 0 );
        sub_32657( g_U4007, 85.84000000, 53.56000000, 9.57000000, 311.00000000 );
        ISEQ_START( -813779471 );
    }
    sub_812( "RJM", "P_PASSOS_MOVE_INTO_FOODCOURT end", 0 );
    return;
}

void sub_66128(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_66311(boolean bParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    int I;

    if (bParam0)
    {
        sub_66328();
        l_U132 = 0;
        sub_51147( ref l_U1197, 0 );
        sub_57844( g_U4007, 51, 1000 );
        sub_44506( ref l_U2157, 2500 );
        sub_812( "MF", "Playing Speech: SSTD_SBCP", 0 );
        sub_43480( 1, sub_1253(), "MAX", ref uVar3, 2, 0 );
        sub_43480( 0, g_U4007, "PASSOS", ref uVar3, 2, 0 );
        sub_43719( "SSTD_SBCP", ref uVar3, 7, 1 );
        sub_44506( ref l_U2316, 10000 );
    }
    if (sub_4478( ref l_U2316 ))
    {
        if (sub_67547( 1 ))
        {
            sub_2271( "ResetTimer(tMaxHasNotFired)" );
            sub_4987( ref l_U2316 );
            sub_2527( ref l_U2316 );
        }
        else if (NOT (IS_ANY_SPEECH_PLAYING( g_U4007 )))
        {
            if ((l_U2325 < 2) AND (sub_3104( ref l_U2316 )))
            {
                sub_2271( "IsTimerDone(tMaxHasNotFired)" );
                sub_43398( ref l_U2306 );
                sub_43480( 1, g_U4007, "PASSOS", ref l_U2306, 2, 0 );
                sub_43719( "SSTD_CSSO", ref l_U2306, 7, 1 );
                sub_4987( ref l_U2316 );
                sub_44506( ref l_U2316, 12000 );
                l_U2325++;
            }
        }
    }
    if (NOT (sub_67895( l_U2338 )))
    {
        if ((IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT l_U2337))
        {
            l_U2337 = 1;
        }
        else if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (l_U2337))
        {
            l_U2337 = 0;
            sub_2271( "Chance to react to LMS here" );
            if ((sub_68093( 0, 3 )) == 0)
            {
                sub_43398( ref l_U2338 );
                sub_43480( 1, g_U4007, "PASSOS", ref l_U2338, 2, 0 );
                sub_43719( "SSTD_PMPL", ref l_U2338, 7, 1 );
            }
        }
        else if (sub_47117( ref g_U4007, 46, 1 ))
        {
            sub_2271( "Chance to speak while shooting" );
            if ((sub_68093( 0, l_U2348 )) > 3)
            {
                sub_43398( ref l_U2338 );
                sub_43480( 1, g_U4007, "PASSOS", ref l_U2338, 2, 0 );
                sub_43719( "SSTD_PSAE", ref l_U2338, 7, 1 );
                l_U2348 = 0;
            }
            else
            {
                l_U2348++;
            }
        };;;
    }
    if ((sub_61805( l_U311 )) AND ((NOT (IS_ANY_SPEECH_PLAYING( g_U4007 ))) AND (NOT l_U2326)))
    {
        l_U2326 = 1;
        sub_43480( 1, g_U4007, "PASSOS", ref uVar13, 2, 0 );
        sub_43719( "SSTD_CSLM", ref uVar13, 7, 1 );
    }
    if ((sub_59547( ref l_U2207 )) == 1)
    {
        sub_2271( "F_POI_CAN_PLAY_UNAVALIABLE_MONO(poiFC_Blood)" );
        sub_43398( ref l_U2363 );
        sub_43480( 0, sub_1253(), "MAX", ref l_U2363, 2, 0 );
        sub_43480( 1, sub_1253(), "MAX", ref l_U2363, 2, 0 );
        sub_43719( "EXPLORE_ITEM", ref l_U2363, 8, 1 );
    }
    sub_59884( ref l_U2207 );
    if (NOT l_U1498)
    {
        if ((sub_57687( ref l_U332, 0 )) || ((sub_68633( ref l_U1013 )) < 1))
        {
            sub_48469( ref l_U1270, 0, 2, -1 );
            sub_48894( ref l_U1270, 0, 2, -1 );
            sub_66852( ref l_U1270, 3, 2 );
            sub_66654( ref l_U1270, 2, -1 );
            sub_67086( ref l_U1270[3], 67.60815000, 72.77717000, 9.56550500 );
            SET_PED_SUGGESTED_COVER_POINT( l_U1270[3]._fU0, "GenCover", "452238C2_19390118_Corner1" );
            l_U1498 = 1;
        }
    }
    if (((sub_68633( ref l_U1270 )) + (sub_68633( ref l_U1013 ))) == 1)
    {
        sub_68914( ref l_U1013, "ALL_LMS_01", 0, 0, 0 );
        sub_68932( ref l_U1270, 0, 0, 0 );
    }
    if (sub_57687( ref l_U248, 0 ))
    {
        sub_812( "[SA]", "Player triggered tbActivateFoodcourtVCPF.", 0 );
        sub_7871( ref l_U1965 );
        sub_62766();
        sub_63268();
        sub_63315( g_U4007, ref g_U2500 );
        ENABLE_GRAVITY_WELL( "s_stad_manual_placement", "GravityWell_Entering_Concession", 0, 0, 0, 0 );
    }
    if (sub_3104( ref l_U2157 ))
    {
        uVar23 = nil;
        if (HAS_BULLET_IMPACTED_IN_AREA( sub_47027( g_U4007 ), 4, ref uVar23 ))
        {
            sub_2271( "Passos is flinching" );
            sub_57844( g_U4007, 53, 1000 );
        }
        else
        {
            sub_812( "AT", "Passos is shooting.", 0 );
            sub_57844( g_U4007, 51, 1000 );
        }
        sub_44506( ref l_U2157, GET_RANDOM_INT_IN_RANGE( 2500, 5000 ) );
    }
    if (sub_69570( sub_1253(), ref l_U1747 ))
    {
        if (l_U1811 != 1)
        {
            sub_812( "SA", "Player hiding under front railing", "###" );
            l_U1811 = 1;
            sub_69721( ref l_U1839 );
        }
    }
    else if (sub_69570( sub_1253(), ref l_U1703 ))
    {
        if (l_U1811 != 2)
        {
            sub_812( "SA", "Player hiding under near left railing", "###" );
            l_U1811 = 2;
            sub_69721( ref l_U1833 );
        }
    }
    else if (sub_69570( sub_1253(), ref l_U1725 ))
    {
        if (l_U1811 != 3)
        {
            sub_812( "SA", "Player hiding under far left railing", "###" );
            l_U1811 = 3;
            sub_69721( ref l_U1836 );
        }
    }
    else if (sub_69570( sub_1253(), ref l_U1638 ))
    {
        if (l_U1811 != 4)
        {
            sub_812( "SA", "Player hiding under near right railing", "###" );
            l_U1811 = 4;
            sub_69721( ref l_U1827 );
        }
    }
    else if (sub_69570( sub_1253(), ref l_U1660 ))
    {
        if (l_U1811 != 5)
        {
            sub_812( "SA", "Player hiding under far right railing", "###" );
            l_U1811 = 5;
            sub_69721( ref l_U1830 );
        }
    }
    else if (sub_69570( sub_1253(), ref l_U1553 ))
    {
        if (l_U1811 != 6)
        {
            sub_812( "SA", "Player hiding in entrance way.", "###" );
            l_U1811 = 6;
            sub_69721( ref l_U1842 );
        }
    }
    else if (l_U1811 != 0)
    {
        sub_812( "SA", "Player is in the open", "###" );
        l_U1811 = 0;
        sub_70795();
    };;;;;;;
    for ( I = 0; I < 4; I++ )
    {
        if (sub_71012( I ))
        {
            sub_71149( I );
        }
        else
        {
            sub_71482( I );
        }
    }
    if (sub_57687( ref l_U269, 0 ))
    {
        sub_71671();
        l_U128 = 13;
        sub_812( "GA", "eCheckpointState = CP_NIS_FAIL_PASSOS_SHOT_IN_FOODCOURT", 0 );
        return;
    }
    if (NOT l_U2138)
    {
        if (l_U269._fU64)
        {
            if ((sub_72517( ref l_U2113, l_U1207._fU0, 0 )) || (IS_PED_DEAD( l_U1207._fU0 )))
            {
                sub_65748();
                sub_36106( g_U4007, 65.98000000, 75.34000000, 9.55131800, -96.25600000 );
                sub_72652();
                l_U2138 = 1;
            }
        }
    }
    if (NOT l_U2349)
    {
        if (((sub_68633( ref l_U1013 )) + (sub_68633( ref l_U1270 ))) < 5)
        {
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_3_4_5", "", 0, 14000, -1, -1082130432, 0 );
            l_U2349 = 1;
        }
    }
    if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (((sub_68633( ref l_U1013 )) + (sub_68633( ref l_U1270 ))) < 1))
    {
        sub_2271( "Foodcourt VCPF all dead, trying to move Edison" );
        l_U128 = 14;
        sub_812( "GA", "eCheckpointState = CP_CONCESSION_CP_GONE", 0 );
    }
    return;
}

void sub_66328()
{
    sub_812( "[SA]", "Start P_START_FOOD_COURT_FIGHT", "***" );
    sub_66389();
    SET_PED_FORCED_TO_WALK( sub_1253(), 0 );
    sub_48469( ref l_U1270, 0, 0, 1 );
    sub_48894( ref l_U1270, 0, 0, 1 );
    sub_66852( ref l_U1270, 3, 2 );
    sub_66654( ref l_U1270, 0, 1 );
    sub_67086( ref l_U1270[0], 69.32802000, 69.11136000, 9.56245300 );
    sub_67086( ref l_U1270[1], 68.80373000, 73.94593000, 9.55574700 );
    l_U1497 = 1;
    sub_812( "[SA]", "End P_START_FOOD_COURT_FIGHT", "***" );
    return;
}

void sub_66389()
{
    sub_812( "MF", "P_FOODCOURT_VCPF_SPOT_PLAYER - START", 0 );
    sub_50748( ref l_U1013, l_U1812, 1, 0, -1 );
    sub_50748( ref l_U1013, l_U1813, 1, 0, -1 );
    sub_50748( ref l_U1013, l_U1814, 1, 0, -1 );
    sub_50748( ref l_U1013, l_U1815, 1, 0, -1 );
    sub_50748( ref l_U1013, l_U1816, 1, 0, -1 );
    sub_50748( ref l_U1013, l_U1817, 1, 0, -1 );
    sub_50748( ref l_U1013, l_U1818, 1, 0, -1 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1013[0]._fU0, 0 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1013[1]._fU0, 0 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1013[2]._fU0, 0 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1013[3]._fU0, 0 );
    sub_66654( ref l_U1013, 0, -1 );
    sub_812( "MF", "P_FOODCOURT_VCPF_SPOT_PLAYER - END", 0 );
    return;
}

void sub_66654(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
        sub_2812( ref (uParam0^)[I]._fU0, sub_1253() );
        sub_2873( ref (uParam0^)[I]._fU0, sub_1253() );
    }
    return;
}

void sub_66852(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_66888( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

void sub_66888(int iParam0, unknown uParam1, unknown uParam2)
{
    sub_66906( iParam0 + 0, uParam1, uParam2 );
    return;
}

void sub_66906(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_66920( uParam0, uParam1 );
    sub_66970( uParam0, uParam2 );
    return;
}

void sub_66920(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

void sub_66970(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_EMOTION_STATE( (uParam0^), uParam1 );
    }
    return;
}

void sub_67086(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    sub_67119( iParam0 + 0, sub_1253(), uParam1, iParam0->_fU80, 20000, 0 );
    return;
}

void sub_67119(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    unknown uVar10;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS( (uParam0^) );
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam5 );
        if (NOT (IS_PED_DEAD( uParam1 )))
        {
            OPEN_SEQUENCE_TASK( ref uVar10 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam2, 3, uParam6, 1048576000, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam7 );
            TASK_COMBAT_PED( 0, uParam1 );
            CLOSE_SEQUENCE_TASK( uVar10 );
            TASK_PERFORM_SEQUENCE( (uParam0^), uVar10 );
            CLEAR_SEQUENCE_TASK( uVar10 );
        }
    }
    return;
}

int sub_67547(unknown uParam0)
{
    int iVar3;

    iVar3 = nil;
    if (HAS_SHOT_BEEN_FIRED_IN_AREA( sub_47027( sub_1253() ), 2.00000000, uParam0, ref iVar3 ))
    {
        if (iVar3 == sub_1253())
        {
            sub_2271( "MAL_HasPlayerFired RETURNING TRUE" );
            return 1;
        }
    }
    return 0;
}

int sub_67895(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_51161( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

void sub_68093(unknown uParam0, int iParam1)
{
    int Result;

    Result = GET_RANDOM_INT_IN_RANGE( uParam0, iParam1 + 1 );
    if (Result > iParam1)
    {
        Result = iParam1;
    }
    return Result;
}

void sub_68633(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_68914(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown Result;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;

    Result = {sub_68932( uParam0, uParam2, uParam3, uParam4 )};
    if (Result._fU0 != g_U671._fU0)
    {
        SET_BULLET_CAM_PREF( Result._fU0, uParam1, uParam1, uParam1, 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    }
    return Result;
}

void sub_68932(unknown uParam0, boolean bParam1, unknown uParam2, unknown uParam3)
{
    int I;

    if ((sub_68633( uParam0 )) == 1)
    {
        for ( I = 0; I < (uParam0^); I++ )
        {
            if (sub_35159( (uParam0^)[I]._fU0, 1 ))
            {
                if (bParam1)
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, uParam2 );
                }
                BULLET_CAMERA_TRACK_UNTIL_GROUNDED( uParam3 );
                return (uParam0^)[I];
            }
        }
    }
    return g_U671;
}

int sub_69570(unknown uParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    for ( I = 0; I < iVar4; I++ )
    {
        if (sub_57729( uParam0, (uParam1^)[I] ))
        {
            return 1;
        }
    }
    return 0;
}

void sub_69721(unknown uParam0)
{
    int iVar3;
    int J;
    int I;
    unknown uVar6;
    int iVar7;
    int iVar8;
    int iVar9;
    int iVar10;
    unknown uVar11;
    unknown uVar12;
    int iVar13;

    iVar3 = (uParam0^);
    for ( J = 0; J < 4; J++ )
    {
        iVar7 = 100;
        if (NOT (IS_PED_DEAD( l_U1013[J]._fU0 )))
        {
            for ( I = 0; I < iVar3; I++ )
            {
                iVar8 = ABSI( l_U1845[J] - (uParam0^)[I] );
                if (iVar8 < iVar7)
                {
                    iVar7 = iVar8;
                    uVar6 = (uParam0^)[I];
                }
            }
            l_U1845[J] = uVar6;
            sub_69879( l_U1013[J]._fU0 );
            sub_50456( ref l_U1013[J], l_U1819[uVar6], 1 );
        }
    }
    iVar9 = 1;
    for ( iVar10 = 0; iVar10 < 4; iVar10++ )
    {
        if ((l_U1845[iVar10] != l_U1845[0]) || (IS_PED_DEAD( l_U1013[iVar10]._fU0 )))
        {
            iVar9 = 0;
        }
    }
    if ((iVar3 > 1) AND (iVar9))
    {
        uVar11 = GET_RANDOM_INT_IN_RANGE( 0, 3 );
        for ( iVar13 = 0; iVar13 < iVar3; iVar13++ )
        {
            if ((uParam0^)[iVar13] != l_U1845[0])
            {
                uVar12 = (uParam0^)[iVar13];
            }
        }
        l_U1845[uVar11] = uVar12;
        sub_69879( l_U1013[uVar11]._fU0 );
        sub_50456( ref l_U1013[uVar11], l_U1819[uVar12], 1 );
    }
    return;
}

void sub_69879(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_70795()
{
    sub_70809( ref l_U1013 );
    sub_50748( ref l_U1013, l_U1812, 1, 0, -1 );
    sub_50748( ref l_U1013, l_U1813, 1, 0, -1 );
    sub_50748( ref l_U1013, l_U1814, 1, 0, -1 );
    sub_50748( ref l_U1013, l_U1815, 1, 0, -1 );
    sub_50748( ref l_U1013, l_U1816, 1, 0, -1 );
    sub_50748( ref l_U1013, l_U1817, 1, 0, -1 );
    sub_50748( ref l_U1013, l_U1818, 1, 0, -1 );
    return;
}

void sub_70809(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_69879( (uParam0^)[I]._fU0 );
    }
    return;
}

int sub_71012(unknown uParam0)
{
    unknown uVar3;

    uVar3 = uParam0;
    if (NOT (IS_PED_DEAD( l_U1013[uVar3]._fU0 )))
    {
        if ((l_U1811 == 1) || (l_U1811 == 6))
        {
            if ((NOT (HAS_PED_CLEAR_LOS_TO_PED_IN_FRONT( l_U1013[uVar3]._fU0, sub_1253() ))) AND (sub_57729( l_U1013[uVar3]._fU0, l_U1790 )))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_71149(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;

    uVar3 = uParam0;
    if (NOT l_U1850[uVar3])
    {
        sub_812( "[SA]", "Enemy can't attack player, attacking Passos instead.", 0 );
        uVar4 = l_U1855;
        uVar5 = GET_RANDOM_INT_IN_RANGE( 0, uVar4 );
        uVar6 = GET_RANDOM_INT_IN_RANGE( 0, uVar4 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1013[uVar3]._fU0, 1 );
        OPEN_SEQUENCE_TASK( ref uVar7 );
        TASK_AIM_GUN_AT_COORD( 0, l_U1855[uVar5], 2000, 0 );
        TASK_SHOOT_AT_COORD( 0, l_U1855[uVar5], 5000, -511790439, 0, 0 );
        TASK_AIM_GUN_AT_COORD( 0, l_U1855[uVar6], 2000, 0 );
        TASK_SHOOT_AT_COORD( 0, l_U1855[uVar6], 5000, -511790439, 0, 0 );
        SET_SEQUENCE_TO_REPEAT( uVar7, 1 );
        CLOSE_SEQUENCE_TASK( uVar7 );
        TASK_PERFORM_SEQUENCE( l_U1013[uVar3]._fU0, uVar7 );
        CLEAR_SEQUENCE_TASK( uVar7 );
        l_U1850[uVar3] = 1;
    }
    return;
}

void sub_71482(unknown uParam0)
{
    unknown uVar3;

    uVar3 = uParam0;
    if (NOT (IS_PED_DEAD( l_U1013[uVar3]._fU0 )))
    {
        if (l_U1850[uVar3])
        {
            sub_812( "[SA]", "Enemy can't attack player, attacking Passos instead.", 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1013[uVar3]._fU0, 0 );
            l_U1850[uVar3] = 0;
        }
    }
    return;
}

void sub_71671()
{
    DO_SCREEN_FADE_OUT( 0 );
    sub_52605( 1, 0, 0, 0 );
    sub_63708( ref l_U1207, 1 );
    sub_71712( ref l_U1013 );
    sub_71712( ref l_U1270 );
    if ((sub_68633( ref l_U1013 )) > 0)
    {
        l_U2488 = sub_71799( ref l_U1013 );
        l_U2451 = {88.07494000, 58.21689000, 13.42946000};
        l_U2454 = {29.97064000, -0.00000600, -75.80923000};
        l_U2489 = {90.96531000, 59.20985000, 14.03648000};
        l_U2492 = 140.39010000;
    }
    else if ((sub_68633( ref l_U1270 )) > 0)
    {
        l_U2488 = sub_71799( ref l_U1270 );
        l_U2451 = {85.99871000, 58.43734000, 11.08960000};
        l_U2454 = {-5.86227000, -0.00000200, -48.45287000};
        l_U2489 = {87.89513000, 60.69425000, 9.57383900};
        l_U2492 = 158.69310000;
    }
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U2488, 1 );
    CLEAR_PED_TASKS_IMMEDIATELY( l_U2488 );
    sub_65110( ref l_U2383, l_U2414, l_U2417, 1110704128, 1000 );
    sub_65110( ref l_U2420, l_U2451, l_U2454, 45, 500 );
    sub_65110( ref l_U2457, l_U2414, l_U2417, 1110704128, 1000 );
    sub_36106( l_U2488, l_U2489, l_U2492 );
    TASK_AIM_GUN_AT_COORD( l_U2488, 88.07162000, 52.45227000, 11.84583000, -1, 1 );
    SET_PED_PERFECT_ACCURACY_OVERRIDE( l_U2488, 1 );
    SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U4007, 0 );
    SET_PED_AS_ONE_SHOT_KILL( g_U4007, 1 );
    sub_2798( ref l_U2488, g_U4007 );
    sub_65370( ref l_U2383 );
    sub_72336( sub_72298(), 0.25000000 );
    DO_SCREEN_FADE_IN( 0 );
    return;
}

void sub_71712(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_34951( ref (uParam0^)[I]._fU0 );
    }
    return;
}

void sub_71799(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            return (uParam0^)[I]._fU0;
        }
    }
    return nil;
}

string sub_72298()
{
    return "WOBBLY_SHAKE";
}

void sub_72336(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    return;
}

void sub_72517(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_57729( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_72652()
{
    sub_812( "GA", "P_PASSOS_MOVE_UP_FOOD_COURT_RAMP start", 0 );
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        PED_SET_ACTION_INTENTION( g_U4007, 48, 1000, g_U649 );
        SET_PED_VISIBLE( g_U4007, 1 );
    }
    sub_812( "GA", "P_PASSOS_MOVE_UP_FOOD_COURT_RAMP end", 0 );
    return;
}

void sub_73190(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        OPEN_SEQUENCE_TASK( ref uVar8 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_AIM_GUN_AT_COORD( 0, uParam1, 50, uParam5 );
        TASK_SHOOT_AT_COORD( 0, uParam1, 9999999, uParam4, uParam5, 0 );
        CLOSE_SEQUENCE_TASK( uVar8 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar8 );
        CLEAR_SEQUENCE_TASK( uVar8 );
    }
    return;
}

void sub_73357(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        OPEN_SEQUENCE_TASK( ref uVar6 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (NOT (IS_PED_DEAD( uParam1 )))
        {
            TASK_AIM_GUN_AT_PED( 0, uParam1, 50, uParam3 );
            TASK_SHOOT_AT_PED( 0, uParam1, 9999999, uParam2, uParam3, 0, 0 );
        }
        CLOSE_SEQUENCE_TASK( uVar6 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
        CLEAR_SEQUENCE_TASK( uVar6 );
    }
    return;
}

string sub_73676()
{
    return "SMALL_EXPLOSION_SHAKE";
}

void sub_73738(boolean bParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;
    unknown uVar51;
    unknown uVar52;
    unknown uVar53;
    unknown uVar54;

    if (bParam0)
    {
        sub_812( "[SA]", "Entering progression state STATE_CONCESSIONS_CP_GONE.", "[STATE]" );
        sub_47198( ref g_U4007, 48 );
        sub_47198( ref g_U4007, 49 );
        if (NOT l_U2138)
        {
            sub_65748();
            sub_44506( ref l_U2148, 8000 );
        }
        if (NOT l_U1497)
        {
            sub_49099( l_U1270[0], 32.18077000, 62.85104000, 12.01293000, 43.00000000 );
            sub_49099( l_U1270[1], 39.67297000, 63.97662000, 11.64519000, 270.00000000 );
            sub_7757( ref l_U1270[2] );
            sub_7757( ref l_U1270[3] );
            sub_7757( ref l_U1270[4] );
            sub_50748( ref l_U1270, l_U438, 1, 0, -1 );
        }
        sub_44506( ref l_U1544, 4000 );
        l_U132 = 1;
        sub_59374();
        sub_20945( ref l_U2207, 1 );
        AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_4_5", "", 0, 7000, -1, -1082130432, 0 );
    }
    if (sub_3104( ref l_U1544 ))
    {
        sub_812( "SA", "Playing SSTD_STPH", 0 );
        sub_59254( "SSTD_STPH", ref l_U133 );
        sub_4987( ref l_U1544 );
    }
    if (l_U132 == 1)
    {
        if (NOT sub_61630())
        {
            sub_61696();
        }
    }
    if (sub_57687( ref l_U248, 0 ))
    {
        sub_812( "[SA]", "Player triggered tbActivateFoodcourtVCPF.", 0 );
        sub_7871( ref l_U1965 );
        sub_62766();
        sub_63268();
        sub_63315( g_U4007, ref g_U2500 );
        l_U132 = 0;
    }
    sub_74330();
    if (sub_3104( ref l_U2148 ))
    {
        if ((sub_14345( g_U4007, sub_1253(), 1 )) > 8.00000000)
        {
            sub_812( "AT", "Passos calls to Max from the ramp.", 0 );
            sub_74796( g_U4007, sub_1253(), 3000 );
            sub_59254( "SSTD_STPI", ref l_U2176 );
        }
        else
        {
            sub_44506( ref l_U2148, 2000 );
        }
    }
    if (sub_57687( ref l_U311, 0 ))
    {
        sub_48519( ref l_U1207, 0 );
        sub_48944( ref l_U1207, 0 );
        sub_2781( ref l_U1207._fU0 );
        sub_66888( ref l_U1207, 3, 1 );
        sub_50338( ref l_U1207, 1 );
        sub_74984( ref l_U1207, 1 );
        l_U1252 = 1;
        l_U2373 = 1;
        sub_4987( ref l_U2327 );
    }
    if (l_U1252)
    {
        if ((sub_57687( ref l_U269, 0 )) || (sub_57687( ref l_U290, 0 )))
        {
            if (NOT (IS_PED_DEAD( l_U1207._fU0 )))
            {
                sub_2271( "MAKING RAMP ENEMY RUN" );
                l_U1251 = 1;
                sub_63708( ref l_U1207, 1 );
                SET_PED_FLAG_LOCK_TO_COVER( l_U1207._fU0, 1 );
                SET_PED_FIRE_AT_COVER( l_U1207._fU0, 0 );
                OPEN_SEQUENCE_TASK( ref uVar3 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 43.32378000, 65.64288000, 12.56653000, 3, -1, 1048576000, 0, 0 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                TASK_COMBAT_MOVE_TO_COVER( 0, "foodCourt_Simple", "Corner Position24", sub_1253() );
                CLOSE_SEQUENCE_TASK( uVar3 );
                TASK_PERFORM_SEQUENCE( l_U1207._fU0, uVar3 );
                CLEAR_SEQUENCE_TASK( uVar3 );
                sub_69879( l_U1207._fU0 );
                sub_50456( ref l_U1207, l_U439, 1 );
                l_U1252 = 0;
                l_U132 = 0;
            }
        }
    }
    if (NOT l_U2373)
    {
        if ((sub_61805( l_U290 )) AND (l_U2294))
        {
            if (NOT (IS_ANY_SPEECH_PLAYING( sub_1253() )))
            {
                sub_43480( 1, sub_1253(), "MAX", ref uVar4, 2, 0 );
                sub_43719( "SSTD_TDUR", ref uVar4, 8, 1 );
                l_U2373 = 1;
            }
        }
    }
    if (NOT l_U2294)
    {
        if (sub_47117( ref g_U4007, 55, 1 ))
        {
            l_U2294 = 1;
            SET_PED_PRIMARY_LOOKAT( g_U4007, sub_1253() );
            if (NOT (IS_ANY_SPEECH_PLAYING( g_U4007 )))
            {
                sub_2271( "Playing SSTD_WTGU" );
                sub_43480( 1, g_U4007, "PASSOS", ref uVar14, 2, 0 );
                sub_43719( "SSTD_WTGU", ref uVar14, 7, 1 );
            }
            sub_44506( ref l_U2327, 15000 );
        }
    }
    else
    {
        uVar24 = nil;
        if (HAS_BULLET_IMPACTED_IN_AREA( (sub_47027( g_U4007 )) - (vector( 0, 0, 1)), 3, ref uVar24 ))
        {
            sub_75984( ref g_U4007, sub_47027( sub_1253() ), 57, 1000 );
            if (NOT (sub_67895( l_U2296 )))
            {
                sub_43398( ref l_U2296 );
                sub_43480( 1, g_U4007, "PASSOS", ref l_U2296, 2, 0 );
                sub_43719( "SSTD_PSAH", ref l_U2296, 7, 1 );
            }
        }
        else if (NOT l_U2295)
        {
            if ((IS_CONTROL_PRESSED( 0, 6 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( g_U4007, 1, 10000, 1, -1082130432 )))
            {
                l_U2295 = 1;
                sub_75984( ref g_U4007, sub_47027( sub_1253() ), 56, 1000 );
                if (NOT (sub_67895( l_U2296 )))
                {
                    sub_43398( ref l_U2296 );
                    sub_43480( 1, g_U4007, "PASSOS", ref l_U2296, 2, 0 );
                    sub_43719( "SSTD_PAAH", ref l_U2296, 7, 1 );
                }
            }
        }
        else if (NOT (IS_PED_IN_CROSSHAIR_CYLINDER( g_U4007, 1, 10000, 1, -1082130432 )))
        {
            l_U2295 = 0;
        };;;
        if (NOT (IS_ANY_SPEECH_PLAYING( g_U4007 )))
        {
            if ((IS_PLAYER_SHOOTDODGING()) AND (NOT l_U2336))
            {
                l_U2336 = 1;
            }
            else if ((NOT IS_PLAYER_SHOOTDODGING()) AND (l_U2336))
            {
                l_U2336 = 0;
                if ((sub_68093( 0, 2 )) == 0)
                {
                    sub_43480( 1, g_U4007, "PASSOS", ref uVar25, 2, 0 );
                    sub_43719( "SSTD_SDNC", ref uVar25, 7, 1 );
                    sub_2271( "PLAYING SSTD_SDNC" );
                }
            }
            else if ((NOT (IS_PED_IN_CROSSHAIR_CYLINDER( g_U4007, 3, 10000, 0, -1082130432 ))) AND ((NOT (IS_BULLET_TIME_ACTIVE( 1 ))) AND (((sub_68093( 0, 2 )) == 0) AND (sub_67547( 1 )))))
            {
                sub_43480( 1, g_U4007, "PASSOS", ref uVar35, 2, 0 );
                sub_43719( "SSTD_PSOC", ref uVar35, 7, 1 );
                sub_2271( "PLAYING SSTD_PSOC" );
            };;;
        }
    }
    if (NOT (IS_ANY_SPEECH_PLAYING( g_U4007 )))
    {
        if (sub_3104( ref l_U2327 ))
        {
            sub_2271( "Playing SSTD_DICH" );
            sub_43480( 1, g_U4007, "PASSOS", ref uVar45, 2, 0 );
            sub_43719( "SSTD_DICH", ref uVar45, 7, 1 );
        }
    }
    if (NOT l_U2138)
    {
        if (l_U269._fU64)
        {
            if ((sub_72517( ref l_U2113, l_U1207._fU0, 0 )) || (IS_PED_DEAD( l_U1207._fU0 )))
            {
                sub_36106( g_U4007, 65.98000000, 75.34000000, 9.55131800, -96.25600000 );
                sub_72652();
                l_U2138 = 1;
                CLEAR_PED_PRIMARY_LOOKAT( g_U4007 );
                l_U2294 = 0;
                l_U132 = 1;
                sub_59374();
            }
        }
    }
    if (NOT l_U1543)
    {
        if (NOT (IS_PED_DEAD( l_U1207._fU0 )))
        {
            if ((sub_76902( l_U1207._fU0, "X", "Greater", 40.50000000 )) AND (sub_76902( l_U1207._fU0, "Y", "Less", 76 )))
            {
                l_U1543 = 1;
                sub_7757( ref l_U1499 );
            }
        }
        else
        {
            sub_48944( ref l_U1499, 0 );
            sub_48519( ref l_U1499, 0 );
            sub_50338( ref l_U1499, 1 );
            sub_77226( ref l_U1499, "foodCourt_simple", "Corner Position24" );
            l_U1543 = 1;
        }
    }
    if ((sub_47132( g_U4007, 29 )) == 3)
    {
        sub_77377( g_U4007, ref l_U2350, ref l_U2351, ref l_U2352, ref l_U2353, ref l_U2354 );
    }
    if (sub_57687( ref l_U416, 0 ))
    {
        sub_2271( "Playing SSTD_MXDRPLB" );
        sub_43398( ref l_U2030 );
        sub_43480( 0, sub_1253(), "MAX", ref l_U2030, 2, 0 );
        sub_43480( 1, sub_1253(), "MAX", ref l_U2030, 2, 0 );
        sub_43719( "SSTD_MXDRPLB", ref l_U2030, 8, 1 );
    }
    if (sub_57687( ref l_U2092, 0 ))
    {
        l_U128 = 15;
        sub_812( "GA", "eCheckpointState = CP_PRESS_BOOTH", 0 );
    }
    return;
}

void sub_74330()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if (sub_59884( ref l_U2207 ))
    {
        sub_52605( 1, 0, 0, 1 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_03", "BLOOD_INSPECTION_CAM", 1, 81.32300000, 68.09700000, 11.12300000, 0, 0, 0 );
        sub_74440( sub_1253(), 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "ssta_Blood2" )))
        {
            sub_41359( 0 );
            sub_58766( "SSTD_LATB", ref uVar2 );
            FOUND_EXPLORATION_ITEM( "ssta_Blood2" );
        }
        l_U2293 = 1;
    }
    if (l_U2293)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() >= 2950)
        {
            sub_74440( sub_1253(), 1 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            sub_53482( 1, 1 );
            l_U2293 = 0;
            sub_8094( ref l_U2207, 1 );
        }
    }
    return;
}

void sub_74440(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
        sub_2271( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

void sub_74796(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND ((DOES_PED_EXIST( uParam1 )) AND ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))))
    {
        TASK_LOOK_AT_PED( uParam0, uParam1, uParam2, 0 );
    }
    return;
}

void sub_74984(int iParam0, unknown uParam1)
{
    sub_75007( iParam0 + 0, iParam0->_fU80, uParam1 );
    return;
}

void sub_75007(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_75028( uParam0, sub_1253(), uParam1, uParam2 );
    return;
}

void sub_75028(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;

    sub_2271( "MAL_UnblockAndCombatPed" );
    OPEN_SEQUENCE_TASK( ref uVar6 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        sub_2271( "MAL_UnblockAndCombatPed: Victim is not dead" );
        TASK_COMBAT_PED( 0, uParam1 );
    }
    CLOSE_SEQUENCE_TASK( uVar6 );
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        sub_2271( "MAL_UnblockAndCombatPed: Ped is not dead" );
        if (bParam3)
        {
            CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        }
        else
        {
            CLEAR_PED_TASKS( (uParam0^) );
        }
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam2 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
    }
    CLEAR_SEQUENCE_TASK( uVar6 );
    return;
}

void sub_75984(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_SET_ACTION_INTENTION( (uParam0^), uParam4, uParam5, uParam1 );
    }
    return;
}

int sub_76902(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    float fVar9;

    uVar6 = {sub_47027( uParam0 )};
    if (ARE_STRINGS_EQUAL( uParam1, "X" ))
    {
        fVar9 = uVar6._fU0;
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Y" ))
    {
        fVar9 = uVar6._fU4;
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Z" ))
    {
        fVar9 = uVar6._fU8;
    };;;
    if (ARE_STRINGS_EQUAL( uParam2, "Greater" ))
    {
        if (fVar9 > fParam3)
        {
            return 1;
        }
    }
    else if (ARE_STRINGS_EQUAL( uParam2, "Less" ))
    {
        if (fVar9 < fParam3)
        {
            return 1;
        }
    }
    return 0;
}

void sub_77226(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;

    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        OPEN_SEQUENCE_TASK( ref uVar5 );
        TASK_COMBAT_SNAP_TO_COVER( 0, uParam1, uParam2, 0 );
        CLOSE_SEQUENCE_TASK( uVar5 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar5 );
        CLEAR_SEQUENCE_TASK( uVar5 );
        SET_PED_FLAG_LOCK_TO_COVER( iParam0->_fU0, 1 );
    }
    return;
}

void sub_77377(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    sub_77432( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, 77399, 1077936128, 1069547520, 1065353216 );
    return;
}

void sub_77399(unknown uParam0)
{
    return;
}

void sub_77432(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    unknown uVar12;

    if ((sub_47132( uParam0, 29 )) == 3)
    {
        uVar12 = nil;
        if (((sub_67547( 1 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 2, 10000, 0, -1082130432 ))) || (HAS_BULLET_IMPACTED_IN_AREA( sub_47027( uParam0 ), 3, ref uVar12 )))
        {
            sub_2271( "PLAYER SHOT AT PASSOS" );
            sub_75984( ref uParam0, sub_47027( sub_1253() ), 34, 1000 );
            SET_PED_PRIMARY_LOOKAT( uParam0, sub_1253() );
            (uParam1^) = 1;
            break;
            uParam6;
            0;
            break;
        }
        if (NOT (uParam2^))
        {
            if (((sub_47132( uParam0, 32 )) != 3) AND (((sub_47132( uParam0, 33 )) != 3) AND (IS_PED_TOUCHING_PED( sub_1253(), uParam0 ))))
            {
                sub_2271( "BAD TOUCH!!" );
                (uParam2^) = 1;
                (uParam1^) = 1;
                sub_75984( ref uParam0, sub_47027( sub_1253() ), 35, 1000 );
                SET_PED_PRIMARY_LOOKAT( uParam0, sub_1253() );
                break;
                uParam6;
                1;
                break;
            }
        }
        else if (NOT (IS_PED_TOUCHING_PED( sub_1253(), uParam0 )))
        {
            (uParam2^) = 0;
        }
        if (NOT (uParam3^))
        {
            if (sub_77760( ref uParam0, 300, 100, -1, 0, 0 ))
            {
                if ((IS_CONTROL_PRESSED( 0, 6 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 1, 10000, 0, -1082130432 )))
                {
                    (uParam1^) = 1;
                    (uParam3^) = 1;
                    sub_75984( ref uParam0, sub_47027( sub_1253() ), 32, 1000 );
                    SET_PED_PRIMARY_LOOKAT( uParam0, sub_1253() );
                    sub_2271( "PLAYER AIMING AT PASSOS" );
                    break;
                    uParam6;
                    2;
                    break;
                }
            }
        }
        else if ((NOT (IS_CONTROL_PRESSED( 0, 6 ))) || (NOT (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 1.50000000, 10000, 0, -1082130432 ))))
        {
            if ((sub_47132( uParam0, 32 )) != 3)
            {
                (uParam3^) = 0;
                sub_2271( "PLAYER NO LONGER AIMING AT PASSOS" );
            }
        }
        if (NOT (uParam1^))
        {
            if ((sub_77760( ref uParam0, uParam9, 180, -1, 46, 0 )) || ((sub_77760( ref uParam0, uParam8, 45, -1, 31, 0 )) || (sub_77760( ref uParam0, uParam7, 30, -1, 0, 0 ))))
            {
                sub_2271( "INTERRUPTING PASSOS" );
                sub_75984( ref uParam0, sub_47027( sub_1253() ), 33, 1000 );
                SET_PED_PRIMARY_LOOKAT( uParam0, sub_1253() );
                (uParam1^) = 1;
            }
        }
        else if ((sub_77760( ref uParam0, -1, 180, uParam8 + 1, 91, 0 )) || (sub_77760( ref uParam0, -1, 90, uParam7 + 1, 0, 0 )))
        {
            if ((NOT (uParam2^)) AND (NOT (uParam3^)))
            {
                if ((sub_47117( ref uParam0, 35, 1 )) || ((sub_47117( ref uParam0, 32, 1 )) || ((sub_47117( ref uParam0, 34, 1 )) || (sub_47117( ref uParam0, 33, 1 )))))
                {
                    sub_47198( ref uParam0, 33 );
                    sub_47198( ref uParam0, 34 );
                    sub_47198( ref uParam0, 32 );
                    sub_47198( ref uParam0, 35 );
                    sub_47198( ref uParam0, 31 );
                    sub_57844( uParam0, 36, 1000 );
                    CLEAR_PED_PRIMARY_LOOKAT( uParam0 );
                    (uParam1^) = 0;
                    (uParam3^) = 0;
                    (uParam2^) = 0;
                    (uParam4^) = 0;
                    sub_2389( iParam5, sub_68093( 10000, 15000 ), 1, 0 );
                    return;
                }
            }
        }
        if ((sub_47132( uParam0, 30 )) == 3)
        {
            if (sub_3104( iParam5 ))
            {
                sub_75984( ref uParam0, sub_47027( sub_1253() ), 31, 1000 );
                (uParam4^)++;
                break;
                uParam6;
                3;
                break;
            }
            else if ((uParam4^) < 3)
            {
                if ((iParam5->_fU16) || (NOT (sub_4478( iParam5 ))))
                {
                    sub_2389( iParam5, sub_68093( 10000, 15000 ), 1, 0 );
                    sub_2527( iParam5 );
                }
            }
        }
    }
    sub_47117( ref uParam0, 31, 1 );
    sub_47117( ref uParam0, 36, 1 );
    return;
}

int sub_77760(unknown uParam0, float fParam1, unknown uParam2, float fParam3, float fParam4, boolean bParam5)
{
    float fVar8;

    if ((NOT (IS_PED_DEAD( sub_1253() ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        fVar8 = sub_14345( (uParam0^), sub_1253(), 0 );
        if ((fVar8 > fParam1) AND (fParam1 > -1))
        {
            return 0;
        }
        else if ((fVar8 < fParam3) AND (fParam3 > -1))
        {
            return 0;
        }
        else if (NOT (IS_PED_FACING_PED( (uParam0^), sub_1253(), uParam2 )))
        {
            return 0;
        }
        else if ((IS_PED_FACING_PED( (uParam0^), sub_1253(), fParam4 )) AND (fParam4 > 0))
        {
            return 0;
        }
        else if (bParam5)
        {
            sub_45758( fParam4 );
        }
        return 1;;;;;
    }
    return 0;
}

void sub_78916(boolean bParam0)
{
    if (bParam0)
    {
        sub_78938( g_U4007 );
        sub_79170();
        sub_48469( ref l_U1270, 0, 0, -1 );
        sub_48894( ref l_U1270, 0, 0, -1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1270[0]._fU0, 0 );
        CLEAR_PED_TASKS( l_U1270[0]._fU0 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U1270[0]._fU0, 33.10590000, 66.71551000, 12.55032000, sub_1253(), 0, 1092616192, 1101004800, -1082130432, 3 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1270[1]._fU0, 0 );
        CLEAR_PED_TASKS( l_U1270[1]._fU0 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U1270[1]._fU0, 42.29852000, 66.18176000, 12.55529000, sub_1253(), 0, 1092616192, 1101004800, -1082130432, 3 );
        sub_79682( ref g_U888[7] );
        l_U132 = 0;
    }
    sub_74330();
    if (NOT l_U1543)
    {
        if (NOT (IS_PED_DEAD( l_U1207._fU0 )))
        {
            if ((sub_76902( l_U1207._fU0, "X", "Greater", 40.50000000 )) AND (sub_76902( l_U1207._fU0, "Y", "Less", 76 )))
            {
                l_U1543 = 1;
                sub_7757( ref l_U1499 );
            }
        }
        else
        {
            sub_48944( ref l_U1499, 0 );
            sub_48519( ref l_U1499, 0 );
            sub_50338( ref l_U1499, 1 );
            sub_77226( ref l_U1499, "foodCourt_simple", "Corner Position24" );
            l_U1543 = 1;
        }
    }
    if (NOT l_U2187)
    {
        if (sub_79945( "Y", "Less", 73.50000000 ))
        {
            sub_66920( ref l_U2040, 3 );
            sub_2781( ref l_U2040 );
            sub_80171( l_U2040 );
            sub_75007( ref l_U2040, 2, 0 );
            l_U2187 = 1;
            sub_50577( l_U1207, 0 );
            if (NOT (IS_PED_DEAD( l_U1207._fU0 )))
            {
                SET_PED_FLAG_LOCK_TO_COVER( l_U1207._fU0, 0 );
                SET_PED_FIRE_AT_COVER( l_U1207._fU0, 1 );
            }
            if (NOT (IS_PED_DEAD( l_U1499._fU0 )))
            {
                SET_PED_FLAG_LOCK_TO_COVER( l_U1499._fU0, 0 );
                SET_PED_FIRE_AT_COVER( l_U1499._fU0, 1 );
            }
        }
    }
    if (NOT l_U2193)
    {
        if ((IS_PED_DEAD( l_U1499._fU0 )) AND (((sub_68633( ref l_U1270 )) < 1) AND ((NOT (IS_PED_DEAD( l_U1207._fU0 ))) AND (IS_PED_DEAD( l_U2040 )))))
        {
            sub_35159( l_U1207._fU0, 1 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
            l_U2193 = 1;
        }
        else if ((IS_PED_DEAD( l_U1499._fU0 )) AND (((sub_68633( ref l_U1270 )) < 1) AND ((IS_PED_DEAD( l_U1207._fU0 )) AND (NOT (IS_PED_DEAD( l_U2040 ))))))
        {
            sub_35159( l_U2040, 1 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
            l_U2193 = 1;
        }
        else if ((IS_PED_DEAD( l_U1499._fU0 )) AND ((IS_PED_DEAD( l_U2040 )) AND ((IS_PED_DEAD( l_U1207._fU0 )) AND ((sub_68633( ref l_U1270 )) == 1))))
        {
            sub_68932( ref l_U1270, 0, 0, 1 );
            l_U2193 = 1;
        }
        else if (((sub_68633( ref l_U1270 )) < 1) AND ((IS_PED_DEAD( l_U1207._fU0 )) AND ((IS_PED_DEAD( l_U2040 )) AND (NOT (IS_PED_DEAD( l_U1499._fU0 ))))))
        {
            sub_35159( l_U1499._fU0, 1 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
            l_U2193 = 1;
        };;;;
    }
    if ((sub_80770()) AND (NOT l_U2134))
    {
        sub_812( "GA", "Passos arrived at press booth door.", 0 );
        sub_2527( ref l_U2139 );
        l_U2134 = 1;
    }
    if ((NOT l_U2136) AND (l_U2134))
    {
        if (sub_3104( ref l_U2139 ))
        {
            sub_80964();
        }
    }
    if (sub_57687( ref l_U2113, 0 ))
    {
        sub_812( "GA", "Player entered the press booth", 0 );
        l_U2135 = 1;
    }
    if ((IS_PED_DEAD( l_U1499._fU0 )) AND (((sub_68633( ref l_U1270 )) < 1) AND ((IS_PED_DEAD( l_U1207._fU0 )) AND ((NOT l_U2136) AND ((l_U2134) AND ((l_U2135) AND (l_U2187)))))))
    {
        sub_81539();
        l_U2136 = 1;
    }
    if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND ((sub_81827()) AND ((NOT l_U2137) AND (l_U2136))))
    {
        sub_81934();
        l_U2137 = 1;
        l_U128 = 16;
        sub_812( "GA", "eCheckpointState = CP_NIS_PASSOS_SHOOTS_SNIPER", 0 );
    }
    if ((sub_47132( g_U4007, 29 )) == 3)
    {
        sub_77377( g_U4007, ref l_U2350, ref l_U2351, ref l_U2352, ref l_U2353, ref l_U2354 );
    }
    if ((IS_PED_DEAD( l_U1499._fU0 )) AND (((sub_68633( ref l_U1270 )) < 1) AND ((IS_PED_DEAD( l_U1207._fU0 )) AND (IS_PED_DEAD( l_U2040 )))))
    {
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
        l_U128 = 17;
        sub_812( "GA", "eCheckpointState = CP_FINISHED", 0 );
    }
    return;
}

void sub_78938(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0 )))
    {
        if (iParam0 == sub_1253())
        {
            sub_812( "[AT]", "Clearing headtracking on Max.", 0 );
        }
        else
        {
            sub_812( "[AT]", "Clearing headtracking on non-player ped.", 0 );
        }
        TASK_CLEAR_LOOK_AT( iParam0 );
    }
    else
    {
        SCRIPT_ASSERT( "Passed invalid or dead ped to P_CLEAR_PED_HEADTRACKING!", 0 );
    }
    return;
}

void sub_79170()
{
    sub_812( "GA", "P_PASSOS_MOVE_TO_PRESS_LOUNGE start", 0 );
    ISEQ_UNREGISTER_ENTITY( -813779471, "passos_entity" );
    ISEQ_TERMINATE( -813779471 );
    if ((NOT (IS_PED_DEAD( sub_1253() ))) AND (NOT (IS_PED_DEAD( g_U4007 ))))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( g_U4007 );
        ISEQ_REGISTER_ENTITY( -647680815, "passos_entity", g_U4007, 0 );
        sub_32657( g_U4007, 47.80000000, 81.90000000, 12.99700000, 174.00000000 );
        SET_ROOM_FOR_PED_BY_NAME( g_U4007, ref g_U2508 );
        ISEQ_START( -647680815 );
    }
    sub_812( "GA", "P_PASSOS_MOVE_TO_PRESS_LOUNGE end", 0 );
    return;
}

void sub_79682(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

int sub_79945(unknown uParam0, unknown uParam1, float fParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    float fVar8;

    uVar5 = {sub_47027( sub_1253() )};
    if (ARE_STRINGS_EQUAL( uParam0, "X" ))
    {
        fVar8 = uVar5._fU0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Y" ))
    {
        fVar8 = uVar5._fU4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Z" ))
    {
        fVar8 = uVar5._fU8;
    };;;
    if (ARE_STRINGS_EQUAL( uParam1, "Greater" ))
    {
        if (fVar8 > fParam2)
        {
            return 1;
        }
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Less" ))
    {
        if (fVar8 < fParam2)
        {
            return 1;
        }
    }
    return 0;
}

void sub_80171(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( uParam0, 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( uParam0, 0 );
    }
    return;
}

int sub_80770()
{
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        if (((PED_GET_ACTION_INTENTION_STATUS( g_U4007, 52 )) == 1) AND (ISEQ_QUERY_ENTITY_STATE( -647680815, "passos_entity", 3 )))
        {
            return 1;
        }
    }
    return 0;
}

void sub_80964()
{
    sub_812( "GA", "P_PASSOS_SPEAK_MOVE_TO_PRESS_BOOTH start", 0 );
    if ((l_U2186 < 2) AND ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND ((NOT (IS_PED_DEAD( sub_1253() ))) AND ((ISEQ_QUERY_ENTITY_STATE( -647680815, "passos_entity", 3 )) AND (NOT (IS_PED_DEAD( g_U4007 )))))))
    {
        PED_SET_ACTION_INTENTION( g_U4007, 37, 100, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1253() ) );
        if (l_U2186 == 0)
        {
            sub_43398( ref l_U2166 );
            sub_43480( 1, g_U4007, "PASSOS", ref l_U2166, 2, 0 );
            sub_43480( 0, sub_1253(), "MAX", ref l_U2166, 2, 0 );
            sub_43719( "SSTD_STPJ", ref l_U2166, 7, 1 );
            sub_44506( ref l_U2139, 10000 );
        }
        else
        {
            sub_43398( ref l_U2166 );
            sub_43480( 1, g_U4007, "PASSOS", ref l_U2166, 2, 0 );
            sub_43480( 0, sub_1253(), "MAX", ref l_U2166, 2, 0 );
            sub_43719( "SSTD_SWGB", ref l_U2166, 7, 1 );
        }
        l_U2186++;
    }
    sub_812( "GA", "P_PASSOS_SPEAK_MOVE_TO_PRESS_BOOTH end", 0 );
    return;
}

void sub_81539()
{
    sub_812( "GA", "P_PASSOS_MOVE_IN_PRESS_BOOTH start", 0 );
    sub_51147( ref l_U2166, 0 );
    if ((NOT (IS_PED_DEAD( l_U2040 ))) AND ((ISEQ_QUERY_ENTITY_STATE( -647680815, "passos_entity", 3 )) AND (NOT (IS_PED_DEAD( g_U4007 )))))
    {
        SET_PED_HEADING( g_U4007, 80.00000000 );
        PED_SET_ACTION_INTENTION( g_U4007, 47, 10000, 0.00000000, 0.00000000, 0.00000000 );
        SET_PED_DEFAULT_AIM_AT_PED( g_U4007, l_U2040 );
        TASK_LOOK_AT_PED( g_U4007, l_U2040, -1, 0 );
    }
    sub_812( "GA", "P_PASSOS_MOVE_IN_PRESS_BOOTH end", 0 );
    return;
}

int sub_81827()
{
    if ((NOT (IS_PED_DEAD( l_U2040 ))) AND (NOT (IS_PED_DEAD( g_U4007 ))))
    {
        if ((ISEQ_QUERY_STATE( -647680815, 6 )) || ((PED_GET_ACTION_INTENTION_STATUS( g_U4007, 50 )) == 1))
        {
            return 1;
        }
    }
    return 0;
}

void sub_81934()
{
    sub_812( "AT", "P_PASSOS_IN_PRESS_SHOOT_AT_SNIPER_START start", 0 );
    sub_65110( ref l_U2493, 40.48429000, 68.97411000, 13.53943000, 8.03616500, -0.00000700, -4.95377300, 45.00000000, 800 );
    sub_65110( ref l_U2524, 34.49781000, 67.67491000, 13.46317000, 1.56934300, -0.00002300, 112.08950000, 45.00000000, 2000 );
    sub_52605( 1, 0, 0, 0 );
    SET_PED_INVINCIBLE( g_U4007, 1 );
    sub_32657( g_U4007, 41.24318000, 71.75642000, 12.56856000, 130.44760000 );
    if (NOT (IS_PED_DEAD( l_U2040 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U2040, 1 );
        sub_32657( l_U2040, 31.64731000, 65.62265000, 12.55025000, 13.62000000 );
        TASK_STAND_STILL( l_U2040, -1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U2040, 1 );
        sub_82263( l_U2040, "PIST_NORMAL_04_F" );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
    }
    if (NOT (IS_PED_DEAD( g_U4007 )))
    {
        sub_82526( g_U4007 );
        sub_47445( g_U4007, "/Global/PASSOS_VIG_35_CD/PASSOS_VIG_35_CD_CONTROL/PASSOS_VIG_35_D_BOOTH/PASSOS_SHOOTS_THE_SNIPER" );
        SET_PED_CAN_INITIATE_BULLET_CAM( g_U4007, 1 );
        SET_PED_PERFECT_ACCURACY_OVERRIDE( g_U4007, 1 );
    }
    if (NOT (IS_PED_DEAD( sub_1253() )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( sub_1253() );
        sub_32657( sub_1253(), 42.20940000, 69.78891000, 12.56539000, 191.72340000 );
    }
    sub_65370( ref l_U2493 );
    sub_812( "AT", "P_PASSOS_IN_PRESS_SHOOT_AT_SNIPER_START end", 0 );
    return;
}

void sub_82263(unknown Result, unknown uParam1)
{
    if (sub_35159( Result, 1 ))
    {
        sub_2271( "MAL_SetCanTriggerBulletCamWithSpecificCam has added bullet cam, moving on" );
        sub_11907( uParam1 );
        if (NOT (IS_PED_DEAD( Result )))
        {
            sub_2271( "MAL_SetCanTriggerBulletCamWithSpecificCam setting BC pref" );
            SET_BULLET_CAM_PREF( Result, uParam1, uParam1, uParam1, 0, 1, 0, 0, 0, 0, 0, 0, 0 );
            return Result;
        }
    }
    return nil;
}

void sub_82526(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        sub_812( "[SA]", "Clearing ACT_INT_SEQ_ACTION01 - ACT_INT_SEQ_ACTION12 for ped.", 0 );
        PED_FINISH_ACTION_INTENTION( uParam0, 47 );
        PED_FINISH_ACTION_INTENTION( uParam0, 48 );
        PED_FINISH_ACTION_INTENTION( uParam0, 49 );
        PED_FINISH_ACTION_INTENTION( uParam0, 50 );
        PED_FINISH_ACTION_INTENTION( uParam0, 51 );
        PED_FINISH_ACTION_INTENTION( uParam0, 52 );
        PED_FINISH_ACTION_INTENTION( uParam0, 53 );
        PED_FINISH_ACTION_INTENTION( uParam0, 54 );
        PED_FINISH_ACTION_INTENTION( uParam0, 55 );
        PED_FINISH_ACTION_INTENTION( uParam0, 56 );
        PED_FINISH_ACTION_INTENTION( uParam0, 57 );
        PED_FINISH_ACTION_INTENTION( uParam0, 58 );
    }
    return;
}

void sub_83424(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

void sub_83501(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_83742()
{
    sub_812( "SP", "P_STORES_SNIPER_CUTSCENE_MEMORY_PREP", "###" );
    sub_6035( -1310389432, 0 );
    sub_6243( -1310389432, ref g_U1263 );
    sub_6035( -263036009, 0 );
    sub_6243( -263036009, ref g_U1263 );
    sub_6035( 727272178, 0 );
    sub_6243( 727272178, ref g_U1263 );
    sub_83907( "LEVEL_S_STAD_CP_03", ref g_U1354 );
    sub_84085( g_U2382, ref g_U1069 );
    sub_7448( ref l_U441 );
    sub_7448( ref l_U445 );
    sub_7725( ref g_U4008 );
    sub_7725( ref g_U4141 );
    sub_7725( ref l_U1013 );
    sub_7655( ref g_U4187 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( 65476, 1065353216, 0 );
    sub_29215( "03_03_STADIUM", 0 );
    return;
}

void sub_83907(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_6355( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_84085(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_6355( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_84565()
{
    sub_812( "GA", "P_RELEASE_CON_ASSETS start", 0 );
    sub_84623( ref l_U113, ref g_U1069 );
    sub_84690( ref l_U124, ref g_U1214 );
    sub_83907( "DAM_KO", ref g_U1354 );
    sub_83907( "DAM_DEAD", ref g_U1354 );
    sub_83907( "LEVEL_S_STAD_CP_03", ref g_U1354 );
    sub_83907( "LEVEL_S_STAD_PU", ref g_U1354 );
    sub_83907( "PAS_INT", ref g_U1354 );
    sub_85013( 0 );
    sub_812( "GA", "P_RELEASE_CON_ASSETS end", 0 );
    return;
}

void sub_84623(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_84085( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_84690(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_84725( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_84725(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_6355( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_85013(boolean bParam0)
{
    if (NOT bParam0)
    {
        sub_83907( "PLGE_RIFLE_CROUCH", ref g_U1354 );
        sub_83907( "PLGE_PSTL_CROUCH", ref g_U1354 );
        sub_83907( "PLGE_RIFLE_CORE", ref g_U1354 );
        sub_83907( "PLGE_PSTL_CORE", ref g_U1354 );
        sub_83907( "PLGE_RIFLE_CORE_RELOAD", ref g_U1354 );
        sub_83907( "PLGE_PSTL_CORE_RELOAD", ref g_U1354 );
        sub_83907( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
        sub_83907( "PLGE_PSTL_HANDSIG", ref g_U1354 );
        sub_83907( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
        sub_83907( "PLGE_PSTL_ACTIONS", ref g_U1354 );
        sub_83907( "PLGE_RIFLE_KNEE", ref g_U1354 );
        sub_83907( "PLGE_PSTL_KNEE", ref g_U1354 );
        sub_83907( "PLGE_RIFLE_COVER", ref g_U1354 );
        sub_83907( "PLGE_PSTL_COVER", ref g_U1354 );
        sub_83907( "PLGE_RIFLE_REACT", ref g_U1354 );
        sub_83907( "PLGE_PSTL_REACT", ref g_U1354 );
        sub_83907( "PLGE_RIFLE_COVER_EXIT", ref g_U1354 );
        sub_83907( "PLGE_PSTL_COVER_EXIT", ref g_U1354 );
        sub_83907( "PLGE_PSTL_FULLBODY", ref g_U1354 );
    }
    else
    {
        sub_85609( "PLGE_RIFLE_CROUCH" );
        sub_85609( "PLGE_PSTL_CROUCH" );
        sub_85609( "PLGE_RIFLE_CORE" );
        sub_85609( "PLGE_PSTL_CORE" );
        sub_85609( "PLGE_RIFLE_CORE_RELOAD" );
        sub_85609( "PLGE_PSTL_CORE_RELOAD" );
        sub_85609( "PLGE_RIFLE_HANDSIG" );
        sub_85609( "PLGE_PSTL_HANDSIG" );
        sub_85609( "PLGE_RIFLE_ACTIONS" );
        sub_85609( "PLGE_PSTL_ACTIONS" );
        sub_85609( "PLGE_RIFLE_KNEE" );
        sub_85609( "PLGE_PSTL_KNEE" );
        sub_85609( "PLGE_RIFLE_COVER" );
        sub_85609( "PLGE_PSTL_COVER" );
        sub_85609( "PLGE_RIFLE_REACT" );
        sub_85609( "PLGE_PSTL_REACT" );
        sub_85609( "PLGE_RIFLE_COVER_EXIT" );
        sub_85609( "PLGE_PSTL_COVER_EXIT" );
        sub_85609( "PLGE_PSTL_FULLBODY" );
    }
    return;
}

void sub_85609(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


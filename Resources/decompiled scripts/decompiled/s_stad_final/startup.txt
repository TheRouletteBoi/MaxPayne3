void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 500;
    l_U48 = 3000;
    l_U58 = 3500;
    l_U68 = 1000;
    l_U85 = 0;
    l_U86 = "SpeechMain";
    g_U0 = 1;
    g_U648 = 0;
    g_U649 = {0, 0, 0};
    StrCopy( ref g_U652, "DUMMY", 32 );
    g_U660 = 1;
    g_U665 = 0;
    g_U666 = 0;
    g_U667 = 0;
    g_U670 = 0;
    g_U715 = 0.05000000;
    g_U716 = 0;
    g_U717 = 0;
    g_U718 = 0;
    g_U719 = 0;
    g_U720 = 0;
    g_U721 = 0;
    g_U722 = 0;
    StrCopy( ref g_U723, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref g_U731, "DEFAULT_SPLINE_CAMERA", 32 );
    g_U847 = 191622073;
    g_U848 = -1948423010;
    g_U849 = 2106052595;
    g_U850 = -1546164568;
    g_U851 = 784366720;
    g_U852 = -1234596916;
    g_U853 = 0;
    g_U2376 = 1258994346;
    g_U2377 = -442116668;
    g_U2378 = -2056814065;
    g_U2379 = -442116668;
    g_U2380 = -2128835409;
    g_U2381 = -2128835409;
    g_U2382 = -1706575479;
    g_U2383 = -557019956;
    g_U2384 = -557019956;
    g_U2385 = -557019956;
    g_U2386 = -557019956;
    g_U2387 = 1395128854;
    g_U2388 = 1395128854;
    g_U2389 = 14440591;
    g_U2390 = 789433855;
    g_U2391 = 627848785;
    g_U2392 = -1299745148;
    g_U2393 = -1067576783;
    g_U2394 = 1304526250;
    g_U2395 = -1327713051;
    g_U2396 = -1327713051;
    g_U2397 = 1425881067;
    g_U2398 = -341254214;
    g_U2399 = -610835743;
    g_U2400 = -711165204;
    g_U2401 = -457434837;
    g_U2402 = -84195927;
    g_U2403 = 176710851;
    g_U2404 = -1096325662;
    g_U2405 = 1489148438;
    g_U2406 = 1798127339;
    g_U2407 = 1487247832;
    g_U2408 = 91940142;
    g_U2409 = -201041085;
    g_U2410 = 2147156445;
    g_U2411 = 490079429;
    g_U2412 = -1934361818;
    g_U2413 = -400247415;
    g_U2414 = -118289592;
    g_U2415 = 1526473509;
    g_U2416 = 754345250;
    g_U2417 = -449240593;
    g_U2418 = -1837197164;
    g_U2419 = 1229553429;
    g_U2420 = -1321176195;
    g_U2421 = 1532315556;
    g_U2422 = 1762648857;
    g_U2423 = -2050351987;
    g_U2424 = -1819559920;
    g_U2425 = 305902966;
    g_U2426 = 583685779;
    g_U2427 = 814150156;
    g_U2428 = 1332883422;
    g_U2429 = -391749048;
    g_U2430 = 125935614;
    g_U2431 = 355679073;
    g_U2432 = 562385925;
    g_U2433 = -1609248478;
    g_U2434 = -190282338;
    g_U2435 = 1495428076;
    StrCopy( ref g_U2436, "Room_EntranceA", 32 );
    StrCopy( ref g_U2444, "Room_EntranceB", 32 );
    StrCopy( ref g_U2452, "Room_Shower", 32 );
    StrCopy( ref g_U2460, "Room_Training", 32 );
    StrCopy( ref g_U2468, "Room_Press", 32 );
    StrCopy( ref g_U2476, "Room_Hall", 32 );
    StrCopy( ref g_U2484, "Room_Store", 32 );
    StrCopy( ref g_U2492, "Room_Cafe", 32 );
    StrCopy( ref g_U2500, "Room_Foodcourt", 32 );
    StrCopy( ref g_U2508, "Room_Ramp", 32 );
    StrCopy( ref g_U2516, "Room_Booth", 32 );
    StrCopy( ref g_U2524, "Room_Offices", 32 );
    StrCopy( ref g_U2532, "Room_Elevators", 32 );
    StrCopy( ref g_U2540, "ElevatorRoom", 32 );
    StrCopy( ref g_U2548, "Room_Vip", 32 );
    StrCopy( ref g_U2556, "Room_Storage", 32 );
    StrCopy( ref g_U2564, "Room_Foyer", 32 );
    StrCopy( ref g_U2572, "LEVEL_S_BUS_GAR", 32 );
    StrCopy( ref g_U2580, "S_STAD_MPM", 32 );
    StrCopy( ref g_U2588, "S_STAD_PLY_INJ", 32 );
    StrCopy( ref g_U2596, "S_STAD_MAX_SNIPE", 32 );
    StrCopy( ref g_U2604, "S_STAD_MAXCOVER", 32 );
    StrCopy( ref g_U2612, "S_STAD_LAD_01", 32 );
    StrCopy( ref g_U2620, "S_STAD_LAD_02", 32 );
    StrCopy( ref g_U2628, "S_STAD_SNIP2", 32 );
    StrCopy( ref g_U2636, "S_STAD_SNIPBEH", 32 );
    StrCopy( ref g_U2644, "S_STAD_DEADVCPF", 32 );
    StrCopy( ref g_U2652, "S_STAD_P5_EDI_DOOR", 32 );
    StrCopy( ref g_U2660, "S_STAD_P7_EDI_AT_B", 32 );
    StrCopy( ref g_U2668, "S_STAD_P9_EDI_AT_D", 32 );
    StrCopy( ref g_U2676, "S_STAD_P17_EDI_ELEV", 32 );
    StrCopy( ref g_U2684, "S_STAD_03_02_BLENDOUT", 32 );
    StrCopy( ref g_U2692, "S_STAD_P13_FG", 32 );
    StrCopy( ref g_U2700, "S_STAD_PAS_HALL", 32 );
    StrCopy( ref g_U2708, "S_STAD_P22_EDI_SUPP", 32 );
    StrCopy( ref g_U2716, "S_STAD_P24_EDI_LEAD", 32 );
    StrCopy( ref g_U2724, "S_STAD_P28_MAX_ELEV", 32 );
    StrCopy( ref g_U2732, "S_STAD_P27_MAX_ATT", 32 );
    StrCopy( ref g_U2740, "S_STAD_04BLEADOUT", 32 );
    StrCopy( ref g_U2748, "S_STAD_PAS_FOODCOURT", 32 );
    StrCopy( ref g_U2756, "S_STAD_STORESDEAD", 32 );
    StrCopy( ref g_U2764, "S_STAD_V29_BODY", 32 );
    StrCopy( ref g_U2772, "S_STAD_03_02a_BLENDOUT", 32 );
    StrCopy( ref g_U2780, "S_STAD_MID3B_PASSOS_COVER", 32 );
    StrCopy( ref g_U2788, "S_STAD_03_04A_BLENDIN", 32 );
    StrCopy( ref g_U2796, "S_STAD_03_03_BLENDOUT", 32 );
    StrCopy( ref g_U2804, "s_stad_v18_PracCS", 32 );
    StrCopy( ref g_U2812, "S_STAD_VIG32", 32 );
    StrCopy( ref g_U2820, "s_stad_v35_PassMove", 32 );
    StrCopy( ref g_U2828, "s_stad_v35CD_Pass", 32 );
    StrCopy( ref g_U2836, "S_STAD_VIG37", 32 );
    StrCopy( ref g_U2844, "S_STAD_VIG38", 32 );
    StrCopy( ref g_U2852, "S_STAD_VIG39", 32 );
    StrCopy( ref g_U2860, "S_STAD_VIG41", 32 );
    StrCopy( ref g_U2868, "S_STAD_V42_PATROL", 32 );
    StrCopy( ref g_U2876, "S_STAD_V21_INTER", 32 );
    g_U3703 = 0;
    g_U3868 = 0;
    g_U3869 = 0;
    g_U3870 = 0;
    g_U3871 = 0;
    g_U3872 = 0;
    g_U3873 = 0;
    g_U3874 = 0;
    g_U3875 = 0;
    g_U3876 = 0;
    g_U3877 = 0;
    g_U3878 = 0;
    g_U3879 = 0;
    g_U3880 = 0;
    g_U3881 = 0;
    g_U3882 = 0;
    g_U3883 = 0;
    g_U3884 = 0;
    g_U3885 = 0;
    g_U3886 = 0;
    g_U3887 = 0;
    StrCopy( ref g_U3888, "AIT_EXPERT", 32 );
    StrCopy( ref g_U3896, "AIT_EXPERT", 32 );
    StrCopy( ref g_U3904, "AIT_NOVICE", 32 );
    StrCopy( ref g_U3912, "AIT_NORMAL", 32 );
    StrCopy( ref g_U3920, "AIT_EXPERT", 32 );
    StrCopy( ref g_U3928, "AIT_EXPERT", 32 );
    g_U3936 = 0;
    g_U3937 = 0;
    g_U3938 = 0;
    g_U3939 = 0;
    g_U3940 = 0;
    g_U3953 = {30.64000000, -82.03000000, 46.45000000};
    g_U3956 = {9.54000000, -82.03000000, 46.45000000};
    g_U3959 = {-9.99000000, -82.03000000, 46.45000000};
    g_U3962 = {-30.57000000, -82.03000000, 46.45000000};
    g_U3965 = {0.00100000, -82.37400000, 49.43400000};
    g_U3968 = 1;
    g_U3969 = 0;
    g_U3970 = 0;
    g_U3971 = 0;
    g_U3972 = {30.80000000, 58.67000000, -3.20000000};
    g_U3976 = {31.85000000, 60.76800000, -2.10000000};
    g_U3979 = 1.00000000;
    g_U3980 = 0.00000000;
    g_U3990 = 2400;
    g_U3991 = 0;
    g_U4001 = 5000;
    StrCopy( ref g_U4003, "SSTD_MFSP", 16 );
    g_U4192 = 0;
    g_U4385 = {33.85868000, 61.55048000, 11.64522000};
    g_U4388 = 111.10340000;
    g_U4406 = 0;
    g_U4407 = 1;
    g_U4408 = 0;
    g_U4409 = 0;
    g_U4410 = 0;
    g_U4412 = 1;
    g_U4413 = 0;
    g_U4414 = 0;
    g_U4429 = {-45.66900000, 70.30300000, 13.00300000};
    g_U4432 = 160.00000000;
    g_U4433 = 1;
    g_U4434 = 0;
    g_U4435 = 0;
    g_U4436 = 0;
    g_U4437 = 1;
    g_U4438 = 0;
    g_U4440 = {-105.76000000, 20.56500000, 14.28800000};
    g_U4443 = {0, 0, 0};
    sub_3169( "Script s_stad startup.sc is starting..." );
    l_U85 = 1;
    while (IS_EXITFLAG_SET() == 0)
    {
        switch (l_U85)
        {
            case 0: break;
            case 1:
            sub_3169( "eScriptState = SCRIPT_SETUP" );
            SET_STREAMING( 0 );
            SET_DEBUG_ACTIVE( 0 );
            SET_RANDOM_SEED( GET_GAME_TIMER() );
            SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
            FREEZE_TIME_OF_DAY( 21, 0 );
            DO_SCREEN_FADE_OUT( 0 );
            g_U854 = GET_CHECKPOINT_SELECTED();
            g_U855 = g_U854;
            sub_3413();
            sub_5721();
            sub_18237();
            sub_18421();
            sub_26039();
            SET_CAM_VIEW_MODE( 1 );
            l_U80._fU0 = 2;
            l_U80._fU8 = 2;
            SET_RICH_PRESENCE( ref l_U80 );
            if (IS_DEATH_PANEL_WIPE_ALLOWED())
            {
                ENABLE_BULLET_CAMERA_WIPE( 1 );
            }
            if (g_U854 < 15)
            {
                SET_STREAMING( 1 );
                sub_26259();
                sub_26981();
                LOAD_ADDITIONAL_TEXT( "MAXAUD", 2 );
                sub_27774();
                l_U85 = 3;
                sub_3169( "eScriptState = SCRIPT_LOAD_PERSISTENT" );
            }
            else
            {
                l_U85 = 2;
                sub_3169( "eScriptState = SCRIPT_START_DEBUG" );
            }
            break;
            case 2:
            sub_3169( "eScriptState = SCRIPT_START_DEBUG" );
            SET_STREAMING( 1 );
            sub_30797( g_U854 );
            DO_SCREEN_FADE_IN( 0 );
            if ((g_U854 < 34) AND (g_U854 > 15))
            {
                sub_31469( sub_5839(), 68019059, 25000, 0, 1 );
            }
            if (g_U854 == 31)
            {
                sub_31824( "stad_Isequences", 8192 );
            }
            else if (g_U854 == 32)
            {
                sub_31824( "stad_Isequences2", 8192 );
            }
            else if (g_U854 == 33)
            {
                sub_31824( "stad_Isequences3", 8192 );
            }
            else if (g_U854 == 34)
            {
                sub_31824( "SpeechMain", 128 );
                sub_31824( "stad_Panels", 8192 );
            }
            else if (g_U854 == 36)
            {
                sub_31824( "stad_bulletcam", 8192 );
            }
            else if (g_U854 == 35)
            {
                sub_7774( sub_5839() );
                sub_31824( "stad_cutscene", 8192 );
            }
            else if (g_U854 == 38)
            {
                sub_31824( "stad_ImgMetrics", 8192 );
            };;;;;;;
            l_U85 = 6;
            sub_3169( "eScriptState = SCRIPT_RUNNING" );
            break;
            case 3:
            if ((sub_32362( ref g_U1214 )) AND (sub_32242( ref g_U1069 )))
            {
                l_U85 = 4;
                sub_3169( "eScriptState = SCRIPT_START_GAMEPLAY" );
            }
            sub_32566( ref g_U1069, ref g_U1214, ref g_U1263, ref g_U1354, ref g_U2005, ref g_U2012, ref g_U2034, ref g_U2074 );
            break;
            case 4:
            sub_3169( "eScriptState = SCRIPT_START_GAMEPLAY" );
            sub_30797( g_U854 );
            sub_36486();
            if (g_U854 < 13)
            {
                sub_36718( 0 );
            }
            else
            {
                sub_37340();
            }
            if (g_U854 > 10)
            {
                sub_37901();
            }
            sub_38478( "SSTDAUD" );
            if (g_U854 <= 12)
            {
                PRELOAD_MOVIE( 0, "03_04_STAD_SH12_0", 0, 0 );
            }
            if ((DOES_SCRIPT_EXIST( l_U86 )) == 1)
            {
                REQUEST_SCRIPT( l_U86 );
                "[doubled result, dropped if not asigned]";
                l_U85 = 5;
                sub_3169( "eScriptState = SCRIPT_LOADING_SPEECHMAIN" );
            }
            else
            {
                SCRIPT_ASSERT( "[SP] Error: SpeechMain.sc doesn't exist on the disc!!!", 0 );
            }
            break;
            case 5:
            sub_3169( "eScriptState = SCRIPT_LOADING_SPEECHMAIN" );
            if ((HAS_SCRIPT_LOADED( l_U86 )) == 1)
            {
                START_NEW_SCRIPT( l_U86, 128 );
                l_U85 = 6;
                sub_3169( "eScriptState = SCRIPT_RUNNING" );
            }
            break;
            case 6:
            sub_38925();
            if (g_U854 < 15)
            {
                sub_44477();
                sub_44555( ref g_U888, 15 );
                sub_32566( ref g_U1069, ref g_U1214, ref g_U1263, ref g_U1354, ref g_U2005, ref g_U2012, ref g_U2034, ref g_U2074 );
            }
            else if (g_U854 == 20)
            {
                sub_45264();
            }
            break;
        }
        WAIT( 0 );
    }
    SET_EXITFLAG_RESPONSE();
    sub_18289( "GA", "s_stad startup.sc is terminating...", "###" );
    sub_3169( "s_stad startup.sc is terminating..." );
    return;
}

void sub_3169(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_3413()
{
    sub_3169( "P_SETUP_START_POSITIONS" );
    g_U2138[0] = {1.09400000, -4.61100000, 0.17300000};
    g_U2256[0] = 267.00000000;
    g_U2296[0] = 0.00000000;
    g_U2336[0] = 0.00000000;
    g_U2138[1] = {1.09400000, -4.61100000, 0.17300000};
    g_U2256[1] = 267.00000000;
    g_U2296[1] = 0.00000000;
    g_U2336[1] = 0.00000000;
    g_U2138[2] = {71.70000000, 94.00000000, -3.90000000};
    g_U2256[2] = 180.00000000;
    g_U2296[2] = -84.24908000;
    g_U2336[2] = 1.05646600;
    g_U2138[3] = {96.01558000, 61.09585000, 2.80008700};
    g_U2256[3] = 180.00000000;
    g_U2296[3] = 0.00000000;
    g_U2336[3] = 0.00000000;
    g_U2138[4] = {111.42000000, -23.98000000, 2.80000000};
    g_U2256[4] = 253.00000000;
    g_U2296[4] = 45.00000000;
    g_U2336[4] = 3.50000000;
    g_U2138[5] = {92.58926000, -9.65747400, 9.60318000};
    g_U2256[5] = 247.43700000;
    g_U2296[5] = 11.18540000;
    g_U2336[5] = -15.58663000;
    g_U2138[6] = {88.31104000, 23.34189000, 9.60026400};
    g_U2256[6] = 0.21082200;
    g_U2296[6] = 10.75460000;
    g_U2336[6] = -0.00066400;
    g_U2138[7] = {38.99326000, 58.83429000, 9.60036600};
    g_U2256[7] = 91.59779000;
    g_U2296[7] = 0.64726300;
    g_U2336[7] = -5.51071800;
    g_U2138[8] = {2.06000000, 60.17000000, 9.59700000};
    g_U2256[8] = 90;
    g_U2296[8] = 1.00000000;
    g_U2336[8] = -4;
    g_U2138[9] = {-55.77544000, 69.69093000, 13.01074000};
    g_U2256[9] = 9.49599400;
    g_U2296[9] = 6.00000000;
    g_U2336[9] = 0.00000000;
    g_U2138[10] = {-103.37000000, 22.61000000, 27.80000000};
    g_U2256[10] = 270.01000000;
    g_U2296[10] = 1.51901400;
    g_U2336[10] = -12.41685000;
    g_U2138[11] = {-80.93000000, -47.64000000, 23.94000000};
    g_U2256[11] = -57.09000000;
    g_U2296[11] = 2.32244200;
    g_U2336[11] = 3.26248000;
    g_U2138[12] = {g_U2138[11]};
    g_U2256[12] = g_U2256[11];
    g_U2296[12] = g_U2296[11];
    g_U2336[12] = g_U2336[11];
    g_U2138[13] = {-0.36666700, -76.78543000, 17.70087000};
    g_U2256[13] = 179.46040000;
    g_U2296[13] = 0.42535700;
    g_U2336[13] = -60.00042000;
    g_U2138[14] = {-0.17900000, -83.04000000, 47.25000000};
    g_U2256[14] = 0.00000000;
    g_U2296[14] = 0.00000000;
    g_U2336[14] = 0.00000000;
    g_U2138[20] = {g_U2138[1]};
    g_U2256[20] = g_U2256[1];
    g_U2296[20] = g_U2296[1];
    g_U2336[20] = g_U2336[1];
    g_U2138[21] = {g_U2138[2]};
    g_U2256[21] = g_U2256[2];
    g_U2296[21] = g_U2296[2];
    g_U2336[21] = g_U2336[2];
    g_U2138[22] = {g_U2138[3]};
    g_U2256[22] = g_U2256[3];
    g_U2296[22] = g_U2296[3];
    g_U2336[22] = g_U2336[3];
    g_U2138[23] = {g_U2138[4]};
    g_U2256[23] = g_U2256[4];
    g_U2296[23] = g_U2296[4];
    g_U2336[23] = g_U2336[4];
    g_U2138[24] = {g_U2138[5]};
    g_U2256[24] = g_U2256[5];
    g_U2296[24] = g_U2296[5];
    g_U2336[24] = g_U2336[5];
    g_U2138[25] = {g_U2138[6]};
    g_U2256[25] = g_U2256[6];
    g_U2296[25] = g_U2296[6];
    g_U2336[25] = g_U2336[6];
    g_U2138[26] = {g_U2138[7]};
    g_U2256[26] = g_U2256[7];
    g_U2296[26] = g_U2296[7];
    g_U2336[26] = g_U2336[7];
    g_U2138[27] = {g_U2138[9]};
    g_U2256[27] = g_U2256[9];
    g_U2296[27] = g_U2296[9];
    g_U2336[27] = g_U2336[9];
    g_U2138[28] = {g_U2138[10]};
    g_U2256[28] = g_U2256[10];
    g_U2296[28] = g_U2296[10];
    g_U2336[28] = g_U2336[10];
    g_U2138[29] = {g_U2138[11]};
    g_U2256[29] = g_U2256[11];
    g_U2296[29] = g_U2296[11];
    g_U2336[29] = g_U2336[11];
    g_U2138[30] = {g_U2138[13]};
    g_U2256[30] = g_U2256[13];
    g_U2296[30] = g_U2296[13];
    g_U2336[30] = g_U2336[13];
    g_U2138[31] = {0.78426800, 0.22295400, 0.17109900};
    g_U2256[31] = 0.00000000;
    g_U2296[31] = 0.00000000;
    g_U2336[31] = 0.00000000;
    g_U2138[32] = {0.78426800, 0.22295400, 0.17109900};
    g_U2256[32] = 0.00000000;
    g_U2296[32] = 0.00000000;
    g_U2336[32] = 0.00000000;
    g_U2138[33] = {0.78426800, 0.22295400, 0.17109900};
    g_U2256[33] = 0.00000000;
    g_U2296[33] = 0.00000000;
    g_U2336[33] = 0.00000000;
    g_U2138[34] = {-0.36666700, -76.78543000, 17.70087000};
    g_U2256[34] = 179.46040000;
    g_U2296[34] = 0.42535700;
    g_U2336[34] = -60.00042000;
    g_U2138[35] = {0.78426800, 0.22295400, 0.17109900};
    g_U2256[35] = 0.00000000;
    g_U2296[35] = 0.00000000;
    g_U2336[35] = 0.00000000;
    g_U2138[36] = {-0.36666700, -76.78543000, 17.70087000};
    g_U2256[36] = 179.46040000;
    g_U2296[36] = 0.42535700;
    g_U2336[36] = -60.00042000;
    g_U2138[37] = {1.09400000, -4.61100000, 0.17300000};
    g_U2256[37] = -90.00000000;
    g_U2296[37] = 0.00000000;
    g_U2336[37] = 0.00000000;
    g_U2138[38] = {-0.07062000, 21.74414000, 0.17263800};
    g_U2256[38] = 358.84960000;
    g_U2296[38] = 1.15039600;
    g_U2336[38] = 0.00137600;
    return;
}

void sub_5721()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    sub_3169( "P_CREATE_PLAYER" );
    uVar2 = {g_U2138[g_U854]};
    uVar5 = g_U2256[g_U854];
    if (IS_CUSTOM_PLAYER_VARIATION() == 0)
    {
        if (g_U854 == 0)
        {
            g_U4389._fU0 = sub_5815( 8, uVar2, 0 );
        }
        else if (g_U854 < 2)
        {
            g_U4389._fU0 = sub_5815( 9, uVar2, 0 );
        }
        else
        {
            g_U4389._fU0 = sub_5815( 10, uVar2, 0 );
        }
        if (g_U854 == 0)
        {
            PRELOAD_PLAYER_VARIATION( sub_5839(), 0, 0, 2, 0 );
            PRELOAD_PLAYER_VARIATION( sub_5839(), 2, 5, 0, 0 );
            PRELOAD_PLAYER_VARIATION( sub_5839(), 5, 6, 0, 0 );
        }
        if (g_U854 < 2)
        {
            PRELOAD_PLAYER_VARIATION( sub_5839(), 2, 9, 0, 1 );
            PRELOAD_PLAYER_VARIATION( sub_5839(), 5, 10, 0, 1 );
        }
        if ((g_U854 < 20) AND (g_U854 >= 7))
        {
            if ((IS_PED_DEAD( sub_5839() )) == 0)
            {
                SET_PED_PROP_INDEX( sub_5839(), 3, 0, 0, 255 );
            }
        }
        if ((IS_PED_DEAD( sub_5839() )) == 0)
        {
            SET_PED_SWEAT( sub_5839(), 0.00000000, 0.00000000 );
        }
    }
    else
    {
        uVar6 = sub_16703( GET_CUSTOM_PLAYER_VARIATION() );
        g_U4389._fU0 = sub_5815( uVar6, uVar2, 0 );
        if ((sub_17117( uVar6 )) == 1)
        {
            SET_HOLSTER_VISIBLE( sub_5839(), 0, 1 );
            SET_HOLSTER_VISIBLE( sub_5839(), 1, 1 );
        }
        else
        {
            SET_HOLSTER_VISIBLE( sub_5839(), 0, 0 );
            SET_HOLSTER_VISIBLE( sub_5839(), 1, 0 );
        }
    }
    g_U4389._fU4 = GET_PLAYER_PED( g_U4389._fU0 );
    g_U4391 = g_U4389._fU4;
    if ((IS_PED_DEAD( sub_5839() )) == 0)
    {
        sub_18091( sub_5839(), uVar2, uVar5 );
        FREEZE_PED_POSITION( sub_5839(), 1 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( sub_5839(), 1 );
        REQUEST_COLLISION_AT_COORD( uVar2 );
    }
    if (g_U854 > 1)
    {
        if (IS_MAGDEMO())
        {
            SET_PAYNEKILLER_AMT( 6 );
        }
        else
        {
            SET_PAYNEKILLER_AMT( 3 );
        }
    }
    return;
}

void sub_5815(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown Result;
    unknown uVar8;

    Result = CREATE_PLAYER( uParam4, uParam1 );
    uVar8 = sub_5839();
    switch (uParam0)
    {
        case 0:
        sub_6304( uVar8 );
        break;
        case 1:
        sub_6514( uVar8 );
        break;
        case 2:
        sub_6724( uVar8 );
        break;
        case 3:
        sub_6934( uVar8 );
        break;
        case 4:
        sub_7144( uVar8 );
        break;
        case 5:
        sub_7354( uVar8 );
        break;
        case 6:
        sub_7564( uVar8 );
        break;
        case 8:
        sub_7774( uVar8 );
        break;
        case 9:
        sub_7984( uVar8 );
        break;
        case 10:
        sub_8194( uVar8 );
        break;
        case 11:
        sub_8404( uVar8 );
        break;
        case 12:
        sub_8614( uVar8 );
        break;
        case 13:
        sub_8824( uVar8 );
        break;
        case 14:
        sub_9034( uVar8 );
        break;
        case 15:
        sub_9244( uVar8 );
        break;
        case 16:
        sub_9454( uVar8 );
        break;
        case 17:
        sub_9664( uVar8 );
        break;
        case 18:
        sub_9874( uVar8 );
        break;
        case 19:
        sub_10084( uVar8 );
        break;
        case 20:
        sub_10294( uVar8 );
        break;
        case 21:
        sub_10504( uVar8 );
        break;
        case 22:
        sub_10714( uVar8 );
        break;
        case 23:
        sub_10924( uVar8 );
        break;
        case 24:
        sub_11134( uVar8 );
        break;
        case 25:
        sub_11344( uVar8 );
        break;
        case 26:
        sub_11554( uVar8 );
        break;
        case 27:
        sub_11764( uVar8 );
        break;
        case 28:
        sub_11974( uVar8 );
        break;
        case 29:
        sub_12184( uVar8 );
        break;
        case 30:
        sub_12394( uVar8 );
        break;
        case 31:
        sub_12604( uVar8 );
        break;
        case 32:
        sub_12814( uVar8 );
        break;
        case 33:
        sub_13024( uVar8 );
        break;
        case 34:
        sub_13234( uVar8 );
        break;
        case 35:
        sub_13444( uVar8 );
        break;
        case 36:
        sub_13654( uVar8 );
        break;
        case 37:
        sub_13864( uVar8 );
        break;
        case 38:
        sub_14089( uVar8 );
        break;
        case 39:
        sub_14299( uVar8 );
        break;
        case 40:
        sub_14509( uVar8 );
        break;
        case 41:
        sub_14719( uVar8 );
        break;
        case 42:
        sub_14929( uVar8 );
        break;
        case 43:
        sub_15139( uVar8 );
        break;
        case 44:
        sub_15351( sub_5839() );
        break;
        case 45:
        sub_15565( sub_5839() );
        break;
        case 46:
        sub_15779( sub_5839() );
        break;
        case 47:
        sub_15993( sub_5839() );
        break;
        case 48:
        sub_16207( sub_5839() );
        break;
    }
    return Result;
}

int sub_5839()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_5861() );
    }
    return 0;
}

void sub_5861()
{
    return GET_PLAYER_ID();
}

void sub_6304(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_6514(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 29, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_6724(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_6934(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_7144(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 17, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 27, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 16, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 8, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_7354(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_7564(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 24, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_7774(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_7984(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_8194(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_8404(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 28, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_8614(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_8824(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 17, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_9034(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 16, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 23, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 14, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_9244(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 16, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 23, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 14, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 11, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_9454(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_9664(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 6, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 14, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_9874(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 9, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

void sub_10084(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 13, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 7, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

void sub_10294(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_10504(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 7, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

void sub_10714(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

void sub_10924(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 30, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

void sub_11134(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 4, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_11344(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 4, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_11554(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 5, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 18, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_11764(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 5, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_11974(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 5, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_12184(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 16, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_12394(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_12604(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 10, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 21, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 0, 0 );
    }
    return;
}

void sub_12814(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 11, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 20, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 1, 0 );
    }
    return;
}

void sub_13024(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 12, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 25, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_13234(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 12, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 15, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_13444(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 19, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 22, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 17, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 1, 0 );
    }
    return;
}

void sub_13654(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 7, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 17, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 2, 0, 0 );
    }
    return;
}

void sub_13864(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 18, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 19, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
        SET_PED_PROP_INDEX( uParam0, 0, 0, 0, 255 );
    }
    return;
}

void sub_14089(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_14299(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_14509(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_14719(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 26, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_14929(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 8, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_15139(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 8, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 7, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_15351(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 34, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 19, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 16, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 4, 0, 0 );
    }
    return;
}

void sub_15565(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 13, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 34, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 19, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 16, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 7, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 4, 1, 0 );
    }
    return;
}

void sub_15779(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 32, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 18, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_15993(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 32, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 18, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 11, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 10, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 16, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 5, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 1, 0 );
    }
    return;
}

void sub_16207(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 33, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 15, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

int sub_16703(unknown uParam0)
{
    unknown uVar3;

    uVar3 = uParam0;
    switch (uVar3)
    {
        case 1:
        return 44;
        break;
        case 2:
        return 46;
        break;
        case 3:
        return 3;
        break;
        case 4:
        return 10;
        break;
        case 5:
        return 15;
        break;
        case 6:
        return 18;
        break;
        case 7:
        return 20;
        break;
        case 8:
        return 24;
        break;
        case 9:
        return 26;
        break;
        case 10:
        return 31;
        break;
        case 11:
        return 36;
        break;
        case 12:
        return 1;
        break;
        case 13:
        return 16;
        break;
        case 14:
        return 29;
        break;
        case 15:
        return 32;
        break;
        case 16:
        return 41;
        break;
        case 17:
        return 37;
        break;
        case 18:
        return 48;
        break;
        case 19:
        return 45;
        break;
        case 20:
        return 47;
        break;
    }
    return 49;
}

int sub_17117(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        return 0;
        break;
        case 1:
        return 0;
        break;
        case 2:
        return 0;
        break;
        case 3:
        return 0;
        break;
        case 4:
        return 0;
        break;
        case 5:
        return 0;
        break;
        case 6:
        return 0;
        break;
        case 8:
        return 1;
        break;
        case 9:
        return 1;
        break;
        case 10:
        return 1;
        break;
        case 11:
        return 0;
        break;
        case 12:
        return 0;
        break;
        case 13:
        return 1;
        break;
        case 14:
        return 1;
        break;
        case 15:
        return 1;
        break;
        case 16:
        return 0;
        break;
        case 17:
        return 0;
        break;
        case 18:
        return 1;
        break;
        case 19:
        return 1;
        break;
        case 20:
        return 0;
        break;
        case 21:
        return 1;
        break;
        case 22:
        return 1;
        break;
        case 23:
        return 1;
        break;
        case 24:
        return 1;
        break;
        case 25:
        return 1;
        break;
        case 26:
        return 1;
        break;
        case 27:
        return 1;
        break;
        case 28:
        return 1;
        break;
        case 29:
        return 0;
        break;
        case 30:
        return 1;
        break;
        case 31:
        return 1;
        break;
        case 32:
        return 1;
        break;
        case 33:
        return 0;
        break;
        case 34:
        return 1;
        break;
        case 35:
        return 1;
        break;
        case 36:
        return 1;
        break;
        case 37:
        return 0;
        break;
        case 38:
        return 0;
        break;
        case 39:
        return 0;
        break;
        case 40:
        return 0;
        break;
        case 41:
        return 0;
        break;
        case 42:
        return 0;
        break;
        case 43:
        return 0;
        break;
        case 44:
        return 0;
        break;
        case 45:
        return 0;
        break;
        case 46:
        return 0;
        break;
        case 47:
        return 0;
        break;
        case 48:
        return 0;
        break;
    }
    return 0;
}

void sub_18091(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_18237()
{
    sub_18289( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", "###" );
    if ((IS_PED_DEAD( sub_5839() )) == 0)
    {
        SET_PED_RELATIONSHIP( sub_5839(), 0, 1 );
        SET_PED_RELATIONSHIP( sub_5839(), 0, 2 );
        SET_PED_RELATIONSHIP( sub_5839(), 0, 6 );
        SET_PED_RELATIONSHIP( sub_5839(), 0, 7 );
    }
    return;
}

void sub_18289(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_18421()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;

    sub_3169( "P_SETUP_STADIUM_DOORS" );
    sub_18501( ref g_U2884, -677555848, -1.37601000, 44.95269000, -2.00513000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U2884, -145.00000000, 92.00000000 );
    sub_18501( ref g_U2891, 214803252, 1.38002000, 44.95055000, -2.00107000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U2891, -92.00000000, 145.00000000 );
    sub_18501( ref g_U2898, -393921389, -7.20166000, 66.09055000, -2.10299000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U2898, 1 );
    sub_18501( ref g_U2905, 75043213, -4.80167000, 66.06465000, -2.10299000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U2905, 1 );
    sub_18501( ref g_U2912, -393921389, 4.79924000, 66.10726000, -2.10299000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U2912, 1 );
    sub_18501( ref g_U2919, 75043213, 7.19923000, 66.06465000, -2.10299000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U2919, 1 );
    sub_18501( ref g_U2926, -1311942332, 7.62200000, 71.70000000, -2.10000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18501( ref g_U2933, -926642953, 7.62200000, 69.30000000, -2.10000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_19236( ref g_U2933, 0, 1, 65446 );
    sub_19236( ref g_U2926, 0, 1, 90 );
    sub_18559( ref g_U2933, 65445, 65447 );
    sub_18559( ref g_U2926, 89, 91 );
    sub_18501( ref g_U2940, 1957576083, 23.16700000, 53.38700000, -1.96600000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U2940, -87.25000000, 170.00000000 );
    sub_19236( ref g_U2940, 0, 0, 0.15000000 );
    sub_18501( ref g_U2947, 1957576083, 20.99700000, 53.38800000, -1.96600000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U2947, -87.25000000, 170.00000000 );
    sub_19236( ref g_U2947, 0, 0, 0.05000000 );
    sub_18501( ref g_U2954, 1957576083, 18.83700000, 53.38800000, -1.96600000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U2954, -87.25000000, 170.00000000 );
    sub_19236( ref g_U2954, 1, 0, 0.13000000 );
    sub_18501( ref g_U2961, 1957576083, 16.69200000, 53.38800000, -1.96600000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U2961, -87.25000000, 170.00000000 );
    sub_19236( ref g_U2961, 0, 0, 0.08000000 );
    sub_18501( ref g_U2975, -467517074, 37.34900000, 71.69900000, -2.10000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U2975, 0.00000000, 95.00000000 );
    sub_18501( ref g_U2968, -545157512, 37.34900000, 69.29900000, -2.10000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U2968, -95.00000000, 0.00000000 );
    sub_18501( ref g_U2982, 75043213, 42.30000000, 74.50900000, -2.10300000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U2982, 1 );
    sub_18501( ref g_U2989, -393921389, 44.70000000, 74.51200000, -2.10300000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U2989, 1 );
    sub_18501( ref g_U3003, -393921389, 49.96267000, 71.69955000, -2.10299000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3003, 0.00000000, 90.00000000 );
    sub_18501( ref g_U2996, 75043213, 49.95669000, 69.29955000, -2.10299000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U2996, -90.00000000, 0.00000000 );
    sub_18501( ref g_U3010, -1412901648, 53.83900000, 77.98300000, -3.52300000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3010, -158.00000000, 158.00000000 );
    sub_18501( ref g_U3017, -1412901648, 60.75900000, 89.93300000, -3.52300000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3017, -95.00000000, 130.00000000 );
    sub_18501( ref g_U3024, -1412901648, 65.73000000, 89.93300000, -3.52300000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3024, -150.00000000, 158.00000000 );
    sub_18501( ref g_U3031, -1412901648, 72.40400000, 78.01130000, -3.52300000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3031, -158.00000000, 158.00000000 );
    sub_18501( ref g_U3038, 290920020, 73.08400000, 93.11200000, -2.90000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3038, -80.00000000, 110.00000000 );
    sub_18501( ref g_U3045, 290920020, 63.55800000, 96.75600000, -2.88100000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3045, 1 );
    sub_18501( ref g_U3052, 290920020, 65.57900000, 68.86100000, -2.09600000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3052, 1 );
    sub_18501( ref g_U3059, 290920020, 68.47500000, 68.86800000, -2.09000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3059, 1 );
    sub_18501( ref g_U3087, 796879518, 83.91705000, 73.74201000, -2.10209000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3087, 1 );
    sub_18501( ref g_U3094, -1061403078, 86.32445000, 73.74370000, -2.10209000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3094, 1 );
    sub_18501( ref g_U3073, -1061403078, 94.41479000, 66.29668000, -2.91532000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3073, 1 );
    sub_18501( ref g_U3066, 796879518, 94.41479000, 68.69668000, -2.91251000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3066, 1 );
    sub_18501( ref g_U3080, -393921389, 96.64538000, 65.86650000, 3.90852000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3080, 1 );
    sub_18501( ref g_U3101, -1878406502, 97.19942000, 47.88140000, 3.90000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3101, 0.00000000, 100.00000000 );
    sub_18501( ref g_U3108, 1878834909, 94.79926000, 47.88139000, 3.90000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3108, 65436, 0.00000000 );
    sub_18501( ref g_U3115, 1202594463, 102.55070000, 29.91269000, 3.93626000, g_U649 );
    sub_19236( ref g_U3115, 1, 1, 1065353216 );
    sub_21068( ref g_U3115, 1 );
    sub_18501( ref g_U3122, -1940123672, 106.74800000, 22.60219000, 3.90000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3122, -92.00000000, 0.00000000 );
    sub_18501( ref g_U3129, 1072344017, 109.14800000, 22.60219000, 3.90000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3129, 0.00000000, 92.00000000 );
    sub_18501( ref g_U3136, -467517074, 112.61460000, 15.96401000, 3.92817000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3136, 1 );
    sub_18501( ref g_U3143, -1699833165, 112.70610000, 3.85002000, 3.90000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_21357( ref g_U3143, 1 );
    sub_18559( ref g_U3143, -120.00000000, 92.00000000 );
    sub_21068( ref g_U3143, 1 );
    sub_18501( ref g_U3150, 1072344017, 109.24990000, -18.01569000, 3.90008000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3150, 0.00000000, 112.00000000 );
    sub_21357( ref g_U3150, 1 );
    sub_18501( ref g_U3157, -1940123672, 106.85020000, -18.01704000, 3.90153000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3157, -112.00000000, 0.00000000 );
    sub_21357( ref g_U3157, 1 );
    sub_18501( ref g_U3164, 1072344017, 108.73740000, -20.70324000, 10.69721000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3164, 0.00000000, 100.00000000 );
    sub_18501( ref g_U3171, -1940123672, 108.72960000, -18.30264000, 10.69515000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3171, -100.00000000, 0.00000000 );
    sub_18501( ref g_U3178, -1940123672, 105.32200000, -27.42500000, 10.67600000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3178, 1 );
    sub_18501( ref g_U3185, 1072344017, 102.92200000, -27.42400000, 10.67600000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3185, 1 );
    sub_18501( ref g_U3192, -1940123672, 102.52100000, -27.42500000, 10.67600000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3192, 1 );
    sub_18501( ref g_U3199, 1072344017, 100.12070000, -27.43466000, 10.67602000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3199, 1 );
    sub_18501( ref g_U3206, -1940123672, 99.70100000, -27.42500000, 10.67600000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3206, 1 );
    sub_18501( ref g_U3213, 1072344017, 97.30094000, -27.44922000, 10.67602000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3213, 1 );
    sub_18501( ref g_U3220, 1072344017, 105.31150000, 5.83297000, 10.67642000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3220, 1 );
    sub_18501( ref g_U3227, -1940123672, 102.91150000, 5.77344000, 10.67642000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3227, 1 );
    sub_18501( ref g_U3234, 1072344017, 102.51690000, 5.83341000, 10.67642000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3234, 1 );
    sub_18501( ref g_U3241, -1940123672, 100.11700000, 5.77278000, 10.67642000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3241, 1 );
    sub_18501( ref g_U3248, 1072344017, 99.69675000, 5.83290000, 10.68147000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3248, 1 );
    sub_18501( ref g_U3255, -1940123672, 97.29675000, 5.77289000, 10.68147000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3255, 1 );
    sub_18501( ref g_U3269, 1886434222, 79.03350000, 48.73280000, 10.73810000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18501( ref g_U3276, -1746925636, 80.70770000, 46.69320000, 10.73810000, 0.00000000, 0.00000000, 0.00000000 );
    sub_19236( ref g_U3276, 0, 1, 0.30000000 );
    sub_19236( ref g_U3269, 1, 1, 0.15000000 );
    sub_18559( ref g_U3269, 0.15000000, 90.00000000 );
    sub_18559( ref g_U3276, -90.00000000, 0.30000000 );
    sub_18501( ref g_U3283, -1940123672, 103.92070000, 34.66269000, 10.65945000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3283, 1 );
    sub_18501( ref g_U3290, 1072344017, 101.57250000, 34.14500000, 10.66269000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3290, 1 );
    sub_18501( ref g_U3297, -1940123672, 101.15310000, 34.12339000, 10.65945000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3297, 1 );
    sub_18501( ref g_U3304, 1072344017, 98.82267000, 33.57226000, 10.66269000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3304, 1 );
    sub_18501( ref g_U3311, -1940123672, 98.37992000, 33.57403000, 10.65945000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3311, 1 );
    sub_18501( ref g_U3318, 1072344017, 96.03466000, 33.04004000, 10.66269000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3318, 1 );
    sub_18501( ref g_U3325, -1940123672, 50.92475000, 70.68915000, 10.65945000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3325, 1 );
    sub_18501( ref g_U3332, 1072344017, 50.86989000, 73.08500000, 10.66269000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3332, 1 );
    sub_18501( ref g_U3339, -1940123672, 50.94222000, 73.47983000, 10.65900000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3339, 1 );
    sub_18501( ref g_U3346, 1072344017, 50.88539000, 75.88640000, 10.66269000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3346, 1 );
    sub_18501( ref g_U3353, -1940123672, 50.94498000, 76.31689000, 10.65945000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3353, 1 );
    sub_18501( ref g_U3360, 1072344017, 50.90577000, 78.71810000, 10.66269000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3360, 1 );
    sub_18501( ref uVar2, -393921389, 75.01991000, 62.94715000, 10.65642000, 0.00000000, 0.00000000, 146.97000000 );
    sub_18842( ref uVar2, 1 );
    sub_18501( ref uVar9, -393921389, 60.72567000, 68.79237000, 10.67990000, 0.00000000, 0.00000000, 166.42000000 );
    sub_18842( ref uVar9, 1 );
    sub_18501( ref g_U3367, -675537193, 45.01281000, 78.12546000, 14.25036000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3367, -125.00000000, 100.00000000 );
    sub_21068( ref g_U3367, 1 );
    sub_19236( ref g_U3367, 1, 1, 1065353216 );
    sub_18501( ref g_U3374, -675537193, 45.01281000, 80.52547000, 14.25036000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3374, -100.00000000, 125.00000000 );
    sub_21068( ref g_U3374, 1 );
    sub_19236( ref g_U3374, 0, 1, 1065353216 );
    sub_18501( ref g_U3381, -675537193, 43.35200000, 73.66600000, 13.78300000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3381, -125.00000000, 82.00000000 );
    sub_18501( ref g_U3388, -675537193, 40.95300000, 73.66600000, 13.78300000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3388, -95.00000000, 125.00000000 );
    sub_18501( ref g_U3395, -675537193, 67.24999000, 77.10081000, 10.78851000, g_U649 );
    sub_18559( ref g_U3395, -91.00000000, 0.00000000 );
    sub_21068( ref g_U3395, 1 );
    sub_19236( ref g_U3395, 0, 1, 1065353216 );
    sub_18501( ref g_U3402, -675537193, 69.51662000, 76.31185000, 10.78851000, g_U649 );
    sub_18559( ref g_U3402, 0.00000000, 91.00000000 );
    sub_21068( ref g_U3402, 1 );
    sub_19236( ref g_U3402, 1, 1, 1065353216 );
    sub_18501( ref g_U3479, -1311020127, -47.70057000, 69.85586000, 14.10140000, g_U649 );
    sub_18559( ref g_U3479, -92.00000000, 0.00000000 );
    sub_21068( ref g_U3479, 1 );
    sub_18501( ref g_U3486, -661209093, -45.30057000, 69.85586000, 14.10140000, g_U649 );
    sub_18559( ref g_U3486, 0.00000000, 92.00000000 );
    sub_21068( ref g_U3486, 1 );
    sub_18501( ref g_U3409, -661209093, -50.97390000, 70.24080000, 14.11380000, 0, 0, 0 );
    sub_18842( ref g_U3409, 1 );
    sub_18501( ref g_U3416, -1311020127, -50.99700000, 72.63440000, 14.11880000, 0, 0, 0 );
    sub_18842( ref g_U3416, 1 );
    sub_18501( ref g_U3423, -661209093, -50.98869000, 73.05897000, 14.11629000, 0, 0, 0 );
    sub_18842( ref g_U3423, 1 );
    sub_18501( ref g_U3430, -1311020127, -50.98868000, 75.45897000, 14.11629000, 0, 0, 0 );
    sub_18842( ref g_U3430, 1 );
    sub_18501( ref g_U3437, -661209093, -50.97398000, 75.85484000, 14.11385000, 0, 0, 0 );
    sub_18842( ref g_U3437, 1 );
    sub_18501( ref g_U3444, -1311020127, -50.97399000, 78.25484000, 14.11385000, 0, 0, 0 );
    sub_18842( ref g_U3444, 1 );
    sub_18501( ref g_U3451, -1705751389, -104.93490000, 34.99698000, 14.09566000, 0, 0, 0 );
    sub_18559( ref g_U3451, 0.00000000, 88.00000000 );
    sub_18842( ref g_U3451, 1 );
    sub_18501( ref g_U3458, 1435528105, -107.27480000, 35.51826000, 14.09566000, 0, 0, 0 );
    sub_18559( ref g_U3458, -110.00000000, 0.00000000 );
    sub_18842( ref g_U3458, 1 );
    sub_18501( ref g_U3465, 1072344017, -105.85580000, 28.43730000, 14.10300000, 0, 0, 0 );
    sub_18559( ref g_U3465, 0.00000000, 100.00000000 );
    sub_18501( ref g_U3472, -1940123672, -108.25590000, 28.43780000, 14.10300000, 0, 0, 0 );
    sub_18559( ref g_U3472, -100.00000000, 0.00000000 );
    sub_18501( ref g_U3493, -76654268, -1.60693000, -77.87794000, 18.91874000, 0, 0, 0 );
    sub_18559( ref g_U3493, 0.00000000, 135.00000000 );
    sub_18501( ref g_U3500, -1921583676, 0.79260000, -77.88763000, 18.91706000, 0, 0, 0 );
    sub_18559( ref g_U3500, -115.00000000, 0.00000000 );
    sub_18501( ref g_U3507, 450428109, -82.12238000, -55.51886000, 20.54960000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3507, -90.00000000, 0.00000000 );
    sub_18842( ref g_U3507, 1 );
    sub_18501( ref g_U3570, -76654268, -92.79193000, -37.61494000, 20.49893000, 0, 0, 0 );
    sub_18501( ref g_U3577, -1921583676, -94.78739000, -38.94775000, 20.49725000, 0, 0, 0 );
    sub_18559( ref g_U3570, 0.00000000, 100.00000000 );
    sub_18559( ref g_U3577, -100.00000000, 0.00000000 );
    sub_21357( ref g_U3570, 1 );
    sub_21357( ref g_U3577, 1 );
    sub_18501( ref g_U3521, 75043213, -96.52200000, -45.84900000, 20.21800000, 0, 0, 0 );
    sub_18842( ref g_U3521, 1 );
    sub_18501( ref g_U3514, -393921389, -97.45800000, -43.64000000, 20.21800000, 0, 0, 0 );
    sub_18842( ref g_U3514, 1 );
    sub_18501( ref g_U3535, 75043213, -92.98200000, -52.39200000, 20.22100000, 0, 0, 0 );
    sub_18842( ref g_U3535, 1 );
    sub_18501( ref g_U3528, -393921389, -94.29400000, -50.37600000, 20.22100000, 0, 0, 0 );
    sub_18842( ref g_U3528, 1 );
    sub_18501( ref g_U3549, 75043213, -88.35600000, -58.16800000, 20.22100000, 0, 0, 0 );
    sub_18842( ref g_U3549, 1 );
    sub_18501( ref g_U3542, -393921389, -89.91300000, -56.32900000, 20.22100000, 0, 0, 0 );
    sub_18842( ref g_U3542, 1 );
    sub_18501( ref g_U3563, 75043213, -82.99200000, -63.26200000, 20.21900000, 0, 0, 0 );
    sub_18842( ref g_U3563, 1 );
    sub_18501( ref g_U3556, -393921389, -84.83100000, -61.70400000, 20.21900000, 0, 0, 0 );
    sub_18842( ref g_U3556, 1 );
    sub_18501( ref g_U3584, 614946076, -50.37217000, -65.75459000, 19.31484000, 0, 0, 0 );
    sub_18501( ref g_U3591, -702291166, -45.59272000, -67.03707000, 19.34033000, 0, 0, 0 );
    sub_18559( ref g_U3591, -85.00000000, 85.00000000 );
    sub_18501( ref g_U3598, -702291166, -45.59276000, -64.59880000, 19.33983000, 0, 0, 0 );
    sub_18559( ref g_U3598, -85.00000000, 85.00000000 );
    sub_18501( ref g_U3619, 75043213, -2.79925000, -65.11054000, 18.91450000, 0, 0, 0 );
    sub_18501( ref g_U3626, 1681685433, -47.99100000, 60.52757000, 10.89082000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3626, 1 );
    sub_18501( ref g_U3633, 1681685433, -47.99101000, 40.51884000, 4.10484000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18842( ref g_U3633, 1 );
    sub_18501( ref g_U3696, -1497638776, -91.01100000, -27.52100000, 19.55700000, 0, 0, 90 );
    sub_18559( ref g_U3696, -40.00000000, 0.00000000 );
    sub_19236( ref g_U3696, 0, 1, 0.60000000 );
    sub_18501( ref g_U3689, 1033612473, -91.01100000, -33.28800000, 19.55700000, 0, 0, 65446 );
    sub_18559( ref g_U3689, -20.00000000, 0.00000000 );
    sub_19236( ref g_U3689, 1, 1, -1 );
    sub_18501( ref g_U3640, 450428109, -0.00194000, 39.31785000, 4.09577000, 0.00000000, 0.00000000, 0.00000000 );
    sub_18559( ref g_U3640, -80.00000000, 79.00000000 );
    sub_18501( ref g_U3647, 450428109, -0.00194000, 59.75165000, 10.71665000, 0, 0, 0 );
    sub_18559( ref g_U3647, -100.00000000, 150.00000000 );
    sub_18842( ref g_U3647, 1 );
    sub_18501( ref g_U3654, -677555848, -2.83423000, 69.84247000, 13.44637000, g_U649 );
    sub_18501( ref g_U3661, 37021838, -0.14657000, 69.84035000, 13.44040000, g_U649 );
    sub_18559( ref g_U3654, -90.00000000, 0.00000000 );
    sub_18559( ref g_U3661, 0.00000000, 90.00000000 );
    sub_18842( ref g_U3661, 1 );
    sub_18501( ref g_U3668, -1369021324, 0.13633000, 69.84247000, 13.43634000, g_U649 );
    sub_18501( ref g_U3675, 214803252, 2.89213000, 69.84035000, 13.44040000, g_U649 );
    sub_18559( ref g_U3668, -90.00000000, 0.00000000 );
    sub_18559( ref g_U3675, 0.00000000, 90.00000000 );
    sub_18842( ref g_U3668, 1 );
    sub_18842( ref g_U3675, 1 );
    sub_18501( ref g_U3682, -1311020127, 45.82642000, 69.88700000, 14.03010000, g_U649 );
    sub_18559( ref g_U3682, -90.00000000, 0.00000000 );
    sub_21068( ref g_U3682, 1 );
    sub_18501( ref uVar16, 450428109, -48.04716000, 40.51946000, 4.09577000, g_U649 );
    sub_18842( ref uVar16, 1 );
    return;
}

void sub_18501(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_18559(int iParam0, float fParam1, float fParam2)
{
    if ((sub_18571( iParam0 )) == 0)
    {
        sub_18637( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

int sub_18571(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_18637(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_18842(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_18571( iParam0 )) == 0)
    {
        sub_18637( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_19236(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_18571( iParam0 )) == 0)
    {
        sub_18637( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_21068(int iParam0, unknown uParam1)
{
    if ((sub_18571( iParam0 )) == 0)
    {
        sub_18637( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_21357(int iParam0, unknown uParam1)
{
    if ((sub_18571( iParam0 )) == 0)
    {
        sub_18637( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_26039()
{
    sub_26083( ref g_U4393, 14.73304000, 8.38684100, 0.17261100, 133.00000000, g_U2376, 26, 6, 0, 0, 0 );
    return;
}

void sub_26083(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_26259()
{
    sub_3169( "P_SETUP_LEVEL_FLOW" );
    sub_26324( ref g_U888[0], "stad_IntroField", 8192, 1 );
    sub_26324( ref g_U888[1], "stad_IntroField", 8192, 0 );
    sub_26324( ref g_U888[2], "stad_PracField", 8192, 0 );
    sub_26324( ref g_U888[3], "stad_MediaStairwell", 8192, 0 );
    sub_26324( ref g_U888[4], "stad_MediaStairwell", 8192, 0 );
    sub_26324( ref g_U888[5], "stad_StoreRestaurant", 8192, 0 );
    sub_26324( ref g_U888[6], "stad_concession", 8192, 0 );
    sub_26324( ref g_U888[7], "stad_FirstBleachers", 8192, 0 );
    sub_26324( ref g_U888[8], "stad_FirstBleachersP2", 8192, 0 );
    sub_26324( ref g_U888[9], "stad_TrophyRoom", 8192, 0 );
    sub_26324( ref g_U888[10], "stad_SecondBleachers", 8192, 0 );
    sub_26324( ref g_U888[11], "stad_maintenance", 8192, 0 );
    sub_26324( ref g_U888[12], "stad_maintenance", 8192, 0 );
    sub_26324( ref g_U888[13], "stad_tower", 8192, 0 );
    sub_26324( ref g_U888[14], "stad_tower", 8192, 0 );
    sub_26890( ref g_U888, g_U854, 15 );
    return;
}

void sub_26324(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    StrCopy( ref iParam0->_fU0, uParam1, 32 );
    iParam0->_fU32 = nil;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = uParam2;
    iParam0->_fU36 = uParam3;
    return;
}

void sub_26890(unknown uParam0, int iParam1, int iParam2)
{
    int I;

    for ( I = 0; I <= (iParam2 - 1); I++ )
    {
        if (iParam1 == I)
        {
            (uParam0^)[I]._fU36 = 1;
        }
        else
        {
            (uParam0^)[I]._fU36 = 0;
        }
    }
    return;
}

void sub_26981()
{
    sub_3169( "P_SETUP_STREAMREQ" );
    sub_27020( ref g_U1069 );
    sub_27151( ref g_U1214 );
    sub_27233( ref g_U1263 );
    sub_27315( ref g_U1354 );
    sub_27404( ref g_U2005 );
    sub_27486( ref g_U2012 );
    sub_27575( ref g_U2034 );
    sub_27664( ref g_U2074 );
    return;
}

void sub_27020(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU0 = 0;
        (uParam0^)[I]._fU4 = 0;
        sub_27074( ref (uParam0^)[I]._fU8 );
    }
    return;
}

void sub_27074(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_27151(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU0 = 0;
        (uParam0^)[I]._fU4 = 0;
        sub_27074( ref (uParam0^)[I]._fU8 );
    }
    return;
}

void sub_27233(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU0 = 0;
        (uParam0^)[I]._fU4 = 0;
        sub_27074( ref (uParam0^)[I]._fU8 );
    }
    return;
}

void sub_27315(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        StrCopy( ref (uParam0^)[I]._fU0, "", 32 );
        (uParam0^)[I]._fU32 = 0;
        sub_27074( ref (uParam0^)[I]._fU36 );
    }
    return;
}

void sub_27404(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU0 = -1;
        (uParam0^)[I]._fU4 = 0;
        sub_27074( ref (uParam0^)[I]._fU8 );
    }
    return;
}

void sub_27486(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        StrCopy( ref (uParam0^)[I]._fU0, "", 64 );
        (uParam0^)[I]._fU64 = 0;
        sub_27074( ref (uParam0^)[I]._fU68 );
    }
    return;
}

void sub_27575(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        StrCopy( ref (uParam0^)[I]._fU0, "", 32 );
        (uParam0^)[I]._fU32 = 0;
        sub_27074( ref (uParam0^)[I]._fU36 );
    }
    return;
}

void sub_27664(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        StrCopy( ref (uParam0^)[I]._fU0, "", 64 );
        (uParam0^)[I]._fU64 = 0;
        sub_27074( ref (uParam0^)[I]._fU68 );
    }
    return;
}

void sub_27774()
{
    sub_18289( "SP", "P_LOAD_PERSISTENT_MODELS", "###" );
    if (g_U854 <= 10)
    {
        sub_27848( g_U2376, ref g_U1069 );
        sub_27848( -1409914275, ref g_U1069 );
        if (g_U854 < 13)
        {
            sub_27848( g_U2408, ref g_U1069 );
        }
        else
        {
            sub_27848( g_U2400, ref g_U1069 );
            sub_27848( g_U2401, ref g_U1069 );
            sub_27848( g_U2402, ref g_U1069 );
            sub_27848( g_U2403, ref g_U1069 );
        }
        sub_29255( 68019059, ref g_U1214 );
    }
    else
    {
        sub_18289( "SP", "P_LOAD_PERSISTENT_MODELS", "###" );
        sub_30246( g_U2376 );
        sub_30246( g_U2390 );
        sub_30246( g_U2408 );
        sub_30246( -1652775333 );
        sub_30246( 1816766229 );
        sub_30246( 1873472982 );
        sub_30246( -1993976541 );
        sub_30246( -2096019114 );
        sub_30517( 68019059 );
        sub_30517( 1478009203 );
        sub_30517( 434544317 );
        sub_30517( 1224272620 );
        sub_30517( 1194438308 );
    }
    return;
}

void sub_27848(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_27883( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_28014( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_27883(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_28014( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_28014( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_28014( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_27074( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_28014( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_28014( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_28014(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_28034( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_28034(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_29255(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_29276( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_29408( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_29276(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_29408( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_29408( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_29408( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_27074( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_29408( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_29408( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_29408(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_28034( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_30246(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_30362( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        WAIT( 0 );
    }
    return;
}

void sub_30362(unknown uParam0)
{
    return;
}

void sub_30517(unknown uParam0)
{
    REQUEST_WEAPON( uParam0 );
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        WAIT( 0 );
    }
    return;
}

void sub_30797(unknown uParam0)
{
    vector vVar3;
    unknown uVar6;
    int iVar7;
    string sVar8;
    unknown uVar9;

    sub_3169( "P_LOAD_AREA" );
    vVar3 = {g_U2138[uParam0]};
    uVar6 = g_U2256[uParam0];
    iVar7 = -1;
    switch (uParam0)
    {
        case 2:
        case 21:
        iVar7 = GET_HASH_KEY( ref g_U2460 );
        sVar8 = "Int_Bsmt_01";
        break;
        case 3:
        case 22:
        iVar7 = GET_HASH_KEY( "Room_Hallway_01" );
        sVar8 = "Int_Bsmt_02";
        break;
        case 4:
        case 23:
        iVar7 = GET_HASH_KEY( "Room_Staircase_02" );
        sVar8 = "Int_Bsmt_03";
        break;
        case 5:
        case 24:
        iVar7 = GET_HASH_KEY( ref g_U2484 );
        sVar8 = "int_store_00";
        break;
        case 9:
        case 27:
        iVar7 = GET_HASH_KEY( ref g_U2548 );
        sVar8 = "int_Trophy_01";
        break;
        case 10:
        vVar3 = {-97.16455000, 22.49700000, 26.58807000};
        SET_PED_COORDS( sub_5839(), -2.36477500, 2.76315900, 1.17283500, 1 );
        SET_PED_HEADING( sub_5839(), uVar6 );
        LOAD_SCENE( -2.36477500, 2.76315900, 1.17283500 );
        break;
    }
    if (iVar7 == -1)
    {
        LOAD_SCENE( vVar3 );
    }
    else
    {
        uVar9 = GET_INTERIOR_FROM_NAME( sVar8, 0 );
        SET_INTERIOR_ACTIVE( uVar9, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar9, iVar7 );
    }
    if ((IS_PED_DEAD( sub_5839() )) == 0)
    {
        SET_PED_COORDS( sub_5839(), vVar3, 1 );
        SET_PED_HEADING( sub_5839(), uVar6 );
        FREEZE_PED_POSITION( sub_5839(), 0 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    return;
}

void sub_31469(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_30362( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_31824(unknown uParam0, unknown uParam1)
{
    REQUEST_SCRIPT( uParam0 );
    "[doubled result, dropped if not asigned]";
    while ((HAS_SCRIPT_LOADED( uParam0 )) == 0)
    {
        WAIT( 0 );
    }
    START_NEW_SCRIPT( uParam0, uParam1 );
    return;
}

int sub_32242(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_32362(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

void sub_32566(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_32578( uParam0 );
    sub_32922( uParam1 );
    sub_33265( uParam2 );
    sub_34465( uParam3 );
    sub_34778( uParam4 );
    sub_35127( uParam5 );
    sub_35487( uParam6 );
    sub_36060( uParam7 );
    return;
}

void sub_32578(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            if (NOT (HAS_MODEL_LOADED( (uParam0^)[I]._fU0 )))
            {
                REQUEST_MODEL( (uParam0^)[I]._fU0 );
                "[doubled result, dropped if not asigned]";
                (uParam0^)[I]._fU4 = 2;
            }
            else
            {
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            if (HAS_MODEL_LOADED( (uParam0^)[I]._fU0 ))
            {
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            if (HAS_MODEL_LOADED( (uParam0^)[I]._fU0 ))
            {
                ;
            }
            else
            {
                SCRIPT_ASSERT( "Trying to remove a MODEL_NAME asset that is NOT loaded!!!", 0 );
            }
            SET_MODEL_AS_NO_LONGER_NEEDED( (uParam0^)[I]._fU0 );
            (uParam0^)[I]._fU0 = 0;
            (uParam0^)[I]._fU4 = 0;
            sub_27074( ref (uParam0^)[I]._fU8 );
        };;;
    }
    return;
}

void sub_32922(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            if (NOT (HAS_WEAPON_LOADED( (uParam0^)[I]._fU0 )))
            {
                REQUEST_WEAPON( (uParam0^)[I]._fU0 );
                (uParam0^)[I]._fU4 = 2;
            }
            else
            {
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            if (HAS_WEAPON_LOADED( (uParam0^)[I]._fU0 ))
            {
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            if (HAS_WEAPON_LOADED( (uParam0^)[I]._fU0 ))
            {
                ;
            }
            else
            {
                SCRIPT_ASSERT( "Trying to remove a WEAPON_TYPE asset that is NOT loaded!!!", 0 );
            }
            SET_WEAPON_AS_NO_LONGER_NEEDED( (uParam0^)[I]._fU0 );
            (uParam0^)[I]._fU0 = 0;
            (uParam0^)[I]._fU4 = 0;
            sub_27074( ref (uParam0^)[I]._fU8 );
        };;;
    }
    return;
}

void sub_33265(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            if ((uParam0^)[I]._fU0 != 0)
            {
                if ((ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 2 )))
                {
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    (uParam0^)[I]._fU4 = 3;
                }
                else if (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 1 ))
                {
                    SCRIPT_ASSERT( "Trying to request an ISEQ asset that is currently loading!!!", 0 );
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    (uParam0^)[I]._fU4 = 3;
                }
                else if ((ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 4 )))
                {
                    SCRIPT_ASSERT( "Trying to request an ISEQ asset that was interrupted or shuttingdown!!!", 0 );
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    ISEQ_REQUEST( (uParam0^)[I]._fU0 );
                    (uParam0^)[I]._fU4 = 2;
                }
                else
                {
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    ISEQ_REQUEST( (uParam0^)[I]._fU0 );
                    (uParam0^)[I]._fU4 = 2;
                };;;
            }
            else
            {
                SCRIPT_ASSERT( "Trying to request a DUMMY_SEQUENCE!!!", 0 );
            }
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            if ((uParam0^)[I]._fU0 != 0)
            {
                if ((ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 2 )))
                {
                    (uParam0^)[I]._fU4 = 3;
                }
            }
            else
            {
                SCRIPT_ASSERT( "Trying to load a DUMMY_SEQUENCE!!!", 0 );
            }
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            if ((uParam0^)[I]._fU0 != 0)
            {
                if ((ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 2 )))
                {
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                }
                else
                {
                    ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
                    if (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 1 ))
                    {
                        SCRIPT_ASSERT( "Trying to remove an ISEQ asset that is currently loading!!!", 0 );
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam0^)[I]._fU0, 4 )))
                    {
                        SCRIPT_ASSERT( "Trying to remove an ISEQ asset that is currently interupted or shutting down!!!", 0 );
                    }
                }
            }
            else
            {
                SCRIPT_ASSERT( "Trying to terminate a DUMMY_SEQUENCE!!!", 0 );
            }
            if ((uParam0^)[I]._fU0 != 0)
            {
                ISEQ_TERMINATE( (uParam0^)[I]._fU0 );
                (uParam0^)[I]._fU0 = 0;
            }
            (uParam0^)[I]._fU4 = 0;
            sub_27074( ref (uParam0^)[I]._fU8 );
        };;;
    }
    return;
}

void sub_34465(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            if (NOT (HAS_ANIM_DICT_LOADED( ref (uParam0^)[I]._fU0, 0 )))
            {
                REQUEST_ANIM_DICT( ref (uParam0^)[I]._fU0, 0 );
                "[doubled result, dropped if not asigned]";
                (uParam0^)[I]._fU32 = 2;
            }
            else
            {
                REQUEST_ANIM_DICT( ref (uParam0^)[I]._fU0, 0 );
                "[doubled result, dropped if not asigned]";
                (uParam0^)[I]._fU32 = 3;
            }
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            if (HAS_ANIM_DICT_LOADED( ref (uParam0^)[I]._fU0, 0 ))
            {
                (uParam0^)[I]._fU32 = 3;
            }
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            if (HAS_ANIM_DICT_LOADED( ref (uParam0^)[I]._fU0, 0 ))
            {
                ;
            }
            REMOVE_ANIM_DICT( ref (uParam0^)[I]._fU0, 0 );
            StrCopy( ref (uParam0^)[I]._fU0, "", 32 );
            (uParam0^)[I]._fU32 = 0;
            sub_27074( ref (uParam0^)[I]._fU36 );
        };;;
    }
    return;
}

void sub_34778(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            if (NOT (HAS_VEHICLE_RECORDING_BEEN_LOADED( (uParam0^)[I]._fU0 )))
            {
                REQUEST_VEHICLE_RECORDING( (uParam0^)[I]._fU0 );
                (uParam0^)[I]._fU4 = 2;
            }
            else
            {
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            if (HAS_VEHICLE_RECORDING_BEEN_LOADED( (uParam0^)[I]._fU0 ))
            {
                (uParam0^)[I]._fU4 = 3;
            }
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            if (HAS_VEHICLE_RECORDING_BEEN_LOADED( (uParam0^)[I]._fU0 ))
            {
                ;
            }
            else
            {
                SCRIPT_ASSERT( "Trying to remove a VEHICLE_RECORDING asset that is NOT loaded!!!", 0 );
            }
            REMOVE_VEHICLE_RECORDING( (uParam0^)[I]._fU0 );
            (uParam0^)[I]._fU0 = -1;
            (uParam0^)[I]._fU4 = 0;
            sub_27074( ref (uParam0^)[I]._fU8 );
        };;;
    }
    return;
}

void sub_35127(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            if (NOT (IS_ACTION_TREE_LOADED( ref (uParam0^)[I]._fU0 )))
            {
                ACTION_TREE_LOAD( ref (uParam0^)[I]._fU0 );
                (uParam0^)[I]._fU64 = 2;
            }
            else
            {
                (uParam0^)[I]._fU64 = 3;
            }
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            if (IS_ACTION_TREE_LOADED( ref (uParam0^)[I]._fU0 ))
            {
                (uParam0^)[I]._fU64 = 3;
            }
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            if (IS_ACTION_TREE_LOADED( ref (uParam0^)[I]._fU0 ))
            {
                ;
            }
            else
            {
                SCRIPT_ASSERT( "Trying to remove an ACTION_TREE asset that is NOT loaded!!!", 0 );
            }
            ACTION_TREE_UNLOAD( ref (uParam0^)[I]._fU0 );
            StrCopy( ref (uParam0^)[I]._fU0, "", 64 );
            (uParam0^)[I]._fU64 = 0;
            sub_27074( ref (uParam0^)[I]._fU68 );
        };;;
    }
    return;
}

void sub_35487(unknown uParam0)
{
    int J;
    int I;

    for ( J = 0; J <= ((uParam0^) - 1); J++ )
    {
        if ((uParam0^)[J]._fU32 == 1)
        {
            if (J <= 2)
            {
                if (NOT ((GET_SCRIPT_STREAM_STATE( ref (uParam0^)[J]._fU0, J )) == 2))
                {
                    if ((sub_35567( uParam0 )) <= 3)
                    {
                        REQUEST_SCRIPT_STREAM( ref (uParam0^)[J]._fU0, J );
                        (uParam0^)[J]._fU32 = 2;
                    }
                }
                else
                {
                    (uParam0^)[J]._fU32 = 3;
                }
            }
            else if ((sub_35567( uParam0 )) <= 3)
            {
                for ( I = 0; I <= 2; I++ )
                {
                    if ((uParam0^)[I]._fU32 == 0)
                    {
                        (uParam0^)[I]._fU0 = {(uParam0^)[J]._fU0};
                        (uParam0^)[I]._fU32 = (uParam0^)[J]._fU32;
                        (uParam0^)[I]._fU36 = {(uParam0^)[J]._fU36};
                        StrCopy( ref (uParam0^)[J]._fU0, "", 32 );
                        (uParam0^)[J]._fU32 = 0;
                        sub_27074( ref (uParam0^)[J]._fU36 );
                        return;
                    }
                }
            }
        }
        else if ((uParam0^)[J]._fU32 == 2)
        {
            if (J <= 2)
            {
                if ((GET_SCRIPT_STREAM_STATE( ref (uParam0^)[J]._fU0, J )) == 2)
                {
                    (uParam0^)[J]._fU32 = 3;
                }
            }
        }
        else if ((uParam0^)[J]._fU32 == 4)
        {
            if (J <= 2)
            {
                if ((GET_SCRIPT_STREAM_STATE( ref (uParam0^)[J]._fU0, J )) == 2)
                {
                    ;
                }
                STOP_SCRIPT_STREAM( J );
                StrCopy( ref (uParam0^)[J]._fU0, "", 32 );
                (uParam0^)[J]._fU32 = 0;
                sub_27074( ref (uParam0^)[J]._fU36 );
            }
        };;;
    }
    return;
}

void sub_35567(unknown uParam0)
{
    int I;
    int Result;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 3)
        {
            Result++;
        }
    }
    return Result;
}

void sub_36060(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            if (NOT (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam0^)[I]._fU0, 0 )))
            {
                LOAD_SCRIPT_AUDIO_BANK( ref (uParam0^)[I]._fU0 );
                (uParam0^)[I]._fU64 = 2;
            }
            else
            {
                (uParam0^)[I]._fU64 = 3;
            }
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam0^)[I]._fU0, 0 ))
            {
                (uParam0^)[I]._fU64 = 3;
            }
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam0^)[I]._fU0, 0 ))
            {
                ;
            }
            else
            {
                SCRIPT_ASSERT( "Trying to remove an AUDIO_BANK asset that is NOT loaded!!!", 0 );
            }
            RELEASE_NAMED_SCRIPT_AUDIO_BANK( ref (uParam0^)[I]._fU0 );
            StrCopy( ref (uParam0^)[I]._fU0, "", 64 );
            (uParam0^)[I]._fU64 = 0;
            sub_27074( ref (uParam0^)[I]._fU68 );
        };;;
    }
    return;
}

void sub_36486()
{
    sub_18289( "COP", "P_LOAD_PERSISTENT_ASSETS", 0 );
    LOAD_TEXTURE_DICT( "gg_s_stad" );
    sub_18289( "CO", "Starting the S_STA_GG_M81 context...", 0 );
    START_CONTEXT( "S_STA_GG_M81" );
    sub_18289( "CO", "Starting the S_STA_GG_M1 context...", 0 );
    START_CONTEXT( "S_STA_GG_M1" );
    return;
}

void sub_36718(boolean bParam0)
{
    sub_3169( "P_TECH_LIGHTS_ON_LLOD" );
    sub_36762( g_U3948 );
    sub_36762( g_U3949 );
    sub_36762( g_U3950 );
    sub_36762( g_U3951 );
    sub_36762( g_U3952 );
    if (bParam0)
    {
        g_U3952 = sub_36880( g_U2408, 0.00100000, 77.00000000, 42.50000000, 0, 0, 180, 0, 0, 1 );
    }
    else
    {
        g_U3952 = sub_36880( g_U2408, g_U3965, 0, 0, 0, 0, 0, 1 );
    }
    if (DOES_OBJECT_EXIST( g_U3952 ))
    {
        FREEZE_OBJECT_POSITION( g_U3952, 1 );
    }
    return;
}

void sub_36762(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_36880(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_36990( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_36990(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_30362( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_37340()
{
    sub_3169( "P_TECH_LIGHTS_ON_HLOD" );
    sub_36762( g_U3948 );
    sub_36762( g_U3949 );
    sub_36762( g_U3950 );
    sub_36762( g_U3951 );
    sub_36762( g_U3952 );
    g_U3948 = sub_37449( g_U2400, g_U3953, 0, 0, 0, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3948 ))
    {
        FREEZE_OBJECT_POSITION( g_U3948, 1 );
    }
    g_U3949 = sub_37449( g_U2401, g_U3956, 0, 0, 0, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3949 ))
    {
        FREEZE_OBJECT_POSITION( g_U3949, 1 );
    }
    g_U3950 = sub_37449( g_U2402, g_U3959, 0, 0, 0, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3950 ))
    {
        FREEZE_OBJECT_POSITION( g_U3950, 1 );
    }
    g_U3951 = sub_37449( g_U2403, g_U3962, 0, 0, 0, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3951 ))
    {
        FREEZE_OBJECT_POSITION( g_U3951, 1 );
    }
    return;
}

void sub_37449(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_36990( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_37901()
{
    sub_37915( ref g_U3941 );
    g_U3941[0] = sub_36880( -1652775333, -4.14443000, 10.10766000, 0.14177000, 0, 0, 2.56000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[0] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[0], 1 );
    }
    g_U3941[1] = sub_36880( 1816766229, 10.25816000, 2.27307000, 0.14177000, 0, 0, 1.88000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[1] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[1], 1 );
    }
    g_U3941[2] = sub_36880( 1873472982, 13.91821000, 23.57691000, 0.14177000, 0, 0, 2.23000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[2] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[2], 1 );
    }
    g_U3941[3] = sub_36880( -1993976541, 11.90281000, 13.09956000, 0.14177000, 0, 0, 2.95000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[3] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[3], 1 );
    }
    g_U3941[4] = sub_36880( -1993976541, 10.14508000, 8.20610000, 0.14177000, 0, 0, 90.68000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[4] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[4], 1 );
    }
    g_U3941[5] = sub_36880( -2096019114, 3.94087000, 16.99167000, 0.14177000, 0, 0, -1.16000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U3941[5] ))
    {
        FREEZE_OBJECT_POSITION( g_U3941[5], 1 );
    }
    return;
}

void sub_37915(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_36762( (uParam0^)[I] );
    }
    return;
}

void sub_38478(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_38498();
    return;
}

void sub_38498()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_38925()
{
    sub_38935();
    sub_39266();
    sub_39509();
    sub_39580( 1097859072 );
    sub_39946();
    sub_43055( 1 );
    sub_43125();
    sub_43493();
    return;
}

void sub_38935()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;

    iVar2 = 0;
    if (DOES_PAD_EXIST( 0 ))
    {
        iVar2 = IS_BUTTON_JUST_PRESSED( 0, 8 );
    }
    if ((IS_KEYBOARD_KEY_JUST_PRESSED( 25 )) || (iVar2))
    {
        uVar3 = sub_5839();
        if (NOT (IS_PED_DEAD( uVar3 )))
        {
            uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uVar3 )};
            uVar7 = GET_PED_HEADING( uVar3 );
            uVar8 = GET_DEBUG_CAM();
            uVar9 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_CAM_COORD( uVar8 )};
            uVar12 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_CAM_ROT( uVar8 )};
            uVar15 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD()};
            uVar18 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
            uVar21 = GET_GAMEPLAY_CAM_RELATIVE_HEADING();
            uVar22 = GET_GAMEPLAY_CAM_RELATIVE_PITCH();
            uVar24 = GET_GROUND_Z_FOR_3D_COORD( uVar4, ref uVar23 );
            if ((IS_PED_IN_ANY_VEHICLE( uVar3 )) == 1)
            {
                sub_39149( uVar3, ref uVar25, 1 );
                uVar26 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uVar25 )};
                uVar29 = GET_VEHICLE_HEADING( uVar25 );
            }
        }
    }
    return;
}

int sub_39149(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (bParam2)
    {
        if (NOT (IS_PED_SITTING_IN_ANY_VEHICLE( uParam0 )))
        {
            return 0;
        }
    }
    else if (NOT (IS_PED_IN_ANY_VEHICLE( uParam0 )))
    {
        return 0;
    }
    (uParam1^) = GET_VEHICLE_PED_IS_IN( uParam0 );
    return 1;
}

void sub_39266()
{
    if (l_U1 == 1)
    {
        if (l_U5 == 0)
        {
            START_WIDGET_GROUP( "Scripted Cameras" );
            ADD_WIDGET_BOOL( "bUpdateDebugCamStuff", ref l_U2 );
            ADD_WIDGET_FLOAT_SLIDER( "fDebugCamHeading", ref l_U3, -360.00000000, 360.00000000, 1.00000000 );
            ADD_WIDGET_FLOAT_SLIDER( "fDebugCamPitch", ref l_U4, -180.00000000, 180.00000000, 1.00000000 );
            STOP_WIDGET_GROUP();
            l_U5 = 1;
        }
    }
    if (l_U2 == 1)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U3, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U4, 1065353216, 0 );
        l_U2 = 0;
    }
    return;
}

void sub_39509()
{
    if ((IS_KEYBOARD_KEY_PRESSED( 20 )) == 1)
    {
        if ((IS_PED_DEAD( sub_5839() )) == 0)
        {
            SET_PED_HEALTH( sub_5839(), 0, 0 );
        }
    }
    return;
}

void sub_39580(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    int iVar8;

    if ((IS_KEYBOARD_KEY_JUST_PRESSED( 37 )) == 1)
    {
        sub_30362( "[SP]### KILL ALL PEDS IN RADIUS ###" );
        if ((IS_PED_DEAD( sub_5839() )) == 0)
        {
            iVar3 = 0;
            uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_5839() )};
            iVar8 = 1;
            while (iVar8 == 1)
            {
                if ((IS_PED_DEAD( sub_5839() )) == 0)
                {
                    iVar8 = GET_CLOSEST_ENEMY_PED( sub_5839(), uVar5, uParam0, 1, 1, 0, 1, 0, 1, ref uVar4 );
                    if (iVar8 == 1)
                    {
                        if (((GET_PED_HEALTH( uVar4 )) > 1) AND (((IS_PED_DEAD( uVar4 )) == 0) AND ((DOES_PED_EXIST( uVar4 )) == 1)))
                        {
                            sub_30362( "[SP]### thunderdome killing a ped ###" );
                            sub_39844( uVar4 );
                            SET_PED_GENERATES_DEAD_BODY_EVENTS( uVar4, 1 );
                            iVar3++;
                        }
                    }
                }
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_39844(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_39946()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    char[8] cVar10;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    char[8] cVar20;
    char[8] cVar22;

    if (l_U25 == 0)
    {
        START_WIDGET_GROUP( "Placement Helper" );
        START_NEW_WIDGET_COMBO();
        ADD_TO_WIDGET_COMBO( "HEALTH_STANDARD" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_STANDARD" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_HELMET" );
        ADD_TO_WIDGET_COMBO( "WEAPON_BEANBAG_LAUNCHER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_GRENADE_LAUNCHER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_LAW" );
        ADD_TO_WIDGET_COMBO( "WEAPON_MG_21E" );
        ADD_TO_WIDGET_COMBO( "WEAPON_MG_RPD" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_38" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_COLT1911" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_DEAGLE" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_GLOCK18" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_PT92" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_TAURUS608" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_97LC" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_AK47" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_FAL" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_FAL_RUBBER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_G36K" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_RUG30" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIOT_SHIELD" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RPG" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_BENELLIM3" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_DOUBLEBARREL" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_MOSSBERG590" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_SPAS15" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_WINCHESTERSX3" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_FAMAEMT40" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_MAC10" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_MP5" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_PM12" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_UZI" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SNIPER_M82" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SNIPER_SG1" );
        ADD_TO_WIDGET_COMBO( "WEAPON_TASER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_FLASH" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_GRENADE" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_INCENDIARY" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_SMOKE" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_TEAR_GAS" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_TIN_CAN" );
        ADD_TO_WIDGET_COMBO( "INVENT_AMMOBAG" );
        ADD_TO_WIDGET_COMBO( "INVENT_PAYNE_KILLER" );
        ADD_TO_WIDGET_COMBO( "INVENT_AMMOBAG_CARRIED" );
        ADD_TO_WIDGET_COMBO( "INVENT_MPBAG_CARRIED" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_STEALTH_BOOTS" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_WALKIE_TALKIE" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_MONOCULAR" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_FIRST_AID_KIT" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_HYPO" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_SUNGLASSES" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_NIGHTVISION" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_HEAVY" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_MAX" );
        l_U9 = STOP_WIDGET_COMBO( "PICKUP TYPE", ref l_U11 );
        ADD_WIDGET_BOOL( "Grab Player Position", ref l_U12 );
        ADD_WIDGET_BOOL( "Create Pickup", ref l_U13 );
        ADD_WIDGET_BOOL( "Output Placement Function", ref l_U14 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U18._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U18._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U18._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U21._fU0, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U21._fU4, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U21._fU8, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_BOOL( "Fixed", ref l_U15 );
        ADD_WIDGET_BOOL( "Limit Pickup Angle", ref l_U16 );
        ADD_WIDGET_FLOAT_SLIDER( "Half Angle", ref l_U17, 0.00000000, 360.00000000, 1.00000000 );
        ADD_WIDGET_BOOL( "Is placement in an Interior?", ref l_U24 );
        l_U10 = ADD_TEXT_WIDGET( "Interior Room Name" );
        SET_CONTENTS_OF_TEXT_WIDGET( l_U10, "" );
        STOP_WIDGET_GROUP();
        l_U25 = 1;
    }
    if (l_U13 == 1)
    {
        sub_42080( l_U8 );
        l_U8 = sub_42758( sub_42126( l_U11 ), l_U18, l_U21, l_U15, 1, l_U16, l_U17 );
        if (l_U24 == 1)
        {
            GET_CONTENTS_OF_TEXT_WIDGET( 32, ref uVar2, l_U10 );
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U8, ref uVar2 );
        }
        l_U13 = 0;
    }
    if (l_U12 == 1)
    {
        if ((IS_PED_DEAD( sub_5839() )) == 0)
        {
            l_U18 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_5839() )};
        }
        l_U12 = 0;
    }
    if (l_U14 == 1)
    {
        StrCopy( ref cVar10, "PICKUP_", 8 );
        GET_CONTENTS_OF_COMBO_WIDGET_SELECTION( 32, ref uVar12, l_U9 );
        StrCopy( ref cVar20, "FALSE", 8 );
        if (l_U15 == 1)
        {
            StrCopy( ref cVar20, "TRUE", 8 );
        }
        StrCopy( ref cVar22, "FALSE", 8 );
        if (l_U16 == 1)
        {
            StrCopy( ref cVar22, "TRUE", 8 );
        }
        l_U14 = 0;
    }
    return;
}

void sub_42080(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_42126(unknown uParam0)
{
    int[54] iVar3;

    array(ref iVar3, 54);
    iVar3[0] = -1888453608;
    iVar3[1] = 1274757841;
    iVar3[2] = -1322620191;
    iVar3[3] = 1360803098;
    iVar3[4] = -64228399;
    iVar3[5] = 1468647706;
    iVar3[6] = 809028259;
    iVar3[7] = -217311068;
    iVar3[8] = -1377271918;
    iVar3[9] = -343443786;
    iVar3[10] = -2029912234;
    iVar3[11] = 426620576;
    iVar3[12] = 39142315;
    iVar3[13] = 525284907;
    iVar3[14] = 1676080365;
    iVar3[15] = 584407306;
    iVar3[16] = -46756431;
    iVar3[17] = -1601242092;
    iVar3[18] = 3711131;
    iVar3[19] = 1216559076;
    iVar3[20] = -597978297;
    iVar3[21] = 1295434569;
    iVar3[22] = -1138829373;
    iVar3[23] = -1141160886;
    iVar3[24] = 1699359515;
    iVar3[25] = -2117698134;
    iVar3[26] = -514108743;
    iVar3[27] = -579469575;
    iVar3[28] = 211733796;
    iVar3[29] = 280965399;
    iVar3[30] = -535211597;
    iVar3[31] = 843762214;
    iVar3[32] = 465100219;
    iVar3[33] = 750210207;
    iVar3[34] = 1160251115;
    iVar3[35] = 413078994;
    iVar3[36] = -527347232;
    iVar3[37] = 1675234620;
    iVar3[38] = 2088230095;
    iVar3[39] = -591863731;
    iVar3[40] = 1192708175;
    iVar3[41] = -1484798391;
    iVar3[42] = -4072149;
    iVar3[43] = 255084111;
    iVar3[44] = -547949121;
    iVar3[45] = -853563202;
    iVar3[46] = 455124134;
    iVar3[47] = -189960753;
    iVar3[48] = -718604917;
    iVar3[49] = -1126973237;
    iVar3[50] = 1528601552;
    iVar3[51] = -847977410;
    iVar3[52] = 2018389501;
    iVar3[53] = 865801398;
    return iVar3[uParam0];
}

void sub_42758(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_43055(int iParam0)
{
    if ((IS_KEYBOARD_KEY_PRESSED( 49 )) == 1)
    {
        if (NOT (IS_PED_DEAD( sub_5839() )))
        {
            SET_PAYNEKILLER_AMT( GET_PAYNEKILLER_AMT() + iParam0 );
        }
    }
    return;
}

void sub_43125()
{
    if (l_U36 == 0)
    {
        START_WIDGET_GROUP( "Glint Placement Helper" );
        ADD_WIDGET_BOOL( "Show/Reset Glint", ref l_U34 );
        ADD_WIDGET_BOOL( "Hide Glint", ref l_U35 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U31._fU0, 60536, 5000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U31._fU4, 60536, 5000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U31._fU8, 60536, 5000, 0.10000000 );
        STOP_WIDGET_GROUP();
        l_U36 = 1;
    }
    if (l_U34 == 1)
    {
        if (l_U30 != nil)
        {
            if ((DOES_GLINT_EXIST( l_U30 )) == 1)
            {
                REMOVE_GLINT( l_U30 );
            }
        }
        l_U30 = nil;
        l_U30 = CREATE_GLINT( 0, l_U31 );
        l_U34 = 0;
    }
    if (l_U35 == 1)
    {
        if (l_U30 != nil)
        {
            if ((DOES_GLINT_EXIST( l_U30 )) == 1)
            {
                REMOVE_GLINT( l_U30 );
            }
        }
        l_U30 = nil;
        l_U35 = 0;
    }
    return;
}

void sub_43493()
{
    if (g_U660)
    {
        g_U661 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_5839() )};
        g_U668 = GET_GAMEPLAY_CAM_RELATIVE_HEADING();
        g_U669 = GET_GAMEPLAY_CAM_RELATIVE_PITCH();
        START_WIDGET_GROUP( "Teleport Player Widget" );
        ADD_WIDGET_FLOAT_READ_ONLY( "Player Current X", ref g_U661._fU0 );
        ADD_WIDGET_FLOAT_READ_ONLY( "Player Current Y", ref g_U661._fU4 );
        ADD_WIDGET_FLOAT_READ_ONLY( "Player Current Z", ref g_U661._fU8 );
        ADD_WIDGET_FLOAT_SLIDER( "Player X", ref g_U661._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Player Y", ref g_U661._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Player Z", ref g_U661._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Player Heading", ref g_U664, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Game Cam Heading", ref g_U668, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Game Cam Pitch", ref g_U669, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_BOOL( "Set coords to current", ref g_U667 );
        ADD_WIDGET_BOOL( "TeleportPlayer", ref g_U665 );
        ADD_WIDGET_BOOL( "Just set heading", ref g_U666 );
        ADD_WIDGET_BOOL( "Just set game cam pitch/heading", ref g_U670 );
        STOP_WIDGET_GROUP();
        g_U660 = 0;
    }
    if (g_U665 == 1)
    {
        sub_44135( g_U661, g_U664, g_U668, g_U669 );
        g_U666 = 1;
        g_U665 = 0;
    }
    if (g_U666)
    {
        g_U666 = 0;
        SET_PED_HEADING( sub_5839(), g_U664 );
    }
    if (g_U670)
    {
        g_U670 = 0;
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U668, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U669, 1065353216, 0 );
    }
    if (g_U667)
    {
        g_U667 = 0;
        g_U661 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_5839() )};
        g_U664 = GET_PED_HEADING( sub_5839() );
        g_U661._fU8 += -1.00000000;
        g_U668 = GET_GAMEPLAY_CAM_RELATIVE_HEADING();
        g_U669 = GET_GAMEPLAY_CAM_RELATIVE_PITCH();
    }
    return;
}

void sub_44135(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_5839();
    sub_44161( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

void sub_44161(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_44477()
{
    if (NOT (IS_PED_DEAD( sub_5839() )))
    {
        if ((g_U3873) AND (NOT g_U888[13]._fU36))
        {
            g_U888[13]._fU36 = 1;
        }
    }
    return;
}

void sub_44555(unknown uParam0, int iParam1)
{
    int J;
    int I;
    int iVar6;

    for ( J = 0; J <= (iParam1 - 1); J++ )
    {
        if (((uParam0^)[J]._fU40 == 0) AND ((uParam0^)[J]._fU36 == 1))
        {
            (uParam0^)[J]._fU40 = 1;
        }
        if ((uParam0^)[J]._fU40 == 0)
        {
            ;
        }
        else if ((uParam0^)[J]._fU40 == 1)
        {
            iVar6 = 0;
            for ( I = 0; I <= (iParam1 - 1); I++ )
            {
                if (((uParam0^)[I]._fU40 < 4) AND ((uParam0^)[I]._fU40 > 0))
                {
                    if ((IS_THREAD_ACTIVE( (uParam0^)[I]._fU32 )) == 1)
                    {
                        iVar6++;
                    }
                }
            }
            if (iVar6 < 2)
            {
                if ((DOES_SCRIPT_EXIST( ref (uParam0^)[J]._fU0 )) == 1)
                {
                    if ((HAS_SCRIPT_LOADED( ref (uParam0^)[J]._fU0 )) == 0)
                    {
                        REQUEST_SCRIPT( ref (uParam0^)[J]._fU0 );
                        "[doubled result, dropped if not asigned]";
                    }
                    (uParam0^)[J]._fU40 = 2;
                }
                else
                {
                    SCRIPT_ASSERT( "[SP] Error: Trying to load a script that doesn't exist!", 0 );
                    (uParam0^)[J]._fU40 = 0;
                }
            }
            else
            {
                SCRIPT_ASSERT( "[SP] Error: Attempting to start another thread when 2 are already running...", 0 );
            }
        }
        else if ((uParam0^)[J]._fU40 == 2)
        {
            if ((HAS_SCRIPT_LOADED( ref (uParam0^)[J]._fU0 )) == 1)
            {
                (uParam0^)[J]._fU32 = START_NEW_SCRIPT( ref (uParam0^)[J]._fU0, (uParam0^)[J]._fU44 );
                (uParam0^)[J]._fU40 = 3;
            }
        }
        else if ((uParam0^)[J]._fU40 == 3)
        {
            if ((IS_THREAD_ACTIVE( (uParam0^)[J]._fU32 )) == 0)
            {
                (uParam0^)[J]._fU40 = 4;
            }
        }
        else if ((uParam0^)[J]._fU40 == 4)
        {
            ;
        };;;;;
    }
    return;
}

void sub_45264()
{
    unknown uVar2;

    if (g_U3968)
    {
        g_U3968 = 0;
        START_WIDGET_GROUP( "Blood smear test" );
        ADD_WIDGET_BOOL( "Setup test", ref g_U3969 );
        START_WIDGET_GROUP( "Sync point" );
        sub_45393( "Sync Pos", ref g_U3972, -971227136, 1176256512, 1065353216 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Blood" );
        sub_45393( "Blood Pos", ref g_U3976, -971227136, 1176256512, 1065353216 );
        ADD_WIDGET_FLOAT_SLIDER( "Blood speed", ref g_U3979, -10, 10, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Blood anim start time", ref g_U3980, 0, 1, 0.10000000 );
        ADD_WIDGET_INT_SLIDER( "Blood timer", ref g_U3990, 0, 10000, 250 );
        ADD_WIDGET_BOOL( "Recreate Blood", ref g_U3991 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
    }
    if (g_U3969)
    {
        g_U3969 = 0;
        sub_45745( 0 );
        FREEZE_PED_POSITION( sub_5839(), 1 );
        sub_45892( sub_5839(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        sub_44135( g_U3972, 65446, 0, 0 );
        uVar2 = GET_INTERIOR_AT_COORDS( g_U3972 );
        SET_INTERIOR_ACTIVE( uVar2, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar2, GET_HASH_KEY( ref g_U2452 ) );
        sub_44135( g_U3972, 65446, 0, 0 );
        FREEZE_PED_POSITION( sub_5839(), 0 );
        sub_46053( "LEVEL_S_STAD_CP_01", 0, 1 );
        ACTION_TREE_FORCE_UNLOAD( "/LEVEL/S_STAD/s_stad_inj1.act" );
        while (IS_ACTION_TREE_LOADED( "/LEVEL/S_STAD/s_stad_inj1.act" ))
        {
            WAIT( 0 );
            ACTION_TREE_FORCE_UNLOAD( "/LEVEL/S_STAD/s_stad_inj1.act" );
            sub_3169( "Waiting for S_STAD_INJ1 to unload" );
        }
        ACTION_TREE_LOAD( "/LEVEL/S_STAD/s_stad_inj1.act" );
        sub_36990( 1427023677, 1 );
        sub_36762( g_U3975 );
        while (NOT (IS_ACTION_TREE_LOADED( "/LEVEL/S_STAD/s_stad_inj1.act" )))
        {
            WAIT( 0 );
            sub_3169( "Waiting for S_STAD_INJ1 to load" );
        }
        SET_CAM_VIEW_MODE( 0 );
        PED_ACTION_TREE_PLAY_NODE( sub_5839(), "/Global/S_STAD_INJ1/S_STAD_INJ_SEQ/S_STAD_INJ" );
        SET_PED_FORCED_TO_WALK( sub_5839(), 1 );
        SET_PLAYER_CONTROL( sub_5861(), 1, 0 );
        sub_46557( 0 );
        g_U3970 = 0;
        SET_PED_SYNC_POINT( sub_5839(), g_U3972, -90.00000000 );
        PED_SET_ACTION_INTENTION( sub_5839(), 52, 1000, g_U649 );
        sub_46700( ref g_U3981, g_U3990, 1, 0 );
        sub_46836( ref g_U3981 );
    }
    if ((sub_46961( ref g_U3981 )) || (g_U3991))
    {
        sub_47149( ref g_U3975, 1427023677, g_U3976, ref g_U2452, 1, 1 );
        sub_47353( g_U3975, "BLOOD_PARENT", "st_objModels", g_U3979, g_U3980 );
        g_U3991 = 0;
    }
    return;
}

void sub_45393(unknown uParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[32] cVar7;
    char[32] cVar15;
    char[32] cVar23;

    StrCopy( ref cVar7, uParam0, 32 );
    ConcatString(ref cVar7, ".x", 32);
    StrCopy( ref cVar15, uParam0, 32 );
    ConcatString(ref cVar15, ".y", 32);
    StrCopy( ref cVar23, uParam0, 32 );
    ConcatString(ref cVar23, ".z", 32);
    ADD_WIDGET_FLOAT_SLIDER( ref cVar7, iParam1 + 0, uParam2, uParam3, uParam4 );
    ADD_WIDGET_FLOAT_SLIDER( ref cVar15, iParam1 + 4, uParam2, uParam3, uParam4 );
    ADD_WIDGET_FLOAT_SLIDER( ref cVar23, iParam1 + 8, uParam2, uParam3, uParam4 );
    return;
}

void sub_45745(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_45892(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

void sub_46053(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_46557(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_46700(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_46836(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_46961(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_47149(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_47178( uParam0, uParam1, uParam2, g_U649, uParam5, uParam6, uParam7 );
    return;
}

void sub_47178(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    sub_47204( uParam0, uParam1, uParam2, uParam5, uParam9, uParam10 );
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), uParam8 );
    }
    return;
}

void sub_47204(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_36762( (uParam0^) );
    (uParam0^) = sub_36880( uParam1, uParam2, uParam5, 0, uParam9, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), uParam8 );
    return;
}

void sub_47353(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        PLAY_OBJECT_ANIM( uParam0, uParam1, uParam2, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uParam0, uParam1, uParam2, uParam4 );
        SET_OBJECT_ANIM_SPEED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}


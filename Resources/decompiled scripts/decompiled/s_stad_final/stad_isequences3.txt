void main()
{
    unknown uVar2;

    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = -1;
    l_U38 = {64536, 64536, 64536};
    l_U59 = 0;
    l_U60 = 0;
    l_U61 = 0;
    l_U62 = 0;
    l_U63 = {-2.74392800, 58.74361000, 9.23710700};
    l_U66 = {-4.20000000, 67.10000000, 11.99500000};
    l_U69 = 290.00000000;
    l_U84 = "S_STAD_VIG38";
    l_U85 = 0;
    l_U86 = 0;
    l_U87 = 0;
    l_U88 = 0;
    l_U89 = 0;
    l_U90 = {9.36307300, 59.54036000, 9.59982000};
    l_U93 = 94.97590000;
    l_U152 = 0;
    l_U153 = 0;
    l_U154 = 0;
    l_U155 = {5.74706600, 45.92946000, 5.15806200};
    l_U158 = {1.51000000, 60.51100000, 9.61700000};
    l_U161 = {0.45400000, 61.20400000, 9.80000000};
    l_U164 = 97.21608000;
    l_U165 = 356.09770000;
    l_U194 = 0;
    l_U195 = 0;
    l_U196 = 0;
    l_U202 = 0;
    l_U203 = {58.26000000, 66.24000000, -3.20000000};
    l_U206 = 90.00000000;
    l_U207 = {58.54000000, 66.95000000, -3.20000000};
    l_U210 = 90.00000000;
    l_U211 = {59.46000000, 66.95000000, -3.20000000};
    l_U214 = 90.00000000;
    l_U215 = {34.62400000, 60.80000000, 12.70000000};
    l_U218 = 180.00000000;
    l_U219 = 0;
    l_U220 = 0;
    l_U221 = 0;
    l_U222 = {-86.50000000, -50.85000000, 19.50000000};
    l_U225 = 205.00000000;
    l_U226 = 0;
    l_U227 = 0;
    l_U228 = 0;
    l_U229 = -105.00000000;
    l_U230 = {-80.92000000, -47.24000000, 22.84000000};
    StrCopy( ref l_U233, "S_STAD_BULLC_SNIPE", 32 );
    l_U241 = 0;
    l_U242 = 0;
    l_U243 = 0;
    l_U244 = 0;
    l_U245 = 0;
    l_U246 = 0;
    l_U247 = {85.84000000, 53.56000000, 9.57000000};
    l_U250 = 314.50000000;
    l_U265 = {93.49622000, 52.35903000, 9.57356500};
    l_U268 = 23.17000000;
    l_U269 = 21.24574000;
    l_U270 = -16.03388000;
    l_U271 = 0;
    l_U272 = 0;
    l_U273 = 0;
    l_U274 = 0;
    l_U275 = 0;
    l_U276 = 0;
    l_U291 = {47.80000000, 81.70000000, 12.99700000};
    l_U294 = 174;
    l_U295 = 80.00000000;
    l_U296 = {49.52107000, 81.88412000, 12.99810000};
    l_U299 = 69.48367000;
    l_U300 = 31.65757000;
    l_U301 = -14.51449000;
    l_U302 = 0;
    l_U303 = 0;
    l_U304 = 0;
    l_U363 = 0;
    l_U364 = 0;
    l_U365 = 0;
    l_U410 = 0;
    l_U411 = 0;
    l_U412 = 0;
    l_U569 = {-0.39000000, 28.40000000, 0.23000000};
    l_U572 = 0.00000000;
    l_U573 = {11.20000000, 71.11000000, -3.00000000};
    l_U576 = -85.63000000;
    l_U597 = 0;
    l_U598 = {7.03000000, 70.53000000, -2.13000000};
    l_U601 = {-3.77000000, -0.52000000, -49.11000000};
    l_U604 = 21.83000000;
    l_U605 = 3000;
    l_U606 = 4000;
    l_U607 = {8.29000000, 70.63000000, -2.13000000};
    l_U610 = {-0.15403400, -0.52029200, -69.74328000};
    l_U613 = 4.60000000;
    l_U614 = 900;
    l_U615 = 2000;
    l_U616 = {8.29000000, 70.63000000, -2.13000000};
    l_U619 = {1.91000000, -0.52000000, -69.25000000};
    l_U622 = 21.83000000;
    l_U623 = 3500;
    l_U624 = 2500;
    l_U625 = {6.28425900, 69.81386000, -1.57576800};
    l_U628 = {-4.60542900, -0.20682100, -68.84898000};
    l_U631 = 31.64000000;
    l_U632 = 4000;
    l_U633 = 1000;
    l_U634 = {3.08552300, 69.15109000, -0.80390300};
    l_U637 = {-11.45410000, -0.00000100, -72.53322000};
    l_U640 = 45.00000000;
    l_U641 = 1500;
    l_U642 = {6.97000000, 70.37000000, -3.20134900};
    l_U645 = 282.86000000;
    l_U646 = 4.60677100;
    l_U647 = -11.38729000;
    l_U657 = 2250;
    l_U667 = 600;
    l_U677 = 6750;
    StrCopy( ref l_U678, "S_STAD_PAS_BASEMENT", 32 );
    l_U686 = 0;
    l_U687 = 0;
    l_U688 = 0;
    l_U689 = 0;
    l_U690 = {71.15000000, 94.68000000, -4.00000000};
    l_U693 = 180.00000000;
    l_U695 = {72.03000000, 94.68000000, -4.00000000};
    l_U698 = 180.00000000;
    l_U708 = 5800;
    l_U771 = 3000;
    l_U772 = {70.05000000, 95.45300000, -2.48800000};
    l_U775 = {-6.61400000, 0.00000000, -121.96800000};
    l_U778 = 35.00000000;
    l_U779 = 3500;
    l_U780 = 3000;
    l_U781 = {72.32800000, 92.76000000, -2.91500000};
    l_U784 = {-2.04400000, -0.00000000, -170.21100000};
    l_U787 = 45.00000000;
    l_U788 = 1000;
    l_U789 = -80.21486000;
    l_U790 = -1.97548100;
    l_U791 = 0;
    l_U792 = 0;
    l_U793 = 0;
    l_U794 = 1;
    l_U795 = 0;
    l_U796 = 0;
    l_U824 = {91.57430000, 62.36010000, 2.78224000};
    l_U827 = 208.05200000;
    l_U828 = 0;
    l_U860 = {90.77700000, 62.32100000, 4.24700000};
    l_U863 = {-4.92300000, -0.00002800, -88.58900000};
    l_U866 = 45.00000000;
    l_U867 = 1000;
    l_U899 = {92.57100000, 62.50800000, 4.18400000};
    l_U902 = {-6.27600000, 0.52800000, -113.02700000};
    l_U905 = 60.00000000;
    l_U906 = 2000;
    l_U907 = 1;
    l_U908 = 3;
    l_U940 = {95.20707000, 63.08890000, 4.68383600};
    l_U943 = {-4.27480100, -0.00000200, -174.02530000};
    l_U946 = 45.00000000;
    l_U947 = 2000;
    l_U948 = 1;
    l_U949 = 1;
    l_U1049 = -5.17400000;
    l_U1050 = -4.26400000;
    l_U1051 = 750;
    uVar2 = GIVE_WEAPON_TO_PED_HAND( g_U4389._fU4, 68019059, 90, 0 );
    ENABLE_WEAPON_ATTACHMENT( uVar2, 14, 1 );
    TOGGLE_WEAPON_ATTACHMENT( uVar2, 14, 0 );
    ENABLE_WEAPON_ATTACHMENT( uVar2, 8, 1 );
    TOGGLE_WEAPON_ATTACHMENT( uVar2, 8, 1 );
    sub_2227();
    sub_5117( 500 );
    while (true)
    {
        sub_5201();
        sub_7956();
        sub_9406();
        sub_12194();
        sub_13096();
        sub_14314();
        sub_15013();
        sub_15895();
        sub_16224();
        sub_16557();
        sub_24154();
        sub_27011();
        sub_27248();
        sub_34690();
        WAIT( 0 );
    }
    return;
}

void sub_2227()
{
    START_WIDGET_GROUP( "Interactive Sequence Test Helper" );
    START_WIDGET_GROUP( " TV VIG - ON  " );
    ADD_WIDGET_BOOL( "Teleport player to the Sequence", ref l_U197 );
    ADD_WIDGET_BOOL( "Start - tv on", ref l_U198 );
    ADD_WIDGET_BOOL( "Start - tv off", ref l_U200 );
    ADD_WIDGET_BOOL( "Start - tv channel ", ref l_U201 );
    ADD_WIDGET_BOOL( "Kill Sequence", ref l_U199 );
    START_WIDGET_GROUP( "on position" );
    ADD_WIDGET_FLOAT_SLIDER( "Player Pos X", ref l_U203._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Player Pos Y", ref l_U203._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Player Pos Z", ref l_U203._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Player Heading", ref l_U206, -5000.00000000, 5000.00000000, 0.01000000 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "channel position" );
    ADD_WIDGET_FLOAT_SLIDER( "Player Pos X", ref l_U207._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Player Pos Y", ref l_U207._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Player Pos Z", ref l_U207._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Player Heading", ref l_U210, -5000.00000000, 5000.00000000, 0.01000000 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "Off position" );
    ADD_WIDGET_FLOAT_SLIDER( "Player Pos X", ref l_U211._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Player Pos Y", ref l_U211._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Player Pos Z", ref l_U211._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Player Heading", ref l_U214, -5000.00000000, 5000.00000000, 0.01000000 );
    STOP_WIDGET_GROUP();
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "S_STAD_VIGNETTE_37" );
    ADD_WIDGET_BOOL( "Teleport Player to the Sequence", ref l_U59 );
    ADD_WIDGET_BOOL( "Start Sequence", ref l_U60 );
    ADD_WIDGET_BOOL( "Hide In Cover", ref l_U62 );
    ADD_WIDGET_BOOL( "Kill Sequence", ref l_U61 );
    sub_3299( ref l_U66, "Bagman's position", 1036831949 );
    ADD_WIDGET_FLOAT_SLIDER( "Bagman's rotation", ref l_U69, 0, 360, 0.10000000 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "S_STAD_VIGNETTE_38" );
    ADD_WIDGET_BOOL( "Teleport Player to the Sequence", ref l_U85 );
    ADD_WIDGET_BOOL( "Start Sequence", ref l_U86 );
    ADD_WIDGET_BOOL( "Kill Sequence", ref l_U87 );
    ADD_WIDGET_BOOL( "Send Short-Circuit", ref l_U88 );
    l_U94[0] = {3.44623700, 59.46808000, 9.59229400};
    l_U94[1] = {2.00000000, 60.58000000, 9.81500000};
    l_U94[2] = {2.26686000, 58.80000000, 9.19500000};
    l_U104[0] = 99.58700000;
    l_U104[1] = 0.00000000;
    l_U104[2] = 10.00000000;
    sub_3299( ref l_U94[0], "Soldier 1 Pos", 1036831949 );
    sub_3299( ref l_U94[1], "Soldier 2 Pos", 1036831949 );
    sub_3299( ref l_U94[2], "Soldier 3 Pos", 1036831949 );
    ADD_WIDGET_FLOAT_SLIDER( "Soldier 1 Rot", ref l_U104[0], 0, 360, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Soldier 2 Rot", ref l_U104[1], 0, 360, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Soldier 3 Rot", ref l_U104[2], 0, 360, 0.10000000 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "S_STAD_VIGNETTE_39" );
    ADD_WIDGET_BOOL( "Teleport Player to the Sequence", ref l_U152 );
    ADD_WIDGET_BOOL( "Start Sequence", ref l_U153 );
    ADD_WIDGET_BOOL( "Kill Sequence", ref l_U154 );
    sub_3299( ref l_U158, "First Soldier's position", 1036831949 );
    ADD_WIDGET_FLOAT_SLIDER( "Soldiers's rotation", ref l_U164, 0, 360, 0.10000000 );
    sub_3299( ref l_U161, "Second Soldier's position", 1036831949 );
    ADD_WIDGET_FLOAT_SLIDER( "Soldiers's rotation", ref l_U165, 0, 360, 0.10000000 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "03_04A_BLEND_IN" );
    ADD_WIDGET_BOOL( "Teleport Player to 03_04A cutscene area", ref l_U219 );
    ADD_WIDGET_BOOL( "Start 03_02A blendout", ref l_U220 );
    ADD_WIDGET_BOOL( "Kill 03_02A blendout", ref l_U221 );
    ADD_WIDGET_FLOAT_SLIDER( "Max Pos X", ref l_U222._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Max Pos Y", ref l_U222._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Max Pos Z", ref l_U222._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Max Heading", ref l_U225, -360.00000000, 360.00000000, 1.00000000 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "03_03_BLEND_OUT" );
    ADD_WIDGET_BOOL( "Teleport Player to 03_03 cutscene area", ref l_U194 );
    ADD_WIDGET_BOOL( "Start 03_03 blendout", ref l_U195 );
    ADD_WIDGET_BOOL( "Kill 03_03 blendout", ref l_U196 );
    ADD_WIDGET_FLOAT_SLIDER( "Max Pos X", ref l_U215._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Max Pos Y", ref l_U215._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Max Pos Z", ref l_U215._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Max Heading", ref l_U218, -360.00000000, 360.00000000, 1.00000000 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "S_STAD_BULLC_SNIPE" );
    ADD_WIDGET_BOOL( "Teleport Player to S_STAD_BULLC_SNIPE ", ref l_U226 );
    ADD_WIDGET_BOOL( "Start S_STAD_BULLC_SNIPE ", ref l_U227 );
    ADD_WIDGET_BOOL( "Kill S_STAD_BULLC_SNIPE ", ref l_U228 );
    STOP_WIDGET_GROUP();
    STOP_WIDGET_GROUP();
    return;
}

void sub_3299(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

void sub_5117(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_5201()
{
    if (l_U242 == 0)
    {
        START_WIDGET_GROUP( "s_stad_v35_PassMove WIDGET" );
        ADD_WIDGET_BOOL( "Teleport player to the Sequence", ref l_U241 );
        ADD_WIDGET_BOOL( "Start Sequence", ref l_U243 );
        ADD_WIDGET_BOOL( "Terminate Sequence", ref l_U244 );
        ADD_WIDGET_BOOL( "Play Action Intention: walk to door", ref l_U245 );
        ADD_WIDGET_BOOL( "Play Action Intention: run up ramp", ref l_U246 );
        START_WIDGET_GROUP( "Passos Position:" );
        sub_3299( ref l_U247, "Passos Start Position", 1036831949 );
        ADD_WIDGET_FLOAT_SLIDER( "Passos Heading", ref l_U250, -360.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U242 = 1;
    }
    if (l_U241)
    {
        sub_5690( "SBA", "P_HANDLE_V35_PASS_MOVE_TEST_WIDGET: Teleporting player to VIG 35 position", 0 );
        sub_5742( 1000 );
        LOAD_SCENE( l_U265 );
        if ((IS_PED_DEAD( sub_5833() )) == 0)
        {
            SET_PED_COORDS( sub_5833(), l_U265, 1 );
            SET_PED_HEADING( sub_5833(), l_U268 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U269, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U270, 1065353216, 0 );
            SET_ROOM_FOR_PED_BY_NAME( sub_5833(), ref g_U2500 );
        }
        sub_5117( 1000 );
        l_U241 = 0;
    }
    if (l_U243 == 1)
    {
        sub_6092( "[SBA]### Starting s_stad_v35_PassMove Interactive Sequence ###" );
        sub_6133( "LEVEL_S_STAD_CP_03", 0, 1 );
        sub_6209( l_U264 );
        sub_6308( ref l_U251, l_U247, l_U250, 1258994346, 26, 0, 2, 0, 0 );
        l_U264 = sub_6405( ref l_U251 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U264, 1 );
        SET_ROOM_FOR_PED_BY_NAME( l_U264, ref g_U2500 );
        I_SEQUENCE_UNREGISTER_ENTITY( ref g_U2820, "passos_entity" );
        sub_7282( ref g_U2820, 1 );
        sub_7368( ref g_U2820, 1 );
        I_SEQUENCE_REGISTER_ENTITY( ref g_U2820, "passos_entity", l_U264, 0 );
        I_SEQUENCE_START( ref g_U2820 );
        l_U243 = 0;
    }
    if (l_U244 == 1)
    {
        sub_6092( "[SBA]### Terminating s_stad_v35_PassMove Interactive Sequence ###" );
        I_SEQUENCE_UNREGISTER_ENTITY( ref g_U2820, "passos_entity" );
        sub_7282( ref g_U2820, 1 );
        sub_6209( l_U264 );
        l_U244 = 0;
    }
    if (l_U245 == 1)
    {
        sub_5690( "SBA", "P_HANDLE_V35_PASS_MOVE_TEST_WIDGET: set action intention - Passos walks to door at bottom of ramp.", 0 );
        PED_SET_ACTION_INTENTION( l_U264, 47, 100, 0.00000000, 0.00000000, 0.00000000 );
        l_U245 = 0;
    }
    if (l_U246 == 1)
    {
        sub_5690( "SBA", "P_HANDLE_V35_PASS_MOVE_TEST_WIDGET: set action intention - Passos runs up ramp.", 0 );
        PED_SET_ACTION_INTENTION( l_U264, 48, 100, 0.00000000, 0.00000000, 0.00000000 );
        l_U246 = 0;
    }
    return;
}

void sub_5690(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_5742(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_5833()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_5855() );
    }
    return 0;
}

void sub_5855()
{
    return GET_PLAYER_ID();
}

void sub_6092(unknown uParam0)
{
    return;
}

void sub_6133(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_6209(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_6308(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_6405(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_6575( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_7044( iParam0->_fU40 );
    sub_7124( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_6575(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_6092( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_7044(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_7124(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_7282(unknown uParam0, int iParam1)
{
    if ((I_SEQUENCE_IS_LOADED( uParam0 )) == 1)
    {
        I_SEQUENCE_TERMINATE( uParam0 );
    }
    if (iParam1 == 1)
    {
        while ((I_SEQUENCE_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_7368(unknown uParam0, int iParam1)
{
    if ((I_SEQUENCE_IS_LOADED( uParam0 )) == 0)
    {
        I_SEQUENCE_LOAD_DATA( uParam0 );
        if (iParam1 == 1)
        {
            while ((I_SEQUENCE_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_7956()
{
    if (l_U272 == 0)
    {
        START_WIDGET_GROUP( "s_stad_V35_CD_PassMove WIDGET" );
        ADD_WIDGET_BOOL( "Teleport player to the Sequence", ref l_U271 );
        ADD_WIDGET_BOOL( "Start Sequence", ref l_U273 );
        ADD_WIDGET_BOOL( "Terminate Sequence", ref l_U274 );
        ADD_WIDGET_BOOL( "Play Speech Intention", ref l_U276 );
        ADD_WIDGET_BOOL( "Play Action Intention: Enter Booth", ref l_U275 );
        START_WIDGET_GROUP( "Passos Position:" );
        sub_3299( ref l_U291, "Passos Start Position", 1036831949 );
        ADD_WIDGET_FLOAT_SLIDER( "Passos start Heading", ref l_U294, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Passos Move into booth Heading", ref l_U295, -360.00000000, 360.00000000, 1.00000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U272 = 1;
    }
    if (l_U271)
    {
        sub_5690( "SBA", "P_HANDLE_V35_CD_PASS_MOVE_TEST_WIDGET: Teleporting player to VIG 35 C&D position", 0 );
        sub_5742( 1000 );
        LOAD_SCENE( l_U296 );
        if ((IS_PED_DEAD( sub_5833() )) == 0)
        {
            SET_PED_COORDS( sub_5833(), l_U296, 1 );
            SET_PED_HEADING( sub_5833(), l_U299 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U300, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U301, 1065353216, 0 );
            SET_ROOM_FOR_PED_BY_NAME( sub_5833(), ref g_U2508 );
        }
        sub_5117( 1000 );
        l_U271 = 0;
    }
    if (l_U273 == 1)
    {
        sub_6092( "[SBA]### Starting s_stad_V35_CD_PassMove Interactive Sequence ###" );
        sub_6133( "LEVEL_S_STAD_CP_03", 0, 1 );
        sub_6209( l_U290 );
        sub_6308( ref l_U277, l_U291, l_U294, 1258994346, 26, 0, 2, 0, 0 );
        l_U290 = sub_6405( ref l_U277 );
        if (((IS_PED_DEAD( l_U290 )) == 0) AND ((DOES_PED_EXIST( l_U290 )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U290, 1 );
            SET_ROOM_FOR_PED_BY_NAME( l_U290, ref g_U2508 );
            if ((IS_PED_DEAD( sub_5833() )) == 0)
            {
                SET_PED_DEFAULT_AIM_AT_PED( l_U290, sub_5833() );
            }
        }
        I_SEQUENCE_UNREGISTER_ENTITY( ref g_U2828, "passos_entity" );
        sub_7282( ref g_U2828, 1 );
        sub_7368( ref g_U2828, 1 );
        I_SEQUENCE_REGISTER_ENTITY( ref g_U2828, "passos_entity", l_U290, 0 );
        I_SEQUENCE_START( ref g_U2828 );
        l_U273 = 0;
    }
    if (l_U274 == 1)
    {
        sub_6092( "[SBA]### Terminating s_stad_V35_CD_PassMove Interactive Sequence ###" );
        I_SEQUENCE_UNREGISTER_ENTITY( ref g_U2828, "passos_entity" );
        sub_7282( ref g_U2828, 1 );
        sub_6209( l_U290 );
        l_U274 = 0;
    }
    if (l_U276 == 1)
    {
        PED_SET_ACTION_INTENTION( l_U290, 37, 100, 0.00000000, 0.00000000, 0.00000000 );
        l_U276 = 0;
    }
    if (l_U275 == 1)
    {
        sub_5690( "SBA", "P_HANDLE_V35_CD_PASS_MOVE_TEST_WIDGET: set action intention - Passos enters the booth.", 0 );
        if (NOT (IS_PED_DEAD( l_U290 )))
        {
            SET_PED_HEADING( l_U290, l_U295 );
            PED_SET_ACTION_INTENTION( l_U290, 47, 100, 0.00000000, 0.00000000, 0.00000000 );
        }
        l_U275 = 0;
    }
    return;
}

void sub_9406()
{
    int I;

    if (l_U364 == 0)
    {
        sub_6092( "[TEH]### Starting V42_PATROL Iseq Setup ###" );
        l_U349[0] = {-64.76000000, 65.13600000, 13.00000000};
        l_U359[0] = 330.36000000;
        l_U349[1] = {-64.03234000, 61.85284000, 13.00039000};
        l_U359[1] = 336.28270000;
        l_U349[2] = {-68.43390000, 59.87180000, 13.00055000};
        l_U359[2] = 327.36700000;
        START_WIDGET_GROUP( "s_stad_v42_patrol_WIDGET" );
        ADD_WIDGET_BOOL( "Teleport player to the Sequence", ref l_U363 );
        ADD_WIDGET_BOOL( "Start Sequence", ref l_U365 );
        sub_9727( "Enemy 1", ref l_U349[0], ref l_U359[0] );
        sub_9727( "Enemy 2", ref l_U349[1], ref l_U359[1] );
        sub_9727( "Enemy 3", ref l_U349[2], ref l_U359[2] );
        ADD_WIDGET_BOOL( "bV42_ActInt", ref l_U410 );
        STOP_WIDGET_GROUP();
        sub_6308( ref l_U366[0], l_U349[0], l_U359[0], g_U2386, 7, 3, 2, 0, 0 );
        sub_6308( ref l_U366[1], l_U349[1], l_U359[1], g_U2386, 7, 3, 2, 0, 0 );
        sub_6308( ref l_U366[2], l_U349[2], l_U359[2], g_U2386, 7, 3, 2, 0, 0 );
        l_U411 = 0;
        l_U364 = 1;
    }
    if (l_U363 == 1)
    {
        sub_6092( "[TEH]### Teleporting player to the S_STAD_V42_PATROL ###" );
        sub_5742( 1000 );
        LOAD_SCENE( g_U2138[9] );
        if ((IS_PED_DEAD( g_U4389._fU4 )) == 0)
        {
            SET_PED_COORDS( g_U4389._fU4, g_U2138[9], 1 );
            SET_PED_HEADING( g_U4389._fU4, g_U2256[9] );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( -2.48588800, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -13.17214000, 1065353216, 0 );
            FREEZE_PED_POSITION( g_U4389._fU4, 1 );
        }
        sub_5117( 1000 );
        FREEZE_PED_POSITION( g_U4389._fU4, 0 );
        l_U363 = 0;
    }
    if (l_U365 == 1)
    {
        sub_6092( "[TEH]### Starting V42_PATROL Interactive Sequence ###" );
        sub_7282( ref g_U2868, 1 );
        sub_6133( "LEVEL_S_STAD_CP_05", 0, 1 );
        sub_7368( ref g_U2868, 1 );
        sub_10448( g_U2138[9], g_U2256[9], -0.07704800, -3.98053800 );
        sub_10573( ref l_U406 );
        I = 0;
        for ( I = 0; I < l_U406; I++ )
        {
            l_U406[I] = sub_6405( ref l_U366[I] );
            if (NOT (IS_PED_DEAD( l_U406[I] )))
            {
                sub_10722( l_U406[I], l_U349[I], l_U359[I] );
                CLEAR_PED_TASKS_IMMEDIATELY( l_U406[I] );
            }
            SET_ROOM_FOR_PED_BY_NAME( l_U406[I], "Room_Trophy" );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U406[I], 1 );
            sub_10861( l_U406[I], 1478009203, 25000, 0, 0 );
        }
        sub_11205( ref l_U406, "GMED" );
        I_SEQUENCE_REGISTER_ENTITY( ref g_U2868, "V42_PATROL_GMED1", l_U406[0], 0 );
        I_SEQUENCE_REGISTER_ENTITY( ref g_U2868, "V42_PATROL_GMED2", l_U406[1], 0 );
        I_SEQUENCE_REGISTER_ENTITY( ref g_U2868, "V42_PATROL_GMED3", l_U406[2], 0 );
        I_SEQUENCE_START( ref g_U2868 );
        l_U365 = 0;
    }
    if ((NOT l_U411) AND (l_U410))
    {
        sub_6092( "[TEH]### Starting V42_PATROL Iseq Act intention ###" );
        l_U410 = 0;
        l_U411 = 1;
        PED_SET_ACTION_INTENTION( l_U406[0], 47, 1000, g_U649 );
        PED_SET_ACTION_INTENTION( l_U406[1], 47, 1000, g_U649 );
        PED_SET_ACTION_INTENTION( l_U406[2], 47, 1000, g_U649 );
    }
    if (((PED_GET_ACTION_INTENTION_STATUS( l_U406[2], 47 )) == 3) || (((PED_GET_ACTION_INTENTION_STATUS( l_U406[1], 47 )) == 3) || ((PED_GET_ACTION_INTENTION_STATUS( l_U406[0], 47 )) == 3)))
    {
        l_U410 = 1;
    }
    if ((PED_GET_ACTION_INTENTION_STATUS( l_U406[0], 47 )) == 1)
    {
        PED_FINISH_ACTION_INTENTION( l_U406[0], 47 );
        sub_11730( ref l_U406[0], 2, 0 );
    }
    if ((PED_GET_ACTION_INTENTION_STATUS( l_U406[1], 47 )) == 1)
    {
        PED_FINISH_ACTION_INTENTION( l_U406[1], 47 );
        sub_11730( ref l_U406[1], 2, 0 );
    }
    if ((PED_GET_ACTION_INTENTION_STATUS( l_U406[2], 47 )) == 1)
    {
        PED_FINISH_ACTION_INTENTION( l_U406[2], 47 );
        sub_11730( ref l_U406[2], 2, 0 );
    }
    return;
}

void sub_9727(unknown uParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam0 );
    sub_3299( uParam1, "Ped Position", 1036831949 );
    ADD_WIDGET_FLOAT_SLIDER( "Ped Heading", uParam2, -360.00000000, 360.00000000, 1.00000000 );
    STOP_WIDGET_GROUP();
    return;
}

void sub_10448(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_5833();
    sub_10474( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

void sub_10474(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_10573(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_6209( (uParam0^)[I] );
    }
    return;
}

void sub_10722(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_10861(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_6092( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_11205(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_11730(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_11751( uParam0, sub_5833(), uParam1, uParam2 );
    return;
}

void sub_11751(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;

    sub_11787( "MAL_UnblockAndCombatPed" );
    OPEN_SEQUENCE_TASK( ref uVar6 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        sub_11787( "MAL_UnblockAndCombatPed: Victim is not dead" );
        TASK_COMBAT_PED( 0, uParam1 );
    }
    CLOSE_SEQUENCE_TASK( uVar6 );
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        sub_11787( "MAL_UnblockAndCombatPed: Ped is not dead" );
        if (bParam3)
        {
            CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        }
        else
        {
            CLEAR_PED_TASKS( (uParam0^) );
        }
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam2 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
    }
    CLEAR_SEQUENCE_TASK( uVar6 );
    return;
}

void sub_11787(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_12194()
{
    if (l_U59 == 1)
    {
        sub_6092( "[SP]### Teleporting player to the S_STAD_VIG37 ###" );
        sub_5742( 1000 );
        LOAD_SCENE( l_U63 );
        if ((IS_PED_DEAD( g_U4389._fU4 )) == 0)
        {
            SET_PED_COORDS( g_U4389._fU4, l_U63, 1 );
            SET_PED_HEADING( g_U4389._fU4, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
        }
        sub_5117( 1000 );
        l_U59 = 0;
    }
    if (l_U60 == 1)
    {
        sub_6092( "[SP]### Starting S_STAD_VIG37 Interactive Sequence ###" );
        sub_7282( "S_STAD_VIG37", 1 );
        sub_7368( "S_STAD_VIG37", 1 );
        sub_6308( ref l_U71, l_U66, l_U69, -2056814065, 7, 3, 2, 0, 0 );
        sub_12554( ref l_U70, ref l_U71, 1, 1, 0 );
        sub_10861( l_U70, -389125832, 25000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U70, 1 );
        I_SEQUENCE_REGISTER_ENTITY( "S_STAD_VIG37", "s_stad_bagman", l_U70, 0 );
        I_SEQUENCE_START( "S_STAD_VIG37" );
        l_U60 = 0;
    }
    if (l_U62)
    {
        sub_5690( "GA", "Setting bag man to hide in cover.", 0 );
        if (NOT (IS_PED_DEAD( l_U70 )))
        {
            PED_SET_ACTION_INTENTION( l_U70, 47, 1000, g_U649 );
        }
        l_U62 = 0;
    }
    if (l_U61 == 1)
    {
        sub_6092( "[SP]### Killing S_STAD_VIG37 Interactive Sequence ###" );
        sub_7282( "S_STAD_VIG37", 1 );
        sub_6209( l_U70 );
        l_U61 = 0;
    }
    return;
}

void sub_12554(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
    sub_6209( (uParam0^) );
    (uParam0^) = sub_6405( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
            sub_11787( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
    sub_12682( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

void sub_12682(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

void sub_13096()
{
    if (l_U85 == 1)
    {
        sub_6092( "[SP]### Teleporting player to the S_STAD_VIG38 ###" );
        sub_5742( 1000 );
        LOAD_SCENE( l_U90 );
        if ((IS_PED_DEAD( g_U4389._fU4 )) == 0)
        {
            SET_PED_COORDS( g_U4389._fU4, l_U90, 1 );
            SET_PED_HEADING( g_U4389._fU4, l_U93 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( -1.44002200, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -15.15027000, 1065353216, 0 );
        }
        sub_5117( 1000 );
        l_U85 = 0;
    }
    if (l_U86 == 1)
    {
        sub_6092( "[SP]### Starting S_STAD_VIG38 Interactive Sequence ###" );
        sub_7282( l_U84, 1 );
        sub_6133( "LEVEL_S_STAD_CP_04", 0, 1 );
        sub_7368( l_U84, 1 );
        sub_6308( ref l_U112[0], l_U94[0], l_U104[0], g_U2385, 7, 3, 2, 0, 0 );
        sub_6308( ref l_U112[1], l_U94[1], l_U104[1], g_U2385, 7, 3, 2, 0, 0 );
        sub_6308( ref l_U112[2], l_U94[2], l_U104[2], g_U2385, 7, 3, 2, 0, 0 );
        sub_12554( ref l_U108[0], ref l_U112[0], 1, 1, 0 );
        sub_12554( ref l_U108[1], ref l_U112[1], 1, 1, 0 );
        sub_12554( ref l_U108[2], ref l_U112[2], 1, 1, 0 );
        sub_11205( ref l_U108, "VIG38" );
        sub_10861( l_U108[0], 68019059, 25000, 0, 0 );
        sub_10861( l_U108[1], 1478009203, 25000, 0, 0 );
        sub_10861( l_U108[2], 434544317, 25000, 0, 0 );
        SET_PED_COLLISION( l_U108[1], 0 );
        SET_PED_COLLISION( l_U108[2], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U108[0], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U108[1], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U108[2], 1 );
        I_SEQUENCE_REGISTER_ENTITY( l_U84, "s_stad_cp1", l_U108[0], 0 );
        I_SEQUENCE_REGISTER_ENTITY( l_U84, "s_stad_cp2", l_U108[1], 0 );
        I_SEQUENCE_REGISTER_ENTITY( l_U84, "s_stad_cp3", l_U108[2], 0 );
        I_SEQUENCE_START( l_U84 );
        l_U89 = 1;
        l_U86 = 0;
    }
    if (l_U89)
    {
        if ((I_SEQUENCE_QUERY_STATE( l_U84, 3 )) == 1)
        {
            if (l_U88)
            {
                PED_SET_ACTION_INTENTION( l_U108[0], 47, 1000, g_U649 );
                PED_SET_ACTION_INTENTION( l_U108[1], 47, 1000, g_U649 );
                PED_SET_ACTION_INTENTION( l_U108[2], 47, 1000, g_U649 );
                l_U88 = 0;
            }
        }
        else if ((I_SEQUENCE_QUERY_STATE( l_U84, 6 )) == 1)
        {
            sub_5690( "RJM", "ISequence is done, activate the Peds", 0 );
            SET_PED_COLLISION( l_U108[1], 1 );
            SET_PED_COLLISION( l_U108[2], 1 );
            sub_11730( ref l_U108[0], 2, 0 );
            sub_11730( ref l_U108[1], 2, 0 );
            sub_11730( ref l_U108[2], 2, 0 );
            l_U89 = 0;
        }
    }
    if (l_U87 == 1)
    {
        sub_6092( "[SP]### Killing S_STAD_VIG38 Interactive Sequence ###" );
        sub_7282( l_U84, 1 );
        sub_10573( ref l_U108 );
        l_U87 = 0;
        l_U89 = 0;
    }
    return;
}

void sub_14314()
{
    if (l_U152 == 1)
    {
        sub_6092( "[SP]### Teleporting player to the S_STAD_VIG39 ###" );
        sub_5742( 1000 );
        LOAD_SCENE( l_U155 );
        if ((IS_PED_DEAD( g_U4389._fU4 )) == 0)
        {
            SET_PED_COORDS( g_U4389._fU4, l_U155, 1 );
            SET_PED_HEADING( g_U4389._fU4, 178.00000000 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
        }
        sub_5117( 1000 );
        l_U152 = 0;
    }
    if (l_U153 == 1)
    {
        sub_6092( "[SP]### Starting S_STAD_VIG39 Interactive Sequence ###" );
        sub_7282( ref g_U2852, 1 );
        sub_6133( "LEVEL_S_STAD_CP_04", 0, 1 );
        sub_7368( ref g_U2852, 1 );
        sub_6308( ref l_U167, l_U158, l_U164, g_U2385, 7, 3, 2, 0, 0 );
        sub_6308( ref l_U181, l_U161, l_U165, g_U2385, 7, 3, 2, 0, 0 );
        sub_12554( ref l_U166, ref l_U167, 1, 1, 0 );
        sub_12554( ref l_U180, ref l_U181, 1, 1, 0 );
        sub_10861( l_U166, 1478009203, 25000, 0, 0 );
        sub_10861( l_U180, 1478009203, 25000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U166, 1 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U180, 1 );
        I_SEQUENCE_REGISTER_ENTITY( ref g_U2852, "v39_first_soldier", l_U166, 0 );
        I_SEQUENCE_REGISTER_ENTITY( ref g_U2852, "v39_second_soldier", l_U180, 0 );
        I_SEQUENCE_START( ref g_U2852 );
        l_U153 = 0;
    }
    if (l_U154 == 1)
    {
        sub_6092( "[SP]### Killing S_STAD_V39 Interactive Sequence ###" );
        sub_7282( ref g_U2852, 1 );
        sub_6209( l_U166 );
        sub_6209( l_U180 );
        l_U154 = 0;
    }
    return;
}

void sub_15013()
{
    int I;

    if (NOT l_U303)
    {
        sub_6092( "[BSW]### Starting V41 Iseq Setup ###" );
        START_WIDGET_GROUP( "s_stad_v41_WIDGET" );
        ADD_WIDGET_BOOL( "Teleport player to the Sequence", ref l_U302 );
        ADD_WIDGET_BOOL( "Start Sequence", ref l_U304 );
        STOP_WIDGET_GROUP();
        sub_6308( ref l_U305[0], -46.03018000, 65.24065000, 10.80248000, 180.00000000, 1053517203, 7, 3, 2, 0, 0 );
        sub_6308( ref l_U305[1], -45.59098000, 65.58652000, 10.60540000, 180.00000000, 1053517203, 7, 3, 2, 0, 0 );
        sub_6308( ref l_U305[2], -46.08837000, 66.21528000, 11.20144000, 180.00000000, 1053517203, 7, 3, 2, 0, 0 );
        l_U303 = 1;
    }
    if (l_U302)
    {
        sub_6092( "[BSW]### Teleporting player to the S_STAD_VIG41 ###" );
        sub_5742( 1000 );
        LOAD_SCENE( g_U2138[9] );
        if (NOT (IS_PED_DEAD( g_U4389._fU4 )))
        {
            SET_PED_COORDS( g_U4389._fU4, -23.64883000, 58.49313000, 9.40006600, 1 );
            SET_PED_HEADING( g_U4389._fU4, 59.82980000 );
            FREEZE_PED_POSITION( g_U4389._fU4, 1 );
        }
        sub_5117( 1000 );
        FREEZE_PED_POSITION( g_U4389._fU4, 0 );
        l_U302 = 0;
    }
    if (l_U304)
    {
        sub_6092( "[BSW]### Starting VIG41 Interactive Sequence ###" );
        sub_7282( ref g_U2860, 1 );
        sub_6133( "LEVEL_S_STAD_CP_04", 0, 1 );
        sub_7368( ref g_U2860, 1 );
        sub_10573( ref l_U345 );
        I = 0;
        for ( I = 0; I < l_U345; I++ )
        {
            l_U345[I] = sub_6405( ref l_U305[I] );
            sub_10861( l_U345[I], 1478009203, 25000, 0, 0 );
        }
        sub_11205( ref l_U345, "CP" );
        I_SEQUENCE_REGISTER_ENTITY( ref g_U2860, "CP_ATTACK_WAVE_CP1", l_U345[0], 0 );
        I_SEQUENCE_REGISTER_ENTITY( ref g_U2860, "CP_ATTACK_WAVE_CP2", l_U345[1], 0 );
        I_SEQUENCE_REGISTER_ENTITY( ref g_U2860, "CP_ATTACK_WAVE_CP3", l_U345[2], 0 );
        I_SEQUENCE_START( ref g_U2860 );
        l_U304 = 0;
    }
    return;
}

void sub_15895()
{
    if (l_U194)
    {
        sub_5690( "BSW", "Teleporting player to bleacher 1 start", 0 );
        LOAD_SCENE( l_U215 );
        sub_10722( sub_5833(), l_U215, l_U218 );
        l_U194 = 0;
    }
    if (l_U195)
    {
        sub_5690( "bsw", "Starting 0303 Blend Out.", 0 );
        sub_7282( ref g_U2796, 1 );
        sub_7368( ref g_U2796, 1 );
        I_SEQUENCE_REGISTER_ENTITY( ref g_U2796, "03_03_BLEND_MAX", sub_5833(), 0 );
        sub_10722( sub_5833(), l_U215, l_U218 );
        I_SEQUENCE_START( ref g_U2796 );
        l_U195 = 0;
    }
    if (l_U196)
    {
        sub_5690( "BSW", "Killing 03_03 Blend Out.", 0 );
        sub_7282( ref g_U2796, 1 );
        l_U196 = 0;
    }
    return;
}

void sub_16224()
{
    if (l_U219)
    {
        sub_5690( "GA", "Teleporting player to second sniper nest.", 0 );
        LOAD_SCENE( l_U222 );
        sub_10722( sub_5833(), l_U222, l_U225 );
        l_U219 = 0;
    }
    if (l_U220)
    {
        sub_5690( "GA", "Starting 03_04A Blend In.", 0 );
        sub_7282( ref g_U2788, 1 );
        sub_7368( ref g_U2788, 1 );
        I_SEQUENCE_REGISTER_ENTITY( ref g_U2788, "03_04A_BLENDIN_MAX", sub_5833(), 0 );
        sub_10722( sub_5833(), l_U222, l_U225 );
        I_SEQUENCE_START( ref g_U2788 );
        l_U220 = 0;
    }
    if (l_U221)
    {
        sub_5690( "GA", "Killing 03_04A Blend In.", 0 );
        sub_7282( ref g_U2788, 1 );
        l_U221 = 0;
    }
    return;
}

void sub_16557()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;

    if (l_U688 == 0)
    {
        sub_16595( "SpeechMain", 128 );
        START_WIDGET_GROUP( "Blood Smear NIS Helper" );
        ADD_WIDGET_BOOL( "Teleport To Test", ref l_U686 );
        ADD_WIDGET_BOOL( "Restart NIS", ref l_U687 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay Cam Heading", ref l_U646, -180.00000000, 180.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay Cam Pitch", ref l_U647, -180.00000000, 180.00000000, 0.01000000 );
        ADD_WIDGET_INT_SLIDER( "Passos 1st Speech Delay", ref l_U657, 0, 999999, 100 );
        ADD_WIDGET_INT_SLIDER( "Passos Move Delay", ref l_U667, 0, 999999, 100 );
        ADD_WIDGET_INT_SLIDER( "Passos 2nd Speech Delay", ref l_U677, 0, 999999, 100 );
        START_WIDGET_GROUP( "Player" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U642._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U642._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U642._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U645, -360.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Cam 01" );
        ADD_WIDGET_INT_SLIDER( "Duration", ref l_U597, 0, 999999, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U598._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U598._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U598._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U601._fU0, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U601._fU4, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U601._fU8, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Field Of View", ref l_U604, 0.01000000, 100.00000000, 0.25000000 );
        STOP_WIDGET_GROUP();
        ADD_WIDGET_INT_SLIDER( "Interpolation 01 Duration", ref l_U605, 0, 999999, 100 );
        START_WIDGET_GROUP( "Cam 02" );
        ADD_WIDGET_INT_SLIDER( "Duration", ref l_U606, 0, 999999, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U607._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U607._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U607._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U610._fU0, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U610._fU4, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U610._fU8, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Field Of View", ref l_U613, 0.01000000, 100.00000000, 0.25000000 );
        STOP_WIDGET_GROUP();
        ADD_WIDGET_INT_SLIDER( "Interpolation 02 Duration", ref l_U614, 0, 999999, 100 );
        START_WIDGET_GROUP( "Cam 03" );
        ADD_WIDGET_INT_SLIDER( "Duration", ref l_U615, 0, 999999, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U616._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U616._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U616._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U619._fU0, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U619._fU4, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U619._fU8, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Field Of View", ref l_U622, 0.01000000, 100.00000000, 0.25000000 );
        STOP_WIDGET_GROUP();
        ADD_WIDGET_INT_SLIDER( "Interpolation 03 Duration", ref l_U623, 0, 999999, 100 );
        START_WIDGET_GROUP( "Cam 04" );
        ADD_WIDGET_INT_SLIDER( "Duration", ref l_U624, 0, 999999, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U625._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U625._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U625._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U628._fU0, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U628._fU4, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U628._fU8, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Field Of View", ref l_U631, 0.01000000, 100.00000000, 0.25000000 );
        STOP_WIDGET_GROUP();
        ADD_WIDGET_INT_SLIDER( "Interpolation 04 Duration", ref l_U632, 0, 999999, 100 );
        START_WIDGET_GROUP( "Cam 05" );
        ADD_WIDGET_INT_SLIDER( "Duration", ref l_U633, 0, 999999, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U634._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U634._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U634._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U637._fU0, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U637._fU4, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U637._fU8, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Field Of View", ref l_U640, 0.01000000, 100.00000000, 0.25000000 );
        STOP_WIDGET_GROUP();
        ADD_WIDGET_INT_SLIDER( "Interpolation 05 Duration", ref l_U641, 0, 999999, 100 );
        STOP_WIDGET_GROUP();
        l_U688 = 1;
    }
    if (l_U686 == 1)
    {
        sub_5742( 0 );
        sub_10722( sub_5833(), l_U642, l_U645 );
        if (((IS_PED_DEAD( sub_5833() )) == 0) AND ((IS_PLAYER_DEAD( sub_5855() )) == 0))
        {
            FREEZE_PED_POSITION( sub_5833(), 1 );
        }
        uVar2 = GET_HASH_KEY( ref g_U2444 );
        uVar3 = GET_INTERIOR_AT_COORDS( l_U642 );
        SET_INTERIOR_ACTIVE( uVar3, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar3, uVar2 );
        if (((IS_PED_DEAD( sub_5833() )) == 0) AND ((IS_PLAYER_DEAD( sub_5855() )) == 0))
        {
            FREEZE_PED_POSITION( sub_5833(), 0 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U646, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U647, 1065353216, 0 );
        sub_6133( "LEVEL_S_STAD_CP_01", 0, 1 );
        sub_19339( "/LEVEL/S_STAD/s_stad_inj1.act", 1 );
        if (((IS_PED_DEAD( sub_5833() )) == 0) AND ((IS_PLAYER_DEAD( sub_5855() )) == 0))
        {
            PED_ACTION_TREE_PLAY_NODE( sub_5833(), "/Global/S_STAD_INJ1/S_STAD_INJ_SEQ/S_STAD_INJ" );
        }
        sub_5117( 0 );
        l_U686 = 0;
    }
    if (l_U687 == 1)
    {
        I_SEQUENCE_UNREGISTER_ENTITY( ref l_U678, "passos" );
        sub_7282( ref l_U678, 1 );
        sub_7368( ref l_U678, 1 );
        sub_6575( g_U2376, 1 );
        sub_6308( ref uVar4, l_U569, l_U572, g_U2376, 26, 6, 0, 0, 0 );
        sub_6209( l_U568 );
        l_U568 = sub_6405( ref uVar4 );
        if (((IS_PED_DEAD( l_U568 )) == 0) AND ((DOES_PED_EXIST( l_U568 )) == 1))
        {
            SET_PERSISTENT_PED_VARIATION( l_U568, "Pass_Stad_Hat" );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U568, 1 );
        }
        sub_10722( l_U568, l_U573, l_U576 );
        I_SEQUENCE_REGISTER_ENTITY( ref l_U678, "Passos", l_U568, 0 );
        I_SEQUENCE_START( ref l_U678 );
        if (((IS_PED_DEAD( l_U568 )) == 0) AND ((DOES_PED_EXIST( l_U568 )) == 1))
        {
            PED_ACTION_TREE_PLAY_NODE( l_U568, "/Global/PASSOS_THROUGH_BASEMENT/PASSOS_THROUGH_BASEMENT_CONTROL/SECTION_1_DOORS_TO_BIN/BLOOD_TRAIL_WAIT" );
        }
        l_U412 = 1;
        l_U687 = 0;
    }
    switch (l_U412)
    {
        case 0: break;
        case 1:
        sub_5690( "SP", "nisBloodSmearState = NIS2_SETUP", "###" );
        sub_20025( ref l_U648 );
        sub_20025( ref l_U658 );
        sub_20149( 1, 0, 0, 1 );
        if (((IS_PED_DEAD( sub_5833() )) == 0) AND ((IS_PLAYER_DEAD( sub_5855() )) == 0))
        {
            SET_PED_VISIBLE( sub_5833(), 0 );
        }
        sub_20381( ref l_U413, l_U598, l_U601, l_U604, l_U597 );
        sub_20381( ref l_U444, l_U607, l_U610, l_U613, l_U606 );
        sub_20381( ref l_U475, l_U616, l_U619, l_U622, l_U615 );
        sub_20381( ref l_U506, l_U625, l_U628, l_U631, l_U624 );
        sub_20381( ref l_U537, l_U634, l_U637, l_U640, l_U633 );
        sub_20843( ref l_U413 );
        l_U412 = 2;
        sub_5690( "SP", "nisBloodSmearState = NIS2_PLAYING", "###" );
        break;
        case 2:
        if ((sub_21106( ref l_U413, 1 )) == 1)
        {
            sub_5690( "SP", "camBloodSmear01 Finished...", "###" );
            sub_20509( ref l_U648, l_U657, 1, 0 );
            sub_20898( ref l_U648 );
            sub_21488( ref l_U413, ref l_U444, l_U605, 1, 1 );
        }
        if ((sub_21144( ref l_U648 )) == 1)
        {
            if (((IS_PED_DEAD( l_U568 )) == 0) AND (((DOES_PED_EXIST( l_U568 )) == 1) AND ((IS_PED_DEAD( sub_5833() )) == 0)))
            {
                sub_21657( "SSTDAUD" );
                sub_21773( ref l_U577 );
                sub_21855( 0, sub_5833(), "MAX", ref l_U577, 2, 0 );
                sub_21855( 1, l_U568, "PASSOS", ref l_U577, 2, 0 );
                sub_22098( "SSTD_BTMAB", ref l_U577, 8, 1 );
            }
        }
        if ((sub_21106( ref l_U444, 1 )) == 1)
        {
            sub_5690( "SP", "camBloodSmear02 Finished...", "###" );
            sub_20509( ref l_U658, l_U667, 1, 0 );
            sub_20898( ref l_U658 );
            sub_21488( ref l_U444, ref l_U475, l_U614, 1, 1 );
        }
        if ((sub_21106( ref l_U475, 1 )) == 1)
        {
            sub_5690( "SP", "camBloodSmear03 Finished...", "###" );
            sub_10722( sub_5833(), l_U642, l_U645 );
            if (((IS_PED_DEAD( sub_5833() )) == 0) AND ((IS_PLAYER_DEAD( sub_5855() )) == 0))
            {
                SET_PED_VISIBLE( sub_5833(), 1 );
            }
            sub_21488( ref l_U475, ref l_U506, l_U623, 1, 1 );
        }
        if ((sub_21106( ref l_U506, 1 )) == 1)
        {
            sub_5690( "SP", "camBloodSmear04 Finished...", "###" );
            sub_21488( ref l_U506, ref l_U537, l_U632, 1, 1 );
        }
        if ((sub_21144( ref l_U658 )) == 1)
        {
            if (((IS_PED_DEAD( l_U568 )) == 0) AND ((DOES_PED_EXIST( l_U568 )) == 1))
            {
                PED_ACTION_TREE_PLAY_NODE( l_U568, "/Global/PASSOS_THROUGH_BASEMENT/PASSOS_THROUGH_BASEMENT_CONTROL/SECTION_1_DOORS_TO_BIN/COVER_A_TO_BIN" );
            }
            sub_20509( ref l_U668, l_U677, 1, 0 );
            sub_20898( ref l_U668 );
        }
        if ((sub_21144( ref l_U668 )) == 1)
        {
            if (((IS_PED_DEAD( l_U568 )) == 0) AND (((DOES_PED_EXIST( l_U568 )) == 1) AND ((IS_PED_DEAD( sub_5833() )) == 0)))
            {
                sub_21657( "SSTDAUD" );
                sub_21773( ref l_U587 );
                sub_21855( 0, sub_5833(), "MAX", ref l_U587, 2, 0 );
                sub_21855( 1, l_U568, "PASSOS", ref l_U587, 2, 0 );
                sub_22098( "SSTD_FDPD", ref l_U587, 8, 1 );
            }
        }
        if ((sub_21106( ref l_U537, 1 )) == 1)
        {
            sub_5690( "SP", "camBloodSmear05 Finished...", "###" );
            sub_23655( l_U641, 1, 0, l_U646, l_U647, 0 );
            l_U412 = 3;
        }
        break;
        case 3:
        sub_5690( "SP", "nisBloodSmearState = NIS2_FINISHED", "###" );
        sub_23818( 1, 1 );
        if (((IS_PED_DEAD( sub_5833() )) == 0) AND ((IS_PLAYER_DEAD( sub_5855() )) == 0))
        {
            SIMULATE_PLAYER_INPUT_GAIT( GET_PLAYER_ID(), 2, 2000, 0 );
        }
        l_U412 = 0;
        break;
    }
    return;
}

void sub_16595(unknown uParam0, unknown uParam1)
{
    REQUEST_SCRIPT( uParam0 );
    "[doubled result, dropped if not asigned]";
    while ((HAS_SCRIPT_LOADED( uParam0 )) == 0)
    {
        WAIT( 0 );
    }
    START_NEW_SCRIPT( uParam0, uParam1 );
    return;
}

void sub_19339(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_20025(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_20149(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_5833() )))
        {
            SET_PLAYER_CONTROL( sub_5855(), 0, uParam2 );
            SET_PED_DUCKING( sub_5833(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_5833() );
            }
            SET_PED_INVINCIBLE( sub_5833(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_20381(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_20509( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U723, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_20509(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_20843(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_20898( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_20898(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_21106(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_21144( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_21144( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

int sub_21144(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_21488(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE_WITH_INTERP( iParam1->_fU0, iParam0->_fU0, uParam2, uParam3, uParam4 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_20898( iParam1 + 48 );
    iParam1->_fU32 = 1;
    iParam1->_fU40 = 1;
    return;
}

void sub_21657(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_21677();
    return;
}

void sub_21677()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_21773(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_21855(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_22098(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_22122( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_22122(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_22177( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_22177(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_22212( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_22706( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_22212(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_22706(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_23655(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_23818(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_5833() )))
    {
        SET_PLAYER_CONTROL( sub_5855(), 1, 0 );
        SET_PED_INVINCIBLE( sub_5833(), 0 );
        if (bParam0)
        {
            sub_23899();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_23899()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_5833() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_5833(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_5833(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_5833(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_5833(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_24154()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;

    if (l_U793 == 0)
    {
        sub_16595( "SpeechMain", 128 );
        START_WIDGET_GROUP( "Start Practice NIS Helper" );
        ADD_WIDGET_BOOL( "Teleport To Area", ref l_U791 );
        ADD_WIDGET_BOOL( "Restart NIS", ref l_U792 );
        ADD_WIDGET_INT_SLIDER( "Player into Cover Delay", ref l_U708, 0, 999999, 100 );
        START_WIDGET_GROUP( "Player" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U690._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U690._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U690._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U693, -5000.00000000, 5000.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Passos" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U695._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U695._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U695._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U698, -5000.00000000, 5000.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Cam 01" );
        ADD_WIDGET_INT_SLIDER( "Duration", ref l_U771, 0, 999999, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U772._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U772._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U772._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U775._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U775._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U775._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Field Of View", ref l_U778, 0.00000000, 100.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        ADD_WIDGET_INT_SLIDER( "Interpolation Duration 01", ref l_U779, 0, 999999, 100 );
        START_WIDGET_GROUP( "Cam 02" );
        ADD_WIDGET_INT_SLIDER( "Duration", ref l_U780, 0, 999999, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U781._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U781._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U781._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U784._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U784._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U784._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Field Of View", ref l_U787, 0.00000000, 100.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        ADD_WIDGET_INT_SLIDER( "Interpolation Duration 02", ref l_U788, 0, 999999, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay Cam Heading", ref l_U789, -180.00000000, 180.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay Cam Pitch", ref l_U790, -180.00000000, 180.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        l_U793 = 1;
    }
    if (l_U791 == 1)
    {
        sub_5742( 0 );
        sub_10722( sub_5833(), l_U690, l_U693 );
        if (((IS_PED_DEAD( sub_5833() )) == 0) AND ((IS_PLAYER_DEAD( sub_5855() )) == 0))
        {
            FREEZE_PED_POSITION( sub_5833(), 1 );
        }
        uVar2 = GET_HASH_KEY( ref g_U2460 );
        uVar3 = GET_INTERIOR_AT_COORDS( l_U690 );
        SET_INTERIOR_ACTIVE( uVar3, 1, 0 );
        CLEAR_AREA( l_U690, 100.00000000, 1 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar3, uVar2 );
        if (((IS_PED_DEAD( sub_5833() )) == 0) AND ((IS_PLAYER_DEAD( sub_5855() )) == 0))
        {
            FREEZE_PED_POSITION( sub_5833(), 0 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0.00000000, 1065353216, 0 );
        sub_7368( ref g_U2692, 1 );
        sub_7368( ref g_U2684, 1 );
        sub_25823( ref g_U3038, 0, 1, 1065353216 );
        sub_5117( 0 );
        l_U791 = 0;
    }
    if (l_U792 == 1)
    {
        sub_20025( ref l_U699 );
        I_SEQUENCE_UNREGISTER_ENTITY( ref g_U2692, "s_stad_practice_pas_fi" );
        sub_7282( ref g_U2692, 1 );
        I_SEQUENCE_UNREGISTER_ENTITY( ref g_U2684, "03_02_BLEND_MAX" );
        sub_7282( ref g_U2684, 1 );
        sub_7368( ref g_U2692, 1 );
        sub_7368( ref g_U2684, 1 );
        l_U689 = 1;
        l_U792 = 0;
    }
    switch (l_U689)
    {
        case 0: break;
        case 1:
        sub_5690( "SP", "nisStartPracState = NIS3_SETUP", "###" );
        sub_20149( 1, 0, 0, 1 );
        sub_20381( ref l_U709, l_U772, l_U775, l_U778, l_U771 );
        sub_20381( ref l_U740, l_U781, l_U784, l_U787, l_U780 );
        sub_6308( ref uVar4, l_U695, l_U698, g_U2376, 26, 6, 0, 0, 0 );
        sub_6209( l_U694 );
        l_U694 = sub_6405( ref uVar4 );
        if (((IS_PED_DEAD( l_U694 )) == 0) AND ((DOES_PED_EXIST( l_U694 )) == 1))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U694, ref g_U2460 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U694, 1 );
            SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( l_U694, 0 );
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U694, 1 );
            SET_PED_CAN_INTERACT_WITH_DOORS( l_U694, 0 );
            SET_PED_CAN_PUSH_PLAYER( l_U694, 1 );
            SET_PED_RESIST_TO_OBJECT_COLLISION( l_U694, 1 );
            "[doubled result, dropped if not asigned]";
            "[doubled result, dropped if not asigned]";
            SET_CAN_AI_KICK_THROUGH_CORPSES( l_U694, 1 );
            "[doubled result, dropped if not asigned]";
            "[doubled result, dropped if not asigned]";
        }
        sub_10722( l_U694, l_U695, l_U698 );
        I_SEQUENCE_REGISTER_ENTITY( ref g_U2692, "s_stad_practice_pas_fi", l_U694, 0 );
        I_SEQUENCE_START( ref g_U2692 );
        sub_10722( sub_5833(), l_U690, l_U693 );
        I_SEQUENCE_REGISTER_ENTITY( ref g_U2684, "03_02_BLEND_MAX", sub_5833(), 0 );
        I_SEQUENCE_START( ref g_U2684 );
        sub_20843( ref l_U709 );
        sub_20509( ref l_U699, l_U708, 1, 0 );
        sub_20898( ref l_U699 );
        l_U689 = 2;
        sub_5690( "SP", "nisStartPracState = NIS3_PLAYING", "###" );
        break;
        case 2:
        if ((sub_21106( ref l_U709, 1 )) == 1)
        {
            sub_21488( ref l_U709, ref l_U740, l_U779, 1, 1 );
        }
        if ((sub_21106( ref l_U740, 1 )) == 1)
        {
            l_U689 = 3;
        }
        if ((sub_21144( ref l_U699 )) == 1)
        {
            if (((IS_PED_DEAD( sub_5833() )) == 0) AND ((IS_PLAYER_DEAD( sub_5855() )) == 0))
            {
                ;
            }
        }
        break;
        case 3:
        sub_5690( "SP", "nisStartPracState = NIS3_FINISHED", "###" );
        sub_23655( l_U788, 1, 1, l_U789, l_U790, 0 );
        sub_23818( 1, 1 );
        l_U689 = 0;
        break;
    }
    return;
}

void sub_25823(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_25835( iParam0 )) == 0)
    {
        sub_25901( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

int sub_25835(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_25901(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_27011()
{
    if (l_U226)
    {
        DO_SCREEN_FADE_OUT( 1000 );
        LOAD_SCENE( l_U230 );
        sub_10722( sub_5833(), l_U230, l_U229 );
        DO_SCREEN_FADE_IN( 1000 );
        l_U226 = 0;
    }
    if (l_U227)
    {
        sub_7282( ref l_U233, 1 );
        sub_10722( sub_5833(), l_U230, l_U229 );
        sub_10861( sub_5833(), 1224272620, 25000, 0, 0 );
        sub_7368( ref l_U233, 1 );
        I_SEQUENCE_REGISTER_ENTITY( ref l_U233, "stad_maxsnipe", sub_5833(), 0 );
        I_SEQUENCE_START( ref l_U233 );
        l_U227 = 0;
    }
    if (l_U228)
    {
        sub_7282( ref l_U233, 1 );
        l_U228 = 0;
    }
    return;
}

void sub_27248()
{
    if (l_U794)
    {
        l_U794 = 0;
        START_WIDGET_GROUP( "CUTSCENE SYSTEM TEST" );
        ADD_WIDGET_BOOL( "bCutSysTestSetup", ref l_U795 );
        ADD_WIDGET_BOOL( "bCutSysTestStart", ref l_U796 );
        STOP_WIDGET_GROUP();
    }
    if (l_U795)
    {
        l_U795 = 0;
        l_U828 = 0;
        sub_32292( ref l_U797, "MID_02B_STADIUM", 27418, 29826, 30369, 30412, 30707, 31384, 32091, 32195, 250, 0 );
    }
    if (l_U796)
    {
        l_U796 = 0;
        l_U828 = 1;
        l_U797._fU4 = 2;
    }
    if (l_U828)
    {
        if (sub_32706( ref l_U797 ))
        {
            l_U828 = 0;
            sub_11787( "Cutscene system test exited normally, yo" );
        }
    }
    return;
}

int sub_27418()
{
    sub_27430( 0, 1 );
    REMOVE_ALL_PED_WEAPONS( sub_5833() );
    sub_29456( sub_5833(), 68019059, 25000, 0, 0 );
    sub_29731( "S_STAD_02BLEADOUT", "LEVEL_S_STAD_CP_02", "/LEVEL/S_STAD/s_stad_02bleadout.act", "/Global/02BLEADOUT", 1 );
    return 1;
}

void sub_27430(int iParam0, unknown uParam1)
{
    vector[2] vVar4;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int iVar13;

    sub_6092( "[SP]### P_SETUP_PRACTICE_ELEVATOR ###" );
    array(ref vVar4, 2);
    vVar4[0] = {91.18000000, 62.39000000, -3.39000000};
    vVar4[1] = {91.18000000, 62.39000000, 2.65000000};
    uVar11 = GET_HASH_KEY( "ElevatorRoom" );
    uVar12 = GET_INTERIOR_FROM_NAME( "int_elevator", 0 );
    SET_INTERIOR_ACTIVE( uVar12, 1, 0 );
    LOAD_SCENE_FOR_ROOM_BY_KEY( uVar12, uVar11 );
    sub_27649( ref g_U3706, ref vVar4, 0.00000000, 0.00000000, -90.00000000, g_U2391, g_U2392, g_U2393, 1.00000000 );
    iVar13 = 0;
    if (iParam0 == 1)
    {
        iVar13 = 1;
    }
    sub_28137( ref g_U3706, iVar13, uParam1 );
    if (iParam0 == 1)
    {
        SET_OBJECT_COORDS( g_U3706._fU232, 91.18000000, 62.39000000, 2.65000000 );
    }
    else
    {
        SET_OBJECT_COORDS( g_U3706._fU232, 91.18000000, 62.39000000, -3.39000000 );
    }
    sub_28996( ref g_U3706, ref g_U2540 );
    sub_29248( ref g_U3706, 1, 0 );
    sub_29248( ref g_U3706, 1, 1 );
    return;
}

void sub_27649(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    sub_6092( "[SP]### P_CreateElevatorStructService ###" );
    sub_27722( iParam0, uParam1, uParam2, uParam5, uParam6, uParam8 );
    iParam0->_fU288 = 1;
    iParam0->_fU284 = 1;
    iParam0->_fU224 = uParam7;
    iParam0->_fU228 = uParam7;
    return;
}

void sub_27722(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_6092( "[SP]### P_CreateElevatorStructService ###" );
    sub_27796( iParam0, uParam1, uParam2, uParam5, uParam6, uParam6, uParam7 );
    iParam0->_fU288 = 1;
    iParam0->_fU292 = 2.74000000;
    iParam0->_fU296 = 0.05000000;
    return;
}

void sub_27796(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;

    sub_6092( "[SP]### P_CreateElevatorStruct ###" );
    I = 0;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        iParam0->_fU24[I] = {(uParam1^)[I]};
    }
    iParam0->_fU316 = 0;
    iParam0->_fU12 = {uParam2};
    iParam0->_fU212 = uParam5;
    iParam0->_fU216 = uParam6;
    iParam0->_fU220 = uParam7;
    iParam0->_fU284 = 0;
    iParam0->_fU288 = 0;
    iParam0->_fU292 = 0.88000000;
    iParam0->_fU296 = 0.02500000;
    iParam0->_fU300 = 0.00000000;
    iParam0->_fU304 = 0.00000000;
    iParam0->_fU208 = uParam8;
    return;
}

void sub_28137(int iParam0, unknown uParam1, unknown uParam2)
{
    sub_6092( "[SP]### P_CreateElevator ###" );
    iParam0->_fU0 = {iParam0->_fU24[uParam1]};
    sub_28206( iParam0->_fU232 );
    iParam0->_fU232 = sub_28269( iParam0->_fU212, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU232, 1 );
    }
    sub_28206( iParam0->_fU236 );
    iParam0->_fU236 = sub_28269( iParam0->_fU216, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 1 );
    }
    if (iParam0->_fU288 == 0)
    {
        sub_28206( iParam0->_fU240 );
        iParam0->_fU240 = sub_28269( iParam0->_fU220, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU240, 1 );
        }
    }
    if (iParam0->_fU284 == 1)
    {
        sub_28206( iParam0->_fU244 );
        iParam0->_fU244 = sub_28269( iParam0->_fU224, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 1 );
        }
        if (iParam0->_fU288 == 0)
        {
            sub_28206( iParam0->_fU248 );
            iParam0->_fU248 = sub_28269( iParam0->_fU228, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
            if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
            {
                FREEZE_OBJECT_POSITION( iParam0->_fU248, 1 );
            }
        }
    }
    return;
}

void sub_28206(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_28269(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_6575( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_28996(int iParam0, unknown uParam1)
{
    sub_6092( "[SP]### P_AddElevatorToInterior ###" );
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU232, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU236, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU240, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU244, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU248, uParam1 );
    }
    return;
}

void sub_29248(int iParam0, int iParam1, int iParam2)
{
    sub_6092( "[SP]### P_CLOSE_ELEVATOR_DOORS ###" );
    if (iParam2 == 0)
    {
        if (iParam1 == 1)
        {
            iParam0->_fU308 = 0;
        }
        else if (iParam0->_fU288 == 1)
        {
            ;
        }
        iParam0->_fU308 = 3;;
    }
    else if (iParam1 == 1)
    {
        iParam0->_fU312 = 0;
    }
    else if (iParam0->_fU288 == 1)
    {
        ;
    }
    iParam0->_fU312 = 3;;;
    return;
}

void sub_29456(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                sub_11787( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_29731(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    if ((I_SEQUENCE_IS_LOADED( uParam0 )) == 0)
    {
        I_SEQUENCE_SETUP( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            while ((I_SEQUENCE_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_29826()
{
    if (DOES_OBJECT_EXIST( g_U3706._fU232 ))
    {
        sub_5690( "GA", "Registering elevator room with midscene MID_02B_STADIUM", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( g_U3706._fU232, "P_ST_FRTELE_AA_H", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U3706._fU236 ))
    {
        sub_5690( "GA", "Registering evelator front door with midscene MID_02B_STADIUM", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( g_U3706._fU236, "P_ST_FRTELEDR1", 0 );
        sub_28996( ref g_U3706, ref g_U2540 );
    }
    if (DOES_OBJECT_EXIST( g_U3706._fU244 ))
    {
        sub_5690( "GA", "Registering evelator back door with midscene MID_02B_STADIUM", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( g_U3706._fU244, "P_ST_FRTELEDR2", 0 );
    }
    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_5833(), 0, 0 ), "W_PI_PT92_Aa_H", 0 );
    CUTSCENE_REGISTER_PED_TELEPORT( sub_5833(), l_U824, l_U827 );
    CUTSCENE_REGISTER_INTERACTIVE_SEQUENCE( "S_STAD_02BLEADOUT" );
    I_SEQUENCE_REGISTER_ENTITY( "S_STAD_02BLEADOUT", "Max", sub_5833(), 0 );
    return;
}

void sub_30369()
{
    sub_11787( "P_CUTSYSTEST_Handle" );
    return;
}

int sub_30412()
{
    sub_11787( "P_CUTSYSTEST_Post" );
    SIMULATE_PLAYER_INPUT_GAIT( sub_5855(), 2, 1500, 0 );
    sub_30469( ref l_U950, 0 );
    sub_23655( l_U1051, 1, 0, l_U1049, l_U1050, 0 );
    return 1;
}

void sub_30469(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_30503( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_30503(int iParam0, int iParam1)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam1 == 1)
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam1 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam1 );
        }
        else
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
        }
        sub_20025( iParam0 + 40 );
        sub_20025( iParam0 + 76 );
        sub_20025( iParam0 + 112 );
        iParam0->_fU172 = 0;
    }
    return;
}

void sub_30707()
{
    sub_20381( ref l_U829, l_U860, l_U863, l_U866, l_U867 );
    sub_20381( ref l_U868, l_U899, l_U902, l_U905, l_U906 );
    sub_20381( ref l_U909, l_U940, l_U943, l_U946, l_U947 );
    sub_30832( ref l_U950[0], 4, 1.00000000, 1, 4500, -1, 1, 0 );
    sub_30832( ref l_U950[1], 2, 0.15000000, 1, 4500, 750, 1, 0 );
    sub_20843( ref l_U829 );
    sub_21488( ref l_U829, ref l_U868, l_U906, l_U907, l_U908 );
    return;
}

void sub_30832(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (iParam0->_fU168 == 0)
    {
        sub_30860( iParam0, uParam1 );
        iParam0->_fU192 = uParam1;
        iParam0->_fU36 = uParam2;
        iParam0->_fU148 = uParam3;
        iParam0->_fU152 = uParam4;
        iParam0->_fU156 = uParam5;
        iParam0->_fU160 = uParam7;
        iParam0->_fU176 = uParam6;
    }
    sub_20025( iParam0 + 40 );
    sub_20025( iParam0 + 76 );
    sub_20025( iParam0 + 112 );
    iParam0->_fU172 = iParam0->_fU176;
    iParam0->_fU164 = 0;
    iParam0->_fU168 = 1;
    iParam0->_fU184 = 0;
    iParam0->_fU188 = 0;
    return;
}

void sub_30860(int iParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case 1:
        StrCopy( ref iParam0->_fU4, "SMALL_EXPLOSION_SHAKE", 32 );
        break;
        case 2:
        StrCopy( ref iParam0->_fU4, "MEDIUM_EXPLOSION_SHAKE", 32 );
        break;
        case 3:
        StrCopy( ref iParam0->_fU4, "LARGE_EXPLOSION_SHAKE", 32 );
        break;
        case 4:
        StrCopy( ref iParam0->_fU4, "HAND_SHAKE", 32 );
        break;
        case 5:
        StrCopy( ref iParam0->_fU4, "JOLT_SHAKE", 32 );
        break;
        case 6:
        StrCopy( ref iParam0->_fU4, "VIBRATE_SHAKE", 32 );
        break;
        case 7:
        StrCopy( ref iParam0->_fU4, "WOBBLY_SHAKE", 32 );
        break;
    }
    iParam0->_fU0 = iParam0->_fU192;
    return;
}

int sub_31384()
{
    if (sub_21144( ref l_U868._fU48 ))
    {
        sub_21488( ref l_U868, ref l_U909, l_U947, l_U948, l_U949 );
    }
    sub_31444( ref l_U950 );
    if (sub_32024( "S_STAD_02BLEADOUT" ))
    {
        return 1;
    }
    return 0;
}

void sub_31444(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_31476( ref (uParam0^)[I] );
    }
    return;
}

void sub_31476(int iParam0)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam0->_fU164 == 0)
        {
            sub_20509( iParam0 + 40, iParam0->_fU148, 1, 0 );
            sub_20898( iParam0 + 40 );
            if (iParam0->_fU152 > 0)
            {
                sub_20509( iParam0 + 76, iParam0->_fU152, 1, 0 );
                sub_20898( iParam0 + 76 );
            }
            iParam0->_fU164 = 1;
        }
        if (sub_21144( iParam0 + 40 ))
        {
            sub_5690( "ML", "P_HANDLE_CAM_SHAKE is shaking the camera", "---" );
            sub_31684( iParam0 + 4, iParam0->_fU36 );
            if (iParam0->_fU156 > 0)
            {
                sub_20509( iParam0 + 112, iParam0->_fU156, 1, 0 );
                sub_20898( iParam0 + 112 );
            }
        }
        if (sub_21144( iParam0 + 112 ))
        {
            sub_31684( iParam0 + 4, iParam0->_fU36 );
            sub_20509( iParam0 + 112, iParam0->_fU156, 1, 0 );
            sub_20898( iParam0 + 112 );
        }
        if (sub_21144( iParam0 + 76 ))
        {
            sub_5690( "ML", "P_HANDLE_CAM_SHAKE is done shaking the camera", "---" );
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
            sub_20025( iParam0 + 112 );
            iParam0->_fU172 = 0;
        }
    }
    return;
}

void sub_31684(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    SHAKE_GAMEPLAY_CAM( uParam0, uParam1 );
    return;
}

int sub_32024(unknown uParam0)
{
    if ((NOT (I_SEQUENCE_QUERY_STATE( uParam0, 3 ))) AND (NOT (I_SEQUENCE_QUERY_STATE( uParam0, 2 ))))
    {
        return 1;
    }
    return 0;
}

void sub_32091()
{
    sub_32140( "PREPARING BLENDOUT MOTHERFUCKERS!", 2000 );
    WAIT( 2001 );
    return;
}

void sub_32140(unknown uParam0, unknown uParam1)
{
    PRINT_STRING_WITH_LITERAL_STRING( "STRING", uParam0, uParam1, 1 );
    return;
}

int sub_32195()
{
    sub_32140( "HANDLING BLEND IN!!", 2000 );
    WAIT( 2001 );
    sub_32140( "STILL HANDLING!", 1000 );
    WAIT( 1001 );
    return 1;
}

void sub_32292(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    sub_5690( "MSWW", "CutSys_CreateCutsceneWithBlendOutAndBlendIn", "###" );
    return sub_32396( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam11, 1, uParam6, uParam7, 1, uParam8, uParam9, uParam10 );
}

void sub_32396(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_32706(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_5690( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_5690( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_5690( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_5690( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_5690( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_5690( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_33484( iParam0->_fU0, 0 );
            sub_5690( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_20149( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_20149( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_5690( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_34190( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_20149( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_23818( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_23818( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_33484(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_34190(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_5833() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_5833(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_5833(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_5833(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_5833(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_5833(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_34690()
{
    unknown uVar2;
    unknown uVar3;

    if (l_U197)
    {
        if (NOT (IS_PED_DEAD( sub_5833() )))
        {
            SET_PLAYER_CONTROL( sub_5855(), 0, 0 );
        }
        sub_5742( 100 );
        sub_10722( sub_5833(), l_U203, l_U206 );
        if (((IS_PED_DEAD( sub_5833() )) == 0) AND ((IS_PLAYER_DEAD( sub_5855() )) == 0))
        {
            FREEZE_PED_POSITION( sub_5833(), 1 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0.00000000, 1065353216, 0 );
        }
        uVar2 = GET_HASH_KEY( ref g_U2460 );
        uVar3 = GET_INTERIOR_AT_COORDS( l_U203 );
        SET_INTERIOR_ACTIVE( uVar3, 1, 0 );
        CLEAR_AREA( l_U203, 100.00000000, 1 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar3, uVar2 );
        if (((IS_PED_DEAD( sub_5833() )) == 0) AND ((IS_PLAYER_DEAD( sub_5855() )) == 0))
        {
            FREEZE_PED_POSITION( sub_5833(), 0 );
        }
        sub_5117( 100 );
        if (NOT (IS_PED_DEAD( sub_5833() )))
        {
            SET_PLAYER_CONTROL( sub_5855(), 1, 0 );
        }
        l_U197 = 0;
    }
    if (l_U198)
    {
        sub_35032( -991527869, 1 );
        ISEQ_REGISTER_ENTITY( -991527869, "Max", sub_5833(), 0 );
        sub_10722( sub_5833(), l_U203, l_U206 );
        ISEQ_START( -991527869 );
        l_U198 = 0;
    }
    if (l_U200)
    {
        sub_35032( 908686940, 1 );
        ISEQ_REGISTER_ENTITY( 908686940, "Max", sub_5833(), 0 );
        sub_10722( sub_5833(), l_U211, l_U214 );
        ISEQ_START( 908686940 );
        l_U200 = 0;
    }
    if (l_U201)
    {
        sub_35032( -1343439341, 1 );
        ISEQ_REGISTER_ENTITY( -1343439341, "Max", sub_5833(), 0 );
        sub_10722( sub_5833(), l_U207, l_U210 );
        ISEQ_START( -1343439341 );
        l_U201 = 0;
    }
    if (l_U199)
    {
        ISEQ_UNREGISTER_ENTITY( -1343439341, "Max" );
        ISEQ_TERMINATE( -1343439341 );
        ISEQ_UNREGISTER_ENTITY( -991527869, "Max" );
        ISEQ_TERMINATE( -991527869 );
        ISEQ_UNREGISTER_ENTITY( 908686940, "Max" );
        ISEQ_TERMINATE( 908686940 );
        l_U199 = 0;
    }
    return;
}

void sub_35032(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U62 = 0;
    l_U63 = 0;
    l_U64 = 1500;
    l_U144 = 1;
    l_U145 = 0;
    l_U147 = 0;
    l_U320 = {43.82200000, 71.14400000, -3.21000000};
    l_U323 = {0.00000000, 0.00000000, 0.00000000};
    l_U336 = 0;
    l_U337 = 10.00000000;
    l_U570 = 0;
    l_U616 = 0;
    StrCopy( ref l_U617, "Basement01_Use_elevator", 64 );
    l_U633 = {66.63642000, 90.46851000, -4.01000000};
    l_U872 = 0;
    l_U1012 = 0;
    l_U1040 = 0;
    l_U1041 = {88.39400000, 64.48000000, -2.05400000};
    l_U1044 = 0;
    l_U1045 = 0;
    l_U1046 = {71.12200000, 94.67600000, -4.00000000};
    l_U1049 = 180.17000000;
    l_U1050 = {72.03000000, 94.68000000, -4.00000000};
    l_U1053 = 180.00000000;
    l_U1063 = 0;
    l_U1064 = 0;
    l_U1065 = 0;
    l_U1085 = 0;
    l_U1086 = 0;
    l_U1087 = 0;
    l_U1088 = 0;
    l_U1089 = 0;
    l_U1090 = 0;
    l_U1118 = 0;
    l_U1119 = 0;
    l_U1120 = 0;
    l_U1130 = 0;
    l_U1418 = 0;
    l_U1701 = 0;
    l_U1702 = 0;
    l_U1703 = 0;
    l_U1713 = 0;
    l_U1728 = 0;
    l_U1729 = 0;
    l_U1740 = 0;
    sub_683( "SP", "Script stad_PracField.sc is starting up...", 0 );
    sub_732();
    l_U145 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_1051();
        if (l_U147 == 0)
        {
            sub_10896();
            sub_11251( ref l_U1429 );
        }
        WAIT( 0 );
    }
    sub_3541( 0 );
    sub_70174( ref l_U1429 );
    sub_70273();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "stad_PracField" );
    sub_683( "SP", "Script stad_PracField.sc is terminating...", 0 );
    return;
}

void sub_683(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_732()
{
    sub_683( "GA", "P_PRAC_POPULATE_VARIABLE_ARRAYS start", 0 );
    l_U128[0] = g_U2391;
    l_U128[1] = g_U2392;
    l_U128[2] = g_U2393;
    l_U128[3] = g_U2396;
    l_U128[4] = g_U2397;
    l_U128[5] = 850656818;
    l_U128[6] = 1267966326;
    l_U128[7] = 1217913072;
    l_U128[8] = g_U2380;
    l_U128[9] = 619121117;
    l_U128[10] = 824031458;
    l_U128[11] = -1856433758;
    l_U141[0] = 434544317;
    l_U141[1] = 1194438308;
    sub_683( "GA", "P_PRAC_POPULATE_VARIABLE_ARRAYS end", 0 );
    return;
}

void sub_1051()
{
    if (g_U855 == 2)
    {
        switch (l_U147)
        {
            case 0:
            if (((IS_PED_DEAD( l_U1714 )) AND (DOES_PED_EXIST( l_U1714 ))) || ((sub_1206()) || (IS_PED_DEAD( sub_1133() ))))
            {
                if (IS_PED_DEAD( l_U1714 ))
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                    RESET_LAST_MAN_STANDING();
                }
                l_U147 = 1;
                sub_683( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_1759())
            {
                l_U147 = 2;
            }
            else if ((sub_1799( 0 )) == 1)
            {
                l_U147 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_1133() )))
            {
                if ((g_U888[3]._fU40 != 4) AND (g_U888[3]._fU40 != 0))
                {
                    sub_683( "CR", "Shutting down script for MCE_MEDIA.", 0 );
                    sub_3241( ref g_U888[3] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U888[3]._fU32 );
                    g_U3870 = 0;
                }
                l_U147 = 3;
                sub_683( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_683( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_1133() ))) AND (NOT (IS_PLAYER_DEAD( sub_1155() ))))
            {
                SET_PLAYER_CONTROL( sub_1155(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_1133() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_1133(), 0 );
                }
            }
            TERMINATE_GAME_BULLET_CAMERA();
            CAMERA_FREEZE_FRAME( 0, 400, 0, 0 );
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            sub_3541( 1 );
            sub_5901( 2 );
            l_U147 = 4;
            sub_683( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_683( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U92._fU0)
            {
                sub_6674( ref l_U92, sub_1133() );
            }
            l_U147 = 5;
            sub_683( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_683( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U145 = 1;
            l_U144 = 0;
            l_U147 = 0;
            sub_683( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_1133()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1155() );
    }
    return 0;
}

void sub_1155()
{
    return GET_PLAYER_ID();
}

int sub_1206()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1133() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1133(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1155(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1155(), 1 );
            if ((IS_PED_VISIBLE( sub_1133() )) == 0)
            {
                SET_PED_VISIBLE( sub_1133(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1759()
{
    return g_U648;
}

int sub_1799(int iParam0)
{
    iParam0 = 1;
    switch (l_U63)
    {
        case 0:
        if (NOT (sub_1860( ref l_U65 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1133() )))
            {
                l_U64 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1970( ref l_U65, l_U64, 1, 1 );
            sub_2106( ref l_U65 );
        }
        if (sub_2226( ref l_U65 ))
        {
            sub_683( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1133() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1155() )))
            {
                SET_PLAYER_CONTROL( sub_1155(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U63 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U63 = 2;
            }
            else
            {
                l_U63 = 3;
            }
        }
        break;
        case 2:
        sub_683( "NS", "Player will QUIT", 0 );
        sub_2713();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_683( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2713();
        return 1;
        break;
    }
    return 0;
}

int sub_1860(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_1970(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2106(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_2226(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2713()
{
    sub_683( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2763( ref l_U65 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1155() )))
    {
        SET_PLAYER_CONTROL( sub_1155(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U62 = 0;
    l_U62 = l_U62;
    l_U63 = 0;
    return;
}

void sub_2763(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_3241(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_3541(boolean bParam0)
{
    sub_683( "SP", "P_CLEANUP_PRACTICEROOM", 0 );
    if (NOT (IS_PED_DEAD( sub_1133() )))
    {
        SET_PED_FORCED_TO_WALK( sub_1133(), 0 );
    }
    if ((CUTSCENE_NAMED_IS_LOADING( "03_02_STAD_concat" )) || (CUTSCENE_IS_LOADED( "03_02_STAD_concat" )))
    {
        CLEAR_NAMED_CUTSCENE( "03_02_STAD_concat" );
    }
    sub_3711( -843316873, 0 );
    sub_3711( 109790724, 0 );
    sub_3711( -395445998, 0 );
    sub_3711( -991527869, 0 );
    sub_3711( 908686940, 0 );
    sub_3711( -1343439341, 0 );
    sub_3974( -843316873, ref g_U1263 );
    sub_3974( 109790724, ref g_U1263 );
    sub_3974( -395445998, ref g_U1263 );
    sub_3974( -991527869, ref g_U1263 );
    sub_3974( 908686940, ref g_U1263 );
    sub_3974( -1343439341, ref g_U1263 );
    if (bParam0)
    {
        ;
    }
    else if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ) )) AND (NOT (IS_PED_DEAD( l_U1714 ))))
    {
        SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ), 0 );
    }
    sub_4491( l_U1714 );
    sub_4570( g_U3866 );
    sub_4570( g_U3867 );
    sub_4570( l_U1131 );
    sub_4635( l_U338 );
    sub_4635( l_U339 );
    sub_4635( l_U340 );
    sub_4635( l_U341 );
    sub_4712( ref l_U645 );
    sub_4712( ref l_U873 );
    sub_4570( l_U319 );
    sub_4570( l_U318 );
    sub_4828();
    sub_4967( ref l_U1237, 0 );
    DESTROY_DYNAMIC_PATH_OBSTRUCTION( l_U1751[0] );
    DESTROY_DYNAMIC_PATH_OBSTRUCTION( l_U1751[1] );
    DESTROY_DYNAMIC_PATH_OBSTRUCTION( l_U1751[2] );
    return;
}

void sub_3711(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3974(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_4086( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_4086(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_4491(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_4570(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_4635(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_4712(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_4744( ref (uParam0^)[I] );
    }
    return;
}

void sub_4744(int iParam0)
{
    sub_4491( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

void sub_4828()
{
    sub_683( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_683( "CCB", "Stopping the Stadium_Practice context...", 0 );
    END_CONTEXT( "Stadium_Practice" );
    return;
}

void sub_4967(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_5011( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_5011( iParam0, 0 );
        sub_5211( iParam0, 0 );
        if ((IS_PED_DEAD( sub_1133() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_1133() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_1133(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_5011(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_5211(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_5362( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_5362(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_5423( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_5423( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_5423(int iParam0)
{
    if (((IS_PED_DEAD( sub_1133() )) == 0) AND ((IS_PLAYER_DEAD( sub_1155() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_1133() )) == 1) || (((IS_PED_GETTING_UP( sub_1133() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_1133() )) == 1) || (((IS_PED_IN_COVER( sub_1133() )) == 1) || (((IS_PED_DUCKING( sub_1133() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_1133() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_5901(unknown uParam0)
{
    vector vVar3;
    unknown uVar6;
    int iVar7;
    string sVar8;
    unknown uVar9;

    sub_5925( "P_LOAD_AREA" );
    vVar3 = {g_U2138[uParam0]};
    uVar6 = g_U2256[uParam0];
    iVar7 = -1;
    switch (uParam0)
    {
        case 2:
        case 21:
        iVar7 = GET_HASH_KEY( ref g_U2460 );
        sVar8 = "Int_Bsmt_01";
        break;
        case 3:
        case 22:
        iVar7 = GET_HASH_KEY( "Room_Hallway_01" );
        sVar8 = "Int_Bsmt_02";
        break;
        case 4:
        case 23:
        iVar7 = GET_HASH_KEY( "Room_Staircase_02" );
        sVar8 = "Int_Bsmt_03";
        break;
        case 5:
        case 24:
        iVar7 = GET_HASH_KEY( ref g_U2484 );
        sVar8 = "int_store_00";
        break;
        case 9:
        case 27:
        iVar7 = GET_HASH_KEY( ref g_U2548 );
        sVar8 = "int_Trophy_01";
        break;
        case 10:
        vVar3 = {-97.16455000, 22.49700000, 26.58807000};
        SET_PED_COORDS( sub_1133(), -2.36477500, 2.76315900, 1.17283500, 1 );
        SET_PED_HEADING( sub_1133(), uVar6 );
        LOAD_SCENE( -2.36477500, 2.76315900, 1.17283500 );
        break;
    }
    if (iVar7 == -1)
    {
        LOAD_SCENE( vVar3 );
    }
    else
    {
        uVar9 = GET_INTERIOR_FROM_NAME( sVar8, 0 );
        SET_INTERIOR_ACTIVE( uVar9, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar9, iVar7 );
    }
    if ((IS_PED_DEAD( sub_1133() )) == 0)
    {
        SET_PED_COORDS( sub_1133(), vVar3, 1 );
        SET_PED_HEADING( sub_1133(), uVar6 );
        FREEZE_PED_POSITION( sub_1133(), 0 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    return;
}

void sub_5925(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_6674(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_683( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_6858( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_7935( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_8227( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_8587( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_8227( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_8587( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_8227( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_8587( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_8872( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_8587( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_8872( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_8587( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_9365( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_9526( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1133(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_683( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_6858(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_6890( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_6890(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_7935(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_8227(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_8543( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_8543(unknown uParam0)
{
    return;
}

void sub_8587(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_8872(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_8543( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_9365(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_9526(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_6890( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_9598( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_9598(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_10896()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    float fVar44;
    unknown uVar45;

    iVar2 = l_U145;
    if (g_U855 == 2)
    {
        sub_10925();
        sub_11251( ref l_U1429 );
    }
    switch (l_U145)
    {
        case 0: break;
        case 1:
        sub_683( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_17302();
        sub_17721();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U145 = 2;
        sub_683( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_683( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_20871();
        sub_24537();
        l_U145 = 3;
        sub_683( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_27979( ref g_U1263 )) AND ((sub_27852( ref g_U1354 )) AND ((sub_27731( ref g_U1214 )) AND (sub_27611( ref g_U1069 )))))
        {
            if ((NOT l_U92._fU0) AND (g_U854 == 2))
            {
                l_U145 = 4;
                sub_683( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U145 = 6;
                sub_683( "SP", "eCheckpointState = CP_SETUP", 0 );
            }
        }
        break;
        case 4:
        g_U3869 = 1;
        l_U144 = 0;
        if (NOT (sub_28330( ref l_U92 )))
        {
            sub_8872( sub_1133(), 68019059, 50, 0, 0 );
            l_U145 = 5;
            sub_683( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U145 = 6;
            sub_683( "SP", "eCheckpointState = CP_SETUP", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_1133() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_1133(), 0, 0 ) ))
            {
                l_U145 = 6;
                sub_683( "GA", "eCheckpointState = CP_SETUP", 0 );
            }
        }
        break;
        case 6:
        if (l_U146)
        {
            sub_28771();
            sub_29421();
            sub_29963( 0, 0 );
            sub_31736( ref g_U3866, g_U2396, l_U1041, ref g_U2532, 1, 0 );
            sub_31765( ref l_U1131, 1217913072, 69.12030000, 101.22100000, -3.72599000, 65446, 0, -1.01000000, ref g_U2460, 0, 0 );
            SET_OBJECT_VISIBLE( l_U1131, 0 );
            sub_32168();
            SET_PED_SWEAT( sub_1133(), 0.00000000, -1.00000000 );
            SET_SWEAT_ENABLED( 1 );
            sub_33720();
            l_U146 = 0;
            return;
        }
        if (sub_34745( ref l_U645, "PracCS", ref l_U866, 1.00000000, 1, 1 ))
        {
            sub_37044();
            l_U145 = 7;
            sub_683( "SP", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 7:
        if (g_U3869)
        {
            if (l_U144)
            {
                if (CUTSCENE_IS_LOADED( "03_02_STAD_concat" ))
                {
                    l_U145 = 8;
                    sub_683( "GA", "eCheckpointState = CP_PRACTICE_ROOM_NIS", 0 );
                }
                else if (CUTSCENE_NAMED_IS_LOADING( "03_02_STAD_concat" ))
                {
                    sub_683( "GA", "Waiting for cutscene 03_02_STAD_concat to load.", 0 );
                }
                else
                {
                    sub_683( "GA", "Requesting cutscene 03_02_STAD_concat to load.", 0 );
                    PRE_STREAM_SEAMLESS_CUTSCENE( "03_02_STAD_concat" );
                }
            }
            else
            {
                l_U145 = 8;
                sub_683( "SP", "eCheckpointState = CP_PRACTICE_ROOM_NIS", 0 );
            }
        }
        break;
        case 8:
        if (l_U146)
        {
            sub_50780( ref l_U1091, "03_02_STAD_concat", 38776, 38913, 40204, 40718, 42811, 49003, 250, 0 );
            l_U1091._fU100 = g_U853;
            if (l_U144)
            {
                l_U1091._fU4 = 2;
            }
            else
            {
                l_U1091._fU4 = 7;
                AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_3", 0, 0, -1, -1, -1082130432, 0 );
            }
        }
        if (sub_51267( ref l_U1091 ))
        {
            sub_683( "SP", "eCheckpointState = CP_HIDING_IN_PRACTICE_ROOM", 0 );
            l_U145 = 9;
        }
        break;
        case 9:
        if (l_U146)
        {
            if ((IS_PED_DEAD( l_U645[0]._fU0 )) == 0)
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U645[0]._fU0, 0 );
            }
            if ((IS_PED_DEAD( l_U645[1]._fU0 )) == 0)
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U645[1]._fU0, 0 );
            }
            if ((IS_PED_DEAD( l_U645[2]._fU0 )) == 0)
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U645[2]._fU0, 0 );
            }
        }
        sub_11579( ref l_U1323 );
        sub_11579( ref l_U1237 );
        if ((sub_53601( ref l_U1323 )) == 1)
        {
            sub_44054( ref l_U1741 );
            sub_44136( 0, sub_1133(), "MAX", ref l_U1741, 2, 0 );
            sub_44136( 1, sub_1133(), "MAX", ref l_U1741, 2, 0 );
            sub_44379( "EXPLORE_ITEM", ref l_U1741, 8, 1 );
        }
        if ((sub_53601( ref l_U1237 )) == 1)
        {
            sub_44054( ref l_U1741 );
            sub_44136( 0, sub_1133(), "MAX", ref l_U1741, 2, 0 );
            sub_44136( 1, sub_1133(), "MAX", ref l_U1741, 2, 0 );
            sub_44379( "EXPLORE_ITEM", ref l_U1741, 8, 1 );
        }
        if (sub_53998() == 1)
        {
            SET_CAM_VIEW_MODE( 1 );
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_2_3_6", "", 0, 1000, -1, -1082130432, 0 );
            sub_683( "SP", "eCheckpointState = CP_PRACTICE_ROOM_FIGHT", 0 );
            l_U145 = 11;
        }
        if (sub_54338() == 1)
        {
            sub_52134( 1, 0, 0, 1 );
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_2", "", 0, 7000, -1, -1082130432, 0 );
            sub_54515();
            sub_683( "SP", "eCheckpointState = CP_NIS_CS_LEAVE_PRACTICE_ROOM", 0 );
            l_U145 = 10;
        }
        break;
        case 10:
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_STAD_CP_02", "VIG_18_STADIUM_CAM" )) - 600))
        {
            if (NOT (IS_PED_DEAD( l_U1714 )))
            {
                sub_55268();
                TASK_LOOK_AT_COORD( l_U1714, 49.96000000, 69.30000000, -2.10000000, 5000, 0 );
            }
            if (NOT (IS_PED_DEAD( sub_1133() )))
            {
                if ((GET_PED_HEADING( sub_1133() )) > 180.00000000)
                {
                    SET_GAMEPLAY_CAM_RELATIVE_HEADING( -108.00000000, 0, 0 );
                }
                else
                {
                    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 72.00000000, 0, 0 );
                }
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( -12.33600000, 1065353216, 0 );
                CAMERA_ANIMATED_STOP( 0, 0 );
            }
            sub_53011( 1, 1 );
            sub_4712( ref l_U645 );
            STREAM_HELPERS_REQUEST_AT_LOC( 46.66368000, 70.31908000, -2.23933200, 0 );
            sub_4712( ref l_U873 );
            SET_CAM_VIEW_MODE( 1 );
            sub_683( "SP", "eCheckpointState = CP_PRACTICE_ROOM_CS_GONE", 0 );
            l_U145 = 14;
        }
        break;
        case 11:
        if (l_U146)
        {
            sub_55724();
            sub_56161( ref l_U645, ref l_U316, 1 );
            sub_49042( ref l_U598, 10000 );
        }
        if (sub_1860( ref l_U598 ))
        {
            if (sub_56414( 1 ))
            {
                sub_2763( ref l_U598 );
                sub_2106( ref l_U598 );
            }
            else if (NOT (IS_ANY_SPEECH_PLAYING( l_U1714 )))
            {
                if ((l_U616 < 3) AND (sub_2226( ref l_U598 )))
                {
                    sub_44054( ref l_U540 );
                    sub_44136( 1, l_U1714, "PASSOS", ref l_U540, 2, 0 );
                    sub_44379( "SSTD_MNSP", ref l_U540, 7, 1 );
                    sub_2763( ref l_U598 );
                    sub_49042( ref l_U598, 12000 );
                    l_U616++;
                }
            }
        }
        if (NOT (sub_55837( l_U1730 )))
        {
            if ((IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT l_U1729))
            {
                l_U1729 = 1;
            }
            else if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (l_U1729))
            {
                l_U1729 = 0;
                if ((sub_56805( 0, 3 )) == 0)
                {
                    sub_44054( ref l_U1730 );
                    sub_44136( 1, l_U1714, "PASSOS", ref l_U1730, 2, 0 );
                    sub_44379( "SSTD_PMPL", ref l_U1730, 7, 1 );
                }
            }
            else if (sub_49142( ref l_U1714, 55, 1 ))
            {
                if ((sub_56805( 0, l_U1740 )) > 3)
                {
                    sub_44054( ref l_U1730 );
                    sub_44136( 1, l_U1714, "PASSOS", ref l_U1730, 2, 0 );
                    sub_44379( "SSTD_PSAE", ref l_U1730, 7, 1 );
                    l_U1740 = 0;
                }
                else
                {
                    l_U1740++;
                }
            };;;
        }
        if (NOT sub_57043())
        {
            if ((sub_53601( ref l_U1323 )) == 1)
            {
                sub_5925( "F_POI_CAN_PLAY_UNAVALIABLE_MONO(poiManagerBrancoPicture)" );
                sub_44054( ref l_U1741 );
                sub_44136( 0, sub_1133(), "MAX", ref l_U1741, 2, 0 );
                sub_44136( 1, sub_1133(), "MAX", ref l_U1741, 2, 0 );
                sub_44379( "EXPLORE_ITEM", ref l_U1741, 8, 1 );
            }
            if ((sub_53601( ref l_U1237 )) == 1)
            {
                sub_44054( ref l_U1741 );
                sub_44136( 0, sub_1133(), "MAX", ref l_U1741, 2, 0 );
                sub_44136( 1, sub_1133(), "MAX", ref l_U1741, 2, 0 );
                sub_44379( "EXPLORE_ITEM", ref l_U1741, 8, 1 );
            }
        }
        sub_11579( ref l_U1323 );
        sub_11579( ref l_U1237 );
        if (((sub_57393( ref l_U645 )) + (sub_57393( ref l_U873 ))) > 1)
        {
            if (sub_2226( ref l_U1704 ))
            {
                sub_57502();
                sub_683( "SP", "eCheckpointState = CP_NIS_PASSOS_ABANDONED", 0 );
                l_U145 = 12;
            }
            else if ((NOT (sub_1860( ref l_U1704 ))) AND (sub_58687( "X", "Greater", 77.00000000 )))
            {
                sub_49042( ref l_U1704, 8000 );
                if (NOT (IS_ANY_SPEECH_PLAYING( l_U1714 )))
                {
                    sub_44054( ref l_U550 );
                    sub_44136( 1, l_U1714, "PASSOS", ref l_U550, 2, 0 );
                    sub_44379( "SSTD_DLMB", ref l_U550, 7, 1 );
                }
            }
            else if ((sub_58687( "X", "Less", 77.00000000 )) AND (sub_1860( ref l_U1704 )))
            {
                sub_1970( ref l_U1704, 8000, 1, 0 );
            };;;
        }
        if (NOT l_U1713)
        {
            if (((sub_57393( ref l_U645 )) + (sub_57393( ref l_U873 ))) == 1)
            {
                if ((sub_57393( ref l_U645 )) > 0)
                {
                    uVar3 = sub_57541( ref l_U645 );
                }
                else
                {
                    uVar3 = sub_57541( ref l_U873 );
                }
                sub_59125( ref uVar3 );
                SET_PED_COMBAT_RANGE_MIN( uVar3, 3 );
                SET_PED_COMBAT_RANGE_MAX( uVar3, 6 );
                sub_37387( ref uVar3 );
                l_U1713 = 1;
            }
        }
        if (sub_2226( ref l_U1031 ))
        {
            sub_59203();
        }
        if (NOT l_U1040)
        {
            if (((sub_59578( sub_1133(), 50.94263000, 70.54079000, -3.04136100 )) < 25) || (((sub_59454( ref l_U645 )) > 1) || (sub_2226( ref l_U1013 ))))
            {
                sub_43091( ref g_U2996, -90.00000000, 0.00000000 );
                sub_43091( ref g_U3003, 0.00000000, 90.00000000 );
                sub_43282( ref g_U2996, 0 );
                sub_43282( ref g_U3003, 0 );
                sub_54672( ref g_U3003, 0 );
                sub_54672( ref g_U2996, 0 );
                sub_59743( ref g_U3003, 1 );
                sub_59743( ref g_U2996, 1 );
                sub_59818( ref l_U873, 3, 1 );
                sub_56161( ref l_U873, ref l_U316, 1 );
                sub_60037( ref l_U873, 0, -1 );
                sub_60162( ref l_U873[0], 56.93676000, 71.23228000, -3.19990400, 1 );
                sub_60162( ref l_U873[1], 53.36208000, 78.48571000, -3.99989600, 1 );
                sub_60162( ref l_U873[2], 55.22354000, 74.26091000, -3.99871000, 1 );
                sub_60436( ref l_U645, sub_1133(), 0, -1 );
                sub_49042( ref l_U1022, 2000 );
                l_U1040 = 1;
            }
        }
        if (sub_2226( ref l_U1022 ))
        {
            sub_60566( ref g_U3003, 0 );
            sub_60566( ref g_U2996, 0 );
        }
        if (l_U1022._fU16)
        {
            ;
        }
        if (((sub_57393( ref l_U645 )) + (sub_57393( ref l_U873 ))) == 1)
        {
            sub_60746( ref l_U645, 0, 0, 0 );
            sub_60746( ref l_U873, 0, 0, 0 );
        }
        if (NOT l_U1085)
        {
            if (sub_61207())
            {
                sub_61290();
                l_U1085 = 1;
            }
        }
        if (((sub_61699( l_U1084, "Y", "Greater", 83.50000000 )) AND (NOT (IS_PED_DEAD( l_U1084 )))) || ((((sub_10981( l_U1714, l_U1084, 0 )) >= 10) AND (NOT (IS_PED_DEAD( l_U1084 )))) || ((l_U1084 != nil) AND (IS_PED_DEAD( l_U1084 )))))
        {
            if (NOT l_U1086)
            {
                if ((l_U1084 != nil) AND (IS_PED_DEAD( l_U1084 )))
                {
                    if (HAS_PED_BEEN_DAMAGED_BY_PED( l_U1084, l_U1714, 0 ))
                    {
                        sub_5925( "PASSOS KILLED A MAN, PUT A GUN AGAINST HIS HEAD, PULLED HIS TRIGGER NOW HE'S DEAD" );
                        l_U1086 = 1;
                    }
                }
            }
            l_U1084 = sub_62055();
            if (l_U1084 != nil)
            {
                if (((sub_57393( ref l_U645 )) + (sub_57393( ref l_U873 ))) == 1)
                {
                    if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ) )) AND (NOT (IS_PED_DEAD( l_U1714 ))))
                    {
                        SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ), 100 );
                    }
                }
                else if ((NOT l_U1086) || ((sub_10981( l_U1714, l_U1084, 0 )) < 10))
                {
                    SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ), 0 );
                }
                else if (l_U1086)
                {
                    SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ), 100 );
                };;;
                if (NOT (IS_PED_DEAD( l_U1714 )))
                {
                    PED_SET_ACTION_INTENTION( l_U1714, 56, 1000, g_U649 );
                    TASK_SHOOT_AT_PED( l_U1714, l_U1084, -1, -256437761, 1, 0, 0 );
                }
            }
            else
            {
                sub_5925( "Telling Passos to return to idle" );
                sub_62847( l_U1714, 58, 1000 );
                sub_62903( ref l_U1714 );
            }
        }
        if (((sub_57393( ref l_U645 )) + (sub_57393( ref l_U873 ))) < 1)
        {
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_2", "", 0, 6000, -1, -1082130432, 0 );
            sub_5925( "CHANGING MUSIC" );
            sub_55268();
            l_U145 = 13;
            sub_683( "SP", "eCheckpointState = CP_PRACTICE_ROOM_BULLET_CAM", 0 );
        }
        break;
        case 12: break;
        case 13:
        if (NOT IS_BULLET_CAMERA_ACTIVE())
        {
            sub_683( "SP", "eCheckpointState = CP_PRACTICE_ROOM_CS_GONE", 0 );
            l_U145 = 14;
        }
        break;
        case 14:
        if (l_U146)
        {
            sub_683( "[SA]", "Entering state STATE_PRACTICE_ROOM_CS_GONE", "[STATE]" );
            STREAM_HELPERS_REQUEST_AT_LOC( 46.66368000, 70.31908000, -2.23933200, 0 );
            sub_63373( ref g_U888[3] );
            sub_31736( ref g_U3867, g_U2397, l_U1041, ref g_U2532, 1, 0 );
            sub_4967( ref l_U342, 1 );
            sub_43066();
            sub_44054( ref l_U470 );
            sub_44136( 0, sub_1133(), "MAX", ref l_U470, 2, 0 );
            sub_44136( 1, l_U1714, "PASSOS", ref l_U470, 2, 0 );
            sub_44379( "SSTD_PRPA", ref l_U470, 8, 1 );
            sub_49042( ref l_U580, 3500 );
            sub_63538( ref l_U1066 );
            sub_49223( ref l_U1714, 50 );
            sub_49223( ref l_U1714, 56 );
            sub_49223( ref l_U1714, 58 );
            sub_20358( ref l_U1323, 1 );
            sub_20358( ref l_U1237, 1 );
            l_U1700 = 1;
            sub_63630();
        }
        if (sub_11579( ref l_U1323 ))
        {
            sub_52134( 1, 0, 0, 1 );
            sub_63792( sub_1133(), 0 );
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_WAL_15_F", 1, 66.81000000, 100.01200000, -1.85000000, 180, 0, 0 );
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "ssta_VicPic" )))
            {
                sub_63980( 0 );
                sub_44054( ref l_U1419 );
                sub_64098( "SSTD_MSFTS", ref l_U1419 );
                FOUND_EXPLORATION_ITEM( "ssta_VicPic" );
                sub_1970( ref l_U1409, 500, 1, 0 );
            }
            else
            {
                sub_1970( ref l_U1409, 4000, 1, 0 );
            }
            l_U1418 = 1;
        }
        if (sub_11579( ref l_U1237 ))
        {
            sub_52134( 1, 0, 0, 1 );
            sub_63792( sub_1133(), 0 );
            CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_WAL_15_F", 1, 87.14000000, 67.24000000, -2.73000000, 0, 0, 0 );
            if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "ssta_BloodStn" )))
            {
                sub_63980( 0 );
                sub_44054( ref l_U1419 );
                sub_64098( "SSTD_ASWD", ref l_U1419 );
                FOUND_EXPLORATION_ITEM( "ssta_BloodStn" );
                sub_1970( ref l_U1409, 500, 1, 0 );
            }
            else
            {
                sub_1970( ref l_U1409, 4000, 1, 0 );
            }
            l_U1418 = 1;
        }
        if (l_U1418)
        {
            if (NOT (sub_1860( ref l_U1409 )))
            {
                if (NOT (sub_55837( l_U1419 )))
                {
                    sub_2106( ref l_U1409 );
                }
            }
            if (sub_2226( ref l_U1409 ))
            {
                sub_63792( sub_1133(), 1 );
                CAMERA_ANIMATED_STOP( 0, 0 );
                sub_53011( 1, 1 );
                l_U1418 = 0;
                sub_4967( ref l_U1323, 1 );
                sub_4967( ref l_U1237, 1 );
            }
        }
        sub_64585( ref g_U3003, 1, 1036831949 );
        sub_64585( ref g_U2996, 1, 1036831949 );
        if (l_U1700)
        {
            if (NOT sub_57043())
            {
                sub_64825();
            }
        }
        if ((NOT (sub_65075( ref l_U1429 ))) AND ((NOT l_U1418) AND (NOT sub_57043())))
        {
            if ((NOT sub_65338()) AND (sub_49142( ref l_U1714, 38, 1 )))
            {
                sub_683( "MF", "Playing Speech: SSTD_PRPG A", 0 );
                sub_44054( ref l_U490 );
                sub_44136( 0, sub_1133(), "MAX", ref l_U490, 2, 0 );
                sub_44136( 1, l_U1714, "PASSOS", ref l_U490, 2, 0 );
                if ((sub_65075( ref l_U1429 )) == 0)
                {
                    sub_44379( "SSTD_PRPG", ref l_U490, 8, 1 );
                }
                sub_49042( ref l_U1054, 12000 );
            }
        }
        if (NOT l_U1063)
        {
            if ((NOT (sub_65075( ref l_U1429 ))) AND ((NOT l_U1418) AND (NOT sub_57043())))
            {
                if (sub_2226( ref l_U1054 ))
                {
                    sub_683( "MF", "Playing Speech: SSTD_PRPG B", 0 );
                    sub_44054( ref l_U490 );
                    sub_44136( 0, sub_1133(), "MAX", ref l_U490, 2, 0 );
                    sub_44136( 1, l_U1714, "PASSOS", ref l_U490, 2, 0 );
                    if ((sub_65075( ref l_U1429 )) == 0)
                    {
                        sub_44379( "SSTD_PRPG", ref l_U490, 8, 1 );
                    }
                    sub_49042( ref l_U1054, 12000 );
                }
                else if ((IS_PLAYER_SHOOTDODGING()) AND (NOT l_U1728))
                {
                    l_U1728 = 1;
                }
                else if ((NOT IS_PLAYER_SHOOTDODGING()) AND (l_U1728))
                {
                    l_U1728 = 0;
                    if ((sub_56805( 0, 2 )) == 0)
                    {
                        sub_44136( 1, l_U1714, "PASSOS", ref uVar4, 2, 0 );
                        sub_44379( "SSTD_SDNC", ref uVar4, 7, 1 );
                        sub_5925( "PLAYING SSTD_SDNC" );
                    }
                }
                else if ((NOT (IS_PED_IN_CROSSHAIR_CYLINDER( l_U1714, 3, 10000, 0, -1082130432 ))) AND ((NOT (IS_BULLET_TIME_ACTIVE( 1 ))) AND (((sub_56805( 0, 2 )) == 0) AND (sub_56414( 1 )))))
                {
                    sub_44136( 1, l_U1714, "PASSOS", ref uVar14, 2, 0 );
                    sub_44379( "SSTD_PSOC", ref uVar14, 7, 1 );
                    sub_5925( "PLAYING SSTD_PSOC" );
                };;;;
            }
            else if ((NOT IS_PLAYER_SHOOTDODGING()) AND (l_U1728))
            {
                l_U1728 = 0;
            }
        }
        else if ((sub_54038( l_U190 )) AND ((NOT l_U1064) AND (l_U1044)))
        {
            if ((NOT l_U1418) AND (NOT (sub_55837( l_U500 ))))
            {
                if (sub_2226( ref l_U1054 ))
                {
                    sub_683( "MF", "Playing Speech: SSTD_PRPI", 0 );
                    sub_44054( ref l_U500 );
                    sub_44136( 0, sub_1133(), "MAX", ref l_U500, 2, 0 );
                    sub_44136( 1, l_U1714, "PASSOS", ref l_U500, 2, 0 );
                    sub_44379( "SSTD_PRPI", ref l_U500, 8, 1 );
                    l_U1064 = 1;
                }
            }
        }
        if (l_U1044)
        {
            if ((NOT (sub_65075( ref l_U1429 ))) AND ((NOT l_U1418) AND ((NOT sub_57043()) AND ((sub_58687( "X", "Less", 77.50000000 )) AND ((NOT l_U570) AND (l_U190._fU64))))))
            {
                sub_44054( ref l_U560 );
                sub_44136( 0, sub_1133(), "MAX", ref l_U560, 2, 0 );
                sub_44136( 1, l_U1714, "PASSOS", ref l_U560, 2, 0 );
                sub_44379( "SSTD_NATD", ref l_U560, 8, 1 );
                l_U570 = 1;
                l_U1728 = 0;
            }
            else if ((NOT (sub_65075( ref l_U1429 ))) AND ((NOT l_U1418) AND ((NOT sub_57043()) AND (NOT (sub_55837( l_U530 ))))))
            {
                if ((l_U1065 < 2) AND (((l_U1054._fU16) || (sub_2226( ref l_U1054 ))) AND (sub_54038( l_U190 ))))
                {
                    sub_44054( ref l_U530 );
                    sub_44136( 0, sub_1133(), "MAX", ref l_U530, 2, 0 );
                    sub_44136( 1, l_U1714, "PASSOS", ref l_U530, 2, 0 );
                    sub_44379( "SSTD_ATDB", ref l_U530, 8, 1 );
                    sub_49042( ref l_U1054, 10000 );
                    l_U1065++;
                }
                else if ((sub_54038( l_U190 )) AND ((sub_61699( l_U1714, "X", "Greater", 85.30000000 )) AND (NOT (sub_1860( ref l_U1054 )))))
                {
                    sub_49042( ref l_U1054, 10000 );
                }
                else if (sub_61699( l_U1714, "X", "Greater", 85.30000000 ))
                {
                    if ((IS_PLAYER_SHOOTDODGING()) AND (NOT l_U1728))
                    {
                        l_U1728 = 1;
                    }
                    else if ((NOT IS_PLAYER_SHOOTDODGING()) AND (l_U1728))
                    {
                        l_U1728 = 0;
                        if ((sub_56805( 0, 2 )) == 0)
                        {
                            sub_44136( 1, l_U1714, "PASSOS", ref uVar24, 2, 0 );
                            sub_44379( "SSTD_SDNC", ref uVar24, 7, 1 );
                            sub_5925( "PLAYING SSTD_SDNC" );
                        }
                    }
                    else if ((NOT (IS_PED_IN_CROSSHAIR_CYLINDER( l_U1714, 3, 10000, 0, -1082130432 ))) AND ((NOT (IS_BULLET_TIME_ACTIVE( 1 ))) AND (((sub_56805( 0, 2 )) == 0) AND (sub_56414( 1 )))))
                    {
                        sub_44136( 1, l_U1714, "PASSOS", ref uVar34, 2, 0 );
                        sub_44379( "SSTD_PSOC", ref uVar34, 7, 1 );
                        sub_5925( "PLAYING SSTD_PSOC" );
                    };;;
                };;;
            }
            sub_64840( ref l_U190, 0 );
        }
        if (sub_64840( ref l_U274, 0 ))
        {
            PLAY_IMAGEFX( "FLICKER_VIBRATE_INTERLACE_01", 4, 0 );
        }
        if (sub_65338())
        {
            sub_67171();
            l_U1063 = 1;
            sub_49042( ref l_U1054, 12000 );
            sub_49042( ref l_U1066, GET_RANDOM_INT_IN_RANGE( 8000, 15000 ) );
            sub_67453( l_U1714, sub_1133() );
            l_U1118 = 0;
            l_U1119 = 0;
            l_U1120 = 0;
            l_U1130 = 0;
            sub_1970( ref l_U1121, sub_56805( 10000, 15000 ), 1, 0 );
        }
        if (sub_2226( ref l_U1066 ))
        {
            sub_683( "SA", "Playing Passos's idle animation.", 0 );
            sub_62847( l_U1714, 53, 1000 );
            sub_49042( ref l_U1066, GET_RANDOM_INT_IN_RANGE( 8000, 15000 ) );
        }
        if (NOT l_U1703)
        {
            if ((sub_49157( l_U1714, 51 )) == 3)
            {
                l_U1703 = 1;
                SET_PED_PRIMARY_LOOKAT( l_U1714, sub_1133() );
                sub_49223( ref l_U1714, 33 );
                sub_49223( ref l_U1714, 34 );
                sub_49223( ref l_U1714, 32 );
                sub_49223( ref l_U1714, 35 );
                sub_49223( ref l_U1714, 31 );
                sub_49223( ref l_U1714, 36 );
                sub_49223( ref l_U1714, 47 );
                sub_49223( ref l_U1714, 48 );
            }
            else
            {
                fVar44 = 3.00000000;
                if ((sub_61699( l_U1714, "X", "Less", 75.50000000 )) AND (sub_61699( l_U1714, "X", "Greater", 72.30000000 )))
                {
                    fVar44 = 6.00000000;
                }
                sub_68214( l_U1714, ref l_U1118, ref l_U1120, ref l_U1119, ref l_U1130, ref l_U1121, 67925, 6, 1069547520, 1065353216 );
            }
        }
        else
        {
            uVar45 = nil;
            if (((sub_49157( l_U1714, 52 )) == 3) AND (HAS_BULLET_IMPACTED_IN_AREA( (sub_56433( l_U1714 )) - (vector( 0, 0, 1)), 3, ref uVar45 )))
            {
                sub_68342( ref l_U1714, sub_56433( sub_1133() ), 58, 1000 );
                if (NOT (sub_55837( l_U1755 )))
                {
                    sub_44054( ref l_U1755 );
                    sub_44136( 1, l_U1714, "PASSOS", ref l_U1755, 2, 0 );
                    sub_44379( "SSTD_PSAH", ref l_U1755, 7, 1 );
                }
            }
            else if (NOT l_U1702)
            {
                if ((IS_CONTROL_PRESSED( 0, 6 )) AND (((sub_49157( l_U1714, 52 )) == 3) AND (IS_PED_IN_CROSSHAIR_CYLINDER( l_U1714, 1, 10000, 1, -1082130432 ))))
                {
                    l_U1702 = 1;
                    sub_68342( ref l_U1714, sub_56433( sub_1133() ), 57, 1000 );
                    if (NOT (sub_55837( l_U1755 )))
                    {
                        sub_44054( ref l_U1755 );
                        sub_44136( 1, l_U1714, "PASSOS", ref l_U1755, 2, 0 );
                        sub_44379( "SSTD_PAAH", ref l_U1755, 7, 1 );
                    }
                }
            }
            else if (NOT (IS_PED_IN_CROSSHAIR_CYLINDER( l_U1714, 1, 10000, 1, -1082130432 )))
            {
                l_U1702 = 0;
            };;;
        }
        if ((NOT IS_BULLET_CAMERA_ACTIVE()) AND ((NOT (IS_PED_DEAD( l_U1714 ))) AND (sub_11579( ref l_U342 ))))
        {
            g_U3870 = 1;
            CLEAR_PED_PRIMARY_LOOKAT( l_U1714 );
            l_U145 = 15;
            sub_683( "SP", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 15:
        if ((g_U855 == 3) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U145 = 0;
            sub_683( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U145 != iVar2)
    {
        l_U146 = 1;
    }
    else
    {
        l_U146 = 0;
    }
    return;
}

void sub_10925()
{
    if (NOT (IS_PED_DEAD( l_U1714 )))
    {
        if (((sub_10981( sub_1133(), l_U1714, 1 )) < l_U337) AND ((PED_GET_ACTION_INTENTION_STATUS( l_U1714, 51 )) == 3))
        {
            if ((NOT (IS_PED_DEAD( sub_1133() ))) AND ((NOT (IS_PED_DEAD( l_U1714 ))) AND (NOT l_U336)))
            {
                l_U336 = 1;
                TASK_LOOK_AT_PED( l_U1714, sub_1133(), -1, 0 );
            }
        }
        else if (l_U336)
        {
            if (NOT (IS_PED_DEAD( l_U1714 )))
            {
                l_U336 = 0;
                TASK_CLEAR_LOOK_AT( l_U1714 );
            }
        }
    }
    return;
}

void sub_10981(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_11251(int iParam0)
{
    if (DOES_OBJECT_EXIST( iParam0->_fU40 ))
    {
        if ((GET_OBJECT_HEALTH( iParam0->_fU40 )) < 1000.00000000)
        {
            if (iParam0->_fU4)
            {
                sub_4570( iParam0->_fU40 );
            }
            if ((ref iParam0->_fU496->_fU0) == 1)
            {
                sub_4967( iParam0 + 496, 0 );
            }
        }
    }
    switch (iParam0->_fU940)
    {
        case 0:
        if (DOES_OBJECT_EXIST( iParam0->_fU40 ))
        {
            if (((GET_OBJECT_HEALTH( iParam0->_fU40 )) == 1000.00000000) AND ((sub_11467() == 0) AND (iParam0->_fU0 == 0)))
            {
                if ((IS_SCRIPT_MOVIE_PLAYING( 2 )) == 0)
                {
                    if (sub_11579( iParam0 + 496 ))
                    {
                        if (NOT (IS_PED_DEAD( sub_1133() )))
                        {
                            SET_PLAYER_CONTROL( sub_1155(), 0, 0 );
                            REENABLE_PLAYER_INPUT( 30 );
                        }
                        iParam0->_fU944 = GET_WEAPON_FROM_HAND( sub_1133(), 0, 0 );
                        if (iParam0->_fU1072)
                        {
                            if (sub_13476( iParam0->_fU944 ))
                            {
                                sub_13762( iParam0 );
                            }
                        }
                        else
                        {
                            sub_13923();
                        }
                        if (NOT (IS_PED_DEAD( sub_1133() )))
                        {
                            if (IS_PED_DUAL_WIELDING( sub_1133() ))
                            {
                                sub_1970( ref l_U74, 1200, 1, 0 );
                            }
                            else
                            {
                                sub_1970( ref l_U74, 500, 1, 0 );
                            }
                        }
                        sub_14065( iParam0->_fU76, 0 );
                        sub_2106( ref l_U74 );
                        iParam0->_fU940 = 1;
                    }
                }
            }
        }
        break;
        case 1:
        if ((sub_2226( ref l_U74 )) AND (sub_14284( iParam0 )))
        {
            if ((sub_14374( iParam0 )) AND (NOT (IS_PED_DEAD( sub_1133() ))))
            {
                ISEQ_REGISTER_ENTITY( iParam0->_fU76, "Max", sub_1133(), 0 );
            }
            if (sub_14374( iParam0 ))
            {
                ISEQ_START( iParam0->_fU76 );
            }
            sub_4967( iParam0 + 496, 0 );
            iParam0->_fU940 = 2;
        }
        else
        {
            sub_683( "rw", "waiting for weapon to holster", 0 );
        }
        break;
        case 2:
        if (sub_14374( iParam0 ))
        {
            CAMERA_PLAY_ANIMATED( iParam0->_fU100, iParam0->_fU96, 0, iParam0->_fU108, iParam0->_fU120, 0, 0 );
            sub_14600( sub_1133(), iParam0->_fU80, iParam0->_fU92 );
        }
        PRELOAD_MOVIE( 2, iParam0 + 8, 0, sub_14663() );
        if (sub_14374( iParam0 ))
        {
            sub_1970( iParam0 + 840, iParam0->_fU916, 1, 0 );
        }
        else
        {
            sub_1970( iParam0 + 840, 0, 1, 0 );
        }
        sub_2106( iParam0 + 840 );
        iParam0->_fU940 = 3;
        break;
        case 3:
        if (sub_2226( iParam0 + 840 ))
        {
            sub_2763( iParam0 + 840 );
            if (sub_14374( iParam0 ))
            {
                ISEQ_UNREGISTER_ENTITY( iParam0->_fU76, "Max" );
                ISEQ_TERMINATE( iParam0->_fU76 );
            }
            CAMERA_ANIMATED_STOP( 0, 0 );
            iParam0->_fU124 = CREATE_CAM_WITH_PARAMS( "DEFAULT_SCRIPTED_CAMERA", iParam0->_fU128, iParam0->_fU140, 45, 0 );
            if (iParam0->_fU924 != 0)
            {
                SET_CAM_FAR_DOF( iParam0->_fU124, iParam0->_fU924, iParam0->_fU928 );
                SET_CAM_DOF_STRENGTH( iParam0->_fU124, iParam0->_fU932 );
            }
            SET_CAM_ACTIVE( iParam0->_fU124, 1 );
            RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
            if (NOT (IS_PED_DEAD( sub_1133() )))
            {
                SET_PED_VISIBLE( sub_1133(), 0 );
                DISPLAY_HUD( 0 );
            }
            if ((iParam0->_fU912 == 0) AND ((DOES_OBJECT_EXIST( iParam0->_fU40 )) == 1))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU40, iParam0 + 44 );
                FREEZE_OBJECT_POSITION( iParam0->_fU40, 1 );
                SET_OBJECT_COLLISION( iParam0->_fU40, 0 );
            }
            sub_4967( iParam0 + 496, 0 );
            sub_4967( iParam0 + 152, 1 );
            if ((IS_SCRIPT_MOVIE_PLAYING( 2 )) == 0)
            {
                SET_MOVIE_LOOP( 2, 0 );
                PLAY_MOVIE( 2, 0 );
                AUDIO_ENABLE_TV_MOVIE( 1 );
            }
            if ((NOT (sub_1860( iParam0 + 876 ))) AND ((sub_14374( iParam0 )) AND (iParam0->_fU920 > 0)))
            {
                sub_1970( iParam0 + 876, iParam0->_fU920, 1, 0 );
                sub_2106( iParam0 + 876 );
            }
            STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
            iParam0->_fU940 = 4;
        }
        break;
        case 4:
        if (sub_2226( iParam0 + 876 ))
        {
            sub_14065( iParam0->_fU76, 0 );
            if (NOT (IS_PED_DEAD( sub_1133() )))
            {
                ISEQ_REGISTER_ENTITY( iParam0->_fU76, "Max", sub_1133(), 0 );
                SET_PED_VISIBLE( sub_1133(), 1 );
            }
            sub_14600( sub_1133(), iParam0->_fU80, iParam0->_fU92 );
            if (sub_14374( iParam0 ))
            {
                SET_CAM_ACTIVE( iParam0->_fU124, 0 );
                CAMERA_PLAY_ANIMATED( iParam0->_fU100, iParam0->_fU96, 0, iParam0->_fU108, iParam0->_fU120, 0, 0 );
                ISEQ_START( iParam0->_fU76 );
            }
            CLEAR_PED_PRIMARY_LOOKAT( sub_1133() );
            SET_COORD_PRIMARY_LOOKAT( sub_1133(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ) );
            sub_2763( iParam0 + 840 );
            sub_1970( iParam0 + 840, iParam0->_fU916, 1, 0 );
            sub_2106( iParam0 + 840 );
            sub_4967( iParam0 + 496, 0 );
            sub_4967( iParam0 + 152, 0 );
        }
        if (sub_2226( iParam0 + 840 ))
        {
            sub_2763( iParam0 + 840 );
            if (sub_14374( iParam0 ))
            {
                ISEQ_UNREGISTER_ENTITY( iParam0->_fU76, "Max" );
                ISEQ_TERMINATE( iParam0->_fU76 );
            }
            if (sub_14374( iParam0 ))
            {
                if (IS_ANIMATED_CAMERA_PLAYING())
                {
                    CAMERA_ANIMATED_STOP( 0, 0 );
                }
            }
            if ((DOES_CAM_EXIST( iParam0->_fU124 )) == 0)
            {
                iParam0->_fU124 = CREATE_CAM_WITH_PARAMS( "DEFAULT_SCRIPTED_CAMERA", iParam0->_fU128, iParam0->_fU140, 45, 0 );
                if (iParam0->_fU924 != 0)
                {
                    SET_CAM_FAR_DOF( iParam0->_fU124, iParam0->_fU924, iParam0->_fU928 );
                    SET_CAM_DOF_STRENGTH( iParam0->_fU124, iParam0->_fU932 );
                }
            }
            SET_CAM_ACTIVE( iParam0->_fU124, 1 );
            if (NOT (IS_PED_DEAD( sub_1133() )))
            {
                SET_PLAYER_CONTROL( sub_1155(), 0, 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( sub_1133(), 1 );
                REENABLE_PLAYER_INPUT( 30 );
                SET_PED_VISIBLE( sub_1133(), 0 );
                DISPLAY_HUD( 0 );
            }
            RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
            if ((iParam0->_fU912 == 0) AND ((DOES_OBJECT_EXIST( iParam0->_fU40 )) == 1))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU40, iParam0 + 44 );
                FREEZE_OBJECT_POSITION( iParam0->_fU40, 1 );
                SET_OBJECT_COLLISION( iParam0->_fU40, 0 );
            }
            sub_4967( iParam0 + 152, 1 );
        }
        if ((sub_11467()) || (((sub_16042( iParam0 )) AND ((ref iParam0->_fU152->_fU0) == 1)) || (sub_11579( iParam0 + 152 ))))
        {
            sub_14600( sub_1133(), iParam0->_fU1012, iParam0->_fU1024 );
            sub_4967( iParam0 + 152, 0 );
            if (sub_14374( iParam0 ))
            {
                sub_1970( iParam0 + 1028, iParam0->_fU1064, 1, 0 );
            }
            else
            {
                sub_1970( iParam0 + 1028, iParam0->_fU1068, 1, 0 );
            }
            sub_2106( iParam0 + 1028 );
            if (sub_14374( iParam0 ))
            {
                sub_14065( iParam0->_fU1008, 0 );
                ISEQ_REGISTER_ENTITY( iParam0->_fU1008, "Max", sub_1133(), 0 );
                ISEQ_START( iParam0->_fU1008 );
            }
            iParam0->_fU940 = 5;
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_1133() )))
        {
            SET_PED_VISIBLE( sub_1133(), 1 );
        }
        if (sub_14374( iParam0 ))
        {
            CAMERA_PLAY_ANIMATED( iParam0->_fU100, iParam0->_fU104, 0, iParam0->_fU108, iParam0->_fU120, 0, 0 );
            iParam0->_fU1080 = 1;
        }
        SET_CAM_ACTIVE( iParam0->_fU124, 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        iParam0->_fU940 = 6;
        break;
        case 6:
        if (sub_2226( iParam0 + 1028 ))
        {
            if (sub_14374( iParam0 ))
            {
                ISEQ_UNREGISTER_ENTITY( iParam0->_fU1008, "Max" );
                ISEQ_TERMINATE( iParam0->_fU1008 );
            }
            iParam0->_fU0 = 1;
            DISPLAY_HUD( 1 );
            DESTROY_CAM( iParam0->_fU124 );
            STOP_MOVIE( 2 );
            AUDIO_ENABLE_TV_MOVIE( 0 );
            RELEASE_MOVIE( 2 );
            if (iParam0->_fU912 == 0)
            {
                sub_4570( iParam0->_fU40 );
            }
            sub_1970( ref l_U83, 750, 1, 0 );
            sub_2106( ref l_U83 );
            iParam0->_fU940 = 7;
        }
        break;
        case 7:
        if (sub_2226( ref l_U83 ))
        {
            if (iParam0->_fU1072 == 0)
            {
                sub_13762( iParam0 );
            }
            iParam0->_fU940 = 8;
        }
        break;
        case 8:
        if (sub_16698( iParam0 ))
        {
            DESTROY_CAM( iParam0->_fU124 );
            if (sub_14374( iParam0 ))
            {
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU1076, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
            }
            if (NOT (IS_PED_DEAD( sub_1133() )))
            {
                CLEAR_PED_PRIMARY_LOOKAT( sub_1133() );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( sub_1133(), 0 );
            }
            iParam0->_fU940 = 0;
        }
        else
        {
            sub_683( "rw", " waiting to reholster weapon ", 0 );
        }
        break;
        default: break;
    }
    if ((iParam0->_fU1080) AND ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( iParam0->_fU100, iParam0->_fU104 )) - sub_16965())) AND (IS_ANIMATED_CAMERA_PLAYING())))
    {
        iParam0->_fU1080 = 0;
        sub_17016();
    }
    return;
}

int sub_11467()
{
    float fVar2;

    fVar2 = 50.00000000;
    if (IS_PED_IN_SPHERE_AREA_OF_ANY_ENEMY_PEDS( sub_1133(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1133() ), fVar2, 0 ))
    {
        return 1;
    }
    return 0;
}

int sub_11579(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_1133() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1133() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_11665( sub_1133(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_11665( sub_1133(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_5362( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_5423( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_12506() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_4967( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_5011( iParam0, 0 );
                            sub_5211( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_5011( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_1133() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_1133(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_5011( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_5211( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_1133() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_1133(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_1133() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_1133(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_1133() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_1133(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_5011( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_5211( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_1133() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_1133() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_1133() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_1133(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_5211( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_11665(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

int sub_12506()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

int sub_13476(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_13762(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (NOT (IS_PED_DEAD( sub_1133() )))
    {
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_1133(), 0 ) ))
        {
            iParam0->_fU944 = GET_WEAPON_FROM_HOLSTER( sub_1133(), 0 );
        }
        else if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_1133(), 1 ) ))
        {
            iParam0->_fU944 = GET_WEAPON_FROM_HOLSTER( sub_1133(), 1 );
        }
        SELECT_WEAPON_TO_HAND( sub_1133(), iParam0->_fU944, 0, iVar3 );
    }
    return;
}

void sub_13923()
{
    if (NOT (IS_PED_DEAD( sub_1133() )))
    {
        SELECT_WEAPON_TO_HAND( sub_1133(), 0, 0, 0 );
        SELECT_WEAPON_TO_HAND( sub_1133(), 0, 1, 0 );
    }
    return;
}

void sub_14065(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_14284(int iParam0)
{
    if ((iParam0->_fU1072 == 1) || ((GET_WEAPON_FROM_HAND( sub_1133(), 0, 0 )) != iParam0->_fU944))
    {
        return 1;
    }
    return 0;
}

int sub_14374(unknown uParam0)
{
    return 1;
    return 0;
}

void sub_14600(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

int sub_14663()
{
    return 1;
    return 0;
}

int sub_16042(int iParam0)
{
    if (sub_14374( iParam0 ))
    {
        if ((GET_SCRIPT_MOVIE_FRAMES_REMAINING( 2 )) < ((iParam0->_fU1068 / 1000) * 30.00000000))
        {
            return 1;
        }
    }
    else if ((IS_PAUSE_MENU_ACTIVE() == 0) AND ((IS_SCRIPT_MOVIE_PLAYING( 2 )) == 0))
    {
        return 1;
    }
    return 0;
}

int sub_16698(int iParam0)
{
    if ((iParam0->_fU1072) || ((GET_WEAPON_FROM_HAND( sub_1133(), 0, 0 )) == iParam0->_fU944))
    {
        return 1;
    }
    return 0;
}

int sub_16965()
{
    return 300;
    return 1500;
}

void sub_17016()
{
    int iVar2;

    iVar2 = 1500;
    iVar2 = 500;
    CAMERA_FREEZE_FRAME( 1, iVar2, 1500, 0 );
    if (NOT (IS_PED_DEAD( sub_1133() )))
    {
        SET_PLAYER_CONTROL( sub_1155(), 1, 0 );
    }
    return;
}

void sub_17302()
{
    sub_683( "SP", "P_INITIALIZE_SCRIPT_DATA", 0 );
    l_U146 = 1;
    ENABLE_GRAVITY_WELL( "st_00_fd_simple", ref l_U617, 0, 0, 0, 0 );
    sub_17399( "SSTDAUD" );
    l_U872 = 0;
    l_U1044 = 0;
    l_U336 = 0;
    sub_2763( ref l_U636 );
    l_U1045 = 0;
    sub_2763( ref l_U1054 );
    l_U1063 = 0;
    l_U1064 = 0;
    l_U1118 = 0;
    l_U1119 = 0;
    l_U1120 = 0;
    l_U1130 = 0;
    l_U1012 = 0;
    l_U1700 = 0;
    sub_1970( ref l_U1022, 1000, 1, 0 );
    l_U1040 = 0;
    l_U1701 = 0;
    l_U1702 = 0;
    l_U1703 = 0;
    sub_1970( ref l_U1704, 8000, 1, 0 );
    l_U1713 = 0;
    l_U1085 = 0;
    l_U1086 = 0;
    l_U1418 = 0;
    l_U570 = 0;
    l_U1728 = 0;
    l_U1729 = 0;
    l_U1740 = 0;
    l_U1065 = 0;
    l_U616 = 0;
    return;
}

void sub_17399(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_17419();
    return;
}

void sub_17419()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_17721()
{
    sub_683( "SP", "P_SET_STATIC_DATA", 0 );
    sub_17797( ref l_U1715, 72.60000000, 93.90000000, -3.90000000, 170.00000000, g_U2376, 26, 6, 0, 0, 0 );
    sub_17966( ref l_U148, "TRIGGER_MAX_COVER_AREA", 70.50000000, 90.74000000, -4.16000000, 3.84000000, 1.17000000, 3.27000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17966( ref l_U169, "TRIGGER_REMOVE_FLEE_CS", 47.01000000, 71.49000000, -3.29000000, 2.16000000, 5.81000000, 3.01000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17966( ref l_U190, "TRIGGER_IN_ELEVATOR_ROOM", 86.21000000, 67.49000000, -4.00000000, 15.47000000, 17.47000000, 3.15000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17966( ref l_U211, "TRIGGER_CS_KILLS_PASSOS_01", 73.33000000, 90.08000000, -4.16000000, 1.30000000, 2.51000000, 3.27000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17966( ref l_U232, "TRIGGER_CS_KILLS_PASSOS_02", 65.71000000, 90.74000000, -4.16000000, 2.87000000, 1.17000000, 3.27000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17966( ref l_U253, "TRIGGER_LEFT_PRACTICE", 79.22000000, 74.85000000, -4.00000000, 3.26000000, 12.39000000, 3.15000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17966( ref l_U274, "TRIGGER_LEFT_PRACTICE_IFX", 79.22000000, 74.85000000, -4.00000000, 3.26000000, 12.39000000, 3.15000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17966( ref l_U295, "TRIGGER_LOCKED_DOORS", 94.72000000, 67.49000000, -4.06000000, 2.46000000, 3.34000000, 3.33000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17966( ref l_U428, "TRIG_PRAC_ELEV_BUTTON", 87.11000000, 64.43000000, -3.26000000, 3.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17966( ref l_U449, "TRIG_PRAC_ELEV_BUTTON_CLOSE", 87.74000000, 64.49000000, -3.26000000, 1.50000000, 1.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17966( ref l_U1132, "gym_speech", 64.19000000, 99.48000000, -4.06000000, 5.54000000, 4.74000000, 2.78000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17966( ref l_U1174, "gym_medical", 70.61000000, 97.60000000, -4.06000000, 5.82000000, 8.84000000, 2.78000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17966( ref l_U1153, "gym_strategy", 66.34000000, 65.48000000, -3.38000000, 17.56000000, 6.47000000, 2.78000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17966( ref l_U1195, "gym_blood", 91.40000000, 67.62000000, -4.03000000, 3.16000000, 4.42000000, 3.79000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17966( ref l_U1216, "gym_door", 95.38000000, 67.62000000, -4.03000000, 3.16000000, 4.42000000, 3.79000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19204( ref l_U316[0], "TETHER_PRAC0", 63.41000000, 72.88000000, -4.15000000, 26.19000000, 21.08000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19293( ref l_U342, 1, 88.35000000, 64.48000000, -2.06800000, l_U449, l_U428, 0, 0 );
    sub_19968( ref l_U342, 30, "POI_ELEVATOR" );
    sub_20189( ref l_U1237, 2, 94.17157000, 67.52854000, -2.98343000, 94.17157000, 67.52854000, -2.98343000, 94.17157000, 67.52854000, -2.98343000, 1.50000000, 3.00000000, 1, 0 );
    sub_19968( ref l_U1237, 30, "POI_STADFCBLOOD" );
    sub_20326( ref l_U1237, 0 );
    sub_20358( ref l_U1237, 0 );
    sub_20418( ref l_U1237, 1 );
    sub_20189( ref l_U1323, 2, 0.00000000, 0.00000000, 0.00000000, 61.30734000, 99.91102000, -2.53000000, 61.30734000, 99.91102000, -2.53000000, 1.50000000, 3.00000000, 1, 0 );
    sub_20326( ref l_U1323, 0 );
    sub_19968( ref l_U1323, 30, "POI_OFFPICTURE" );
    sub_20358( ref l_U1323, 0 );
    sub_20418( ref l_U1323, 1 );
    l_U1751[0] = CREATE_DYNAMIC_PATH_OBSTRUCTION( 69.57111000, 100.87420000, -3.99989600, 69.57111000, 87.66347000, -3.99989600, 0.10000000 );
    l_U1751[1] = CREATE_DYNAMIC_PATH_OBSTRUCTION( 69.57111000, 87.66347000, -3.99989600, 59.20061000, 87.66347000, -3.99989600, 0.10000000 );
    l_U1751[2] = CREATE_DYNAMIC_PATH_OBSTRUCTION( 59.20061000, 87.66347000, -3.99989600, 59.20061000, 92.56924000, -3.99989600, 0.10000000 );
    return;
}

void sub_17797(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_17966(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_19204(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_19293(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48)
{
    sub_19310( iParam0, uParam47 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU80 = 1;
    iParam0->_fU116 = {uParam5};
    iParam0->_fU88 = 1;
    iParam0->_fU216 = {uParam26};
    iParam0->_fU320 = uParam48;
    iParam0->_fU20 = {uParam2};
    sub_19676( iParam0 );
    return;
}

void sub_19310(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_19676(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_19755( iParam0 );
    return;
}

void sub_19755(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_5011( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_5011( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_5011( iParam0, 1 );
            }
            else
            {
                sub_5011( iParam0, 0 );
            };;;
        }
        else
        {
            sub_5011( iParam0, 0 );
        }
    }
    else
    {
        sub_5011( iParam0, 0 );
    }
    return;
}

void sub_19968(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_19999( iParam0 );
    return;
}

void sub_19999(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_20189(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_19310( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_19676( iParam0 );
    return;
}

void sub_20326(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_20358(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_5362( iParam0 );
    return;
}

void sub_20418(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_20871()
{
    sub_683( "GA", "P_REQUEST_PRACTICEROOM_PERSISTENT_ASSETS start", 0 );
    ACTION_TREE_FORCE_UNLOAD( "NPC\PLGE.act" );
    sub_20972( ref l_U128, ref g_U1069 );
    sub_22380( ref l_U141, ref g_U1214 );
    sub_23397( "LEVEL_S_STAD_CP_01", ref g_U1354 );
    sub_23397( "LEVEL_S_STAD_CP_02", ref g_U1354 );
    sub_23397( "LEVEL_S_STAD_PRACT", ref g_U1354 );
    sub_23397( "PAS_INT", ref g_U1354 );
    sub_23397( "EXPL_CAM", ref g_U1354 );
    sub_683( "GA", "P_REQUEST_PRACTICEROOM_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_20972(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_21007( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_21007(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_21042( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_21173( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_21042(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_21173( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_21173( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_21173( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_21821( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_21173( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_21173( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_21173(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_21193( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_21193(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_21821(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_22380(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_22415( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_22415(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_22436( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_22568( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_22436(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_22568( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_22568( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_22568( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_21821( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_22568( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_22568( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22568(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_21193( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_23397(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_23418( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_23555( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_23418(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_23555( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_23555( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_23555( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_21821( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_23555( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_23555( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_23555(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_21193( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_24537()
{
    sub_683( "GA", "P_REQUEST_PRACTICEROOM_NONPERSISTENT_ASSETS start", 0 );
    sub_24619( -843316873, ref g_U1263 );
    sub_24619( 109790724, ref g_U1263 );
    sub_24619( -395445998, ref g_U1263 );
    sub_24619( -991527869, ref g_U1263 );
    sub_24619( 908686940, ref g_U1263 );
    sub_24619( -1343439341, ref g_U1263 );
    if ((l_U144) AND (g_U854 != 2))
    {
        sub_26650( "03_02_STAD_concat", 0 );
    }
    sub_26898();
    sub_683( "GA", "P_REQUEST_PRACTICEROOM_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_24619(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_24654( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_24806( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_24654(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_24806( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_24806( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_24806( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_24806( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_21821( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_21821( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_24806( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_24806( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_24806(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_21193( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_26650(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_26898()
{
    sub_23397( "PLGE_RIFLE_CROUCH", ref g_U1354 );
    sub_23397( "PLGE_PSTL_CROUCH", ref g_U1354 );
    sub_23397( "AMED_RIFLE_CORE", ref g_U1354 );
    sub_23397( "AMED_PSTL_CORE", ref g_U1354 );
    sub_23397( "AMED_RIFLE_CORE_RELOAD", ref g_U1354 );
    sub_23397( "AMED_PSTL_CORE_RELOAD", ref g_U1354 );
    sub_23397( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
    sub_23397( "PLGE_PSTL_HANDSIG", ref g_U1354 );
    sub_23397( "PLGE_PSTL_ACTIONS", ref g_U1354 );
    sub_23397( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
    sub_23397( "AMED_RIFLE_KNEE", ref g_U1354 );
    sub_23397( "AMED_PSTL_KNEE", ref g_U1354 );
    sub_23397( "AMED_PSTL_COVER", ref g_U1354 );
    sub_23397( "AMED_RIFLE_COVER", ref g_U1354 );
    sub_23397( "AMED_RIFLE_REACT", ref g_U1354 );
    sub_23397( "AMED_PSTL_REACT", ref g_U1354 );
    sub_23397( "AMED_RIFLE_COVER_EXIT", ref g_U1354 );
    sub_23397( "AMED_PSTL_COVER_EXIT", ref g_U1354 );
    sub_23397( "AMED_PSTL_FULLBODY", ref g_U1354 );
    return;
}

int sub_27611(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_27731(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_27852(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_27979(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_28330(unknown uParam0)
{
    sub_683( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_6674( uParam0, sub_1133() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_28771()
{
    sub_683( "SP", "P_PRACTICE_PLACE_PLACEMENTS", "###" );
    l_U338 = CREATE_PLACEMENT_ROTATE( -4072149, 67.88000000, 97.08000000, -2.78500000, 0, 0, -2.55000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U338, ref g_U2460 );
    l_U341 = CREATE_PLACEMENT_ROTATE( -4072149, 115.27000000, 3.06000000, 3.68500000, 0.00000000, 0.00000000, 187.34000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U341, ref g_U2524 );
    sub_4570( l_U335 );
    l_U335 = sub_29015( 2040909830, 61.30734000, 99.91102000, -2.53000000, 0.00000000, 0.00000000, -90.00000000, 0, 0, 0 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U335, ref g_U2460 );
    return;
}

void sub_29015(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_29125( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_29125(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_8543( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_29421()
{
    sub_29491( ref l_U645[0], 79.13000000, 70.85000000, -3.19000000, -87.75000000, g_U2532, -1643967787, 619121117, 5, 35, 0, 68019059, 0 );
    sub_29491( ref l_U645[1], 77.66000000, 71.46000000, -3.19000000, 47.16000000, g_U2532, 609980643, 824031458, 3, 36, 0, 434544317, 0 );
    sub_29491( ref l_U645[2], 77.10000000, 70.89000000, -3.19000000, 43.10000000, g_U2532, 1470963791, g_U2380, 5, 35, 0, 434544317, 0 );
    sub_29491( ref l_U645[3], 46.51248000, 70.24899000, -3.19990400, 43.10000000, g_U2556, 1106927700, g_U2380, 5, 15, 0, 68019059, 0 );
    sub_29491( ref l_U645[4], 46.99508000, 72.02740000, -3.19990400, 43.10000000, g_U2556, 1474623808, g_U2380, 5, 15, 0, 68019059, 0 );
    return;
}

void sub_29491(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
    sub_29544( uParam0, uParam1, uParam4, uParam18, 68019059, 2, g_U3928, uParam15, uParam16, uParam14, uParam19, uParam17, uParam13, uParam5 );
    return;
}

void sub_29544(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU68 = uParam4;
    iParam0->_fU72 = uParam5;
    iParam0->_fU76 = uParam6;
    iParam0->_fU80 = uParam7;
    iParam0->_fU84 = {uParam8};
    iParam0->_fU116 = uParam16;
    iParam0->_fU120 = uParam17;
    iParam0->_fU124 = uParam18;
    iParam0->_fU128 = uParam19;
    iParam0->_fU132 = uParam20;
    iParam0->_fU136 = uParam21;
    iParam0->_fU140 = {uParam22};
    return;
}

void sub_29963(int iParam0, unknown uParam1)
{
    vector[2] vVar4;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int iVar13;

    sub_8543( "[SP]### P_SETUP_PRACTICE_ELEVATOR ###" );
    array(ref vVar4, 2);
    vVar4[0] = {91.18000000, 62.39000000, -3.39000000};
    vVar4[1] = {91.18000000, 62.39000000, 2.65000000};
    uVar11 = GET_HASH_KEY( "ElevatorRoom" );
    uVar12 = GET_INTERIOR_FROM_NAME( "int_elevator", 0 );
    SET_INTERIOR_ACTIVE( uVar12, 1, 0 );
    LOAD_SCENE_FOR_ROOM_BY_KEY( uVar12, uVar11 );
    sub_30182( ref g_U3706, ref vVar4, 0.00000000, 0.00000000, -90.00000000, g_U2391, g_U2392, g_U2393, 1.00000000 );
    iVar13 = 0;
    if (iParam0 == 1)
    {
        iVar13 = 1;
    }
    sub_30670( ref g_U3706, iVar13, uParam1 );
    if (iParam0 == 1)
    {
        SET_OBJECT_COORDS( g_U3706._fU232, 91.18000000, 62.39000000, 2.65000000 );
    }
    else
    {
        SET_OBJECT_COORDS( g_U3706._fU232, 91.18000000, 62.39000000, -3.39000000 );
    }
    sub_31282( ref g_U3706, ref g_U2540 );
    sub_31534( ref g_U3706, 1, 0 );
    sub_31534( ref g_U3706, 1, 1 );
    return;
}

void sub_30182(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    sub_8543( "[SP]### P_CreateElevatorStructService ###" );
    sub_30255( iParam0, uParam1, uParam2, uParam5, uParam6, uParam8 );
    iParam0->_fU288 = 1;
    iParam0->_fU284 = 1;
    iParam0->_fU224 = uParam7;
    iParam0->_fU228 = uParam7;
    return;
}

void sub_30255(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_8543( "[SP]### P_CreateElevatorStructService ###" );
    sub_30329( iParam0, uParam1, uParam2, uParam5, uParam6, uParam6, uParam7 );
    iParam0->_fU288 = 1;
    iParam0->_fU292 = 2.74000000;
    iParam0->_fU296 = 0.05000000;
    return;
}

void sub_30329(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;

    sub_8543( "[SP]### P_CreateElevatorStruct ###" );
    I = 0;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        iParam0->_fU24[I] = {(uParam1^)[I]};
    }
    iParam0->_fU316 = 0;
    iParam0->_fU12 = {uParam2};
    iParam0->_fU212 = uParam5;
    iParam0->_fU216 = uParam6;
    iParam0->_fU220 = uParam7;
    iParam0->_fU284 = 0;
    iParam0->_fU288 = 0;
    iParam0->_fU292 = 0.88000000;
    iParam0->_fU296 = 0.02500000;
    iParam0->_fU300 = 0.00000000;
    iParam0->_fU304 = 0.00000000;
    iParam0->_fU208 = uParam8;
    return;
}

void sub_30670(int iParam0, unknown uParam1, unknown uParam2)
{
    sub_8543( "[SP]### P_CreateElevator ###" );
    iParam0->_fU0 = {iParam0->_fU24[uParam1]};
    sub_4570( iParam0->_fU232 );
    iParam0->_fU232 = sub_29015( iParam0->_fU212, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU232, 1 );
    }
    sub_4570( iParam0->_fU236 );
    iParam0->_fU236 = sub_29015( iParam0->_fU216, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 1 );
    }
    if (iParam0->_fU288 == 0)
    {
        sub_4570( iParam0->_fU240 );
        iParam0->_fU240 = sub_29015( iParam0->_fU220, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU240, 1 );
        }
    }
    if (iParam0->_fU284 == 1)
    {
        sub_4570( iParam0->_fU244 );
        iParam0->_fU244 = sub_29015( iParam0->_fU224, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 1 );
        }
        if (iParam0->_fU288 == 0)
        {
            sub_4570( iParam0->_fU248 );
            iParam0->_fU248 = sub_29015( iParam0->_fU228, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
            if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
            {
                FREEZE_OBJECT_POSITION( iParam0->_fU248, 1 );
            }
        }
    }
    return;
}

void sub_31282(int iParam0, unknown uParam1)
{
    sub_8543( "[SP]### P_AddElevatorToInterior ###" );
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU232, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU236, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU240, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU244, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU248, uParam1 );
    }
    return;
}

void sub_31534(int iParam0, int iParam1, int iParam2)
{
    sub_8543( "[SP]### P_CLOSE_ELEVATOR_DOORS ###" );
    if (iParam2 == 0)
    {
        if (iParam1 == 1)
        {
            iParam0->_fU308 = 0;
        }
        else if (iParam0->_fU288 == 1)
        {
            ;
        }
        iParam0->_fU308 = 3;;
    }
    else if (iParam1 == 1)
    {
        iParam0->_fU312 = 0;
    }
    else if (iParam0->_fU288 == 1)
    {
        ;
    }
    iParam0->_fU312 = 3;;;
    return;
}

void sub_31736(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_31765( uParam0, uParam1, uParam2, g_U649, uParam5, uParam6, uParam7 );
    return;
}

void sub_31765(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    sub_31791( uParam0, uParam1, uParam2, uParam5, uParam9, uParam10 );
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), uParam8 );
    }
    return;
}

void sub_31791(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_4570( (uParam0^) );
    (uParam0^) = sub_31822( uParam1, uParam2, uParam5, 0, uParam9, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), uParam8 );
    return;
}

void sub_31822(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_29125( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_32168()
{
    sub_683( "SP", "P_SETUP_EDISON", "###" );
    if (((IS_PED_DEAD( l_U1714 )) == 1) || ((DOES_PED_EXIST( l_U1714 )) == 0))
    {
        l_U1714 = sub_32249( ref l_U1715 );
    }
    sub_8872( l_U1714, 68019059, 25000, 0, 0 );
    if (((IS_PED_DEAD( l_U1714 )) == 0) AND ((DOES_PED_EXIST( l_U1714 )) == 1))
    {
        sub_32965( l_U1714 );
        SET_PERSISTENT_PED_VARIATION( l_U1714, "Pass_Stad_Hat" );
        SET_ROOM_FOR_PED_BY_NAME( l_U1714, ref g_U2460 );
        SET_PED_SWEAT( l_U1714, 0.00000000, 0.00000000 );
        SET_PED_HEALTH( l_U1714, GET_PED_MAX_HEALTH( l_U1714 ), 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1714, 1 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1714, 32, 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( l_U1714, 0 );
        SET_PED_AS_ONE_SHOT_KILL( l_U1714, 1 );
        SET_PED_GORE_AS_ALLY( l_U1714 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U1714, 1 );
        SET_PED_CAN_INTERACT_WITH_DOORS( l_U1714, 0 );
        SET_PED_CAN_PUSH_PLAYER( l_U1714, 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( l_U1714, 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_CAN_AI_KICK_THROUGH_CORPSES( l_U1714, 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CONSUMING_AMMO( l_U1714, 0 );
        SET_PED_INVINCIBLE( l_U1714, 0 );
        SET_PED_CAN_INITIATE_BULLET_CAM( l_U1714, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U1714, 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( l_U1714, 0 );
        SET_BULLET_CAM_PREF( l_U1714, "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        SET_PED_NAME_DEBUG( l_U1714, "PRACTICE_EDISON!" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U1714, 1 );
        SET_PED_ACCURACY( l_U1714, 31186664 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ) ))
        {
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ), 0 );
        }
    }
    return;
}

void sub_32249(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_29125( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_32728( iParam0->_fU40 );
    sub_32808( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_32728(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_32808(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_32965(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0 )))
    {
        if (iParam0 == sub_1133())
        {
            sub_683( "[AT]", "Clearing headtracking on Max.", 0 );
        }
        else
        {
            sub_683( "[AT]", "Clearing headtracking on non-player ped.", 0 );
        }
        TASK_CLEAR_LOOK_AT( iParam0 );
    }
    else
    {
        SCRIPT_ASSERT( "Passed invalid or dead ped to P_CLEAR_PED_HEADTRACKING!", 0 );
    }
    return;
}

void sub_33720()
{
    l_U1429._fU0 = 0;
    StrCopy( ref l_U1429._fU8, "TV_02_16x9_stad", 32 );
    l_U1429._fU40 = sub_31822( -1856433758, 57.55002000, 65.71690000, -1.65285000, 0.00000000, 0.00000000, -90.00000000, 0, 0, 0 );
    l_U1429._fU912 = 1;
    l_U1429._fU44 = {g_U2460};
    l_U1429._fU76 = -991527869;
    l_U1429._fU916 = 1400;
    l_U1429._fU920 = 79500;
    l_U1429._fU920 = 77500;
    l_U1429._fU80 = {58.26000000, 66.24000000, -3.20000000};
    l_U1429._fU92 = 90;
    l_U1429._fU96 = "03_STADIUM_TV_POWER_ON_CAM";
    l_U1429._fU100 = "LEVEL_S_STAD_CP_02";
    l_U1429._fU104 = "03_STADIUM_TV_POWER_OFF_CAM";
    l_U1429._fU108 = {60.64000000, 62.83000000, -1.20000000};
    l_U1429._fU120 = 42.20000000;
    l_U1429._fU128 = {59.81000000, 65.75000000, -1.77000000};
    l_U1429._fU140 = {0.97000000, 0.00000000, 90.33000000};
    l_U1429._fU924 = 2.10000000;
    l_U1429._fU928 = 2.30000000;
    l_U1429._fU948 = -991527869;
    l_U1429._fU952 = {58.26000000, 66.24000000, -3.20000000};
    l_U1429._fU964 = 90;
    l_U1429._fU1004 = 1300;
    l_U1429._fU1008 = -991527869;
    l_U1429._fU1012 = {58.26000000, 66.24000000, -3.20000000};
    l_U1429._fU1024 = 90;
    l_U1429._fU1064 = 2100;
    l_U1429._fU1068 = 1900;
    l_U1429._fU1076 = 13.23316000;
    FREEZE_OBJECT_POSITION( l_U1429._fU40, 1 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1429._fU40, ref l_U1429._fU44 );
    sub_34364( ref l_U1429 );
    return;
}

void sub_34364(int iParam0)
{
    float fVar3;
    float fVar4;

    fVar3 = 1.10000000;
    fVar4 = 1.50000000;
    if (DOES_OBJECT_EXIST( iParam0->_fU40 ))
    {
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( iParam0->_fU40, 1 );
    }
    sub_20189( iParam0 + 152, 2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), 10.00000000, 10.00000000, 0, 0 );
    sub_19968( iParam0 + 152, 30, "POI_STOPWATCHTV" );
    sub_20326( iParam0 + 152, 0 );
    sub_20189( iParam0 + 496, 2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), fVar3, fVar4, 1, 0 );
    sub_19968( iParam0 + 496, 30, "POI_WATCHTV" );
    sub_20326( iParam0 + 496, 0 );
    sub_2763( iParam0 + 840 );
    sub_2763( iParam0 + 876 );
    sub_2763( iParam0 + 968 );
    sub_2763( iParam0 + 1028 );
    iParam0->_fU936 = 0;
    iParam0->_fU940 = 0;
    iParam0->_fU1080 = 0;
    return;
}

int sub_34745(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5)
{
    int I;

    sub_8543( uParam1 );
    if (NOT bParam4)
    {
        sub_34775( uParam2, uParam3, 1 );
        for ( I = 0; I < (uParam0^); I++ )
        {
            sub_34972( ref (uParam0^)[I] );
            sub_36367( (uParam0^)[I]._fU0, uParam2 );
        }
        sub_36645( uParam0, uParam1 );
    }
    else if ((uParam0^)[0]._fU172 == 0)
    {
        sub_34775( uParam2, uParam3, 1 );
    }
    if ((uParam0^)[0]._fU172 < (uParam0^))
    {
        sub_34972( ref (uParam0^)[(uParam0^)[0]._fU172] );
        sub_36367( (uParam0^)[(uParam0^)[0]._fU172]._fU0, uParam2 );
        (uParam0^)[0]._fU172++;
    }
    else
    {
        sub_36645( uParam0, uParam1 );
        return 1;
    }
    if (bParam5)
    {
        sub_36911( uParam0, 1, 0, -1 );
    }
    return 0;
}

void sub_34775(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_34972(int iParam0)
{
    unknown uVar3;

    sub_5925( "MAL_EnemyStructCreate starting" );
    sub_35087( iParam0 + 0, iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU72, iParam0->_fU80, iParam0->_fU84, iParam0->_fU116, iParam0->_fU120, iParam0->_fU124, 1 );
    if (NOT (ARE_STRINGS_EQUAL( iParam0 + 140, ref g_U652 )))
    {
        sub_8543( iParam0 + 140 );
        sub_35841( iParam0 + 0, iParam0 + 140 );
    }
    if (iParam0->_fU128)
    {
        sub_5925( "MAL_EnemyStructCreate giving ped backup weapon" );
        sub_35970( iParam0->_fU0, iParam0->_fU76, 25000, 1, 0 );
    }
    if (iParam0->_fU132)
    {
        uVar3 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
        sub_36167( ref uVar3, 14, 1 );
    }
    if (iParam0->_fU136 != 0)
    {
        sub_36293( iParam0 + 0, iParam0->_fU136 );
    }
    return iParam0->_fU0;
}

void sub_35087(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
    sub_17797( uParam1, uParam2, uParam5, uParam18, 7, 3, 2, 0, 0 );
    (uParam0^) = sub_35126( uParam0, uParam1, 1, 1, uParam19 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
    }
    sub_35377( (uParam0^), uParam6, 25000, 0, 0 );
    sub_35562( uParam0, ref uParam8, uParam16, uParam17, 1 );
    sub_35739( uParam0, uParam7 );
    return (uParam0^);
}

void sub_35126(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
    sub_4491( (uParam0^) );
    (uParam0^) = sub_32249( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
            sub_5925( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
    sub_35254( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

void sub_35254(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

void sub_35377(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                sub_5925( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_35562(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
    sub_5925( "MAL_SetTemplateAndRanges" );
    sub_8543( uParam1 );
    sub_35613( fParam2 );
    sub_35613( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
        sub_35254( uParam0, 1, 0 );
    }
    return;
}

void sub_35613(unknown uParam0)
{
    return;
}

void sub_35739(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

void sub_35841(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), uParam1 );
    }
    return;
}

void sub_35970(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                sub_5925( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_36167(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

void sub_36293(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PERSISTENT_PED_VARIATION_ENUM( (uParam0^), uParam1 );
    }
    return;
}

void sub_36367(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_8543( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_34775( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_34775( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_36645(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I]._fU0, ref cVar5 );
        }
    }
    return;
}

void sub_36911(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_36961( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_36961(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FREEZE_PROCESSING( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_37044()
{
    int I;

    sub_37061( ref l_U645, 1, 0, -1 );
    sub_37187( ref l_U645, 0, 0, -1 );
    sub_37373( ref l_U645[1] );
    for ( I = 0; I < l_U645; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U645[I]._fU0 )))
        {
            SET_PED_CAN_INTERACT_WITH_DOORS( l_U645[I]._fU0, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U645[I]._fU0, 1 );
        }
    }
    sub_37528( ref l_U645[3]._fU0 );
    sub_37528( ref l_U645[4]._fU0 );
    return;
}

void sub_37061(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_37111( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_37111(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        FREEZE_PED_POSITION( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_37187(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_37237( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_37237(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_VISIBLE( iParam0->_fU0, uParam1 );
    }
    else
    {
        sub_5925( "MAL_ES_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

void sub_37373(int iParam0)
{
    sub_37387( iParam0 + 0 );
    return;
}

void sub_37387(unknown uParam0)
{
    sub_35254( uParam0, 1, 0 );
    return;
}

void sub_37528(unknown uParam0)
{
    sub_5925( "MAL_RemoveAllGunsFromPed started" );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        sub_5925( "MAL_RemoveAllGunsFromPed WEAPONHAND_LEFT" );
        sub_37654( GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
        if ((GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
        }
        sub_37654( GET_WEAPON_FROM_HAND( (uParam0^), 1, 0 ) );
        sub_5925( "MAL_RemoveAllGunsFromPed WEAPONHAND_RIGHT" );
        sub_37654( GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
        if ((GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
        }
        sub_37654( GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ) );
        sub_5925( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_PISTOL_LEFT" );
        sub_37654( GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
        }
        sub_37654( GET_WEAPON_FROM_HOLSTER( (uParam0^), 1 ) );
        sub_5925( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_PISTOL_RIGHT" );
        sub_37654( GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
        }
        sub_37654( GET_WEAPON_FROM_HOLSTER( (uParam0^), 0 ) );
        sub_5925( "MAL_RemoveAllGunsFromPed WEAPONHOLSTER_RIFLE" );
        sub_37654( GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
        if ((GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 )) != 0)
        {
            REMOVE_PED_WEAPON( (uParam0^), GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
        }
        sub_37654( GET_WEAPON_FROM_HOLSTER( (uParam0^), 2 ) );
    }
    sub_5925( "MAL_RemoveAllGunsFromPed ended" );
    return;
}

void sub_37654(unknown uParam0)
{
    return;
}

int sub_38776()
{
    sub_32965( l_U1714 );
    sub_32965( sub_1133() );
    sub_38806();
    return 1;
}

void sub_38806()
{
    sub_8227( l_U1714, 68019059, 1, 25000, 0 );
    l_U319 = sub_29015( 1267966326, l_U320, l_U323, 0, 0, 0 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U319, ref g_U2556 );
    FREEZE_OBJECT_POSITION( l_U319, 1 );
    return;
}

void sub_38913()
{
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( -467517074, 37.34900000, 71.69900000, -2.10000000 ), "P_DR_DorMet_Cb_L_H01", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( -545157512, 37.34900000, 69.29900000, -2.10000000 ), "P_DR_DorMet_Cb_R_H01", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( -393921389, 49.96267000, 71.69955000, -2.10299000 ), "P_DR_DorMet_Aa_L_H", 0 );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( 290920020, 73.08439000, 93.11200000, -2.89997000 ), "P_DR_Glass_Ab_H", 0 );
    CUTSCENE_OBJECT_OVERRIDE_VISIBILITY( "P_DR_Glass_Ab_H" );
    REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( g_U3706._fU244, "P_ST_FRTELEDR2", 0 );
    if (NOT (IS_PED_DEAD( l_U645[0]._fU0 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U645[0]._fU0, "G_CS_K_Sold_PR", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U645[0]._fU0, 0, 0 ), "W_PI_PT92_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U645[0]._fU0, l_U645[0]._fU56, l_U645[0]._fU68 );
    }
    if (NOT (IS_PED_DEAD( l_U645[1]._fU0 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U645[1]._fU0, "G_CS_K_Sold_PR^1", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U645[1]._fU0, 0, 0 ), "W_SG_BenM3_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U645[1]._fU0, l_U645[1]._fU56, l_U645[1]._fU68 );
    }
    if (NOT (IS_PED_DEAD( l_U645[2]._fU0 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U645[2]._fU0, "G_CS_K_Sold_PR^2", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U645[2]._fU0, 0, 0 ), "W_SG_BenM3_Aa_H^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U645[2]._fU0, l_U645[2]._fU56, l_U645[2]._fU68 );
    }
    if (NOT (IS_PED_DEAD( l_U645[3]._fU0 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U645[3]._fU0, "G_CS_K_Sold_PR^3", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U645[4]._fU0 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U645[4]._fU0, "G_CS_K_Sold_PR^4", 0 );
    }
    if (NOT (IS_PED_DEAD( sub_1133() )))
    {
        CUTSCENE_REGISTER_ISEQ( -843316873 );
        sub_39873( sub_1133(), -843316873, "03_02_BLEND_MAX" );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_1133(), l_U1046, l_U1049 );
    }
    if (NOT (IS_PED_DEAD( l_U1714 )))
    {
        CUTSCENE_REGISTER_ISEQ( 109790724 );
        ISEQ_REGISTER_ENTITY( 109790724, "s_stad_practice_pas_fi", l_U1714, 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1714, "Pass_heli_pilo", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U1714, l_U1050, l_U1053 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U1714, 0, 0 ), "W_PI_Clt1911_Aa_H^1", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HOLSTER( l_U1714, 1 ), "W_PI_Clt1911_Aa_H", 1 );
    }
    FREEZE_TIME_OF_DAY( 22, 0 );
    SET_CAM_VIEW_MODE( 1 );
    sub_1970( ref l_U326, 5000, 1, 0 );
    sub_2106( ref l_U326 );
    return;
}

void sub_39873(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

void sub_40204()
{
    if (l_U1091._fU52)
    {
        AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_11", 0 );
        DISABLE_RESTART_CHECKPOINT( 0 );
    }
    if (NOT l_U1087)
    {
        if (GET_CUTSCENE_TIME_MS() > 68740)
        {
            sub_683( "SA", "Changing ped variation", "###" );
            APPLY_PLAYER_PRELOAD_VARIATION( sub_1133(), 1 );
            l_U1087 = 1;
        }
    }
    if (NOT l_U1088)
    {
        if (GET_CUTSCENE_TIME_MS() > 19343)
        {
            l_U1088 = 1;
            AUDIO_MUSIC_SUSPEND( 10000 );
        }
    }
    if (NOT l_U1089)
    {
        if (GET_CUTSCENE_TIME_MS() > 77951)
        {
            l_U1089 = 1;
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1", "", 0, 6000, -1, -1082130432, 0 );
        }
    }
    if (NOT l_U1090)
    {
        if (GET_CUTSCENE_TIME_MS() > 106655)
        {
            l_U1090 = 1;
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_3", "", 0, 1000, -1, -1082130432, 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
        }
    }
    if (sub_2226( ref l_U326 ))
    {
        sub_683( "SA", "Turning storage room lights on.", "###" );
        sub_4570( l_U319 );
        l_U318 = sub_29015( 850656818, l_U320, l_U323, 0, 0, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U318, ref g_U2556 );
        FREEZE_OBJECT_POSITION( l_U318, 1 );
    }
    return;
}

int sub_40718()
{
    sub_31534( ref g_U3706, 1, 0 );
    sub_40743( ref g_U3706 );
    l_U1045 = 1;
    return 1;
}

void sub_40743(int iParam0)
{
    int I;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    float fVar8;
    float fVar9;
    float fVar10;
    vector vVar11;
    vector vVar14;

    if (iParam0->_fU316 == 2)
    {
        iParam0->_fU204 = -1;
        I = 0;
        for ( I = 0; I <= 9; I++ )
        {
            if (iParam0->_fU160[I] >= 0)
            {
                iParam0->_fU204 = iParam0->_fU160[I];
                iParam0->_fU160[I] = -1;
                uVar4 = {iParam0->_fU24[iParam0->_fU204] - iParam0->_fU0};
                uVar7 = ABSF( (uVar4._fU0 + uVar4._fU4) + uVar4._fU8 );
                fVar8 = (TIMESTEP() * iParam0->_fU208) * (uVar4._fU0 / uVar7);
                fVar9 = (TIMESTEP() * iParam0->_fU208) * (uVar4._fU4 / uVar7);
                fVar10 = (TIMESTEP() * iParam0->_fU208) * (uVar4._fU8 / uVar7);
                iParam0->_fU148 = {fVar8, fVar9, fVar10};
                iParam0->_fU316 = 1;
                I = 9;
            }
        }
        if (iParam0->_fU204 == -1)
        {
            sub_8543( "[ML] --- ELEVATOR DONE MOVING ---" );
            iParam0->_fU316 = 3;
        }
    }
    if (iParam0->_fU316 == 1)
    {
        iParam0->_fU0 = {iParam0->_fU0 + iParam0->_fU148};
        if ((((ref iParam0->_fU0->_fU8) <= iParam0->_fU24[iParam0->_fU204]._fU8) AND ((ref iParam0->_fU148->_fU8) < 0)) || ((((ref iParam0->_fU0->_fU8) >= iParam0->_fU24[iParam0->_fU204]._fU8) AND ((ref iParam0->_fU148->_fU8) > 0)) || ((((ref iParam0->_fU0->_fU4) <= iParam0->_fU24[iParam0->_fU204]._fU4) AND ((ref iParam0->_fU148->_fU4) < 0)) || ((((ref iParam0->_fU0->_fU4) >= iParam0->_fU24[iParam0->_fU204]._fU4) AND ((ref iParam0->_fU148->_fU4) > 0)) || ((((ref iParam0->_fU0->_fU0) <= iParam0->_fU24[iParam0->_fU204]._fU0) AND ((ref iParam0->_fU148->_fU0) < 0)) || (((ref iParam0->_fU0->_fU0) >= iParam0->_fU24[iParam0->_fU204]._fU0) AND ((ref iParam0->_fU148->_fU0) > 0)))))))
        {
            iParam0->_fU316 = 2;
        }
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        SET_OBJECT_COORDS( iParam0->_fU232, iParam0->_fU0 );
    }
    if (iParam0->_fU308 == 2)
    {
        iParam0->_fU300 = iParam0->_fU292;
        iParam0->_fU308 = 2;
    }
    else if (iParam0->_fU308 == 0)
    {
        iParam0->_fU300 = 0.00000000;
        iParam0->_fU308 = 0;
    }
    if (iParam0->_fU308 == 1)
    {
        if (iParam0->_fU300 < iParam0->_fU292)
        {
            iParam0->_fU300 += iParam0->_fU296;
        }
        if (iParam0->_fU300 >= iParam0->_fU292)
        {
            iParam0->_fU300 = iParam0->_fU292;
            iParam0->_fU308 = 2;
        }
    }
    else if (iParam0->_fU308 == 3)
    {
        if (iParam0->_fU300 > 0.00000000)
        {
            iParam0->_fU300 -= iParam0->_fU296;
        }
        if (iParam0->_fU300 <= 0.00000000)
        {
            iParam0->_fU300 = 0.00000000;
            iParam0->_fU308 = 0;
        }
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        vVar11 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU232 )};
    }
    if (iParam0->_fU288 == 0)
    {
        if ((ref iParam0->_fU12->_fU8) == 0.00000000)
        {
            vVar14 = {-iParam0->_fU300, 0.00000000, 0.00000000};
        }
        else if (((ref iParam0->_fU12->_fU8) == -270.00000000) || ((ref iParam0->_fU12->_fU8) == 90.00000000))
        {
            vVar14 = {0.00000000, -iParam0->_fU300, 0.00000000};
        }
        else if (((ref iParam0->_fU12->_fU8) == -180.00000000) || ((ref iParam0->_fU12->_fU8) == 180.00000000))
        {
            vVar14 = {iParam0->_fU300, 0.00000000, 0.00000000};
        }
        else if (((ref iParam0->_fU12->_fU8) == -90.00000000) || ((ref iParam0->_fU12->_fU8) == 270.00000000))
        {
            vVar14 = {0.00000000, iParam0->_fU300, 0.00000000};
        };;;;
    }
    else
    {
        vVar14 = {0.00000000, 0.00000000, iParam0->_fU300};
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 0 );
        SET_OBJECT_COORDS( iParam0->_fU236, vVar11 + vVar14 );
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU240, 0 );
        SET_OBJECT_COORDS( iParam0->_fU240, vVar11 - vVar14 );
        FREEZE_OBJECT_POSITION( iParam0->_fU240, 1 );
    }
    if (iParam0->_fU284 == 1)
    {
        if (iParam0->_fU312 == 2)
        {
            iParam0->_fU304 = iParam0->_fU292;
            iParam0->_fU312 = 2;
        }
        else if (iParam0->_fU312 == 0)
        {
            iParam0->_fU304 = 0.00000000;
            iParam0->_fU312 = 0;
        }
        if (iParam0->_fU312 == 1)
        {
            if (iParam0->_fU304 < iParam0->_fU292)
            {
                iParam0->_fU304 += iParam0->_fU296;
            }
            if (iParam0->_fU304 >= iParam0->_fU292)
            {
                iParam0->_fU304 = iParam0->_fU292;
                iParam0->_fU312 = 2;
            }
        }
        else if (iParam0->_fU312 == 3)
        {
            if (iParam0->_fU304 > 0.00000000)
            {
                iParam0->_fU304 -= iParam0->_fU296;
            }
            if (iParam0->_fU304 <= 0.00000000)
            {
                iParam0->_fU304 = 0.00000000;
                iParam0->_fU312 = 0;
            }
        }
        if (iParam0->_fU288 == 0)
        {
            if ((ref iParam0->_fU12->_fU8) == 0.00000000)
            {
                vVar14 = {-iParam0->_fU304, 0.00000000, 0.00000000};
            }
            else if (((ref iParam0->_fU12->_fU8) == -270.00000000) || ((ref iParam0->_fU12->_fU8) == 90.00000000))
            {
                vVar14 = {0.00000000, -iParam0->_fU304, 0.00000000};
            }
            else if (((ref iParam0->_fU12->_fU8) == -180.00000000) || ((ref iParam0->_fU12->_fU8) == 180.00000000))
            {
                vVar14 = {iParam0->_fU304, 0.00000000, 0.00000000};
            }
            else if (((ref iParam0->_fU12->_fU8) == -90.00000000) || ((ref iParam0->_fU12->_fU8) == 270.00000000))
            {
                vVar14 = {0.00000000, iParam0->_fU304, 0.00000000};
            };;;;
        }
        else
        {
            vVar14 = {0.00000000, 0.00000000, -iParam0->_fU304};
        }
        if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 0 );
            SET_OBJECT_COORDS( iParam0->_fU244, vVar11 - vVar14 );
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 1 );
        }
        if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU248, 0 );
            SET_OBJECT_COORDS( iParam0->_fU248, vVar11 + vVar14 );
            FREEZE_OBJECT_POSITION( iParam0->_fU248, 1 );
        }
    }
    return;
}

void sub_42811()
{
    sub_4491( l_U645[3]._fU0 );
    sub_4491( l_U645[4]._fU0 );
    if (g_U855 != 2)
    {
        if (((IS_PED_DEAD( sub_1133() )) == 0) AND ((IS_PLAYER_DEAD( sub_1155() )) == 0))
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1155(), 1 );
            SET_PLAYER_SPRINT( sub_1155(), 1 );
            SET_PED_FORCED_TO_WALK( sub_1133(), 0 );
            ENABLE_PED_JUMPING( sub_1133(), 1 );
            SET_PED_HEALTH( sub_1133(), GET_PED_MAX_HEALTH( sub_1133() ), 0 );
            SET_PAYNEKILLER_AMT( 3 );
            SET_ADRENALINE_NOT_ALLOW( 0 );
            SET_PED_EMOTION_STATE( sub_1133(), 1 );
            SET_PED_EMOTION_STATE( sub_1133(), 3 );
            REMOVE_ALL_PED_WEAPONS( sub_1133() );
            sub_8872( sub_1133(), 68019059, 50, 0, 0 );
        }
    }
    SET_OBJECT_VISIBLE( l_U1131, 1 );
    sub_43066();
    sub_1970( ref l_U636, 1000, 1, 0 );
    sub_2106( ref l_U636 );
    sub_43451();
    sub_43597( ref g_U3038, 0, 1, 1065353216 );
    SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( g_U3038._fU0, g_U3038._fU4, 1, -1.00000000 );
    if (NOT (ISEQ_QUERY_STATE( -843316873, 3 )))
    {
        sub_39873( sub_1133(), -843316873, "03_02_BLEND_MAX" );
        sub_14600( sub_1133(), l_U1046, l_U1049 );
        ISEQ_START( -843316873 );
    }
    if ((NOT (IS_PED_DEAD( l_U1714 ))) AND (NOT (ISEQ_QUERY_STATE( 109790724, 3 ))))
    {
        sub_39873( l_U1714, 109790724, "s_stad_practice_pas_fi" );
        sub_14600( l_U1714, l_U1050, l_U1053 );
        ISEQ_START( 109790724 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1714, 0 );
    }
    SET_CAM_VIEW_MODE( 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_02", "03_02_STADIUM_PT2_CAM", 0, g_U649, 0.00000000, 0, 0 );
    sub_44054( ref l_U480 );
    sub_44136( 0, sub_1133(), "MAX", ref l_U480, 2, 0 );
    sub_44136( 1, l_U1714, "PASSOS", ref l_U480, 2, 0 );
    sub_44379( "SSTD_PRPMP", ref l_U480, 8, 1 );
    sub_29491( ref l_U873[0], 48.24604000, 70.60831000, -3.19990400, 270, g_U2556, 1807965786, g_U2380, 3, 36, 0, 434544317, 0 );
    sub_29491( ref l_U873[1], 46.58592000, 70.70052000, -3.19990400, 270, g_U2556, 1117855034, g_U2380, 5, 32, 0, 68019059, 0 );
    sub_29491( ref l_U873[2], 44.45412000, 70.84146000, -3.19990400, 270, g_U2556, -1921057858, g_U2380, 5, 30, 0, 68019059, 0 );
    if (NOT l_U92._fU0)
    {
        g_U855 = 2;
        sub_45407( ref l_U92, g_U855, sub_1133(), g_U2138[2], g_U2256[2], 0.00000000, 0.00000000, 1 );
    }
    return;
}

void sub_43066()
{
    sub_43091( ref g_U2996, -90.00000000, 0.00000000 );
    sub_43091( ref g_U3003, 0.00000000, 90.00000000 );
    sub_43282( ref g_U2996, 1 );
    sub_43282( ref g_U3003, 1 );
    return;
}

void sub_43091(int iParam0, float fParam1, float fParam2)
{
    if ((sub_43103( iParam0 )) == 0)
    {
        sub_43169( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

int sub_43103(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_43169(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_43282(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_43103( iParam0 )) == 0)
    {
        sub_43169( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_43451()
{
    sub_683( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_683( "CCB", "Starting the Stadium_Practice context...", 0 );
    START_CONTEXT( "Stadium_Practice" );
    return;
}

void sub_43597(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_43103( iParam0 )) == 0)
    {
        sub_43169( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_44054(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_44136(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_44379(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_44403( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_44403(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_44458( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_44458(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_44493( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_44987( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_44493(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_44987(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_45407(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_683( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_683( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_9526( iParam1 );
        sub_45666( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_46117( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_46117( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_46349( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_46117( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_46349( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_46349( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_46117( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_46349( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_46349( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_46349( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_46117( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_46349( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_46349( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_46349( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_46349( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_47907( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_683( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_45666(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_6890( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_683( "TEH", "Ending context", 0 );
        sub_683( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_46117(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_46349(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_47907(int iParam0)
{
    sub_8543( "CHECKPOINT DATA" );
    sub_47946( iParam0->_fU4 );
    sub_35613( iParam0->_fU16 );
    sub_35613( iParam0->_fU20 );
    sub_35613( iParam0->_fU24 );
    sub_37654( iParam0->_fU28 );
    sub_37654( iParam0->_fU56 );
    sub_37654( iParam0->_fU60 );
    sub_37654( iParam0->_fU64 );
    sub_37654( iParam0->_fU68 );
    sub_37654( iParam0->_fU72 );
    sub_37654( iParam0->_fU76 );
    sub_37654( iParam0->_fU80 );
    sub_37654( iParam0->_fU84 );
    sub_37654( iParam0->_fU88 );
    sub_37654( iParam0->_fU92 );
    sub_35613( iParam0->_fU32 );
    sub_37654( iParam0->_fU36 );
    sub_37654( iParam0->_fU40 );
    sub_37654( iParam0->_fU44 );
    sub_35613( iParam0->_fU136 );
    sub_48191( iParam0->_fU140 );
    sub_37654( iParam0->_fU52 );
    sub_8543( "---nRightHolsterAttachmentEnabled: " );
    sub_37654( iParam0->_fU96 );
    sub_8543( "---nRightHolsterAttachmentToggled: " );
    sub_37654( iParam0->_fU100 );
    sub_8543( "---nLeftHolsterAttachmentEnabled: " );
    sub_37654( iParam0->_fU104 );
    sub_8543( "---nLeftHolsterAttachmentToggled: " );
    sub_37654( iParam0->_fU108 );
    sub_8543( "---nRifleHolsterAttachmentEnabled: " );
    sub_37654( iParam0->_fU112 );
    sub_8543( "---nRifleHolsterAttachmentToggled: " );
    sub_37654( iParam0->_fU116 );
    sub_8543( "---nRightHandAttachmentEnabled: " );
    sub_37654( iParam0->_fU120 );
    sub_8543( "---nRightHandAttachmentToggled: " );
    sub_37654( iParam0->_fU124 );
    sub_8543( "---nLeftHandAttachmentEnabled: " );
    sub_37654( iParam0->_fU128 );
    sub_8543( "---nLeftHandAttachmentToggled: " );
    sub_37654( iParam0->_fU132 );
    sub_37654( l_U1 );
    sub_37654( 144 );
    return;
}

void sub_47946(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_48191(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

int sub_49003()
{
    unknown uVar2;

    if (l_U1091._fU52)
    {
        DO_SCREEN_FADE_IN( 0 );
        sub_49042( ref l_U607, 1500 );
    }
    if (NOT l_U1012)
    {
        l_U1012 = sub_34745( ref l_U873, "PracReinforce", ref l_U1006, 1.00000000, 1, 0 );
    }
    uVar2 = sub_1133();
    if (sub_49142( ref uVar2, 58, 1 ))
    {
        sub_5925( "SNAPPING PLAYER INTO COVER" );
        sub_49358( "Player's pre-cover pos", "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1133() ) );
        sub_49417( "Player's pre-cover heading", GET_PED_HEADING( sub_1133() ) );
        if (((IS_PED_DEAD( sub_1133() )) == 0) AND ((IS_PLAYER_DEAD( sub_1155() )) == 0))
        {
            SNAP_PLAYER_TO_COVERPOINT( sub_1155(), "GenCover", "1B8362E3_F9EF6764_Corner1", 1 );
        }
    }
    if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_STAD_CP_02", "03_02_STADIUM_PT2_CAM" )) - 10))
    {
        sub_49358( "Player's post-cover pos", "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1133() ) );
        sub_49417( "Player's post-cover heading", GET_PED_HEADING( sub_1133() ) );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( -86.76362000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -5.46892500, 1065353216, 0 );
        CAMERA_FREEZE_FRAME( 1, 750, 0, 0 );
        AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_2_3", "", 0, 5000, -1, -1082130432, 0 );
        return 1;
    }
    if (NOT l_U1701)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() >= 5219)
        {
            sub_49892( l_U1714, "/Global/PAS_F_TO_G/PAS_F_TO_G_SEQ/PAS_AT_G/pas_in_cover_g_look_around" );
            sub_14600( l_U1714, 66.63642000, 90.86852000, -4.01000000, 180.00000000 );
            l_U1701 = 1;
            sub_37061( ref l_U645, 0, 0, -1 );
            sub_36911( ref l_U645, 0, 0, -1 );
            sub_37187( ref l_U645, 1, 0, -1 );
            if (NOT (ISEQ_QUERY_STATE( -395445998, 3 )))
            {
                sub_50035( ref l_U645, 0, -1 );
                sub_39873( l_U645[0]._fU0, -395445998, "CS_PRAC_ROOM_GMED1" );
                sub_39873( l_U645[1]._fU0, -395445998, "CS_PRAC_ROOM_GMED2" );
                sub_39873( l_U645[2]._fU0, -395445998, "CS_PRAC_ROOM_GMED3" );
                ISEQ_START( -395445998 );
            }
            if (((IS_PED_DEAD( l_U645[0]._fU0 )) == 0) AND ((DOES_PED_EXIST( l_U645[0]._fU0 )) == 1))
            {
                TASK_GO_STRAIGHT_TO_COORD( l_U645[0]._fU0, 42.97786000, 70.68591000, -3.19992800, 3, -1 );
            }
            if (((IS_PED_DEAD( l_U645[1]._fU0 )) == 0) AND ((DOES_PED_EXIST( l_U645[1]._fU0 )) == 1))
            {
                TASK_GO_STRAIGHT_TO_COORD( l_U645[1]._fU0, 42.97786000, 70.68591000, -3.19992800, 3, -1 );
            }
            if (((IS_PED_DEAD( l_U645[2]._fU0 )) == 0) AND ((DOES_PED_EXIST( l_U645[2]._fU0 )) == 1))
            {
                TASK_GO_STRAIGHT_TO_COORD( l_U645[2]._fU0, 42.97786000, 70.68591000, -3.19992800, 3, -1 );
            }
            sub_44054( ref l_U510 );
            sub_44136( 0, sub_1133(), "MAX", ref l_U510, 2, 0 );
            sub_44136( 1, l_U1714, "PASSOS", ref l_U510, 2, 0 );
            sub_44136( 2, l_U645[0]._fU0, "M3_CS_09_MUS", ref l_U510, 2, 0 );
            sub_44136( 3, l_U645[1]._fU0, "M3_CS_10_AVG", ref l_U510, 2, 0 );
            sub_44379( "SSTD_PRGA", ref l_U510, 8, 1 );
        }
    }
    return 0;
}

void sub_49042(unknown uParam0, unknown uParam1)
{
    sub_1970( uParam0, uParam1, 1, 0 );
    sub_2106( uParam0 );
    return;
}

int sub_49142(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if ((sub_49157( (uParam0^), uParam1 )) == 1)
    {
        if (bParam2)
        {
            sub_49223( uParam0, uParam1 );
        }
        return 1;
    }
    return 0;
}

int sub_49157(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

void sub_49223(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

void sub_49358(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return;
}

void sub_49417(unknown uParam0, unknown uParam1)
{
    return;
}

void sub_49892(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

void sub_50035(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
        sub_50087( (uParam0^)[I] );
    }
    return;
}

void sub_50087(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43)
{
    sub_50115( uParam0, uParam0._fU56, uParam0._fU68 );
    return;
}

void sub_50115(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_COORDS( uParam0._fU0, uParam44, 1 );
        SET_PED_HEADING( uParam0._fU0, uParam47 );
    }
    return;
}

void sub_50780(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_683( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_50905( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 50865, 50883, uParam8 );
}

void sub_50865()
{
    return;
}

int sub_50883()
{
    return 1;
}

void sub_50905(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_51267(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_683( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_683( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_683( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_683( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_683( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_683( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_26650( iParam0->_fU0, 0 );
            sub_683( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_52134( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_52134( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_683( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_52662( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_52134( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_53011( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_53011( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_52134(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1133() )))
        {
            SET_PLAYER_CONTROL( sub_1155(), 0, uParam2 );
            SET_PED_DUCKING( sub_1133(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1133() );
            }
            SET_PED_INVINCIBLE( sub_1133(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_52662(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_1133() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_1133(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1133(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1133(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1133(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1133(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_53011(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1133() )))
    {
        SET_PLAYER_CONTROL( sub_1155(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1133(), 0 );
        if (bParam0)
        {
            sub_53092();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_53092()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1133() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1133(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1133(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1133(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1133(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

int sub_53601(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_53613( iParam0 )) == 0)))
    {
        if ((sub_12506() == 1) AND (((IS_PED_RELOADING( sub_1133() )) == 0) AND (((IS_PED_GETTING_UP( sub_1133() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_1133() )) == 0) AND (((IS_PED_IN_COVER( sub_1133() )) == 0) AND (((IS_PED_DUCKING( sub_1133() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_53613(int iParam0)
{
    return iParam0->_fU56;
}

int sub_53998()
{
    if (l_U872 == 0)
    {
        if (l_U1045 == 1)
        {
            if ((sub_2226( ref l_U1075 )) || (((IS_PED_IN_COVER( sub_1133() )) == 0) || ((IS_CONTROL_JUST_PRESSED( 0, 4 )) || ((sub_54038( l_U148 )) == 0))))
            {
                sub_1970( ref l_U1075, 1000, 1, 0 );
                sub_49042( ref l_U571, 100 );
                sub_32965( sub_1133() );
                l_U872 = 1;
                return 1;
            }
            else if ((NOT l_U1075._fU20) AND (IS_CONTROL_JUST_PRESSED( 0, 6 )))
            {
                sub_49042( ref l_U1075, 1000 );
            }
        }
    }
    return 0;
}

void sub_54038(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_11665( sub_1133(), uParam0 );
}

int sub_54338()
{
    int I;

    for ( I = 0; I <= (l_U645 - 1); I++ )
    {
        if ((IS_PED_DEAD( l_U645[I]._fU0 )) == 0)
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( l_U645[I]._fU0, 52 )) == 3)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_54515()
{
    sub_683( "GA", "P_PRAC_CS_LEAVE_ROOM start", 0 );
    sub_54565();
    STREAM_HELPERS_REQUEST_AT_LOC( 46.66368000, 70.31908000, -2.23933200, 1 );
    sub_54672( ref g_U3003, 0 );
    sub_54672( ref g_U2996, 0 );
    sub_54778( ref l_U645[0]._fU0, 42.97786000, 70.68591000, -3.19992800, 1, 2, 1 );
    sub_54778( ref l_U645[1]._fU0, 42.97786000, 70.68591000, -3.19992800, 1, 2, 1 );
    sub_54778( ref l_U645[2]._fU0, 42.97786000, 70.68591000, -3.19992800, 1, 2, 1 );
    sub_4712( ref l_U873 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_02", "VIG_18_STADIUM_CAM", 1, 56.96000000, 76.15000000, -1.80000000, 270, 0, 0 );
    sub_32965( sub_1133() );
    sub_683( "GA", "P_PRAC_CS_LEAVE_ROOM end", 0 );
    return;
}

void sub_54565()
{
    sub_43282( ref g_U2996, 0 );
    sub_43282( ref g_U3003, 0 );
    sub_43091( ref g_U2996, -90.00000000, 90.00000000 );
    sub_43091( ref g_U3003, -90.00000000, 90.00000000 );
    return;
}

void sub_54672(int iParam0, unknown uParam1)
{
    if ((sub_43103( iParam0 )) == 0)
    {
        sub_43169( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

void sub_54778(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    unknown uVar9;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        OPEN_SEQUENCE_TASK( ref uVar9 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam6 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, uParam5, -1, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam4 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar9 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar9 );
        CLEAR_SEQUENCE_TASK( uVar9 );
    }
    return;
}

void sub_55268()
{
    sub_683( "GA", "P_PASSOS_COME_OUT_OF_COVER start", 0 );
    if (NOT (IS_PED_DEAD( l_U1714 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1714, 1 );
        sub_14600( l_U1714, l_U633, 180.00000000 );
        PED_SET_ACTION_INTENTION( l_U1714, 47, 10000, g_U649 );
    }
    sub_683( "GA", "P_PASSOS_COME_OUT_OF_COVER end", 0 );
    return;
}

void sub_55724()
{
    sub_683( "MF", "P_START_PRACTICE_ROOM_FIGHT - START", 0 );
    STREAM_HELPERS_REQUEST_AT_LOC( 46.66368000, 70.31908000, -2.23933200, 1 );
    sub_49042( ref l_U1013, 8000 );
    sub_49042( ref l_U1031, 1000 );
    if ((sub_55837( l_U510 )) == 1)
    {
        sub_56005( ref l_U510, 0 );
    }
    sub_683( "MF", "P_START_PRACTICE_ROOM_FIGHT - END", 0 );
    return;
}

int sub_55837(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_55850( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_55850(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_56005(int iParam0, unknown uParam1)
{
    if (NOT (sub_55850( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

void sub_56161(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        sub_56200( uParam0, (uParam1^)[I], uParam2, 0, -1 );
    }
    return;
}

void sub_56200(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    int I;

    if (iParam4 == -1)
    {
        iParam4 = (uParam0^) - 1;
    }
    for ( I = uParam3; I <= iParam4; I++ )
    {
        sub_56252( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

void sub_56252(int iParam0, unknown uParam1, unknown uParam2)
{
    sub_56270( ref uParam1, iParam0->_fU0, uParam2 );
    return;
}

void sub_56270(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

int sub_56414(unknown uParam0)
{
    int iVar3;

    iVar3 = nil;
    if (HAS_SHOT_BEEN_FIRED_IN_AREA( sub_56433( sub_1133() ), 2.00000000, uParam0, ref iVar3 ))
    {
        if (iVar3 == sub_1133())
        {
            sub_5925( "MAL_HasPlayerFired RETURNING TRUE" );
            return 1;
        }
    }
    return 0;
}

vector sub_56433(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return "[dynamic result, ret vals = 3]";
        break;
        GET_PED_COORDS( uParam0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        break;
    }
    return vector( 0, 0, 0);
}

void sub_56805(unknown uParam0, int iParam1)
{
    int Result;

    Result = GET_RANDOM_INT_IN_RANGE( uParam0, iParam1 + 1 );
    if (Result > iParam1)
    {
        Result = iParam1;
    }
    return Result;
}

void sub_57043()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_57393(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_57502()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;

    sub_52134( 1, 0, 0, 1 );
    if ((sub_57393( ref l_U645 )) > 0)
    {
        uVar2 = sub_57541( ref l_U645 );
    }
    else
    {
        uVar2 = sub_57541( ref l_U873 );
    }
    CLEAR_PED_TASKS_IMMEDIATELY( uVar2 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uVar2, 1 );
    sub_57685( uVar2, 74.04474000, 90.37959000, -3.99989600, 90 );
    sub_57744( ref uVar2, 0 );
    RELOAD_PED_WEAPONS( uVar2 );
    SET_PED_PERFECT_ACCURACY_OVERRIDE( uVar2, 1 );
    sub_57815( ref uVar2, l_U1714 );
    CLEAR_PED_TASKS_IMMEDIATELY( l_U1714 );
    sub_49892( l_U1714, "/Global/PAS_F_TO_G/PAS_F_TO_G_SEQ/PAS_AT_G/pas_in_cover_g_idle" );
    SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U1714, 0 );
    SET_PED_INVINCIBLE( l_U1714, 0 );
    sub_57685( l_U1714, 66.58089000, 90.84168000, -3.99491000, 180 );
    sub_58140( ref uVar3, 63.60009000, 90.29189000, -3.91446200, 12.89441000, -0.00001300, -84.32330000, 1110704128, 1000 );
    sub_58348( ref uVar3 );
    SHAKE_CAM( uVar3._fU0, sub_58495(), 0.25000000 );
    TASK_SHOOT_AT_PED( uVar2, l_U1714, -1, -256437761, 1, 0, 0 );
    SET_PED_SHOOTS_AT_COORD( uVar2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1714, 14989, g_U649 ) );
    return;
}

void sub_57541(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            return (uParam0^)[I]._fU0;
        }
    }
    return nil;
}

void sub_57685(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_57744(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_CONSUMING_AMMO( (uParam0^), uParam1 );
    }
    return;
}

void sub_57815(unknown uParam0, unknown uParam1)
{
    sub_57829( uParam0, uParam1 );
    sub_57890( uParam0, uParam1 );
    return;
}

void sub_57829(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_57890(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_58140(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_1970( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U723, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_58348(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    if (iParam0->_fU92 == 1)
    {
        SET_CAM_ACTIVE_WITH_INTERP( iParam0->_fU0, iParam0->_fU120, iParam0->_fU88, iParam0->_fU100, iParam0->_fU104 );
    }
    else
    {
        SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    }
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_2106( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

string sub_58495()
{
    return "WOBBLY_SHAKE";
}

int sub_58687(unknown uParam0, unknown uParam1, float fParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    float fVar8;

    uVar5 = {sub_56433( sub_1133() )};
    if (ARE_STRINGS_EQUAL( uParam0, "X" ))
    {
        fVar8 = uVar5._fU0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Y" ))
    {
        fVar8 = uVar5._fU4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Z" ))
    {
        fVar8 = uVar5._fU8;
    };;;
    if (ARE_STRINGS_EQUAL( uParam1, "Greater" ))
    {
        if (fVar8 > fParam2)
        {
            return 1;
        }
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Less" ))
    {
        if (fVar8 < fParam2)
        {
            return 1;
        }
    }
    return 0;
}

void sub_59125(unknown uParam0)
{
    sub_57815( uParam0, sub_1133() );
    return;
}

void sub_59203()
{
    sub_683( "MF", "P_PLAY_SPEECH_SSTD_PRGB - START", 0 );
    sub_56005( ref l_U510, 0 );
    sub_44054( ref l_U520 );
    sub_44136( 2, l_U645[1]._fU0, "M3_CS_11_MUS", ref l_U520, 2, 0 );
    sub_44136( 3, l_U645[2]._fU0, "M3_CS_10_AVG", ref l_U520, 2, 0 );
    sub_44379( "SSTD_PRGB", ref l_U520, 8, 1 );
    sub_683( "MF", "P_PLAY_SPEECH_SSTD_PRGB - END", 0 );
    return;
}

void sub_59454(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I]._fU0 ))
        {
            if (IS_PED_DEAD( (uParam0^)[I]._fU0 ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_59578(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

void sub_59743(int iParam0, unknown uParam1)
{
    if ((sub_43103( iParam0 )) == 0)
    {
        sub_43169( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_59818(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_59854( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

void sub_59854(int iParam0, unknown uParam1, unknown uParam2)
{
    sub_59872( iParam0 + 0, uParam1, uParam2 );
    return;
}

void sub_59872(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_59886( uParam0, uParam1 );
    sub_59936( uParam0, uParam2 );
    return;
}

void sub_59886(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

void sub_59936(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_EMOTION_STATE( (uParam0^), uParam1 );
    }
    return;
}

void sub_60037(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
        sub_57829( ref (uParam0^)[I]._fU0, sub_1133() );
        sub_57890( ref (uParam0^)[I]._fU0, sub_1133() );
    }
    return;
}

void sub_60162(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown uVar7;

    if ((NOT (IS_PED_DEAD( sub_1133() ))) AND (NOT (IS_PED_DEAD( iParam0->_fU0 ))))
    {
        sub_5925( "MAL_ES_MoveToPointTakeCoverAgainstPlayer" );
        CLEAR_PED_TASKS( iParam0->_fU0 );
        OPEN_SEQUENCE_TASK( ref uVar7 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, uParam4 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, 3, -1, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_MOVE_TO_COVER_COORDS( 0, uParam1, 0 );
        CLOSE_SEQUENCE_TASK( uVar7 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar7 );
        CLEAR_SEQUENCE_TASK( uVar7 );
    }
    return;
}

void sub_60436(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_57829( ref (uParam0^)[I]._fU0, uParam1 );
        sub_57890( ref (uParam0^)[I]._fU0, uParam1 );
    }
    return;
}

void sub_60566(int iParam0, int iParam1)
{
    if ((sub_43103( iParam0 )) == 0)
    {
        sub_43169( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_60746(unknown uParam0, boolean bParam1, unknown uParam2, unknown uParam3)
{
    int I;

    if ((sub_57393( uParam0 )) == 1)
    {
        for ( I = 0; I < (uParam0^); I++ )
        {
            if (sub_60796( (uParam0^)[I]._fU0, 1 ))
            {
                if (bParam1)
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, uParam2 );
                }
                BULLET_CAMERA_TRACK_UNTIL_GROUNDED( uParam3 );
                return (uParam0^)[I];
            }
        }
    }
    return g_U671;
}

int sub_60796(unknown uParam0, boolean bParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (bParam1)
        {
            if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 )))
            {
                sub_5925( "MAL_SetCanTriggerBulletCam: Ped is not able to trigger BC, adding" );
                SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
                return 1;
            }
        }
        else if (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 ))
        {
            sub_5925( "MAL_SetCanTriggerBulletCam turning off BC" );
            SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
            return 1;
        }
    }
    return 0;
}

int sub_61207()
{
    if (NOT (IS_PED_DEAD( l_U1714 )))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( l_U1714, 50 )) == 3)
        {
            PED_FINISH_ACTION_INTENTION( l_U1714, 50 );
            return 1;
        }
    }
    return 0;
}

void sub_61290()
{
    if (((IS_PED_DEAD( l_U1714 )) == 0) AND ((DOES_PED_EXIST( l_U1714 )) == 1))
    {
        sub_683( "[SA]", "Telling Passos to start firing.", 0 );
        PED_SET_ACTION_INTENTION( l_U1714, 56, 1000, g_U649 );
        SET_PED_ACCURACY( l_U1714, -1467320974 );
        sub_61444( ref l_U1714, l_U645[0]._fU0, -511790439, 0 );
        l_U1084 = l_U645[0]._fU0;
    }
    return;
}

void sub_61444(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        OPEN_SEQUENCE_TASK( ref uVar6 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (NOT (IS_PED_DEAD( uParam1 )))
        {
            TASK_AIM_GUN_AT_PED( 0, uParam1, 50, uParam3 );
            TASK_SHOOT_AT_PED( 0, uParam1, 9999999, uParam2, uParam3, 0, 0 );
        }
        CLOSE_SEQUENCE_TASK( uVar6 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
        CLEAR_SEQUENCE_TASK( uVar6 );
    }
    return;
}

int sub_61699(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    float fVar9;

    uVar6 = {sub_56433( uParam0 )};
    if (ARE_STRINGS_EQUAL( uParam1, "X" ))
    {
        fVar9 = uVar6._fU0;
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Y" ))
    {
        fVar9 = uVar6._fU4;
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Z" ))
    {
        fVar9 = uVar6._fU8;
    };;;
    if (ARE_STRINGS_EQUAL( uParam2, "Greater" ))
    {
        if (fVar9 > fParam3)
        {
            return 1;
        }
    }
    else if (ARE_STRINGS_EQUAL( uParam2, "Less" ))
    {
        if (fVar9 < fParam3)
        {
            return 1;
        }
    }
    return 0;
}

void sub_62055()
{
    int Result;
    int iVar3;
    int I;

    Result = nil;
    iVar3 = nil;
    for ( I = 0; I < l_U645; I++ )
    {
        if ((sub_61699( l_U645[I]._fU0, "Y", "Less", 83.50000000 )) AND (NOT (IS_PED_DEAD( l_U645[I]._fU0 ))))
        {
            if (Result == nil)
            {
                Result = l_U645[I]._fU0;
            }
            else if ((sub_10981( l_U1714, l_U645[I]._fU0, 0 )) < (sub_10981( l_U1714, Result, 0 )))
            {
                Result = l_U645[I]._fU0;
            }
        }
    }
    I = 0;
    for ( I = 0; I < l_U873; I++ )
    {
        if ((sub_61699( l_U873[I]._fU0, "Y", "Less", 83.50000000 )) AND (NOT (IS_PED_DEAD( l_U873[I]._fU0 ))))
        {
            if (iVar3 == nil)
            {
                iVar3 = l_U873[I]._fU0;
            }
            else if ((sub_10981( l_U1714, l_U873[I]._fU0, 0 )) < (sub_10981( l_U1714, iVar3, 0 )))
            {
                iVar3 = l_U873[I]._fU0;
            }
        }
    }
    if ((sub_10981( l_U1714, Result, 0 )) < (sub_10981( l_U1714, iVar3, 0 )))
    {
        return Result;
    }
    else
    {
        return iVar3;
    }
    sub_5925( "GET PASSOS TARGET IS NULL" );
    return nil;
}

void sub_62847(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U649 );
    }
    return;
}

void sub_62903(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

void sub_63373(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_63538(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

int sub_63630()
{
    if (GET_PAYNEKILLER_AMT() > g_U4002)
    {
        sub_683( "MF", "Player picked up Payne Killers!", 0 );
        sub_37654( g_U4002 );
        sub_37654( GET_PAYNEKILLER_AMT() );
        g_U4002 = GET_PAYNEKILLER_AMT();
        return 1;
    }
    g_U4002 = GET_PAYNEKILLER_AMT();
    return 0;
}

void sub_63792(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
        sub_5925( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

void sub_63980(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_64098(unknown uParam0, unknown uParam1)
{
    sub_44054( uParam1 );
    sub_44136( 0, sub_1133(), "MAX", uParam1, 2, 0 );
    sub_44136( 1, sub_1133(), "MAX", uParam1, 2, 0 );
    sub_44379( uParam0, uParam1, 8, 1 );
    return;
}

int sub_64585(unknown uParam0, boolean bParam1, float fParam2)
{
    if (NOT (sub_64597( uParam0 )))
    {
        if (((sub_64666( uParam0 )) > (fParam2 * -1)) AND ((sub_64666( uParam0 )) < fParam2))
        {
            if (bParam1)
            {
                sub_43282( uParam0, 1 );
            }
            return 1;
        }
    }
    return 0;
}

void sub_64597(int iParam0)
{
    unknown Result;
    unknown uVar4;

    if ((sub_43103( iParam0 )) == 0)
    {
        sub_43169( iParam0 );
    }
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref Result, ref uVar4 );
    return Result;
}

void sub_64666(int iParam0)
{
    int iVar3;
    float Result;

    if ((sub_43103( iParam0 )) == 0)
    {
        sub_43169( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

void sub_64825()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if (sub_64840( ref l_U1174, 0 ))
    {
        sub_683( "MF", "Playing Speech: SSTD_BMDR", 0 );
        sub_64098( "SSTD_BMDR", ref uVar2 );
        return;
    }
    if (TIME_SINCE_LAST_MONOLOGUE() > 5000)
    {
        if (sub_64840( ref l_U1153, 0 ))
        {
            sub_683( "MF", "Playing Speech: SSTD_GISR", 0 );
            if ((sub_65075( ref l_U1429 )) == 0)
            {
                sub_64098( "SSTD_GISR", ref uVar2 );
            }
            return;
        }
    }
    if (NOT (sub_1860( ref g_U3992 )))
    {
        sub_49042( ref g_U3992, g_U4001 );
    }
    if ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND (sub_63630()))
    {
        sub_683( "MF", "Playing Speech: SSTD_MFSP", 0 );
        sub_64098( ref g_U4003, ref uVar2 );
        sub_2763( ref g_U3992 );
    }
    return;
}

void sub_64840(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_11665( sub_1133(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_65075(int iParam0)
{
    sub_683( "rw", "IS_SCRIPTED_MOVIE_PLAYING", 0 );
    if (iParam0->_fU940 != 0)
    {
        return 1;
    }
    return 0;
}

int sub_65338()
{
    if (((PED_GET_ACTION_INTENTION_STATUS( l_U1714, 47 )) == 3) AND ((NOT l_U1044) AND ((NOT (IS_PED_DEAD( sub_1133() ))) AND (NOT (IS_PED_DEAD( l_U1714 ))))))
    {
        if ((sub_11665( sub_1133(), l_U190 )) || (((sub_10981( l_U1714, sub_1133(), 0 )) < 15) || (l_U253._fU64)))
        {
            return 1;
        }
    }
    return 0;
}

void sub_67171()
{
    l_U1044 = 1;
    PED_SET_ACTION_INTENTION( l_U1714, 48, 1000, g_U649 );
    sub_683( "ML", "P_PASSOS_MOVE_TO_ELEVATOR", "---" );
    if (sub_55837( l_U470 ))
    {
        sub_56005( ref l_U470, 0 );
    }
    if ((NOT (IS_PED_DEAD( l_U1714 ))) AND (NOT (IS_PED_DEAD( sub_1133() ))))
    {
        sub_44054( ref l_U470 );
        sub_44136( 0, sub_1133(), "MAX", ref l_U470, 2, 0 );
        sub_44136( 1, l_U1714, "PASSOS", ref l_U470, 2, 0 );
        sub_44379( "SSTD_PRPA", ref l_U470, 8, 1 );
    }
    return;
}

void sub_67453(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if ((NOT (IS_PED_DEAD( uParam1 ))) || (IS_PED_DEAD( uParam1 )))
        {
            SET_PED_PRIMARY_LOOKAT( uParam0, uParam1 );
        }
    }
    return;
}

void sub_67925(int iParam0)
{
    boolean bVar3;
    string sVar4;

    bVar3 = false;
    if (NOT (sub_55837( l_U1755 )))
    {
        bVar3 = true;
    }
    else if (l_U1765 != 0)
    {
        if (((NOT (IS_ANY_SPEECH_PLAYING( l_U1714 ))) AND ((l_U1765 == 3) AND (iParam0 == 1))) || (iParam0 == 0))
        {
            bVar3 = true;
        }
    }
    if (bVar3)
    {
        if (iParam0 == 2)
        {
            sVar4 = "SSTD_PAAH";
        }
        else if (iParam0 == 0)
        {
            sVar4 = "SSTD_PSAH";
        }
        else if (iParam0 == 1)
        {
            sVar4 = "SSTD_PBTP";
        }
        else if (iParam0 == 3)
        {
            sVar4 = "SSTD_MFLP";
        };;;;
        l_U1765 = iParam0;
        sub_56005( ref l_U1755, 0 );
        sub_44054( ref l_U1755 );
        sub_44136( 1, l_U1714, "PASSOS", ref l_U1755, 2, 0 );
        sub_44379( sVar4, ref l_U1755, 7, 1 );
    }
    return;
}

void sub_68214(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    unknown uVar12;

    if ((sub_49157( uParam0, 29 )) == 3)
    {
        uVar12 = nil;
        if (((sub_56414( 1 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 2, 10000, 0, -1082130432 ))) || (HAS_BULLET_IMPACTED_IN_AREA( sub_56433( uParam0 ), 3, ref uVar12 )))
        {
            sub_5925( "PLAYER SHOT AT PASSOS" );
            sub_68342( ref uParam0, sub_56433( sub_1133() ), 34, 1000 );
            SET_PED_PRIMARY_LOOKAT( uParam0, sub_1133() );
            (uParam1^) = 1;
            break;
            uParam6;
            0;
            break;
        }
        if (NOT (uParam2^))
        {
            if (((sub_49157( uParam0, 32 )) != 3) AND (((sub_49157( uParam0, 33 )) != 3) AND (IS_PED_TOUCHING_PED( sub_1133(), uParam0 ))))
            {
                sub_5925( "BAD TOUCH!!" );
                (uParam2^) = 1;
                (uParam1^) = 1;
                sub_68342( ref uParam0, sub_56433( sub_1133() ), 35, 1000 );
                SET_PED_PRIMARY_LOOKAT( uParam0, sub_1133() );
                break;
                uParam6;
                1;
                break;
            }
        }
        else if (NOT (IS_PED_TOUCHING_PED( sub_1133(), uParam0 )))
        {
            (uParam2^) = 0;
        }
        if (NOT (uParam3^))
        {
            if (sub_68588( ref uParam0, 300, 100, -1, 0, 0 ))
            {
                if ((IS_CONTROL_PRESSED( 0, 6 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 1, 10000, 0, -1082130432 )))
                {
                    (uParam1^) = 1;
                    (uParam3^) = 1;
                    sub_68342( ref uParam0, sub_56433( sub_1133() ), 32, 1000 );
                    SET_PED_PRIMARY_LOOKAT( uParam0, sub_1133() );
                    sub_5925( "PLAYER AIMING AT PASSOS" );
                    break;
                    uParam6;
                    2;
                    break;
                }
            }
        }
        else if ((NOT (IS_CONTROL_PRESSED( 0, 6 ))) || (NOT (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 1.50000000, 10000, 0, -1082130432 ))))
        {
            if ((sub_49157( uParam0, 32 )) != 3)
            {
                (uParam3^) = 0;
                sub_5925( "PLAYER NO LONGER AIMING AT PASSOS" );
            }
        }
        if (NOT (uParam1^))
        {
            if ((sub_68588( ref uParam0, uParam9, 180, -1, 46, 0 )) || ((sub_68588( ref uParam0, uParam8, 45, -1, 31, 0 )) || (sub_68588( ref uParam0, uParam7, 30, -1, 0, 0 ))))
            {
                sub_5925( "INTERRUPTING PASSOS" );
                sub_68342( ref uParam0, sub_56433( sub_1133() ), 33, 1000 );
                SET_PED_PRIMARY_LOOKAT( uParam0, sub_1133() );
                (uParam1^) = 1;
            }
        }
        else if ((sub_68588( ref uParam0, -1, 180, uParam8 + 1, 91, 0 )) || (sub_68588( ref uParam0, -1, 90, uParam7 + 1, 0, 0 )))
        {
            if ((NOT (uParam2^)) AND (NOT (uParam3^)))
            {
                if ((sub_49142( ref uParam0, 35, 1 )) || ((sub_49142( ref uParam0, 32, 1 )) || ((sub_49142( ref uParam0, 34, 1 )) || (sub_49142( ref uParam0, 33, 1 )))))
                {
                    sub_49223( ref uParam0, 33 );
                    sub_49223( ref uParam0, 34 );
                    sub_49223( ref uParam0, 32 );
                    sub_49223( ref uParam0, 35 );
                    sub_49223( ref uParam0, 31 );
                    sub_62847( uParam0, 36, 1000 );
                    CLEAR_PED_PRIMARY_LOOKAT( uParam0 );
                    (uParam1^) = 0;
                    (uParam3^) = 0;
                    (uParam2^) = 0;
                    (uParam4^) = 0;
                    sub_1970( iParam5, sub_56805( 10000, 15000 ), 1, 0 );
                    return;
                }
            }
        }
        if ((sub_49157( uParam0, 30 )) == 3)
        {
            if (sub_2226( iParam5 ))
            {
                sub_68342( ref uParam0, sub_56433( sub_1133() ), 31, 1000 );
                (uParam4^)++;
                break;
                uParam6;
                3;
                break;
            }
            else if ((uParam4^) < 3)
            {
                if ((iParam5->_fU16) || (NOT (sub_1860( iParam5 ))))
                {
                    sub_1970( iParam5, sub_56805( 10000, 15000 ), 1, 0 );
                    sub_2106( iParam5 );
                }
            }
        }
    }
    sub_49142( ref uParam0, 31, 1 );
    sub_49142( ref uParam0, 36, 1 );
    return;
}

void sub_68342(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_SET_ACTION_INTENTION( (uParam0^), uParam4, uParam5, uParam1 );
    }
    return;
}

int sub_68588(unknown uParam0, float fParam1, unknown uParam2, float fParam3, float fParam4, boolean bParam5)
{
    float fVar8;

    if ((NOT (IS_PED_DEAD( sub_1133() ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        fVar8 = sub_10981( (uParam0^), sub_1133(), 0 );
        if ((fVar8 > fParam1) AND (fParam1 > -1))
        {
            return 0;
        }
        else if ((fVar8 < fParam3) AND (fParam3 > -1))
        {
            return 0;
        }
        else if (NOT (IS_PED_FACING_PED( (uParam0^), sub_1133(), uParam2 )))
        {
            return 0;
        }
        else if ((IS_PED_FACING_PED( (uParam0^), sub_1133(), fParam4 )) AND (fParam4 > 0))
        {
            return 0;
        }
        else if (bParam5)
        {
            sub_35613( fParam4 );
        }
        return 1;;;;;
    }
    return 0;
}

void sub_70174(int iParam0)
{
    sub_683( "rw", "P_CLEAN_MOVIE", 0 );
    sub_4570( iParam0->_fU40 );
    sub_3711( iParam0->_fU76, 1 );
    if (IS_SCRIPT_MOVIE_PLAYING( 2 ))
    {
        STOP_MOVIE( 2 );
    }
    RELEASE_MOVIE( 2 );
    return;
}

void sub_70273()
{
    sub_683( "SP", "P_RELEASE_PRACTICEROOM_ASSETS", 0 );
    sub_70334( ref l_U128, ref g_U1069 );
    sub_70612( ref l_U141, ref g_U1214 );
    sub_70845( "LEVEL_S_STAD_CP_01", ref g_U1354 );
    sub_70845( "LEVEL_S_STAD_CP_02", ref g_U1354 );
    sub_70845( "LEVEL_S_STAD_PRACT", ref g_U1354 );
    sub_70845( "PAS_INT", ref g_U1354 );
    sub_70845( "EXPL_CAM", ref g_U1354 );
    sub_71113();
    return;
}

void sub_70334(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_70369( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_70369(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_4086( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_70612(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_70647( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_70647(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_4086( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_70845(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_4086( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_71113()
{
    sub_70845( "PLGE_RIFLE_CROUCH", ref g_U1354 );
    sub_70845( "PLGE_PSTL_CROUCH", ref g_U1354 );
    sub_70845( "AMED_RIFLE_CORE", ref g_U1354 );
    sub_70845( "AMED_PSTL_CORE", ref g_U1354 );
    sub_70845( "AMED_RIFLE_CORE_RELOAD", ref g_U1354 );
    sub_70845( "AMED_PSTL_CORE_RELOAD", ref g_U1354 );
    sub_70845( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
    sub_70845( "PLGE_PSTL_HANDSIG", ref g_U1354 );
    sub_70845( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
    sub_70845( "PLGE_PSTL_ACTIONS", ref g_U1354 );
    sub_70845( "AMED_RIFLE_KNEE", ref g_U1354 );
    sub_70845( "AMED_PSTL_KNEE", ref g_U1354 );
    sub_70845( "AMED_RIFLE_COVER", ref g_U1354 );
    sub_70845( "AMED_PSTL_COVER", ref g_U1354 );
    sub_70845( "AMED_RIFLE_REACT", ref g_U1354 );
    sub_70845( "AMED_PSTL_REACT", ref g_U1354 );
    sub_70845( "AMED_RIFLE_COVER_EXIT", ref g_U1354 );
    sub_70845( "AMED_PSTL_COVER_EXIT", ref g_U1354 );
    sub_70845( "AMED_PSTL_FULLBODY", ref g_U1354 );
    return;
}


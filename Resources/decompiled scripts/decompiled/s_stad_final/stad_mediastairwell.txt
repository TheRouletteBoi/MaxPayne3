void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U62 = 0;
    l_U63 = 0;
    l_U64 = 1500;
    l_U75 = 0;
    l_U125 = 0;
    l_U127 = 1;
    l_U128 = 0;
    l_U659 = 0;
    l_U690 = 0;
    l_U691 = 0;
    l_U692 = 0;
    l_U725 = {98.53500000, 38.63200000, 2.80000000};
    l_U728 = 90.68300000;
    l_U729 = {96.18500000, 48.58700000, 2.80600000};
    l_U732 = 180.00000000;
    l_U734 = {98.70000000, 38.65000000, 2.76000000};
    l_U737 = {0.00000000, 0.00000000, 105.00000000};
    l_U770 = 2700;
    l_U771 = {108.56200000, 23.34600000, 2.80000000};
    l_U775 = 0;
    l_U777 = 0;
    l_U1143 = {111.29740000, 5.54371600, 2.80012700};
    l_U1195 = 0;
    l_U1206 = 65446;
    l_U1274 = 0;
    l_U1345 = 0;
    l_U1346 = 0;
    l_U1347 = 0;
    l_U1348 = 0;
    l_U1349 = 0;
    l_U1350 = 0;
    l_U1352 = 0;
    l_U1519 = 0;
    l_U1529 = 0;
    l_U1607 = nil;
    l_U1813 = 0;
    l_U1814 = 0;
    l_U1815 = 0;
    l_U1816 = 0;
    l_U1826 = 0;
    l_U1827 = {91.57430000, 62.36010000, 2.78224000};
    l_U1830 = 208.05200000;
    l_U1831 = -5.17400000;
    l_U1832 = -4.26400000;
    l_U1869 = 0;
    l_U1889 = 0;
    l_U1918 = 0;
    l_U1919 = 0;
    l_U1920 = 0;
    l_U1931 = 0;
    l_U1932 = 0;
    sub_724( "SP", "Script stad_MediaStairwell.sc is starting up...", 0 );
    sub_773();
    l_U125 = 1;
    l_U75 = 0;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_1042();
        if (l_U128 == 0)
        {
            sub_11096();
        }
        WAIT( 0 );
    }
    sub_3942( 0 );
    sub_75335();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "stad_MediaStairwell" );
    sub_724( "SP", "Script stad_MediaStairwell.sc is terminating...", 0 );
    return;
}

void sub_724(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_773()
{
    sub_724( "GA", "P_MS_POPULATE_VARIABLE_ARRAYS start", 0 );
    l_U113[0] = g_U851;
    l_U113[1] = g_U2391;
    l_U113[2] = g_U2392;
    l_U113[3] = g_U2393;
    l_U113[4] = g_U2396;
    l_U113[5] = g_U2394;
    l_U113[6] = g_U2381;
    l_U113[7] = 619121117;
    l_U113[8] = 824031458;
    l_U123[0] = 1194438308;
    sub_724( "GA", "P_MS_POPULATE_VARIABLE_ARRAYS end", 0 );
    return;
}

void sub_1042()
{
    if ((g_U855 == 4) || (g_U855 == 3))
    {
        switch (l_U128)
        {
            case 0:
            if (((IS_PED_DEAD( g_U4392 )) AND (DOES_PED_EXIST( g_U4392 ))) || ((sub_1205()) || (IS_PED_DEAD( sub_1132() ))))
            {
                if (IS_PED_DEAD( g_U4392 ))
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                    RESET_LAST_MAN_STANDING();
                }
                sub_1704( ref l_U778, 1, 0, -1 );
                CLEAR_PED_TASKS_IMMEDIATELY( l_U778[0]._fU0 );
                CLEAR_PED_TASKS_IMMEDIATELY( l_U778[1]._fU0 );
                CLEAR_PED_TASKS_IMMEDIATELY( l_U778[2]._fU0 );
                CLEAR_PED_TASKS_IMMEDIATELY( l_U778[3]._fU0 );
                l_U128 = 1;
                sub_724( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_1960())
            {
                l_U128 = 2;
            }
            else if ((sub_2000( 0 )) == 1)
            {
                l_U128 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_1132() )))
            {
                if ((g_U888[5]._fU40 != 4) AND (g_U888[5]._fU40 != 0))
                {
                    sub_724( "CR", "Shutting down script for MCE_STORES.", 0 );
                    sub_3443( ref g_U888[5] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U888[5]._fU32 );
                    g_U3875 = 0;
                }
                l_U128 = 3;
                sub_724( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_724( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_1132() ))) AND (NOT (IS_PLAYER_DEAD( sub_1154() ))))
            {
                SET_PLAYER_CONTROL( sub_1154(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_1132() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_1132(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            sub_3720( "STAD_PASSOS_MEDIA_SCRIPTED_FAIL_FX" );
            TERMINATE_GAME_BULLET_CAMERA();
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            sub_3942( 1 );
            sub_6114( g_U855 );
            l_U128 = 4;
            sub_724( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_724( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U77._fU0)
            {
                sub_6887( ref l_U77, sub_1132() );
            }
            l_U128 = 5;
            sub_724( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_724( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U125 = 1;
            l_U127 = 0;
            l_U128 = 0;
            sub_724( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_1132()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1154() );
    }
    return 0;
}

void sub_1154()
{
    return GET_PLAYER_ID();
}

int sub_1205()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1132() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1132(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1154(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1154(), 1 );
            if ((IS_PED_VISIBLE( sub_1132() )) == 0)
            {
                SET_PED_VISIBLE( sub_1132(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1704(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_1754( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_1754(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_1960()
{
    return g_U648;
}

int sub_2000(int iParam0)
{
    iParam0 = 1;
    switch (l_U63)
    {
        case 0:
        if (NOT (sub_2061( ref l_U65 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1132() )))
            {
                l_U64 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_2171( ref l_U65, l_U64, 1, 1 );
            sub_2307( ref l_U65 );
        }
        if (sub_2427( ref l_U65 ))
        {
            sub_724( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1132() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1154() )))
            {
                SET_PLAYER_CONTROL( sub_1154(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U63 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U63 = 2;
            }
            else
            {
                l_U63 = 3;
            }
        }
        break;
        case 2:
        sub_724( "NS", "Player will QUIT", 0 );
        sub_2914();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_724( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2914();
        return 1;
        break;
    }
    return 0;
}

int sub_2061(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_2171(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2307(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_2427(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2914()
{
    sub_724( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2964( ref l_U65 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1154() )))
    {
        SET_PLAYER_CONTROL( sub_1154(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U62 = 0;
    l_U62 = l_U62;
    l_U63 = 0;
    return;
}

void sub_2964(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_3443(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_3720(unknown uParam0)
{
    sub_724( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_3803( ref l_U76 );
    l_U75 = 1;
    return;
}

void sub_3803(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_3942(boolean bParam0)
{
    sub_724( "GA", "P_CLEANUP_MS start", 0 );
    if (NOT (IS_PED_DEAD( sub_1132() )))
    {
        SET_PED_FORCED_TO_WALK( sub_1132(), 0 );
    }
    sub_4021( 1743875163, 0 );
    sub_4229( 1743875163, ref g_U1263 );
    sub_4021( 1708899639, 0 );
    sub_4229( 1708899639, ref g_U1263 );
    sub_4021( 1269878088, 0 );
    sub_4229( 1269878088, ref g_U1263 );
    sub_4021( -1324066065, 0 );
    sub_4229( -1324066065, ref g_U1263 );
    sub_4021( 1496659887, 0 );
    sub_4229( 1496659887, ref g_U1263 );
    sub_4021( 1090240116, 0 );
    sub_4229( 1090240116, ref g_U1263 );
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_02B_STADIUM" )) || (CUTSCENE_IS_LOADED( "MID_02B_STADIUM" )))
    {
        CLEAR_NAMED_CUTSCENE( "MID_02B_STADIUM" );
    }
    sub_4833( "S_STAD_MID_02B_BLENDOUT", ref g_U2034 );
    sub_5168( "S_STAD_MID_02B_BLENDOUT", ref g_U2034 );
    sub_5342( g_U4392 );
    sub_5342( l_U724 );
    sub_5431( g_U3866 );
    sub_5431( g_U3867 );
    sub_5431( l_U733 );
    if (NOT bParam0)
    {
        sub_5507( g_U3706 );
    }
    sub_5342( l_U1129 );
    sub_5643( ref l_U778 );
    sub_5734( ref l_U1353 );
    sub_724( "[SA]", "Disabling static emitter S_STAD_SE_STAIRS_SHOTS.", 0 );
    ENABLE_STATIC_EMITTER( "S_STAD_SE_STAIRS_SHOTS", 0 );
    sub_3803( ref l_U776 );
    SET_CAM_VIEW_MODE( 1 );
    sub_5943();
    sub_724( "GA", "P_CLEANUP_MS end", 0 );
    return;
}

void sub_4021(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_4229(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_4341( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_4341(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_4833(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_4850( uParam0, uParam1 ))
    {
        iVar4 = sub_4949( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    return;
}

int sub_4850(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_4949(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

void sub_5168(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_4341( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_5342(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_5431(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_5507(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48, unknown uParam49, unknown uParam50, unknown uParam51, unknown uParam52, unknown uParam53, unknown uParam54, unknown uParam55, unknown uParam56, unknown uParam57, unknown uParam58, unknown uParam59, unknown uParam60, unknown uParam61, unknown uParam62, unknown uParam63, unknown uParam64, unknown uParam65, unknown uParam66, unknown uParam67, unknown uParam68, unknown uParam69, unknown uParam70, unknown uParam71, unknown uParam72, unknown uParam73, unknown uParam74, unknown uParam75, unknown uParam76, unknown uParam77, unknown uParam78, unknown uParam79)
{
    sub_5548( "[SP]### P_CLEAN_ELEVATOR ###" );
    sub_5431( uParam0._fU232 );
    sub_5431( uParam0._fU236 );
    sub_5431( uParam0._fU240 );
    sub_5431( uParam0._fU244 );
    sub_5431( uParam0._fU248 );
    return;
}

void sub_5548(unknown uParam0)
{
    return;
}

void sub_5643(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_5675( ref (uParam0^)[I] );
    }
    return;
}

void sub_5675(int iParam0)
{
    sub_5342( iParam0->_fU0 );
    iParam0->_fU172 = 0;
    return;
}

void sub_5734(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_5767( (uParam0^)[I] );
    }
    return;
}

void sub_5767(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_5943()
{
    sub_724( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_724( "CCB", "Stopping the Stadium_Media context...", 0 );
    END_CONTEXT( "Stadium_Media" );
    return;
}

void sub_6114(unknown uParam0)
{
    vector vVar3;
    unknown uVar6;
    int iVar7;
    string sVar8;
    unknown uVar9;

    sub_6138( "P_LOAD_AREA" );
    vVar3 = {g_U2138[uParam0]};
    uVar6 = g_U2256[uParam0];
    iVar7 = -1;
    switch (uParam0)
    {
        case 2:
        case 21:
        iVar7 = GET_HASH_KEY( ref g_U2460 );
        sVar8 = "Int_Bsmt_01";
        break;
        case 3:
        case 22:
        iVar7 = GET_HASH_KEY( "Room_Hallway_01" );
        sVar8 = "Int_Bsmt_02";
        break;
        case 4:
        case 23:
        iVar7 = GET_HASH_KEY( "Room_Staircase_02" );
        sVar8 = "Int_Bsmt_03";
        break;
        case 5:
        case 24:
        iVar7 = GET_HASH_KEY( ref g_U2484 );
        sVar8 = "int_store_00";
        break;
        case 9:
        case 27:
        iVar7 = GET_HASH_KEY( ref g_U2548 );
        sVar8 = "int_Trophy_01";
        break;
        case 10:
        vVar3 = {-97.16455000, 22.49700000, 26.58807000};
        SET_PED_COORDS( sub_1132(), -2.36477500, 2.76315900, 1.17283500, 1 );
        SET_PED_HEADING( sub_1132(), uVar6 );
        LOAD_SCENE( -2.36477500, 2.76315900, 1.17283500 );
        break;
    }
    if (iVar7 == -1)
    {
        LOAD_SCENE( vVar3 );
    }
    else
    {
        uVar9 = GET_INTERIOR_FROM_NAME( sVar8, 0 );
        SET_INTERIOR_ACTIVE( uVar9, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar9, iVar7 );
    }
    if ((IS_PED_DEAD( sub_1132() )) == 0)
    {
        SET_PED_COORDS( sub_1132(), vVar3, 1 );
        SET_PED_HEADING( sub_1132(), uVar6 );
        FREEZE_PED_POSITION( sub_1132(), 0 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[uParam0], 1065353216, 0 );
    return;
}

void sub_6138(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_6887(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_724( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_7071( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_8148( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_8440( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_8787( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_8440( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_8787( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_8440( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_8787( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_9072( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_8787( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_9072( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_8787( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_9565( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_9726( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1132(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_724( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_7071(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_7103( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_7103(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_8148(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_8440(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_5548( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_8787(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_9072(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_5548( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_9565(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_9726(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_7103( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_9798( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_9798(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_11096()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;
    unknown uVar51;
    unknown uVar52;
    unknown uVar53;
    unknown uVar54;
    unknown uVar55;
    unknown uVar56;
    unknown uVar57;
    unknown uVar58;
    unknown uVar59;
    unknown uVar60;
    unknown uVar61;
    unknown uVar62;
    unknown uVar63;
    unknown uVar64;
    unknown uVar65;
    unknown uVar66;
    unknown uVar67;
    unknown uVar68;
    unknown uVar69;
    unknown uVar70;
    unknown uVar71;
    unknown uVar72;
    unknown uVar73;
    unknown uVar74;
    unknown uVar75;
    unknown uVar76;
    unknown uVar77;
    unknown uVar78;
    unknown uVar79;
    unknown uVar80;
    unknown uVar81;
    unknown uVar82;
    unknown uVar83;
    unknown uVar84;
    unknown uVar85;

    iVar2 = l_U125;
    if ((g_U855 == 4) || (g_U855 == 3))
    {
        sub_11133();
    }
    switch (l_U125)
    {
        case 0: break;
        case 1:
        sub_724( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_12009();
        sub_12805();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U125 = 2;
        sub_724( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_724( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_16377();
        sub_21646();
        l_U125 = 3;
        sub_724( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_25916( ref g_U2012 )) AND ((sub_25789( ref g_U2034 )) AND ((sub_25598( ref g_U1263 )) AND ((sub_25471( ref g_U1354 )) AND ((sub_25350( ref g_U1214 )) AND (sub_25230( ref g_U1069 )))))))
        {
            if ((NOT l_U77._fU0) AND (g_U854 >= 3))
            {
                l_U125 = 4;
                sub_724( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U125 = 6;
                sub_724( "SP", "eCheckpointState = CP_BRANCH_START_MEDIA_OR_STAIRWELL", 0 );
            }
        }
        break;
        case 4:
        sub_724( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        g_U3870 = 1;
        l_U127 = 0;
        if (g_U854 == 3)
        {
            sub_26298( 1, 0 );
            sub_28428( ref g_U3706, 1, 0 );
            sub_28593( ref g_U3706 );
        }
        if ((sub_30650( ref l_U77 )) == 0)
        {
            sub_9072( sub_1132(), 68019059, 50, 0, 0 );
            sub_8440( sub_1132(), 1194438308, 0, 50, 0 );
            l_U125 = 5;
            sub_724( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U125 = 6;
            sub_724( "SP", "eCheckpointState = CP_BRANCH_START_MEDIA_OR_STAIRWELL", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_1132() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_1132(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_1132(), 0, 0 ) )))
            {
                l_U125 = 6;
                sub_724( "GA", "eCheckpointState = CP_BRANCH_START_MEDIA_OR_STAIRWELL", 0 );
            }
        }
        break;
        case 6:
        if ((g_U854 == 4) || (g_U855 == 4))
        {
            l_U125 = 17;
            sub_724( "GA", "eCheckpointState = CP_STAIRWELL_START_DIRECTLY", 0 );
        }
        else
        {
            l_U125 = 7;
            sub_724( "GA", "eCheckpointState = CP_MEDIA_PRE_CREATE_ASSETS", 0 );
        }
        break;
        case 7:
        if (l_U126)
        {
            sub_31347();
            sub_31910();
            l_U126 = 0;
            return;
        }
        if (sub_33716( ref l_U778, "PressroomCS", ref l_U955, 1.00000000, 1, 0 ))
        {
            sub_36015();
            sub_37117();
            sub_37911();
            l_U125 = 8;
            sub_724( "GA", "eCheckpointState = CP_MEDIA_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 8:
        if (g_U3870)
        {
            l_U125 = 9;
            sub_724( "GA", "eCheckpointState = CP_ELEVATOR_NIS", 0 );
        }
        break;
        case 9:
        if (l_U126)
        {
            sub_44748( ref l_U1842, "MID_02B_STADIUM", 38257, 40009, 40825, 41056, 41154, 42454, 250, 0 );
            l_U1842._fU100 = g_U853;
            sub_45189( ref l_U1842, "int_Bsmt_02", "Room_Hallway_01" );
            if (l_U127)
            {
                l_U1842._fU4 = 2;
            }
            else
            {
                l_U1842._fU4 = 7;
                AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1", "", 0, -1, -1, -1082130432, 0 );
            }
        }
        if (sub_45329( ref l_U1842 ))
        {
            if (NOT l_U77._fU0)
            {
                g_U855 = 3;
                sub_47488( ref l_U77, g_U855, sub_1132(), g_U2138[3], g_U2256[3], g_U2296[3], g_U2336[3], 0 );
            }
            l_U125 = 10;
            sub_724( "GA", "eCheckpointState = CP_PRESS_ROOM_INVESTIGATION", 0 );
        }
        break;
        case 10:
        if (l_U126)
        {
            sub_51177( ref l_U1890, 10000 );
        }
        if (sub_2427( ref l_U1890 ))
        {
            if (l_U1889 < 2)
            {
                sub_51243( ref l_U1879 );
                sub_42749( 0, sub_1132(), "MAX", ref l_U1879, 2, 0 );
                sub_42749( 1, g_U4392, "PASSOS", ref l_U1879, 2, 0 );
                sub_42963( "SSTD_NFMR", ref l_U1879, 8, 1 );
                sub_51177( ref l_U1890, 10000 );
                l_U1889++;
            }
        }
        if (sub_51409( ref l_U192, 0 ))
        {
            if (sub_51561( l_U1879 ))
            {
                sub_51727( ref l_U1879, 0 );
            }
            AUDIO_MUSIC_PLAY_ONESHOT();
            SET_CAM_VIEW_MODE( 1 );
            sub_51834();
            sub_51177( ref l_U693, 25072 );
            sub_51177( ref l_U702, 15000 );
            sub_2964( ref l_U1890 );
        }
        if (sub_2427( ref l_U702 ))
        {
            AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_13", 0 );
        }
        if (sub_2427( ref l_U693 ))
        {
            AUDIO_MUSIC_PLAY_ONESHOT();
        }
        if (l_U777 == 0)
        {
            if (((IS_PED_DEAD( l_U724 )) == 0) AND ((DOES_PED_EXIST( l_U724 )) == 1))
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( l_U724, 56 )) == 3)
                {
                    PED_FINISH_ACTION_INTENTION( l_U724, 56 );
                    if (IS_SCRIPTEDFX_ENABLED() == 1)
                    {
                        sub_724( "SP", "Starting Image FX Bullet Cam", 0 );
                        l_U776 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
                        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
                        SETUP_BULLET_CAMERA_ANIM_SCENE( l_U776, l_U724, l_U724 );
                    }
                    l_U777 = 1;
                }
            }
        }
        if (NOT l_U692)
        {
            if (sub_52420())
            {
                sub_52484();
                l_U692 = 1;
            }
        }
        if ((NOT l_U740._fU68) AND (l_U192._fU64))
        {
            if (NOT (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U724, ref l_U740._fU0 )))
            {
                l_U740._fU68 = 1;
                sub_6138( "UNFREEZING CHAIR" );
                FREEZE_OBJECT_POSITION( l_U733, 0 );
            }
        }
        if (NOT l_U690)
        {
            if (sub_52769())
            {
                sub_724( "GA", "Player interrupted interrogation with shooting.", 0 );
                l_U690 = 1;
                sub_52976();
                sub_53073( ref g_U4392, sub_53016( sub_1132() ), 48, 1000 );
                l_U1274 = 1;
                sub_51177( ref l_U761, l_U770 );
                sub_2171( ref l_U693, 1000, 1, 0 );
                while ((NOT (IS_PED_DEAD( g_U4392 ))) AND (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    if ((IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED()) AND (IS_PED_DEAD( l_U724 )))
                    {
                        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                    }
                    WAIT( 0 );
                }
                sub_53232();
            }
        }
        if ((IS_PED_DEAD( g_U4392 )) AND (NOT l_U1348))
        {
            l_U1348 = 1;
            sub_52976();
            sub_53551( l_U724 );
        }
        if (l_U1274)
        {
            if (sub_2427( ref l_U761 ))
            {
                l_U125 = 11;
                sub_724( "GA", "eCheckpointState = CP_NIS_CS_ENTER_PRESS_ROOM", 0 );
                l_U126 = 1;
                return;
            }
        }
        if (sub_53767())
        {
            sub_724( "SA", "Interrogation sequence is finished.", 0 );
            l_U125 = 11;
            sub_724( "GA", "eCheckpointState = CP_NIS_CS_ENTER_PRESS_ROOM", 0 );
            l_U126 = 1;
            return;
        }
        if ((NOT l_U659) AND (l_U1274))
        {
            if (NOT IS_BULLET_CAMERA_ACTIVE())
            {
                sub_54037();
            }
            l_U659 = 1;
        }
        if (sub_54242( ref l_U277, 0 ))
        {
            l_U125 = 11;
            sub_724( "GA", "eCheckpointState = CP_NIS_CS_ENTER_PRESS_ROOM", 0 );
        }
        break;
        case 11:
        if (l_U126)
        {
            sub_54568();
            if (NOT l_U690)
            {
                WAIT( 0 );
                l_U690 = 1;
                sub_52976();
                sub_53073( ref g_U4392, sub_53016( sub_1132() ), 48, 1000 );
                sub_53232();
            }
        }
        if (sub_2427( ref l_U1579 ))
        {
            sub_51243( ref uVar3 );
            sub_724( "MF", "Playing Spech: SSTD_SLAB", 0 );
            sub_42749( 1, sub_1132(), "MAX", ref uVar3, 2, 0 );
            sub_42749( 0, g_U4392, "PASSOS", ref uVar3, 2, 0 );
            sub_42963( "SSTD_SLAB", ref uVar3, 8, 1 );
        }
        if (sub_2427( ref l_U1588 ))
        {
            sub_51177( ref l_U1588, 1000 );
            SHAKE_CAM( l_U1539._fU0, sub_55639(), 0.25000000 );
        }
        if (sub_57317( ref l_U1539, 1 ))
        {
            sub_55185( sub_1132(), 1 );
            if ((sub_54867( "Y", "Less", 48.30000000 )) AND (sub_54867( "Y", "Greater", 45.00000000 )))
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1132() );
                sub_42178( sub_1132(), 95.98611000, 43.29938000, 2.80370200, 220.00000000 );
            }
            sub_57567( 0, 0, 0, 0, 0, 0 );
            sub_47073( 1, 1 );
            SET_PLAYER_FORCED_AIM( sub_1154(), 0, 0 );
            sub_51177( ref l_U1570, 1500 );
            sub_51177( ref l_U1597, 1500 );
            l_U125 = 12;
            sub_724( "GA", "eCheckpointState = CP_PRESS_ROOM_FIGHT", 0 );
        }
        break;
        case 12:
        if (l_U126)
        {
            sub_724( "[SA]", "Entering state STATE_PRESS_ROOM_FIGHT", "[STATE]" );
            sub_57844();
            sub_57914();
            sub_57997();
            sub_51177( ref l_U1909, 10000 );
        }
        if (IS_LAST_MAN_STANDING_ACTIVE())
        {
            if (l_U1352 == 0)
            {
                sub_724( "NS", "Player is in LMS, make Passos fire blanks", 0 );
                if (NOT (IS_PED_DEAD( g_U4392 )))
                {
                    SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( g_U4392, 0, 0 ), 100 );
                }
                l_U1352 = 1;
            }
        }
        else if (l_U1352 == 1)
        {
            sub_724( "NS", "Player is not in LMS, make Passos not fire blanks", 0 );
            if (NOT (IS_PED_DEAD( g_U4392 )))
            {
                SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( g_U4392, 0, 0 ), 0 );
            }
            l_U1352 = 0;
        }
        if (sub_2061( ref l_U1909 ))
        {
            if (sub_58406( 1 ))
            {
                sub_2964( ref l_U1909 );
                sub_2307( ref l_U1909 );
            }
            else if (NOT (IS_ANY_SPEECH_PLAYING( g_U4392 )))
            {
                if ((l_U1918 < 2) AND (sub_2427( ref l_U1909 )))
                {
                    sub_51243( ref l_U1899 );
                    sub_42749( 1, g_U4392, "PASSOS", ref l_U1899, 2, 0 );
                    sub_42963( "SSTD_MRNH", ref l_U1899, 7, 1 );
                    sub_2964( ref l_U1909 );
                    sub_51177( ref l_U1909, 12000 );
                    l_U1918++;
                }
            }
        }
        if (NOT (sub_51561( l_U1921 )))
        {
            if ((IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT l_U1920))
            {
                l_U1920 = 1;
            }
            else if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (l_U1920))
            {
                l_U1920 = 0;
                sub_6138( "Chance to react to LMS here" );
                if ((sub_58786( 0, 3 )) == 0)
                {
                    sub_51243( ref l_U1921 );
                    sub_42749( 1, g_U4392, "PASSOS", ref l_U1921, 2, 0 );
                    sub_42963( "SSTD_PMPL", ref l_U1921, 7, 1 );
                }
            }
            else if (sub_58914( ref g_U4392, 54, 1 ))
            {
                sub_6138( "Chance to speak while shooting" );
                if ((sub_58786( 0, l_U1931 )) > 3)
                {
                    sub_51243( ref l_U1921 );
                    sub_42749( 1, g_U4392, "PASSOS", ref l_U1921, 2, 0 );
                    sub_42963( "SSTD_PSAE", ref l_U1921, 7, 1 );
                    l_U1931 = 0;
                }
                else
                {
                    l_U1931++;
                }
            };;;
        }
        if (sub_2427( ref l_U1570 ))
        {
            sub_59221( ref l_U778[0], 0 );
            sub_59578( ref l_U778, 1, -1 );
            sub_1704( ref l_U778, 0, 1, -1 );
        }
        if (sub_2427( ref l_U1597 ))
        {
            sub_36927( ref l_U778, 0, 0, -1 );
        }
        if (sub_54336( l_U586 ))
        {
            if ((IS_PED_DEAD( l_U1606 )) || (l_U1606 == nil))
            {
                l_U1606 = sub_59829( ref l_U778 );
                RESET_PED_TETHERING( l_U1606 );
                sub_59940( ref l_U1606, l_U608 );
            }
        }
        else if (l_U1606 != nil)
        {
            RESET_PED_TETHERING( l_U1606 );
            sub_59940( ref l_U1606, l_U607 );
            l_U1606 = nil;
        }
        if ((NOT l_U740._fU68) AND (l_U192._fU64))
        {
            if (NOT (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U724, ref l_U740._fU0 )))
            {
                l_U740._fU68 = 1;
                sub_6138( "UNFREEZING CHAIR" );
                FREEZE_OBJECT_POSITION( l_U733, 0 );
            }
        }
        if ((NOT l_U690) AND (IS_PED_DEAD( l_U724 )))
        {
            sub_724( "SA", "Interrogation CS died!", 0 );
            l_U690 = 1;
            sub_52976();
        }
        if (sub_51451( sub_1132(), l_U961 ))
        {
            sub_60223();
            l_U125 = 13;
            sub_724( "GA", "eCheckpointState = CP_NIS_ABANDON_PASSOS_IN_PRESS_ROOM_FAIL", 0 );
            l_U126 = 1;
            return;
        }
        if ((sub_60970( ref l_U1672, l_U1607, 0 )) || ((l_U1607 == nil) || ((l_U1607 != nil) AND (IS_PED_DEAD( l_U1607 )))))
        {
            if ((sub_58929( g_U4392, 56 )) != 3)
            {
                if ((sub_61157( ref l_U778 )) > 1)
                {
                    sub_6138( "LOOKING FOR A TARGET FOR PASSOS" );
                }
                l_U1607 = sub_61281();
                if (l_U1607 != nil)
                {
                    if (NOT (IS_PED_DEAD( g_U4392 )))
                    {
                        sub_6138( "GIVING PASSOS A NEW TARGET" );
                        if (l_U1813)
                        {
                            l_U1813 = 0;
                            sub_61697( g_U4392, 56, 1000 );
                        }
                        sub_61758( ref g_U4392, l_U1607 );
                        TASK_SHOOT_AT_PED( g_U4392, l_U1607, -1, -256437761, 1, 0, 0 );
                    }
                }
                else if (NOT l_U1813)
                {
                    sub_6138( "NO VALID TARGETS FOR PASSOS" );
                    sub_60280( ref g_U4392 );
                    sub_61697( g_U4392, 55, 5000 );
                    l_U1813 = 1;
                }
            }
        }
        if ((sub_61157( ref l_U778 )) < 2)
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( g_U4392, 0, 0 ) )) AND (NOT (IS_PED_DEAD( g_U4392 ))))
            {
                SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( g_U4392, 0, 0 ), 100 );
            }
        }
        if ((sub_61157( ref l_U778 )) < 1)
        {
            sub_61998();
            sub_51177( ref l_U1284, 2500 );
            AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_2", "", 0, 6000, 10000, -1082130432, 0 );
            AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_15", 0 );
            sub_5943();
            sub_58995( ref g_U4392, 47 );
            sub_58995( ref g_U4392, 48 );
            sub_58995( ref g_U4392, 49 );
            sub_58995( ref g_U4392, 55 );
            l_U125 = 14;
            sub_724( "GA", "eCheckpointState = CP_HALLWAY", 0 );
        }
        break;
        case 13: break;
        case 14:
        sub_62295( g_U4392, ref l_U1814, ref l_U1816, ref l_U1815, ref l_U1826, ref l_U1817 );
        sub_63623();
        if (l_U1302 == 1)
        {
            if (NOT sub_63704())
            {
                sub_63770();
            }
        }
        if ((sub_2427( ref l_U1284 )) AND (NOT (IS_ANY_SPEECH_PLAYING( g_U4392 ))))
        {
            sub_724( "MF", "Playing Spech: SSTD_KTFA", 0 );
            sub_42749( 1, sub_1132(), "MAX", ref uVar13, 2, 0 );
            sub_42749( 0, g_U4392, "PASSOS", ref uVar13, 2, 0 );
            sub_42963( "SSTD_KTFA", ref uVar13, 8, 1 );
            l_U1302 = 1;
        }
        if ((sub_54867( "Y", "Greater", 21.50000000 )) AND ((sub_2427( ref l_U1275 )) AND (NOT (IS_ANY_SPEECH_PLAYING( sub_1132() )))))
        {
            if ((NOT (IS_PED_DEAD( g_U4392 ))) AND (NOT (IS_PED_DEAD( sub_1132() ))))
            {
                sub_51243( ref l_U1146 );
                sub_42749( 0, sub_1132(), "MAX", ref l_U1146, 2, 0 );
                sub_42749( 1, g_U4392, "PASSOS", ref l_U1146, 2, 0 );
                sub_42963( "SSTD_PRPF", ref l_U1146, 8, 1 );
            }
        }
        if ((NOT l_U690) AND (IS_PED_DEAD( l_U724 )))
        {
            sub_724( "SA", "Interrogation CS died!", 0 );
            l_U690 = 1;
            sub_52976();
        }
        if ((sub_51409( ref l_U150, 0 )) == 1)
        {
            sub_64404();
        }
        if ((sub_51409( ref l_U1108, 0 )) == 1)
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
            sub_64544();
            sub_51177( ref l_U1530, 4000 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
            l_U1302 = 0;
        }
        if (sub_65318( ref l_U544, l_U1129, 0 ))
        {
            AUDIO_MUSIC_PLAY_ONESHOT();
            sub_724( "MF", "Playing Spech: SSTD_STFB", 0 );
            sub_42749( 1, sub_1132(), "MAX", ref uVar23, 2, 0 );
            sub_42749( 0, g_U4392, "PASSOS", ref uVar23, 2, 0 );
            sub_42963( "SSTD_YATE", ref uVar23, 8, 1 );
        }
        if ((sub_54867( "Y", "Less", -2.75000000 )) AND (((sub_61414( sub_1132(), l_U1129, 0 )) > 4) AND ((NOT (IS_PLAYER_DOING_MELEE_GRAPPLE( sub_1154() ))) AND ((NOT (IS_PED_DEAD( g_U4392 ))) AND ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (NOT (IS_PED_DEAD( l_U1129 ))))))))
        {
            if (sub_2427( ref l_U1530 ))
            {
                sub_65641();
                l_U125 = 15;
                sub_724( "GA", "eCheckpointState = CP_NIS_PASSOS_SHOOTS_DIRTY_CS", 0 );
                l_U126 = 1;
                return;
            }
        }
        if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND ((l_U1108._fU64) AND (IS_PED_DEAD( l_U1129 ))))
        {
            if (NOT l_U1350)
            {
                sub_46196( 1, 0, 0, 1 );
                sub_66679();
                l_U125 = 16;
                sub_724( "GA", "eCheckpointState = CP_NIS_PASSOS_MOVE_DOWN_HALLWAY", 0 );
                l_U126 = 1;
                return;
            }
        }
        if ((NOT (IS_ANY_SPEECH_PLAYING( sub_1132() ))) AND (NOT l_U1195))
        {
            if ((sub_54867( "Y", "Greater", 21.50000000 )) AND (sub_58914( ref g_U4392, 37, 1 )))
            {
                sub_51243( ref l_U1166 );
                sub_42749( 0, sub_1132(), "MAX", ref l_U1166, 2, 0 );
                sub_42749( 1, g_U4392, "PASSOS", ref l_U1166, 2, 0 );
                sub_42963( "SSTD_PRPJ", ref l_U1166, 8, 1 );
                sub_51177( ref l_U1186, 15000 );
                l_U1195 = 1;
            }
        }
        if ((NOT sub_63704()) AND (l_U1195))
        {
            if ((IS_PLAYER_SHOOTDODGING()) AND (NOT l_U1919))
            {
                l_U1919 = 1;
            }
            else if ((NOT IS_PLAYER_SHOOTDODGING()) AND (l_U1919))
            {
                l_U1919 = 0;
                if ((sub_58786( 0, 2 )) == 0)
                {
                    sub_42749( 1, g_U4392, "PASSOS", ref uVar33, 2, 0 );
                    sub_42963( "SSTD_SDNC", ref uVar33, 7, 1 );
                    sub_6138( "PLAYING SSTD_SDNC" );
                }
            }
            else if ((NOT (IS_PED_IN_CROSSHAIR_CYLINDER( g_U4392, 3, 10000, 0, -1082130432 ))) AND ((NOT (IS_BULLET_TIME_ACTIVE( 1 ))) AND (((sub_58786( 0, 2 )) == 0) AND (sub_58406( 1 )))))
            {
                sub_42749( 1, g_U4392, "PASSOS", ref uVar43, 2, 0 );
                sub_42963( "SSTD_PSOC", ref uVar43, 7, 1 );
                sub_6138( "PLAYING SSTD_PSOC" );
            };;;
        }
        if (sub_51409( ref l_U961, 0 ))
        {
            sub_2964( ref l_U1186 );
            l_U1195 = 0;
        }
        if (NOT sub_63704())
        {
            if (sub_2427( ref l_U1186 ))
            {
                sub_51243( ref l_U1166 );
                sub_42749( 0, sub_1132(), "MAX", ref l_U1166, 2, 0 );
                sub_42749( 1, g_U4392, "PASSOS", ref l_U1166, 2, 0 );
                sub_42963( "SSTD_PRPJ", ref l_U1166, 8, 1 );
                sub_51177( ref l_U1186, 15000 );
            }
        }
        if (l_U1302 == 1)
        {
            if (NOT sub_63704())
            {
                sub_63770();
            }
        }
        if (sub_51409( ref l_U502, 0 ))
        {
            sub_61697( g_U4392, 49, 1000 );
            l_U1195 = 0;
        }
        if (sub_58914( ref g_U4392, 53, 1 ))
        {
            sub_4021( -1324066065, 0 );
            sub_4229( -1324066065, ref g_U1263 );
            sub_42178( g_U4392, 115.22000000, -22.06759000, 4.60000000, l_U1206 );
            sub_64912( g_U4392, 1496659887, "Passos" );
            ISEQ_START( 1496659887 );
            sub_42178( g_U4392, 115.22000000, -22.06759000, 4.60000000, l_U1206 );
        }
        sub_69523();
        if (sub_58914( ref g_U4392, 46, 1 ))
        {
            sub_51243( ref l_U1156 );
            sub_42749( 0, sub_1132(), "MAX", ref l_U1156, 2, 0 );
            sub_42749( 1, g_U4392, "PASSOS", ref l_U1156, 2, 0 );
            sub_42963( "SSTD_PRPK", ref l_U1156, 8, 1 );
        }
        if (sub_58914( ref g_U4392, 45, 1 ))
        {
            sub_6138( "PLAY PASSOS HALLWAY DIALOGUE" );
            sub_69880();
            sub_69990( g_U4392, sub_1132() );
            sub_51177( ref l_U1196, GET_RANDOM_INT_IN_RANGE( 5000, 10000 ) );
            l_U1195 = 1;
        }
        if (sub_2427( ref l_U1196 ))
        {
            sub_6138( "IsTimerDone(tPassosHallwayIdle)" );
            if (l_U1205)
            {
                sub_61697( g_U4392, 50, 1000 );
                sub_69880();
            }
            else
            {
                sub_61697( g_U4392, 48, 1000 );
            }
            l_U1205 = NOT l_U1205;
            sub_51177( ref l_U1196, GET_RANDOM_INT_IN_RANGE( 5000, 10000 ) );
        }
        if (sub_51409( ref l_U171, 0 ))
        {
            l_U125 = 18;
            sub_724( "GA", "eCheckpointState = CP_STAIRWELL", 0 );
        }
        break;
        case 15:
        if ((sub_58929( g_U4392, 57 )) == 1)
        {
            sub_42749( 1, g_U4392, "PASSOS", ref uVar53, 2, 0 );
            sub_42963( "SSTD_SEMH", ref uVar53, 7, 1 );
        }
        if ((sub_58914( ref g_U4392, 58, 1 )) || (sub_58914( ref g_U4392, 57, 1 )))
        {
            SET_PED_SHOOTS_AT_COORD( g_U4392, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1129, 65488, 0, 0, 0.50000000 ) );
        }
        if (sub_2427( ref l_U1238 ))
        {
            sub_55539( ref l_U1207 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( -4.54356400, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -6.25519200, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            POINT_CAM_AT_PED( l_U1207._fU0, l_U1129, 0.00000000, 0.00000000, 0.00000000, 1 );
            sub_51177( ref l_U1247, 10 );
            sub_51177( ref l_U1256, 500 );
            sub_51177( ref l_U1265, 600 );
            if (NOT (IS_PED_DEAD( l_U1129 )))
            {
                SET_PED_INVINCIBLE( l_U1129, 0 );
            }
        }
        if (l_U1207._fU32)
        {
            if (sub_2427( ref l_U1247 ))
            {
                uVar63 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_CAM_ROT( l_U1207._fU0 )};
                STOP_CAM_POINTING( l_U1207._fU0 );
                SET_CAM_ROT( l_U1207._fU0, uVar63 );
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U4392, 13502, 0, 0, 0.10000000 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1129, 65488, 0, 0, 0 ), 100, 0, 68019059, 0 );
            }
            if (sub_2427( ref l_U1256 ))
            {
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U4392, 13502, 0, 0, 0.10000000 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1129, 65488, 0, 0, 0 ), 100, 1, 68019059, 0 );
            }
            if (sub_2427( ref l_U1265 ))
            {
                if (NOT (IS_PED_DEAD( l_U1129 )))
                {
                    sub_53551( l_U1129 );
                }
            }
        }
        if (sub_57317( ref l_U1207, 1 ))
        {
            if (NOT (IS_PED_DEAD( g_U4392 )))
            {
                SET_PED_INVINCIBLE( g_U4392, 0 );
            }
            sub_66679();
            l_U125 = 16;
            sub_724( "GA", "eCheckpointState = CP_NIS_PASSOS_MOVE_DOWN_HALLWAY", 0 );
        }
        break;
        case 16:
        if ((NOT l_U1869) AND (CAMERA_ANIMATED_CURRENT_TIME() >= 6887))
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( -4.54356400, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -6.25519200, 1065353216, 0 );
            sub_724( "kja", "CP_NIS_PASSOS_MOVE_DOWN_HALLWAY - DID THE CAMERA FLY AWAY AT THIS POINT?", 0 );
            CAMERA_ANIMATED_STOP( 1100, 1 );
            sub_51177( ref l_U1870, 1700 );
            l_U1869 = 1;
        }
        if (sub_2427( ref l_U1870 ))
        {
            sub_54654( g_U4392, "/Global/S_STAD_PAS_HAL/SEQ_START/PASSOS_VIG_25_26/EXIT_HALLWAY_IDLE" );
            sub_41473( g_U4392, 107.14460000, -17.06880000, 2.80250000, 270.00000000 );
            l_U502._fU64 = 0;
            sub_47073( 1, 1 );
            l_U1302 = 1;
            ISEQ_UNREGISTER_ENTITY( 1743875163, "s_stad_inter_cs" );
            sub_5342( l_U724 );
            sub_5643( ref l_U778 );
            sub_5431( l_U733 );
            sub_4229( 1743875163, ref g_U1263 );
            sub_4229( 1708899639, ref g_U1263 );
            sub_4229( 1269878088, ref g_U1263 );
            sub_4229( -1324066065, ref g_U1263 );
            sub_71446( ref l_U113, ref g_U1069 );
            sub_71741( "LEVEL_S_STAD_CP_02", ref g_U1354 );
            sub_71741( "LEVEL_S_STAD_CP_03", ref g_U1354 );
            sub_71741( "PAS_INT", ref g_U1354 );
            sub_71741( "DAM_DEAD", ref g_U1354 );
            l_U125 = 14;
            sub_724( "GA", "eCheckpointState = CP_HALLWAY", 0 );
        }
        break;
        case 17:
        if (l_U126)
        {
            sub_64404();
            sub_5342( g_U4392 );
            sub_31992( ref g_U4393, 115.22000000, -22.06759000, 4.60000000, l_U1206, g_U2376, 26, 6, 0, 0, 0 );
            g_U4392 = sub_34097( ref g_U4392, ref g_U4393, 1, 0, 0 );
            sub_42096( ref g_U4392, "Pass_Stad_Hat" );
            if ((IS_PED_DEAD( g_U4392 )) == 0)
            {
                SET_ROOM_FOR_PED_BY_NAME( g_U4392, "Room_Staircase_02" );
                SET_PED_SWEAT( g_U4392, 0.00000000, 0.00000000 );
                SET_PED_CAN_TRIGGER_BULLET_CAM( g_U4392, 1 );
                SET_BULLET_CAM_PREF( g_U4392, "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                SET_PED_VALIDATE_BULLET_CAM_HIT( g_U4392, 0 );
                GIVE_WEAPON_TO_PED_HAND( g_U4392, 68019059, 25000, 0 );
                SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U4392, 0 );
                SET_PED_AS_ONE_SHOT_KILL( g_U4392, 1 );
                SET_PED_GORE_AS_ALLY( g_U4392 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4392, 1 );
                SET_PED_CAN_INITIATE_BULLET_CAM( g_U4392, 1 );
                SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4392, 1 );
                SET_PED_CAN_INTERACT_WITH_DOORS( g_U4392, 0 );
                SET_PED_CAN_PUSH_PLAYER( g_U4392, 1 );
                SET_PED_RESIST_TO_OBJECT_COLLISION( g_U4392, 1 );
                "[doubled result, dropped if not asigned]";
                "[doubled result, dropped if not asigned]";
                SET_CAN_AI_KICK_THROUGH_CORPSES( g_U4392, 1 );
                "[doubled result, dropped if not asigned]";
                "[doubled result, dropped if not asigned]";
            }
            if (NOT (IS_PED_DEAD( g_U4392 )))
            {
                sub_42178( g_U4392, 115.22000000, -22.06759000, 4.60000000, l_U1206 );
                sub_64912( g_U4392, 1496659887, "Passos" );
                ISEQ_START( 1496659887 );
                sub_54654( g_U4392, "/Global/S_STAD_PAS_STAIRS/SEQ_START/TO_STAIRWELL_3/STAIRWELL_2_TO_3" );
                sub_42178( g_U4392, 115.22000000, -22.06759000, 4.60000000, l_U1206 );
            }
        }
        if (ISEQ_QUERY_ENTITY_STATE( 1496659887, "Passos", 3 ))
        {
            sub_41473( sub_1132(), g_U2138[4], g_U2256[4] );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2296[4], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2336[4], 1065353216, 0 );
            SET_PLAYER_GLOBAL_COMBAT_TIMER_STATE( 0 );
            if ((g_U855 != 4) || (NOT l_U77._fU0))
            {
                g_U855 = 4;
                sub_47488( ref l_U77, g_U855, sub_1132(), g_U2138[4], g_U2256[4], g_U2296[4], g_U2336[4], 0 );
            }
            sub_72868( ref g_U888[5] );
            l_U125 = 18;
            sub_724( "GA", "eCheckpointState = CP_STAIRWELL", 0 );
        }
        else
        {
            sub_724( "GA", "Waiting for S_STAD_PAS_STAIRS to start.", 0 );
        }
        break;
        case 18:
        if (l_U126)
        {
            sub_724( "[SA]", "Entering state STATE_STAIRWELL", "[STATE]" );
            sub_42178( g_U4392, 115.22000000, -22.06759000, 4.60000000, l_U1206 );
            sub_54654( g_U4392, "/Global/S_STAD_PAS_STAIRS/SEQ_START/TO_STAIRWELL_3/STAIRWELL_2_TO_3" );
            sub_2171( ref l_U630, 1500, 1, 0 );
            sub_2307( ref l_U630 );
            sub_73211( ref l_U1196 );
            if (NOT (IS_PED_DEAD( g_U4392 )))
            {
                RESET_PED_TETHERING( g_U4392 );
            }
            l_U1519 = 1;
            sub_2171( ref l_U1520, 1000, 1, 0 );
            sub_2307( ref l_U1520 );
            l_U1302 = 1;
            if (NOT sub_42478())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
            sub_47073( 0, 1 );
        }
        if (sub_51409( ref l_U982, 0 ))
        {
            sub_5342( l_U1129 );
            sub_15622( ref g_U3150, 0 );
            sub_15622( ref g_U3157, 0 );
        }
        if (sub_58914( ref g_U4392, 56, 1 ))
        {
            l_U1195 = 1;
        }
        if ((NOT (IS_ANY_SPEECH_PLAYING( g_U4392 ))) AND (l_U1195))
        {
            if ((IS_PLAYER_SHOOTDODGING()) AND (NOT l_U1919))
            {
                l_U1919 = 1;
            }
            else if ((NOT IS_PLAYER_SHOOTDODGING()) AND (l_U1919))
            {
                l_U1919 = 0;
                if ((sub_58786( 0, 2 )) == 0)
                {
                    sub_42749( 1, g_U4392, "PASSOS", ref uVar66, 2, 0 );
                    sub_42963( "SSTD_SDNC", ref uVar66, 7, 1 );
                    sub_6138( "PLAYING SSTD_SDNC" );
                }
            }
            else if ((NOT (IS_PED_IN_CROSSHAIR_CYLINDER( g_U4392, 1, 10000, 0, -1082130432 ))) AND ((NOT (IS_BULLET_TIME_ACTIVE( 1 ))) AND (((sub_58786( 0, 2 )) == 0) AND (sub_58406( 1 )))))
            {
                sub_42749( 1, g_U4392, "PASSOS", ref uVar76, 2, 0 );
                sub_42963( "SSTD_PSOC", ref uVar76, 7, 1 );
                sub_6138( "PLAYING SSTD_PSOC" );
            };;;
        }
        if (sub_51409( ref l_U1045, 0 ))
        {
            sub_73726( ref g_U3164, 0 );
            sub_73726( ref g_U3171, 0 );
        }
        if (sub_51409( ref l_U481, 0 ))
        {
            if (g_U855 != 4)
            {
                sub_73829();
            }
            sub_74218();
            sub_72868( ref g_U888[5] );
            SET_PLAYER_GLOBAL_COMBAT_TIMER_STATE( 0 );
        }
        if ((sub_54336( l_U523 )) == 1)
        {
            sub_69523();
        }
        if (l_U1302 == 1)
        {
            if (NOT sub_63704())
            {
                sub_63770();
            }
        }
        if ((sub_2427( ref l_U630 )) == 1)
        {
            sub_74876();
        }
        if (sub_74960( ref l_U609, ref l_U129, 0, 0 ))
        {
            g_U3875 = 1;
            l_U125 = 19;
            sub_724( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 19:
        if ((g_U855 == 5) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U125 = 0;
            sub_724( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U125 != iVar2)
    {
        l_U126 = 1;
    }
    else
    {
        l_U126 = 0;
    }
    return;
}

void sub_11133()
{
    boolean bVar2;

    if (NOT (IS_PED_DEAD( g_U4392 )))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( g_U4392, 51 )) == 3)
        {
            if ((NOT (IS_PED_DEAD( sub_1132() ))) AND ((NOT (IS_PED_DEAD( g_U4392 ))) AND (NOT l_U775)))
            {
                l_U775 = 1;
                bVar2 = false;
                if ((l_U125 == 12) || (l_U125 == 10))
                {
                    if ((IS_PED_DEAD( l_U724 )) AND (sub_11251()))
                    {
                        ;
                    }
                }
                if (bVar2)
                {
                    sub_724( "SA", "UPDATE_PASSOS_HEADTRACKING() - Passos headtracking dying CS.", 0 );
                    TASK_LOOK_AT_PED( g_U4392, l_U724, -1, 0 );
                }
                else
                {
                    sub_724( "SA", "UPDATE_PASSOS_HEADTRACKING() - Activating headtracking.", 0 );
                    SET_PED_PRIMARY_LOOKAT( g_U4392, sub_1132() );
                }
            }
        }
        else if (l_U775)
        {
            if (NOT (IS_PED_DEAD( g_U4392 )))
            {
                sub_724( "SA", "UPDATE_PASSOS_HEADTRACKING() - Deactivating headtracking.", 0 );
                l_U775 = 0;
                CLEAR_PED_PRIMARY_LOOKAT( g_U4392 );
            }
        }
    }
    return;
}

int sub_11251()
{
    vector vVar2;
    vector vVar5;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    float fVar15;

    vVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1132() )};
    vVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U4392 )};
    uVar8 = {vVar2 - vVar5};
    uVar11 = SQRT( (uVar8._fU0 * uVar8._fU0) + (uVar8._fU4 * uVar8._fU4) );
    uVar12._fU0 = uVar8._fU0 / uVar11;
    uVar12._fU4 = uVar8._fU4 / uVar11;
    uVar12._fU8 = 0.00000000;
    fVar15 = GET_HEADING_FROM_VECTOR_2D( uVar12._fU0, uVar12._fU4 );
    if ((fVar15 < 35.00000000) || (fVar15 > 300.00000000))
    {
        return 0;
        break;
    }
    return 1;
}

void sub_12009()
{
    sub_724( "SP", "P_INITIALIZE_SCRIPT_DATA", 0 );
    l_U126 = 1;
    sub_12073( "SSTDAUD" );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    l_U690 = 0;
    l_U777 = 0;
    l_U774 = 0;
    l_U691 = 0;
    l_U692 = 0;
    l_U1274 = 0;
    l_U1345 = 0;
    l_U1346 = 0;
    l_U1347 = 0;
    l_U1348 = 0;
    l_U1349 = 0;
    l_U1350 = 0;
    l_U1351 = 0;
    l_U1302 = 0;
    l_U1519 = 0;
    sub_2964( ref l_U1520 );
    l_U1529 = 0;
    l_U1356[0]._fU4 = "CONTRAST_ZOOM_FAST";
    l_U1356[0]._fU16 = 800;
    l_U1356[1]._fU4 = "INTERLACE_CONTRAST_ZOOM_FAST";
    l_U1356[1]._fU16 = 800;
    l_U1356[2]._fU4 = "TRIPLE_INTERLACE_MOVE_RIGHT";
    l_U1356[2]._fU16 = 1500;
    l_U1356[3]._fU4 = "TRIPLE_INTERLACE_HOLD";
    l_U1356[3]._fU16 = 1808;
    l_U1356[4]._fU4 = "TRIPLE_MOVE_RIGHT_FAST";
    l_U1356[4]._fU16 = 1500;
    l_U1356[5]._fU4 = "TRIPLE_IMAGE_MASK_L_FAST";
    l_U1356[5]._fU16 = 920;
    sub_2171( ref l_U1530, 2000, 1, 0 );
    sub_2171( ref l_U1570, 1500, 1, 0 );
    sub_2171( ref l_U1186, 15000, 1, 0 );
    l_U1195 = 0;
    l_U659 = 0;
    l_U1606 = nil;
    l_U1607 = nil;
    l_U1813 = 0;
    l_U1814 = 0;
    l_U1815 = 0;
    l_U1816 = 0;
    l_U1826 = 0;
    sub_2171( ref l_U693, 1000, 1, 0 );
    sub_2171( ref l_U702, 1000, 1, 0 );
    l_U1869 = 0;
    sub_2171( ref l_U1870, 1100, 1, 0 );
    l_U1889 = 0;
    sub_2171( ref l_U1890, 10000, 1, 0 );
    l_U1918 = 0;
    l_U1919 = 0;
    l_U1920 = 0;
    l_U1931 = 0;
    l_U1932 = 0;
    l_U1352 = 0;
    return;
}

void sub_12073(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_12093();
    return;
}

void sub_12093()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_12805()
{
    sub_724( "SP", "P_SET_STATIC_DATA", 0 );
    sub_12925( ref l_U192, "TRIGGER_ENTERED_PRESS_ROOM", 96.27000000, 37.58000000, 2.52000000, 7.13000000, 21.62000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U213[0], "TRIGGER_PRESSROOM_CS", 101.98000000, 39.02000000, 2.52000000, 3.60000000, 10.31000000, 4.00000000, 0.00000000, 0.00000000, 22.49000000, 1 );
    sub_12925( ref l_U213[1], "TRIGGER_PRESSROOM_CS_1", 101.06000000, 30.11000000, 2.52000000, 3.60000000, 14.50000000, 4.00000000, 0.00000000, 0.00000000, -0.63998900, 1 );
    sub_12925( ref l_U213[2], "TRIGGER_PRESSROOM_CS_2", 99.74000000, 44.46000000, 2.52000000, 2.70000000, 2.90000000, 4.00000000, 0.00000000, 0.00000000, -0.63998900, 1 );
    sub_13263( ref l_U277, ref l_U213 );
    sub_12925( ref l_U418, "TRIGGER_GTFO", 100.24000000, 37.65000000, 2.52000000, 2.70000000, 2.90000000, 4.00000000, 0.00000000, 0.00000000, -0.63998900, 1 );
    sub_12925( ref l_U439, "TRIGGER_GTFO2", 98.85000000, 36.47000000, 2.52000000, 1.07000000, 1.61000000, 4.00000000, 0.00000000, 0.00000000, -5.63999000, 1 );
    sub_12925( ref l_U460, "TRIGGER_PRESSROOM_EXIT", 109.51000000, 28.51000000, 2.64000000, 8.67000000, 11.79000000, 3.25000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U609, "TRIG_TOP_STAIRS", 110.46000000, -19.46000000, 9.18000000, 3.00000000, 3.04000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U129, "TRIGGER_PRACTICE_FINISHED", 108.80000000, -19.46000000, 9.18000000, 2.48000000, 3.04000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U150, "TRIGGER_GUNFIRE_SOUNDS", 109.17000000, 13.95000000, 2.76000000, 8.44000000, 16.58000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U171, "TRIGGER_GUNFIRE_DIALOGUE", 108.33000000, -19.54000000, 2.76000000, 4.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U961, "TRIGGER_PASSOS_ENTER_HALLWAY", 109.24000000, 20.78000000, 2.77000000, 8.44000000, 3.18000000, 3.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U982, "PASSOS_STAIRMOVE_01", 116.52000000, -24.71000000, 2.62000000, 12.92000000, 7.19000000, 2.36000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U1003, "PASSOS_STAIRMOVE_01B", 115.12000000, -21.56000000, 4.94000000, 12.92000000, 7.19000000, 8.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U1024, "PASSOS_STAIRMOVE_02", 112.44000000, -19.55000000, 5.38000000, 5.00000000, 3.00000000, 3.00000000, 0.00000000, 30.00000000, 0.00000000, 1 );
    sub_12925( ref l_U1045, "PASSOS_STAIRMOVE_03", 113.95000000, -24.09000000, 6.97000000, 5.00000000, 3.00000000, 3.00000000, 0.00000000, -30.00000000, 0.00000000, 1 );
    sub_12925( ref l_U1066, "PASSOS_STAIRMOVE_04", 112.44000000, -19.55000000, 8.64000000, 5.00000000, 3.00000000, 3.00000000, 0.00000000, 30.00000000, 0.00000000, 1 );
    sub_12925( ref l_U1087, "PASSOS_STAIRMOVE_05", 113.58000000, -21.71000000, 12.07000000, 22.35000000, 19.70000000, 2.57000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U481, "TRIGGER_STAIR_FIRST_PLATFORM", 115.37000000, -19.53000000, 4.68000000, 5.00000000, 3.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U1108, "TRIGGER_DIRTY_HALLWAY_CS", 109.24000000, 14.50000000, 2.77000000, 7.54000000, 1.62000000, 3.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U740, "TRIGGER_CHAIR", 98.70000000, 38.65000000, 2.76000000, 0.60000000, 0.60000000, 2.17000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U502, "TRIGGER_PASSOS_INTO_STAIRS", 108.88000000, -1.57000000, 2.77000000, 8.44000000, 3.60000000, 3.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U523, "TRIG_INSIDE_STAIRWELL", 111.84000000, -21.76000000, 2.33000000, 12.07000000, 7.51000000, 10.32000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U544, "TRIGGER_HALLWAYONESHOT", 111.99000000, 4.58000000, 2.75000000, 1.17000000, 2.40000000, 2.64000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U565, "TRIG_PASSOS_NO_SHOOT_ASSHOLE", 110.78000000, 4.70000000, 2.76000000, 4.00000000, 4.00000000, 2.75000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U1303, "Speech PGAR", 99.03000000, 26.60000000, 2.24000000, 9.12000000, 5.63000000, 4.21000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U1324, "Speech TAGP", 115.85000000, 4.48000000, 2.24000000, 4.83000000, 8.28000000, 4.21000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12925( ref l_U586, "TRIG_SIDE_ROOM", 99.33000000, 27.07000000, 2.53000000, 9.43000000, 6.22000000, 5.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15489( ref l_U607, "TETHER_MEDIA", 108.10000000, 37.44000000, 2.53000000, 14.50000000, 15.54000000, 5.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15489( ref l_U608, "TETHER_SIDE_ROOM", 99.33000000, 27.07000000, 2.53000000, 9.43000000, 6.22000000, 5.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15622( ref g_U3143, 1 );
    sub_12925( ref l_U1608[0], "TRIG_PAS_EXCLUSION_0", 100.00000000, 30.73000000, 2.61000000, 7.30000000, 7.38000000, 1.25000000, 0.00000000, 0.00000000, 45.00000000, 1 );
    sub_12925( ref l_U1608[1], "TRIG_PAS_EXCLUSION_1", 99.25000000, 42.87000000, 2.61000000, 9.20000000, 7.38000000, 1.25000000, 0.00000000, 0.00000000, 55.00000000, 1 );
    sub_12925( ref l_U1608[2], "TRIG_PAS_EXCLUSION_2", 99.09000000, 26.97000000, 2.61000000, 10.15000000, 7.16000000, 2.64000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13263( ref l_U1672, ref l_U1608 );
    sub_16087( ref g_U3143, 1, 1, 0.10000000 );
    return;
}

void sub_12925(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_13263(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
        sub_724( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

void sub_15489(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_15622(int iParam0, int iParam1)
{
    if ((sub_15634( iParam0 )) == 0)
    {
        sub_15700( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_15634(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_15700(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_16087(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_15634( iParam0 )) == 0)
    {
        sub_15700( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_16377()
{
    sub_724( "GA", "P_REQUEST_MS_PERSISTENT_ASSETS start", 0 );
    if ((g_U855 != 4) AND (g_U854 != 4))
    {
        sub_16465( ref l_U113, ref g_U1069 );
        sub_17890( "LEVEL_S_STAD_CP_02", ref g_U1354 );
        sub_17890( "PAS_INT", ref g_U1354 );
        sub_17890( "DAM_DEAD", ref g_U1354 );
        sub_18904();
    }
    sub_19521( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", ref g_U2012 );
    sub_20514( ref l_U123, ref g_U1214 );
    sub_17890( "LEVEL_S_STAD_CP_02a", ref g_U1354 );
    sub_17890( "LEVEL_S_STAD_CP_03", ref g_U1354 );
    sub_17890( "FACE_PASNYB", ref g_U1354 );
    sub_724( "GA", "P_REQUEST_MS_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_16465(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_16500( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_16500(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_16535( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_16666( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_16535(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_16666( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_16666( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_16666( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_17314( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_16666( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_16666( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16666(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16686( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_16686(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_17314(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_17890(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_17911( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_18048( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_17911(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_18048( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_18048( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_18048( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_17314( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_18048( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_18048( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18048(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16686( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_18904()
{
    sub_17890( "PLGE_RIFLE_CROUCH", ref g_U1354 );
    sub_17890( "PLGE_PSTL_CROUCH", ref g_U1354 );
    sub_17890( "AMED_RIFLE_CORE", ref g_U1354 );
    sub_17890( "AMED_PSTL_CORE", ref g_U1354 );
    sub_17890( "AMED_RIFLE_CORE_RELOAD", ref g_U1354 );
    sub_17890( "AMED_PSTL_CORE_RELOAD", ref g_U1354 );
    sub_17890( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
    sub_17890( "PLGE_PSTL_HANDSIG", ref g_U1354 );
    sub_17890( "PLGE_PSTL_ACTIONS", ref g_U1354 );
    sub_17890( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
    sub_17890( "AMED_RIFLE_KNEE", ref g_U1354 );
    sub_17890( "AMED_PSTL_KNEE", ref g_U1354 );
    sub_17890( "AMED_PSTL_COVER", ref g_U1354 );
    sub_17890( "AMED_RIFLE_COVER", ref g_U1354 );
    sub_17890( "AMED_RIFLE_REACT", ref g_U1354 );
    sub_17890( "AMED_PSTL_REACT", ref g_U1354 );
    sub_17890( "AMED_RIFLE_COVER_EXIT", ref g_U1354 );
    sub_17890( "AMED_PSTL_COVER_EXIT", ref g_U1354 );
    sub_17890( "AMED_PSTL_FULLBODY", ref g_U1354 );
    return;
}

void sub_19521(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_19542( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_19681( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_19542(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being requested!!!", 0 );
                sub_19681( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is already loading!!!", 0 );
                sub_19681( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_ACTION_TREE_LOADED( uParam0 ))
                {
                    sub_19681( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ACTION_TREE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_17314( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being removed!!!", 0 );
                sub_19681( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_ACTION_TREE_LOADED( uParam0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_19681( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ACTION_TREE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19681(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16686( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ACTION_TREE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_20514(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_20549( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_20549(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_20570( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_20702( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_20570(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_20702( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_20702( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_20702( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_17314( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_20702( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_20702( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20702(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16686( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_21646()
{
    sub_724( "GA", "P_REQUEST_MS_NONPERSISTENT_ASSETS start", 0 );
    if ((g_U855 != 4) AND (g_U854 != 4))
    {
        sub_21738( 1743875163, ref g_U1263 );
        sub_21738( 1708899639, ref g_U1263 );
        sub_21738( 1269878088, ref g_U1263 );
        sub_21738( -1324066065, ref g_U1263 );
        sub_21738( 1090240116, ref g_U1263 );
        sub_23746( "S_STAD_MID_02B_BLENDOUT", ref g_U2034 );
    }
    sub_21738( 1496659887, ref g_U1263 );
    if ((l_U127) AND (g_U854 < 3))
    {
        sub_24850( "MID_02B_STADIUM", 0 );
    }
    sub_724( "GA", "P_REQUEST_MS_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_21738(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_21773( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_21925( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_21773(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_21925( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_21925( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_21925( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_21925( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_17314( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_17314( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_21925( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_21925( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_21925(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16686( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_23746(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_23767( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_23908( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_23767(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                sub_23908( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                sub_23908( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        sub_23908( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                        sub_17314( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    sub_23908( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                sub_23908( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                sub_23908( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_23908(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16686( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_24850(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_25230(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25350(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25471(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25598(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_25789(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25916(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

void sub_26298(int iParam0, unknown uParam1)
{
    vector[2] vVar4;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int iVar13;

    sub_5548( "[SP]### P_SETUP_PRACTICE_ELEVATOR ###" );
    array(ref vVar4, 2);
    vVar4[0] = {91.18000000, 62.39000000, -3.39000000};
    vVar4[1] = {91.18000000, 62.39000000, 2.65000000};
    uVar11 = GET_HASH_KEY( "ElevatorRoom" );
    uVar12 = GET_INTERIOR_FROM_NAME( "int_elevator", 0 );
    SET_INTERIOR_ACTIVE( uVar12, 1, 0 );
    LOAD_SCENE_FOR_ROOM_BY_KEY( uVar12, uVar11 );
    sub_26517( ref g_U3706, ref vVar4, 0.00000000, 0.00000000, -90.00000000, g_U2391, g_U2392, g_U2393, 1.00000000 );
    iVar13 = 0;
    if (iParam0 == 1)
    {
        iVar13 = 1;
    }
    sub_27005( ref g_U3706, iVar13, uParam1 );
    if (iParam0 == 1)
    {
        SET_OBJECT_COORDS( g_U3706._fU232, 91.18000000, 62.39000000, 2.65000000 );
    }
    else
    {
        SET_OBJECT_COORDS( g_U3706._fU232, 91.18000000, 62.39000000, -3.39000000 );
    }
    sub_27989( ref g_U3706, ref g_U2540 );
    sub_28241( ref g_U3706, 1, 0 );
    sub_28241( ref g_U3706, 1, 1 );
    return;
}

void sub_26517(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    sub_5548( "[SP]### P_CreateElevatorStructService ###" );
    sub_26590( iParam0, uParam1, uParam2, uParam5, uParam6, uParam8 );
    iParam0->_fU288 = 1;
    iParam0->_fU284 = 1;
    iParam0->_fU224 = uParam7;
    iParam0->_fU228 = uParam7;
    return;
}

void sub_26590(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_5548( "[SP]### P_CreateElevatorStructService ###" );
    sub_26664( iParam0, uParam1, uParam2, uParam5, uParam6, uParam6, uParam7 );
    iParam0->_fU288 = 1;
    iParam0->_fU292 = 2.74000000;
    iParam0->_fU296 = 0.05000000;
    return;
}

void sub_26664(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;

    sub_5548( "[SP]### P_CreateElevatorStruct ###" );
    I = 0;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        iParam0->_fU24[I] = {(uParam1^)[I]};
    }
    iParam0->_fU316 = 0;
    iParam0->_fU12 = {uParam2};
    iParam0->_fU212 = uParam5;
    iParam0->_fU216 = uParam6;
    iParam0->_fU220 = uParam7;
    iParam0->_fU284 = 0;
    iParam0->_fU288 = 0;
    iParam0->_fU292 = 0.88000000;
    iParam0->_fU296 = 0.02500000;
    iParam0->_fU300 = 0.00000000;
    iParam0->_fU304 = 0.00000000;
    iParam0->_fU208 = uParam8;
    return;
}

void sub_27005(int iParam0, unknown uParam1, unknown uParam2)
{
    sub_5548( "[SP]### P_CreateElevator ###" );
    iParam0->_fU0 = {iParam0->_fU24[uParam1]};
    sub_5431( iParam0->_fU232 );
    iParam0->_fU232 = sub_27102( iParam0->_fU212, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU232, 1 );
    }
    sub_5431( iParam0->_fU236 );
    iParam0->_fU236 = sub_27102( iParam0->_fU216, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 1 );
    }
    if (iParam0->_fU288 == 0)
    {
        sub_5431( iParam0->_fU240 );
        iParam0->_fU240 = sub_27102( iParam0->_fU220, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU240, 1 );
        }
    }
    if (iParam0->_fU284 == 1)
    {
        sub_5431( iParam0->_fU244 );
        iParam0->_fU244 = sub_27102( iParam0->_fU224, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 1 );
        }
        if (iParam0->_fU288 == 0)
        {
            sub_5431( iParam0->_fU248 );
            iParam0->_fU248 = sub_27102( iParam0->_fU228, iParam0->_fU0, iParam0->_fU12, 0, uParam2, 0 );
            if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
            {
                FREEZE_OBJECT_POSITION( iParam0->_fU248, 1 );
            }
        }
    }
    return;
}

void sub_27102(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_27212( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_27212(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_5548( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_27989(int iParam0, unknown uParam1)
{
    sub_5548( "[SP]### P_AddElevatorToInterior ###" );
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU232, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU236, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU240, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU244, uParam1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU248, uParam1 );
    }
    return;
}

void sub_28241(int iParam0, int iParam1, int iParam2)
{
    sub_5548( "[SP]### P_CLOSE_ELEVATOR_DOORS ###" );
    if (iParam2 == 0)
    {
        if (iParam1 == 1)
        {
            iParam0->_fU308 = 0;
        }
        else if (iParam0->_fU288 == 1)
        {
            ;
        }
        iParam0->_fU308 = 3;;
    }
    else if (iParam1 == 1)
    {
        iParam0->_fU312 = 0;
    }
    else if (iParam0->_fU288 == 1)
    {
        ;
    }
    iParam0->_fU312 = 3;;;
    return;
}

void sub_28428(int iParam0, int iParam1, int iParam2)
{
    sub_5548( "[SP]### P_OPEN_ELEVATOR_DOORS ###" );
    if (iParam2 == 0)
    {
        if (iParam1 == 1)
        {
            iParam0->_fU308 = 2;
        }
        else if (iParam0->_fU288 == 1)
        {
            ;
        }
        iParam0->_fU308 = 1;;
    }
    else if (iParam1 == 1)
    {
        iParam0->_fU312 = 2;
    }
    else if (iParam0->_fU288 == 1)
    {
        ;
    }
    iParam0->_fU312 = 1;;;
    return;
}

void sub_28593(int iParam0)
{
    int I;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    float fVar8;
    float fVar9;
    float fVar10;
    vector vVar11;
    vector vVar14;

    if (iParam0->_fU316 == 2)
    {
        iParam0->_fU204 = -1;
        I = 0;
        for ( I = 0; I <= 9; I++ )
        {
            if (iParam0->_fU160[I] >= 0)
            {
                iParam0->_fU204 = iParam0->_fU160[I];
                iParam0->_fU160[I] = -1;
                uVar4 = {iParam0->_fU24[iParam0->_fU204] - iParam0->_fU0};
                uVar7 = ABSF( (uVar4._fU0 + uVar4._fU4) + uVar4._fU8 );
                fVar8 = (TIMESTEP() * iParam0->_fU208) * (uVar4._fU0 / uVar7);
                fVar9 = (TIMESTEP() * iParam0->_fU208) * (uVar4._fU4 / uVar7);
                fVar10 = (TIMESTEP() * iParam0->_fU208) * (uVar4._fU8 / uVar7);
                iParam0->_fU148 = {fVar8, fVar9, fVar10};
                iParam0->_fU316 = 1;
                I = 9;
            }
        }
        if (iParam0->_fU204 == -1)
        {
            sub_5548( "[ML] --- ELEVATOR DONE MOVING ---" );
            iParam0->_fU316 = 3;
        }
    }
    if (iParam0->_fU316 == 1)
    {
        iParam0->_fU0 = {iParam0->_fU0 + iParam0->_fU148};
        if ((((ref iParam0->_fU0->_fU8) <= iParam0->_fU24[iParam0->_fU204]._fU8) AND ((ref iParam0->_fU148->_fU8) < 0)) || ((((ref iParam0->_fU0->_fU8) >= iParam0->_fU24[iParam0->_fU204]._fU8) AND ((ref iParam0->_fU148->_fU8) > 0)) || ((((ref iParam0->_fU0->_fU4) <= iParam0->_fU24[iParam0->_fU204]._fU4) AND ((ref iParam0->_fU148->_fU4) < 0)) || ((((ref iParam0->_fU0->_fU4) >= iParam0->_fU24[iParam0->_fU204]._fU4) AND ((ref iParam0->_fU148->_fU4) > 0)) || ((((ref iParam0->_fU0->_fU0) <= iParam0->_fU24[iParam0->_fU204]._fU0) AND ((ref iParam0->_fU148->_fU0) < 0)) || (((ref iParam0->_fU0->_fU0) >= iParam0->_fU24[iParam0->_fU204]._fU0) AND ((ref iParam0->_fU148->_fU0) > 0)))))))
        {
            iParam0->_fU316 = 2;
        }
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        SET_OBJECT_COORDS( iParam0->_fU232, iParam0->_fU0 );
    }
    if (iParam0->_fU308 == 2)
    {
        iParam0->_fU300 = iParam0->_fU292;
        iParam0->_fU308 = 2;
    }
    else if (iParam0->_fU308 == 0)
    {
        iParam0->_fU300 = 0.00000000;
        iParam0->_fU308 = 0;
    }
    if (iParam0->_fU308 == 1)
    {
        if (iParam0->_fU300 < iParam0->_fU292)
        {
            iParam0->_fU300 += iParam0->_fU296;
        }
        if (iParam0->_fU300 >= iParam0->_fU292)
        {
            iParam0->_fU300 = iParam0->_fU292;
            iParam0->_fU308 = 2;
        }
    }
    else if (iParam0->_fU308 == 3)
    {
        if (iParam0->_fU300 > 0.00000000)
        {
            iParam0->_fU300 -= iParam0->_fU296;
        }
        if (iParam0->_fU300 <= 0.00000000)
        {
            iParam0->_fU300 = 0.00000000;
            iParam0->_fU308 = 0;
        }
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU232 )) == 1)
    {
        vVar11 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU232 )};
    }
    if (iParam0->_fU288 == 0)
    {
        if ((ref iParam0->_fU12->_fU8) == 0.00000000)
        {
            vVar14 = {-iParam0->_fU300, 0.00000000, 0.00000000};
        }
        else if (((ref iParam0->_fU12->_fU8) == -270.00000000) || ((ref iParam0->_fU12->_fU8) == 90.00000000))
        {
            vVar14 = {0.00000000, -iParam0->_fU300, 0.00000000};
        }
        else if (((ref iParam0->_fU12->_fU8) == -180.00000000) || ((ref iParam0->_fU12->_fU8) == 180.00000000))
        {
            vVar14 = {iParam0->_fU300, 0.00000000, 0.00000000};
        }
        else if (((ref iParam0->_fU12->_fU8) == -90.00000000) || ((ref iParam0->_fU12->_fU8) == 270.00000000))
        {
            vVar14 = {0.00000000, iParam0->_fU300, 0.00000000};
        };;;;
    }
    else
    {
        vVar14 = {0.00000000, 0.00000000, iParam0->_fU300};
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU236 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 0 );
        SET_OBJECT_COORDS( iParam0->_fU236, vVar11 + vVar14 );
        FREEZE_OBJECT_POSITION( iParam0->_fU236, 1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU240 )) == 1)
    {
        FREEZE_OBJECT_POSITION( iParam0->_fU240, 0 );
        SET_OBJECT_COORDS( iParam0->_fU240, vVar11 - vVar14 );
        FREEZE_OBJECT_POSITION( iParam0->_fU240, 1 );
    }
    if (iParam0->_fU284 == 1)
    {
        if (iParam0->_fU312 == 2)
        {
            iParam0->_fU304 = iParam0->_fU292;
            iParam0->_fU312 = 2;
        }
        else if (iParam0->_fU312 == 0)
        {
            iParam0->_fU304 = 0.00000000;
            iParam0->_fU312 = 0;
        }
        if (iParam0->_fU312 == 1)
        {
            if (iParam0->_fU304 < iParam0->_fU292)
            {
                iParam0->_fU304 += iParam0->_fU296;
            }
            if (iParam0->_fU304 >= iParam0->_fU292)
            {
                iParam0->_fU304 = iParam0->_fU292;
                iParam0->_fU312 = 2;
            }
        }
        else if (iParam0->_fU312 == 3)
        {
            if (iParam0->_fU304 > 0.00000000)
            {
                iParam0->_fU304 -= iParam0->_fU296;
            }
            if (iParam0->_fU304 <= 0.00000000)
            {
                iParam0->_fU304 = 0.00000000;
                iParam0->_fU312 = 0;
            }
        }
        if (iParam0->_fU288 == 0)
        {
            if ((ref iParam0->_fU12->_fU8) == 0.00000000)
            {
                vVar14 = {-iParam0->_fU304, 0.00000000, 0.00000000};
            }
            else if (((ref iParam0->_fU12->_fU8) == -270.00000000) || ((ref iParam0->_fU12->_fU8) == 90.00000000))
            {
                vVar14 = {0.00000000, -iParam0->_fU304, 0.00000000};
            }
            else if (((ref iParam0->_fU12->_fU8) == -180.00000000) || ((ref iParam0->_fU12->_fU8) == 180.00000000))
            {
                vVar14 = {iParam0->_fU304, 0.00000000, 0.00000000};
            }
            else if (((ref iParam0->_fU12->_fU8) == -90.00000000) || ((ref iParam0->_fU12->_fU8) == 270.00000000))
            {
                vVar14 = {0.00000000, iParam0->_fU304, 0.00000000};
            };;;;
        }
        else
        {
            vVar14 = {0.00000000, 0.00000000, -iParam0->_fU304};
        }
        if ((DOES_OBJECT_EXIST( iParam0->_fU244 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 0 );
            SET_OBJECT_COORDS( iParam0->_fU244, vVar11 - vVar14 );
            FREEZE_OBJECT_POSITION( iParam0->_fU244, 1 );
        }
        if ((DOES_OBJECT_EXIST( iParam0->_fU248 )) == 1)
        {
            FREEZE_OBJECT_POSITION( iParam0->_fU248, 0 );
            SET_OBJECT_COORDS( iParam0->_fU248, vVar11 + vVar14 );
            FREEZE_OBJECT_POSITION( iParam0->_fU248, 1 );
        }
    }
    return;
}

int sub_30650(unknown uParam0)
{
    sub_724( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_6887( uParam0, sub_1132() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_31347()
{
    sub_724( "GA", "P_PressRoomCS_Pre start", 0 );
    sub_31456( ref l_U778[0], 107.51690000, 28.40775000, 2.80131300, 0.00000000, g_U2468, -971903675, g_U2381, 4.00000000, 20.00000000, 0, 1194438308, 0 );
    sub_31456( ref l_U778[1], 107.47530000, 27.21386000, 2.80131300, 0.00000000, g_U2468, 331095069, g_U2381, 7.00000000, 20.00000000, 0, 68019059, 0 );
    sub_31456( ref l_U778[2], 108.97530000, 27.21386000, 2.80131300, 0.00000000, g_U2468, 80093634, g_U2381, 7.00000000, 20.00000000, 0, 68019059, 0 );
    sub_31456( ref l_U778[3], 107.53010000, 24.50423000, 2.80131200, 0.00000000, g_U2468, -113961368, g_U2381, 4.00000000, 20.00000000, 0, 1194438308, 0 );
    sub_724( "GA", "P_PressRoomCS_Pre end", 0 );
    return;
}

void sub_31456(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
    sub_31509( uParam0, uParam1, uParam4, uParam18, 68019059, 2, g_U3928, uParam15, uParam16, uParam14, uParam19, uParam17, uParam13, uParam5 );
    return;
}

void sub_31509(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29)
{
    iParam0->_fU56 = {uParam1};
    iParam0->_fU68 = uParam4;
    iParam0->_fU72 = uParam5;
    iParam0->_fU76 = uParam6;
    iParam0->_fU80 = uParam7;
    iParam0->_fU84 = {uParam8};
    iParam0->_fU116 = uParam16;
    iParam0->_fU120 = uParam17;
    iParam0->_fU124 = uParam18;
    iParam0->_fU128 = uParam19;
    iParam0->_fU132 = uParam20;
    iParam0->_fU136 = uParam21;
    iParam0->_fU140 = {uParam22};
    return;
}

void sub_31910()
{
    sub_724( "SP", "P_SETUP_EDISON", 0 );
    sub_5342( g_U4392 );
    sub_31992( ref g_U4393, 95.68065000, 56.61267000, 2.83080900, 170.00000000, g_U2376, 26, 6, 0, 0, 0 );
    g_U4392 = sub_32089( ref g_U4393 );
    if (((IS_PED_DEAD( g_U4392 )) == 0) AND ((DOES_PED_EXIST( g_U4392 )) == 1))
    {
        sub_32784( g_U4392 );
        sub_9072( g_U4392, 68019059, 25000, 0, 0 );
        SET_PERSISTENT_PED_VARIATION( g_U4392, "Pass_Stad_Hat" );
        SET_ROOM_FOR_PED_BY_NAME( g_U4392, ref g_U2460 );
        SET_PED_SWEAT( g_U4392, 0.00000000, 0.00000000 );
        SET_PED_HEALTH( g_U4392, GET_PED_MAX_HEALTH( g_U4392 ), 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4392, 1 );
        SET_PED_COMBAT_ATTRIBUTES( g_U4392, 32, 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U4392, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U4392, 1 );
        SET_PED_GORE_AS_ALLY( g_U4392 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4392, 1 );
        SET_PED_CAN_INTERACT_WITH_DOORS( g_U4392, 0 );
        SET_PED_CAN_PUSH_PLAYER( g_U4392, 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( g_U4392, 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_CAN_AI_KICK_THROUGH_CORPSES( g_U4392, 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CONSUMING_AMMO( g_U4392, 0 );
        SET_PED_INVINCIBLE( g_U4392, 0 );
        SET_PED_CAN_INITIATE_BULLET_CAM( g_U4392, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U4392, 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( g_U4392, 0 );
        SET_BULLET_CAM_PREF( g_U4392, "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", "ALL_F_06_FAILSAFE", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        SET_PED_NAME_DEBUG( g_U4392, "PRACTICE_EDISON!" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U4392, 1 );
        SET_PED_ACCURACY( g_U4392, -1467320974 );
        SET_ROOM_FOR_PED_BY_NAME( g_U4392, "Room_Hallway_01" );
        SET_PED_ACCURACY( g_U4392, 31186664 );
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( g_U4392, 0, 0 ) ))
        {
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( g_U4392, 0, 0 ), 0 );
        }
    }
    sub_33573( g_U4392 );
    return;
}

void sub_31992(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_32089(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_27212( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_32568( iParam0->_fU40 );
    sub_32648( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_32568(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_32648(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_32784(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0 )))
    {
        if (iParam0 == sub_1132())
        {
            sub_724( "[AT]", "Clearing headtracking on Max.", 0 );
        }
        else
        {
            sub_724( "[AT]", "Clearing headtracking on non-player ped.", 0 );
        }
        TASK_CLEAR_LOOK_AT( iParam0 );
    }
    else
    {
        SCRIPT_ASSERT( "Passed invalid or dead ped to P_CLEAR_PED_HEADTRACKING!", 0 );
    }
    return;
}

void sub_33573(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

int sub_33716(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5)
{
    int I;

    sub_5548( uParam1 );
    if (NOT bParam4)
    {
        sub_33746( uParam2, uParam3, 1 );
        for ( I = 0; I < (uParam0^); I++ )
        {
            sub_33943( ref (uParam0^)[I] );
            sub_35338( (uParam0^)[I]._fU0, uParam2 );
        }
        sub_35616( uParam0, uParam1 );
    }
    else if ((uParam0^)[0]._fU172 == 0)
    {
        sub_33746( uParam2, uParam3, 1 );
    }
    if ((uParam0^)[0]._fU172 < (uParam0^))
    {
        sub_33943( ref (uParam0^)[(uParam0^)[0]._fU172] );
        sub_35338( (uParam0^)[(uParam0^)[0]._fU172]._fU0, uParam2 );
        (uParam0^)[0]._fU172++;
    }
    else
    {
        sub_35616( uParam0, uParam1 );
        return 1;
    }
    if (bParam5)
    {
        sub_35882( uParam0, 1, 0, -1 );
    }
    return 0;
}

void sub_33746(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_33943(int iParam0)
{
    unknown uVar3;

    sub_6138( "MAL_EnemyStructCreate starting" );
    sub_34058( iParam0 + 0, iParam0 + 4, iParam0->_fU56, iParam0->_fU68, iParam0->_fU72, iParam0->_fU80, iParam0->_fU84, iParam0->_fU116, iParam0->_fU120, iParam0->_fU124, 1 );
    if (NOT (ARE_STRINGS_EQUAL( iParam0 + 140, ref g_U652 )))
    {
        sub_5548( iParam0 + 140 );
        sub_34812( iParam0 + 0, iParam0 + 140 );
    }
    if (iParam0->_fU128)
    {
        sub_6138( "MAL_EnemyStructCreate giving ped backup weapon" );
        sub_34941( iParam0->_fU0, iParam0->_fU76, 25000, 1, 0 );
    }
    if (iParam0->_fU132)
    {
        uVar3 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
        sub_35138( ref uVar3, 14, 1 );
    }
    if (iParam0->_fU136 != 0)
    {
        sub_35264( iParam0 + 0, iParam0->_fU136 );
    }
    return iParam0->_fU0;
}

void sub_34058(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19)
{
    sub_31992( uParam1, uParam2, uParam5, uParam18, 7, 3, 2, 0, 0 );
    (uParam0^) = sub_34097( uParam0, uParam1, 1, 1, uParam19 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
    }
    sub_34348( (uParam0^), uParam6, 25000, 0, 0 );
    sub_34533( uParam0, ref uParam8, uParam16, uParam17, 1 );
    sub_34710( uParam0, uParam7 );
    return (uParam0^);
}

void sub_34097(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
    sub_5342( (uParam0^) );
    (uParam0^) = sub_32089( uParam1 );
    if (bParam3)
    {
        while (NOT (DOES_PED_EXIST( (uParam0^) )))
        {
            WAIT( 0 );
            sub_6138( "MAL_CreatePed waiting for ped to exist" );
        }
    }
    SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), uParam4 );
    sub_34225( uParam0, 32, 0 );
    SET_PED_IGNORE_LOS_CHECKS( (uParam0^), NOT bParam2 );
    SET_PED_EMOTION_STATE( (uParam0^), 1 );
    return (uParam0^);
}

void sub_34225(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

void sub_34348(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                sub_6138( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_34533(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
    sub_6138( "MAL_SetTemplateAndRanges" );
    sub_5548( uParam1 );
    sub_34584( fParam2 );
    sub_34584( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
        sub_34225( uParam0, 1, 0 );
    }
    return;
}

void sub_34584(unknown uParam0)
{
    return;
}

void sub_34710(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

void sub_34812(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), uParam1 );
    }
    return;
}

void sub_34941(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    int Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
            while (Result == 0)
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam3 );
                sub_6138( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_35138(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

void sub_35264(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PERSISTENT_PED_VARIATION_ENUM( (uParam0^), uParam1 );
    }
    return;
}

void sub_35338(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_5548( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_33746( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_33746( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_35616(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I]._fU0, ref cVar5 );
        }
    }
    return;
}

void sub_35882(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_35932( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_35932(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FREEZE_PROCESSING( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_36015()
{
    sub_724( "GA", "P_PressRoomCS_Post start", 0 );
    sub_36070( ref l_U778, 1, 0, -1 );
    sub_36196( ref l_U778, 1, 0, -1 );
    sub_36327( ref l_U778, l_U607, 1, 0, -1 );
    sub_36501( ref l_U778, 2, 6 );
    sub_36615( ref l_U778, 1, 0, -1 );
    sub_36741( ref l_U778, 0, 0, -1 );
    sub_36927( ref l_U778, 100, 0, -1 );
    sub_724( "GA", "P_PressRoomCS_Post end", 0 );
    return;
}

void sub_36070(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_36120( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_36120(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        FREEZE_PED_POSITION( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_36196(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_36246( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_36246(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_INVINCIBLE( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_36327(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    int I;

    if (iParam4 == -1)
    {
        iParam4 = (uParam0^) - 1;
    }
    for ( I = uParam3; I <= iParam4; I++ )
    {
        sub_36379( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

void sub_36379(int iParam0, unknown uParam1, unknown uParam2)
{
    sub_36397( ref uParam1, iParam0->_fU0, uParam2 );
    return;
}

void sub_36397(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_36501(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_36537( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

void sub_36537(int iParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_RELATIONSHIP( iParam0->_fU0, uParam1, uParam2 );
    }
    return;
}

void sub_36615(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_36665( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_36665(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_CAN_INITIATE_BULLET_CAM( iParam0->_fU0, uParam1 );
    }
    return;
}

void sub_36741(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_36791( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_36791(int iParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_VISIBLE( iParam0->_fU0, uParam1 );
    }
    else
    {
        sub_6138( "MAL_ES_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

void sub_36927(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3)
{
    int I;

    if (iParam3 == -1)
    {
        iParam3 = (uParam0^) - 1;
    }
    for ( I = uParam2; I <= iParam3; I++ )
    {
        sub_36977( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_36977(int iParam0, unknown uParam1)
{
    unknown uVar4;

    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        uVar4 = GET_WEAPON_FROM_HAND( iParam0->_fU0, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar4 ))
        {
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( uVar4, uParam1 );
        }
    }
    return;
}

void sub_37117()
{
    sub_724( "CO", "Add_Placement_CL_S_STA_GG_M1_02", 0 );
    sub_37234( ref g_U811, g_U851, 824397847, -433386083, 96.17000000, 28.21000000, 2.84000000, 1.50000000, 0.00000000, 3.50000000, "Room_Press" );
    sub_37363( ref g_U811 );
    return;
}

void sub_37234(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_724( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_37363(int iParam0)
{
    sub_724( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_37424( iParam0->_fU12 )) == 1)
        {
            sub_724( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_724( "CO", "has never been collected.", 0 );
        }
        if ((sub_37424( iParam0->_fU12 )) == 0)
        {
            sub_5767( iParam0->_fU0 );
            iParam0->_fU0 = sub_37659( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_724( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_724( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_37424(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_37659(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_37911()
{
    sub_724( "CR", "P_CREATE_PLACEMENTS - Start", 0 );
    l_U1353[0] = sub_37659( -4072149, 117.45000000, 3.90000000, 3.68200000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 90.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1353[0], ref g_U2524 );
    sub_724( "CR", "P_CREATE_PLACEMENTS - End", 0 );
    return;
}

int sub_38257()
{
    sub_32784( g_U4392 );
    sub_32784( sub_1132() );
    sub_38297( ref l_U1345, ref l_U1346, 1, 1 );
    if (NOT (IS_PED_DEAD( g_U4392 )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( g_U4392 );
    }
    sub_39629( ref g_U3867, g_U2397, 88.41000000, 64.48000000, -2.05400000, ref g_U2532, 1, 0 );
    return 1;
}

void sub_38297(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;

    uVar6 = GET_WEAPON_FROM_HAND( sub_1132(), 0, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar6 ))
    {
        if (sub_38337())
        {
            (uParam0^) = 1;
            SELECT_WEAPON_TO_HAND( sub_1132(), 0, 0, uParam2 );
            uVar6 = GET_WEAPON_FROM_HAND( sub_1132(), 0, 0 );
            if (bParam3)
            {
                sub_724( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: Waiting for player to holster RIFLE in right hand...", "###" );
                while (GET_DOES_WEAPON_EXIST( uVar6 ))
                {
                    WAIT( 0 );
                    uVar6 = GET_WEAPON_FROM_HAND( sub_1132(), 0, 0 );
                }
            }
            sub_724( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: ...right hand RIFLE holstered!", "###" );
        }
    }
    uVar6 = GET_WEAPON_FROM_HAND( sub_1132(), 1, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar6 ))
    {
        (uParam1^) = 1;
        SELECT_WEAPON_TO_HAND( sub_1132(), 0, 1, uParam2 );
        uVar6 = GET_WEAPON_FROM_HAND( sub_1132(), 1, 0 );
        if (bParam3)
        {
            sub_724( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: Waiting for player to holster gun in LEFT hand...", "###" );
            while (GET_DOES_WEAPON_EXIST( uVar6 ))
            {
                WAIT( 0 );
                uVar6 = GET_WEAPON_FROM_HAND( sub_1132(), 1, 0 );
            }
        }
        sub_724( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: ...LEFT hand gun holstered!", "###" );
    }
    uVar6 = GET_WEAPON_FROM_HAND( sub_1132(), 0, 0 );
    if (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
    {
        uVar6 = GET_WEAPON_FROM_HOLSTER( sub_1132(), 0 );
        if (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
        {
            uVar6 = GET_WEAPON_FROM_HOLSTER( sub_1132(), 1 );
        }
        SELECT_WEAPON_TO_HAND( sub_1132(), uVar6, 0, uParam2 );
        uVar6 = GET_WEAPON_FROM_HAND( sub_1132(), 0, 0 );
        if (bParam3)
        {
            sub_724( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: Waiting for player to draw gun from HOLSTER...", "###" );
            while (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
            {
                WAIT( 0 );
                uVar6 = GET_WEAPON_FROM_HAND( sub_1132(), 0, 0 );
            }
        }
        sub_724( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: ...gun drawn from HOLSTER!", "###" );
    }
    return;
}

int sub_38337()
{
    int[18] iVar2;
    unknown uVar21;
    int I;

    array(ref iVar2, 18);
    iVar2[0] = -1013714740;
    iVar2[1] = -1074756423;
    iVar2[2] = 1308526797;
    iVar2[3] = 840671040;
    iVar2[4] = 57534114;
    iVar2[5] = 724901397;
    iVar2[6] = 1992962408;
    iVar2[7] = 319712764;
    iVar2[8] = 427207702;
    iVar2[9] = -110877124;
    iVar2[10] = 1224272620;
    iVar2[11] = 10648147;
    iVar2[12] = -2075384407;
    iVar2[13] = 1478009203;
    iVar2[14] = 434544317;
    iVar2[15] = -168327769;
    iVar2[16] = -184942895;
    iVar2[17] = 514118749;
    uVar21 = GET_WEAPON_FROM_HAND( sub_1132(), 0, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar21 ))
    {
        for ( I = 0; I < iVar2; I++ )
        {
            if ((GET_WEAPON_TYPE( uVar21 )) == iVar2[I])
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_39629(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_39658( uParam0, uParam1, uParam2, g_U649, uParam5, uParam6, uParam7 );
    return;
}

void sub_39658(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    sub_39684( uParam0, uParam1, uParam2, uParam5, uParam9, uParam10 );
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), uParam8 );
    }
    return;
}

void sub_39684(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_5431( (uParam0^) );
    (uParam0^) = sub_39715( uParam1, uParam2, uParam5, 0, uParam9, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), uParam8 );
    return;
}

void sub_39715(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_27212( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_40009()
{
    if (NOT (IS_PED_DEAD( g_U4392 )))
    {
        sub_724( "GA", "Registering Passos script ped with midscene MID_02B_STADIUM", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U4392, "Pass_heli_pilo", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U4392, l_U729, l_U732 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U4392, 0, 0 ), "W_PI_PT92_Aa_H^1", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U3706._fU232 ))
    {
        sub_724( "GA", "Registering elevator room with midscene MID_02B_STADIUM", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( g_U3706._fU232, "P_ST_FRTELE_AA_H", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U3706._fU236 ))
    {
        sub_724( "GA", "Registering evelator front door with midscene MID_02B_STADIUM", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( g_U3706._fU236, "P_ST_FRTELEDR1", 0 );
        sub_27989( ref g_U3706, ref g_U2540 );
    }
    if (DOES_OBJECT_EXIST( g_U3706._fU244 ))
    {
        sub_724( "GA", "Registering evelator back door with midscene MID_02B_STADIUM", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( g_U3706._fU244, "P_ST_FRTELEDR2", 0 );
    }
    if (DOES_OBJECT_EXIST( g_U3866 ))
    {
        sub_724( "GA", "Registering elevator button to midscene MID_02B_STADIUM", 0 );
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( g_U3866, "cs_int05Button", 0 );
    }
    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_1132(), 0, 0 ), "W_PI_PT92_Aa_H", 0 );
    CUTSCENE_REGISTER_PED_TELEPORT( sub_1132(), l_U1827, l_U1830 );
    CUTSCENE_REGISTER_ISEQ( 1269878088 );
    ISEQ_REGISTER_ENTITY( 1269878088, "Max", sub_1132(), 0 );
    return;
}

void sub_40825()
{
    if (l_U1842._fU52)
    {
        AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_2", "", 0, 5000, 7000, -1082130432, 0 );
        sub_40908( g_U4392 );
    }
    if (NOT l_U1349)
    {
        if (GET_CUTSCENE_TIME_MS() >= 250)
        {
            sub_5431( g_U3867 );
            l_U1349 = 1;
        }
    }
    return;
}

void sub_40908(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

int sub_41056()
{
    sub_6138( "P_MID02B_POST START" );
    sub_36741( ref l_U778, 0, 0, -1 );
    SIMULATE_PLAYER_INPUT_GAIT( sub_1154(), 2, 1500, 0 );
    STREAM_HELPERS_REQUEST_AT_LOC( 99.41388000, 40.17538000, 2.80667200, 0 );
    return 1;
}

void sub_41154()
{
    sub_6138( "P_MID02B_PREPAREBLENDOUT START" );
    PED_FINISH_ACTION_INTENTION( g_U4392, 47 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 48 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 49 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 50 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 51 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 52 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 53 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 54 );
    PED_FINISH_ACTION_INTENTION( g_U4392, 55 );
    if (NOT (ISEQ_QUERY_STATE( 1269878088, 3 )))
    {
        sub_6138( "IF NOT ISEQ_QUERY_STATE(S_STAD_02BLEADOUT, eSNS_PLAYING)" );
        ISEQ_REGISTER_ENTITY( 1269878088, "Max", sub_1132(), 0 );
        ISEQ_START( 1269878088 );
        sub_41473( sub_1132(), l_U1827, l_U1830 );
        sub_41473( g_U4392, l_U729, l_U732 );
        sub_40908( g_U4392 );
    }
    SET_CAM_VIEW_MODE( 0 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_02", "B_OUT_MID_02B_STAD_CAM", 0, g_U649, 0.00000000, 0, 0 );
    sub_41666( "S_STAD_MID_02B_BLENDOUT", ref g_U2034 );
    sub_41891();
    sub_2171( ref l_U1833, 1500, 1, 0 );
    sub_2307( ref l_U1833 );
    STREAM_HELPERS_REQUEST_AT_LOC( 99.41388000, 40.17538000, 2.80667200, 1 );
    sub_6138( "P_MID02B_PREPAREBLENDOUT END" );
    return;
}

void sub_41473(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_41666(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_4850( uParam0, uParam1 ))
    {
        iVar4 = sub_4949( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

void sub_41891()
{
    sub_5431( l_U733 );
    l_U733 = sub_27102( g_U2394, l_U734, l_U737, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U733 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U733, ref g_U2468 );
        FREEZE_OBJECT_POSITION( l_U733, 1 );
        SET_OBJECT_COLLISION( l_U733, 0 );
    }
    sub_5342( l_U724 );
    sub_31992( ref l_U711, l_U725, l_U728, g_U2381, 26, 6, 0, 0, 0 );
    sub_34097( ref l_U724, ref l_U711, 1, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U724 )))
    {
        sub_42096( ref l_U724, "M3_CS_12_Mus" );
        FREEZE_PED_POSITION( l_U724, 1 );
        sub_42178( l_U724, l_U725, l_U728 );
        SET_ROOM_FOR_PED_BY_NAME( l_U724, "Room_Press" );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U724, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U724, 1 );
        APPLY_DAMAGE_TO_PED_BODY_PART( l_U724, 2, 10 );
        SET_PED_EMOTION_STATE( l_U724, 3 );
        SET_PED_AS_ONE_SHOT_KILL( l_U724, 1 );
        STOP_PED_SPEAKING( l_U724, 1 );
        DAMAGE_DECALS_ON_PED( l_U724, 0.50000000 );
    }
    return;
}

void sub_42096(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        sub_5548( uParam1 );
        SET_PERSISTENT_PED_VARIATION( (uParam0^), uParam1 );
    }
    return;
}

void sub_42178(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

int sub_42454()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if (l_U1842._fU52)
    {
        if (NOT sub_42478())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
    }
    if (NOT l_U1932)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() >= 2800)
        {
            sub_42749( 1, sub_1132(), "MAX", ref uVar2, 2, 0 );
            sub_42963( "SSTD_WTHPG", ref uVar2, 7, 1 );
            l_U1932 = 1;
        }
    }
    if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_STAD_CP_02", "B_OUT_MID_02B_STAD_CAM" )) - 100))
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U1831, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U1832, 1065353216, 0 );
        CAMERA_ANIMATED_STOP( 1000, 1 );
    }
    if (sub_2427( ref l_U1833 ))
    {
        sub_6138( "IsTimerDone(tInterStart)" );
        sub_43912();
    }
    if ((ISEQ_QUERY_STATE( 1269878088, 5 )) || (ISEQ_QUERY_STATE( 1269878088, 6 )))
    {
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U1831, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U1832, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 1000, 1 );
        }
        AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_2", 0 );
        return 1;
    }
    return 0;
}

int sub_42478()
{
    if (l_U75)
    {
        sub_724( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U75 = 0;
        return 1;
        break;
    }
    sub_724( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

void sub_42749(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_42963(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_42987( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_42987(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_43042( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_43042(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_43077( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_43571( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_43077(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_43571(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_43912()
{
    if ((NOT (IS_PED_DEAD( g_U4392 ))) AND (NOT (IS_PED_DEAD( l_U724 ))))
    {
        FREEZE_PED_POSITION( l_U724, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U724, "Room_Press" );
        ISEQ_REGISTER_ENTITY( 1743875163, "s_stad_inter_cs", l_U724, 0 );
        ISEQ_REGISTER_ENTITY( 1743875163, "s_stad_inter_pas", g_U4392, 0 );
    }
    sub_42178( g_U4392, l_U729, l_U732 );
    ISEQ_START( 1743875163 );
    sub_42178( l_U724, l_U725, l_U728 );
    sub_44127( l_U724, 1 );
    SET_BULLET_CAM_PREF( l_U724, "VIG_CUSTOM_STAD_01", "VIG_CUSTOM_STAD_01", "VIG_CUSTOM_STAD_01", "VIG_CUSTOM_STAD_01", 0, "PIST_NORMAL_06_N", "ALL_01_MEDIUM_FAILSAFE", "PIST_NORMAL_06_N", "ALL_01_MEDIUM_FAILSAFE", "PIST_NORMAL_06_N", "ALL_01_MEDIUM_FAILSAFE", "PIST_NORMAL_06_N" );
    return;
}

int sub_44127(unknown uParam0, boolean bParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (bParam1)
        {
            if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 )))
            {
                sub_6138( "MAL_SetCanTriggerBulletCam: Ped is not able to trigger BC, adding" );
                SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
                return 1;
            }
        }
        else if (GET_PED_CAN_TRIGGER_BULLET_CAM( uParam0 ))
        {
            sub_6138( "MAL_SetCanTriggerBulletCam turning off BC" );
            SET_PED_CAN_TRIGGER_BULLET_CAM( uParam0, bParam1 );
            return 1;
        }
    }
    return 0;
}

void sub_44748(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_724( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_44873( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 44833, 44851, uParam8 );
}

void sub_44833()
{
    return;
}

int sub_44851()
{
    return 1;
}

void sub_44873(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_45189(int iParam0, unknown uParam1, unknown uParam2)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 1;
    iParam0->_fU76 = uParam1;
    iParam0->_fU80 = uParam2;
    iParam0->_fU24 = 1;
    return;
}

void sub_45329(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_724( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_724( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_724( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_724( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_724( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_724( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_24850( iParam0->_fU0, 0 );
            sub_724( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_46196( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_46196( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_724( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_46724( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_46196( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_47073( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_47073( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_46196(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1132() )))
        {
            SET_PLAYER_CONTROL( sub_1154(), 0, uParam2 );
            SET_PED_DUCKING( sub_1132(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1132() );
            }
            SET_PED_INVINCIBLE( sub_1132(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_46724(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_1132() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_1132(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1132(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1132(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1132(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1132(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_47073(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1132() )))
    {
        SET_PLAYER_CONTROL( sub_1154(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1132(), 0 );
        if (bParam0)
        {
            sub_47154();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_47154()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1132() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1132(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1132(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1132(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1132(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_47488(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_724( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_724( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_9726( iParam1 );
        sub_47747( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_48198( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_48198( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_48430( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_48198( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_48430( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_48430( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_48198( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_48430( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_48430( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_48430( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_48198( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_48430( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_48430( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_48430( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_48430( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_49988( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_724( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_47747(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_7103( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_724( "TEH", "Ending context", 0 );
        sub_724( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_48198(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_48430(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_49988(int iParam0)
{
    sub_5548( "CHECKPOINT DATA" );
    sub_50027( iParam0->_fU4 );
    sub_34584( iParam0->_fU16 );
    sub_34584( iParam0->_fU20 );
    sub_34584( iParam0->_fU24 );
    sub_50080( iParam0->_fU28 );
    sub_50080( iParam0->_fU56 );
    sub_50080( iParam0->_fU60 );
    sub_50080( iParam0->_fU64 );
    sub_50080( iParam0->_fU68 );
    sub_50080( iParam0->_fU72 );
    sub_50080( iParam0->_fU76 );
    sub_50080( iParam0->_fU80 );
    sub_50080( iParam0->_fU84 );
    sub_50080( iParam0->_fU88 );
    sub_50080( iParam0->_fU92 );
    sub_34584( iParam0->_fU32 );
    sub_50080( iParam0->_fU36 );
    sub_50080( iParam0->_fU40 );
    sub_50080( iParam0->_fU44 );
    sub_34584( iParam0->_fU136 );
    sub_50285( iParam0->_fU140 );
    sub_50080( iParam0->_fU52 );
    sub_5548( "---nRightHolsterAttachmentEnabled: " );
    sub_50080( iParam0->_fU96 );
    sub_5548( "---nRightHolsterAttachmentToggled: " );
    sub_50080( iParam0->_fU100 );
    sub_5548( "---nLeftHolsterAttachmentEnabled: " );
    sub_50080( iParam0->_fU104 );
    sub_5548( "---nLeftHolsterAttachmentToggled: " );
    sub_50080( iParam0->_fU108 );
    sub_5548( "---nRifleHolsterAttachmentEnabled: " );
    sub_50080( iParam0->_fU112 );
    sub_5548( "---nRifleHolsterAttachmentToggled: " );
    sub_50080( iParam0->_fU116 );
    sub_5548( "---nRightHandAttachmentEnabled: " );
    sub_50080( iParam0->_fU120 );
    sub_5548( "---nRightHandAttachmentToggled: " );
    sub_50080( iParam0->_fU124 );
    sub_5548( "---nLeftHandAttachmentEnabled: " );
    sub_50080( iParam0->_fU128 );
    sub_5548( "---nLeftHandAttachmentToggled: " );
    sub_50080( iParam0->_fU132 );
    sub_50080( l_U1 );
    sub_50080( 144 );
    return;
}

void sub_50027(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_50080(unknown uParam0)
{
    return;
}

void sub_50285(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_51177(unknown uParam0, unknown uParam1)
{
    sub_2171( uParam0, uParam1, 1, 0 );
    sub_2307( uParam0 );
    return;
}

void sub_51243(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_51409(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_51451( sub_1132(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_51451(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

int sub_51561(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_51574( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_51574(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_51727(int iParam0, unknown uParam1)
{
    if (NOT (sub_51574( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

void sub_51834()
{
    sub_724( "SP", "P_START_INTERROGATION_PT1", 0 );
    PED_SET_ACTION_INTENTION( g_U4392, 47, 4000, g_U649 );
    PED_SET_ACTION_INTENTION( l_U724, 47, 4000, g_U649 );
    SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1154(), 0 );
    SET_ADRENALINE_NOT_ALLOW( 1 );
    SET_PED_FORCED_TO_WALK( sub_1132(), 1 );
    sub_51243( ref l_U670 );
    sub_42749( 0, sub_1132(), "MAX", ref l_U670, 2, 0 );
    sub_42749( 1, g_U4392, "PASSOS", ref l_U670, 2, 0 );
    sub_42749( 2, l_U724, "M3_CS_12_AVG", ref l_U670, 2, 0 );
    sub_42963( "SSTD_PRPE1", ref l_U670, 8, 1 );
    l_U691 = 1;
    return;
}

int sub_52420()
{
    if ((NOT (sub_51561( l_U680 ))) AND ((NOT (sub_51561( l_U670 ))) AND (l_U691)))
    {
        return 1;
    }
    return 0;
}

void sub_52484()
{
    sub_724( "SP", "P_START_INTERROGATION_PT2", 0 );
    sub_51243( ref l_U680 );
    sub_42749( 0, sub_1132(), "MAX", ref l_U680, 2, 0 );
    sub_42749( 1, g_U4392, "PASSOS", ref l_U680, 2, 0 );
    sub_42749( 2, l_U724, "M3_CS_12_AVG", ref l_U680, 2, 0 );
    sub_42963( "SSTD_PRPE2", ref l_U680, 8, 1 );
    return;
}

int sub_52769()
{
    if ((IS_PED_DEAD( l_U724 )) AND (DOES_PED_EXIST( l_U724 )))
    {
        return 1;
    }
    if ((NOT (IS_PED_DEAD( l_U724 ))) AND (NOT (IS_PED_DEAD( sub_1132() ))))
    {
        if ((IS_PED_IN_CROSSHAIR_CYLINDER( l_U724, 2.00000000, 100.00000000, 0, -1082130432 )) AND (IS_PED_SHOOTING( sub_1132() )))
        {
            return 1;
        }
    }
    return 0;
}

void sub_52976()
{
    SET_OBJECT_COLLISION( l_U733, 1 );
    return;
}

vector sub_53016(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return "[dynamic result, ret vals = 3]";
        break;
        GET_PED_COORDS( uParam0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        break;
    }
    return vector( 0, 0, 0);
}

void sub_53073(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_SET_ACTION_INTENTION( (uParam0^), uParam4, uParam5, uParam1 );
    }
    return;
}

void sub_53232()
{
    sub_724( "SP", "P_INTERRUPT_INTERROGATION", 0 );
    AUDIO_MUSIC_STOP_ONESHOT();
    AUDIO_MUSIC_REQUEST_ONESHOT( "STADIUM_ONESHOT_12", 0 );
    sub_3803( ref l_U776 );
    if ((l_U692) || (l_U691))
    {
        if (NOT (IS_PED_DEAD( sub_1132() )))
        {
            SET_PED_EMOTION_STATE( sub_1132(), 3 );
        }
        sub_51727( ref l_U670, 0 );
        sub_51727( ref l_U680, 0 );
        l_U691 = 0;
        l_U692 = 0;
    }
    ISEQ_UNREGISTER_ENTITY( 1743875163, "s_stad_inter_cs" );
    SET_PED_RELATIONSHIP( l_U724, 1, 0 );
    STOP_PED_SPEAKING( l_U724, 1 );
    if (NOT (IS_PED_DEAD( l_U724 )))
    {
        sub_724( "[SA]", "Killing interrogation CS.", 0 );
        PED_SET_ACTION_INTENTION( l_U724, 48, 1000, g_U649 );
        sub_53551( l_U724 );
    }
    return;
}

void sub_53551(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

int sub_53767()
{
    if ((l_U692) AND (NOT (IS_PED_DEAD( l_U724 ))))
    {
        if (NOT (sub_51561( l_U680 )))
        {
            sub_724( "MF", "SSTD_PRPE2 - Speech has completed!", 0 );
            return 1;
        }
    }
    return 0;
}

void sub_54037()
{
    sub_724( "MF", "P_PASSOS_REACTION_DIALOGUE - START", 0 );
    sub_51243( ref l_U649 );
    sub_42749( 0, sub_1132(), "MAX", ref l_U649, 2, 0 );
    sub_42749( 1, g_U4392, "PASSOS", ref l_U649, 2, 0 );
    sub_42963( "SSTD_PRPD", ref l_U649, 8, 1 );
    sub_724( "MF", "P_PASSOS_REACTION_DIALOGUE - END", 0 );
    return;
}

void sub_54242(int iParam0, unknown uParam1)
{
    if (iParam0->_fU548)
    {
        return 0;
    }
    else
    {
        iParam0->_fU548 = sub_54277( iParam0, uParam1 );
    }
    return iParam0->_fU548;
}

void sub_54277(int iParam0, unknown uParam1)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD( sub_1132() )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if (sub_54336( iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam1) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU548 = 1;
    return Result;
}

void sub_54336(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_51451( sub_1132(), uParam0 );
}

void sub_54568()
{
    sub_54654( g_U4392, "/Global/INTERROGATION/INTERROGATION_SEQ/PASSOS/EARLY_EXIT/EARLY_EXIT" );
    WAIT( 0 );
    sub_42178( g_U4392, 97.77000000, 37.94600000, 2.81100000, 0.00000000 );
    sub_46196( 1, 0, 0, 1 );
    if (sub_54336( l_U439 ))
    {
        sub_42178( sub_1132(), 96.63508000, 36.68617000, 2.80502000, 270.00000000 );
    }
    else if (sub_54336( l_U418 ))
    {
        sub_42178( sub_1132(), 99.97811000, 38.86436000, 2.81075300, 220.00000000 );
    }
    else if ((sub_54867( "Y", "Less", 48.30000000 )) AND (sub_54867( "Y", "Greater", 45.00000000 )))
    {
        sub_42178( sub_1132(), 95.98611000, 43.29938000, 2.80370200, 220.00000000 );
        sub_15622( ref g_U3101, 1 );
        sub_15622( ref g_U3108, 1 );
    }
    else
    {
        TASK_TURN_PED_TO_FACE_COORD( sub_1132(), 108.04780000, 33.29097000, 4.15390500, 1, 1085905306 );
    };;;
    sub_55185( sub_1132(), 0 );
    sub_55328( ref l_U1539, 96.97000000, 38.13000000, 4.50000000, -9.51000000, 0.00000000, -121.44000000, 35.04000000, 3000 );
    sub_55539( ref l_U1539 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
    SHAKE_CAM( l_U1539._fU0, sub_55639(), 0.25000000 );
    SET_PLAYER_FORCED_AIM( sub_1154(), 1, 0 );
    if (l_U277._fU548)
    {
        SET_PED_SHOOTS_AT_COORD( g_U4392, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U724, 65488, g_U649 ) );
    }
    sub_55753( ref l_U778, 0, -1 );
    sub_36741( ref l_U778, 1, 0, -1 );
    sub_36070( ref l_U778, 0, 0, -1 );
    sub_36196( ref l_U778, 0, 0, -1 );
    sub_55971( ref l_U778, 0, -1 );
    sub_56180( ref l_U778, 3, 1 );
    sub_56421( ref l_U778[0]._fU0, 99.61205000, 36.01522000, 4.68080200, 108.58000000, 33.31000000, 2.81000000, 2 );
    sub_56628( ref l_U778[1], 250, 106.21240000, 31.48028000, 2.80341500, "GenCover", "6C71C19F_5F3F49A_Corner2", 1, 0, 1 );
    sub_56628( ref l_U778[2], 0, 107.49020000, 43.20616000, 2.80383400, "GenCover", "6C71C19F_B2EF0638_Corner1", 1, 0, 1 );
    sub_56628( ref l_U778[3], 1000, 114.26490000, 38.33852000, 3.59495500, "GenCover", "6C71C19F_937588CA_Popover1", 1, 0, 1 );
    sub_51177( ref l_U1579, 500 );
    sub_51177( ref l_U1588, 1000 );
    AUDIO_MUSIC_PLAY_ONESHOT();
    AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1_2_3", "", 0, 3000, -1, -1082130432, 0 );
    return;
}

void sub_54654(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

int sub_54867(unknown uParam0, unknown uParam1, float fParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    float fVar8;

    uVar5 = {sub_53016( sub_1132() )};
    if (ARE_STRINGS_EQUAL( uParam0, "X" ))
    {
        fVar8 = uVar5._fU0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Y" ))
    {
        fVar8 = uVar5._fU4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Z" ))
    {
        fVar8 = uVar5._fU8;
    };;;
    if (ARE_STRINGS_EQUAL( uParam1, "Greater" ))
    {
        if (fVar8 > fParam2)
        {
            return 1;
        }
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Less" ))
    {
        if (fVar8 < fParam2)
        {
            return 1;
        }
    }
    return 0;
}

void sub_55185(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
        sub_6138( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

void sub_55328(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_2171( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U723, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_55539(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_2307( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

string sub_55639()
{
    return "WOBBLY_SHAKE";
}

void sub_55753(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
        sub_55805( (uParam0^)[I] );
    }
    return;
}

void sub_55805(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43)
{
    sub_55833( uParam0, uParam0._fU56, uParam0._fU68 );
    return;
}

void sub_55833(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47)
{
    if (NOT (IS_PED_DEAD( uParam0._fU0 )))
    {
        SET_PED_COORDS( uParam0._fU0, uParam44, 1 );
        SET_PED_HEADING( uParam0._fU0, uParam47 );
    }
    return;
}

void sub_55971(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
        sub_56026( ref (uParam0^)[I]._fU0, sub_1132() );
        sub_56098( ref (uParam0^)[I]._fU0, sub_1132() );
    }
    return;
}

void sub_56026(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_56098(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_56180(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_56216( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

void sub_56216(int iParam0, unknown uParam1, unknown uParam2)
{
    sub_56234( iParam0 + 0, uParam1, uParam2 );
    return;
}

void sub_56234(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_56248( uParam0, uParam1 );
    sub_56298( uParam0, uParam2 );
    return;
}

void sub_56248(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

void sub_56298(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_EMOTION_STATE( (uParam0^), uParam1 );
    }
    return;
}

void sub_56421(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    unknown uVar10;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam7 );
        OPEN_SEQUENCE_TASK( ref uVar10 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam4, 3, 20000, 1048576000, 0, 0 );
        TASK_SHOOT_AT_COORD( 0, uParam1, 9999999, 0, 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar10 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar10 );
        CLEAR_SEQUENCE_TASK( uVar10 );
    }
    return;
}

void sub_56628(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, boolean bParam8, boolean bParam9)
{
    unknown uVar12;

    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        OPEN_SEQUENCE_TASK( ref uVar12 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_PAUSE( 0, uParam1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam2, 3, -1, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if (bParam8)
        {
            TASK_COMBAT_MOVE_TO_COVER( 0, uParam5, uParam6, sub_1132() );
        }
        else
        {
            TASK_COMBAT_MOVE_TO_COVER( 0, uParam5, uParam6, 0 );
        }
        CLOSE_SEQUENCE_TASK( uVar12 );
        TASK_PERFORM_SEQUENCE( iParam0->_fU0, uVar12 );
        CLEAR_SEQUENCE_TASK( uVar12 );
        if (bParam7)
        {
            SET_PED_FLAG_LOCK_TO_COVER( iParam0->_fU0, 1 );
        }
        if (bParam9)
        {
            SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( iParam0->_fU0, 1 );
        }
    }
    return;
}

int sub_57317(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_2427( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_2427( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_57567(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_57844()
{
    if (NOT (IS_PED_DEAD( sub_1132() )))
    {
        SET_PED_EMOTION_STATE( sub_1132(), 3 );
    }
    SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1154(), 1 );
    SET_ADRENALINE_NOT_ALLOW( 0 );
    return;
}

void sub_57914()
{
    if ((NOT (IS_PED_DEAD( l_U778[0]._fU0 ))) AND (NOT (IS_PED_DEAD( g_U4392 ))))
    {
        TASK_LOOK_AT_PED( g_U4392, l_U778[0]._fU0, -1, 0 );
    }
    return;
}

void sub_57997()
{
    sub_724( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_724( "CCB", "Starting the Stadium_Media context...", 0 );
    START_CONTEXT( "Stadium_Media" );
    return;
}

int sub_58406(unknown uParam0)
{
    int iVar3;

    iVar3 = nil;
    if (HAS_SHOT_BEEN_FIRED_IN_AREA( sub_53016( sub_1132() ), 2.00000000, uParam0, ref iVar3 ))
    {
        if (iVar3 == sub_1132())
        {
            sub_6138( "MAL_HasPlayerFired RETURNING TRUE" );
            return 1;
        }
    }
    return 0;
}

void sub_58786(unknown uParam0, int iParam1)
{
    int Result;

    Result = GET_RANDOM_INT_IN_RANGE( uParam0, iParam1 + 1 );
    if (Result > iParam1)
    {
        Result = iParam1;
    }
    return Result;
}

int sub_58914(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if ((sub_58929( (uParam0^), uParam1 )) == 1)
    {
        if (bParam2)
        {
            sub_58995( uParam0, uParam1 );
        }
        return 1;
    }
    return 0;
}

int sub_58929(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 );
    }
    return 0;
}

void sub_58995(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

void sub_59221(int iParam0, unknown uParam1)
{
    sub_59244( iParam0 + 0, iParam0->_fU80, uParam1 );
    return;
}

void sub_59244(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_59265( uParam0, sub_1132(), uParam1, uParam2 );
    return;
}

void sub_59265(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;

    sub_6138( "MAL_UnblockAndCombatPed" );
    OPEN_SEQUENCE_TASK( ref uVar6 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        sub_6138( "MAL_UnblockAndCombatPed: Victim is not dead" );
        TASK_COMBAT_PED( 0, uParam1 );
    }
    CLOSE_SEQUENCE_TASK( uVar6 );
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        sub_6138( "MAL_UnblockAndCombatPed: Ped is not dead" );
        if (bParam3)
        {
            CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        }
        else
        {
            CLEAR_PED_TASKS( (uParam0^) );
        }
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam2 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
    }
    CLEAR_SEQUENCE_TASK( uVar6 );
    return;
}

void sub_59578(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (iParam2 == -1)
    {
        iParam2 = (uParam0^) - 1;
    }
    for ( I = uParam1; I <= iParam2; I++ )
    {
        sub_59626( ref (uParam0^)[I] );
    }
    return;
}

void sub_59626(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        sub_59656( iParam0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( iParam0->_fU0, 0 );
    }
    return;
}

void sub_59656(int iParam0)
{
    if (NOT (IS_PED_DEAD( iParam0->_fU0 )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( iParam0->_fU0, 0 );
    }
    return;
}

void sub_59829(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            return (uParam0^)[I]._fU0;
        }
    }
    return nil;
}

void sub_59940(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        sub_36397( ref uParam1, (uParam0^), 1 );
    }
    return;
}

void sub_60223()
{
    unknown uVar2;
    unknown uVar3;

    sub_46196( 1, 0, 0, 0 );
    sub_60246( ref l_U778 );
    uVar2 = GET_PED_HEADING( g_U4392 );
    PED_ACTION_TREE_PLAY_NODE( g_U4392, "/Global/INTERROGATION/INTERROGATION_SEQ/PASSOS/VIG_23/IN_COVER_IDLE/ABOUT_TO_DIE" );
    SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U4392, 0 );
    SET_PED_AS_ONE_SHOT_KILL( g_U4392, 1 );
    sub_42178( g_U4392, 98.20660000, 36.75754000, 2.80644000, uVar2 );
    uVar3 = sub_59829( ref l_U778 );
    sub_42178( uVar3, 99.14936000, 40.06298000, 2.80661100, 168.87000000 );
    sub_56098( ref uVar3, g_U4392 );
    sub_56026( ref uVar3, g_U4392 );
    sub_60631( uVar3, g_U4392, -1, 1 );
    sub_60702( ref uVar3, g_U4392, -256437761, 0 );
    return;
}

void sub_60246(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_60280( ref (uParam0^)[I]._fU0 );
    }
    return;
}

void sub_60280(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_STAND_STILL( 0, -1 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

void sub_60631(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        TASK_AIM_GUN_AT_PED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_60702(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        OPEN_SEQUENCE_TASK( ref uVar6 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (NOT (IS_PED_DEAD( uParam1 )))
        {
            TASK_AIM_GUN_AT_PED( 0, uParam1, 50, uParam3 );
            TASK_SHOOT_AT_PED( 0, uParam1, 9999999, uParam2, uParam3, 0, 0 );
        }
        CLOSE_SEQUENCE_TASK( uVar6 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
        CLEAR_SEQUENCE_TASK( uVar6 );
    }
    return;
}

void sub_60970(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if (sub_51451( uParam1, iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam2) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU552 = 1;
    return Result;
}

void sub_61157(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU0 )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_61281()
{
    int Result;
    int I;

    Result = nil;
    I = 0;
    for ( I = 0; I < l_U778; I++ )
    {
        if ((NOT (sub_60970( ref l_U1672, l_U778[I]._fU0, 0 ))) AND (NOT (IS_PED_DEAD( l_U778[I]._fU0 ))))
        {
            if (Result == nil)
            {
                Result = l_U778[I]._fU0;
            }
            else if ((sub_61414( g_U4392, l_U778[I]._fU0, 0 )) < (sub_61414( g_U4392, Result, 0 )))
            {
                Result = l_U778[I]._fU0;
            }
        }
    }
    return Result;
}

void sub_61414(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_61697(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_SET_ACTION_INTENTION( uParam0, uParam1, uParam2, g_U649 );
    }
    return;
}

void sub_61758(unknown uParam0, unknown uParam1)
{
    sub_56026( uParam0, uParam1 );
    sub_56098( uParam0, uParam1 );
    return;
}

void sub_61998()
{
    PED_SET_ACTION_INTENTION( g_U4392, 50, 10000, g_U649 );
    sub_32784( g_U4392 );
    sub_51177( ref l_U1275, 6500 );
    return;
}

void sub_62295(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    sub_62350( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, 62317, 1077936128, 1069547520, 1065353216 );
    return;
}

void sub_62317(unknown uParam0)
{
    return;
}

void sub_62350(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    unknown uVar12;

    if ((sub_58929( uParam0, 29 )) == 3)
    {
        uVar12 = nil;
        if (((sub_58406( 1 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 2, 10000, 0, -1082130432 ))) || (HAS_BULLET_IMPACTED_IN_AREA( sub_53016( uParam0 ), 3, ref uVar12 )))
        {
            sub_6138( "PLAYER SHOT AT PASSOS" );
            sub_53073( ref uParam0, sub_53016( sub_1132() ), 34, 1000 );
            SET_PED_PRIMARY_LOOKAT( uParam0, sub_1132() );
            (uParam1^) = 1;
            break;
            uParam6;
            0;
            break;
        }
        if (NOT (uParam2^))
        {
            if (((sub_58929( uParam0, 32 )) != 3) AND (((sub_58929( uParam0, 33 )) != 3) AND (IS_PED_TOUCHING_PED( sub_1132(), uParam0 ))))
            {
                sub_6138( "BAD TOUCH!!" );
                (uParam2^) = 1;
                (uParam1^) = 1;
                sub_53073( ref uParam0, sub_53016( sub_1132() ), 35, 1000 );
                SET_PED_PRIMARY_LOOKAT( uParam0, sub_1132() );
                break;
                uParam6;
                1;
                break;
            }
        }
        else if (NOT (IS_PED_TOUCHING_PED( sub_1132(), uParam0 )))
        {
            (uParam2^) = 0;
        }
        if (NOT (uParam3^))
        {
            if (sub_62678( ref uParam0, 300, 100, -1, 0, 0 ))
            {
                if ((IS_CONTROL_PRESSED( 0, 6 )) AND (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 1, 10000, 0, -1082130432 )))
                {
                    (uParam1^) = 1;
                    (uParam3^) = 1;
                    sub_53073( ref uParam0, sub_53016( sub_1132() ), 32, 1000 );
                    SET_PED_PRIMARY_LOOKAT( uParam0, sub_1132() );
                    sub_6138( "PLAYER AIMING AT PASSOS" );
                    break;
                    uParam6;
                    2;
                    break;
                }
            }
        }
        else if ((NOT (IS_CONTROL_PRESSED( 0, 6 ))) || (NOT (IS_PED_IN_CROSSHAIR_CYLINDER( uParam0, 1.50000000, 10000, 0, -1082130432 ))))
        {
            if ((sub_58929( uParam0, 32 )) != 3)
            {
                (uParam3^) = 0;
                sub_6138( "PLAYER NO LONGER AIMING AT PASSOS" );
            }
        }
        if (NOT (uParam1^))
        {
            if ((sub_62678( ref uParam0, uParam9, 180, -1, 46, 0 )) || ((sub_62678( ref uParam0, uParam8, 45, -1, 31, 0 )) || (sub_62678( ref uParam0, uParam7, 30, -1, 0, 0 ))))
            {
                sub_6138( "INTERRUPTING PASSOS" );
                sub_53073( ref uParam0, sub_53016( sub_1132() ), 33, 1000 );
                SET_PED_PRIMARY_LOOKAT( uParam0, sub_1132() );
                (uParam1^) = 1;
            }
        }
        else if ((sub_62678( ref uParam0, -1, 180, uParam8 + 1, 91, 0 )) || (sub_62678( ref uParam0, -1, 90, uParam7 + 1, 0, 0 )))
        {
            if ((NOT (uParam2^)) AND (NOT (uParam3^)))
            {
                if ((sub_58914( ref uParam0, 35, 1 )) || ((sub_58914( ref uParam0, 32, 1 )) || ((sub_58914( ref uParam0, 34, 1 )) || (sub_58914( ref uParam0, 33, 1 )))))
                {
                    sub_58995( ref uParam0, 33 );
                    sub_58995( ref uParam0, 34 );
                    sub_58995( ref uParam0, 32 );
                    sub_58995( ref uParam0, 35 );
                    sub_58995( ref uParam0, 31 );
                    sub_61697( uParam0, 36, 1000 );
                    CLEAR_PED_PRIMARY_LOOKAT( uParam0 );
                    (uParam1^) = 0;
                    (uParam3^) = 0;
                    (uParam2^) = 0;
                    (uParam4^) = 0;
                    sub_2171( iParam5, sub_58786( 10000, 15000 ), 1, 0 );
                    return;
                }
            }
        }
        if ((sub_58929( uParam0, 30 )) == 3)
        {
            if (sub_2427( iParam5 ))
            {
                sub_53073( ref uParam0, sub_53016( sub_1132() ), 31, 1000 );
                (uParam4^)++;
                break;
                uParam6;
                3;
                break;
            }
            else if ((uParam4^) < 3)
            {
                if ((iParam5->_fU16) || (NOT (sub_2061( iParam5 ))))
                {
                    sub_2171( iParam5, sub_58786( 10000, 15000 ), 1, 0 );
                    sub_2307( iParam5 );
                }
            }
        }
    }
    sub_58914( ref uParam0, 31, 1 );
    sub_58914( ref uParam0, 36, 1 );
    return;
}

int sub_62678(unknown uParam0, float fParam1, unknown uParam2, float fParam3, float fParam4, boolean bParam5)
{
    float fVar8;

    if ((NOT (IS_PED_DEAD( sub_1132() ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        fVar8 = sub_61414( (uParam0^), sub_1132(), 0 );
        if ((fVar8 > fParam1) AND (fParam1 > -1))
        {
            return 0;
        }
        else if ((fVar8 < fParam3) AND (fParam3 > -1))
        {
            return 0;
        }
        else if (NOT (IS_PED_FACING_PED( (uParam0^), sub_1132(), uParam2 )))
        {
            return 0;
        }
        else if ((IS_PED_FACING_PED( (uParam0^), sub_1132(), fParam4 )) AND (fParam4 > 0))
        {
            return 0;
        }
        else if (bParam5)
        {
            sub_34584( fParam4 );
        }
        return 1;;;;;
    }
    return 0;
}

void sub_63623()
{
    if ((NOT (IS_PED_DEAD( sub_1132() ))) AND (NOT (IS_PED_DEAD( g_U4392 ))))
    {
        TASK_LOOK_AT_PED( g_U4392, sub_1132(), -1, 0 );
    }
    return;
}

void sub_63704()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_63770()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if (sub_51409( ref l_U1303, 0 ))
    {
        sub_724( "MF", "Playing Spech: SSTD_PGAR", 0 );
        sub_63846( "SSTD_PGAR", ref uVar2 );
        return;
    }
    if (sub_51409( ref l_U1324, 0 ))
    {
        sub_724( "MF", "Playing Spech: SSTD_TAGP", 0 );
        sub_63846( "SSTD_TAGP", ref uVar2 );
        return;
    }
    return;
}

void sub_63846(unknown uParam0, unknown uParam1)
{
    sub_51243( uParam1 );
    sub_42749( 0, sub_1132(), "MAX", uParam1, 2, 0 );
    sub_42749( 1, sub_1132(), "MAX", uParam1, 2, 0 );
    sub_42963( uParam0, uParam1, 8, 1 );
    return;
}

void sub_64404()
{
    sub_724( "[SA]", "Enabling static emitter S_STAD_SE_STAIRS_SHOTS.", 0 );
    ENABLE_STATIC_EMITTER( "S_STAD_SE_STAIRS_SHOTS", 1 );
    return;
}

void sub_64544()
{
    sub_6138( "P_DIRTY_HALLWAY_CS" );
    sub_31992( ref l_U1130, 113.56140000, 4.45019400, 2.80016600, 90, g_U2381, 7, 3, 2, 0, 0 );
    l_U1129 = sub_34097( ref l_U1129, ref l_U1130, 1, 0, 1 );
    sub_34348( l_U1129, 434544317, 25000, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U1129 )))
    {
        SET_PERSISTENT_PED_VARIATION( l_U1129, "M3_CS_15_Avg" );
        SET_PED_AI_TEMPLATE( l_U1129, ref g_U3888 );
        SET_PED_COMBAT_RANGE_MIN( l_U1129, 3 );
        SET_PED_COMBAT_RANGE_MAX( l_U1129, 15 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1129, 1 );
        SET_PED_CAN_INTERACT_WITH_DOORS( l_U1129, 1 );
        SET_PED_COMBAT_MOVEMENT( l_U1129, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1129, "Room_Offices" );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U1129, 1 );
        SET_PED_PRIMARY_LOOKAT( l_U1129, sub_1132() );
    }
    sub_64849( ref l_U1129 );
    sub_56248( ref l_U1129, 3 );
    sub_64912( l_U1129, 1090240116, "DoorKicker" );
    ISEQ_START( 1090240116 );
    WAIT( 0 );
    sub_16087( ref g_U3143, 1, 0, 1065353216 );
    sub_59244( ref l_U1129, 0, 0 );
    sub_44127( l_U1129, 1 );
    SET_BULLET_CAM_PREF( l_U1129, "all_01_far_failsafe", "all_01_med_failsafe", "all_01_far_failsafe", "all_01_med_failsafe", 0, "all_01_far_failsafe", "all_01_med_failsafe", "all_01_far_failsafe", "all_01_med_failsafe", "all_01_far_failsafe", "all_01_med_failsafe", "all_01_far_failsafe" );
    return;
}

void sub_64849(unknown uParam0)
{
    sub_61758( uParam0, sub_1132() );
    return;
}

void sub_64912(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        ISEQ_REGISTER_ENTITY( uParam1, uParam2, uParam0, 0 );
    }
    return;
}

void sub_65318(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_51451( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_65641()
{
    sub_724( "GA", "P_PASSOS_SHOOTS_DIRTY_CS start", 0 );
    l_U1350 = 1;
    SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U1129, 0 );
    sub_46196( 1, 0, 0, 1 );
    DO_SCREEN_FADE_OUT( 0 );
    CLEAR_PED_TASKS_IMMEDIATELY( sub_1132() );
    sub_41473( sub_1132(), 114.20580000, 2.93873200, 2.80012700, 180.00000000 );
    sub_55185( sub_1132(), 0 );
    sub_55328( ref l_U1207, 108.69310000, 7.63253500, 4.26966300, -6.14394600, 0.00001300, -137.77320000, 45.00000000, 2000 );
    SET_PED_INVINCIBLE( g_U4392, 1 );
    if (NOT (IS_PED_DEAD( l_U1129 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1129, 1 );
    }
    sub_65877();
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_02", "VIG_24_STAD_PASS_MEDIA_B_CAM", 1, 107.72300000, 18.50000000, 4.37300000, 0.00000000, 0, 0 );
    DO_SCREEN_FADE_IN( 0 );
    sub_51177( ref l_U1238, 3300 );
    if (NOT (IS_PED_DEAD( l_U1129 )))
    {
        SET_PED_INVINCIBLE( l_U1129, 1 );
    }
    sub_724( "GA", "P_PASSOS_SHOOTS_DIRTY_CS end", 0 );
    return;
}

void sub_65877()
{
    sub_724( "GA", "P_PASSOS_MOVE_INTO_HALLWAY start", 0 );
    if (NOT (IS_PED_DEAD( g_U4392 )))
    {
        ISEQ_UNREGISTER_ENTITY( 1743875163, "s_stad_inter_pas" );
        sub_65987( g_U4392 );
        ISEQ_REGISTER_ENTITY( -1324066065, "PASSOS_HALLWAY", g_U4392, 0 );
        sub_41473( g_U4392, l_U771, 180.00000000 );
        ISEQ_START( -1324066065 );
    }
    sub_724( "GA", "P_PASSOS_MOVE_INTO_HALLWAY end", 0 );
    return;
}

void sub_65987(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        sub_724( "[SA]", "Clearing ACT_INT_SEQ_ACTION01 - ACT_INT_SEQ_ACTION12 for ped.", 0 );
        PED_FINISH_ACTION_INTENTION( uParam0, 47 );
        PED_FINISH_ACTION_INTENTION( uParam0, 48 );
        PED_FINISH_ACTION_INTENTION( uParam0, 49 );
        PED_FINISH_ACTION_INTENTION( uParam0, 50 );
        PED_FINISH_ACTION_INTENTION( uParam0, 51 );
        PED_FINISH_ACTION_INTENTION( uParam0, 52 );
        PED_FINISH_ACTION_INTENTION( uParam0, 53 );
        PED_FINISH_ACTION_INTENTION( uParam0, 54 );
        PED_FINISH_ACTION_INTENTION( uParam0, 55 );
        PED_FINISH_ACTION_INTENTION( uParam0, 56 );
        PED_FINISH_ACTION_INTENTION( uParam0, 57 );
        PED_FINISH_ACTION_INTENTION( uParam0, 58 );
    }
    return;
}

void sub_66679()
{
    vector vVar2;
    float fVar5;
    unknown uVar6;

    sub_724( "GA", "P_PASSOS_MOVE_DOWN_HALLWAY start", 0 );
    l_U1350 = 1;
    SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U1129, 0 );
    if (NOT (IS_PED_DEAD( g_U4392 )))
    {
        if (ISEQ_QUERY_ENTITY_STATE( -1324066065, "PASSOS_HALLWAY", 3 ))
        {
            PED_SET_ACTION_INTENTION( g_U4392, 48, 1000, g_U649 );
        }
        else
        {
            ISEQ_UNREGISTER_ENTITY( 1743875163, "s_stad_inter_pas" );
            sub_65987( g_U4392 );
            ISEQ_REGISTER_ENTITY( -1324066065, "PASSOS_HALLWAY", g_U4392, 0 );
            ISEQ_START( -1324066065 );
            WAIT( 0 );
            sub_54654( g_U4392, "/Global/S_STAD_PAS_HAL/SEQ_START/PASSOS_VIG_25_26/WALK_DOWN_HALL" );
        }
        sub_41473( g_U4392, 108.37800000, 7.70600000, 2.82000000, 180.00000000 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_STAD_CP_02", "VIG_24_STAD_BSMT_HALLWAY_MAX_CAM", 0, 108.56500000, 16.70600000, 4.59200000, 0.00000000, 0, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
    sub_15622( ref g_U3143, 1 );
    vVar2 = {111.69600000, 3.75600000, 2.80012700};
    fVar5 = 135;
    CLEAR_PED_TASKS_IMMEDIATELY( sub_1132() );
    sub_38297( ref uVar6, ref uVar6, 1, 0 );
    sub_67215( vVar2, fVar5, -4.54356400, -6.25519200 );
    sub_64912( sub_1132(), 1708899639, "Max" );
    ISEQ_START( 1708899639 );
    sub_55185( sub_1132(), 1 );
    sub_5342( l_U1129 );
    sub_31992( ref l_U1130, 111.56170000, 5.04697200, 2.80012700, 180, g_U2381, 7, 3, 2, 0, 0 );
    l_U1129 = sub_34097( ref l_U1129, ref l_U1130, 1, 0, 1 );
    SET_PERSISTENT_PED_VARIATION( l_U1129, "M3_CS_15_Avg" );
    sub_67430( l_U1129, 0 );
    SET_PED_COORDS( l_U1129, 111.35790000, 3.38634700, 2.80012700, 1 );
    SET_PED_HEADING( l_U1129, 180 );
    DESTROY_CAM( l_U1207._fU0 );
    sub_724( "MF", "Playing Spech: sss_VCURA", 0 );
    sub_42749( 1, sub_1132(), "MAX", ref l_U660, 2, 0 );
    sub_42749( 2, g_U4392, "PASSOS", ref l_U660, 2, 0 );
    sub_42963( "SSTD_VCUR", ref l_U660, 8, 1 );
    AUDIO_MUSIC_FORCE_TRACK( "STADIUM_FINAL", "STADIUM_1", "", 0, 8000, -1, -1082130432, 0 );
    sub_724( "GA", "P_PASSOS_MOVE_DOWN_HALLWAY end", 0 );
    return;
}

void sub_67215(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_1132();
    sub_42178( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

void sub_67430(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
        sub_5548( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

void sub_69523()
{
    if (IS_SCRIPTEDFX_ENABLED() == 1)
    {
        if (l_U1519 == 1)
        {
            if ((sub_2427( ref l_U1520 )) == 1)
            {
                sub_724( "SP", "Playing Random Image FX", 0 );
                PLAY_IMAGEFX( l_U1356[l_U1529]._fU4, 4, 0 );
                sub_2171( ref l_U1520, l_U1356[l_U1529]._fU16 + (GET_RANDOM_INT_IN_RANGE( 6000, 10000 )), 1, 0 );
                sub_2307( ref l_U1520 );
                l_U1529++;
                if (l_U1529 >= l_U1356)
                {
                    l_U1529 = 0;
                }
            }
        }
    }
    return;
}

void sub_69880()
{
    sub_51243( ref l_U1176 );
    sub_42749( 0, sub_1132(), "MAX", ref l_U1176, 2, 0 );
    sub_42749( 1, g_U4392, "PASSOS", ref l_U1176, 2, 0 );
    sub_42963( "SSTD_PRPL", ref l_U1176, 8, 1 );
    return;
}

void sub_69990(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if ((NOT (IS_PED_DEAD( uParam1 ))) || (IS_PED_DEAD( uParam1 )))
        {
            SET_PED_PRIMARY_LOOKAT( uParam0, uParam1 );
        }
    }
    return;
}

void sub_71446(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_71481( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_71481(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_4341( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_71741(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_4341( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_72868(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_73211(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_73726(int iParam0, unknown uParam1)
{
    if ((sub_15634( iParam0 )) == 0)
    {
        sub_15700( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

void sub_73829()
{
    sub_724( "GA", "P_SAVE_IN_STAIRWELL start", 0 );
    if (NOT l_U774)
    {
        l_U774 = 1;
    }
    if (g_U855 != 4)
    {
        g_U855 = 4;
        sub_47488( ref l_U77, g_U855, sub_1132(), g_U2138[4], g_U2256[4], g_U2296[4], g_U2336[4], 1 );
    }
    ISEQ_UNREGISTER_ENTITY( 1743875163, "s_stad_inter_cs" );
    sub_5342( l_U724 );
    sub_5342( l_U1129 );
    sub_5643( ref l_U778 );
    sub_5431( l_U733 );
    sub_4229( 1743875163, ref g_U1263 );
    sub_4229( 1708899639, ref g_U1263 );
    sub_4229( 1269878088, ref g_U1263 );
    sub_4229( -1324066065, ref g_U1263 );
    sub_71446( ref l_U113, ref g_U1069 );
    sub_71741( "LEVEL_S_STAD_CP_02", ref g_U1354 );
    sub_71741( "PAS_INT", ref g_U1354 );
    sub_71741( "DAM_DEAD", ref g_U1354 );
    sub_724( "GA", "P_SAVE_IN_STAIRWELL end", 0 );
    return;
}

void sub_74218()
{
    sub_71741( "PLGE_RIFLE_CROUCH", ref g_U1354 );
    sub_71741( "PLGE_PSTL_CROUCH", ref g_U1354 );
    sub_71741( "AMED_RIFLE_CORE", ref g_U1354 );
    sub_71741( "AMED_PSTL_CORE", ref g_U1354 );
    sub_71741( "AMED_RIFLE_CORE_RELOAD", ref g_U1354 );
    sub_71741( "AMED_PSTL_CORE_RELOAD", ref g_U1354 );
    sub_71741( "PLGE_RIFLE_HANDSIG", ref g_U1354 );
    sub_71741( "PLGE_PSTL_HANDSIG", ref g_U1354 );
    sub_71741( "PLGE_RIFLE_ACTIONS", ref g_U1354 );
    sub_71741( "PLGE_PSTL_ACTIONS", ref g_U1354 );
    sub_71741( "AMED_RIFLE_KNEE", ref g_U1354 );
    sub_71741( "AMED_PSTL_KNEE", ref g_U1354 );
    sub_71741( "AMED_RIFLE_COVER", ref g_U1354 );
    sub_71741( "AMED_PSTL_COVER", ref g_U1354 );
    sub_71741( "AMED_RIFLE_REACT", ref g_U1354 );
    sub_71741( "AMED_PSTL_REACT", ref g_U1354 );
    sub_71741( "AMED_RIFLE_COVER_EXIT", ref g_U1354 );
    sub_71741( "AMED_PSTL_COVER_EXIT", ref g_U1354 );
    sub_71741( "AMED_PSTL_FULLBODY", ref g_U1354 );
    return;
}

void sub_74876()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    sub_724( "ML", "P_DIAL_MAX_GUNFIGHT", "---" );
    sub_63846( "SSTD_GMUS", ref uVar2 );
    return;
}

int sub_74960(int iParam0, unknown uParam1, boolean bParam2, boolean bParam3)
{
    if ((sub_51409( iParam0, 0 )) == 1)
    {
        if (NOT bParam3)
        {
            SET_PED_FORCED_TO_WALK( sub_1132(), 1 );
        }
        if (NOT bParam2)
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1154(), 0 );
        }
    }
    if ((NOT (sub_54336( (iParam0^) ))) AND (iParam0->_fU64))
    {
        iParam0->_fU64 = 0;
        if (NOT bParam3)
        {
            SET_PED_FORCED_TO_WALK( sub_1132(), 0 );
        }
        if (NOT bParam2)
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1154(), 1 );
        }
    }
    if (sub_51409( uParam1, 0 ))
    {
        return 1;
    }
    return 0;
}

void sub_75335()
{
    sub_724( "GA", "P_RELEASE_MS_ASSETS start", 0 );
    sub_71446( ref l_U113, ref g_U1069 );
    sub_75405( ref l_U123, ref g_U1214 );
    sub_71741( "LEVEL_S_STAD_CP_02", ref g_U1354 );
    sub_71741( "PAS_INT", ref g_U1354 );
    sub_71741( "LEVEL_S_STAD_CP_02a", ref g_U1354 );
    sub_71741( "LEVEL_S_STAD_CP_03", ref g_U1354 );
    sub_71741( "DAM_DEAD", ref g_U1354 );
    sub_71741( "FACE_PASNYB", ref g_U1354 );
    sub_75812( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", ref g_U2012 );
    sub_74218();
    sub_724( "GA", "P_RELEASE_MS_ASSETS end", 0 );
    return;
}

void sub_75405(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_75440( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_75440(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_4341( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_75812(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_4341( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


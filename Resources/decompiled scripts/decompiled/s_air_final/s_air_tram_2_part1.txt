void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U55 = -1;
    l_U56 = {64536, 64536, 64536};
    l_U78 = 0;
    l_U79 = 0;
    l_U80 = 1500;
    l_U126 = 0;
    l_U127 = 1;
    l_U128 = 1;
    l_U129 = 0;
    l_U130 = {-1049.23000000, 1745.72000000, -5.85600000};
    l_U133 = 8.00000000;
    l_U144 = 20000;
    l_U145 = {-1037.73000000, 1795.72000000, -5.85600000};
    l_U148 = 10.00000000;
    l_U158 = 5000;
    l_U160 = {-501.38000000, 1616.84000000, -5.89600000};
    l_U164 = {-335.05100000, 1797.05000000, -5.85600000};
    l_U177 = {-491.98600000, 2230.14000000, -5.89600000};
    l_U232 = "MID_07_FIN_Concat";
    l_U762 = 2;
    l_U763 = 19.00000000;
    l_U764 = 19.00000000;
    l_U765 = 9.00000000;
    l_U766 = 12.00000000;
    l_U767 = 6.80000000;
    l_U768 = 12.00000000;
    l_U769 = -1;
    l_U789 = 3000;
    l_U869 = 5000;
    l_U870 = 1500;
    l_U871 = -1;
    l_U872 = 0.02400000;
    l_U873 = 428;
    l_U874 = 902;
    l_U875 = 0.01500000;
    l_U876 = 100;
    l_U877 = 100;
    l_U878 = 100;
    l_U879 = 100;
    l_U880 = 100;
    l_U881 = 250;
    l_U892 = 0;
    l_U893 = 0;
    l_U894 = 0;
    l_U895 = {0.00000000, 0.00000000, -0.50000000};
    sub_790( "SA", "Script s_air_Tram_2_Part1.sc is starting up...", 0 );
    sub_839();
    l_U126 = 1;
    if (g_U829 == 6)
    {
        sub_1389( sub_1306(), g_U2014[6], g_U2129[6] );
        FREEZE_PED_POSITION( sub_1306(), 1 );
    }
    while (NOT IS_EXITFLAG_SET())
    {
        sub_1472();
        sub_3022();
        if (l_U129 == 0)
        {
            sub_11069();
        }
        WAIT( 0 );
    }
    if (g_U861[5]._fU40 == 3)
    {
        sub_5214( 0 );
    }
    else
    {
        sub_5214( 1 );
    }
    sub_52345();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_air_Tram_2_Part1" );
    sub_790( "SA", "Script s_air_Tram_2_Part1.sc is terminating...", 0 );
    return;
}

void sub_790(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_839()
{
    sub_790( "SA", "P_T2P1_INIT_ARRAYS", 0 );
    l_U180[0] = g_U2375;
    l_U180[1] = g_U2376;
    l_U180[2] = g_U2377;
    l_U180[3] = g_U2378;
    l_U180[4] = g_U2379;
    l_U180[5] = g_U2380;
    l_U180[6] = -1880103805;
    l_U180[7] = -1409914275;
    l_U180[8] = -1589640354;
    l_U180[9] = g_U2384;
    l_U180[10] = g_U2385;
    l_U180[11] = g_U2386;
    l_U180[12] = g_U2387;
    l_U180[13] = g_U2381;
    l_U180[14] = g_U2382;
    l_U180[15] = g_U2383;
    l_U197[0] = 57534114;
    l_U197[1] = -184942895;
    l_U197[2] = -1464892298;
    l_U197[3] = -612753081;
    l_U197[4] = -378310276;
    l_U197[5] = 2090054632;
    l_U197[6] = 724901397;
    g_U3358._fU332 = 0;
    g_U3358._fU348 = 0;
    g_U3358._fU352 = 0;
    g_U3358._fU356 = 0;
    g_U3358._fU360 = 0;
    g_U3557._fU332 = 1;
    g_U3557._fU348 = 0;
    g_U3557._fU352 = 0;
    g_U3557._fU356 = 0;
    g_U3557._fU360 = 0;
    return;
}

int sub_1306()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1328() );
    }
    return 0;
}

void sub_1328()
{
    return GET_PLAYER_ID();
}

void sub_1389(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_1472()
{
    int I;
    char[24] cVar3;
    int J;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    if (NOT l_U892)
    {
        START_WIDGET_GROUP( "Tram 2, Part 1" );
        sub_1542( ref l_U895, "Throw offset", 1036831949 );
        ADD_WIDGET_BOOL( "Dump cover point array", ref l_U893 );
        ADD_WIDGET_BOOL( "Get player's position relative to vehicle", ref l_U894 );
        START_WIDGET_GROUP( "Tear Gas" );
        ADD_WIDGET_FLOAT_SLIDER( "Grenade-throwing min pitch", ref l_U763, 0, 10000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Grenade-throwing max pitch", ref l_U764, 0, 10000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Grenade-throwing min speed", ref l_U765, 0, 10000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Grenade-throwing max speed", ref l_U766, 0, 10000.00000000, 0.10000000 );
        for ( I = 0; I < 7; I++ )
        {
            StrCopy( ref cVar3, "Grenade Throw Offset ", 24 );
            ConcatString(ref cVar3, I, 24);
            sub_1542( ref l_U350[I], ref cVar3, 1036831949 );
        }
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Tram Shake" );
        ADD_WIDGET_FLOAT_SLIDER( "Horizontal shake", ref l_U872, 0, 1.00000000, 0.00100000 );
        ADD_WIDGET_INT_SLIDER( "Horizontal shake min frequency", ref l_U873, 0, 10000, 1 );
        ADD_WIDGET_INT_SLIDER( "Horizontal shake max frequency", ref l_U874, 0, 10000, 1 );
        ADD_WIDGET_FLOAT_SLIDER( "Vertical shake", ref l_U875, 0, 1.00000000, 0.00100000 );
        ADD_WIDGET_INT_SLIDER( "Vertical shake upwards min frequency", ref l_U876, 0, 2000, 1 );
        ADD_WIDGET_INT_SLIDER( "Vertical shake upwards max frequency", ref l_U877, 0, 2000, 1 );
        ADD_WIDGET_INT_SLIDER( "Vertical shake downwards min frequency", ref l_U878, 0, 2000, 1 );
        ADD_WIDGET_INT_SLIDER( "Vertical shake downwards max frequency", ref l_U879, 0, 2000, 1 );
        ADD_WIDGET_INT_SLIDER( "Vertical shake minimum delay", ref l_U880, 0, 2000, 1 );
        ADD_WIDGET_INT_SLIDER( "Vertical shake maximum delay", ref l_U881, 0, 2000, 1 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U892 = 1;
    }
    if (l_U893)
    {
        for ( J = 0; J < 7; J++ )
        {
            ;
        }
        l_U893 = 0;
    }
    if (l_U894)
    {
        uVar10 = sub_2889( ref g_U3358, sub_2666() );
        uVar11 = {(vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1306() ))) - (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uVar10 )))};
        l_U894 = 0;
    }
    return;
}

void sub_1542(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

int sub_2666()
{
    if (NOT (IS_PED_DEAD( sub_1306() )))
    {
        if (sub_2708( sub_1306(), l_U374[0] ))
        {
            return 0;
        }
        else if (sub_2708( sub_1306(), l_U374[1] ))
        {
            return 1;
        }
        else if (sub_2708( sub_1306(), l_U374[2] ))
        {
            return 2;
        };;;
    }
    SCRIPT_ASSERT( "PLAYER IS NOT IN ANY TRAM CAR - WTF?", 0 );
    return 2;
}

int sub_2708(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_2889(int iParam0, unknown uParam1)
{
    unknown Result;

    switch (uParam1)
    {
        case 0:
        Result = iParam0->_fU0;
        break;
        case 1:
        Result = iParam0->_fU4;
        break;
        case 2:
        Result = iParam0->_fU8;
        break;
    }
    return Result;
}

void sub_3022()
{
    if (g_U830 == 6)
    {
        switch (l_U129)
        {
            case 0:
            if ((sub_3116()) || (IS_PED_DEAD( sub_1306() )))
            {
                l_U129 = 1;
                sub_790( "SA", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_3610())
            {
                l_U129 = 3;
            }
            else if ((sub_3650( 0 )) == 1)
            {
                l_U129 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_1306() )))
            {
                l_U129 = 3;
                sub_790( "SA", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_790( "SA", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_1306() ))) AND (NOT (IS_PLAYER_DEAD( sub_1328() ))))
            {
                SET_PLAYER_CONTROL( sub_1328(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_1306() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_1306(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_5214( 0 );
            l_U129 = 4;
            sub_790( "SA", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_790( "SA", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_6692( ref l_U90, sub_1306() );
            if ((g_U861[7]._fU40 != 4) AND (g_U861[7]._fU40 != 0))
            {
                sub_790( "SA", "Shutting down script for MCE_TRAM_FIGHT_PART_2.", 0 );
                sub_10826( ref g_U861[7] );
                SET_EXITFLAG_FOR_SCRIPT( g_U861[7]._fU32 );
            }
            l_U128 = 0;
            l_U129 = 5;
            sub_790( "SA", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_790( "SA", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U126 = 1;
            l_U129 = 0;
            sub_790( "SA", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_3116()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1306() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1306(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1328(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1328(), 1 );
            if ((IS_PED_VISIBLE( sub_1306() )) == 0)
            {
                SET_PED_VISIBLE( sub_1306(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_3610()
{
    return g_U648;
}

int sub_3650(int iParam0)
{
    iParam0 = 1;
    switch (l_U79)
    {
        case 0:
        if (NOT (sub_3711( ref l_U81 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1306() )))
            {
                l_U80 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_3821( ref l_U81, l_U80, 1, 1 );
            sub_3957( ref l_U81 );
        }
        if (sub_4077( ref l_U81 ))
        {
            sub_790( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1306() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1328() )))
            {
                SET_PLAYER_CONTROL( sub_1328(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U79 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U79 = 2;
            }
            else
            {
                l_U79 = 3;
            }
        }
        break;
        case 2:
        sub_790( "NS", "Player will QUIT", 0 );
        sub_4564();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_790( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_4564();
        return 1;
        break;
    }
    return 0;
}

int sub_3711(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_3821(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_3957(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_4077(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_4564()
{
    sub_790( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4614( ref l_U81 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1328() )))
    {
        SET_PLAYER_CONTROL( sub_1328(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U78 = 0;
    l_U78 = l_U78;
    l_U79 = 0;
    return;
}

void sub_4614(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_5214(boolean bParam0)
{
    int I;

    sub_790( "SA", "P_T2P1_CLEANUP_ALL", 0 );
    sub_5260( ref g_U3168 );
    sub_5387();
    if (NOT bParam0)
    {
        sub_5536( ref g_U3358 );
        sub_5536( ref g_U3557 );
    }
    STOP_SCRIPT_STREAM( l_U871 );
    if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( "FINALE_ONESHOT_04" ))
    {
        AUDIO_MUSIC_STOP_ONESHOT();
    }
    for ( I = 0; I < 3; I++ )
    {
        GAMEPLAY_HELPER_BOX_DESTROY( ref l_U374[I]._fU0 );
        GAMEPLAY_HELPER_BOX_DESTROY( ref l_U438[I]._fU0 );
    }
    for ( I = 0; I < 6; I++ )
    {
        GAMEPLAY_HELPER_BOX_DESTROY( l_U502[I]._fU0 );
    }
    for ( I = 0; I < 12; I++ )
    {
        GAMEPLAY_HELPER_BOX_DESTROY( ref l_U509[I]._fU0 );
    }
    RESET_PED_MODEL_LOD_DISTANCES( g_U2374 );
    SET_INSTANT_FIRE_FORCED( 0 );
    ISEQ_TERMINATE( 759104699 );
    sub_6054( 759104699, ref g_U1368 );
    sub_6422();
    if (CUTSCENE_IS_LOADED( l_U232 ))
    {
        CLEAR_NAMED_CUTSCENE( l_U232 );
    }
    sub_6508( ref l_U882 );
    return;
}

void sub_5260(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_5294( (uParam0^)[I] );
    }
    return;
}

void sub_5294(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_5387()
{
    sub_5401( ref g_U3350 );
    sub_5434( g_U3321 );
    sub_5434( g_U3328 );
    return;
}

void sub_5401(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_5434( (uParam0^)[I] );
    }
    return;
}

void sub_5434(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_5536(int iParam0)
{
    sub_790( "SA", "P_T2_CLEANUP_TRAM", 0 );
    sub_5582( iParam0->_fU12 );
    sub_5582( iParam0->_fU16 );
    sub_5582( iParam0->_fU20 );
    sub_5582( iParam0->_fU32 );
    sub_5582( iParam0->_fU28 );
    sub_5582( iParam0->_fU32 );
    sub_5682( iParam0 + 36 );
    sub_5682( iParam0 + 48 );
    sub_5682( iParam0 + 60 );
    sub_5766( iParam0->_fU0 );
    return;
}

void sub_5582(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_5682(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_5582( (uParam0^)[I] );
    }
    return;
}

void sub_5766(unknown uParam0)
{
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_MISSION_TRAIN( uParam0 );
    }
    return;
}

void sub_6054(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_6166( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_6166(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_6422()
{
    sub_790( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    return;
}

void sub_6508(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_6692(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_790( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_6876( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_7953( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_8245( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_8605( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_8245( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_8605( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_8245( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_8605( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_8890( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_8605( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_8890( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_8605( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_9383( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_9544( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1306(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_790( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_6876(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_6908( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_6908(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_7953(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_8245(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_8561( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_8561(unknown uParam0)
{
    return;
}

void sub_8605(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_8890(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_8561( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_9383(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_9544(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_6908( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_9616( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_9616(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_10826(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_11069()
{
    int iVar2;
    int I;

    iVar2 = l_U126;
    switch (l_U126)
    {
        case 0:
        if (l_U127)
        {
            sub_790( "SA", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
        case 1:
        if (l_U127)
        {
            sub_790( "SA", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        }
        sub_11325();
        sub_12034();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U126 = 2;
        break;
        case 2:
        if (l_U127)
        {
            sub_790( "SA", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        }
        sub_13177();
        sub_16710();
        l_U126 = 3;
        break;
        case 3:
        if (l_U127)
        {
            sub_790( "SA", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        }
        if ((sub_19827( ref g_U1368 )) AND ((sub_19700( ref g_U1429 )) AND ((sub_19573( ref g_U1783 )) AND ((sub_19452( ref g_U1247 )) AND (sub_19332( ref g_U1030 ))))))
        {
            if ((NOT l_U90._fU0) AND (g_U829 == 6))
            {
                l_U126 = 4;
            }
            else
            {
                l_U126 = 6;
            }
        }
        break;
        case 4:
        if (l_U127)
        {
            sub_790( "SA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        }
        l_U128 = 0;
        g_U846[6] = 1;
        sub_20146();
        if ((sub_20305( ref l_U90 )) == 0)
        {
            sub_8890( sub_1306(), 57534114, 200, 0, 0 );
            sub_8245( sub_1306(), -1464892298, 0, 50, 0 );
            sub_8245( sub_1306(), -612753081, 1, 50, 0 );
            l_U126 = 5;
            sub_790( "CR", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U126 = 6;
            sub_790( "CR", "eCheckpointState = CP_CREATE_TRAMS", 0 );
        }
        break;
        case 5:
        if (l_U127)
        {
            sub_790( "SA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        if (NOT (IS_PED_DEAD( sub_1306() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_1306(), 1 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_1306(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_1306(), 0, 0 ) ))))
            {
                g_U830 = 6;
                sub_20910( ref l_U90, g_U830, sub_1306(), g_U2014[6], g_U2129[6], g_U2168[6], g_U2207[6], 1 );
                l_U126 = 6;
            }
        }
        break;
        case 6:
        if (l_U127)
        {
            sub_790( "SA", "eCheckpointState = CP_CREATE_TRAMS", 0 );
            sub_24605( ref g_U3358, l_U130, 1, 0 );
            sub_24605( ref g_U3557, l_U145, 1, 0 );
            sub_27469( ref l_U374[0], "TRIGGER_T2P1_PLAYER_ENGINE", g_U3358._fU0, 0.00000000, -0.90000000, -0.10000000, 4.00000000, 15.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U374[1], "TRIGGER_T2P1_PLAYER_CARRIAGE", g_U3358._fU4, 0.00000000, -0.40000000, -0.10000000, 4.00000000, 17.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U374[2], "TRIGGER_T2P1_PLAYER_CABOOSE", g_U3358._fU8, 0.00000000, -1.20000000, -0.10000000, 4.00000000, 15.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U438[0], "TRIGGER_T2P1_UFE_ENGINE", g_U3557._fU0, 0.00000000, -0.90000000, -0.10000000, 4.00000000, 15.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U438[1], "TRIGGER_T2P1_UFE_CARRIAGE", g_U3557._fU4, 0.00000000, -0.40000000, -0.10000000, 4.00000000, 17.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U438[2], "TRIGGER_T2P1_UFE_CABOOSE", g_U3557._fU8, 0.00000000, -1.20000000, -0.10000000, 4.00000000, 15.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U509[0], "TRIGGER_T2P1_UFE_GRENADE_0", g_U3557._fU8, -10.00000000, 6.37500000, -0.10000000, 10.00000000, 2.75000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U509[1], "TRIGGER_T2P1_UFE_GRENADE_1", g_U3557._fU8, -10.00000000, 2.62500000, -0.10000000, 10.00000000, 5.75000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U509[2], "TRIGGER_T2P1_UFE_GRENADE_2", g_U3557._fU8, -10.00000000, -1.62500000, -0.10000000, 10.00000000, 3.75000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U509[3], "TRIGGER_T2P1_UFE_GRENADE_3", g_U3557._fU8, -10.00000000, -5.87500000, -0.10000000, 10.00000000, 4.75000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U509[4], "TRIGGER_T2P1_UFE_GRENADE_4", g_U3557._fU4, -10.00000000, 5.87500000, -0.10000000, 10.00000000, 4.75000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U509[5], "TRIGGER_T2P1_UFE_GRENADE_5", g_U3557._fU4, -10.00000000, 1.62500000, -0.10000000, 10.00000000, 3.75000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U509[6], "TRIGGER_T2P1_UFE_GRENADE_6", g_U3557._fU4, -10.00000000, -1.62500000, -0.10000000, 10.00000000, 3.75000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U509[7], "TRIGGER_T2P1_UFE_GRENADE_7", g_U3557._fU4, -10.00000000, -5.87500000, -0.10000000, 10.00000000, 4.75000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U509[8], "TRIGGER_T2P1_UFE_GRENADE_8", g_U3557._fU0, 10.00000000, 5.87500000, -0.10000000, 10.00000000, 4.75000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U509[9], "TRIGGER_T2P1_UFE_GRENADE_9", g_U3557._fU0, 10.00000000, 1.62500000, -0.10000000, 10.00000000, 3.75000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U509[10], "TRIGGER_T2P1_UFE_GRENADE_10", g_U3557._fU0, 10.00000000, -1.62500000, -0.10000000, 10.00000000, 3.75000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_27469( ref l_U509[11], "TRIGGER_T2P1_UFE_GRENADE_11", g_U3557._fU0, 10.00000000, -5.87500000, -0.10000000, 10.00000000, 4.75000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29322( ref l_U502[0], "TETH_T2P1_ENGINE_A", g_U3557._fU0, 0.00000000, 0.50000000, -0.10000000, 4.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29322( ref l_U502[1], "TETH_T2P1_ENGINE_B", g_U3557._fU0, 0.00000000, -6.00000000, -0.10000000, 4.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29322( ref l_U502[2], "TETH_T2P1_CARRIAGE_A", g_U3557._fU4, 0.00000000, 2.00000000, -0.10000000, 4.00000000, 9.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29322( ref l_U502[3], "TETH_T2P1_CARRIAGE_B", g_U3557._fU4, 0.00000000, -6.15000000, -0.10000000, 4.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29322( ref l_U502[4], "TETH_T2P1_CABOOSE_A", g_U3557._fU8, 0.00000000, 0.50000000, -0.10000000, 4.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29322( ref l_U502[5], "TETH_T2P1_CABOOSE_B", g_U3557._fU8, 0.00000000, -6.00000000, -0.10000000, 4.00000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
        }
        if ((sub_29884( ref g_U3557 )) AND (sub_29884( ref g_U3358 )))
        {
            l_U126 = 7;
        }
        break;
        case 7:
        if (l_U127)
        {
            sub_790( "SA", "eCheckpointState = CP_CREATE_PEDS", 0 );
            g_U3244 = 1;
            g_U3245 = 0;
        }
        if (sub_30046( 0 ))
        {
            l_U126 = 8;
        }
        break;
        case 8:
        if (l_U127)
        {
            sub_790( "SA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        if (g_U846[6])
        {
            if (l_U128)
            {
                if (CUTSCENE_IS_LOADED( l_U232 ))
                {
                    l_U126 = 9;
                }
                else
                {
                    sub_790( "SA", "Waiting for MID 07 to load ...", 0 );
                }
            }
            else
            {
                l_U126 = 9;
            }
        }
        break;
        case 9:
        if (l_U127)
        {
            sub_790( "SA", "eCheckpointState = CP_MID_07", 0 );
            sub_32522();
            sub_41510( ref l_U205, l_U232, 32649, 32712, 33974, 34378, 34397, 37412, 250, 0 );
            sub_41914( ref l_U205, g_U2014[6] );
            if (l_U128)
            {
                l_U205._fU4 = 2;
            }
            else
            {
                l_U205._fU4 = 7;
            }
            PLAY_SCRIPT_STREAM_FRONTEND( l_U871 );
        }
        if (sub_42012( ref l_U205 ))
        {
            l_U126 = 10;
        }
        break;
        case 10:
        if (l_U127)
        {
            sub_790( "SA", "eCheckpointState = CP_GAMEPLAY", 0 );
            if (g_U830 != 6)
            {
                g_U830 = 6;
                sub_20910( ref l_U90, g_U830, sub_1306(), g_U2014[6], g_U2129[6], g_U2168[6], g_U2207[6], 1 );
            }
            sub_36353( ref l_U149, l_U158 );
            sub_44254();
            l_U372 = 0;
            g_U3337 = 0;
            l_U134 = l_U133;
            l_U159 = 0;
            l_U163 = 0;
            sub_11468( ref l_U135 );
            sub_11468( ref l_U771 );
            l_U770 = 0;
            l_U233 = 0;
            CLEAR_NAMED_CUTSCENE( l_U232 );
        }
        sub_44484();
        if (NOT l_U233)
        {
            if (HAS_CUTSCENE_UNLOADED())
            {
                sub_790( "SA", "Starting pre-load of Tram 2, Part 2.", 0 );
                g_U861[7]._fU36 = 1;
                l_U233 = 1;
            }
        }
        if (sub_4077( ref l_U149 ))
        {
            g_U3337 = 1;
        }
        if (g_U3337)
        {
            sub_45715( ref g_U3557, ref g_U3358, l_U134 );
            sub_46328();
            sub_47541();
        }
        if (l_U770)
        {
            if (sub_4077( ref l_U780 ))
            {
                sub_48288();
                sub_48453();
                sub_48590();
                sub_36353( ref l_U780, 1000 );
            }
            sub_49058();
        }
        if (l_U770)
        {
            if (sub_49869())
            {
                sub_48288();
                sub_48453();
                sub_36353( ref l_U771, l_U789 );
                l_U769 = -1;
                l_U770 = 0;
            }
        }
        if (((sub_50005( ref g_U3168 )) >= 3) AND (NOT l_U159))
        {
            sub_790( "SA", "Player tram is OUTTA CONTROL YOU CAN'T STOP IT", 0 );
            l_U159 = 1;
            sub_36353( ref l_U135, l_U144 );
        }
        if (l_U159)
        {
            sub_50205( ref l_U135 );
        }
        if ((sub_4077( ref l_U135 )) AND (NOT l_U163))
        {
            sub_790( "GA", "Say Tram outta control.", 0 );
            l_U163 = 1;
        }
        if (NOT l_U372)
        {
            if ((sub_46641( ref g_U3168 )) <= 3)
            {
                sub_50358();
                l_U372 = 1;
            }
        }
        if (NOT l_U373)
        {
            if ((sub_46641( ref g_U3168 )) == 1)
            {
                for ( I = 0; I < g_U3168; I++ )
                {
                    if (NOT (IS_PED_DEAD( g_U3168[I] )))
                    {
                        sub_790( "AT", "Setting last enemy in array to ignore wounds.", 0 );
                        SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( g_U3168[I], 1 );
                        l_U373 = 1;
                    }
                }
            }
        }
        if ((sub_46641( ref g_U3168 )) == 0)
        {
            sub_790( "GA", "Fading out FINALE_SONG_01 FINALE_01_3 over 3 seconds.", 0 );
            AUDIO_MUSIC_SUSPEND( 3000 );
            l_U126 = 11;
        }
        sub_50826();
        sub_51116( g_U3358._fU0 );
        sub_51341( ref g_U3168, g_U3557._fU0 );
        sub_51489();
        break;
        case 11:
        if (l_U127)
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            if (sub_51663( l_U790 ))
            {
                g_U3357 = 0;
            }
            else
            {
                g_U3357 = 1;
            }
            l_U126 = 12;
        }
        break;
        case 12:
        if (l_U127)
        {
            sub_790( "SA", "eCheckpointState = CP_FINISHED", 0 );
            sub_51781();
            sub_51998();
            sub_5387();
            STOP_SCRIPT_STREAM( l_U871 );
            g_U846[7] = 1;
        }
        if (NOT HAS_CUTSCENE_FINISHED())
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U126 = 0;
        }
        break;
    }
    if (l_U126 != iVar2)
    {
        l_U127 = 1;
    }
    else
    {
        l_U127 = 0;
    }
    return;
}

void sub_11325()
{
    int I;
    int J;

    sub_790( "SA", "P_INITIALIZE_SCRIPT_DATA", 0 );
    l_U127 = 1;
    l_U159 = 0;
    l_U163 = 0;
    l_U373 = 0;
    g_U3338 = l_U148;
    g_U3336 = 1;
    for ( I = 0; I < 7; I++ )
    {
        g_U3230[I] = 0;
    }
    for ( J = 0; J < 3; J++ )
    {
        sub_11468( ref l_U811[J]._fU0 );
        sub_11468( ref l_U811[J]._fU36 );
        l_U811[J]._fU72 = 0;
    }
    l_U769 = -1;
    sub_11546();
    return;
}

void sub_11468(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_11546()
{
    sub_790( "SA", "P_T2P1_INIT_COVER_DATA", 0 );
    l_U318[0] = 17;
    l_U342[0] = 0;
    l_U326[0] = 0;
    l_U334[0] = 0;
    l_U350[0] = {0.00000000, -0.10550000, 1.00000000};
    l_U318[1] = 16;
    l_U342[1] = 0;
    l_U326[1] = 1;
    l_U334[1] = 1;
    l_U350[1] = {0.00000000, -5.72900000, 1.00000000};
    l_U318[2] = 20;
    l_U342[2] = 1;
    l_U326[2] = 2;
    l_U334[2] = 3;
    l_U350[2] = {0.00000000, 0.11500000, 1.00000000};
    l_U318[3] = 19;
    l_U342[3] = 1;
    l_U326[3] = 3;
    l_U334[3] = 2;
    l_U350[3] = {0.00000000, -1.11500000, 1.00000000};
    l_U318[4] = 18;
    l_U342[4] = 1;
    l_U326[4] = 4;
    l_U334[4] = 2;
    l_U350[4] = {0.00000000, -6.17000000, 1.00000000};
    l_U318[5] = 16;
    l_U342[5] = 2;
    l_U326[5] = 5;
    l_U334[5] = 5;
    l_U350[5] = {0.00000000, -5.72900000, 1.00000000};
    l_U318[6] = 17;
    l_U342[6] = 2;
    l_U326[6] = 6;
    l_U334[6] = 4;
    l_U350[6] = {0.00000000, -0.10600000, 1.00000000};
    return;
}

void sub_12034()
{
    sub_790( "SA", "P_SET_STATIC_DATA", 0 );
    sub_12151( ref l_U790, "tb_T2P1_PlayerOutside", -701.96000000, 2223.71000000, -6.00000000, 524.57000000, 34.05000000, 8.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12260( ref g_U3076[0], l_U145, 0.00000000, 1447570344, 7, 3, 2, 0, 0 );
    sub_12260( ref g_U3076[1], l_U145, 0.00000000, 1152757315, 7, 3, 2, 0, 0 );
    sub_12260( ref g_U3076[2], l_U145, 0.00000000, 1854613990, 7, 3, 2, 0, 0 );
    sub_12260( ref g_U3076[3], l_U145, 0.00000000, -119132553, 7, 3, 2, 0, 0 );
    sub_12260( ref g_U3076[4], l_U145, 0.00000000, -1347471989, 7, 3, 2, 0, 0 );
    sub_12260( ref g_U3076[5], l_U145, 0.00000000, 1403297832, 7, 3, 2, 0, 0 );
    sub_12260( ref g_U3076[6], l_U145, 0.00000000, 1949885446, 7, 3, 2, 0, 0 );
    g_U3176[0] = {1.57100000, 0.09450000, 0.85000000};
    g_U3176[1] = {1.57100000, -5.72900000, 0.85000000};
    g_U3176[2] = {-1.57100000, -6.42000000, 0.85000000};
    g_U3176[3] = {-1.57100000, -0.61500000, 0.85000000};
    g_U3176[4] = {-1.57100000, 5.17000000, 0.85000000};
    g_U3176[5] = {-1.57100000, -5.72900000, 0.85000000};
    g_U3176[6] = {-1.50000000, -0.10550000, 0.85000000};
    g_U3198[0] = -45.00000000;
    g_U3198[1] = -45.00000000;
    g_U3198[2] = -45.00000000;
    g_U3198[3] = 90.00000000;
    g_U3198[4] = 90.00000000;
    g_U3198[5] = 90.00000000;
    g_U3198[6] = 90.00000000;
    g_U3206[0] = 57534114;
    g_U3206[1] = -184942895;
    g_U3206[2] = 57534114;
    g_U3206[3] = -612753081;
    g_U3206[4] = -184942895;
    g_U3206[5] = -184942895;
    g_U3206[6] = -612753081;
    sub_12928();
    return;
}

void sub_12151(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_12260(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_12928()
{
    int I;

    sub_790( "SA", "P_T2_ALLOW_ALL_TRAM_UFE_TO_SPAWN start", 0 );
    for ( I = 0; I < 7; I++ )
    {
        g_U3214[I] = 1;
    }
    sub_790( "SA", "P_T2_ALLOW_ALL_TRAM_UFE_TO_SPAWN end", 0 );
    return;
}

void sub_13177()
{
    sub_790( "SA", "P_T2P1_REQUEST_PERSISTENT_ASSETS start", 0 );
    sub_13247( ref l_U180, ref g_U1030 );
    sub_14655( ref l_U197, ref g_U1247 );
    sub_15677( "npc_rifle_cover_grenade", ref g_U1429 );
    sub_790( "SA", "P_T2P1_REQUEST_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_13247(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_13282( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_13282(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_13317( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_13448( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_13317(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_13448( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_13448( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_13448( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_14096( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_13448( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_13448( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_13448(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_13468( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_13468(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_14096(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_14655(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_14690( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_14690(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_14711( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_14843( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_14711(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_14843( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_14843( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_14843( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_14096( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_14843( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_14843( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_14843(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_13468( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_15677(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_15698( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_15835( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_15698(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_15835( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_15835( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_15835( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_14096( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_15835( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_15835( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_15835(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_13468( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_16710()
{
    sub_790( "SA", "P_T2P1_REQUEST_NONPERSISTENT_ASSETS start", 0 );
    sub_16784( 759104699, ref g_U1368 );
    l_U871 = sub_18710( ref g_U2427 );
    sub_18893( l_U232, 0 );
    if ((l_U128) AND (g_U829 != 6))
    {
        AUDIO_MUSIC_REQUEST_ONESHOT( "FINALE_ONESHOT_04", 0 );
    }
    sub_790( "SA", "P_T2P1_REQUEST_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_16784(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_16819( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_16971( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_16819(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_16971( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_16971( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_16971( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_16971( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_14096( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_14096( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_16971( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_16971( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16971(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_13468( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_18710(unknown uParam0)
{
    int Result;

    sub_790( "SA", "F_REQUEST_SCRIPT_STREAM start", 0 );
    for ( Result = 0; Result < 3; Result++ )
    {
        if ((GET_SCRIPT_STREAM_STATE( "ANY_STREAM", Result )) == 0)
        {
            REQUEST_SCRIPT_STREAM( uParam0, Result );
            return Result;
        }
    }
    sub_790( "SA", "F_REQUEST_SCRIPT_STREAM end", 0 );
    return -1;
}

void sub_18893(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_19332(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_19452(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_19573(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_19700(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_19827(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

void sub_20146()
{
    int I;

    sub_790( "SA", "P_T2_ACTIVATE_ALL_PLACEMENTS start", 0 );
    for ( I = 0; I < g_U3350; I++ )
    {
        g_U3353[I] = 1;
    }
    g_U3356 = 1;
    sub_790( "SA", "P_T2_ACTIVATE_ALL_PLACEMENTS end", 0 );
    return;
}

int sub_20305(unknown uParam0)
{
    sub_790( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_6692( uParam0, sub_1306() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_20910(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_790( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_790( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_9544( iParam1 );
        sub_21169( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_21620( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_21620( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_21852( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_21620( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_21852( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_21852( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_21620( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_21852( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_21852( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_21852( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_21620( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_21852( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_21852( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_21852( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_21852( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_23410( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_790( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_21169(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_6908( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_790( "TEH", "Ending context", 0 );
        sub_790( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_21620(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_21852(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_23410(int iParam0)
{
    sub_8561( "CHECKPOINT DATA" );
    sub_23449( iParam0->_fU4 );
    sub_23472( iParam0->_fU16 );
    sub_23472( iParam0->_fU20 );
    sub_23472( iParam0->_fU24 );
    sub_23515( iParam0->_fU28 );
    sub_23515( iParam0->_fU56 );
    sub_23515( iParam0->_fU60 );
    sub_23515( iParam0->_fU64 );
    sub_23515( iParam0->_fU68 );
    sub_23515( iParam0->_fU72 );
    sub_23515( iParam0->_fU76 );
    sub_23515( iParam0->_fU80 );
    sub_23515( iParam0->_fU84 );
    sub_23515( iParam0->_fU88 );
    sub_23515( iParam0->_fU92 );
    sub_23472( iParam0->_fU32 );
    sub_23515( iParam0->_fU36 );
    sub_23515( iParam0->_fU40 );
    sub_23515( iParam0->_fU44 );
    sub_23472( iParam0->_fU136 );
    sub_23720( iParam0->_fU140 );
    sub_23515( iParam0->_fU52 );
    sub_8561( "---nRightHolsterAttachmentEnabled: " );
    sub_23515( iParam0->_fU96 );
    sub_8561( "---nRightHolsterAttachmentToggled: " );
    sub_23515( iParam0->_fU100 );
    sub_8561( "---nLeftHolsterAttachmentEnabled: " );
    sub_23515( iParam0->_fU104 );
    sub_8561( "---nLeftHolsterAttachmentToggled: " );
    sub_23515( iParam0->_fU108 );
    sub_8561( "---nRifleHolsterAttachmentEnabled: " );
    sub_23515( iParam0->_fU112 );
    sub_8561( "---nRifleHolsterAttachmentToggled: " );
    sub_23515( iParam0->_fU116 );
    sub_8561( "---nRightHandAttachmentEnabled: " );
    sub_23515( iParam0->_fU120 );
    sub_8561( "---nRightHandAttachmentToggled: " );
    sub_23515( iParam0->_fU124 );
    sub_8561( "---nLeftHandAttachmentEnabled: " );
    sub_23515( iParam0->_fU128 );
    sub_8561( "---nLeftHandAttachmentToggled: " );
    sub_23515( iParam0->_fU132 );
    sub_23515( l_U1 );
    sub_23515( 144 );
    return;
}

void sub_23449(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_23472(unknown uParam0)
{
    return;
}

void sub_23515(unknown uParam0)
{
    return;
}

void sub_23720(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_24605(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, unknown uParam5)
{
    sub_790( "SA", "P_T2_CREATE_TRAM", 0 );
    iParam0->_fU0 = sub_24686( uParam1, uParam5, iParam0->_fU332, iParam0->_fU348, iParam0->_fU352, iParam0->_fU356, iParam0->_fU360, 0 );
    sub_25226( iParam0->_fU0, 0.00000000 );
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU0 )))
    {
        iParam0->_fU8 = GET_TRAIN_CABOOSE( iParam0->_fU0 );
        iParam0->_fU4 = GET_TRAIN_CARRIAGE( iParam0->_fU0, 1 );
        if (iParam0->_fU332 == 0)
        {
            if (bParam4)
            {
                iParam0->_fU12 = sub_25381( g_U2378, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            }
            iParam0->_fU24 = sub_25381( g_U2381, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        else if (bParam4)
        {
            iParam0->_fU12 = sub_25381( g_U2379, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        iParam0->_fU24 = sub_25381( g_U2382, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );;
        if (bParam4)
        {
            ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU12, iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( iParam0->_fU12, 1 );
        }
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU24, iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        iParam0->_fU36[0] = sub_25381( g_U2384, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        iParam0->_fU36[1] = sub_25381( g_U2385, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU36[0], iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU36[1], iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        if (NOT (IS_STRING_NULL( uParam5 )))
        {
            if (bParam4)
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU12, uParam5 );
            }
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU24, uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU36[0], uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU36[1], uParam5 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU4 )))
    {
        if (bParam4)
        {
            iParam0->_fU16 = sub_25381( g_U2380, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU16, iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( iParam0->_fU16, 1 );
        }
        iParam0->_fU28 = sub_25381( g_U2383, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU28, iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        iParam0->_fU48[0] = sub_25381( g_U2386, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        iParam0->_fU48[1] = sub_25381( g_U2387, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU48[0], iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU48[1], iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        if (NOT (IS_STRING_NULL( uParam5 )))
        {
            if (bParam4)
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU16, uParam5 );
            }
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU28, uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU48[0], uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU48[1], uParam5 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU8 )))
    {
        if (iParam0->_fU332 == 0)
        {
            if (bParam4)
            {
                iParam0->_fU20 = sub_25381( g_U2379, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            }
            iParam0->_fU32 = sub_25381( g_U2382, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        else if (bParam4)
        {
            iParam0->_fU20 = sub_25381( g_U2378, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        iParam0->_fU32 = sub_25381( g_U2381, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );;
        if (bParam4)
        {
            ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU20, iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( iParam0->_fU20, 1 );
        }
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU32, iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        iParam0->_fU60[0] = sub_25381( g_U2384, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        iParam0->_fU60[1] = sub_25381( g_U2385, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU60[0], iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU60[1], iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        if (NOT (IS_STRING_NULL( uParam5 )))
        {
            if (bParam4)
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU20, uParam5 );
            }
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU32, uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU60[0], uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU60[1], uParam5 );
        }
    }
    return;
}

void sub_24686(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, boolean bParam5, boolean bParam6, boolean bParam7, boolean bParam8, boolean bParam9)
{
    unknown Result;
    unknown uVar13;
    unknown uVar14;

    sub_790( "GA", "F_CREATE_TRAM start", 0 );
    Result = CREATE_MISSION_TRAIN( uParam4, uParam0, 1 );
    if (bParam9)
    {
        while (NOT (DOES_VEHICLE_EXIST( Result )))
        {
            sub_790( "GA", "Waiting for tram to exist.", 0 );
            WAIT( 0 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( Result )))
    {
        SET_TRAIN_LEAVES_STATION( Result );
        SET_TRAIN_SPEED( Result, 0.00000000 );
        SET_TRAIN_CRUISE_SPEED( Result, 0.00000000 );
        SET_TRAIN_STOPS_FOR_STATIONS( Result, 0 );
        if (NOT (IS_STRING_NULL( uParam3 )))
        {
            SET_ROOM_FOR_VEHICLE_BY_NAME( Result, uParam3 );
        }
        SET_VEHICLE_EXTRA( Result, 3, NOT bParam5 );
        SET_VEHICLE_EXTRA( Result, 4, NOT bParam7 );
        SET_VEHICLE_EXTRA( Result, 5, NOT bParam6 );
        SET_VEHICLE_EXTRA( Result, 6, NOT bParam8 );
        uVar13 = GET_TRAIN_CARRIAGE( Result, 1 );
        uVar14 = GET_TRAIN_CABOOSE( Result );
    }
    if (NOT (IS_VEHICLE_DEAD( uVar13 )))
    {
        if (NOT (IS_STRING_NULL( uParam3 )))
        {
            SET_ROOM_FOR_VEHICLE_BY_NAME( uVar13, uParam3 );
        }
        SET_VEHICLE_EXTRA( uVar13, 3, NOT bParam5 );
        SET_VEHICLE_EXTRA( uVar13, 4, NOT bParam7 );
        SET_VEHICLE_EXTRA( uVar13, 5, NOT bParam6 );
        SET_VEHICLE_EXTRA( uVar13, 6, NOT bParam8 );
    }
    if (NOT (IS_VEHICLE_DEAD( uVar14 )))
    {
        if (NOT (IS_STRING_NULL( uParam3 )))
        {
            SET_ROOM_FOR_VEHICLE_BY_NAME( uVar14, uParam3 );
        }
        SET_VEHICLE_EXTRA( uVar14, 3, NOT bParam5 );
        SET_VEHICLE_EXTRA( uVar14, 4, NOT bParam7 );
        SET_VEHICLE_EXTRA( uVar14, 5, NOT bParam6 );
        SET_VEHICLE_EXTRA( uVar14, 6, NOT bParam8 );
    }
    return Result;
}

void sub_25226(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        SET_TRAIN_SPEED( uParam0, uParam1 );
        SET_TRAIN_CRUISE_SPEED( uParam0, uParam1 );
    }
    return;
}

void sub_25381(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_25491( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_25491(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_8561( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_27469(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    if ((DOES_VEHICLE_EXIST( uParam2 )) == 1)
    {
        if (((IS_VEHICLE_DEAD( uParam2 )) == 0) || ((IS_VEHICLE_DEAD( uParam2 )) == 1))
        {
            GAMEPLAY_HELPER_BOX_CREATE_VEHICLE_ATTACHED( 1, iParam0 + 0, uParam2, uParam3, uParam6, uParam7, uParam8, uParam9, uParam12, uParam13 );
            iParam0->_fU72 = {uParam3};
        }
    }
    return;
}

void sub_29322(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    if ((DOES_VEHICLE_EXIST( uParam2 )) == 1)
    {
        if (((IS_VEHICLE_DEAD( uParam2 )) == 0) || ((IS_VEHICLE_DEAD( uParam2 )) == 1))
        {
            GAMEPLAY_HELPER_BOX_CREATE_VEHICLE_ATTACHED( 2, iParam0->_fU0, uParam2, uParam3, uParam6, uParam7, uParam8, uParam9, uParam12, uParam13 );
        }
    }
    return;
}

int sub_29884(int iParam0)
{
    if ((DOES_VEHICLE_EXIST( iParam0->_fU8 )) AND ((DOES_VEHICLE_EXIST( iParam0->_fU4 )) AND (DOES_VEHICLE_EXIST( iParam0->_fU0 ))))
    {
        return 1;
    }
    return 0;
}

int sub_30046(boolean bParam0)
{
    char[64] cVar3;
    unknown uVar19;
    unknown uVar20;

    switch (g_U3244)
    {
        case 1:
        g_U3245 = 0;
        g_U3244 = 2;
        break;
        case 2:
        if ((NOT (DOES_PED_EXIST( g_U3168[g_U3245] ))) AND (g_U3214[g_U3245]))
        {
            StrCopy( ref cVar3, "Creating pi_T2_TramUFE[", 64 );
            ConcatString(ref cVar3, g_U3245, 64);
            ConcatString(ref cVar3, "]", 64);
            g_U3168[g_U3245] = sub_30210( ref g_U3076[g_U3245] );
            if (NOT (IS_PED_DEAD( g_U3168[g_U3245] )))
            {
                sub_8890( g_U3168[g_U3245], g_U3206[g_U3245], 25000, 0, 0 );
                sub_8245( g_U3168[g_U3245], -378310276, 5, 25000, 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U3168[g_U3245], 1 );
                SET_PED_AI_TEMPLATE( g_U3168[g_U3245], ref g_U2403 );
                SET_PED_COMBAT_RANGE_MIN( g_U3168[g_U3245], 3.00000000 );
                SET_PED_COMBAT_RANGE_MAX( g_U3168[g_U3245], 100.00000000 );
                SET_PED_DAMAGED_BY_TEAR_GAS( g_U3168[g_U3245], 1 );
                if (bParam0)
                {
                    SET_ROOM_FOR_PED_BY_NAME( g_U3168[g_U3245], ref g_U2326 );
                }
            }
            uVar19 = sub_31107( g_U3245 );
            uVar20 = sub_2889( ref g_U3557, l_U342[uVar19] );
            sub_31296( uVar20, g_U3168[g_U3245], g_U3176[g_U3245], g_U3198[g_U3245] );
            sub_31522( g_U3168[g_U3245], ref g_U3238 );
        }
        g_U3245++;
        if (g_U3245 >= g_U3168)
        {
            g_U3244 = 3;
        }
        break;
        case 3:
        sub_32004( ref g_U3168, "TRAM_UFE" );
        sub_32102( ref g_U3168 );
        g_U3244 = 4;
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_30210(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_25491( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_30689( iParam0->_fU40 );
    sub_30769( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_30689(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_30769(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

int sub_31107(int iParam0)
{
    int Result;

    for ( Result = 0; Result < 7; Result++ )
    {
        if (iParam0 == l_U326[Result])
        {
            return Result;
        }
    }
    SCRIPT_ASSERT( "UFE {0} doesn't have a starting cover point!", 1, 513, iParam0 );
    return -1;
}

void sub_31296(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;
    float fVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;

    sub_790( "GA", "P_SET_PED_ON_TRAM start", 0 );
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
    {
        uVar8 = GET_VEHICLE_HEADING( uParam0 );
        fVar9 = uVar8 + uParam5;
        uVar10 = {((vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uParam0 ))) + (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", VECTOR_ROTATE_AXIS( uParam2, uVar8, "z" )))) - (vector( 0.00000000, 0.00000000, 1.00000000))};
        SET_PED_COORDS( uParam1, uVar10, 1 );
        SET_PED_HEADING( uParam1, fVar9 );
    }
    sub_790( "GA", "P_SET_PED_ON_TRAM end", 0 );
    return;
}

void sub_31522(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_8561( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_31665( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_31665( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_31665(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_32004(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_32102(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_32133( (uParam0^)[I] );
    }
    return;
}

void sub_32133(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_32522()
{
    sub_790( "SA", "P_T2P1_SETUP_WEATHER_TOD", 0 );
    sub_32570();
    CLEAR_TIMECYCLE_MODIFIER();
    return;
}

void sub_32570()
{
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
    FREEZE_TIME_OF_DAY( 12, 0 );
    return;
}

int sub_32649()
{
    sub_790( "SA", "P_MID07_PRE_CUTSCENE", 0 );
    l_U314 = 0;
    l_U315 = 0;
    return 1;
}

void sub_32712()
{
    char[32] cVar2;

    sub_790( "SA", "P_MID07_REGISTER", 0 );
    sub_32756( ref g_U3557 );
    if ((NOT (IS_VEHICLE_DEAD( g_U3358._fU8 ))) AND (sub_32912( sub_1306(), 0 )))
    {
        StrCopy( ref cVar2, "VEH-", 32 );
        ConcatString(ref cVar2, g_U3358._fU8, 32);
        ConcatString(ref cVar2, "-10", 32);
        CUTSCENE_REGISTER_PED_TELEPORT( sub_1306(), g_U2014[6], g_U2129[6] );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "DYNAMIC", ref cVar2, 0, 0 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U2168[6], g_U2207[6] );
        CUTSCENE_REGISTER_ISEQ( 759104699 );
        ISEQ_REGISTER_ENTITY( 759104699, "Max", sub_1306(), 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_1306(), 0, 0 ), "W_AR_G36K_Aa_H", 0 );
    }
    if (sub_32912( g_U3168[0], 0 ))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U3168[0], "A_UFE_Sold_D", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U3168[0], 0, 0 ), "W_AR_G36K_Aa_H^2", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U3168[0], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
    }
    if (sub_32912( g_U3168[1], 0 ))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U3168[1], "A_UFE_Sold_D^1", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U3168[1], 0, 0 ), "W_AR_G36K_Aa_H^1", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U3168[1], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
    }
    if (sub_32912( g_U3168[2], 0 ))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U3168[2], "A_UFE_Sold_D^2", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U3168[2], 0, 0 ), "W_AR_G36K_Aa_H^3", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U3168[2], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3358._fU0 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U3358._fU0, "monorail^1", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3358._fU4 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U3358._fU4, "monorail3^1", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3358._fU8 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U3358._fU8, "monorail2^1", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3557._fU0 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U3557._fU0, "monorail2", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3557._fU4 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U3557._fU4, "monorail3", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3557._fU8 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U3557._fU8, "monorail", 0 );
    }
    return;
}

void sub_32756(int iParam0)
{
    sub_790( "SA", "P_T2P2_CREATE_HIDDEN_TRAM", 0 );
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU0 )))
    {
        SET_VEHICLE_VISIBLE( iParam0->_fU0, 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU4 )))
    {
        SET_VEHICLE_VISIBLE( iParam0->_fU4, 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU8 )))
    {
        SET_VEHICLE_VISIBLE( iParam0->_fU8, 0 );
    }
    return;
}

void sub_32912(unknown uParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((DOES_PED_EXIST( uParam0 )) == 1)
    {
        Result = 1;
    }
    else
    {
        Result = 0;
    }
    if (Result == 1)
    {
        if ((IS_PED_DEAD( uParam0 )) == 1)
        {
            if (iParam1 == 1)
            {
                Result = 1;
            }
            else
            {
                Result = 0;
            }
        }
        else
        {
            Result = 1;
        }
    }
    return Result;
}

void sub_33974()
{
    if (NOT l_U314)
    {
        if (GET_CUTSCENE_TIME_MS() > 6800)
        {
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -1037.60000000, 1882.93000000, -3.41000000, -1049.03000000, 1839.96000000, -3.50000000, 0, 1, 57534114, 0 );
            sub_790( "GA", "Playing audio music one shot FINALE_ONESHOT_04", 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
            sub_790( "GA", "Starting FINALE_SONG_01 music track with FINALE_01_3 mood. Fade in 1 sec", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_3", "FINALE_01_3", 0.00000000, 1000, 3000, -1082130432, 0 );
            l_U314 = 1;
        }
    }
    if (NOT l_U315)
    {
        if (GET_CUTSCENE_TIME_MS() > 10374)
        {
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -1038.14000000, 1865.01000000, -3.39000000, -1045.09000000, 1848.43000000, -1.77000000, 0, 1, 57534114, 0 );
            l_U315 = 1;
        }
    }
    return;
}

int sub_34378()
{
    return 1;
}

void sub_34397()
{
    char[32] cVar2;

    sub_790( "SA", "P_MID07_PREPARE_BLENDOUT", 0 );
    sub_34481( "SCRIPT_MISSION\S_AIRPORT_TRAM", ref g_U1950 );
    sub_35472( ref g_U3557 );
    if (NOT (IS_PED_DEAD( sub_1306() )))
    {
        StrCopy( ref cVar2, "VEH-", 32 );
        ConcatString(ref cVar2, g_U3358._fU8, 32);
        ConcatString(ref cVar2, "-10", 32);
        FREEZE_PED_POSITION( sub_1306(), 0 );
        sub_1389( sub_1306(), g_U2014[6], g_U2129[6] );
        SNAP_PLAYER_TO_COVERLINE( sub_1328(), "DYNAMIC", ref cVar2, 0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1306() ) );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[6], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[6], 1065353216, 0 );
    }
    if ((NOT l_U128) AND (sub_32912( sub_1306(), 0 )))
    {
        ISEQ_REGISTER_ENTITY( 759104699, "Max", sub_1306(), 0 );
    }
    ISEQ_START( 759104699 );
    sub_35887( ref l_U234, -1049.83000000, 1783.80000000, -3.71000000, -8.49202500, -0.00000100, -59.69278000, 45, 10000 );
    sub_36098( ref l_U234 );
    l_U299 = {sub_36203( l_U234._fU16 - (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1306() ))) )};
    l_U296 = {2.16369700, 1.43982000, 0.41286100};
    l_U302 = {-8.49202500, -0.00000100, -59.69278000};
    sub_36353( ref l_U305, 1000 );
    sub_36389();
    if (NOT AUDIO_IS_MUSIC_PLAYING())
    {
        sub_790( "GA", "Starting FINALE_SONG_01 music track with FINALE_01_3 mood. Fade in 1 sec", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_3", "FINALE_01_3", 0.00000000, 0, 3000, -1082130432, 0 );
    }
    sub_36848();
    return;
}

void sub_34481(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_34502( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_34640( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_34502(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_34640( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_34640( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_34640( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_14096( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_34640( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_34640( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_34640(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_13468( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_35472(int iParam0)
{
    sub_790( "SA", "P_T2P2_UNHIDE_TRAM", 0 );
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU0 )))
    {
        SET_VEHICLE_VISIBLE( iParam0->_fU0, 1 );
    }
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU4 )))
    {
        SET_VEHICLE_VISIBLE( iParam0->_fU4, 1 );
    }
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU8 )))
    {
        SET_VEHICLE_VISIBLE( iParam0->_fU8, 1 );
    }
    return;
}

void sub_35887(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_3821( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U39, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_36098(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_3957( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_36203(unknown uParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown Result;
    unknown uVar7;
    unknown uVar8;

    uVar5 = SQRT( ((uParam0._fU0 * uParam0._fU0) + (uParam0._fU4 * uParam0._fU4)) + (uParam0._fU8 * uParam0._fU8) );
    Result._fU0 = uParam0._fU0 / uVar5;
    Result._fU4 = uParam0._fU4 / uVar5;
    Result._fU8 = uParam0._fU8 / uVar5;
    return Result;
}

void sub_36353(unknown uParam0, unknown uParam1)
{
    sub_3821( uParam0, uParam1, 1, 0 );
    sub_3957( uParam0 );
    return;
}

void sub_36389()
{
    sub_790( "GA", "P_START_GAMEPLAY start", 0 );
    sub_25226( g_U3358._fU0, l_U133 );
    sub_25226( g_U3557._fU0, l_U148 );
    SET_PED_MODEL_LOD_DISTANCES( g_U2374, 10.00000000, 100.00000000 );
    SET_CAM_VIEW_MODE( 0 );
    SET_INSTANT_FIRE_FORCED( 1 );
    FORCE_QUICK_DEATH_CAMERAS( 1 );
    sub_36515();
    sub_790( "GA", "P_START_GAMEPLAY end", 0 );
    return;
}

void sub_36515()
{
    sub_790( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_790( "CCB", "Starting the Finale_Tram context...", 0 );
    START_CONTEXT( "Finale_Tram" );
    return;
}

void sub_36848()
{
    sub_790( "SA", "P_T2P1_RESET_HATCHES", 0 );
    if (NOT (IS_VEHICLE_DEAD( g_U3358._fU0 )))
    {
        SET_VEHICLE_EXTRA( g_U3358._fU0, 1, 1 );
        SET_VEHICLE_EXTRA( g_U3358._fU0, 2, 1 );
        SET_VEHICLE_EXTRA( g_U3358._fU0, 1, 0 );
        SET_VEHICLE_EXTRA( g_U3358._fU0, 2, 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3358._fU4 )))
    {
        SET_VEHICLE_EXTRA( g_U3358._fU4, 1, 1 );
        SET_VEHICLE_EXTRA( g_U3358._fU4, 2, 1 );
        SET_VEHICLE_EXTRA( g_U3358._fU4, 1, 0 );
        SET_VEHICLE_EXTRA( g_U3358._fU4, 2, 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3358._fU8 )))
    {
        SET_VEHICLE_EXTRA( g_U3358._fU8, 1, 1 );
        SET_VEHICLE_EXTRA( g_U3358._fU8, 2, 1 );
        SET_VEHICLE_EXTRA( g_U3358._fU8, 1, 0 );
        SET_VEHICLE_EXTRA( g_U3358._fU8, 2, 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3557._fU0 )))
    {
        SET_VEHICLE_EXTRA( g_U3557._fU0, 1, 1 );
        SET_VEHICLE_EXTRA( g_U3557._fU0, 2, 1 );
        SET_VEHICLE_EXTRA( g_U3557._fU0, 1, 0 );
        SET_VEHICLE_EXTRA( g_U3557._fU0, 2, 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3557._fU4 )))
    {
        SET_VEHICLE_EXTRA( g_U3557._fU4, 1, 1 );
        SET_VEHICLE_EXTRA( g_U3557._fU4, 2, 1 );
        SET_VEHICLE_EXTRA( g_U3557._fU4, 1, 0 );
        SET_VEHICLE_EXTRA( g_U3557._fU4, 2, 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3557._fU8 )))
    {
        SET_VEHICLE_EXTRA( g_U3557._fU8, 1, 1 );
        SET_VEHICLE_EXTRA( g_U3557._fU8, 2, 1 );
        SET_VEHICLE_EXTRA( g_U3557._fU8, 1, 0 );
        SET_VEHICLE_EXTRA( g_U3557._fU8, 2, 0 );
    }
    return;
}

int sub_37412()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    char[32] cVar17;

    if (l_U205._fU52)
    {
        sub_37443( ref g_U3358._fU4, 0 );
        if (l_U128)
        {
            sub_38867( "SAIR_MXFRTRMS", ref l_U882 );
        }
        g_U3246 = 0;
        l_U316 = 0;
        l_U317 = 0;
        DO_SCREEN_FADE_IN( 0 );
    }
    sub_39939();
    if ((NOT (IS_VEHICLE_DEAD( g_U3358._fU8 ))) AND (NOT (IS_PED_DEAD( sub_1306() ))))
    {
        uVar2 = {(l_U299 * l_U296) + (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1306() )))};
        uVar5 = {(vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD())) + ((((GET_VEHICLE_SPEED( g_U3358._fU8 )) / 30.00000000) * (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_FORWARD_VECTOR( g_U3358._fU8 )))) * -1.00000000)};
        uVar8._fU0 = sub_40964( uVar2._fU0, uVar5._fU0, sub_40818( ref l_U305 ) );
        uVar8._fU4 = sub_40964( uVar2._fU4, uVar5._fU4, sub_40818( ref l_U305 ) );
        uVar8._fU8 = sub_40964( uVar2._fU8, uVar5._fU8, sub_40818( ref l_U305 ) );
        SET_CAM_COORD( l_U234._fU0, uVar8 );
        uVar11 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
        uVar14._fU0 = sub_40964( l_U302._fU0, uVar11._fU0, sub_40818( ref l_U305 ) );
        uVar14._fU4 = sub_40964( l_U302._fU4, uVar11._fU4, sub_40818( ref l_U305 ) );
        uVar14._fU8 = sub_40964( l_U302._fU8, uVar11._fU8, sub_40818( ref l_U305 ) );
        SET_CAM_ROT( l_U234._fU0, uVar14 );
        if (NOT l_U316)
        {
            if (sub_4077( ref l_U305 ))
            {
                sub_41237( 0, 0, 0, -859915232, -859915232, 0 );
                l_U316 = 1;
            }
        }
        if (NOT l_U317)
        {
            if ((ISEQ_QUERY_STATE( 759104699, 6 )) || (ISEQ_QUERY_STATE( 759104699, 5 )))
            {
                l_U317 = 1;
            }
        }
        if (NOT (IS_PED_IN_COVER( sub_1306() )))
        {
            StrCopy( ref cVar17, "VEH-", 32 );
            ConcatString(ref cVar17, g_U3358._fU8, 32);
            ConcatString(ref cVar17, "-10", 32);
            SNAP_PLAYER_TO_COVERLINE( sub_1328(), "DYNAMIC", ref cVar17, 0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1306() ) );
        }
        if ((l_U316) AND (l_U317))
        {
            return 1;
        }
    }
    return 0;
}

void sub_37443(unknown uParam0, unknown uParam1)
{
    vector[3] vVar4;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_790( "SA", "P_T2_CREATE_PLACEMENTS", 0 );
    array(ref vVar4, 3);
    vVar4[0] = {-1.50000000, -8.35000000, 0.94500000};
    vVar4[1] = {-1.45000000, -8.35000000, 1.20700000};
    vVar4[2] = {-1.35000000, -8.35000000, 1.20700000};
    sub_37576( ref g_U3350, ref vVar4, ref g_U3353, (uParam0^), uParam1 );
    sub_37939( uParam0, g_U3322, g_U3325, uParam1 );
    sub_38595( uParam0, g_U3329, g_U3332, uParam1 );
    return;
}

void sub_37576(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    vector vVar7;
    unknown uVar10;
    int I;
    vector vVar12;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;

    if (NOT (IS_VEHICLE_DEAD( uParam3 )))
    {
        vVar7 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uParam3 )};
        uVar10 = GET_VEHICLE_HEADING( uParam3 );
        for ( I = 0; I < (uParam0^); I++ )
        {
            if ((uParam2^)[I])
            {
                if (DOES_PLACEMENT_EXIST( (uParam0^)[I] ))
                {
                    sub_5434( (uParam0^)[I] );
                }
                vVar12 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", VECTOR_ROTATE_AXIS( (uParam1^)[I], uVar10, "z" )};
                uVar15 = {vVar12 + vVar7};
                (uParam0^)[I] = sub_37758( -4072149, uVar15, 0.00000000, 0.00000000, 0.00000000, 1, 1, 0, 1119092736 );
                if ((DOES_PLACEMENT_EXIST( (uParam0^)[I] )) AND (NOT (IS_STRING_NULL( uParam4 ))))
                {
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^)[I], uParam4 );
                }
            }
        }
    }
    return;
}

void sub_37758(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_37939(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    unknown uVar10;
    vector vVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    sub_790( "SA", "P_TP_SPAWN_AMMO_BAG_AND_SNIPER_RIFLE", 0 );
    if (NOT (IS_VEHICLE_DEAD( (uParam0^) )))
    {
        if (DOES_PLACEMENT_EXIST( g_U3321 ))
        {
            sub_5434( g_U3321 );
        }
        uVar10 = GET_VEHICLE_HEADING( (uParam0^) );
        vVar11 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", VECTOR_ROTATE_AXIS( uParam1, uVar10, "z" )};
        uVar14 = {vVar11 + (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( (uParam0^) )))};
        uVar17 = {uParam4};
        uVar17._fU8 += sub_38110( uVar10 );
        g_U3321 = CREATE_AMMOBAG_PLACEMENT_ROTATE( uVar14, uVar17, 10.00000000, 3.00000000, 0, 1119092736 );
        if (DOES_PLACEMENT_EXIST( g_U3321 ))
        {
            sub_38206( g_U3321 );
            SET_AMMOBAG_ENABLED( g_U3321, 1 );
            if (NOT (IS_STRING_NULL( uParam7 )))
            {
                ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U3321, uParam7 );
            }
        }
    }
    return;
}

float sub_38110(unknown uParam0)
{
    return uParam0 * (3.14159300 / 180.00000000);
}

void sub_38206(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        SET_AMMOBAG_REGEN_TIME( uParam0, 10.00000000 );
        SET_AMMOBAG_REGEN_RANGE( uParam0, 3.00000000 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1088031219, 45 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 954369040, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1138793073, 95 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1087746638, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1295933220, 30 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1383321053, 85 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1481241171, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1889644301, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -790090695, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1742569970, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1575030772, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1622373246, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 558118158, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1701914198, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1126469201, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 936600426, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 205668857, 0 );
    }
    return;
}

void sub_38595(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    unknown uVar10;
    vector vVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;

    if ((g_U3356) AND (NOT (IS_VEHICLE_DEAD( (uParam0^) ))))
    {
        if (DOES_PLACEMENT_EXIST( g_U3328 ))
        {
            sub_5434( g_U3328 );
        }
        uVar10 = GET_VEHICLE_HEADING( (uParam0^) );
        vVar11 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", VECTOR_ROTATE_AXIS( uParam1, uVar10, "z" )};
        uVar14 = {vVar11 + (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( (uParam0^) )))};
        uVar17 = {uParam4};
        uVar17._fU8 += sub_38110( uVar10 );
        g_U3328 = sub_37758( 1216559076, uVar14, uVar17, 0, 0, 0, 1119092736 );
        uVar20 = GET_PICKUP_FROM_PLACEMENT( g_U3328 );
        if ((DOES_PLACEMENT_EXIST( g_U3328 )) AND (NOT (IS_STRING_NULL( uParam7 ))))
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U3328, uParam7 );
        }
    }
    return;
}

void sub_38867(unknown uParam0, unknown uParam1)
{
    sub_6508( uParam1 );
    sub_38900( 0, sub_1306(), "MAX", uParam1, 2, 0 );
    sub_38900( 1, sub_1306(), "MAX", uParam1, 2, 0 );
    sub_39125( uParam0, uParam1, 8, 1 );
    return;
}

void sub_38900(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_39125(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_39149( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_39149(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_39204( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_39204(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_39239( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_39733( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_39239(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_39733(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_39939()
{
    if (g_U3246 < 7)
    {
        sub_39966( g_U3246 );
        g_U3246++;
    }
    return;
}

void sub_39966(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    char[24] cVar6;

    sub_790( "SA", "P_T2P1_ACTIVATE_TRAM_UFE start", 0 );
    if ((DOES_PED_EXIST( g_U3168[uParam0] )) AND (NOT (IS_PED_DEAD( g_U3168[uParam0] ))))
    {
        sub_40068( g_U3168[uParam0] );
        uVar3 = sub_31107( uParam0 );
        uVar4 = sub_2889( ref g_U3557, l_U342[uVar3] );
        uVar5 = l_U334[uVar3];
        sub_40223( ref l_U502[uVar5], g_U3168[uParam0], 1 );
        ATTACH_PED_TO_VEHICLE( g_U3168[uParam0], uVar4, 0, g_U3176[uParam0], g_U3198[uParam0], 360.00000000, 1, 0, 0, 1 );
        SET_PED_FLAG_LOCK_TO_COVER( g_U3168[uParam0], 1 );
        SET_PED_COMBAT_ATTRIBUTES( g_U3168[uParam0], 512, 0 );
        SET_PED_FLAG_BLOCK_BLINDFIRE_IN_COVER( g_U3168[uParam0], 1 );
        SET_PED_PINNED_DOWN( g_U3168[uParam0], 0, -1 );
        SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( g_U3168[uParam0], 1 );
        SET_GROUP_PED_DUCKS_WHEN_AIMED_AT( g_U3168[uParam0], 0 );
        SET_PED_FLAG_BLOCK_WOUNDED_MOVEMENT( g_U3168[uParam0], 1 );
        StrCopy( ref cVar6, "VEH-", 24 );
        ConcatString(ref cVar6, uVar4, 24);
        ConcatString(ref cVar6, "-", 24);
        ConcatString(ref cVar6, l_U318[uVar3], 24);
        CLEAR_PED_TASKS( g_U3168[uParam0] );
        TASK_COMBAT_SNAP_TO_COVER( g_U3168[uParam0], "DYNAMIC", ref cVar6, 0 );
        SET_PED_COVER_TARGET_PED( g_U3168[uParam0], sub_1306() );
        REGISTER_TARGET( g_U3168[uParam0], sub_1306() );
        g_U3222[uParam0] = 0;
        g_U3311[uParam0] = 0;
        sub_11468( ref g_U3247[uParam0] );
    }
    sub_790( "SA", "P_T2P1_ACTIVATE_TRAM_UFE end", 0 );
    return;
}

void sub_40068(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_40223(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_40818(int iParam0)
{
    int iVar3;

    if (iParam0->_fU28)
    {
        iVar3 = TIMERA();
    }
    else
    {
        iVar3 = TIMERB();
    }
    return sub_40899( (TO_FLOAT( iVar3 - iParam0->_fU0 )) / (TO_FLOAT( iParam0->_fU12 )), 0.00000000, 1.00000000 );
}

void sub_40899(float fParam0, float fParam1, float fParam2)
{
    float Result;

    Result = fParam0;
    if (fParam0 < fParam1)
    {
        Result = fParam1;
    }
    else if (fParam0 > fParam2)
    {
        Result = fParam2;
    }
    return Result;
}

float sub_40964(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return ((1.00000000 - uParam2) * uParam0) + (uParam1 * uParam2);
}

void sub_41237(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_41510(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_790( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_41635( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 41595, 41613, uParam8 );
}

void sub_41595()
{
    return;
}

int sub_41613()
{
    return 1;
}

void sub_41635(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_41914(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 0;
    iParam0->_fU84 = {uParam1};
    iParam0->_fU24 = 1;
    return;
}

void sub_42012(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_790( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_790( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_790( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_790( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_790( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_790( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_18893( iParam0->_fU0, 0 );
            sub_790( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_42879( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_42879( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_790( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_43407( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_42879( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_43756( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_43756( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_42879(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1306() )))
        {
            SET_PLAYER_CONTROL( sub_1328(), 0, uParam2 );
            SET_PED_DUCKING( sub_1306(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1306() );
            }
            SET_PED_INVINCIBLE( sub_1306(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_43407(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_1306() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_1306(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1306(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1306(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1306(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1306(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_43756(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1306() )))
    {
        SET_PLAYER_CONTROL( sub_1328(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1306(), 0 );
        if (bParam0)
        {
            sub_43837();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_43837()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1306() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1306(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1306(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1306(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1306(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_44254()
{
    int I;

    sub_790( "SA", "P_T2P1_DETACH_UFE start", 0 );
    for ( I = 0; I < 7; I++ )
    {
        if (NOT (IS_PED_DEAD( g_U3168[I] )))
        {
            DETACH_PED( g_U3168[I], 0 );
        }
    }
    sub_790( "SA", "P_T2P1_DETACH_UFE start", 0 );
    return;
}

void sub_44484()
{
    int I;

    for ( I = 0; I < 3; I++ )
    {
        g_U3358._fU364[I] = l_U875;
        g_U3358._fU380[I] = l_U872;
        g_U3557._fU364[I] = l_U875;
        g_U3557._fU380[I] = l_U872;
    }
    g_U3358._fU396 = l_U876;
    g_U3358._fU400 = l_U877;
    g_U3358._fU404 = l_U878;
    g_U3358._fU408 = l_U879;
    g_U3358._fU412 = l_U880;
    g_U3358._fU416 = l_U881;
    g_U3358._fU420 = l_U873;
    g_U3358._fU424 = l_U874;
    g_U3557._fU396 = l_U876;
    g_U3557._fU400 = l_U877;
    g_U3557._fU404 = l_U878;
    g_U3557._fU408 = l_U879;
    g_U3557._fU412 = l_U880;
    g_U3557._fU416 = l_U881;
    g_U3557._fU420 = l_U873;
    g_U3557._fU424 = l_U874;
    sub_44817( ref g_U3358 );
    sub_44817( ref g_U3557 );
    return;
}

void sub_44817(int iParam0)
{
    int I;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    float fVar7;
    unknown uVar8;

    for ( I = 0; I < 3; I++ )
    {
        if ((iParam0->_fU428[I]._fU16) || ((NOT iParam0->_fU428[I]._fU20) || (sub_4077( ref iParam0->_fU428[I] ))))
        {
            iParam0->_fU764[I] = NOT iParam0->_fU764[I];
            if (iParam0->_fU764[I])
            {
                uVar4 = GET_RANDOM_INT_IN_RANGE( iParam0->_fU404, iParam0->_fU408 );
                sub_3821( ref iParam0->_fU428[I], uVar4, 1, 0 );
                sub_3957( ref iParam0->_fU428[I] );
            }
            else if (sub_4077( ref iParam0->_fU540[I] ))
            {
                uVar4 = GET_RANDOM_INT_IN_RANGE( iParam0->_fU396, iParam0->_fU400 );
                sub_3821( ref iParam0->_fU428[I], uVar4, 1, 0 );
                sub_3957( ref iParam0->_fU428[I] );
            }
            else if (NOT iParam0->_fU540[I]._fU20)
            {
                sub_3821( ref iParam0->_fU540[I], GET_RANDOM_INT_IN_RANGE( iParam0->_fU412, iParam0->_fU416 ), 1, 0 );
                sub_3957( ref iParam0->_fU540[I] );
            };;;
        }
        if ((iParam0->_fU652[I]._fU16) || ((NOT iParam0->_fU652[I]._fU20) || (sub_4077( ref iParam0->_fU652[I] ))))
        {
            uVar5 = GET_RANDOM_INT_IN_RANGE( iParam0->_fU420, iParam0->_fU424 );
            sub_3821( ref iParam0->_fU652[I], uVar5, 1, 0 );
            sub_3957( ref iParam0->_fU652[I] );
            iParam0->_fU780[I] = NOT iParam0->_fU780[I];
        }
        uVar6 = sub_2889( iParam0, I );
        if (NOT (IS_VEHICLE_DEAD( uVar6 )))
        {
            if (iParam0->_fU540[I]._fU20)
            {
                fVar7 = 0;
            }
            else if (iParam0->_fU764[I])
            {
                fVar7 = sub_40964( iParam0->_fU364[I], 0, sub_40818( ref iParam0->_fU428[I] ) );
            }
            else
            {
                fVar7 = sub_40964( 0, iParam0->_fU364[I], sub_40818( ref iParam0->_fU428[I] ) );
            }
            if (iParam0->_fU780[I])
            {
                uVar8 = sub_40964( -iParam0->_fU380[I], iParam0->_fU380[I], sub_40818( ref iParam0->_fU652[I] ) );
            }
            else
            {
                uVar8 = sub_40964( iParam0->_fU380[I], -iParam0->_fU380[I], sub_40818( ref iParam0->_fU652[I] ) );
            }
            SET_TRAIN_SHAKE( uVar6, fVar7, uVar8, 0 );
        }
    }
    return;
}

void sub_45715(int iParam0, int iParam1, unknown uParam2)
{
    int iVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    float fVar12;

    iVar5 = g_U3335;
    switch (g_U3335)
    {
        case 0:
        if (g_U3336)
        {
            sub_790( "SA", "UFE tram is speeding up.", 0 );
            g_U3339 = g_U3338;
            sub_3821( ref g_U3340, g_U3349, 1, 0 );
            sub_3957( ref g_U3340 );
        }
        g_U3338 = sub_40964( g_U3339, uParam2 + 1.00000000, sub_40818( ref g_U3340 ) );
        break;
        case 1:
        if (g_U3336)
        {
            sub_790( "SA", "UFE tram is slowing down.", 0 );
            g_U3339 = g_U3338;
            sub_3821( ref g_U3340, g_U3349, 1, 0 );
            sub_3957( ref g_U3340 );
        }
        g_U3338 = sub_40964( g_U3339, uParam2 - 1.00000000, sub_40818( ref g_U3340 ) );
        break;
        case 2:
        if (g_U3336)
        {
            sub_790( "SA", "UFE tram is matching speed.", 0 );
            g_U3339 = g_U3338;
            sub_3821( ref g_U3340, g_U3349, 1, 0 );
            sub_3957( ref g_U3340 );
        }
        g_U3338 = sub_40964( g_U3339, uParam2, sub_40818( ref g_U3340 ) );
        break;
    }
    sub_25226( iParam0->_fU0, g_U3338 );
    if ((NOT (IS_VEHICLE_DEAD( iParam0->_fU4 ))) AND (NOT (IS_VEHICLE_DEAD( iParam1->_fU4 ))))
    {
        uVar6 = {(vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( iParam1->_fU4 ))) - (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( iParam0->_fU4 )))};
        uVar9 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_FORWARD_VECTOR( iParam1->_fU4 )};
        fVar12 = GET_ANGLE_BETWEEN_2D_VECTORS( uVar9._fU0, uVar9._fU4, uVar6._fU0, uVar6._fU4 );
        if (fVar12 > 110.00000000)
        {
            g_U3335 = 1;
        }
        else if (fVar12 < 60.00000000)
        {
            g_U3335 = 0;
        }
    }
    if (g_U3335 != iVar5)
    {
        g_U3336 = 1;
    }
    else
    {
        g_U3336 = 0;
    }
    return;
}

void sub_46328()
{
    unknown uVar2;
    int iVar3;

    sub_46338();
    uVar2 = sub_2666();
    iVar3 = sub_46528( uVar2 );
    if (iVar3 < l_U762)
    {
        if ((sub_46641( ref g_U3168 )) > iVar3)
        {
            sub_46731( uVar2 );
        }
    }
    return;
}

void sub_46338()
{
    int I;

    for ( I = 0; I < 7; I++ )
    {
        if (l_U326[I] > -1)
        {
            if (l_U326[I] < 7)
            {
                if (IS_PED_DEAD( g_U3168[l_U326[I]] ))
                {
                    l_U326[I] = -1;
                }
            }
            else
            {
                SCRIPT_ASSERT( "Array overrun in P_T2P1_UPDATE_DEAD_UFE! Idx: {0}", 1, 513, I );
            }
        }
    }
    return;
}

void sub_46528(int iParam0)
{
    unknown uVar3;
    int Result;
    int I;

    uVar3 = sub_2889( ref g_U3557, iParam0 );
    Result = 0;
    for ( I = 0; I < 7; I++ )
    {
        if ((l_U326[I] > -1) AND (iParam0 == l_U342[I]))
        {
            Result++;
        }
    }
    return Result;
}

void sub_46641(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_46731(int iParam0)
{
    unknown uVar3;
    boolean bVar4;
    int iVar5;
    int iVar6;
    int iVar7;
    int iVar8;
    int iVar9;
    int iVar10;
    boolean bVar11;
    unknown uVar12;
    unknown uVar13;
    char[16] cVar14;
    unknown uVar18;
    unknown uVar19;

    uVar3 = sub_2889( ref g_U3557, iParam0 );
    bVar4 = false;
    switch (iParam0)
    {
        case 0:
        bVar4 = true;
        break;
        case 1:
        iVar5 = GET_RANDOM_INT_IN_RANGE( 0, 1 );
        if (iVar5 == 0)
        {
            bVar4 = false;
        }
        else
        {
            bVar4 = true;
        }
        break;
        case 2:
        bVar4 = false;
        break;
    }
    iVar6 = 0;
    iVar7 = 0;
    if (bVar4)
    {
        iVar6 = 6;
        iVar7 = -1;
    }
    else
    {
        iVar6 = 0;
        iVar7 = 7;
    }
    iVar8 = -1;
    iVar9 = -1;
    iVar10 = iVar6;
    while (iVar10 != iVar7)
    {
        if ((iVar8 == -1) AND ((l_U342[iVar10] != iParam0) AND (l_U326[iVar10] > -1)))
        {
            iVar8 = iVar10;
        }
        if ((iVar9 == -1) AND ((l_U326[iVar10] == -1) AND (l_U342[iVar10] == iParam0)))
        {
            iVar9 = iVar10;
        }
        if (bVar4)
        {
            iVar10--;
        }
        else
        {
            iVar10++;
        }
    }
    bVar11 = false;
    if (iVar8 == -1)
    {
        SCRIPT_ASSERT( "Couldn't find an UFE in P_T2P1_SEND_UFE_TO_TRAM_CAR()!", 0 );
        bVar11 = true;
    }
    if (iVar9 == -1)
    {
        SCRIPT_ASSERT( "Couldn't find a free cover point in P_T2P1_SEND_UFE_TO_TRAM_CAR()!", 0 );
        bVar11 = true;
    }
    if (NOT bVar11)
    {
        uVar12 = l_U326[iVar8];
        uVar13 = l_U318[iVar9];
        StrCopy( ref cVar14, "VEH-", 16 );
        ConcatString(ref cVar14, uVar3, 16);
        ConcatString(ref cVar14, "-", 16);
        ConcatString(ref cVar14, uVar13, 16);
        if ((sub_32912( sub_1306(), 0 )) AND (sub_32912( g_U3168[uVar12], 0 )))
        {
            sub_47299( g_U3168[uVar12] );
            uVar18 = l_U334[iVar9];
            sub_40223( ref l_U502[uVar18], g_U3168[uVar12], 1 );
            OPEN_SEQUENCE_TASK( ref uVar19 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_COMBAT_MOVE_TO_COVER( 0, "DYNAMIC", ref cVar14, sub_1306() );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( uVar19 );
            CLEAR_PED_TASKS( g_U3168[uVar12] );
            TASK_PERFORM_SEQUENCE( g_U3168[uVar12], uVar19 );
            CLEAR_SEQUENCE_TASK( uVar19 );
            l_U326[iVar8] = -1;
            l_U326[iVar9] = uVar12;
        }
    }
    return;
}

void sub_47299(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_47541()
{
    int iVar2;
    int I;

    iVar2 = sub_2666();
    sub_11468( ref l_U811[iVar2]._fU36 );
    if (l_U769 != iVar2)
    {
        if (l_U811[iVar2]._fU72)
        {
            sub_47617( ref l_U811[iVar2]._fU0, 0 );
            l_U811[iVar2]._fU72 = 0;
            sub_11468( ref l_U811[iVar2]._fU36 );
        }
        else if (NOT l_U811[iVar2]._fU0._fU20)
        {
            sub_36353( ref l_U811[iVar2]._fU0, l_U869 );
            sub_11468( ref l_U811[iVar2]._fU36 );
        }
    }
    else if (l_U769 == iVar2)
    {
        sub_11468( ref l_U811[iVar2]._fU0 );
        sub_11468( ref l_U811[iVar2]._fU36 );
        l_U811[iVar2]._fU72 = 0;
    }
    for ( I = 0; I < 3; I++ )
    {
        if (I != iVar2)
        {
            if (l_U769 == I)
            {
                if ((NOT l_U811[I]._fU36._fU20) AND (NOT l_U811[I]._fU0._fU20))
                {
                    sub_36353( ref l_U811[I]._fU36, l_U870 );
                }
            }
            else if ((NOT l_U811[I]._fU72) AND (l_U811[I]._fU0._fU20))
            {
                sub_47617( ref l_U811[I]._fU0, 1 );
                sub_36353( ref l_U811[I]._fU36, l_U870 );
                l_U811[I]._fU72 = 1;
            }
            if (sub_4077( ref l_U811[I]._fU36 ))
            {
                sub_11468( ref l_U811[I]._fU0 );
                l_U811[I]._fU72 = 0;
            }
        }
    }
    return;
}

void sub_47617(int iParam0, int iParam1)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if (iParam1 == 1)
    {
        iParam0->_fU8 = iParam0->_fU4 - iParam0->_fU0;
        sub_4614( iParam0 );
    }
    else if (iParam0->_fU8 > 0)
    {
        sub_3957( iParam0 );
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA() - iParam0->_fU8;
        }
        else
        {
            iParam0->_fU0 = TIMERB() - iParam0->_fU8;
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM() - iParam0->_fU8;
        }
        iParam0->_fU4 = iParam0->_fU0;
        iParam0->_fU8 = 0;
    }
    return;
}

void sub_48288()
{
    int I;

    sub_790( "SA", "P_T2P1_STOP_GRENADE_THROWS", 0 );
    for ( I = 0; I < 7; I++ )
    {
        if (sub_32912( g_U3168[I], 0 ))
        {
            SET_PED_COMBAT_ATTRIBUTES( g_U3168[I], 512, 0 );
            SET_PED_FLAG_FORCE_THROW_PROJECTILE_IN_COVER( g_U3168[I], 0 );
            SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( g_U3168[I], 1 );
        }
        g_U3230[I] = 0;
    }
    return;
}

void sub_48453()
{
    int I;

    sub_790( "SA", "P_T2P1_RESET_UFE_AIM_TO_PLAYER", 0 );
    for ( I = 0; I < 7; I++ )
    {
        if ((NOT g_U3230[I]) AND (sub_32912( g_U3168[I], 0 )))
        {
            SET_PED_COVER_TARGET_PED( g_U3168[I], sub_1306() );
        }
    }
    return;
}

boolean sub_48590()
{
    int iVar2;
    float fVar3;
    int I;
    float fVar5;

    sub_790( "SA", "P_T2P1_START_GRENADE_THROWS start", 0 );
    iVar2 = -1;
    fVar3 = 99999.00000000;
    for ( I = 0; I < 7; I++ )
    {
        if (sub_32912( g_U3168[I], 0 ))
        {
            if ((IS_PED_IN_COVER( g_U3168[I] )) AND (sub_2708( g_U3168[I], l_U438[l_U769] )))
            {
                fVar5 = sub_48753( g_U3168[I], sub_1306(), 1 );
                if (fVar5 < fVar3)
                {
                    iVar2 = I;
                    fVar3 = fVar5;
                }
            }
        }
    }
    if (iVar2 > -1)
    {
        SET_PED_COMBAT_ATTRIBUTES( g_U3168[iVar2], 512, 1 );
        SET_PED_FLAG_FORCE_THROW_PROJECTILE_IN_COVER( g_U3168[iVar2], 1 );
        SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( g_U3168[iVar2], 0 );
        g_U3230[iVar2] = 1;
    }
    sub_790( "SA", "P_T2P1_START_GRENADE_THROWS end", 0 );
    return iVar2 > -1;
}

void sub_48753(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_49058()
{
    int J;
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    int I;
    float fVar17;
    boolean bVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;

    for ( J = 0; J < 7; J++ )
    {
        if ((sub_32912( sub_1306(), 0 )) AND ((sub_32912( g_U3168[J], 0 )) AND (g_U3230[J])))
        {
            iVar3 = sub_31107( J );
            if (iVar3 > -1)
            {
                uVar4 = sub_2889( ref g_U3557, l_U342[iVar3] );
                uVar5 = sub_2889( ref g_U3358, l_U342[iVar3] );
                if ((NOT (IS_VEHICLE_DEAD( uVar5 ))) AND (NOT (IS_VEHICLE_DEAD( uVar4 ))))
                {
                    uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uVar5 )};
                    uVar9 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uVar4 )};
                    uVar12 = GET_DISTANCE_BETWEEN_COORDS( uVar6, uVar9, 1 );
                    fVar17 = 0.00000000;
                    bVar18 = false;
                    for ( I = 0; I < 12; I++ )
                    {
                        if (sub_2708( sub_1306(), l_U509[I] ))
                        {
                            fVar17 = l_U509[I]._fU72._fU4;
                            bVar18 = true;
                            if (I < 4)
                            {
                                uVar19 = sub_2889( ref g_U3557, 2 );
                            }
                            else if ((I < 8) AND (I > 3))
                            {
                                uVar19 = sub_2889( ref g_U3557, 1 );
                            }
                            else
                            {
                                uVar19 = sub_2889( ref g_U3557, 0 );
                            }
                        }
                    }
                    if (bVar18)
                    {
                        switch (l_U342[iVar3])
                        {
                            case 0:
                            uVar13._fU0 = uVar12;
                            uVar13._fU4 = fVar17;
                            uVar13._fU8 = 1.00000000;
                            break;
                            case 1:
                            case 2:
                            uVar13._fU0 = -uVar12;
                            uVar13._fU4 = fVar17;
                            uVar13._fU8 = 1.00000000;
                            break;
                        }
                        uVar20 = sub_49536( l_U767, l_U768, uVar12 );
                        uVar21 = sub_40964( l_U765, l_U766, uVar20 );
                        uVar22 = sub_40964( l_U763, l_U764, uVar20 );
                        SET_PED_PROJECTILE_OVERRIDE_PARAMETERS( g_U3168[J], 0, uVar22, uVar21, 0, 0 );
                        SET_PED_COVER_TARGET_VEHICLE( g_U3168[J], uVar19, 0, uVar13 );
                    }
                    else
                    {
                        g_U3230[J] = 0;
                        SET_PED_COMBAT_ATTRIBUTES( g_U3168[J], 512, 0 );
                        SET_PED_FLAG_FORCE_THROW_PROJECTILE_IN_COVER( g_U3168[J], 0 );
                        SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( g_U3168[J], 1 );
                    }
                }
            }
            else
            {
                SCRIPT_ASSERT( "P_T2P1_HANDLE_GRENADE_THROW_OFFSETS: UFE {0} doesn't have a cover point!", 1, 513, J );
            }
        }
    }
    return;
}

void sub_49536(unknown uParam0, unknown uParam1, unknown uParam2)
{
    float fVar5;

    fVar5 = (uParam2 - uParam0) / (uParam1 - uParam0);
    return sub_40899( fVar5, 0.00000000, 1.00000000 );
}

int sub_49869()
{
    if (NOT (IS_PED_DEAD( sub_1306() )))
    {
        if (((GET_PED_TOXICITY_LEVEL( sub_1306() )) > 0.75000000) || (sub_4077( ref l_U811[l_U769]._fU36 )))
        {
            return 1;
        }
    }
    return 0;
}

void sub_50005(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_50205(unknown uParam0)
{
    l_U134 = sub_40964( l_U133, g_U3320, sub_40818( uParam0 ) );
    sub_25226( g_U3358._fU0, l_U134 );
    return;
}

void sub_50358()
{
    int I;

    sub_790( "SA", "P_T2_MAKE_TRAM_UFE_MORE_AGGRESSIVE start", 0 );
    for ( I = 0; I < 7; I++ )
    {
        if (NOT (IS_PED_DEAD( g_U3168[I] )))
        {
            SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( g_U3168[I], 1 );
            SET_PED_PINNED_DOWN( g_U3168[I], 0, -1 );
        }
    }
    sub_790( "SA", "P_T2_MAKE_TRAM_UFE_MORE_AGGRESSIVE end", 0 );
    return;
}

void sub_50826()
{
    int iVar2;

    iVar2 = sub_50840( ref g_U3168 );
    if (NOT (iVar2 == nil))
    {
        sub_790( "SA", "Assigning bullet cam preference", 0 );
        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
        SET_BULLET_CAM_PREF( iVar2, "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", 0, 0, 0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_50840(unknown uParam0)
{
    int I;

    if ((sub_46641( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_51116(unknown uParam0)
{
    if ((NOT (IS_VEHICLE_DEAD( uParam0 ))) AND (NOT (IS_PED_DEAD( sub_1306() ))))
    {
        if ((sub_51169( sub_1306(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uParam0 ) )) > 75.00000000)
        {
            sub_51257( sub_1306() );
        }
    }
    return;
}

void sub_51169(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

void sub_51257(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_51341(unknown uParam0, unknown uParam1)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((NOT (IS_VEHICLE_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^)[I] ))))
        {
            if (NOT (IS_PED_PROCESSING_FROZEN( (uParam0^)[I] )))
            {
                if ((sub_51169( (uParam0^)[I], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uParam1 ) )) > 75.00000000)
                {
                    sub_23515( I );
                    sub_5294( (uParam0^)[I] );
                }
            }
        }
    }
    return;
}

void sub_51489()
{
    int I;

    for ( I = 0; I < 7; I++ )
    {
        if ((NOT g_U3230[I]) AND ((NOT (IS_PED_DEAD( sub_1306() ))) AND (NOT (IS_PED_DEAD( g_U3168[I] )))))
        {
            SET_PED_COVER_TARGET_PED( g_U3168[I], sub_1306() );
            REGISTER_TARGET( g_U3168[I], sub_1306() );
        }
    }
    return;
}

void sub_51663(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_2708( sub_1306(), uParam0 );
}

void sub_51781()
{
    int I;

    sub_790( "SA", "P_T2_UPDATE_TRAM_UFE_ALLOWED_TO_SPAWN start", 0 );
    for ( I = 0; I < 7; I++ )
    {
        if ((NOT (DOES_PED_EXIST( g_U3168[I] ))) || (IS_PED_DEAD( g_U3168[I] )))
        {
            g_U3214[I] = 0;
        }
        else
        {
            g_U3214[I] = 1;
        }
    }
    sub_790( "SA", "P_T2_UPDATE_TRAM_UFE_ALLOWED_TO_SPAWN end", 0 );
    return;
}

void sub_51998()
{
    int I;

    sub_790( "SA", "P_T2_UPDATE_EXISTING_PLACEMENTS start", 0 );
    for ( I = 0; I < g_U3350; I++ )
    {
        g_U3353[I] = DOES_PLACEMENT_EXIST( g_U3350[I] );
    }
    g_U3356 = DOES_PLACEMENT_EXIST( g_U3328 );
    sub_790( "SA", "P_T2_UPDATE_EXISTING_PLACEMENTS end", 0 );
    return;
}

void sub_52345()
{
    sub_790( "SA", "P_T2P1_RELEASE_ASSETS start", 0 );
    sub_52404( ref l_U180, ref g_U1030 );
    sub_52682( ref l_U197, ref g_U1247 );
    sub_52920( "npc_rifle_cover_grenade", ref g_U1429 );
    sub_53125( "SCRIPT_MISSION\S_AIRPORT_TRAM", ref g_U1950 );
    sub_790( "SA", "P_T2P1_RELEASE_ASSETS end", 0 );
    return;
}

void sub_52404(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_52439( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_52439(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_6166( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_52682(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_52717( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_52717(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_6166( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_52920(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_6166( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_53125(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_6166( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


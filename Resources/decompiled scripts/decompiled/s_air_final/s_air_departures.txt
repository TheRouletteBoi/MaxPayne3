void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U73 = -1;
    l_U74 = {64536, 64536, 64536};
    l_U78 = 0;
    l_U79 = 0;
    l_U80 = 1500;
    l_U91 = 0;
    l_U129 = 0;
    l_U130 = 1;
    l_U131 = 1;
    l_U132 = 0;
    l_U133 = 0;
    l_U134 = 0;
    l_U135 = 0;
    l_U137 = {-48.79000000, -30.90000000, 5.73000000};
    l_U140 = {0.00000000, 0.00000000, 180.00000000};
    l_U144 = {-48.79000000, -30.90000000, 5.73000000};
    l_U147 = {0.00000000, 0.00000000, 180.00000000};
    l_U152 = {-48.79000000, -30.90000000, 5.61000000};
    l_U155 = {0.00000000, 0.00000000, 180.00000000};
    l_U158 = {-48.77120000, -31.79000000, 4.38443000};
    l_U161 = 0.00000000;
    l_U162 = {-49.91000000, -31.54000000, 4.38000000};
    l_U165 = 25.00000000;
    l_U175 = 1000;
    l_U335 = {-49.12100000, -32.31600000, 5.90300000};
    l_U338 = {-2.06400000, -0.00000000, -18.16200000};
    l_U341 = 1200;
    l_U373 = {-49.17100000, -33.63800000, 5.71600000};
    l_U376 = {-1.45500000, 0.40300000, 21.37900000};
    l_U379 = 3500;
    l_U411 = {-51.95200000, -28.63800000, 5.90700000};
    l_U414 = {-7.02700000, -0.36800000, 18.96000000};
    l_U417 = 2500;
    l_U418 = 3700;
    l_U419 = 0.10000000;
    l_U422 = {-34.84000000, -151.59000000, 5.30000000};
    l_U425 = {0.00000000, 0.00000000, 90.00000000};
    l_U428 = {-26.56000000, -86.29000000, 9.80000000};
    l_U431 = {0.00000000, 0.00000000, 0.00000000};
    l_U467 = 1500;
    l_U801 = {-50.78700000, -128.54900000, 4.33000000};
    l_U804 = {-50.78700000, -69.63100000, 4.33000000};
    l_U807 = 3.70000000;
    l_U808 = {-47.09300000, -128.53900000, 4.33000000};
    l_U811 = {-47.09300000, -69.62100000, 4.33000000};
    l_U814 = {-60.53363000, -121.03310000, 6.58906000};
    l_U817 = {0.00000000, 0.00000000, -90.00000000};
    l_U860 = 4500;
    l_U861 = 1000;
    l_U862 = 0;
    l_U1027 = -1574512993;
    l_U1256 = 30000;
    l_U1257 = 45000;
    l_U1283 = 8000;
    l_U1284 = 16000;
    l_U1350 = 0;
    l_U1351 = 0;
    l_U1352 = 0;
    l_U1353 = 0;
    l_U1354 = 0;
    l_U1355 = 0;
    l_U1356 = 0;
    sub_1147( "AT", "Script s_air_Departures.sc is starting up...", 0 );
    sub_1196();
    l_U129 = 1;
    START_WIDGET_GROUP( "Button and Painkillers" );
    ADD_WIDGET_BOOL( "Reset Button", ref l_U1354 );
    ADD_WIDGET_BOOL( "Reset Boxes", ref l_U1355 );
    ADD_WIDGET_BOOL( "Disable Gate Collison", ref l_U1356 );
    sub_1551( ref l_U137, "Button Position", 0.01000000 );
    sub_1551( ref l_U140, "Button Rotation", 0.01000000 );
    sub_1551( ref l_U144, "Overlay Position", 0.01000000 );
    sub_1551( ref l_U147, "Overlay Rotation", 0.01000000 );
    sub_1551( ref l_U152, "Indicator Position", 0.01000000 );
    sub_1551( ref l_U155, "Indicator Rotation", 0.01000000 );
    sub_1551( ref l_U158, "Player Teleport Pos", 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Player Teleport Heading", ref l_U161, -360.00000000, 360.00000000, 0.01000000 );
    sub_1551( ref l_U162, "Player Teleport RunPos", 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Player Teleport Run Heading", ref l_U165, -360.00000000, 360.00000000, 0.01000000 );
    sub_1551( ref l_U422, "Bathroom Box Pos", 1036831949 );
    sub_1551( ref l_U425, "Bathroom Box Rot", 1036831949 );
    sub_1551( ref l_U428, "Upstairs Box Pos", 1036831949 );
    sub_1551( ref l_U431, "Upstairs Box Rot", 1036831949 );
    START_WIDGET_GROUP( "Camera" );
    sub_1551( ref l_U335, "NIS Cam Position", 1036831949 );
    sub_1551( ref l_U338, "NIS Cam Rotation", 1036831949 );
    ADD_WIDGET_INT_SLIDER( "NIS Button shot time", ref l_U341, 0, 15000, 1 );
    sub_1551( ref l_U373, "NIS Run Start Position", 1036831949 );
    sub_1551( ref l_U376, "NIS Run Start Rotation", 1036831949 );
    ADD_WIDGET_INT_SLIDER( "NIS Start Run shot time", ref l_U379, 0, 15000, 1 );
    sub_1551( ref l_U411, "NIS Run End Position", 1036831949 );
    sub_1551( ref l_U414, "NIS Run End Rotation", 1036831949 );
    ADD_WIDGET_INT_SLIDER( "NIS End Run shot time", ref l_U417, 0, 15000, 1 );
    ADD_WIDGET_INT_SLIDER( "Interp time", ref l_U418, 0, 20000, 1 );
    ADD_WIDGET_FLOAT_SLIDER( "Gate jump-to anim", ref l_U419, 0.00000000, 1.00000000, 0.01000000 );
    STOP_WIDGET_GROUP();
    STOP_WIDGET_GROUP();
    while (NOT IS_EXITFLAG_SET())
    {
        sub_2615();
        if (l_U133 == 0)
        {
            sub_11591();
        }
        sub_65770();
        WAIT( 0 );
    }
    sub_4868( 1 );
    sub_66154();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_air_Departures" );
    sub_1147( "AT", "Script s_air_Departures.sc is terminating...", 0 );
    return;
}

void sub_1147(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1196()
{
    l_U1012[0] = 2004595611;
    l_U1012[1] = g_U2393;
    l_U1012[2] = 1640831600;
    l_U1012[3] = g_U2394;
    l_U1012[4] = g_U2395;
    l_U1012[5] = g_U826;
    l_U1012[6] = g_U827;
    l_U1012[7] = l_U1027;
    l_U1012[8] = -1409914275;
    l_U1012[9] = -576031449;
    l_U1012[10] = -338998251;
    l_U1012[11] = -1913048611;
    l_U1012[12] = 1586610117;
    l_U1012[13] = -2043642572;
    return;
}

void sub_1551(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

void sub_2615()
{
    if (g_U830 == 3)
    {
        switch (l_U133)
        {
            case 0:
            if ((sub_2770()) || (IS_PED_DEAD( sub_2697() )))
            {
                l_U133 = 1;
                sub_1147( "AT", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_3264())
            {
                l_U133 = 3;
            }
            else if ((sub_3304( 0 )) == 1)
            {
                l_U133 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_2697() )))
            {
                l_U133 = 3;
                sub_1147( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_1147( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_2697() ))) AND (NOT (IS_PLAYER_DEAD( sub_2719() ))))
            {
                SET_PLAYER_CONTROL( sub_2719(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_2697() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_2697(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_4868( 0 );
            l_U133 = 4;
            sub_1147( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_1147( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_7133( ref l_U93, sub_2697() );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "MILO_ap_depart", 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "MILO_ap_depart", 0 ), GET_HASH_KEY( ref g_U2278 ) );
            if ((g_U861[4]._fU40 != 4) AND (g_U861[4]._fU40 != 0))
            {
                sub_1147( "GA", "Shutting down script for TRAM_CONCESSIONS.", 0 );
                sub_11339( ref g_U861[4] );
                SET_EXITFLAG_FOR_SCRIPT( g_U861[4]._fU32 );
            }
            g_U846[4] = 0;
            l_U131 = 0;
            l_U133 = 5;
            sub_1147( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_1147( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U129 = 1;
            l_U133 = 0;
            sub_1147( "AT", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_2697()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_2719() );
    }
    return 0;
}

void sub_2719()
{
    return GET_PLAYER_ID();
}

int sub_2770()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_2697() )))
        {
            SET_PED_FORCED_TO_WALK( sub_2697(), 0 );
            SET_PLAYER_FORCED_AIM( sub_2719(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_2719(), 1 );
            if ((IS_PED_VISIBLE( sub_2697() )) == 0)
            {
                SET_PED_VISIBLE( sub_2697(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_3264()
{
    return g_U648;
}

int sub_3304(int iParam0)
{
    iParam0 = 1;
    switch (l_U79)
    {
        case 0:
        if (NOT (sub_3365( ref l_U81 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_2697() )))
            {
                l_U80 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_3475( ref l_U81, l_U80, 1, 1 );
            sub_3611( ref l_U81 );
        }
        if (sub_3731( ref l_U81 ))
        {
            sub_1147( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_2697() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_2719() )))
            {
                SET_PLAYER_CONTROL( sub_2719(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U79 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U79 = 2;
            }
            else
            {
                l_U79 = 3;
            }
        }
        break;
        case 2:
        sub_1147( "NS", "Player will QUIT", 0 );
        sub_4218();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1147( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_4218();
        return 1;
        break;
    }
    return 0;
}

int sub_3365(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_3475(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_3611(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_3731(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_4218()
{
    sub_1147( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4268( ref l_U81 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_2719() )))
    {
        SET_PLAYER_CONTROL( sub_2719(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U78 = 0;
    l_U78 = l_U78;
    l_U79 = 0;
    return;
}

void sub_4268(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_4868(boolean bParam0)
{
    sub_1147( "AT", "P_CLEANUP_DEPARTURES", 0 );
    ISEQ_TERMINATE( -192153712 );
    sub_4933( -192153712, ref g_U1368 );
    ISEQ_TERMINATE( 224058020 );
    sub_4933( 224058020, ref g_U1368 );
    ISEQ_TERMINATE( -1956283442 );
    sub_4933( -1956283442, ref g_U1368 );
    ISEQ_TERMINATE( 789239515 );
    sub_4933( 789239515, ref g_U1368 );
    ISEQ_TERMINATE( 783941433 );
    sub_4933( 783941433, ref g_U1368 );
    if (NOT bParam0)
    {
        sub_5417( ref g_U2632 );
        sub_5417( ref g_U2760 );
        sub_5417( ref g_U2474 );
        sub_5417( ref g_U2588 );
    }
    sub_5576( l_U798 );
    sub_5576( l_U797 );
    sub_5576( l_U800 );
    sub_5576( l_U799 );
    sub_5576( l_U820 );
    sub_5576( l_U821 );
    sub_5576( l_U822 );
    sub_5576( l_U823 );
    sub_5576( l_U136 );
    sub_5576( l_U150 );
    sub_5576( l_U151 );
    sub_5576( l_U143 );
    sub_5576( l_U420 );
    sub_5576( l_U421 );
    if (NOT bParam0)
    {
        sub_5576( g_U2467 );
    }
    sub_5768( ref l_U824 );
    sub_5801( g_U769._fU0 );
    sub_5801( g_U787._fU0 );
    sub_5892( ref l_U176, 0 );
    if ((IS_SCRIPT_MOVIE_PLAYING( 0 )) AND (NOT bParam0))
    {
        STOP_MOVIE( 0 );
    }
    RESET_PED_MODEL_LOD_DISTANCES( 2004595611 );
    sub_6813( ref l_U553 );
    sub_6877();
    return;
}

void sub_4933(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_5045( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_5045(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_5417(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_5451( (uParam0^)[I] );
    }
    return;
}

void sub_5451(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_5576(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_5768(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_5801( (uParam0^)[I] );
    }
    return;
}

void sub_5801(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_5892(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_5936( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_5936( iParam0, 0 );
        sub_6136( iParam0, 0 );
        if ((IS_PED_DEAD( sub_2697() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_2697() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_2697(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_5936(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_6136(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_6287( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_6287(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_6348( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_6348( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_6348(int iParam0)
{
    if (((IS_PED_DEAD( sub_2697() )) == 0) AND ((IS_PLAYER_DEAD( sub_2719() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_2697() )) == 1) || (((IS_PED_GETTING_UP( sub_2697() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_2697() )) == 1) || (((IS_PED_IN_COVER( sub_2697() )) == 1) || (((IS_PED_DUCKING( sub_2697() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_2697() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_6813(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_6877()
{
    sub_1147( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_1147( "CCB", "Stopping the Finale_Departures context...", 0 );
    END_CONTEXT( "Finale_Departures" );
    return;
}

void sub_7133(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1147( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_7317( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_8394( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_8686( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_9046( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_8686( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_9046( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_8686( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_9046( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_9331( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_9046( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_9331( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_9046( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_9824( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_9985( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_2697(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1147( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_7317(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_7349( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_7349(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_8394(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_8686(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_9002( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_9002(unknown uParam0)
{
    return;
}

void sub_9046(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_9331(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_9002( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_9824(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_9985(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_7349( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_10057( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_10057(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_11339(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_11591()
{
    int iVar2;
    int I;
    int iVar4;

    iVar2 = l_U129;
    sub_11608();
    sub_13820();
    switch (l_U129)
    {
        case 0: break;
        case 1:
        sub_1147( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_15035();
        sub_18867();
        sub_20048();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U129 = 2;
        sub_1147( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_1147( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_21947();
        sub_26537();
        l_U129 = 3;
        sub_1147( "AT", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_29398( ref g_U1950 )) AND ((sub_29207( ref g_U1368 )) AND ((sub_29080( ref g_U1429 )) AND ((sub_28959( ref g_U1247 )) AND (sub_28839( ref g_U1030 ))))))
        {
            g_U831[3] = 1;
            if ((NOT l_U93._fU0) AND (g_U829 == 3))
            {
                sub_1147( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
                l_U129 = 4;
            }
            else
            {
                sub_1147( "GA", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
                l_U129 = 6;
            }
        }
        break;
        case 4:
        sub_1147( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        l_U131 = 0;
        g_U846[3] = 1;
        if ((sub_29767( ref l_U93 )) == 0)
        {
            sub_9331( sub_2697(), -1013714740, 50, 0, 0 );
            sub_8686( sub_2697(), -1464892298, 0, 50, 0 );
            sub_8686( sub_2697(), -612753081, 1, 50, 0 );
            l_U129 = 5;
            sub_1147( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U129 = 6;
            sub_1147( "GA", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_2697() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_2697(), 1 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_2697(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_2697(), 0, 0 ) ))))
            {
                g_U830 = 3;
                sub_30296( ref l_U93, g_U830, sub_2697(), g_U2014[3], g_U2129[3], g_U2168[3], g_U2207[3], 0 );
                l_U129 = 6;
                sub_1147( "GA", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
            }
        }
        break;
        case 6:
        if (l_U130)
        {
            l_U563 = 1;
            l_U519 = 1;
            l_U679 = 1;
            l_U732 = 1;
        }
        if (sub_34007())
        {
            if (sub_36456())
            {
                l_U129 = 7;
                sub_1147( "AT", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 7:
        if (l_U130)
        {
            sub_37266( ref l_U798, l_U804, 0 );
            sub_37266( ref l_U797, l_U801, 0 );
            sub_37266( ref l_U800, l_U811, 1 );
            sub_37266( ref l_U799, l_U808, 1 );
            sub_37761( ref l_U822, ref l_U823, -35.16600000, -89.34100000, 6.62600000, 0.00000000, 0.00000000, -135.00000000, 0, ref g_U2278 );
            sub_37761( ref l_U820, ref l_U821, -35.16200000, -103.89200000, 6.62600000, 0.00000000, 0.00000000, -45.00000000, 1, ref g_U2278 );
            sub_38420();
            sub_40144( ref g_U2278 );
            sub_40411();
            SET_MOVIE_LOOP( 0, 1 );
            sub_40817( ref g_U2632, ref l_U441, ref l_U459, 0, 6 );
            sub_40817( ref g_U2760, ref l_U441, ref l_U459, -1, -1 );
        }
        if ((ISEQ_QUERY_STATE( 783941433, 2 )) AND (g_U846[3]))
        {
            if (l_U131)
            {
                if (CUTSCENE_IS_LOADED( "MID_03_FIN_concat" ))
                {
                    sub_1147( "AT", "eCheckpointState = CP_MID_03_FINALE", 0 );
                    l_U129 = 8;
                }
                else
                {
                    sub_1147( "AT", "Waiting for MID_03_FIN to load ...", 0 );
                }
            }
            else
            {
                sub_1147( "AT", "eCheckpointState = CP_MID_03_FINALE", 0 );
                l_U129 = 8;
            }
        }
        break;
        case 8:
        if (l_U130)
        {
            sub_49669( ref l_U831, "MID_03_FIN_concat", 41420, 41439, 43712, 43882, 43943, 46710, 250, 0 );
            sub_50085( ref l_U831, "MILO_ap_depart", ref g_U2278 );
            if (l_U131)
            {
                l_U831._fU4 = 2;
                l_U831._fU104 = 0;
            }
            else
            {
                l_U831._fU4 = 7;
            }
        }
        if (sub_50188( ref l_U831 ))
        {
            if (g_U830 != 3)
            {
                g_U830 = 3;
                sub_30296( ref l_U93, g_U830, sub_2697(), g_U2014[3], g_U2129[3], g_U2168[3], g_U2207[3], 1 );
            }
            sub_52207();
            l_U129 = 9;
            if (IS_DEATH_PANEL_WIPE_ALLOWED())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
            sub_1147( "AT", "eCheckpointState = CP_HANDLE_GAMEPLAY", 0 );
        }
        break;
        case 9:
        if (l_U130)
        {
            sub_3611( ref l_U739 );
            sub_3611( ref l_U1274 );
        }
        sub_52465( ref g_U2632, -1054867456, 0, 1 );
        sub_52465( ref g_U2760, -1054867456, 0, 1 );
        sub_52465( ref g_U2474, -1054867456, 0, 1 );
        sub_52465( ref g_U2588, -1054867456, 0, 1 );
        sub_48136();
        sub_52665();
        sub_53131();
        if (NOT l_U464)
        {
            if ((l_U465) || ((sub_53739()) || (sub_53643( ref l_U657, 0 ))))
            {
                sub_1147( "AT", "Sending in first half reinforcements!", 0 );
                sub_54338();
                l_U464 = 1;
            }
        }
        if (NOT l_U466)
        {
            if (((sub_13175( ref g_U2760 )) < 2) || (l_U657._fU64))
            {
                sub_1147( "AT", "Unlocking enemies from cover.", 0 );
                sub_54707();
                l_U466 = 1;
            }
        }
        if (NOT l_U463)
        {
            if ((l_U465) || ((sub_53739()) || (sub_53643( ref l_U498, 0 ))))
            {
                sub_1147( "AT", "Activiating middle wave upstairs guys.", 0 );
                sub_55010();
                l_U463 = 1;
            }
        }
        if (NOT l_U862)
        {
            if (sub_55389( l_U863 ))
            {
                sub_1147( "GA", "Starting FINALE_SONG_02 music track with FINALE_02_1_2 mood. Fade in 5 sec", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_02", "FINALE_02_1_2", "FINALE_02_1_2", 2.00000000, 5000, 10000, -1082130432, 0 );
                l_U862 = 1;
            }
        }
        if (sub_53643( ref l_U690, 0 ))
        {
            sub_1147( "AT", "Player entered second half.", 0 );
        }
        if (sub_53643( ref l_U948, 0 ))
        {
            sub_1147( "AT", "Player is has triggered the last wave.", 0 );
        }
        if (l_U690._fU64)
        {
            if (NOT l_U1011)
            {
                for ( I = 0; I < g_U2632; I++ )
                {
                    if (NOT (IS_PED_DEAD( g_U2632[I] )))
                    {
                        SET_PED_COMBAT_RANGE_MAX( g_U2632[I], 12.00000000 );
                    }
                }
                for ( I = 0; I < g_U2760; I++ )
                {
                    if (NOT (IS_PED_DEAD( g_U2760[I] )))
                    {
                        SET_PED_COMBAT_RANGE_MAX( g_U2760[I], 12.00000000 );
                    }
                }
                l_U1011 = 1;
            }
            if (sub_55886())
            {
                if (NOT l_U462)
                {
                    sub_1147( "AT", "Activiating cover dudes.", 0 );
                    sub_57011();
                    l_U462 = 1;
                }
                if ((NOT l_U678) AND (sub_55389( l_U711 )))
                {
                    sub_1147( "AT", "Activiating first reinforcement enemies.", 0 );
                    sub_58003();
                    sub_58258();
                    sub_1147( "AT", "Opening Gate!", 0 );
                    l_U134 = 1;
                    l_U678 = 1;
                }
                if ((((((sub_13175( ref g_U2632 )) + (sub_13175( ref g_U2760 ))) + (sub_13175( ref g_U2474 ))) + (sub_13175( ref g_U2588 ))) > 0) AND (l_U678))
                {
                    if ((l_U134 != 3) AND (l_U134 != 4))
                    {
                        if (sub_58784())
                        {
                            sub_1147( "AT", "Closing Gate!", 0 );
                            l_U134 = 3;
                        }
                    }
                    if (l_U134 == 4)
                    {
                        sub_59077();
                    }
                }
            }
        }
        if ((((sub_13175( ref g_U2474 )) <= 4) AND (l_U679 == 4)) || (l_U948._fU64))
        {
            if (sub_59393())
            {
                if (NOT l_U738)
                {
                    sub_1147( "AT", "Activating final enemies.", 0 );
                    sub_60220();
                    l_U738 = 1;
                }
            }
        }
        sub_60717();
        if ((l_U738) AND (l_U678))
        {
            iVar4 = (((sub_13175( ref g_U2632 )) + (sub_13175( ref g_U2760 ))) + (sub_13175( ref g_U2474 ))) + (sub_13175( ref g_U2588 ));
            if (iVar4 == 1)
            {
                sub_61666( ref g_U2632 );
                sub_61666( ref g_U2760 );
                sub_61666( ref g_U2474 );
                sub_61666( ref g_U2588 );
            }
            if (iVar4 == 0)
            {
                if (NOT g_U861[4]._fU36)
                {
                    g_U861[4]._fU36 = 1;
                }
                sub_1147( "AT", "eCheckpointState = CP_WAIT_FOR_BUTTON_PRESS", 0 );
                l_U129 = 10;
                break;
            }
        }
        if (sub_53643( ref l_U884, 0 ))
        {
            if ((l_U134 != 3) AND (l_U134 != 4))
            {
                sub_1147( "AT", "Closing Gate!", 0 );
                l_U134 = 3;
            }
            sub_1147( "AT", "Starting up s_air_TramConcessions ...", 0 );
            g_U861[4]._fU36 = 1;
        }
        break;
        case 10:
        if (l_U130)
        {
            sub_1147( "GA", "Fading out FINALE_SONG_02 FINALE_02_1_2 over 10 seconds.", 0 );
            AUDIO_MUSIC_SUSPEND( 15000 );
            l_U135 = 1;
            sub_5892( ref l_U176, 1 );
            if (DOES_OBJECT_EXIST( l_U143 ))
            {
                SET_OBJECT_VISIBLE( l_U143, 1 );
            }
        }
        if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (NOT (sub_62209( sub_2697() ))))
        {
            sub_62271();
        }
        if (sub_62897( ref l_U176 ))
        {
            sub_1147( "AT", "eCheckpointState = CP_FINISHED", 0 );
            if (DOES_OBJECT_EXIST( g_U2467 ))
            {
                if (l_U926)
                {
                    sub_1147( "AT", "Safety triggered for enabling gate collision.", 0 );
                    SET_OBJECT_COLLISION( g_U2467, 1 );
                    if ((GET_OBJECT_ANIM_CURRENT_TIME( g_U2467, "APD_secGates03", "ap_anim" )) != 0.00000000)
                    {
                        sub_1147( "AT", "Safety triggered for closing gate.", 0 );
                        sub_40320( g_U2467, "APD_secGates03", "ap_anim", -1.00000000, 1.00000000 );
                    }
                }
            }
            sub_1147( "GA", "Starting FINALE_SONG_01 music track with FINALE_01_4 mood. Fade in 1000 sec", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_4", "FINALE_01_4", 0.00000000, 1000, 5000, -1082130432, 0 );
            if (IS_SCRIPT_MOVIE_PLAYING( 0 ))
            {
                STOP_MOVIE( 0 );
            }
            g_U846[4] = 1;
            l_U129 = 11;
        }
        break;
        case 11:
        if (g_U830 == 4)
        {
            sub_65169();
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U129 = 0;
            sub_1147( "AT", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U129 != iVar2)
    {
        l_U130 = 1;
    }
    else
    {
        l_U130 = 0;
    }
    return;
}

void sub_11608()
{
    switch (l_U1028)
    {
        case 0:
        sub_1147( "CCB", "eUngrounded - STATE_CHALLENGE_IDLE", 0 );
        l_U1028 = 1;
        break;
        case 1:
        if (l_U129 >= 9)
        {
            sub_11734( ref g_U2474, ref l_U1159 );
            sub_11734( ref g_U2632, ref l_U1168 );
            sub_11734( ref g_U2760, ref l_U1178 );
            sub_11734( ref g_U2588, ref l_U1182 );
        }
        break;
        case 2: break;
    }
    switch (l_U1029)
    {
        case 0:
        sub_1147( "CCB", "eRailshooter - STATE_CHALLENGE_IDLE", 0 );
        l_U1029 = 1;
        break;
        case 1:
        if (l_U129 >= 9)
        {
            if (NOT l_U1213)
            {
                if ((sub_12277( ref g_U2588, ref l_U1209 )) || ((sub_12277( ref g_U2760, ref l_U1205 )) || ((sub_12277( ref g_U2632, ref l_U1195 )) || (sub_12277( ref g_U2474, ref l_U1186 )))))
                {
                    l_U1213 = 1;
                    if (SCRIPT_VAR_HASH_EXISTS( 131501252 ))
                    {
                        sub_1147( "CCB", "The player killed a ped while NOT in one of the escalator triggers...", 0 );
                        SCRIPT_VAR_HASH_SET_INT( 131501252, 1 );
                    }
                    else
                    {
                        sub_1147( "CCB", "The FinaleRSReset script variable is NOT valid!!!", 0 );
                    }
                    sub_3475( ref l_U1218, 150, 1, 0 );
                    sub_4268( ref l_U1218 );
                }
            }
            else if (sub_3731( ref l_U1218 ))
            {
                l_U1213 = 0;
                if (SCRIPT_VAR_HASH_EXISTS( 131501252 ))
                {
                    sub_1147( "CCB", "Resetting the FinaleRSReset...", 0 );
                    SCRIPT_VAR_HASH_SET_INT( 131501252, 0 );
                }
                else
                {
                    sub_1147( "CCB", "The FinaleRSReset script variable is NOT valid!!!", 0 );
                }
            }
        }
        break;
        case 2: break;
    }
    switch (l_U1030)
    {
        case 0:
        sub_1147( "CCB", "eBootsHunt - STATE_CHALLENGE_IDLE", 0 );
        l_U1030 = 1;
        break;
        case 1:
        if (l_U129 >= 9)
        {
            if (NOT (IS_PED_DEAD( sub_2697() )))
            {
                if (NOT l_U1214)
                {
                    if (IS_PLAYER_SHOOTDODGING())
                    {
                        l_U1214 = 1;
                        sub_1147( "CCB", "The player is shootdodging...", 0 );
                        l_U1217 = (((sub_13175( ref g_U2474 )) + (sub_13175( ref g_U2632 ))) + (sub_13175( ref g_U2760 ))) + (sub_13175( ref g_U2588 ));
                    }
                }
                else if (NOT l_U1215)
                {
                    if (IS_PLAYER_SHOOTDODGING())
                    {
                        if ((sub_11787( sub_2697(), l_U1116[1] )) || (sub_11787( sub_2697(), l_U1116[0] )))
                        {
                            l_U1215 = 1;
                            sub_1147( "CCB", "Starting the ThreadingTheNeedle challenge...", 0 );
                        }
                    }
                }
                else if ((l_U1217 - ((((sub_13175( ref g_U2474 )) + (sub_13175( ref g_U2632 ))) + (sub_13175( ref g_U2760 ))) + (sub_13175( ref g_U2588 )))) >= 3)
                {
                    if (SCRIPT_VAR_HASH_EXISTS( 1101606099 ))
                    {
                        sub_1147( "CCB", "The player killed 3 enemies in a single shoot dodge from the escalators...", 0 );
                        SCRIPT_VAR_HASH_SET_INT( 1101606099, 1 );
                    }
                    else
                    {
                        sub_1147( "CCB", "The BootsHunt script variable is NOT valid!!!", 0 );
                    }
                    sub_1147( "CCB", "eBootsHunt - STATE_CHALLENGE_COMPLETE", 0 );
                    l_U1030 = 2;
                }
                if (NOT IS_PLAYER_SHOOTDODGING())
                {
                    sub_1147( "CCB", "The player is no longer shootdodging", 0 );
                    l_U1215 = 0;
                    l_U1214 = 0;
                }
            }
        }
        break;
        case 2: break;
    }
    return;
}

void sub_11734(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (uParam1^)[I])
        {
            if ((sub_11787( sub_2697(), l_U1031[3] )) || ((sub_11787( sub_2697(), l_U1031[2] )) || ((sub_11787( sub_2697(), l_U1031[1] )) || (sub_11787( sub_2697(), l_U1031[0] )))))
            {
                if (sub_11914( (uParam0^)[I], sub_2697() ))
                {
                    (uParam1^)[I] = 1;
                    l_U1216 = (SCRIPT_VAR_HASH_GET_INT( 647051862 )) + 1;
                    SCRIPT_VAR_HASH_SET_INT( 647051862, l_U1216 );
                }
            }
            else if (sub_11914( (uParam0^)[I], sub_2697() ))
            {
                (uParam1^)[I] = 1;
            }
        }
    }
    return;
}

int sub_11787(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

int sub_11914(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        if (DOES_PED_EXIST( uParam0 ))
        {
            if (IS_PED_DEAD( uParam0 ))
            {
                if (HAS_PED_BEEN_DAMAGED_BY_PED( uParam0, uParam1, 0 ))
                {
                    return 1;
                }
            }
        }
    }
    return 0;
}

int sub_12277(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (uParam1^)[I])
        {
            if ((NOT (sub_11787( sub_2697(), l_U1116[1] ))) AND ((NOT (sub_11787( sub_2697(), l_U1116[0] ))) AND ((NOT (sub_11787( sub_2697(), l_U1031[3] ))) AND ((NOT (sub_11787( sub_2697(), l_U1031[2] ))) AND ((NOT (sub_11787( sub_2697(), l_U1031[1] ))) AND (NOT (sub_11787( sub_2697(), l_U1031[0] ))))))))
            {
                if (sub_11914( (uParam0^)[I], sub_2697() ))
                {
                    (uParam1^)[I] = 1;
                    return 1;
                }
            }
            else if (sub_11914( (uParam0^)[I], sub_2697() ))
            {
                (uParam1^)[I] = 1;
            }
        }
    }
    return 0;
}

void sub_13175(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_13820()
{
    if (sub_13840( ref l_U1307, sub_2697(), 0 ))
    {
        sub_1147( "CO", "P_HANDLE_IMAGEFX_DEPART: tbImageFX_01", 0 );
        PLAY_IMAGEFX( "DOUBLE_WIDE_INTERLACE_FLASH_07", 4, 0 );
    }
    if (l_U176._fU0)
    {
        if (sub_11787( sub_2697(), l_U1328 ))
        {
            if (l_U1352 < 2)
            {
                if (NOT l_U1353)
                {
                    l_U1352++;
                    sub_1147( "CO", "P_HANDLE_IMAGEFX_DEPART: tbImageFX_02", 0 );
                    PLAY_IMAGEFX( "GAMMA_SATURATION_COLOR_ZOOM", 4, 0 );
                    l_U1353 = 1;
                }
            }
        }
        else
        {
            l_U1353 = 0;
        }
    }
    sub_14208();
    return;
}

void sub_13840(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_11787( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_14208()
{
    if (NOT (IS_PED_DEAD( sub_2697() )))
    {
        if (IS_PED_IN_COVER( sub_2697() ))
        {
            if (NOT l_U1351)
            {
                sub_1147( "CO", "P_HANDLE_IMAGEFX_COVER", 0 );
                l_U1350++;
                l_U1351 = 1;
                switch (l_U1349)
                {
                    case 0:
                    if (l_U1350 == 2)
                    {
                        sub_1147( "CO", "P_HANDLE_IMAGEFX_COVER: eIMAGEFX_RUN_01", 0 );
                        PLAY_IMAGEFX( "DOUBLE_WIDE_INTERLACE_FLASH_06", 4, 0 );
                        l_U1349 = 1;
                    }
                    break;
                    case 1:
                    if (l_U1350 == 4)
                    {
                        sub_1147( "CO", "P_HANDLE_IMAGEFX_COVER: eIMAGEFX_RUN_02", 0 );
                        PLAY_IMAGEFX( "FLICKER_VIBRATE_INTERLACE_01_R", 4, 0 );
                        l_U1349 = 2;
                    }
                    break;
                    case 2:
                    if (l_U1350 == 6)
                    {
                        sub_1147( "CO", "P_HANDLE_IMAGEFX_COVER: eIMAGEFX_RUN_03", 0 );
                        PLAY_IMAGEFX( "FLICKER_VIBRATE_ZOOM_05", 3, 0 );
                        l_U1349 = 3;
                    }
                    break;
                    case 3:
                    if (l_U1350 >= 8)
                    {
                        sub_1147( "CO", "P_HANDLE_IMAGEFX_COVER: eIMAGEFX_RUN_04", 0 );
                        PLAY_IMAGEFX( "DISTORT_INTERLACE_MID_INVRT_01", 4, 0 );
                        l_U1350 = 0;
                        l_U1349 = 0;
                    }
                    break;
                }
            }
        }
        else
        {
            l_U1351 = 0;
        }
    }
    return;
}

void sub_15035()
{
    sub_1147( "AT", "P_SET_STATIC_DATA", 0 );
    sub_15115( ref g_U2764[0], -41.31900000, -120.60600000, 4.38400000, 180.00000000, -1481985412, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2764[1], -43.02000000, -120.86600000, 4.38500000, 180.00000000, 2086003218, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2764[2], -41.95900000, -130.06800000, 4.38700000, 180.00000000, -850069950, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2642[0], -57.01000000, -115.95000000, 4.38000000, 180.00000000, -666693278, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2642[1], -61.97000000, -116.20000000, 4.38000000, 180.00000000, 328397087, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2642[2], -66.28000000, -102.76000000, 4.38000000, 270.00000000, -1521155921, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2642[3], -60.68000000, -36.00000000, 8.78000000, 0.00000000, 613532058, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2642[4], -62.39000000, -80.15000000, 4.38000000, 180.00000000, -1374211425, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2642[5], -62.46000000, -80.15000000, 4.38000000, 0.00000000, 964394190, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2642[6], -63.93000000, -31.82000000, 8.78000000, 0.00000000, -1481985412, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2642[7], -27.01000000, -105.68000000, 8.78000000, 0.00000000, -1481985412, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2642[8], -60.62000000, -78.07000000, 8.78000000, 0.00000000, 328397087, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2483[0], -58.48000000, -25.94000000, 4.40000000, 0.00000000, -1895062431, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2483[1], -57.00000000, -80.59000000, 4.38000000, 0.00000000, 1200579297, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2483[2], -56.12000000, -25.89000000, 4.40000000, 0.00000000, 1619601612, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2483[3], -45.06000000, -70.52000000, 4.38000000, 0.00000000, 964394190, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2483[4], -58.95000000, -21.19000000, 4.40000000, 0.00000000, 964394190, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2483[5], -28.64000000, -31.70000000, 8.78000000, 0.00000000, 613532058, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2483[6], -59.48000000, -68.15000000, 8.78000000, 0.00000000, -1521155921, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2483[7], -33.85000000, -75.60000000, 8.79000000, 0.00000000, 2086003218, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2592[0], -28.26000000, -30.47000000, 8.78000000, 0.00000000, -666693278, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2592[1], -64.08000000, -32.86000000, 8.78000000, 0.00000000, 328397087, 7, 3, 2, 0, 0 );
    sub_15115( ref g_U2592[2], -33.88000000, -44.61000000, 4.38000000, 0.00000000, -1521155921, 7, 3, 2, 0, 0 );
    sub_16259( ref l_U776, "TB_DOWNSTAIRS", -53.91000000, -93.07000000, 4.37000000, 136.38000000, 40.29000000, 4.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_16259( ref l_U755, "TB_UPSTAIRS", -40.88000000, -93.07000000, 8.80000000, 136.38000000, 87.43000000, 4.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_16259( ref l_U657, "TRIGGER_FIRST_HALF_REINFORCE", -53.46000000, -129.00000000, 4.38000000, 40.78000000, 6.21000000, 9.38000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U498, "TB_SEND_MIDDLE_WAVE", -53.51000000, -132.06000000, 4.15000000, 41.05000000, 5.01000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U884, "TB_START_PRELOAD", -51.87000000, -38.63000000, 4.38000000, 39.41000000, 5.32000000, 8.95000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U690, "TRIGGER_SECOND_HALF", -41.01000000, -95.67000000, 4.38000000, 89.48000000, 6.21000000, 9.38000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U711, "TRIGGER_OPEN_THE_GATE", -41.01000000, -77.31000000, 4.38000000, 89.48000000, 6.21000000, 9.38000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U948, "TRIGGER_LAST_ENEMIES", -36.66000000, -60.42000000, 4.28000000, 91.74000000, 8.03000000, 9.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U990, "TRIGGER_GATE_CAN_CLOSE", -67.91000000, -4.11000000, 4.29000000, 44.80000000, 53.91000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U927, "TRIGGER_TEMP_OPEN_GATE", -55.96000000, -32.31000000, 4.38000000, 17.34000000, 3.03000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U969, "IN_CONCESSIONS", -67.91000000, -3.40000000, 4.29000000, 44.80000000, 53.91000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U905, "TB_END_DEPARTURES", -59.33000000, -22.68000000, 4.38000000, 25.14000000, 5.27000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U262, "POI_INNER", -49.08000000, -31.56000000, 4.40000000, 1.40000000, 1.84000000, 3.50000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_16259( ref l_U283, "POI_OUTER", -49.05000000, -32.35000000, 4.40000000, 2.94000000, 3.03000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U477, "GRENADE_GUY_SWITCH_WEAPON", -47.56000000, -42.09000000, 8.76000000, 30.36000000, 3.39000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U863, "tb_CP_M_3_1_CueStart", -53.46000000, -112.85000000, 4.38000000, 40.78000000, 6.21000000, 9.38000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17593( ref l_U749, "TETH_AVOID_PEOPLEMOVER1", -61.87000000, -96.05000000, 4.44000000, 126.15000000, 18.82000000, 3.50000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_17593( ref l_U750, "TETH_AVOID_PEOPLEMOVER2", -49.15000000, -153.00000000, 4.60000000, 14.87000000, 10.50000000, 3.50000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_17593( ref l_U751, "TETH_AVOID_PEOPLEMOVER3", -22.92000000, -93.28000000, 4.44000000, 135.38000000, 44.95000000, 3.50000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_17593( ref l_U752, "TETH_AVOID_PEOPLEMOVER4", -49.15000000, -46.42000000, 4.44000000, 25.87000000, 10.82000000, 3.80000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_17593( ref l_U753, "TETH_AVOID_PEOPLEMOVER5", -49.15000000, -102.84000000, 4.60000000, 31.95000000, 10.73000000, 3.50000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_17593( ref l_U754, "TETH_UPSTAIRS", -38.69000000, -93.38000000, 7.77000000, 135.43000000, 77.22000000, 3.90000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_16259( ref l_U1307, "tbImageFX_01", -51.29000000, -92.33000000, 0.00000000, 50.00000000, 5.00000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U1328, "tbImageFX_02", -49.31770000, -33.27930000, 2.70691000, 5.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_18242( ref l_U434, 160797987, -22.79239000, -150.99070000, 5.50000000, 0.00000000, 0.00000000, 0.00000000 );
    l_U565[0] = -1013714740;
    l_U565[1] = -1013714740;
    l_U565[2] = 57534114;
    l_U565[3] = 724901397;
    l_U565[4] = -1464892298;
    l_U565[5] = -612753081;
    l_U565[6] = -1464892298;
    l_U565[7] = 57534114;
    l_U565[8] = -612753081;
    l_U521[0] = 57534114;
    l_U521[1] = 57534114;
    l_U521[2] = 57534114;
    l_U681[0] = 57534114;
    l_U681[1] = 57534114;
    l_U681[2] = -1013714740;
    l_U681[3] = -612753081;
    l_U681[4] = 57534114;
    l_U681[5] = -1464892298;
    l_U681[6] = 57534114;
    l_U681[7] = -1464892298;
    l_U734[0] = -1464892298;
    l_U734[1] = -1013714740;
    l_U734[2] = 57534114;
    l_U1258[0] = "SAIR_MSHFTRD";
    l_U1258[1] = "SAIR_MSHFTRA";
    l_U1258[2] = "SAIR_MSHFTRB";
    l_U1258[3] = "SAIR_MSHFTRC";
    sub_3475( ref l_U739, 18000, 1, 0 );
    sub_3475( ref l_U1274, l_U1283, 1, 0 );
    sub_3475( ref l_U575[0], 1500, 1, 0 );
    sub_3475( ref l_U575[1], 1000, 1, 0 );
    sub_3475( ref l_U575[2], 1250, 1, 0 );
    sub_3475( ref l_U575[3], 2000, 1, 0 );
    sub_3475( ref l_U575[4], 1000, 1, 0 );
    sub_3475( ref l_U575[5], 500, 1, 0 );
    sub_3475( ref l_U525[0], 550, 1, 0 );
    sub_3475( ref l_U525[1], 400, 1, 0 );
    sub_3475( ref l_U525[2], 100, 1, 0 );
    return;
}

void sub_15115(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_16259(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_17593(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_18242(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_18867()
{
    sub_1147( "AT", "P_INITIALIZE_SCRIPT_DATA", 0 );
    l_U130 = 1;
    l_U858 = 0;
    l_U859 = 0;
    l_U563 = 0;
    l_U564 = 0;
    l_U519 = 0;
    l_U520 = 0;
    l_U679 = 0;
    l_U680 = 0;
    l_U732 = 0;
    l_U733 = 0;
    l_U135 = 0;
    l_U748 = 0;
    l_U926 = 0;
    l_U678 = 0;
    l_U738 = 0;
    l_U462 = 0;
    l_U1011 = 0;
    l_U464 = 0;
    l_U463 = 0;
    l_U466 = 0;
    l_U465 = 0;
    sub_3475( ref l_U468, l_U467, 1, 0 );
    sub_6813( ref l_U1227 );
    sub_19076( ref l_U1237 );
    sub_19076( ref l_U1264 );
    sub_19076( ref l_U1247 );
    l_U1246 = 0;
    l_U1263 = 0;
    l_U1273 = 0;
    l_U1350 = 0;
    l_U1351 = 0;
    l_U1352 = 0;
    l_U1353 = 0;
    l_U1295 = 0;
    l_U1306 = 0;
    l_U132 = 0;
    sub_19209( ref l_U176, 1, l_U144, l_U262, l_U283, 0, 0 );
    sub_19884( ref l_U176, 30, "POI_OPENGATE" );
    return;
}

void sub_19076(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_19209(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48)
{
    sub_19226( iParam0, uParam47 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU80 = 1;
    iParam0->_fU116 = {uParam5};
    iParam0->_fU88 = 1;
    iParam0->_fU216 = {uParam26};
    iParam0->_fU320 = uParam48;
    iParam0->_fU20 = {uParam2};
    sub_19592( iParam0 );
    return;
}

void sub_19226(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_19592(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_19671( iParam0 );
    return;
}

void sub_19671(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_5936( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_5936( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_5936( iParam0, 1 );
            }
            else
            {
                sub_5936( iParam0, 0 );
            };;;
        }
        else
        {
            sub_5936( iParam0, 0 );
        }
    }
    else
    {
        sub_5936( iParam0, 0 );
    }
    return;
}

void sub_19884(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_19915( iParam0 );
    return;
}

void sub_19915(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_20048()
{
    sub_1147( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1028 = 0;
    l_U1029 = 0;
    l_U1030 = 0;
    sub_20121( ref l_U1159 );
    sub_20121( ref l_U1168 );
    sub_20121( ref l_U1178 );
    sub_20121( ref l_U1182 );
    sub_20121( ref l_U1186 );
    sub_20121( ref l_U1195 );
    sub_20121( ref l_U1205 );
    sub_20121( ref l_U1209 );
    l_U1214 = 0;
    l_U1215 = 0;
    l_U1216 = 0;
    l_U1217 = 0;
    sub_16259( ref l_U1031[0], "TRIGGER_CONVEYOR_01", -47.10000000, -73.65000000, 4.28000000, 2.50000000, 27.00000000, 9.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U1031[1], "TRIGGER_CONVEYOR_02", -50.80000000, -73.65000000, 4.28000000, 2.50000000, 27.00000000, 9.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U1031[2], "TRIGGER_CONVEYOR_03", -47.10000000, -132.33000000, 4.28000000, 2.50000000, 27.00000000, 9.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U1031[3], "TRIGGER_CONVEYOR_04", -50.80000000, -132.33000000, 4.28000000, 2.50000000, 27.00000000, 9.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16259( ref l_U1116[0], "TRIGGER_ESCALATOR_01", -35.03000000, -103.88000000, 4.28000000, 2.50000000, 13.00000000, 9.00000000, 0.00000000, 0.00000000, 135.00000000, 1 );
    sub_16259( ref l_U1116[1], "TRIGGER_ESCALATOR_02", -35.17000000, -89.42000000, 4.28000000, 2.50000000, 13.00000000, 9.00000000, 0.00000000, 0.00000000, 45.00000000, 1 );
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 647051862 )))
    {
        sub_1147( "CCB", "Creating the UngroundedKills script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 647051862 );
        if (SCRIPT_VAR_HASH_EXISTS( 647051862 ))
        {
            sub_1147( "CCB", "The UngroundedKills script variable was successfully created...", 0 );
        }
        else
        {
            sub_1147( "CCB", "The UngroundedKills script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_1147( "CCB", "The UngroundedKills script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 647051862, 0 );
    }
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 131501252 )))
    {
        sub_1147( "CCB", "Creating the FinaleRSReset script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 131501252 );
        if (SCRIPT_VAR_HASH_EXISTS( 131501252 ))
        {
            sub_1147( "CCB", "The FinaleRSReset script variable was successfully created...", 0 );
        }
        else
        {
            sub_1147( "CCB", "The FinaleRSReset script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_1147( "CCB", "The FinaleRSReset script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 131501252, 0 );
    }
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1101606099 )))
    {
        sub_1147( "CCB", "Creating the BootsHunt script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1101606099 );
        if (SCRIPT_VAR_HASH_EXISTS( 1101606099 ))
        {
            sub_1147( "CCB", "The BootsHunt script variable was successfully created...", 0 );
        }
        else
        {
            sub_1147( "CCB", "The BootsHunt script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_1147( "CCB", "The BootsHunt script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1101606099, 0 );
    }
    return;
}

void sub_20121(unknown uParam0)
{
    int I;

    sub_1147( "CCB", "P_RESET_BOOL_ARRAY", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = 0;
    }
    return;
}

void sub_21947()
{
    sub_1147( "AT", "P_REQUEST_DEPARTURES_PERSISTENT_ASSETS start", 0 );
    sub_22023( ref l_U1012, ref g_U1030 );
    sub_23432( 57534114, ref g_U1247 );
    sub_23432( -1013714740, ref g_U1247 );
    sub_23432( -1464892298, ref g_U1247 );
    sub_23432( -612753081, ref g_U1247 );
    sub_23432( 724901397, ref g_U1247 );
    sub_23432( -378310276, ref g_U1247 );
    sub_24458( "PROP_BUTTON", ref g_U1429 );
    sub_24458( "npc_pstl_cover_grenade", ref g_U1429 );
    sub_24458( "npc_rifle_cover_grenade", ref g_U1429 );
    sub_25542( "SCRIPT_MISSION\S_AIR_DEPARTURE_01", ref g_U1950 );
    return;
}

void sub_22023(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_22058( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_22058(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_22093( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_22224( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_22093(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_22224( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_22224( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_22224( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_22872( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_22224( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_22224( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22224(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22244( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_22244(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_22872(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_23432(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_23453( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_23585( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_23453(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_23585( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_23585( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_23585( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_22872( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_23585( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_23585( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_23585(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22244( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_24458(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_24479( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_24616( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_24479(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_24616( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_24616( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_24616( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_22872( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_24616( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_24616( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_24616(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22244( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_25542(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_25563( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_25701( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_25563(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_25701( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_25701( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_25701( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_22872( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_25701( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_25701( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_25701(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22244( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_26537()
{
    sub_1147( "GA", "P_REQUEST_DEPARTURES_NONPERSISTENT_ASSETS start", 0 );
    sub_26617( 783941433, ref g_U1368 );
    sub_26617( -192153712, ref g_U1368 );
    sub_26617( 224058020, ref g_U1368 );
    sub_26617( -1956283442, ref g_U1368 );
    sub_26617( 789239515, ref g_U1368 );
    if ((l_U131) AND (g_U829 != 3))
    {
        sub_1147( "AT", "Requesting cutscene assets ...", 0 );
        sub_22058( 640993624, ref g_U1030 );
        sub_22058( 920743876, ref g_U1030 );
        sub_22058( -1022450266, ref g_U1030 );
    }
    sub_1147( "GA", "P_REQUEST_DEPARTURES_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_26617(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_26652( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_26804( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_26652(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_26804( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_26804( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_26804( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_26804( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_22872( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_22872( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_26804( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_26804( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_26804(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22244( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_28839(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_28959(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_29080(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_29207(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_29398(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_29767(unknown uParam0)
{
    sub_1147( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_7133( uParam0, sub_2697() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_30296(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1147( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1147( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_9985( iParam1 );
        sub_30555( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_31006( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_31006( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_31238( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_31006( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_31238( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_31238( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_31006( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_31238( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_31238( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_31238( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_31006( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_31238( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_31238( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_31238( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_31238( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_32796( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1147( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_30555(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_7349( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1147( "TEH", "Ending context", 0 );
        sub_1147( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_31006(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_31238(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_32796(int iParam0)
{
    sub_9002( "CHECKPOINT DATA" );
    sub_32835( iParam0->_fU4 );
    sub_32858( iParam0->_fU16 );
    sub_32858( iParam0->_fU20 );
    sub_32858( iParam0->_fU24 );
    sub_32901( iParam0->_fU28 );
    sub_32901( iParam0->_fU56 );
    sub_32901( iParam0->_fU60 );
    sub_32901( iParam0->_fU64 );
    sub_32901( iParam0->_fU68 );
    sub_32901( iParam0->_fU72 );
    sub_32901( iParam0->_fU76 );
    sub_32901( iParam0->_fU80 );
    sub_32901( iParam0->_fU84 );
    sub_32901( iParam0->_fU88 );
    sub_32901( iParam0->_fU92 );
    sub_32858( iParam0->_fU32 );
    sub_32901( iParam0->_fU36 );
    sub_32901( iParam0->_fU40 );
    sub_32901( iParam0->_fU44 );
    sub_32858( iParam0->_fU136 );
    sub_33106( iParam0->_fU140 );
    sub_32901( iParam0->_fU52 );
    sub_9002( "---nRightHolsterAttachmentEnabled: " );
    sub_32901( iParam0->_fU96 );
    sub_9002( "---nRightHolsterAttachmentToggled: " );
    sub_32901( iParam0->_fU100 );
    sub_9002( "---nLeftHolsterAttachmentEnabled: " );
    sub_32901( iParam0->_fU104 );
    sub_9002( "---nLeftHolsterAttachmentToggled: " );
    sub_32901( iParam0->_fU108 );
    sub_9002( "---nRifleHolsterAttachmentEnabled: " );
    sub_32901( iParam0->_fU112 );
    sub_9002( "---nRifleHolsterAttachmentToggled: " );
    sub_32901( iParam0->_fU116 );
    sub_9002( "---nRightHandAttachmentEnabled: " );
    sub_32901( iParam0->_fU120 );
    sub_9002( "---nRightHandAttachmentToggled: " );
    sub_32901( iParam0->_fU124 );
    sub_9002( "---nLeftHandAttachmentEnabled: " );
    sub_32901( iParam0->_fU128 );
    sub_9002( "---nLeftHandAttachmentToggled: " );
    sub_32901( iParam0->_fU132 );
    sub_32901( l_U1 );
    sub_32901( 144 );
    return;
}

void sub_32835(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_32858(unknown uParam0)
{
    return;
}

void sub_32901(unknown uParam0)
{
    return;
}

void sub_33106(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

int sub_34007()
{
    char[64] cVar2;
    unknown uVar18;

    switch (l_U563)
    {
        case 1:
        sub_1147( "AT", "e_DP_SpawnVIG04 = ENTITY_STATE_INIT", 0 );
        sub_34120( ref l_U441, 1056964608, 0 );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U441._fU0, 1 );
        l_U564 = 0;
        l_U563 = 2;
        sub_1147( "AT", "e_DP_SpawnVIG04 = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        StrCopy( ref cVar2, "Creating pi_DP_VIG04[", 64 );
        ConcatString(ref cVar2, l_U564, 64);
        ConcatString(ref cVar2, "]", 64);
        g_U2632[l_U564] = sub_34430( ref g_U2642[l_U564] );
        if (l_U564 < 6)
        {
            sub_35281( g_U2632[l_U564], ref l_U441 );
        }
        else
        {
            sub_35281( g_U2632[l_U564], ref l_U453 );
        }
        uVar18 = sub_9331( g_U2632[l_U564], l_U565[l_U564], 25000, 0, 0 );
        if (l_U564 == 6)
        {
            sub_8686( g_U2632[l_U564], -378310276, 5, 25000, 0 );
            SET_PED_PROJECTILE_OVERRIDE_PARAMETERS( g_U2632[l_U564], 0, -1, -1, 1, 0 );
        }
        if (NOT (IS_PED_DEAD( g_U2632[l_U564] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2632[l_U564], 1 );
            SET_PED_AI_TEMPLATE( g_U2632[l_U564], "AIT_NORMAL" );
            SET_ROOM_FOR_PED_BY_NAME( g_U2632[l_U564], ref g_U2278 );
            if ((l_U564 == 6) || (l_U564 == 3))
            {
                sub_35808( ref l_U754, g_U2632[l_U564], 3 );
            }
            else
            {
                sub_35808( ref l_U749, g_U2632[l_U564], 3 );
                sub_35808( ref l_U750, g_U2632[l_U564], 3 );
                sub_35808( ref l_U751, g_U2632[l_U564], 3 );
                sub_35808( ref l_U752, g_U2632[l_U564], 3 );
                sub_35808( ref l_U753, g_U2632[l_U564], 3 );
            }
        }
        l_U564++;
        if (l_U564 >= g_U2632)
        {
            l_U563 = 3;
            sub_1147( "AT", "e_DP_SpawnVIG04 = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_36107( ref g_U2632, "VIG04" );
        SET_GROUP_GRENADE_PARAMS( l_U441._fU0, 500 );
        sub_36222( ref g_U2632 );
        l_U563 = 4;
        sub_1147( "AT", "e_DP_SpawnVIG04 = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_34120(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_34430(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_34600( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_35069( iParam0->_fU40 );
    sub_35149( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_34600(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_9002( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_35069(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_35149(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_35281(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_9002( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_34120( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_34120( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_35808(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_36107(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_36222(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_36253( (uParam0^)[I] );
    }
    return;
}

void sub_36253(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

int sub_36456()
{
    char[64] cVar2;

    switch (l_U519)
    {
        case 1:
        sub_1147( "AT", "e_DP_SpawnVIG05 = ENTITY_STATE_INIT", 0 );
        l_U520 = 0;
        l_U519 = 2;
        sub_1147( "AT", "e_DP_SpawnVIG05 = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        StrCopy( ref cVar2, "Creating pi_DP_VIG05[", 64 );
        ConcatString(ref cVar2, l_U520, 64);
        ConcatString(ref cVar2, "]", 64);
        g_U2760[l_U520] = sub_34430( ref g_U2764[l_U520] );
        sub_35281( g_U2760[l_U520], ref l_U441 );
        sub_9331( g_U2760[l_U520], l_U521[l_U520], 25000, 0, 0 );
        if (NOT (IS_PED_DEAD( g_U2760[l_U520] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2760[l_U520], 1 );
            SET_PED_AI_TEMPLATE( g_U2760[l_U520], "AIT_NORMAL" );
            SET_ROOM_FOR_PED_BY_NAME( g_U2760[l_U520], ref g_U2278 );
        }
        sub_35808( ref l_U749, g_U2760[l_U520], 3 );
        sub_35808( ref l_U750, g_U2760[l_U520], 3 );
        sub_35808( ref l_U751, g_U2760[l_U520], 3 );
        sub_35808( ref l_U752, g_U2760[l_U520], 3 );
        sub_35808( ref l_U753, g_U2760[l_U520], 3 );
        l_U520++;
        if (l_U520 >= g_U2760)
        {
            l_U519 = 3;
            sub_1147( "AT", "e_DP_SpawnVIG05 = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_36107( ref g_U2760, "VIG05" );
        sub_36222( ref g_U2760 );
        l_U519 = 4;
        sub_1147( "AT", "e_DP_SpawnVIG05 = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_37266(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    sub_1147( "AT", "P_CREATE_PEOPLEMOVER", 0 );
    (uParam0^) = sub_37337( g_U2393, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
        if (bParam4)
        {
            SET_MOVER_SPEED( (uParam0^), 1.00000000, 0.00000000 );
        }
        else
        {
            SET_MOVER_SPEED( (uParam0^), -1.00000000, 0.00000000 );
        }
        FREEZE_OBJECT_POSITION( (uParam0^), 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), ref g_U2278 );
    }
    return;
}

void sub_37337(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object mover with MUST BE PRELOADED!!!!", 0 );
        sub_34600( uParam0, 1 );
    }
    Result = CREATE_OBJECT_MOVER( uParam0, uParam1, NOT bParam7, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_37761(unknown uParam0, unknown uParam1, vector vParam2, unknown uParam5, unknown uParam6, unknown uParam7, boolean bParam8, unknown uParam9)
{
    sub_1147( "AT", "P_CREATE_ESCALATOR", 0 );
    (uParam0^) = sub_37817( g_U2394, vParam2, uParam5, 0, 0, 0 );
    (uParam1^) = sub_37337( g_U2395, vParam2 - (vector( 0.00000000, 0.00000000, 2.38000000)), uParam5, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
        PLAY_OBJECT_ANIM( (uParam0^), "AP_EscSil_N1_Ad_H", "ap_anim", 0.00000000, 1, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), uParam9 );
        FREEZE_OBJECT_POSITION( (uParam0^), 1 );
        if (bParam8)
        {
            SET_OBJECT_ANIM_SPEED( (uParam0^), "AP_EscSil_N1_Ad_H", "ap_anim", 1.00000000 );
        }
        else
        {
            SET_OBJECT_ANIM_SPEED( (uParam0^), "AP_EscSil_N1_Ad_H", "ap_anim", -1.00000000 );
        }
    }
    if (DOES_OBJECT_EXIST( (uParam1^) ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam1^), uParam9 );
        FREEZE_OBJECT_POSITION( (uParam1^), 1 );
        if (bParam8)
        {
            SET_MOVER_SPEED( (uParam1^), 1.00000000, 1.00000000 );
        }
        else
        {
            SET_MOVER_SPEED( (uParam1^), -1.00000000, -1.00000000 );
        }
    }
    return;
}

void sub_37817(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_34600( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_38420()
{
    sub_1147( "AT", "P_CREATE_PLACEMENTS", 0 );
    l_U420 = sub_37817( -2043642572, l_U422, l_U425, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U420 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U420, ref g_U2270 );
        FREEZE_OBJECT_POSITION( l_U420, 1 );
    }
    l_U421 = sub_37817( -2043642572, l_U428, l_U431, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U421 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U421, ref g_U2278 );
        FREEZE_OBJECT_POSITION( l_U421, 1 );
    }
    l_U824[0] = sub_38660( -4072149, -68.98000000, -61.05000000, 5.39000000, 0.00000000, 0.00000000, 30.00000000, 1, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U824[0] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U824[0], ref g_U2278 );
    }
    l_U824[1] = sub_38660( -4072149, -68.82000000, -61.30000000, 5.39000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U824[1] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U824[1], ref g_U2278 );
    }
    l_U824[2] = sub_38660( -4072149, -68.85000000, -103.70000000, 5.39000000, 0.00000000, 0.00000000, 1.57070000, 1, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U824[2] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U824[2], ref g_U2278 );
    }
    l_U824[3] = sub_38660( -4072149, -34.76000000, -151.72000000, 5.60000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U824[3] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U824[3], ref g_U2270 );
    }
    l_U824[4] = sub_38660( -4072149, -34.75000000, -151.54000000, 5.60000000, 0.00000000, 0.00000000, 1.57000000, 1, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U824[4] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U824[4], ref g_U2270 );
    }
    l_U824[5] = sub_38660( -4072149, -26.68000000, -86.39000000, 9.82000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U824[5] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U824[5], ref g_U2278 );
    }
    sub_39280();
    sub_39992();
    return;
}

void sub_38660(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_39280()
{
    sub_1147( "CO", "P_CREATE_S_AIR_GG_PD_01", 0 );
    sub_39398( ref g_U769, g_U826, 1723974869, 1365850362, -60.25000000, -144.13000000, 8.80000000, 1.50000000, 0.00000000, 1.00000000, "GtaMloRoom_depart" );
    sub_39527( ref g_U769 );
    return;
}

void sub_39398(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_1147( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_39527(int iParam0)
{
    sub_1147( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_39588( iParam0->_fU12 )) == 1)
        {
            sub_1147( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_1147( "CO", "has never been collected.", 0 );
        }
        if ((sub_39588( iParam0->_fU12 )) == 0)
        {
            sub_5801( iParam0->_fU0 );
            iParam0->_fU0 = sub_38660( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_1147( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_1147( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_39588(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_39992()
{
    sub_1147( "CO", "P_CREATE_S_AIR_GG_PD_02", 0 );
    sub_39398( ref g_U787, g_U827, 1416568880, 1649728209, -67.55000000, -61.54000000, 4.40000000, 0.00000000, 1.50000000, 0.50000000, "GtaMloRoom_depart" );
    sub_39527( ref g_U787 );
    return;
}

void sub_40144(unknown uParam0)
{
    sub_1147( "AT", "P_CREATE_DEPARTURES_GATE", 0 );
    g_U2467 = sub_37817( 1640831600, g_U2468, g_U2471, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U2467 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2467, uParam0 );
        FREEZE_OBJECT_POSITION( g_U2467, 1 );
        SET_OBJECT_AS_PATH_OBSTACLE( g_U2467 );
    }
    sub_40320( g_U2467, "APD_secGates03", "ap_anim", 0.00000000, 0.00000000 );
    return;
}

void sub_40320(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        PLAY_OBJECT_ANIM( uParam0, uParam1, uParam2, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uParam0, uParam1, uParam2, uParam4 );
        SET_OBJECT_ANIM_SPEED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_40411()
{
    sub_1147( "AT", "P_CREATE_GATE_OBJECTS", 0 );
    l_U136 = sub_37817( -576031449, l_U137, l_U140, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U136 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U136, ref g_U2278 );
        FREEZE_OBJECT_POSITION( l_U136, 1 );
    }
    l_U143 = sub_37817( -338998251, l_U144, l_U147, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U143 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U143, ref g_U2278 );
        FREEZE_OBJECT_POSITION( l_U143, 1 );
        SET_OBJECT_VISIBLE( l_U143, 0 );
    }
    l_U150 = sub_37817( 1586610117, l_U152, l_U155, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U150 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U150, ref g_U2278 );
        FREEZE_OBJECT_POSITION( l_U150, 1 );
        SET_OBJECT_VISIBLE( l_U150, 0 );
    }
    l_U151 = sub_37817( -1913048611, l_U152, l_U155, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U151 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U151, ref g_U2278 );
        FREEZE_OBJECT_POSITION( l_U151, 1 );
    }
    return;
}

void sub_40817(unknown uParam0, int iParam1, unknown uParam2, int iParam3, int iParam4)
{
    int I;

    sub_1147( "AT", "P_SETUP_AGA", 0 );
    if (iParam3 == -1)
    {
        iParam3 = 0;
    }
    if (iParam4 == -1)
    {
        iParam4 = (uParam0^);
    }
    (uParam2^) = PEDGROUPTASK_ADVANCE_CREATE( iParam1->_fU0 );
    for ( I = iParam3; I <= (iParam4 - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            sub_1147( "AT", "Assigning ped to aggressive group advance task.", 0 );
            PEDGROUPTASK_ADVANCE_ASSIGNPED( iParam1->_fU0, (uParam2^), (uParam0^)[I] );
        }
    }
    if (NOT (IS_PED_DEAD( sub_2697() )))
    {
        PEDGROUPTASK_ADVANCE_SETTARGET_PED( iParam1->_fU0, (uParam2^), sub_2697() );
    }
    PEDGROUPTASK_ADVANCE_SETTIMETOHIDE( iParam1->_fU0, (uParam2^), 2.00000000 );
    PEDGROUPTASK_ADVANCE_SETTIMETOIDLE( iParam1->_fU0, (uParam2^), 5.00000000 );
    PEDGROUPTASK_ADVANCE_SETNUMPEDSTOADVANCE( iParam1->_fU0, (uParam2^), 3 );
    return;
}

int sub_41420()
{
    return 1;
}

void sub_41439()
{
    sub_40320( g_U2467, "APD_secGates03", "ap_anim", 0.00000000, 0.25000000 );
    sub_41497( 0 );
    sub_41739( ref g_U2760 );
    sub_41739( ref g_U2632 );
    CUTSCENE_REGISTER_ISEQ( 783941433 );
    if (NOT (IS_PED_DEAD( sub_2697() )))
    {
        ISEQ_REGISTER_ENTITY( 783941433, "Max", sub_2697(), 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_2697(), g_U2014[3], g_U2129[3] );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "ap_sec3", "Grabspline30-3", 0, 0 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U2168[3], g_U2207[3] );
    }
    if (NOT (IS_PED_DEAD( g_U2760[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2760[0], "A_UFE_Sold_B", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U2760[0], 0, 0 ), "W_AR_G36K_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U2760[0], g_U2764[0]._fU0, g_U2764[0]._fU12 );
    }
    if (NOT (IS_PED_DEAD( g_U2760[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2760[1], "A_UFE_Sold_B^1", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U2760[1], 0, 0 ), "W_AR_G36K_Aa_H^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U2760[1], g_U2764[1]._fU0, g_U2764[1]._fU12 );
    }
    if (NOT (IS_PED_DEAD( g_U2760[2] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2760[2], "A_UFE_Sold_B^2 ", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U2760[2], 0, 0 ), "W_AR_G36K_Aa_H^2", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U2760[2], g_U2764[2]._fU0, g_U2764[2]._fU12 );
    }
    if (NOT (IS_PED_DEAD( g_U2632[3] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2632[3], "A_UFE_Sold_B^6 ", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U2632[3], 0, 0 ), "W_sb_mt4_Aa_H^5", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U2632[3], g_U2642[3]._fU0, g_U2642[3]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2632[3], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
    }
    if (NOT (IS_PED_DEAD( g_U2632[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2632[0], "A_UFE_Sold_B^8", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U2632[0], 0, 0 ), "W_sb_mt4_Aa_H^3", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U2632[0], g_U2642[0]._fU0, g_U2642[0]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2632[0], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
    }
    if (NOT (IS_PED_DEAD( g_U2632[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2632[1], "A_UFE_Sold_B^10", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U2632[1], 0, 0 ), "W_sb_mt4_Aa_H^2", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U2632[1], g_U2642[1]._fU0, g_U2642[1]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2632[1], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
    }
    if (NOT (IS_PED_DEAD( g_U2632[2] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2632[2], "A_UFE_Sold_B^11", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U2632[2], 0, 0 ), "W_sb_mt4_Aa_H^4", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U2632[2], g_U2642[2]._fU0, g_U2642[2]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2632[2], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
    }
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_AP_Civ_Z", 1165314417 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_AP_Civ_Z^1", -818120854 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_AP_Civ_Z^2", -1369936065 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_AP_Civ_Z^3", -2061537378 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_AP_Civ_Z^4", 383606811 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_AP_Civ_Z^5", -1222687741 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_AP_Civ_B", 723153096 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_AP_Civ_B^1", 908013395 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_AP_Civ_B^2", -1164577665 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_AP_Civ_B^3", -1595077162 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_AP_Civ_B^4", -815131295 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_AP_Civ_B^5", 1738286717 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_AP_Sec_A", 888063291 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_AP_Sec_A^1", -2008726130 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_AP_Sec_A^2", 1727425139 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_AP_Sec_A^4", -458235918 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_AP_Sec_A^5", 888063291 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_AP_Sec_A^6", -2008726130 );
    CUTSCENE_ENABLE_SKIP( 0 );
    return;
}

void sub_41497(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_2697() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_2697(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_2697(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2697(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2697(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2697(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_41739(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_41770( (uParam0^)[I] );
    }
    return;
}

void sub_41770(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_43712()
{
    if (NOT l_U858)
    {
        if (GET_CUTSCENE_TIME_MS() >= 11620)
        {
            sub_1147( "GA", "Fading out FINALE_SONG_01 FINALE_01_2 over 3 seconds.", 0 );
            AUDIO_MUSIC_SUSPEND( 3000 );
            l_U858 = 1;
        }
    }
    if (l_U132 == 0)
    {
        if (GET_CUTSCENE_TIME_MS() >= 8000)
        {
            CUTSCENE_ENABLE_SKIP( 1 );
            l_U132 = 1;
        }
    }
    return;
}

int sub_43882()
{
    sub_1147( "AT", "Removing cutscene assets ...", 0 );
    return 1;
}

void sub_43943()
{
    sub_1147( "AT", "P_PREPARE_MID_03_FIN_BLENDOUT", 0 );
    SET_MOVIE_LOOP( 0, 1 );
    PLAY_MOVIE( 0, 0 );
    sub_44015( 1 );
    sub_44550( ref l_U434, 1 );
    sub_40320( g_U2467, "APD_secGates03", "ap_anim", -1.00000000, 1.00000000 );
    SET_PED_MODEL_LOD_DISTANCES( 2004595611, 10.00000000, 120.00000000 );
    sub_44821();
    sub_45197();
    sub_45468();
    l_U748 = 1;
    PEDGROUPTASK_ADVANCE_TRIGGER_MOVE( l_U441._fU0, l_U459 );
    sub_45685( 1, 0, 0, 0 );
    if ((NOT (ISEQ_QUERY_ENTITY_STATE( 783941433, "Max", 2 ))) AND (NOT (ISEQ_QUERY_ENTITY_STATE( 783941433, "Max", 3 ))))
    {
        sub_45890();
        sub_46260( "BOUT_MID03_FIN NOT STARTED BY CUTSCENE STARTING MANUALLY" );
        ISEQ_REGISTER_ENTITY( 783941433, "Max", sub_2697(), 0 );
        sub_45380( sub_2697(), g_U2014[3], g_U2129[3] );
        SNAP_PLAYER_TO_COVERLINE( sub_2719(), "ap_sec3", "Grabspline30-3", 0, -49.37967000, -153.79600000, 4.38443000 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[3], 0, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[3], 0, 0 );
        ISEQ_START( 783941433 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_FIN_CP_03", "B_OUT_MID_03_FIN_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
    sub_1147( "GA", "Starting FINALE_SONG_02 music track with FINALE_02_1 mood. Fade in 0 sec, fStartOfsetScalar of 0.000001", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_02", "FINALE_02_1", "FINALE_02_1", 2.00000000, 0, 10000, 0.00000100, 0 );
    return;
}

void sub_44015(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_2697() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_2697(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_44095( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_44304();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_2697(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_44095(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_44304()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_2697() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_2697(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_44095( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_2697(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_2697(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_2697(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_44550(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_44562( iParam0 )) == 0)
    {
        sub_44628( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_44562(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_44628(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_44821()
{
    sub_1147( "AT", "P_ACTIVATE_VIG04", 0 );
    sub_41770( g_U2632[0] );
    sub_41770( g_U2632[1] );
    sub_41770( g_U2632[2] );
    sub_41770( g_U2632[3] );
    if (NOT (IS_PED_DEAD( g_U2632[0] )))
    {
        TASK_COMBAT_SNAP_TO_COVER( g_U2632[0], "GenCover", "A2FE8EDB_3E1DDC86_Corner1", 0 );
        SET_PED_FLAG_LOCK_TO_COVER( g_U2632[0], 1 );
    }
    if (NOT (IS_PED_DEAD( g_U2632[1] )))
    {
        TASK_COMBAT_SNAP_TO_COVER( g_U2632[1], "GenCover", "A2FE8EDB_B58DEE88_Corner1", 0 );
        SET_PED_FLAG_LOCK_TO_COVER( g_U2632[1], 1 );
    }
    if (NOT (IS_PED_DEAD( g_U2632[2] )))
    {
        TASK_COMBAT_SNAP_TO_COVER( g_U2632[2], "GenCover", "A2FE8EDB_459DEAAA_Corner1", 0 );
        SET_PED_FLAG_LOCK_TO_COVER( g_U2632[2], 1 );
    }
    return;
}

void sub_45197()
{
    int I;

    sub_1147( "AT", "P_ACTIVATE_VIG05", 0 );
    sub_41739( ref g_U2760 );
    ISEQ_REGISTER_ENTITY( -1956283442, "GMED0", g_U2760[0], 0 );
    ISEQ_REGISTER_ENTITY( -1956283442, "GMED1", g_U2760[1], 0 );
    ISEQ_REGISTER_ENTITY( -1956283442, "GMED2", g_U2760[2], 0 );
    for ( I = 0; I <= 2; I++ )
    {
        sub_45380( g_U2760[I], g_U2764[I]._fU0, g_U2764[I]._fU12 );
    }
    ISEQ_START( -1956283442 );
    return;
}

void sub_45380(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_45468()
{
    int I;

    sub_1147( "GA", "P_DEPATURE_KICKOFF_MAX_SPOTTED start", 0 );
    for ( I = 0; I <= 8; I++ )
    {
        sub_3611( ref l_U575[I] );
    }
    for ( I = 0; I <= 2; I++ )
    {
        sub_3611( ref l_U525[I] );
    }
    sub_1147( "GA", "P_DEPATURE_KICKOFF_MAX_SPOTTED end", 0 );
    return;
}

void sub_45685(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_2697() )))
        {
            SET_PLAYER_CONTROL( sub_2719(), 0, uParam2 );
            SET_PED_DUCKING( sub_2697(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_2697() );
            }
            SET_PED_INVINCIBLE( sub_2697(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_45890()
{
    sub_1147( "GA", "P_RESET_MAX_ACTION_TREE start", 0 );
    if (NOT (IS_PED_DEAD( sub_2697() )))
    {
        if (IS_PLAYER_SHOOTDODGING())
        {
            SCRIPT_ASSERT( "Do not try to reset Max's action tree when he is shoot dodging.", 0 );
            sub_1147( "GA", "You cannot reset Max's action tree during a shoot dodge.", 0 );
        }
        else
        {
            PED_ACTION_TREE_PLAY_NODE( sub_2697(), "/Global/Player" );
        }
    }
    sub_1147( "GA", "P_RESET_MAX_ACTION_TREE end", 0 );
    return;
}

void sub_46260(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

int sub_46710()
{
    if (l_U831._fU52)
    {
        sub_46752( 0, sub_2697(), "MAX", ref l_U553, 2, 0 );
        sub_46752( 1, g_U2760[0], "M14_UFE_29_MUS", ref l_U553, 2, 0 );
        sub_46752( 2, g_U2760[1], "M14_UFE_30_MUS", ref l_U553, 2, 0 );
        sub_47044( "SAIR_VIG05A", ref l_U553, 8, 1 );
        sub_47833( 640993624, ref g_U1030 );
        sub_47833( 920743876, ref g_U1030 );
        sub_47833( -1022450266, ref g_U1030 );
        if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || (IS_SCREEN_FADED_OUT()))
        {
            sub_1147( "GA", "Fading in screen.", 0 );
            DO_SCREEN_FADE_IN( 0 );
        }
    }
    sub_48136();
    if (CAMERA_ANIMATED_CURRENT_TIME() > l_U860)
    {
        if (NOT l_U859)
        {
            sub_1147( "AT", "Stopping animated blendout camera.", 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[3], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[3], 1065353216, 0 );
            CAMERA_ANIMATED_STOP( l_U861, 1 );
            l_U859 = 1;
        }
    }
    if ((l_U859) AND ((ISEQ_QUERY_ENTITY_STATE( 783941433, "Max", 6 )) || (ISEQ_QUERY_ENTITY_STATE( 783941433, "Max", 5 ))))
    {
        sub_1147( "AT", "Blendout returning as finished!", 0 );
        if (l_U862)
        {
            sub_1147( "GA", "Starting FINALE_SONG_02 music track with FINALE_02_1_2 mood. Fade in 0 sec, 0.000001", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_02", "FINALE_02_1_2", "FINALE_02_1_2", 2.00000000, 0, 10000, 0.00000100, 0 );
        }
        return 1;
    }
    return 0;
}

void sub_46752(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_47044(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_47068( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_47068(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_47123( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_47123(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_47158( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_47652( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_47158(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_47652(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_47833(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_5045( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_48136()
{
    if (sub_3731( ref l_U575[0] ))
    {
        ;
    }
    if (sub_3731( ref l_U575[1] ))
    {
        ;
    }
    if (sub_3731( ref l_U575[2] ))
    {
        ;
    }
    if (sub_3731( ref l_U575[3] ))
    {
        sub_1147( "AT", "Activating pi_DP_VIG04[3]!", 0 );
        PED_SET_ACTION_INTENTION( g_U2632[3], 1, 5000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_2697() ) );
        sub_48310( ref g_U2632[3], -60.25000000, -133.71000000, 8.78000000, 0 );
    }
    if (sub_3731( ref l_U525[0] ))
    {
        sub_1147( "AT", "Activating pi_DP_VIG05[0]!", 0 );
        PED_SET_ACTION_INTENTION( g_U2760[0], 1, 5000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_2697() ) );
        sub_48656( ref g_U2760[0], -39.55000000, -135.27000000, 4.38000000, 0, 0, 0, 0, 0 );
    }
    if (sub_3731( ref l_U525[1] ))
    {
        sub_1147( "AT", "Activating pi_DP_VIG05[1]!", 0 );
        PED_SET_ACTION_INTENTION( g_U2760[1], 1, 5000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_2697() ) );
        sub_48656( ref g_U2760[1], -43.00000000, -134.26000000, 4.38000000, 0, 0, 0, 0, 0 );
    }
    if (sub_3731( ref l_U525[2] ))
    {
        sub_1147( "AT", "Activating pi_DP_VIG05[2]!", 0 );
        PED_SET_ACTION_INTENTION( g_U2760[2], 1, 5000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_2697() ) );
        sub_48656( ref g_U2760[2], -41.79000000, -137.43000000, 4.38000000, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_48310(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown uVar7;

    sub_1147( "AT", "P_TASK_ENEMY_TO_COORDS_THEN_COMBAT", 0 );
    if ((NOT (IS_PED_DEAD( (uParam0^) ))) AND (NOT (IS_PED_DEAD( sub_2697() ))))
    {
        REGISTER_TARGET( (uParam0^), sub_2697() );
        OPEN_SEQUENCE_TASK( ref uVar7 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (bParam4)
        {
            TASK_GO_STRAIGHT_TO_COORD( 0, uParam1, 3, 20000 );
        }
        else
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, 3, 20000, 1048576000, 0, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_2697() );
        CLOSE_SEQUENCE_TASK( uVar7 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar7 );
        CLEAR_SEQUENCE_TASK( uVar7 );
    }
    return;
}

void sub_48656(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, boolean bParam6, boolean bParam7, unknown uParam8)
{
    unknown uVar11;

    sub_1147( "AT", "P_TASK_ENEMY_TO_COVER_THEN_COMBAT", 0 );
    if ((NOT (IS_PED_DEAD( (uParam0^) ))) AND (NOT (IS_PED_DEAD( sub_2697() ))))
    {
        REGISTER_TARGET( (uParam0^), sub_2697() );
        OPEN_SEQUENCE_TASK( ref uVar11 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (bParam6)
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, 3, 20000, 0.25000000, 256, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if (NOT bParam7)
        {
            if ((NOT (IS_STRING_NULL( uParam5 ))) AND (NOT (IS_STRING_NULL( uParam4 ))))
            {
                TASK_COMBAT_MOVE_TO_COVER( 0, uParam4, uParam5, 0 );
            }
            else
            {
                TASK_COMBAT_MOVE_TO_COVER_COORDS( 0, uParam1, 0 );
            }
        }
        else if ((NOT (IS_STRING_NULL( uParam5 ))) AND (NOT (IS_STRING_NULL( uParam4 ))))
        {
            TASK_COMBAT_MOVE_TO_COVER_TACTICAL( 0, uParam4, uParam5, uParam8, 0 );
        }
        else
        {
            TASK_COMBAT_MOVE_TO_COVER_TACTICAL_COORDS( 0, uParam1, uParam8, 0 );
        }
        CLOSE_SEQUENCE_TASK( uVar11 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar11 );
        CLEAR_SEQUENCE_TASK( uVar11 );
    }
    return;
}

void sub_49669(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_1147( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_49794( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 49754, 49772, uParam8 );
}

void sub_49754()
{
    return;
}

int sub_49772()
{
    return 1;
}

void sub_49794(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_50085(int iParam0, unknown uParam1, unknown uParam2)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 1;
    iParam0->_fU76 = uParam1;
    iParam0->_fU80 = uParam2;
    iParam0->_fU24 = 1;
    return;
}

void sub_50188(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_1147( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_1147( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_1147( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_1147( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_1147( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_1147( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_50966( iParam0->_fU0, 0 );
            sub_1147( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_45685( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_45685( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_1147( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_41497( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_45685( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_51788( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_51788( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_50966(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_51788(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_2697() )))
    {
        SET_PLAYER_CONTROL( sub_2719(), 1, 0 );
        SET_PED_INVINCIBLE( sub_2697(), 0 );
        if (bParam0)
        {
            sub_51869();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_51869()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_2697() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_2697(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_2697(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_2697(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_2697(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_52207()
{
    sub_1147( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_1147( "CCB", "Starting the Finale_Departures context...", 0 );
    START_CONTEXT( "Finale_Departures" );
    return;
}

void sub_52465(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_52502( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_52502(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_5451( uParam0 );
            }
        }
    }
    return;
}

void sub_52665()
{
    if ((NOT (sub_3731( ref l_U1274 ))) AND (l_U1274._fU20))
    {
        return;
    }
    if (NOT l_U1295)
    {
        if ((GET_OBJECT_ANIM_CURRENT_TIME( g_U2467, "APD_secGates03", "ap_anim" )) > 0.20000000)
        {
            if (NOT sub_52762())
            {
                if (IS_OBJECT_ON_SCREEN( g_U2467 ))
                {
                    sub_52863( "SAIR_MSTGOP", ref l_U1285 );
                    l_U1295 = 1;
                    sub_52969( ref l_U1274, GET_RANDOM_INT_IN_RANGE( l_U1283, l_U1284 ) );
                    return;
                }
            }
        }
    }
    if ((NOT sub_52762()) AND (l_U1306 <= 2))
    {
        if (IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_2697() ), 20.00000000 ))
        {
            sub_52863( "SAIR_MXCUGATK", ref l_U1296 );
            l_U1306++;
            sub_52969( ref l_U1274, GET_RANDOM_INT_IN_RANGE( l_U1283, l_U1284 ) );
            return;
        }
    }
    return;
}

void sub_52762()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_52863(unknown uParam0, unknown uParam1)
{
    sub_6813( uParam1 );
    sub_46752( 0, sub_2697(), "MAX", uParam1, 2, 0 );
    sub_46752( 1, sub_2697(), "MAX", uParam1, 2, 0 );
    sub_47044( uParam0, uParam1, 8, 1 );
    return;
}

void sub_52969(unknown uParam0, unknown uParam1)
{
    sub_3475( uParam0, uParam1, 1, 0 );
    sub_3611( uParam0 );
    return;
}

void sub_53131()
{
    int iVar2;

    iVar2 = (((sub_13175( ref g_U2632 )) + (sub_13175( ref g_U2760 ))) + (sub_13175( ref g_U2474 ))) + (sub_13175( ref g_U2588 ));
    if (iVar2 > 15)
    {
        sub_53195( ref g_U2632 );
        sub_53195( ref g_U2760 );
        sub_53195( ref g_U2474 );
        sub_53195( ref g_U2588 );
    }
    return;
}

void sub_53195(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((NOT (IS_PED_DEAD( sub_2697() ))) AND (NOT (IS_PED_DEAD( (uParam0^)[I] ))))
        {
            if (NOT (IS_PED_PROCESSING_FROZEN( (uParam0^)[I] )))
            {
                if ((sub_53286( sub_2697(), (uParam0^)[I], 1 )) > 20.00000000)
                {
                    if (NOT (IS_PED_ON_SCREEN( (uParam0^)[I], 1 )))
                    {
                        sub_1147( "AT", "Too many active peds! Gotta kill some!", 0 );
                        sub_53508( (uParam0^)[I] );
                    }
                }
            }
        }
    }
    return;
}

void sub_53286(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_53508(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_53643(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_11787( sub_2697(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_53739()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    if (NOT (IS_PED_DEAD( sub_2697() )))
    {
        if (sub_11787( sub_2697(), l_U1031[2] ))
        {
            if (IS_PLAYER_SHOOTDODGING())
            {
                uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_2697() )};
                if (uVar2._fU8 <= 4.60000000)
                {
                    if ((NOT l_U468._fU16) AND (NOT l_U468._fU20))
                    {
                        sub_3475( ref l_U468, l_U467, 1, 0 );
                        sub_3611( ref l_U468 );
                    }
                    if (sub_3731( ref l_U468 ))
                    {
                        sub_1147( "AT", "Player is prone on the peoplemovers.", 0 );
                        l_U465 = 1;
                        return 1;
                    }
                }
            }
            else if (l_U468._fU20)
            {
                sub_1147( "AT", "Player no longer riding the peoplemover. Resetting timer.", 0 );
                sub_3475( ref l_U468, l_U467, 1, 0 );
            }
        }
        else if (l_U468._fU20)
        {
            sub_1147( "AT", "Player no longer riding the peoplemover. Resetting timer.", 0 );
            sub_3475( ref l_U468, l_U467, 1, 0 );
        }
    }
    else if (l_U468._fU20)
    {
        sub_1147( "AT", "Player no longer riding the peoplemover. Resetting timer.", 0 );
        sub_3475( ref l_U468, l_U467, 1, 0 );
    }
    return 0;
}

void sub_54338()
{
    sub_41770( g_U2632[4] );
    sub_41770( g_U2632[5] );
    if (NOT l_U465)
    {
        sub_48310( ref g_U2632[4], -65.37000000, -101.46000000, 4.38000000, 0 );
        sub_48310( ref g_U2632[5], -60.40000000, -100.97000000, 4.38000000, 0 );
    }
    else
    {
        sub_45380( g_U2632[4], -36.41000000, -100.56000000, 4.38000000, 0 );
        sub_45380( g_U2632[5], -37.04000000, -100.03000000, 4.38000000, 0 );
        sub_48310( ref g_U2632[4], -52.35000000, -109.68000000, 4.38000000, 0 );
        sub_48656( ref g_U2632[5], -49.23000000, -101.42000000, 4.38000000, "GenCover", "A2FE8EDB_E5162270_Corner1", 1, 0, 0 );
    }
    return;
}

void sub_54707()
{
    if (NOT (IS_PED_DEAD( sub_2697() )))
    {
        if (NOT (IS_PED_DEAD( g_U2632[0] )))
        {
            SET_PED_FLAG_LOCK_TO_COVER( g_U2632[0], 0 );
            TASK_COMBAT_PED( g_U2632[0], sub_2697() );
        }
        if (NOT (IS_PED_DEAD( g_U2632[1] )))
        {
            SET_PED_FLAG_LOCK_TO_COVER( g_U2632[1], 0 );
            TASK_COMBAT_PED( g_U2632[1], sub_2697() );
        }
        if (NOT (IS_PED_DEAD( g_U2632[2] )))
        {
            SET_PED_FLAG_LOCK_TO_COVER( g_U2632[2], 0 );
            TASK_COMBAT_PED( g_U2632[2], sub_2697() );
        }
    }
    return;
}

void sub_55010()
{
    unknown uVar2;
    unknown uVar3;

    sub_41770( g_U2632[7] );
    sub_41770( g_U2632[8] );
    if ((NOT (IS_PED_DEAD( sub_2697() ))) AND (NOT (IS_PED_DEAD( g_U2632[7] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -46.18000000, -97.11000000, 8.74000000, sub_2697(), 0, 1092616192, 1101004800, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_2697() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( g_U2632[7], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    if ((NOT (IS_PED_DEAD( sub_2697() ))) AND (NOT (IS_PED_DEAD( g_U2632[8] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -60.35000000, -101.99000000, 8.78000000, sub_2697(), 0, 1092616192, 1101004800, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_2697() );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( g_U2632[8], uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    return;
}

void sub_55389(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_11787( sub_2697(), uParam0 );
}

int sub_55886()
{
    char[64] cVar2;
    unknown uVar18;

    switch (l_U679)
    {
        case 1:
        sub_1147( "AT", "e_DP_SpawnReinforcement = ENTITY_STATE_INIT", 0 );
        sub_34120( ref l_U453, 1056964608, 0 );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U453._fU0, 1 );
        l_U680 = 0;
        l_U679 = 2;
        sub_1147( "AT", "e_DP_SpawnReinforcement = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        StrCopy( ref cVar2, "Creating pi_DP_Reinforcement[", 64 );
        ConcatString(ref cVar2, l_U680, 64);
        ConcatString(ref cVar2, "]", 64);
        g_U2474[l_U680] = sub_34430( ref g_U2483[l_U680] );
        if (l_U680 < 6)
        {
            sub_35281( g_U2474[l_U680], ref l_U453 );
        }
        else
        {
            sub_35281( g_U2474[l_U680], ref l_U447 );
        }
        uVar18 = sub_9331( g_U2474[l_U680], l_U681[l_U680], 25000, 0, 0 );
        if ((l_U680 == 6) || ((l_U680 == 4) || ((l_U680 == 2) || (l_U680 == 0))))
        {
            sub_8686( g_U2474[l_U680], -378310276, 5, 25000, 0 );
            SET_PED_PROJECTILE_OVERRIDE_PARAMETERS( g_U2474[l_U680], 0, -1, -1, 1, 0 );
        }
        if (NOT (IS_PED_DEAD( g_U2474[l_U680] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2474[l_U680], 1 );
            SET_PED_AI_TEMPLATE( g_U2474[l_U680], "AIT_EXPERT" );
            SET_PED_COMBAT_RANGE_MAX( g_U2474[l_U680], 18.00000000 );
            if ((l_U680 == 4) || ((l_U680 == 2) || (l_U680 == 0)))
            {
                SET_ROOM_FOR_PED_BY_NAME( g_U2474[l_U680], ref g_U2286 );
            }
            else
            {
                SET_ROOM_FOR_PED_BY_NAME( g_U2474[l_U680], ref g_U2278 );
            }
        }
        l_U680++;
        if (l_U680 >= g_U2474)
        {
            l_U679 = 3;
            sub_1147( "AT", "e_DP_SpawnReinforcement = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_36107( ref g_U2474, "Reinforcement" );
        SET_GROUP_GRENADE_PARAMS( l_U453._fU0, 500 );
        sub_56709( ref l_U749, ref g_U2474, 1 );
        sub_56709( ref l_U750, ref g_U2474, 1 );
        sub_56709( ref l_U751, ref g_U2474, 1 );
        sub_56709( ref l_U752, ref g_U2474, 1 );
        sub_56709( ref l_U753, ref g_U2474, 1 );
        sub_56709( ref l_U754, ref g_U2474, 1 );
        sub_36222( ref g_U2474 );
        l_U679 = 4;
        sub_1147( "AT", "e_DP_SpawnReinforcement = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_56709(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam1^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam1^)[I] )))
        {
            sub_35808( uParam0, (uParam1^)[I], uParam2 );
        }
    }
    return;
}

void sub_57011()
{
    unknown uVar2;

    sub_41770( g_U2474[1] );
    sub_41770( g_U2474[3] );
    sub_41770( g_U2474[6] );
    sub_41770( g_U2474[7] );
    sub_41770( g_U2632[6] );
    sub_40817( ref g_U2474, ref l_U453, ref l_U461, 0, 6 );
    SET_GROUP_MAX_NUM_ADVANCING( l_U453._fU0, 2 );
    if (NOT (IS_PED_DEAD( g_U2474[1] )))
    {
        if (sub_55389( l_U755 ))
        {
            sub_45380( g_U2474[1], -58.34000000, -81.44000000, 4.38000000, 0 );
            TASK_COMBAT_SNAP_TO_COVER( g_U2474[1], "GenCover", "A2FE8EDB_CDD83DF1_Corner1", 0 );
        }
        else
        {
            TASK_COMBAT_SNAP_TO_COVER( g_U2474[1], "GenCover", "A2FE8EDB_BB8C995A_Corner1", 0 );
        }
        REGISTER_TARGET( g_U2474[1], sub_2697() );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2474[1], 0 );
        TASK_COMBAT_PED( g_U2474[1], sub_2697() );
    }
    if (NOT (IS_PED_DEAD( g_U2474[3] )))
    {
        TASK_COMBAT_SNAP_TO_COVER( g_U2474[3], "GenCover", "A2FE8EDB_DDF3EAD9_Corner1", 0 );
        REGISTER_TARGET( g_U2474[3], sub_2697() );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2474[3], 0 );
        TASK_COMBAT_PED( g_U2474[3], sub_2697() );
    }
    if (NOT (IS_PED_DEAD( g_U2474[6] )))
    {
        TASK_COMBAT_SNAP_TO_COVER( g_U2474[6], "GenCover", "A2FE8EDB_B5258CE5_Popover2", 0 );
        REGISTER_TARGET( g_U2474[6], sub_2697() );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2474[6], 0 );
        TASK_COMBAT_PED( g_U2474[6], sub_2697() );
    }
    if (NOT (IS_PED_DEAD( g_U2474[7] )))
    {
        TASK_COMBAT_SNAP_TO_COVER( g_U2474[7], "GenCover", "A2FE8EDB_563BB90C_Corner2", 0 );
        REGISTER_TARGET( g_U2474[7], sub_2697() );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2474[7], 0 );
        TASK_COMBAT_PED( g_U2474[7], sub_2697() );
    }
    if ((NOT (IS_PED_DEAD( sub_2697() ))) AND (NOT (IS_PED_DEAD( g_U2632[6] ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -52.85000000, -42.76000000, 8.72000000, sub_2697(), 0, 1092616192, 1101004800, -1082130432, 3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_2697() );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( g_U2632[6], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    return;
}

void sub_58003()
{
    unknown uVar2;

    sub_41770( g_U2474[5] );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
    if (sub_55389( l_U755 ))
    {
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -36.69000000, -28.80000000, 8.78000000, sub_2697(), 0, 1092616192, 1101004800, -1082130432, 3 );
    }
    else
    {
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -45.70000000, -35.00000000, 5.09000000, sub_2697(), 0, 1092616192, 1101004800, -1082130432, 3 );
    }
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_COMBAT_PED( 0, sub_2697() );
    CLOSE_SEQUENCE_TASK( uVar2 );
    if ((NOT (IS_PED_DEAD( sub_2697() ))) AND (NOT (IS_PED_DEAD( g_U2474[5] ))))
    {
        TASK_PERFORM_SEQUENCE( g_U2474[5], uVar2 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    return;
}

void sub_58258()
{
    sub_41770( g_U2474[0] );
    sub_41770( g_U2474[2] );
    sub_41770( g_U2474[4] );
    if (NOT (IS_PED_DEAD( sub_2697() )))
    {
        if (NOT (IS_PED_DEAD( g_U2474[0] )))
        {
            SET_PED_SUGGESTED_COVER_POINT( g_U2474[0], "GenCover", "A2FE8EDB_AFE18161_Corner1" );
            REGISTER_TARGET( g_U2474[0], sub_2697() );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2474[0], 0 );
            TASK_COMBAT_PED( g_U2474[0], sub_2697() );
        }
        if (NOT (IS_PED_DEAD( g_U2474[2] )))
        {
            SET_PED_SUGGESTED_COVER_POINT( g_U2474[2], "GenCover", "A2FE8EDB_E8E364EF_Popover1" );
            REGISTER_TARGET( g_U2474[2], sub_2697() );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2474[2], 0 );
            TASK_COMBAT_PED( g_U2474[2], sub_2697() );
        }
        if (NOT (IS_PED_DEAD( g_U2474[4] )))
        {
            REGISTER_TARGET( g_U2474[4], sub_2697() );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2474[4], 0 );
            TASK_COMBAT_PED( g_U2474[4], sub_2697() );
        }
    }
    return;
}

int sub_58784()
{
    int I;

    for ( I = 0; I < g_U2632; I++ )
    {
        if (sub_11787( g_U2632[I], l_U990 ))
        {
            return 0;
        }
    }
    for ( I = 0; I < g_U2760; I++ )
    {
        if (sub_11787( g_U2760[I], l_U990 ))
        {
            return 0;
        }
    }
    for ( I = 0; I < g_U2474; I++ )
    {
        if (sub_11787( g_U2474[I], l_U990 ))
        {
            return 0;
        }
    }
    for ( I = 0; I < g_U2588; I++ )
    {
        if (sub_11787( g_U2588[I], l_U990 ))
        {
            return 0;
        }
    }
    return 1;
}

void sub_59077()
{
    int I;

    for ( I = 0; I < g_U2632; I++ )
    {
        if (sub_11787( g_U2632[I], l_U969 ))
        {
            sub_5451( g_U2632[I] );
        }
    }
    for ( I = 0; I < g_U2760; I++ )
    {
        if (sub_11787( g_U2760[I], l_U969 ))
        {
            sub_5451( g_U2760[I] );
        }
    }
    for ( I = 0; I < g_U2474; I++ )
    {
        if (sub_11787( g_U2474[I], l_U969 ))
        {
            sub_5451( g_U2474[I] );
        }
    }
    for ( I = 0; I < g_U2588; I++ )
    {
        if (sub_11787( g_U2588[I], l_U969 ))
        {
            sub_5451( g_U2588[I] );
        }
    }
    return;
}

int sub_59393()
{
    char[64] cVar2;
    unknown uVar18;

    switch (l_U732)
    {
        case 1:
        sub_1147( "AT", "e_DP_SpawnReinforcement2 = ENTITY_STATE_INIT", 0 );
        l_U733 = 0;
        l_U732 = 2;
        sub_1147( "AT", "e_DP_SpawnReinforcement2 = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        StrCopy( ref cVar2, "Creating pi_DP_Reinforcement2[", 64 );
        ConcatString(ref cVar2, l_U733, 64);
        ConcatString(ref cVar2, "]", 64);
        g_U2588[l_U733] = sub_34430( ref g_U2592[l_U733] );
        sub_35281( g_U2588[l_U733], ref l_U453 );
        uVar18 = sub_9331( g_U2588[l_U733], l_U734[l_U733], 25000, 0, 0 );
        if (NOT (IS_PED_DEAD( g_U2588[l_U733] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2588[l_U733], 1 );
            SET_PED_AI_TEMPLATE( g_U2588[l_U733], "AIT_EXPERT" );
            SET_PED_COMBAT_RANGE_MAX( g_U2588[l_U733], 12.00000000 );
            SET_ROOM_FOR_PED_BY_NAME( g_U2588[l_U733], ref g_U2278 );
        }
        l_U733++;
        if (l_U733 >= g_U2588)
        {
            l_U732 = 3;
            sub_1147( "AT", "e_DP_SpawnReinforcement2 = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_36107( ref g_U2588, "Reinforcement2" );
        sub_56709( ref l_U749, ref g_U2588, 1 );
        sub_56709( ref l_U750, ref g_U2588, 1 );
        sub_56709( ref l_U751, ref g_U2588, 1 );
        sub_56709( ref l_U752, ref g_U2588, 1 );
        sub_56709( ref l_U753, ref g_U2588, 1 );
        sub_56709( ref l_U754, ref g_U2588, 1 );
        sub_36222( ref g_U2588 );
        l_U732 = 4;
        sub_1147( "AT", "e_DP_SpawnReinforcement2 = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_60220()
{
    sub_41770( g_U2588[0] );
    sub_41770( g_U2588[1] );
    sub_41770( g_U2588[2] );
    sub_40817( ref g_U2588, ref l_U453, ref l_U461, -1, -1 );
    SET_GROUP_MAX_NUM_ADVANCING( l_U453._fU0, 2 );
    if (NOT (IS_PED_DEAD( sub_2697() )))
    {
        if (NOT (IS_PED_DEAD( g_U2588[0] )))
        {
            SET_PED_SUGGESTED_COVER_POINT( g_U2588[0], "GenCover", "A2FE8EDB_A3AA5F07_Popover2" );
            REGISTER_TARGET( g_U2588[0], sub_2697() );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2588[0], 0 );
            TASK_COMBAT_PED( g_U2588[0], sub_2697() );
        }
        if (NOT (IS_PED_DEAD( g_U2588[1] )))
        {
            TASK_ATTACK_MOVE( g_U2588[1], -45.97000000, -42.63000000, 8.72000000, 1092616192, 1101004800, -1082130432, 3 );
            REGISTER_TARGET( g_U2588[1], sub_2697() );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2588[1], 0 );
            TASK_COMBAT_PED( g_U2588[1], sub_2697() );
        }
        if (NOT (IS_PED_DEAD( g_U2588[2] )))
        {
            TASK_ATTACK_MOVE( g_U2588[2], -41.81000000, -57.73000000, 4.38000000, 1092616192, 1101004800, -1082130432, 3 );
            REGISTER_TARGET( g_U2588[2], sub_2697() );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2588[2], 0 );
            TASK_COMBAT_PED( g_U2588[2], sub_2697() );
        }
    }
    return;
}

void sub_60717()
{
    switch (l_U134)
    {
        case 0: break;
        case 1:
        if (DOES_OBJECT_EXIST( g_U2467 ))
        {
            if (((GET_OBJECT_ANIM_CURRENT_TIME( g_U2467, "APD_secGates03", "ap_anim" )) < 1.00000000) AND (NOT (IS_OBJECT_PLAYING_ANIM( g_U2467, "APD_secGates03", "ap_anim" ))))
            {
                sub_1147( "AT", "Starting gate animation.", 0 );
                PLAY_SOUND_FROM_COORD( -1, "S_AIR_DEPARTURE_GATE_OPEN", -55.25000000, -30.74000000, 6.14000000 );
                sub_40320( g_U2467, "APD_secGates03", "ap_anim", 1065353216, 0 );
            }
            if ((NOT l_U926) AND ((GET_OBJECT_ANIM_CURRENT_TIME( g_U2467, "APD_secGates03", "ap_anim" )) > 0.70000000))
            {
                SET_OBJECT_COLLISION( g_U2467, 0 );
                l_U926 = 1;
            }
            if ((l_U926) AND ((GET_OBJECT_ANIM_CURRENT_TIME( g_U2467, "APD_secGates03", "ap_anim" )) == 1.00000000))
            {
                l_U1295 = 1;
                sub_1147( "AT", "gsGateState = GATESTATE_OPEN", 0 );
                l_U134 = 2;
            }
        }
        break;
        case 2: break;
        case 3:
        if (((GET_OBJECT_ANIM_CURRENT_TIME( g_U2467, "APD_secGates03", "ap_anim" )) > 0.00000000) AND (NOT (IS_OBJECT_PLAYING_ANIM( g_U2467, "APD_secGates03", "ap_anim" ))))
        {
            sub_1147( "AT", "Starting gate animation.", 0 );
            sub_40320( g_U2467, "APD_secGates03", "ap_anim", -1.00000000, 1.00000000 );
            SET_OBJECT_COLLISION( g_U2467, 1 );
            l_U926 = 0;
        }
        if ((NOT l_U926) AND ((GET_OBJECT_ANIM_CURRENT_TIME( g_U2467, "APD_secGates03", "ap_anim" )) == 0.00000000))
        {
            PLAY_SOUND_FROM_COORD( -1, "S_AIR_DEPARTURE_GATE_SHUT", -55.25000000, -30.74000000, 6.14000000 );
            sub_1147( "AT", "gsGateState = GATESTATE_CLOSED", 0 );
            l_U134 = 4;
        }
        break;
        case 4: break;
    }
    return;
}

void sub_61666(unknown uParam0)
{
    int I;

    if ((sub_13175( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

int sub_62209(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return IS_ANY_SPEECH_PLAYING( uParam0 );
    }
    return 0;
}

void sub_62271()
{
    string[2] sVar2;
    int iVar5;
    int I;

    if ((NOT (sub_3731( ref l_U1237 ))) AND (l_U1237._fU20))
    {
        return;
    }
    if (NOT l_U1246)
    {
        sub_52969( ref l_U1247, 12000 );
        l_U1246 = 1;
    }
    if (sub_3731( ref l_U1247 ))
    {
        array(ref sVar2, 2);
        sVar2[0] = "SAIR_MSTHWB";
        sVar2[1] = "SAIR_MSTHWA";
        sub_62393( ref sVar2 );
        return;
    }
    if (l_U1247._fU16)
    {
        if (NOT l_U1264._fU20)
        {
            sub_52969( ref l_U1264, GET_RANDOM_INT_IN_RANGE( l_U1256, l_U1257 ) );
        }
        if (sub_3731( ref l_U1264 ))
        {
            if (l_U1263 < l_U1258)
            {
                sub_62681( l_U1258[l_U1263] );
                l_U1263++;
                sub_52969( ref l_U1264, GET_RANDOM_INT_IN_RANGE( l_U1256, l_U1257 ) );
                return;
            }
        }
        iVar5 = 0;
        for ( I = 0; I < l_U824; I++ )
        {
            if (DOES_PLACEMENT_EXIST( l_U824[I] ))
            {
                iVar5++;
            }
        }
        if (((GET_RANDOM_FLOAT_IN_RANGE( 0.00000000, 1.00000000 )) < 0.50000000) AND (iVar5 < l_U1273))
        {
            sub_62681( "SAIR_MFFKNPLS" );
        }
        l_U1273 = iVar5;
    }
    return;
}

void sub_62393(unknown uParam0)
{
    sub_1147( "SA", "P_DP_PLAY_OUT_OF_COMBAT_DIALOGUE_VARIATION", 0 );
    sub_62465( uParam0, ref l_U1227 );
    sub_52969( ref l_U1237, 8000 );
    return;
}

void sub_62465(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;

    sub_1147( "SA", "P_PLAY_RANDOM_MONOLOGUE", 0 );
    uVar4 = (uParam0^);
    SET_RANDOM_SEED( GET_REAL_GAME_TIMER() );
    uVar5 = GET_RANDOM_INT_IN_RANGE( 0, uVar4 );
    sub_52863( (uParam0^)[uVar5], uParam1 );
    return;
}

void sub_62681(unknown uParam0)
{
    sub_52863( uParam0, ref l_U1227 );
    sub_52969( ref l_U1237, 8000 );
    return;
}

int sub_62897(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_2697() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_2697() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_11787( sub_2697(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_11787( sub_2697(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_6287( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_6348( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_63779() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_5892( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_5936( iParam0, 0 );
                            sub_6136( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_5936( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_2697() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_2697(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_5936( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_6136( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_2697() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_2697(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_2697() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_2697(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_2697() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_2697(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_5936( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_6136( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_2697() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_2697() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_2697() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_2697(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_6136( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_63779()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_65169()
{
    int I;

    for ( I = 0; I < g_U2632; I++ )
    {
        if (NOT (IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U2632[I], ref l_U969._fU0 )))
        {
            sub_1147( "AT", "Cleaning ped not in concessions area.", 0 );
            sub_5451( g_U2632[I] );
        }
    }
    for ( I = 0; I < g_U2760; I++ )
    {
        if (NOT (IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U2760[I], ref l_U969._fU0 )))
        {
            sub_1147( "AT", "Cleaning ped not in concessions area.", 0 );
            sub_5451( g_U2760[I] );
        }
    }
    for ( I = 0; I < g_U2474; I++ )
    {
        if (NOT (IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U2474[I], ref l_U969._fU0 )))
        {
            sub_1147( "AT", "Cleaning ped not in concessions area.", 0 );
            sub_5451( g_U2474[I] );
        }
    }
    for ( I = 0; I < g_U2588; I++ )
    {
        if (NOT (IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U2588[I], ref l_U969._fU0 )))
        {
            sub_1147( "AT", "Cleaning ped not in concessions area.", 0 );
            sub_5451( g_U2588[I] );
        }
    }
    return;
}

void sub_65770()
{
    if (l_U1354)
    {
        l_U134 = 3;
        l_U135 = 1;
        sub_5576( l_U136 );
        sub_5576( l_U143 );
        sub_5576( l_U150 );
        sub_5576( l_U151 );
        sub_40411();
        if (DOES_OBJECT_EXIST( l_U143 ))
        {
            SET_OBJECT_VISIBLE( l_U143, 1 );
        }
        sub_5892( ref l_U176, 1 );
        l_U1354 = 0;
    }
    if (l_U1355)
    {
        sub_5576( l_U420 );
        sub_5576( l_U421 );
        l_U420 = sub_37817( -2043642572, l_U422, l_U425, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U420 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U420, "ap_bathroom" );
        }
        l_U421 = sub_37817( -2043642572, l_U428, l_U431, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U421 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U421, "GtaMloRoom_depart" );
        }
        l_U1355 = 0;
    }
    if (l_U1356)
    {
        if (DOES_OBJECT_EXIST( g_U2467 ))
        {
            SET_OBJECT_COLLISION( g_U2467, 0 );
        }
        l_U1356 = 0;
    }
    return;
}

void sub_66154()
{
    sub_1147( "AT", "P_RELEASE_DEPARTURES_ASSETS", 0 );
    sub_66213( ref l_U1012, ref g_U1030 );
    sub_47833( 640993624, ref g_U1030 );
    sub_47833( 920743876, ref g_U1030 );
    sub_47833( -1022450266, ref g_U1030 );
    sub_66323( 57534114, ref g_U1247 );
    sub_66323( -1013714740, ref g_U1247 );
    sub_66323( -1464892298, ref g_U1247 );
    sub_66323( -612753081, ref g_U1247 );
    sub_66323( 724901397, ref g_U1247 );
    sub_66323( -378310276, ref g_U1247 );
    sub_66576( "npc_pstl_cover_grenade", ref g_U1429 );
    sub_66576( "npc_rifle_cover_grenade", ref g_U1429 );
    sub_66820( "SCRIPT_MISSION\S_AIR_DEPARTURE_01", ref g_U1950 );
    if (g_U830 >= 3)
    {
        RELEASE_MOVIE( 0 );
    }
    sub_66576( "PROP_BUTTON", ref g_U1429 );
    return;
}

void sub_66213(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_47833( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_66323(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_5045( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_66576(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5045( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_66820(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5045( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


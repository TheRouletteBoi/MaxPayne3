void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U73 = -1;
    l_U74 = {64536, 64536, 64536};
    l_U78 = 0;
    l_U79 = 0;
    l_U80 = 1500;
    l_U126 = 0;
    l_U127 = 1;
    l_U128 = 0;
    l_U511 = {-69.80000000, -21.29000000, 5.39500000};
    l_U514 = {0.00000000, 0.00000000, 132.00000000};
    l_U622 = {-78.43200000, 98.01300000, -3.55600000};
    l_U625 = {-78.57000000, 97.13000000, -4.42000000};
    l_U631 = 1;
    sub_481( "AT", "Script s_air_TramConcessions.sc is starting up...", 0 );
    sub_530();
    sub_769();
    l_U126 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_1382();
        if (l_U128 == 0)
        {
            sub_10879();
            sub_61129();
            sub_61365();
            sub_61448();
            sub_61675();
            sub_61966( ref l_U154, -1054867456, 0, 1 );
            sub_61966( ref g_U2822, -1054867456, 0, 1 );
            sub_61966( ref g_U2880, -1054867456, 0, 1 );
        }
        WAIT( 0 );
    }
    if (g_U861[3]._fU40 == 3)
    {
        sub_3635( 0 );
    }
    else
    {
        sub_3635( 1 );
        g_U846[5] = 1;
    }
    sub_62203();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_air_TramConcessions" );
    sub_481( "AT", "Script s_air_TramConcessions.sc is terminating...", 0 );
    return;
}

void sub_481(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_530()
{
    l_U517[0] = 2004595611;
    l_U517[1] = g_U2394;
    l_U517[2] = g_U2395;
    l_U517[3] = 2070806350;
    l_U517[4] = -2043642572;
    l_U517[5] = 1640831600;
    l_U517[6] = 2042458963;
    l_U517[7] = 1244233750;
    l_U517[8] = 1952011381;
    l_U517[9] = -340235727;
    l_U517[10] = 1356137923;
    l_U517[11] = 2123751748;
    l_U517[12] = 1751830702;
    l_U517[13] = -1803789817;
    l_U517[14] = -1490157718;
    l_U517[15] = -1409914275;
    l_U517[16] = 367242137;
    return;
}

void sub_769()
{
    sub_481( "SA", "P_TP_SETUP_DOORS", 0 );
    sub_850( ref g_U2804, -1193094906, -78.32187000, 92.00945000, -3.33296000, 0.00000000, 0.00000000, 0.00000000 );
    sub_908( ref g_U2804, -85.00000000, 85.00000000 );
    sub_1080( ref g_U2804, 1 );
    sub_1210( ref g_U2804, 1 );
    sub_850( ref g_U2811, -1654726147, -75.92067000, 92.00945000, -3.33296000, 0.00000000, 0.00000000, 0.00000000 );
    sub_908( ref g_U2811, -85.00000000, 85.00000000 );
    sub_1080( ref g_U2811, 1 );
    sub_1210( ref g_U2811, 1 );
    return;
}

void sub_850(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_908(int iParam0, float fParam1, float fParam2)
{
    if ((sub_920( iParam0 )) == 0)
    {
        sub_986( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

int sub_920(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_986(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_1080(int iParam0, int iParam1)
{
    if ((sub_920( iParam0 )) == 0)
    {
        sub_986( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_1210(int iParam0, unknown uParam1)
{
    if ((sub_920( iParam0 )) == 0)
    {
        sub_986( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_1382()
{
    if (g_U830 == 4)
    {
        switch (l_U128)
        {
            case 0:
            if ((sub_1537()) || (IS_PED_DEAD( sub_1464() )))
            {
                l_U128 = 1;
                sub_481( "AT", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_2031())
            {
                l_U128 = 3;
            }
            else if ((sub_2071( 0 )) == 1)
            {
                l_U128 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_1464() )))
            {
                l_U128 = 3;
                sub_481( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_481( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_1464() ))) AND (NOT (IS_PLAYER_DEAD( sub_1486() ))))
            {
                SET_PLAYER_CONTROL( sub_1486(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_1464() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_1464(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_3635( 0 );
            l_U128 = 4;
            sub_481( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_481( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_6431( ref l_U90, sub_1464() );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "Gta_MILO_cafe", 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "Gta_MILO_cafe", 0 ), GET_HASH_KEY( ref g_U2286 ) );
            if ((g_U861[5]._fU40 != 4) AND (g_U861[5]._fU40 != 0))
            {
                sub_481( "SA", "Shutting down script for MCE_TRAM_PLATFORM.", 0 );
                sub_10636( ref g_U861[5] );
                SET_EXITFLAG_FOR_SCRIPT( g_U861[5]._fU32 );
            }
            l_U631 = 0;
            l_U128 = 5;
            sub_481( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_481( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U126 = 1;
            l_U128 = 0;
            sub_481( "AT", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_1464()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1486() );
    }
    return 0;
}

void sub_1486()
{
    return GET_PLAYER_ID();
}

int sub_1537()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1464() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1464(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1486(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1486(), 1 );
            if ((IS_PED_VISIBLE( sub_1464() )) == 0)
            {
                SET_PED_VISIBLE( sub_1464(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_2031()
{
    return g_U648;
}

int sub_2071(int iParam0)
{
    iParam0 = 1;
    switch (l_U79)
    {
        case 0:
        if (NOT (sub_2132( ref l_U81 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1464() )))
            {
                l_U80 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_2242( ref l_U81, l_U80, 1, 1 );
            sub_2378( ref l_U81 );
        }
        if (sub_2498( ref l_U81 ))
        {
            sub_481( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1464() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1486() )))
            {
                SET_PLAYER_CONTROL( sub_1486(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U79 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U79 = 2;
            }
            else
            {
                l_U79 = 3;
            }
        }
        break;
        case 2:
        sub_481( "NS", "Player will QUIT", 0 );
        sub_2985();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_481( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2985();
        return 1;
        break;
    }
    return 0;
}

int sub_2132(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_2242(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2378(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_2498(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2985()
{
    sub_481( "NS", "P_PostFailRetryCleanup", 0 );
    sub_3035( ref l_U81 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1486() )))
    {
        SET_PLAYER_CONTROL( sub_1486(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U78 = 0;
    l_U78 = l_U78;
    l_U79 = 0;
    return;
}

void sub_3035(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_3635(boolean bParam0)
{
    int I;

    sub_481( "AT", "P_CLEANUP_TRAMCONCESSIONS", 0 );
    ISEQ_TERMINATE( -1761279290 );
    sub_3705( -1761279290, ref g_U1368 );
    sub_4077( ref l_U154 );
    if ((g_U861[3]._fU40 == 3) || (NOT bParam0))
    {
        sub_4077( ref g_U2822 );
        sub_4077( ref g_U2880 );
        sub_4249( ref g_U4751 );
    }
    else
    {
        for ( I = 0; I < 4; I++ )
        {
            if (NOT (IS_PED_DEAD( g_U2822[I] )))
            {
                sub_4111( g_U2822[I] );
            }
        }
        for ( I = 0; I < 6; I++ )
        {
            if (NOT (IS_PED_DEAD( g_U2880[I] )))
            {
                sub_4111( g_U2880[I] );
            }
        }
    }
    sub_4295( l_U510 );
    sub_4395( ref l_U424 );
    sub_4395( ref l_U457 );
    sub_4683( ref l_U508 );
    if ((g_U861[3]._fU40 == 3) || (bParam0))
    {
        sub_4077( ref g_U2632 );
        sub_4077( ref g_U2760 );
        sub_4077( ref g_U2474 );
    }
    sub_4827();
    sub_5591();
    sub_5650();
    sub_5785();
    sub_5854();
    sub_5928();
    sub_5991();
    GAMEPLAY_HELPER_BOX_DESTROY( l_U213._fU0 );
    RESET_PED_MODEL_LOD_DISTANCES( -1880103805 );
    sub_6170( ref l_U654 );
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_03B_FIN" )) || (CUTSCENE_IS_LOADED( "MID_03B_FIN" )))
    {
        CLEAR_NAMED_CUTSCENE( "MID_03B_FIN" );
    }
    SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 0 );
    return;
}

void sub_3705(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_3817( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_3817(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_4077(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_4111( (uParam0^)[I] );
    }
    return;
}

void sub_4111(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_4249(int iParam0)
{
    sub_481( "SA", "P_T2_CLEANUP_TRAM", 0 );
    sub_4295( iParam0->_fU12 );
    sub_4295( iParam0->_fU16 );
    sub_4295( iParam0->_fU20 );
    sub_4295( iParam0->_fU32 );
    sub_4295( iParam0->_fU28 );
    sub_4295( iParam0->_fU32 );
    sub_4395( iParam0 + 36 );
    sub_4395( iParam0 + 48 );
    sub_4395( iParam0 + 60 );
    sub_4479( iParam0->_fU0 );
    return;
}

void sub_4295(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_4395(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_4295( (uParam0^)[I] );
    }
    return;
}

void sub_4479(unknown uParam0)
{
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_MISSION_TRAIN( uParam0 );
    }
    return;
}

void sub_4683(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_4716( (uParam0^)[I] );
    }
    return;
}

void sub_4716(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_4827()
{
    sub_481( "AT", "P_UNLOAD_TRAM_MODELS", 0 );
    sub_4880( g_U2375, ref g_U1030 );
    sub_4880( g_U2377, ref g_U1030 );
    sub_4880( g_U2376, ref g_U1030 );
    sub_4880( g_U2378, ref g_U1030 );
    sub_4880( g_U2379, ref g_U1030 );
    sub_4880( g_U2380, ref g_U1030 );
    sub_4880( g_U2396, ref g_U1030 );
    sub_4880( -576031449, ref g_U1030 );
    sub_4880( -338998251, ref g_U1030 );
    sub_4880( 1751830702, ref g_U1030 );
    sub_4880( -340235727, ref g_U1030 );
    sub_4880( g_U2384, ref g_U1030 );
    sub_4880( g_U2385, ref g_U1030 );
    sub_4880( g_U2386, ref g_U1030 );
    sub_4880( g_U2387, ref g_U1030 );
    sub_4880( g_U2381, ref g_U1030 );
    sub_4880( g_U2382, ref g_U1030 );
    sub_4880( g_U2383, ref g_U1030 );
    sub_5370( "SCRIPT_MISSION\S_AIRPORT_TRAM", ref g_U1950 );
    sub_5370( "SCRIPT_MISSION\S_AIR_PLATFORM_01", ref g_U1950 );
    return;
}

void sub_4880(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_3817( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_5370(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_3817( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_5591()
{
    sub_481( "SA", "P_TP_CLEANUP_GATE", 0 );
    sub_4295( g_U3069 );
    return;
}

void sub_5650()
{
    sub_481( "SA", "P_TP_CLEANUP_ESCALATORS", 0 );
    sub_4295( g_U3061 );
    sub_4295( g_U3062 );
    sub_4295( g_U3063 );
    sub_4295( g_U3064 );
    sub_4295( g_U3065 );
    sub_4295( g_U3066 );
    sub_4295( g_U3067 );
    sub_4295( g_U3068 );
    return;
}

void sub_5785()
{
    sub_481( "SA", "P_TP_CLEAN_BUTTON", 0 );
    sub_4295( g_U3013 );
    sub_4295( g_U3014 );
    return;
}

void sub_5854()
{
    sub_481( "SA", "P_TP_CLEAN_SUICIDE_DOORS", 0 );
    sub_4395( ref g_U2969 );
    sub_4395( ref g_U2990 );
    return;
}

void sub_5928()
{
    sub_481( "SA", "P_TP_CLEAN_PAINKILLERS", 0 );
    sub_4683( ref g_U2818 );
    return;
}

void sub_5991()
{
    sub_481( "SA", "P_TP_CLEAN_LIGHTS", 0 );
    sub_4295( g_U3028 );
    sub_4295( g_U3029 );
    sub_4295( g_U3030 );
    sub_4295( g_U3031 );
    sub_4295( g_U3032 );
    sub_4295( g_U3033 );
    sub_4295( g_U3034 );
    sub_4295( g_U3035 );
    sub_4295( g_U3036 );
    sub_4295( g_U3037 );
    return;
}

void sub_6170(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_6431(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_481( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_6615( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_7692( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_7984( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_8344( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_7984( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_8344( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_7984( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_8344( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_8629( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_8344( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_8629( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_8344( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_9122( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_9283( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1464(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_481( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_6615(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_6647( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_6647(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_7692(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_7984(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_8300( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_8300(unknown uParam0)
{
    return;
}

void sub_8344(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_8629(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_8300( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_9122(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_9283(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_6647( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_9355( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_9355(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_10636(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_10879()
{
    int iVar2;
    int iVar3;

    iVar2 = l_U126;
    switch (l_U126)
    {
        case 0: break;
        case 1:
        sub_481( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_11083();
        sub_12579();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U126 = 2;
        sub_481( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_481( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_15153();
        sub_17659();
        l_U126 = 3;
        sub_481( "AT", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_20897( ref g_U1783 )) AND ((sub_20770( ref g_U1910 )) AND ((sub_20643( ref g_U1950 )) AND ((sub_20452( ref g_U1368 )) AND ((sub_20325( ref g_U1429 )) AND ((sub_20204( ref g_U1247 )) AND (sub_20084( ref g_U1030 ))))))))
        {
            g_U831[4] = 1;
            if ((NOT l_U90._fU0) AND (g_U829 == 4))
            {
                sub_481( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
                l_U126 = 4;
            }
            else
            {
                sub_481( "GA", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
                l_U126 = 6;
            }
        }
        break;
        case 4:
        sub_481( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        l_U631 = 0;
        g_U846[4] = 1;
        if ((sub_21266( ref l_U90 )) == 0)
        {
            sub_8629( sub_1464(), -1013714740, 50, 0, 0 );
            sub_7984( sub_1464(), -1464892298, 0, 50, 0 );
            sub_7984( sub_1464(), -612753081, 1, 50, 0 );
            l_U126 = 5;
            sub_481( "CR", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U126 = 6;
            sub_481( "CR", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_1464() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_1464(), 1 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_1464(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_1464(), 0, 0 ) ))))
            {
                g_U830 = 4;
                sub_21795( ref l_U90, g_U830, sub_1464(), g_U2014[4], g_U2129[4], g_U2168[4], g_U2207[4], 0 );
                l_U126 = 6;
                sub_481( "GA", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
            }
        }
        break;
        case 6:
        if (l_U127)
        {
            l_U198 = 1;
            l_U144 = 1;
            l_U137 = 1;
        }
        if (sub_25500())
        {
            if (sub_27617())
            {
                if (sub_28323())
                {
                    l_U126 = 7;
                    sub_481( "AT", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
                }
            }
        }
        break;
        case 7:
        if (l_U127)
        {
            sub_29213();
            sub_30020();
            sub_30356();
            sub_31221( 0 );
        }
        if (g_U846[4])
        {
            sub_35879( ref l_U742, "MID_03B_FIN", 31554, 31571, 32733, 33233, 33294, 35423, 250, 0 );
            if (l_U631)
            {
                l_U742._fU4 = 2;
            }
            else
            {
                l_U742._fU4 = 7;
            }
            sub_36332( "eCheckpointState = CP_MID03B" );
            l_U126 = 8;
        }
        break;
        case 8:
        if (sub_36374( ref l_U742 ))
        {
            RELEASE_MOVIE( 0 );
            sub_481( "RJM", "F_IS_MAX_BLENDOUT_FINISHED completed - eCheckpointState = CP_ESCALATOR_FIGHT", 0 );
            l_U126 = 9;
        }
        break;
        case 9:
        if (l_U127)
        {
            sub_481( "SA", "eCheckpointState = CP_ESCALATOR_FIGHT", 0 );
            if (g_U830 != 4)
            {
                g_U830 = 4;
                sub_21795( ref l_U90, g_U830, sub_1464(), g_U2014[4], g_U2129[4], g_U2168[4], g_U2207[4], 1 );
            }
            sub_38708();
            SET_PED_MODEL_LOD_DISTANCES( 2004595611, 10.00000000, 80.00000000 );
            l_U628 = 0;
            sub_39198( ref l_U664 );
        }
        sub_39228();
        if (NOT l_U209)
        {
            if ((sub_2498( ref l_U200 )) || (sub_39368( ref l_U256, 0 )))
            {
                sub_39479();
                sub_40834();
                l_U209 = 1;
            }
        }
        if (sub_39368( ref l_U277, 0 ))
        {
            sub_41215();
        }
        if (sub_39368( ref l_U298, 0 ))
        {
            sub_41424();
        }
        if (NOT l_U629)
        {
            if (sub_42104())
            {
                sub_481( "RJM", "F_ARE_PLATFORM_ASSETS_LOADED returned TRUE.  Now SHUT THE FUCK UP!!!!", 0 );
                l_U629 = 1;
            }
        }
        if ((NOT l_U628) AND ((l_U629) AND (l_U298._fU64)))
        {
            sub_42848();
            sub_43544( ref g_U4751, g_U4751._fU80, 1, ref g_U2302 );
            sub_45927();
            l_U628 = 1;
        }
        if (NOT sub_46150())
        {
            if ((NOT l_U664._fU16) AND (NOT l_U664._fU20))
            {
                sub_35317( ref l_U664, 10000 );
            }
        }
        if ((NOT sub_46150()) AND ((NOT (sub_46365( sub_1464() ))) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))))
        {
            if (sub_2498( ref l_U664 ))
            {
                sub_46458( "SAIR_MSESCLT", ref l_U654 );
            }
        }
        if (NOT sub_46150())
        {
            sub_47515();
        }
        if ((sub_47975()) AND ((sub_47908( ref g_U4751 )) AND (l_U628)))
        {
            sub_48145( ref l_U213, "TETH_CIV_CABOOSE", g_U4751._fU8, 0.00000000, 2.00000000, -0.10000000, 4.00000000, 6.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            l_U126 = 10;
        }
        break;
        case 10:
        if (l_U127)
        {
            sub_481( "SA", "eCheckpointState = CP_TRAM_PLATFORM", 0 );
            sub_39198( ref l_U636 );
            g_U3012 = 0;
        }
        if (sub_39368( ref l_U319, 0 ))
        {
            g_U4751._fU72 = 0;
            g_U4751._fU76 = 1;
        }
        sub_39228();
        sub_48379();
        sub_48533( ref g_U4751 );
        sub_48633( ref g_U4751 );
        if ((NOT g_U3012) AND (sub_52205( l_U235 )))
        {
            sub_52248();
            sub_52366();
            g_U3012 = 1;
            g_U3042 = 1;
        }
        if (NOT l_U153)
        {
            if ((sub_52205( l_U382 )) || ((g_U3027 > 6) AND (g_U3042)))
            {
                sub_52905();
                l_U153 = 1;
            }
        }
        if (g_U3042)
        {
            if (sub_54235())
            {
                l_U126 = 11;
            }
        }
        break;
        case 11:
        if (l_U127)
        {
            sub_481( "SA", "eCheckpointState = CP_POWER_OUT", 0 );
            sub_35317( ref l_U694, 2000 );
            g_U861[5]._fU36 = 1;
        }
        sub_48379();
        sub_48633( ref g_U4751 );
        if ((NOT g_U3012) AND (sub_52205( l_U235 )))
        {
            sub_52248();
            sub_52366();
            g_U3012 = 1;
        }
        if (sub_56929( ref l_U340, sub_1464(), 0 ))
        {
            sub_57027();
        }
        iVar3 = sub_57300( ref g_U2880 );
        if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (iVar3 <= 0))
        {
            l_U126 = 12;
        }
        break;
        case 12:
        if (l_U127)
        {
            sub_481( "SA", "eCheckpointState = CP_WAIT_FOR_BUTTON_PUSH", 0 );
            sub_57483( ref l_U536, 1 );
            SET_OBJECT_VISIBLE( g_U3014, 1 );
            l_U730 = 0;
            sub_481( "GA", "Starting FINALE_SONG_01 music track with FINALE_01_2 mood. Fade in 10 sec", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_2", "FINALE_01_2", 0.00000000, 5000, 5000, -1082130432, 0 );
            sub_35317( ref l_U706, 2000 );
            sub_39198( ref l_U718 );
            l_U731 = 0;
        }
        sub_47515();
        if ((NOT (sub_46365( sub_1464() ))) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
        {
            if (sub_2498( ref l_U706 ))
            {
                sub_46458( "SAIR_MASSTST2", ref l_U654 );
                sub_35317( ref l_U718, 20000 );
            }
        }
        if ((NOT l_U730) AND ((NOT (sub_39249( sub_1464(), l_U673 ))) AND ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND ((NOT (sub_46365( sub_1464() ))) AND (NOT (sub_47660( l_U654 )))))))
        {
            if (IS_SPHERE_VISIBLE( -78.44000000, 97.97000000, -3.42000000, 5.00000000, 1 ))
            {
                if (sub_2498( ref l_U718 ))
                {
                    l_U727[0] = "SAIR_MSFFEP1";
                    l_U727[1] = "SAIR_MSFFEP2";
                    sub_58641( ref l_U727, ref l_U654 );
                }
            }
        }
        if (NOT l_U730)
        {
            if (sub_2132( ref l_U732 ))
            {
                if ((sub_52205( l_U673 )) AND ((IS_SPHERE_VISIBLE( -78.44000000, 97.97000000, -3.42000000, 0.25000000, 1 )) AND ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND ((NOT (sub_46365( sub_1464() ))) AND (NOT (sub_47660( l_U654 )))))))
                {
                    if (sub_2498( ref l_U732 ))
                    {
                        sub_46458( "SAIR_MSTFBT", ref l_U654 );
                        l_U730 = 1;
                    }
                }
            }
            else if (sub_52205( l_U673 ))
            {
                sub_481( "RJM", "Max is in the office, and he's looked at the button, get ready to say 'Asshole'", 0 );
                sub_35317( ref l_U732, 60000 );
            }
        }
        if (sub_59024( ref l_U536 ))
        {
            l_U126 = 13;
        }
        break;
        case 13:
        sub_60807();
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U126 = 0;
        sub_481( "AT", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    if (l_U126 != iVar2)
    {
        l_U127 = 1;
    }
    else
    {
        l_U127 = 0;
    }
    return;
}

void sub_11083()
{
    int I;

    sub_481( "AT", "P_INITIALIZE_SCRIPT_DATA", 0 );
    l_U127 = 1;
    g_U3042 = 0;
    l_U630 = 0;
    l_U629 = 0;
    l_U209 = 0;
    l_U632 = 0;
    l_U633 = 0;
    l_U741 = 0;
    l_U153 = 0;
    l_U198 = 0;
    l_U199 = 0;
    l_U137 = 0;
    l_U138 = 0;
    l_U144 = 0;
    l_U145 = 0;
    g_U3027 = 0;
    l_U129 = 0;
    l_U130 = 0;
    l_U535 = 0;
    g_U4751._fU80 = {-74.25000000, -6.75000000, -5.86000000};
    g_U4751._fU92 = {-69.51894000, 138.47970000, -4.66799000};
    g_U4751._fU104 = {-69.25000000, 83.48000000, -5.86000000};
    g_U4751._fU344 = g_U4956;
    g_U4751._fU336 = 0;
    g_U4751._fU340 = 0;
    g_U4751._fU332 = 0;
    g_U4751._fU72 = 2;
    g_U4751._fU76 = 1;
    g_U4751._fU348 = 0;
    g_U4751._fU352 = 0;
    g_U4751._fU356 = 0;
    g_U4751._fU360 = 0;
    sub_11472( ref l_U536, 1, 0.00000000, 0.00000000, 0.00000000, l_U622, l_U625, 1.50000000, 2, 0, 0 );
    sub_12321( ref l_U536, 30, "POI_FIN_PWRON" );
    sub_2242( ref l_U732, 6000, 1, 0 );
    for ( I = 0; I < 6; I++ )
    {
        l_U450[I] = -1;
    }
    for ( I = 0; I < 6; I++ )
    {
        l_U483[I] = -1;
    }
    l_U731 = 0;
    AUD_SET_IS_POWER_ON( 1 );
    return;
}

void sub_11472(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_11487( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_11855( iParam0 );
    return;
}

void sub_11487(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_11855(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_11934( iParam0 );
    return;
}

void sub_11934(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_11993( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_11993( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_11993( iParam0, 1 );
            }
            else
            {
                sub_11993( iParam0, 0 );
            };;;
        }
        else
        {
            sub_11993( iParam0, 0 );
        }
    }
    else
    {
        sub_11993( iParam0, 0 );
    }
    return;
}

void sub_11993(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_12321(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_12352( iParam0 );
    return;
}

void sub_12352(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_12579()
{
    sub_481( "AT", "P_SET_STATIC_DATA", 0 );
    sub_12659( ref l_U158[0], -74.86697000, -4.39361000, 4.16849000, 234.11190000, -850069950, 7, 3, 2, 0, 0 );
    sub_12659( ref l_U158[1], -75.14581000, -2.12162000, 4.11172000, 234.11190000, -666693278, 7, 3, 2, 0, 0 );
    sub_12659( ref l_U158[2], -77.95085000, -1.67514000, 4.20146000, 234.11190000, 2086003218, 7, 3, 2, 0, 0 );
    sub_12659( ref g_U2827[0], -75.45000000, 7.72000000, 2.64000000, 0.00000000, -1589419637, 7, 3, 2, 0, 1 );
    sub_12659( ref g_U2827[1], -85.34000000, 8.88000000, 2.03000000, 0.00000000, -1671507812, 7, 3, 2, 0, 1 );
    sub_12659( ref g_U2827[2], -84.03000000, 35.90000000, -4.41000000, 0.00000000, -2085978363, 7, 3, 2, 0, 1 );
    sub_12659( ref g_U2827[3], -75.39000000, 34.07000000, -4.41000000, 0.00000000, -1481985412, 7, 3, 2, 0, 1 );
    sub_12659( ref g_U2887[0], -79.38000000, 96.05000000, -4.40000000, 159.07000000, 1764689719, 7, 3, 2, 0, 1 );
    sub_12659( ref g_U2887[1], -74.47000000, 95.06000000, -4.40000000, 165.00000000, 328397087, 7, 3, 2, 0, 1 );
    sub_12659( ref g_U2887[2], -75.35000000, 92.73000000, -4.40000000, 169.00000000, -1066883197, 7, 3, 2, 0, 1 );
    sub_12659( ref g_U2887[3], -80.37000000, 79.39000000, -4.40000000, -180.00000000, 2086003218, 7, 3, 2, 0, 1 );
    sub_12659( ref g_U2887[4], -79.62000000, 79.39000000, -4.40000000, -180.00000000, -1521155921, 7, 3, 2, 0, 1 );
    sub_12659( ref g_U2887[5], -79.59000000, 63.94000000, -4.40000000, -180.00000000, -1888347247, 7, 3, 2, 0, 1 );
    sub_13373( ref l_U256, "TB_TRIGGER_CAFE_UFE_TOP", -59.33000000, -16.48000000, 4.38000000, 25.14000000, 5.27000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13373( ref l_U277, "TB_TRIGGER_CAFE_UFE_BOTTOM", -68.15000000, -9.25000000, 4.38000000, 42.72000000, 5.27000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13373( ref l_U235, "TB_PLAYER_PAST_GATE", -80.10000000, 65.99000000, -5.90000000, 52.01000000, 29.59000000, 4.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_13373( ref l_U214, "TB_PLAYER_AT_TRAM", -88.53000000, 66.36000000, -5.90000000, 11.10000000, 50.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13373( ref l_U298, "TB_ACTIVATE_TRAM_OFFICE", -80.36000000, -0.28000000, 4.30000000, 4.58000000, 15.50000000, 4.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_13373( ref l_U319, "TB_TRIGGER_TRAM_SEARCH", -80.36000000, 20.13000000, -4.94000000, 4.58000000, 15.50000000, 8.34000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_13373( ref l_U340, "TB_CLOSE_TO_SNIPER", -79.47000000, 85.46000000, -4.94000000, 16.40000000, 13.00000000, 15.77000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13373( ref l_U361, "TB_CLEAN_CAFE_UFE", -58.37000000, -23.72000000, 4.38000000, 28.13000000, 39.59000000, 13.20000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13373( ref l_U382, "TB_TASK_OFFICE", -76.39000000, 58.36000000, -4.47000000, 21.94000000, 4.63000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13373( ref l_U673, "TRIGGER_INSIDE_TRAM_OFFICE", -78.25000000, 94.73000000, -4.89000000, 7.52000000, 8.35000000, 3.00000000, 0.00000000, -0.00043713, -90.00000000, 1 );
    sub_13373( ref l_U403, "TRIGGER_ESCALATOR_SLIDE", -79.86000000, 19.18000000, -4.98000000, 1.80000000, 37.46000000, 13.64000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14334( ref l_U210, "TETH_MID_STAIRS", -78.07000000, 10.69000000, -4.86000000, 21.00000000, 48.00000000, 12.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14334( ref l_U212, "TETH_TC_PLATFORM", -76.62000000, 63.73000000, -4.47000000, 20.78000000, 52.92000000, 4.04000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14334( ref l_U211, "TETH_TC_CONTROL", -78.60000000, 95.32000000, -5.01000000, 9.35000000, 6.29000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    l_U139[0] = 57534114;
    l_U139[1] = -1464892298;
    l_U139[2] = -1013714740;
    l_U139[3] = -612753081;
    l_U146[0] = 724901397;
    l_U146[1] = -612753081;
    l_U146[2] = 57534114;
    l_U146[3] = -1013714740;
    l_U146[4] = 1478009203;
    l_U146[5] = -184942895;
    l_U464[0] = {-72.03000000, 46.24000000, -4.47000000};
    l_U464[1] = {-72.03000000, 52.21000000, -4.47000000};
    l_U464[2] = {-72.03000000, 63.37000000, -4.47000000};
    l_U464[3] = {-72.03000000, 69.35000000, -4.47000000};
    l_U464[4] = {-72.03000000, 80.50000000, -4.47000000};
    l_U464[5] = {-72.03000000, 86.49000000, -4.47000000};
    l_U431[0] = {-87.73000000, 46.25000000, -4.47000000};
    l_U431[1] = {-87.73000000, 52.21000000, -4.47000000};
    l_U431[2] = {-87.73000000, 63.37000000, -4.47000000};
    l_U431[3] = {-87.73000000, 69.35000000, -4.47000000};
    l_U431[4] = {-87.73000000, 80.52000000, -4.47000000};
    l_U431[5] = {-87.73000000, 86.51000000, -4.47000000};
    sub_2242( ref l_U490, 1000, 1, 0 );
    sub_2242( ref l_U499, 1000, 1, 0 );
    return;
}

void sub_12659(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_13373(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_14334(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_15153()
{
    sub_481( "AT", "P_REQUEST_TRAMCONCESSIONS_PERSISTENT_ASSETS start", 0 );
    sub_15234( ref l_U517, ref g_U1030 );
    sub_16643( 57534114, ref g_U1247 );
    sub_16643( -1013714740, ref g_U1247 );
    sub_16643( -1464892298, ref g_U1247 );
    sub_16643( -612753081, ref g_U1247 );
    sub_16643( -184942895, ref g_U1247 );
    sub_16643( 724901397, ref g_U1247 );
    return;
}

void sub_15234(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_15269( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_15269(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_15304( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_15435( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_15304(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_15435( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_15435( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_15435( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_16083( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_15435( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_15435( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_15435(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15455( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_15455(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_16083(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_16643(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_16664( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_16796( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_16664(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_16796( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_16796( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_16796( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_16083( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_16796( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_16796( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16796(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15455( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_17659()
{
    sub_481( "GA", "P_REQUEST_TRAMCONCESSIONS_NONPERSISTENT_ASSETS start", 0 );
    if (l_U631)
    {
        sub_17760( "MID_03B_FIN", 0 );
    }
    sub_18017( -1761279290, ref g_U1368 );
    sub_481( "GA", "P_REQUEST_TRAMCONCESSIONS_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_17760(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_18017(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_18052( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_18204( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_18052(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_18204( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_18204( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_18204( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_18204( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_16083( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_16083( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_18204( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_18204( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18204(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15455( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_20084(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_20204(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_20325(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_20452(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_20643(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_20770(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_20897(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_21266(unknown uParam0)
{
    sub_481( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_6431( uParam0, sub_1464() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_21795(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_481( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_481( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_9283( iParam1 );
        sub_22054( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_22505( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_22505( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22737( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_22505( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22737( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_22737( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_22505( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22737( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_22737( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_22737( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_22505( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22737( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_22737( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_22737( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_22737( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_24295( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_481( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_22054(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_6647( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_481( "TEH", "Ending context", 0 );
        sub_481( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_22505(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_22737(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_24295(int iParam0)
{
    sub_8300( "CHECKPOINT DATA" );
    sub_24334( iParam0->_fU4 );
    sub_24357( iParam0->_fU16 );
    sub_24357( iParam0->_fU20 );
    sub_24357( iParam0->_fU24 );
    sub_24400( iParam0->_fU28 );
    sub_24400( iParam0->_fU56 );
    sub_24400( iParam0->_fU60 );
    sub_24400( iParam0->_fU64 );
    sub_24400( iParam0->_fU68 );
    sub_24400( iParam0->_fU72 );
    sub_24400( iParam0->_fU76 );
    sub_24400( iParam0->_fU80 );
    sub_24400( iParam0->_fU84 );
    sub_24400( iParam0->_fU88 );
    sub_24400( iParam0->_fU92 );
    sub_24357( iParam0->_fU32 );
    sub_24400( iParam0->_fU36 );
    sub_24400( iParam0->_fU40 );
    sub_24400( iParam0->_fU44 );
    sub_24357( iParam0->_fU136 );
    sub_24605( iParam0->_fU140 );
    sub_24400( iParam0->_fU52 );
    sub_8300( "---nRightHolsterAttachmentEnabled: " );
    sub_24400( iParam0->_fU96 );
    sub_8300( "---nRightHolsterAttachmentToggled: " );
    sub_24400( iParam0->_fU100 );
    sub_8300( "---nLeftHolsterAttachmentEnabled: " );
    sub_24400( iParam0->_fU104 );
    sub_8300( "---nLeftHolsterAttachmentToggled: " );
    sub_24400( iParam0->_fU108 );
    sub_8300( "---nRifleHolsterAttachmentEnabled: " );
    sub_24400( iParam0->_fU112 );
    sub_8300( "---nRifleHolsterAttachmentToggled: " );
    sub_24400( iParam0->_fU116 );
    sub_8300( "---nRightHandAttachmentEnabled: " );
    sub_24400( iParam0->_fU120 );
    sub_8300( "---nRightHandAttachmentToggled: " );
    sub_24400( iParam0->_fU124 );
    sub_8300( "---nLeftHandAttachmentEnabled: " );
    sub_24400( iParam0->_fU128 );
    sub_8300( "---nLeftHandAttachmentToggled: " );
    sub_24400( iParam0->_fU132 );
    sub_24400( l_U1 );
    sub_24400( 144 );
    return;
}

void sub_24334(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_24357(unknown uParam0)
{
    return;
}

void sub_24400(unknown uParam0)
{
    return;
}

void sub_24605(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

int sub_25500()
{
    switch (l_U198)
    {
        case 1:
        sub_481( "AT", "e_TC_SpawnBlend = ENTITY_STATE_INIT", 0 );
        l_U199 = 0;
        l_U198 = 2;
        sub_481( "AT", "e_TC_SpawnBlend = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U154[l_U199] = sub_25684( ref l_U158[l_U199] );
        sub_26523( l_U154[l_U199], ref l_U131 );
        if (l_U199 == 0)
        {
            sub_8629( l_U154[l_U199], 57534114, 25000, 0, 0 );
        }
        else
        {
            sub_8629( l_U154[l_U199], -1464892298, 25000, 0, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U154[l_U199] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U154[l_U199], 1 );
            SET_PED_AI_TEMPLATE( l_U154[l_U199], "AIT_EXPERT" );
            SET_ROOM_FOR_PED_BY_NAME( l_U154[l_U199], ref g_U2294 );
            SET_PED_COMBAT_RANGE_MIN( l_U154[l_U199], 0.00000000 );
            SET_PED_COMBAT_RANGE_MAX( l_U154[l_U199], 15.00000000 );
        }
        l_U199++;
        if (l_U199 >= l_U154)
        {
            l_U198 = 3;
            sub_481( "AT", "e_TC_SpawnBlend = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_27285( ref l_U154, "Blend" );
        sub_27383( ref l_U154 );
        l_U198 = 4;
        sub_481( "AT", "e_TC_SpawnBlend = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_25684(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_25854( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_26323( iParam0->_fU40 );
    sub_26403( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_25854(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_8300( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_26323(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_26403(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_26523(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_8300( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_26666( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_26666( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_26666(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_27285(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_27383(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_27414( (uParam0^)[I] );
    }
    return;
}

void sub_27414(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

int sub_27617()
{
    switch (l_U137)
    {
        case 1:
        sub_481( "AT", "e_TC_SpawnCafeEnemies = ENTITY_STATE_INIT", 0 );
        l_U138 = 0;
        l_U137 = 2;
        sub_481( "AT", "e_TC_SpawnCafeEnemies = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        g_U2822[l_U138] = sub_25684( ref g_U2827[l_U138] );
        sub_26523( g_U2822[l_U138], ref l_U131 );
        sub_8629( g_U2822[l_U138], l_U139[l_U138], 25000, 0, 0 );
        if (NOT (IS_PED_DEAD( g_U2822[l_U138] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2822[l_U138], 1 );
            SET_PED_AI_TEMPLATE( g_U2822[l_U138], "AIT_EXPERT" );
            if (l_U138 < 2)
            {
                SET_ROOM_FOR_PED_BY_NAME( g_U2822[l_U138], ref g_U2294 );
            }
            else
            {
                SET_ROOM_FOR_PED_BY_NAME( g_U2822[l_U138], ref g_U2302 );
            }
            SET_PED_COMBAT_RANGE_MIN( g_U2822[l_U138], 0.00000000 );
            SET_PED_COMBAT_RANGE_MAX( g_U2822[l_U138], 15.00000000 );
            SET_PED_COMBAT_ATTRIBUTES( g_U2822[l_U138], 1, 0 );
        }
        l_U138++;
        if (l_U138 >= g_U2822)
        {
            l_U137 = 3;
            sub_481( "AT", "e_TC_SpawnCafeEnemies = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_27285( ref g_U2822, "CafeUFE" );
        sub_27383( ref g_U2822 );
        l_U137 = 4;
        sub_481( "AT", "e_TC_SpawnCafeEnemies = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

int sub_28323()
{
    switch (l_U144)
    {
        case 1:
        sub_481( "AT", "e_TC_SpawnTramOffice = ENTITY_STATE_INIT", 0 );
        l_U145 = 0;
        l_U144 = 2;
        sub_481( "AT", "e_TC_SpawnTramOffice = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        g_U2880[l_U145] = sub_25684( ref g_U2887[l_U145] );
        sub_26523( g_U2880[l_U145], ref l_U131 );
        sub_8629( g_U2880[l_U145], l_U146[l_U145], 25000, 0, 0 );
        if (NOT (IS_PED_DEAD( g_U2880[l_U145] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2880[l_U145], 1 );
            SET_PED_AI_TEMPLATE( g_U2880[l_U145], "AIT_EXPERT" );
            SET_ROOM_FOR_PED_BY_NAME( g_U2880[l_U145], ref g_U2302 );
            SET_PED_ALERTNESS( g_U2880[l_U145], 3 );
            SET_PED_COMBAT_RANGE_MAX( g_U2880[l_U145], 50.00000000 );
        }
        l_U145++;
        if (l_U145 >= g_U2880)
        {
            l_U144 = 3;
            sub_481( "AT", "e_TC_SpawnTramOffice = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_27285( ref g_U2880, "TramOffice" );
        sub_28875( ref l_U211, g_U2880[0], 1 );
        sub_28875( ref l_U211, g_U2880[1], 1 );
        sub_28875( ref l_U211, g_U2880[2], 1 );
        sub_28875( ref l_U212, g_U2880[3], 1 );
        sub_28875( ref l_U212, g_U2880[4], 1 );
        sub_28875( ref l_U212, g_U2880[5], 1 );
        sub_27383( ref g_U2880 );
        l_U144 = 4;
        sub_481( "AT", "e_TC_SpawnTramOffice = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_28875(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_29213()
{
    sub_481( "AT", "P_CREATE_PLACEMENTS", 0 );
    l_U508[0] = sub_29301( -4072149, -69.68000000, -21.33000000, 5.70000000, 0.00000000, 0.00000000, 1.00000000, 1, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U508[0] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U508[0], ref g_U2286 );
    }
    sub_29436();
    sub_29613();
    return;
}

void sub_29301(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_29436()
{
    int I;

    sub_481( "SA", "P_TP_ACTIVATE_ALL_CONTROL_ROOM_PAINKILLERS start", 0 );
    for ( I = 0; I < g_U2818; I++ )
    {
        g_U2820[I] = 1;
    }
    sub_481( "SA", "P_TP_ACTIVATE_ALL_CONTROL_ROOM_PAINKILLERS end", 0 );
    return;
}

void sub_29613()
{
    vector[3] vVar2;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    vector[3] vVar12;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    int I;

    sub_481( "SA", "P_TP_CREATE_PAINKILLERS start", 0 );
    array(ref vVar2, 3);
    vVar2[0] = {-74.14300000, 96.53500000, -2.86200000};
    vVar2[1] = {-74.14300000, 96.41600000, -3.14500000};
    vVar2[2] = {-74.14300000, 96.61600000, -3.14500000};
    array(ref vVar12, 3);
    vVar12[0] = {0.00000000, 0.00000000, 0.60000000};
    vVar12[1] = {0.00000000, 0.00000000, 2.60000000};
    vVar12[2] = {0.00000000, 0.00000000, 0.00000000};
    for ( I = 0; I < g_U2818; I++ )
    {
        if ((NOT (DOES_PLACEMENT_EXIST( g_U2818[I] ))) AND (g_U2820[I]))
        {
            g_U2818[I] = sub_29301( -4072149, vVar2[I], vVar12[I], 1, 1, 0, 1119092736 );
            if (DOES_PLACEMENT_EXIST( g_U2818[I] ))
            {
                ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U2818[I], ref g_U2302 );
            }
        }
    }
    sub_481( "SA", "P_TP_CREATE_PAINKILLERS end", 0 );
    return;
}

void sub_30020()
{
    sub_481( "AT", "P_CREATE_MED_BOX", 0 );
    l_U510 = sub_30080( -2043642572, l_U511, l_U514, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U510 ))
    {
        FREEZE_OBJECT_POSITION( l_U510, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U510, ref g_U2286 );
    }
    return;
}

void sub_30080(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_25854( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_30356()
{
    sub_481( "SA", "P_TP_CREATE_ESCALATORS", 0 );
    sub_30447( ref g_U3061, ref g_U3065, -81.63000000, 28.35000000, -2.17000000, 0.00000000, 0.00000000, 180.00000000, 1, ref g_U2302 );
    sub_30447( ref g_U3062, ref g_U3066, -78.15000000, 28.35000000, -2.17000000, 0.00000000, 0.00000000, 180.00000000, 0, ref g_U2302 );
    sub_30447( ref g_U3063, ref g_U3067, -81.63000000, 8.50000000, 2.20000000, 0.00000000, 0.00000000, 180.00000000, 1, ref g_U2294 );
    sub_30447( ref g_U3064, ref g_U3068, -78.15000000, 8.50000000, 2.20000000, 0.00000000, 0.00000000, 180.00000000, 0, ref g_U2294 );
    return;
}

void sub_30447(unknown uParam0, unknown uParam1, vector vParam2, unknown uParam5, unknown uParam6, unknown uParam7, boolean bParam8, unknown uParam9)
{
    sub_481( "AT", "P_CREATE_ESCALATOR", 0 );
    (uParam0^) = sub_30080( g_U2394, vParam2, uParam5, 0, 0, 0 );
    (uParam1^) = sub_30542( g_U2395, vParam2 - (vector( 0.00000000, 0.00000000, 2.38000000)), uParam5, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
        PLAY_OBJECT_ANIM( (uParam0^), "AP_EscSil_N1_Ad_H", "ap_anim", 0.00000000, 1, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), uParam9 );
        FREEZE_OBJECT_POSITION( (uParam0^), 1 );
        if (bParam8)
        {
            SET_OBJECT_ANIM_SPEED( (uParam0^), "AP_EscSil_N1_Ad_H", "ap_anim", 1.00000000 );
        }
        else
        {
            SET_OBJECT_ANIM_SPEED( (uParam0^), "AP_EscSil_N1_Ad_H", "ap_anim", -1.00000000 );
        }
    }
    if (DOES_OBJECT_EXIST( (uParam1^) ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam1^), uParam9 );
        FREEZE_OBJECT_POSITION( (uParam1^), 1 );
        if (bParam8)
        {
            SET_MOVER_SPEED( (uParam1^), 1.00000000, 1.00000000 );
        }
        else
        {
            SET_MOVER_SPEED( (uParam1^), -1.00000000, -1.00000000 );
        }
    }
    return;
}

void sub_30542(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object mover with MUST BE PRELOADED!!!!", 0 );
        sub_25854( uParam0, 1 );
    }
    Result = CREATE_OBJECT_MOVER( uParam0, uParam1, NOT bParam7, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_31221(boolean bParam0)
{
    sub_481( "AT", "P_CREATE_GATE", 0 );
    g_U3069 = sub_30080( 2070806350, g_U3070, 0.00000000, 0.00000000, g_U3073, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U3069 ))
    {
        FREEZE_OBJECT_POSITION( g_U3069, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U3069, ref g_U2302 );
        SET_OBJECT_AS_PATH_OBSTACLE( g_U3069 );
        if (bParam0)
        {
            SET_OBJECT_COLLISION( g_U3069, 1 );
        }
        else
        {
            SET_OBJECT_COLLISION( g_U3069, 0 );
            sub_31432( g_U3069, "SECGATEBASE", "ap_anim", 0.00000000, 0.65000000 );
        }
    }
    return;
}

void sub_31432(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        PLAY_OBJECT_ANIM( uParam0, uParam1, uParam2, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uParam0, uParam1, uParam2, uParam4 );
        SET_OBJECT_ANIM_SPEED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

int sub_31554()
{
    return 1;
}

void sub_31571()
{
    if (NOT (IS_PED_DEAD( sub_1464() )))
    {
        ISEQ_REGISTER_ENTITY( -1761279290, "Max", sub_1464(), 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( sub_31624(), "W_PI_Glk18_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_1464(), g_U2014[4], g_U2129[4] );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "A2FE8EDB_464DF11A_Corner1", 1, 1 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U2168[4], g_U2207[4] );
    }
    if (NOT (IS_PED_DEAD( l_U154[0] )))
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U154[0], 0, 0 ), "W_AR_G36K_Aa_H", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U154[0], "A_UFE_Sold_B", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U154[0], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U154[0], l_U158[0]._fU0, l_U158[0]._fU12 );
    }
    if (NOT (IS_PED_DEAD( l_U154[1] )))
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U154[1], 0, 0 ), "W_PI_Glk18_Aa_H^1", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U154[1], "A_UFE_Sold_B^1", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U154[1], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U154[1], l_U158[1]._fU0, l_U158[1]._fU12 );
    }
    if (NOT (IS_PED_DEAD( l_U154[2] )))
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U154[2], 0, 0 ), "W_PI_Glk18_Aa_H^2", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U154[2], "A_UFE_Sold_B^2", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U154[2], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U154[2], l_U158[2]._fU0, l_U158[2]._fU12 );
    }
    CUTSCENE_REGISTER_ISEQ( -1761279290 );
    return;
}

int sub_31624()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1464() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_1464(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_31687( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1464(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_1464(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_1464(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

int sub_31687(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_32733()
{
    if (l_U742._fU52)
    {
        sub_32758( 1 );
    }
    if (NOT l_U632)
    {
        if (GET_CUTSCENE_TIME_MS() >= 750)
        {
            sub_481( "RJM", "MID03B_HandleCut - opening the gate", 0 );
            sub_31432( g_U2467, "APD_secGates03", "ap_anim", 1065353216, 0 );
            l_U632 = 1;
        }
    }
    if (NOT l_U633)
    {
        if ((DOES_OBJECT_EXIST( g_U2467 )) AND (GET_CUTSCENE_TIME_MS() >= 4600))
        {
            CLEAR_TIMECYCLE_MODIFIER();
            SET_TIMECYCLE_MODIFIER( "departureB" );
            sub_481( "RJM", "MID03B_HandleCut - snapping the gate shut", 0 );
            sub_31432( g_U2467, "APD_secGates03", "ap_anim", -1.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( g_U2467, 1 );
            l_U632 = 1;
        }
    }
    return;
}

void sub_32758(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1464() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_1464(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_31687( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_31624();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1464(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_33233()
{
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[4], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[4], 1065353216, 0 );
    return 1;
}

void sub_33294()
{
    sub_4295( g_U2467 );
    sub_33318( ref g_U2286 );
    sub_33511( ref l_U154 );
    if (sub_33672( GET_WEAPON_FROM_HAND( sub_1464(), 0, 0 ) ))
    {
        sub_34009( 1 );
        sub_34091( 1 );
    }
    if ((NOT (IS_PLAYER_DEAD( sub_1486() ))) AND (NOT (IS_PED_DEAD( sub_1464() ))))
    {
        if (NOT (ISEQ_QUERY_STATE( -1761279290, 3 )))
        {
            SNAP_PLAYER_TO_COVERPOINT( sub_1486(), "GenCover", "A2FE8EDB_464DF11A_Corner1", 1 );
            ISEQ_REGISTER_ENTITY( -1761279290, "Max", sub_1464(), 0 );
            ISEQ_START( -1761279290 );
            CLEAR_TIMECYCLE_MODIFIER();
            SET_TIMECYCLE_MODIFIER( "departureB" );
        }
        if (NOT (IS_PED_DEAD( l_U154[0] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U154[0], 0 );
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U154[0], 0, 0 ), 100 );
            PLAY_PED_AMBIENT_SPEECH( l_U154[0], "GET_READY", 0, 0, 0, 0, 30000 );
            REGISTER_TARGET( l_U154[0], sub_1464() );
            SET_LOCKED_TARGET( l_U154[0], sub_1464() );
            SET_PED_ALERTNESS( l_U154[0], 3 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U154[0], -60.67000000, -17.26000000, 4.41000000, sub_1464(), 1, 3, 1101004800, -1082130432, 3 );
        }
        if (NOT (IS_PED_DEAD( l_U154[1] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U154[1], 0 );
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U154[1], 0, 0 ), 100 );
            PLAY_PED_AMBIENT_SPEECH( l_U154[1], "ORDER_FIRE", 0, 0, 0, 0, 30000 );
            REGISTER_TARGET( l_U154[1], sub_1464() );
            SET_LOCKED_TARGET( l_U154[1], sub_1464() );
            SET_PED_ALERTNESS( l_U154[1], 3 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U154[1], -65.43000000, -15.60000000, 4.41000000, sub_1464(), 1, 3, 1101004800, -1082130432, 3 );
        }
        if (NOT (IS_PED_DEAD( l_U154[2] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U154[2], 0 );
            SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U154[2], 0, 0 ), 100 );
            REGISTER_TARGET( l_U154[2], sub_1464() );
            SET_LOCKED_TARGET( l_U154[2], sub_1464() );
            SET_PED_ALERTNESS( l_U154[2], 3 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U154[2], -71.70000000, -12.42000000, 4.41000000, sub_1464(), 1, 3, 1101004800, -1082130432, 3 );
        }
    }
    if (NOT AUDIO_IS_MUSIC_PLAYING())
    {
        sub_481( "GA", "Starting FINALE_SONG_01 music track with FINALE_01_4 mood. Fade in 0 sec", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_4", "FINALE_01_4", 0.00000000, 0, 5000, -1082130432, 0 );
    }
    sub_35317( ref l_U645, 1000 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_FIN_CP_04", "B_OUT_SEC_GATE_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
    return;
}

void sub_33318(unknown uParam0)
{
    sub_481( "AT", "P_CREATE_DEPARTURES_GATE", 0 );
    g_U2467 = sub_30080( 1640831600, g_U2468, g_U2471, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U2467 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2467, uParam0 );
        FREEZE_OBJECT_POSITION( g_U2467, 1 );
        SET_OBJECT_AS_PATH_OBSTACLE( g_U2467 );
    }
    sub_31432( g_U2467, "APD_secGates03", "ap_anim", 0.00000000, 0.00000000 );
    return;
}

void sub_33511(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_33542( (uParam0^)[I] );
    }
    return;
}

void sub_33542(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

int sub_33672(unknown uParam0)
{
    int iVar3;
    int[25] iVar4;
    int I;

    iVar3 = GET_WEAPON_TYPE( uParam0 );
    array(ref iVar4, 25);
    iVar4[0] = 162573582;
    iVar4[1] = -1659006841;
    iVar4[2] = 879300975;
    iVar4[3] = 377623895;
    iVar4[4] = 319712764;
    iVar4[5] = 427207702;
    iVar4[6] = -110877124;
    iVar4[7] = -1013714740;
    iVar4[8] = -1074756423;
    iVar4[9] = 1308526797;
    iVar4[10] = 840671040;
    iVar4[11] = 57534114;
    iVar4[12] = 724901397;
    iVar4[13] = 1992962408;
    iVar4[14] = -1312131151;
    iVar4[15] = 434544317;
    iVar4[16] = -168327769;
    iVar4[17] = -184942895;
    iVar4[18] = 514118749;
    iVar4[19] = 1478009203;
    iVar4[20] = 1224272620;
    iVar4[21] = 10648147;
    iVar4[22] = -1787162676;
    iVar4[23] = -2075384407;
    iVar4[24] = 1001413062;
    for ( I = 0; I < iVar4; I++ )
    {
        if (iVar3 == iVar4[I])
        {
            return 1;
        }
    }
    return 0;
}

void sub_34009(unknown uParam0)
{
    unknown Result;

    Result = nil;
    if (sub_33672( GET_WEAPON_FROM_HAND( sub_1464(), 0, 0 ) ))
    {
        Result = GET_WEAPON_FROM_HAND( sub_1464(), 0, 0 );
        SELECT_WEAPON_TO_HAND( sub_1464(), 0, 0, uParam0 );
    }
    return Result;
}

void sub_34091(unknown uParam0)
{
    if (NOT (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_1464(), 0, 0 ) )))
    {
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_1464(), 1 ) ))
        {
            SELECT_WEAPON_TO_HAND( sub_1464(), GET_WEAPON_FROM_HOLSTER( sub_1464(), 1 ), 0, uParam0 );
        }
        else if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_1464(), 0 ) ))
        {
            SELECT_WEAPON_TO_HAND( sub_1464(), GET_WEAPON_FROM_HOLSTER( sub_1464(), 0 ), 0, uParam0 );
        }
        else
        {
            SCRIPT_ASSERT( "Can't unholster weapon, no gun found in left or right holster!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "CAN'T UNHOLSTER PISTOL! Weapon already in RIGHT hand.", 0 );
    }
    return;
}

void sub_35317(unknown uParam0, unknown uParam1)
{
    sub_2242( uParam0, uParam1, 1, 0 );
    sub_2378( uParam0 );
    return;
}

int sub_35423()
{
    if (l_U742._fU52)
    {
        l_U634 = 0;
        l_U635 = 0;
        DO_SCREEN_FADE_IN( 0 );
    }
    if (sub_2498( ref l_U645 ))
    {
        sub_481( "RJM", "Registering player target again", 0 );
        REGISTER_TARGET( l_U154[0], sub_1464() );
        REGISTER_TARGET( l_U154[1], sub_1464() );
        REGISTER_TARGET( l_U154[2], sub_1464() );
    }
    if (NOT l_U634)
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FIN_CP_04", "B_OUT_SEC_GATE_CAM" )) - 300))
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[4], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[4], 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 100, 1 );
            l_U634 = 1;
        }
    }
    if (NOT l_U635)
    {
        if ((ISEQ_QUERY_STATE( -1761279290, 6 )) || (ISEQ_QUERY_STATE( -1761279290, 5 )))
        {
            l_U635 = 1;
        }
    }
    if ((l_U635) AND (l_U634))
    {
        SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U154[0], 0, 0 ), 0 );
        SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U154[1], 0, 0 ), 0 );
        SET_WEAPON_CHANCE_TO_FIRE_BLANKS( GET_WEAPON_FROM_HAND( l_U154[2], 0, 0 ), 0 );
        return 1;
    }
    return 0;
}

void sub_35879(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_481( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_36004( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 35964, 35982, uParam8 );
}

void sub_35964()
{
    return;
}

int sub_35982()
{
    return 1;
}

void sub_36004(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_36332(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_36374(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_481( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_481( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_481( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_481( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_481( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_481( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_17760( iParam0->_fU0, 0 );
            sub_481( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_37241( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_37241( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_481( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_37769( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_37241( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_38118( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_38118( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_37241(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1464() )))
        {
            SET_PLAYER_CONTROL( sub_1486(), 0, uParam2 );
            SET_PED_DUCKING( sub_1464(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1464() );
            }
            SET_PED_INVINCIBLE( sub_1464(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_37769(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_1464() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_1464(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1464(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1464(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1464(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1464(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_38118(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1464() )))
    {
        SET_PLAYER_CONTROL( sub_1486(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1464(), 0 );
        if (bParam0)
        {
            sub_38199();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_38199()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1464() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1464(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1464(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1464(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1464(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_38708()
{
    sub_481( "SA", "P_TP_LIGHTS_ON start", 0 );
    sub_38761( ref g_U3028, 2042458963 );
    sub_38761( ref g_U3029, 1244233750 );
    sub_38761( ref g_U3030, 1952011381 );
    if (DOES_OBJECT_EXIST( g_U3037 ))
    {
        sub_4295( g_U3037 );
    }
    g_U3034 = sub_30080( -340235727, g_U3038, g_U649, 0, 0, 0 );
    FREEZE_OBJECT_POSITION( g_U3034, 1 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U3034, ref g_U2302 );
    g_U3035 = sub_30080( 1356137923, g_U3038, g_U649, 0, 0, 0 );
    FREEZE_OBJECT_POSITION( g_U3035, 1 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U3035, ref g_U2302 );
    g_U3036 = sub_30080( 2123751748, g_U3038, g_U649, 0, 0, 0 );
    FREEZE_OBJECT_POSITION( g_U3036, 1 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U3036, ref g_U2302 );
    g_U3041 = 1;
    CLEAR_TIMECYCLE_MODIFIER();
    SET_TIMECYCLE_MODIFIER( "departureB" );
    sub_481( "SA", "P_TP_LIGHTS_ON end", 0 );
    return;
}

void sub_38761(unknown uParam0, unknown uParam1)
{
    sub_481( "SA", "P_TP_CREATE_LIGHTS", 0 );
    (uParam0^) = sub_30080( uParam1, g_U3038, g_U649, 0, 0, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), 1 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), ref g_U2302 );
    return;
}

void sub_39198(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_39228()
{
    if (((GET_PED_SPEED( sub_1464() )) > 3.00000000) AND (sub_39249( sub_1464(), l_U403 )))
    {
        SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 1 );
    }
    else
    {
        SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 0 );
    }
    return;
}

int sub_39249(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_39368(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_39249( sub_1464(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_39479()
{
    sub_481( "SA", "P_LOAD_TRAM_MODELS", 0 );
    sub_15269( g_U2375, ref g_U1030 );
    sub_15269( g_U2377, ref g_U1030 );
    sub_15269( g_U2376, ref g_U1030 );
    sub_15269( g_U2378, ref g_U1030 );
    sub_15269( g_U2379, ref g_U1030 );
    sub_15269( g_U2380, ref g_U1030 );
    sub_15269( g_U2396, ref g_U1030 );
    sub_15269( -576031449, ref g_U1030 );
    sub_15269( -338998251, ref g_U1030 );
    sub_15269( 1751830702, ref g_U1030 );
    sub_15269( g_U2384, ref g_U1030 );
    sub_15269( g_U2385, ref g_U1030 );
    sub_15269( g_U2386, ref g_U1030 );
    sub_15269( g_U2387, ref g_U1030 );
    sub_15269( g_U2381, ref g_U1030 );
    sub_15269( g_U2382, ref g_U1030 );
    sub_15269( g_U2383, ref g_U1030 );
    sub_39795( "SCRIPT_MISSION\S_AIRPORT_TRAM", ref g_U1950 );
    sub_39795( "SCRIPT_MISSION\S_AIR_PLATFORM_01", ref g_U1950 );
    return;
}

void sub_39795(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_39816( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_39954( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_39816(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_39954( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_39954( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_39954( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_16083( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_39954( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_39954( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_39954(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15455( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_40834()
{
    sub_481( "AT", "Deploying Cafe Enemies (top escalator!)", 0 );
    sub_33542( g_U2822[0] );
    sub_33542( g_U2822[1] );
    sub_40946( ref g_U2822[0], -76.83000000, 1.00000000, 4.39000000 );
    sub_40946( ref g_U2822[1], -83.91000000, 1.32000000, 4.39000000 );
    sub_28875( ref l_U210, g_U2822[0], 1 );
    sub_28875( ref l_U210, g_U2822[1], 1 );
    return;
}

void sub_40946(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    sub_481( "SA", "P_UFE_RUN_TO_COORD_SHOOTING", 0 );
    if ((NOT (IS_PED_DEAD( sub_1464() ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 0 );
        SET_PED_FLAG_LOCK_TO_COVER( (uParam0^), 0 );
        REGISTER_TARGET( (uParam0^), sub_1464() );
        SET_PED_ALERTNESS( (uParam0^), 3 );
        CLEAR_PED_TASKS( (uParam0^) );
        TASK_ATTACK_MOVE( (uParam0^), uParam1, 1092616192, 1101004800, -1082130432, 3 );
    }
    return;
}

void sub_41215()
{
    sub_481( "AT", "Deploying Cafe Enemies (bottom escalator!)", 0 );
    sub_33542( g_U2822[2] );
    sub_33542( g_U2822[3] );
    sub_40946( ref g_U2822[2], -75.34000000, 25.32000000, -0.55000000 );
    sub_40946( ref g_U2822[3], -84.62000000, 25.00000000, -0.38000000 );
    sub_28875( ref l_U210, g_U2822[2], 1 );
    sub_28875( ref l_U210, g_U2822[3], 1 );
    return;
}

void sub_41424()
{
    sub_33511( ref g_U2880 );
    if (NOT (IS_PED_DEAD( g_U2880[0] )))
    {
        PED_SET_ACTION_INTENTION( g_U2880[0], 10, -1, 0, 0, 0 );
    }
    if (NOT (IS_PED_DEAD( g_U2880[1] )))
    {
        CLEAR_PED_TASKS( g_U2880[1] );
        TASK_COMBAT_SNAP_TO_COVER( g_U2880[1], "ap_sec4", "Corner_Position04", 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( g_U2880[1], 1 );
        SET_PED_FLAG_LOCK_TO_COVER( g_U2880[1], 1 );
    }
    if (NOT (IS_PED_DEAD( g_U2880[2] )))
    {
        CLEAR_PED_TASKS( g_U2880[2] );
        TASK_COMBAT_SNAP_TO_COVER( g_U2880[2], "ap_sec4", "Corner_Position01", 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( g_U2880[2], 1 );
        SET_PED_FLAG_LOCK_TO_COVER( g_U2880[2], 1 );
    }
    if (NOT (IS_PED_DEAD( g_U2880[3] )))
    {
        CLEAR_PED_TASKS( g_U2880[3] );
        TASK_COMBAT_SNAP_TO_COVER( g_U2880[3], "GenCover", "B0BB2A54_D712414F_Corner1", 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( g_U2880[3], 1 );
        SET_PED_FLAG_LOCK_TO_COVER( g_U2880[3], 1 );
    }
    if (NOT (IS_PED_DEAD( g_U2880[4] )))
    {
        CLEAR_PED_TASKS( g_U2880[4] );
        TASK_COMBAT_SNAP_TO_COVER( g_U2880[4], "GenCover", "B0BB2A54_7D37A674_Popover1", 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( g_U2880[4], 1 );
        SET_PED_FLAG_LOCK_TO_COVER( g_U2880[4], 1 );
    }
    if (NOT (IS_PED_DEAD( g_U2880[5] )))
    {
        CLEAR_PED_TASKS( g_U2880[5] );
        TASK_COMBAT_SNAP_TO_COVER( g_U2880[5], "GenCover", "B0BB2A54_C5841A20_Corner1", 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( g_U2880[5], 1 );
        SET_PED_FLAG_LOCK_TO_COVER( g_U2880[5], 1 );
    }
    return;
}

int sub_42104()
{
    if ((sub_42572( "SCRIPT_MISSION\S_AIR_PLATFORM_01", ref g_U1950 )) AND ((sub_42572( "SCRIPT_MISSION\S_AIRPORT_TRAM", ref g_U1950 )) AND ((sub_42123( g_U2383, ref g_U1030 )) AND ((sub_42123( g_U2382, ref g_U1030 )) AND ((sub_42123( g_U2381, ref g_U1030 )) AND ((sub_42123( g_U2387, ref g_U1030 )) AND ((sub_42123( g_U2386, ref g_U1030 )) AND ((sub_42123( g_U2385, ref g_U1030 )) AND ((sub_42123( g_U2384, ref g_U1030 )) AND ((sub_42123( 367242137, ref g_U1030 )) AND ((sub_42123( -1490157718, ref g_U1030 )) AND ((sub_42123( -1803789817, ref g_U1030 )) AND ((sub_42123( 1751830702, ref g_U1030 )) AND ((sub_42123( 1952011381, ref g_U1030 )) AND ((sub_42123( 1244233750, ref g_U1030 )) AND ((sub_42123( 2042458963, ref g_U1030 )) AND ((sub_42123( -338998251, ref g_U1030 )) AND ((sub_42123( -576031449, ref g_U1030 )) AND ((sub_42123( g_U2396, ref g_U1030 )) AND ((sub_42123( g_U2380, ref g_U1030 )) AND ((sub_42123( g_U2379, ref g_U1030 )) AND ((sub_42123( g_U2378, ref g_U1030 )) AND ((sub_42123( g_U2376, ref g_U1030 )) AND ((sub_42123( g_U2377, ref g_U1030 )) AND (sub_42123( g_U2375, ref g_U1030 ))))))))))))))))))))))))))
    {
        return 1;
    }
    return 0;
}

int sub_42123(int iParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU4 == 3)
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_42572(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_42848()
{
    vector[6] vVar2;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    vector[6] vVar21;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    int I;

    sub_481( "SA", "P_TP_CREATE_SUICIDE_DOORS start", 0 );
    array(ref vVar2, 6);
    vVar2[0] = {-72.03000000, 46.24000000, -4.47000000};
    vVar2[1] = {-72.03000000, 52.21000000, -4.47000000};
    vVar2[2] = {-72.03000000, 63.37000000, -4.47000000};
    vVar2[3] = {-72.03000000, 69.35000000, -4.47000000};
    vVar2[4] = {-72.03000000, 80.50000000, -4.47000000};
    vVar2[5] = {-72.03000000, 86.49000000, -4.47000000};
    array(ref vVar21, 6);
    vVar21[0] = {-87.73000000, 46.25000000, -4.47000000};
    vVar21[1] = {-87.73000000, 52.21000000, -4.47000000};
    vVar21[2] = {-87.73000000, 63.37000000, -4.47000000};
    vVar21[3] = {-87.73000000, 69.35000000, -4.47000000};
    vVar21[4] = {-87.73000000, 80.52000000, -4.47000000};
    vVar21[5] = {-87.73000000, 86.51000000, -4.47000000};
    for ( I = 0; I < 6; I++ )
    {
        if (NOT (DOES_OBJECT_EXIST( g_U2969[I] )))
        {
            g_U2969[I] = sub_30080( g_U2396, vVar2[I], 0.00000000, 0.00000000, 90.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( g_U2969[I] ))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2969[I], ref g_U2302 );
            }
        }
        if (NOT (DOES_OBJECT_EXIST( g_U2990[I] )))
        {
            g_U2990[I] = sub_30080( g_U2396, vVar21[I], 0.00000000, 0.00000000, 90.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( g_U2990[I] ))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2990[I], ref g_U2302 );
            }
        }
    }
    sub_481( "SA", "P_TP_CREATE_SUICIDE_DOORS end", 0 );
    return;
}

void sub_43544(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, unknown uParam5)
{
    sub_481( "SA", "P_T2_CREATE_TRAM", 0 );
    iParam0->_fU0 = sub_43625( uParam1, uParam5, iParam0->_fU332, iParam0->_fU348, iParam0->_fU352, iParam0->_fU356, iParam0->_fU360, 0 );
    sub_44165( iParam0->_fU0, 0.00000000 );
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU0 )))
    {
        iParam0->_fU8 = GET_TRAIN_CABOOSE( iParam0->_fU0 );
        iParam0->_fU4 = GET_TRAIN_CARRIAGE( iParam0->_fU0, 1 );
        if (iParam0->_fU332 == 0)
        {
            if (bParam4)
            {
                iParam0->_fU12 = sub_30080( g_U2378, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            }
            iParam0->_fU24 = sub_30080( g_U2381, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        else if (bParam4)
        {
            iParam0->_fU12 = sub_30080( g_U2379, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        iParam0->_fU24 = sub_30080( g_U2382, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );;
        if (bParam4)
        {
            ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU12, iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( iParam0->_fU12, 1 );
        }
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU24, iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        iParam0->_fU36[0] = sub_30080( g_U2384, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        iParam0->_fU36[1] = sub_30080( g_U2385, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU36[0], iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU36[1], iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        if (NOT (IS_STRING_NULL( uParam5 )))
        {
            if (bParam4)
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU12, uParam5 );
            }
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU24, uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU36[0], uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU36[1], uParam5 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU4 )))
    {
        if (bParam4)
        {
            iParam0->_fU16 = sub_30080( g_U2380, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU16, iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( iParam0->_fU16, 1 );
        }
        iParam0->_fU28 = sub_30080( g_U2383, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU28, iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        iParam0->_fU48[0] = sub_30080( g_U2386, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        iParam0->_fU48[1] = sub_30080( g_U2387, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU48[0], iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU48[1], iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        if (NOT (IS_STRING_NULL( uParam5 )))
        {
            if (bParam4)
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU16, uParam5 );
            }
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU28, uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU48[0], uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU48[1], uParam5 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU8 )))
    {
        if (iParam0->_fU332 == 0)
        {
            if (bParam4)
            {
                iParam0->_fU20 = sub_30080( g_U2379, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            }
            iParam0->_fU32 = sub_30080( g_U2382, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        else if (bParam4)
        {
            iParam0->_fU20 = sub_30080( g_U2378, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        iParam0->_fU32 = sub_30080( g_U2381, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );;
        if (bParam4)
        {
            ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU20, iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( iParam0->_fU20, 1 );
        }
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU32, iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        iParam0->_fU60[0] = sub_30080( g_U2384, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        iParam0->_fU60[1] = sub_30080( g_U2385, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU60[0], iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU60[1], iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        if (NOT (IS_STRING_NULL( uParam5 )))
        {
            if (bParam4)
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU20, uParam5 );
            }
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU32, uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU60[0], uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU60[1], uParam5 );
        }
    }
    return;
}

void sub_43625(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, boolean bParam5, boolean bParam6, boolean bParam7, boolean bParam8, boolean bParam9)
{
    unknown Result;
    unknown uVar13;
    unknown uVar14;

    sub_481( "GA", "F_CREATE_TRAM start", 0 );
    Result = CREATE_MISSION_TRAIN( uParam4, uParam0, 1 );
    if (bParam9)
    {
        while (NOT (DOES_VEHICLE_EXIST( Result )))
        {
            sub_481( "GA", "Waiting for tram to exist.", 0 );
            WAIT( 0 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( Result )))
    {
        SET_TRAIN_LEAVES_STATION( Result );
        SET_TRAIN_SPEED( Result, 0.00000000 );
        SET_TRAIN_CRUISE_SPEED( Result, 0.00000000 );
        SET_TRAIN_STOPS_FOR_STATIONS( Result, 0 );
        if (NOT (IS_STRING_NULL( uParam3 )))
        {
            SET_ROOM_FOR_VEHICLE_BY_NAME( Result, uParam3 );
        }
        SET_VEHICLE_EXTRA( Result, 3, NOT bParam5 );
        SET_VEHICLE_EXTRA( Result, 4, NOT bParam7 );
        SET_VEHICLE_EXTRA( Result, 5, NOT bParam6 );
        SET_VEHICLE_EXTRA( Result, 6, NOT bParam8 );
        uVar13 = GET_TRAIN_CARRIAGE( Result, 1 );
        uVar14 = GET_TRAIN_CABOOSE( Result );
    }
    if (NOT (IS_VEHICLE_DEAD( uVar13 )))
    {
        if (NOT (IS_STRING_NULL( uParam3 )))
        {
            SET_ROOM_FOR_VEHICLE_BY_NAME( uVar13, uParam3 );
        }
        SET_VEHICLE_EXTRA( uVar13, 3, NOT bParam5 );
        SET_VEHICLE_EXTRA( uVar13, 4, NOT bParam7 );
        SET_VEHICLE_EXTRA( uVar13, 5, NOT bParam6 );
        SET_VEHICLE_EXTRA( uVar13, 6, NOT bParam8 );
    }
    if (NOT (IS_VEHICLE_DEAD( uVar14 )))
    {
        if (NOT (IS_STRING_NULL( uParam3 )))
        {
            SET_ROOM_FOR_VEHICLE_BY_NAME( uVar14, uParam3 );
        }
        SET_VEHICLE_EXTRA( uVar14, 3, NOT bParam5 );
        SET_VEHICLE_EXTRA( uVar14, 4, NOT bParam7 );
        SET_VEHICLE_EXTRA( uVar14, 5, NOT bParam6 );
        SET_VEHICLE_EXTRA( uVar14, 6, NOT bParam8 );
    }
    return Result;
}

void sub_44165(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        SET_TRAIN_SPEED( uParam0, uParam1 );
        SET_TRAIN_CRUISE_SPEED( uParam0, uParam1 );
    }
    return;
}

void sub_45927()
{
    sub_481( "SA", "P_TP_CREATE_BUTTON", 0 );
    if (NOT (DOES_OBJECT_EXIST( g_U3013 )))
    {
        g_U3013 = sub_30080( -576031449, g_U3015, g_U3018, 0, 0, 0 );
        FREEZE_OBJECT_POSITION( g_U3013, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U3013, ref g_U2302 );
    }
    if (NOT (DOES_OBJECT_EXIST( g_U3014 )))
    {
        g_U3014 = sub_30080( -338998251, g_U3021, g_U3024, 0, 0, 0 );
        FREEZE_OBJECT_POSITION( g_U3014, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U3014, ref g_U2302 );
        SET_OBJECT_VISIBLE( g_U3014, 0 );
    }
    return;
}

int sub_46150()
{
    int I;

    for ( I = 0; I < l_U154; I++ )
    {
        if ((NOT (IS_PED_PROCESSING_FROZEN( l_U154[I] ))) AND (NOT (IS_PED_DEAD( l_U154[I] ))))
        {
            return 1;
        }
    }
    for ( I = 0; I < g_U2822; I++ )
    {
        if ((NOT (IS_PED_PROCESSING_FROZEN( g_U2822[I] ))) AND (NOT (IS_PED_DEAD( g_U2822[I] ))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_46365(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return IS_ANY_SPEECH_PLAYING( uParam0 );
    }
    return 0;
}

void sub_46458(unknown uParam0, unknown uParam1)
{
    sub_6170( uParam1 );
    sub_46491( 0, sub_1464(), "MAX", uParam1, 2, 0 );
    sub_46491( 1, sub_1464(), "MAX", uParam1, 2, 0 );
    sub_46716( uParam0, uParam1, 8, 1 );
    return;
}

void sub_46491(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_46716(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_46740( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_46740(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_46795( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_46795(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_46830( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_47324( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_46830(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_47324(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_47515()
{
    int iVar2;
    int I;

    iVar2 = 0;
    for ( I = 0; I < l_U508; I++ )
    {
        if (DOES_PLACEMENT_EXIST( l_U508[I] ))
        {
            iVar2++;
        }
    }
    for ( I = 0; I < g_U2818; I++ )
    {
        if (DOES_PLACEMENT_EXIST( g_U2818[I] ))
        {
            iVar2++;
        }
    }
    if (((GET_RANDOM_FLOAT_IN_RANGE( 0.00000000, 1.00000000 )) < 0.50000000) AND ((NOT (sub_46365( sub_1464() ))) AND ((NOT (sub_47660( l_U654 ))) AND ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (iVar2 < l_U731)))))
    {
        sub_46458( "SAIR_MFFKNPLS", ref l_U654 );
    }
    l_U731 = iVar2;
    return;
}

int sub_47660(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_47673( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_47673(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

int sub_47908(int iParam0)
{
    if ((DOES_VEHICLE_EXIST( iParam0->_fU8 )) AND ((DOES_VEHICLE_EXIST( iParam0->_fU4 )) AND (DOES_VEHICLE_EXIST( iParam0->_fU0 ))))
    {
        return 1;
    }
    return 0;
}

int sub_47975()
{
    int I;

    for ( I = 0; I < 6; I++ )
    {
        if ((NOT (DOES_OBJECT_EXIST( g_U2990[I] ))) || (NOT (DOES_OBJECT_EXIST( g_U2969[I] ))))
        {
            return 0;
        }
    }
    return 1;
}

void sub_48145(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    if ((DOES_VEHICLE_EXIST( uParam2 )) == 1)
    {
        if (((IS_VEHICLE_DEAD( uParam2 )) == 0) || ((IS_VEHICLE_DEAD( uParam2 )) == 1))
        {
            GAMEPLAY_HELPER_BOX_CREATE_VEHICLE_ATTACHED( 2, iParam0->_fU0, uParam2, uParam3, uParam6, uParam7, uParam8, uParam9, uParam12, uParam13 );
        }
    }
    return;
}

void sub_48379()
{
    int I;

    for ( I = 0; I < g_U2822; I++ )
    {
        if (sub_39249( g_U2822[I], l_U361 ))
        {
            sub_4111( g_U2822[I] );
        }
    }
    for ( I = 0; I < l_U154; I++ )
    {
        if (sub_39249( l_U154[I], l_U361 ))
        {
            sub_4111( l_U154[I] );
        }
    }
    return;
}

void sub_48533(int iParam0)
{
    if ((iParam0->_fU76) AND (iParam0->_fU72 == 0))
    {
        PLAY_SOUND_FROM_VEHICLE( -1, ref g_U2451, iParam0->_fU0 );
    }
    if ((iParam0->_fU76) AND (iParam0->_fU72 == 4))
    {
        PLAY_SOUND_FROM_VEHICLE( -1, ref g_U2459, iParam0->_fU0 );
    }
    return;
}

void sub_48633(int iParam0)
{
    int iVar3;

    iVar3 = iParam0->_fU72;
    switch (iParam0->_fU72)
    {
        case 2:
        if (iParam0->_fU76)
        {
            sub_481( "SA", "Tram State = eTRAM_IDLE", 0 );
        }
        break;
        case 3:
        if (iParam0->_fU76)
        {
            sub_481( "SA", "Tram State = eTRAM_CLOSE_DOORS", 0 );
            sub_48843( iParam0, 0 );
            sub_49316( iParam0->_fU336 );
            sub_2242( iParam0 + 116, g_U4957, 1, 0 );
            sub_2378( iParam0 + 116 );
            if (NOT (IS_VEHICLE_DEAD( iParam0->_fU4 )))
            {
                PLAY_SOUND_FROM_VEHICLE( -1, "VEHICLES_TRAIN_SUBWAY_DOORS_CLOSE", iParam0->_fU4 );
            }
        }
        if (sub_2498( iParam0 + 116 ))
        {
            iParam0->_fU72 = 4;
        }
        break;
        case 4:
        if (iParam0->_fU76)
        {
            sub_481( "SA", "Tram State = eTRAM_DEPARTING", 0 );
            sub_2242( iParam0 + 152, g_U4958, 1, 0 );
            sub_2378( iParam0 + 152 );
        }
        sub_50156( iParam0, iParam0->_fU344 );
        if (sub_50433( iParam0 + 0, iParam0->_fU92, 1073741824 ))
        {
            iParam0->_fU72 = 5;
        }
        break;
        case 5:
        if (iParam0->_fU76)
        {
            sub_481( "SA", "Tram State = eTRAM_CLEANUP", 0 );
        }
        sub_4249( iParam0 );
        if (iParam0->_fU340)
        {
            iParam0->_fU72 = 6;
        }
        else
        {
            iParam0->_fU72 = 2;
        }
        break;
        case 6:
        if (iParam0->_fU76)
        {
            sub_481( "SA", "Tram State = eTRAM_WAITING", 0 );
            sub_2242( iParam0 + 188, g_U4959, 1, 0 );
            sub_2378( iParam0 + 188 );
        }
        if (sub_2498( iParam0 + 188 ))
        {
            iParam0->_fU72 = 7;
        }
        break;
        case 7:
        if (iParam0->_fU76)
        {
            sub_481( "SA", "Tram State = eTRAM_SPAWN", 0 );
            sub_43544( iParam0, iParam0->_fU80, 1, 0 );
        }
        if (sub_47908( iParam0 ))
        {
            iParam0->_fU72 = 0;
        }
        break;
        case 0:
        if (iParam0->_fU76)
        {
            sub_481( "SA", "Tram State = eTRAM_ARRIVING", 0 );
            sub_2242( iParam0 + 224, g_U4960, 1, 0 );
            sub_2378( iParam0 + 224 );
            sub_39198( iParam0 + 260 );
            sub_2242( iParam0 + 296, g_U4960 - 3000, 1, 0 );
            sub_2378( iParam0 + 296 );
        }
        if ((NOT (IS_VEHICLE_DEAD( iParam0->_fU4 ))) AND (sub_2498( iParam0 + 296 )))
        {
            PLAY_SOUND_FROM_VEHICLE( -1, "VEHICLES_TRAIN_SUBWAY_DOOR_TONE", iParam0->_fU4 );
        }
        if ((NOT (ref iParam0->_fU260->_fU20)) AND (ref iParam0->_fU224->_fU20))
        {
            if (sub_51066( iParam0, iParam0->_fU344, iParam0->_fU104 ))
            {
                iParam0->_fU72 = 1;
            }
        }
        break;
        case 1:
        if (iParam0->_fU76)
        {
            sub_481( "SA", "Tram State = eTRAM_OPEN_DOORS", 0 );
            sub_51278( iParam0, 0 );
            sub_51480( iParam0->_fU336 );
            sub_2242( iParam0 + 260, g_U4961, 1, 0 );
            sub_2378( iParam0 + 260 );
        }
        if (sub_2498( iParam0 + 260 ))
        {
            iParam0->_fU72 = 2;
        }
        break;
    }
    if (iParam0->_fU72 != iVar3)
    {
        iParam0->_fU76 = 1;
    }
    else
    {
        iParam0->_fU76 = 0;
    }
    return;
}

void sub_48843(int iParam0, unknown uParam1)
{
    sub_481( "SA", "P_TP_TRAM_DOORS_CLOSE", 0 );
    if (iParam0->_fU332 == 0)
    {
        sub_48914( iParam0 + 0, 0.00000000, 0, uParam1 );
        sub_48914( iParam0 + 4, 0.00000000, 0, uParam1 );
        sub_48914( iParam0 + 8, 0.00000000, 1, uParam1 );
    }
    else if (iParam0->_fU332 == 1)
    {
        sub_48914( iParam0 + 0, 0.00000000, 1, uParam1 );
        sub_48914( iParam0 + 4, 0.00000000, 0, uParam1 );
        sub_48914( iParam0 + 8, 0.00000000, 0, uParam1 );
    }
    sub_49072( iParam0, 1 );
    return;
}

void sub_48914(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if (NOT (IS_VEHICLE_DEAD( (uParam0^) )))
    {
        FORCE_TRAIN_DOOR_OPEN_CLOSE( (uParam0^), uParam1, uParam2, 1, uParam3 );
    }
    return;
}

void sub_49072(int iParam0, unknown uParam1)
{
    int[2] iVar4;
    int[2] iVar7;
    int[2] iVar10;

    array(ref iVar4, 2);
    iVar4[0] = 8;
    iVar4[1] = 11;
    sub_49106( iParam0->_fU0, ref iVar4, uParam1 );
    array(ref iVar7, 2);
    iVar7[0] = 7;
    iVar7[1] = 9;
    sub_49106( iParam0->_fU4, ref iVar7, uParam1 );
    array(ref iVar10, 2);
    iVar10[0] = 5;
    iVar10[1] = 9;
    sub_49106( iParam0->_fU8, ref iVar10, uParam1 );
    return;
}

void sub_49106(unknown uParam0, unknown uParam1, unknown uParam2)
{
    char[24] cVar5;
    int I;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        StrCopy( ref cVar5, "VEH-", 24 );
        ConcatString(ref cVar5, uParam0, 24);
        ConcatString(ref cVar5, "-", 24);
        for ( I = 0; I < (uParam1^); I++ )
        {
            StrCopy( ref uVar12, 8, cVar5, 6);
            ConcatString(ref uVar12, (uParam1^)[I], 32);
            ENABLE_NORMAL_LINE( "DYNAMIC", ref uVar12, uParam2 );
        }
    }
    return;
}

void sub_49316(boolean bParam0)
{
    int I;

    sub_481( "GA", "P_TP_SUICIDE_DOORS_CLOSE start", 0 );
    for ( I = 0; I < 6; I++ )
    {
        if (bParam0)
        {
            if (DOES_OBJECT_EXIST( g_U2990[I] ))
            {
                PLAY_OBJECT_ANIM( g_U2990[I], "ap_TramDoors_Anim", "ap_anim", 1000.00000000, 0, 1 );
                SET_OBJECT_ANIM_CURRENT_TIME( g_U2990[I], "ap_TramDoors_Anim", "ap_anim", 1.00000000 );
                SET_OBJECT_ANIM_SPEED( g_U2990[I], "ap_TramDoors_Anim", "ap_anim", -g_U3011 );
                PLAY_SOUND_FROM_OBJECT( -1, "S_AIRPORT_TRAM_PLATFORM_DOOR_CLOSE", g_U2990[I] );
                g_U2997[I] = 1;
            }
        }
        else if (DOES_OBJECT_EXIST( g_U2969[I] ))
        {
            PLAY_OBJECT_ANIM( g_U2969[I], "ap_TramDoors_Anim", "ap_anim", 1000.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U2969[I], "ap_TramDoors_Anim", "ap_anim", 1.00000000 );
            SET_OBJECT_ANIM_SPEED( g_U2969[I], "ap_TramDoors_Anim", "ap_anim", -g_U3011 );
            PLAY_SOUND_FROM_OBJECT( -1, "S_AIRPORT_TRAM_PLATFORM_DOOR_CLOSE", g_U2990[I] );
            g_U2976[I] = 1;
        }
    }
    sub_481( "GA", "P_TP_SUICIDE_DOORS_CLOSE end", 0 );
    return;
}

int sub_50156(int iParam0, unknown uParam1)
{
    unknown uVar4;

    uVar4 = sub_50325( 0.00000000, uParam1, sub_50179( iParam0 + 152 ) );
    sub_44165( iParam0->_fU0, uVar4 );
    if (sub_2498( iParam0 + 152 ))
    {
        sub_44165( iParam0->_fU0, uParam1 );
        return 1;
    }
    return 0;
}

void sub_50179(int iParam0)
{
    int iVar3;

    if (iParam0->_fU28)
    {
        iVar3 = TIMERA();
    }
    else
    {
        iVar3 = TIMERB();
    }
    return sub_50260( (TO_FLOAT( iVar3 - iParam0->_fU0 )) / (TO_FLOAT( iParam0->_fU12 )), 0.00000000, 1.00000000 );
}

void sub_50260(float fParam0, float fParam1, float fParam2)
{
    float Result;

    Result = fParam0;
    if (fParam0 < fParam1)
    {
        Result = fParam1;
    }
    else if (fParam0 > fParam2)
    {
        Result = fParam2;
    }
    return Result;
}

float sub_50325(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return ((1.00000000 - uParam2) * uParam0) + (uParam1 * uParam2);
}

void sub_50433(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4)
{
    int Result;

    Result = 0;
    if (NOT (IS_VEHICLE_DEAD( (uParam0^) )))
    {
        if ((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( (uParam0^) ), uParam1, 1 )) <= fParam4)
        {
            Result = 1;
        }
    }
    return Result;
}

int sub_51066(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    uVar7 = sub_50325( uParam1, 0.00000000, sub_50179( iParam0 + 224 ) );
    sub_44165( iParam0->_fU0, uVar7 );
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU0 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( iParam0->_fU0 )};
    }
    if ((uVar8._fU4 >= uParam2._fU4) || (sub_2498( iParam0 + 224 )))
    {
        sub_44165( iParam0->_fU0, 0.00000000 );
        return 1;
    }
    return 0;
}

void sub_51278(int iParam0, unknown uParam1)
{
    sub_481( "SA", "P_TP_TRAM_DOORS_OPEN", 0 );
    if (iParam0->_fU332 == 0)
    {
        sub_48914( iParam0 + 0, 1.50000000, 0, uParam1 );
        sub_48914( iParam0 + 4, 1.50000000, 0, uParam1 );
        sub_48914( iParam0 + 8, 1.50000000, 1, uParam1 );
    }
    else if (iParam0->_fU332 == 1)
    {
        sub_48914( iParam0 + 0, 1.50000000, 1, uParam1 );
        sub_48914( iParam0 + 4, 1.50000000, 0, uParam1 );
        sub_48914( iParam0 + 8, 1.50000000, 0, uParam1 );
    }
    sub_49072( iParam0, 1 );
    return;
}

void sub_51480(boolean bParam0)
{
    int I;

    sub_481( "GA", "P_TP_SUICIDE_DOORS_OPEN start", 0 );
    for ( I = 0; I < 6; I++ )
    {
        if (bParam0)
        {
            if (DOES_OBJECT_EXIST( g_U2990[I] ))
            {
                PLAY_OBJECT_ANIM( g_U2990[I], "ap_TramDoors_Anim", "ap_anim", 1000.00000000, 0, 1 );
                SET_OBJECT_ANIM_CURRENT_TIME( g_U2990[I], "ap_TramDoors_Anim", "ap_anim", 0.00000000 );
                SET_OBJECT_ANIM_SPEED( g_U2990[I], "ap_TramDoors_Anim", "ap_anim", g_U3011 );
                PLAY_SOUND_FROM_OBJECT( -1, "S_AIRPORT_TRAM_PLATFORM_DOOR_OPEN", g_U2990[I] );
                g_U2997[I] = 1;
            }
        }
        else if (DOES_OBJECT_EXIST( g_U2969[I] ))
        {
            PLAY_OBJECT_ANIM( g_U2969[I], "ap_TramDoors_Anim", "ap_anim", 1000.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U2969[I], "ap_TramDoors_Anim", "ap_anim", 0.00000000 );
            SET_OBJECT_ANIM_SPEED( g_U2969[I], "ap_TramDoors_Anim", "ap_anim", g_U3011 );
            PLAY_SOUND_FROM_OBJECT( -1, "S_AIRPORT_TRAM_PLATFORM_DOOR_OPEN", g_U2969[I] );
            g_U2976[I] = 1;
        }
    }
    sub_481( "GA", "P_TP_SUICIDE_DOORS_OPEN end", 0 );
    return;
}

void sub_52205(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_39249( sub_1464(), uParam0 );
}

void sub_52248()
{
    sub_481( "SA", "P_TP_CLOSE_GATE", 0 );
    sub_31432( g_U3069, "SECGATEBASE", "ap_anim", -1, 0.65000000 );
    if (DOES_OBJECT_EXIST( g_U3069 ))
    {
        SET_OBJECT_COLLISION( g_U3069, 1 );
    }
    return;
}

void sub_52366()
{
    int I;

    sub_481( "SA", "P_REMAINING_CAFE_ENEMIES_RETREAT start", 0 );
    for ( I = 0; I < g_U2822; I++ )
    {
        if ((NOT (IS_PED_DEAD( sub_1464() ))) AND (NOT (IS_PED_DEAD( g_U2822[I] ))))
        {
            sub_52489( g_U2822[I] );
            CLEAR_PED_TASKS( g_U2822[I] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2822[I], 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( g_U2822[I], -66.42000000, -12.73000000, 4.41000000, sub_1464(), 4, 1, 1056964608, 0, 1, 0 );
        }
    }
    for ( I = 0; I < l_U154; I++ )
    {
        if ((NOT (IS_PED_DEAD( sub_1464() ))) AND (NOT (IS_PED_DEAD( l_U154[I] ))))
        {
            sub_52489( l_U154[I] );
            CLEAR_PED_TASKS( l_U154[I] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U154[I], 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( l_U154[I], -66.42000000, -12.73000000, 4.41000000, sub_1464(), 4, 1, 1056964608, 0, 1, 0 );
        }
    }
    sub_481( "SA", "P_REMAINING_CAFE_ENEMIES_RETREAT end", 0 );
    return;
}

void sub_52489(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_52905()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    sub_481( "AT", "P_TASK_TRAM_OFFICE_TO_COMBAT_PLAYER", 0 );
    if ((NOT (IS_PED_DEAD( sub_1464() ))) AND (NOT (IS_PED_DEAD( g_U2880[0] ))))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2880[0], 0 );
        PED_FINISH_ACTION_INTENTION( g_U2880[0], 10 );
        uVar2 = GET_WEAPON_FROM_HAND( g_U2880[0], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            ENABLE_WEAPON_ATTACHMENT( uVar2, 13, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar2, 13, 1 );
            SET_LASER_SIGHT_ATTACHMENT( uVar2, -938171172 );
        }
        sub_7984( g_U2880[0], -1464892298, 0, 25000, 0 );
        SET_PED_COMBAT_MOVEMENT( g_U2880[0], 0 );
        SET_PED_ACCURACY( g_U2880[0], 31186664 );
        REGISTER_TARGET( g_U2880[0], sub_1464() );
        TASK_COMBAT_PED( g_U2880[0], sub_1464() );
    }
    if (NOT (IS_PED_DEAD( g_U2880[1] )))
    {
        sub_52489( g_U2880[1] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2880[1], 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( g_U2880[1], 0 );
        SET_PED_FLAG_LOCK_TO_COVER( g_U2880[1], 0 );
        REGISTER_TARGET( g_U2880[1], sub_1464() );
        TASK_COMBAT_PED( g_U2880[1], sub_1464() );
        sub_28875( ref l_U212, g_U2880[1], 1 );
        sub_40946( ref g_U2880[1], -80.83141000, 87.46335000, -4.40038300 );
    }
    if (NOT (IS_PED_DEAD( g_U2880[2] )))
    {
        sub_52489( g_U2880[2] );
        sub_28875( ref l_U212, g_U2880[2], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2880[2], 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( g_U2880[2], 0 );
        SET_PED_FLAG_LOCK_TO_COVER( g_U2880[2], 0 );
        REGISTER_TARGET( g_U2880[2], sub_1464() );
        TASK_COMBAT_PED( g_U2880[2], sub_1464() );
        sub_40946( ref g_U2880[1], -73.95911000, 88.82475000, -4.40038300 );
    }
    if (NOT (IS_PED_DEAD( g_U2880[3] )))
    {
        sub_52489( g_U2880[3] );
        sub_28875( ref l_U212, g_U2880[3], 1 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( g_U2880[3], 0 );
        SET_PED_FLAG_LOCK_TO_COVER( g_U2880[3], 0 );
        SET_PED_FLAG_FORCE_LEANFIRE_IN_COVER( g_U2880[3], 1 );
        REGISTER_TARGET( g_U2880[3], sub_1464() );
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_PAUSE( 0, 1000 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_1464() );
        CLOSE_SEQUENCE_TASK( uVar3 );
        TASK_PERFORM_SEQUENCE( g_U2880[3], uVar3 );
        CLEAR_SEQUENCE_TASK( uVar3 );
        uVar4 = GET_WEAPON_FROM_HAND( g_U2880[3], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar4 ))
        {
            ENABLE_WEAPON_ATTACHMENT( uVar4, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar4, 14, 1 );
        }
    }
    if (NOT (IS_PED_DEAD( g_U2880[4] )))
    {
        sub_52489( g_U2880[4] );
        sub_28875( ref l_U212, g_U2880[4], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2880[4], 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( g_U2880[4], 0 );
        SET_PED_FLAG_LOCK_TO_COVER( g_U2880[4], 0 );
        SET_PED_FLAG_FORCE_LEANFIRE_IN_COVER( g_U2880[4], 1 );
        REGISTER_TARGET( g_U2880[4], sub_1464() );
        TASK_COMBAT_PED( g_U2880[4], sub_1464() );
        uVar5 = GET_WEAPON_FROM_HAND( g_U2880[4], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar5 ))
        {
            ENABLE_WEAPON_ATTACHMENT( uVar5, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar5, 14, 1 );
        }
    }
    if (NOT (IS_PED_DEAD( g_U2880[5] )))
    {
        sub_52489( g_U2880[5] );
        sub_28875( ref l_U212, g_U2880[5], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2880[5], 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( g_U2880[5], 0 );
        SET_PED_FLAG_LOCK_TO_COVER( g_U2880[5], 0 );
        SET_PED_FLAG_FORCE_LEANFIRE_IN_COVER( g_U2880[5], 1 );
        REGISTER_TARGET( g_U2880[5], sub_1464() );
        TASK_COMBAT_PED( g_U2880[5], sub_1464() );
        uVar6 = GET_WEAPON_FROM_HAND( g_U2880[5], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar6 ))
        {
            ENABLE_WEAPON_ATTACHMENT( uVar6, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar6, 14, 1 );
        }
    }
    return;
}

int sub_54235()
{
    int iVar2;

    iVar2 = 750;
    switch (g_U3027)
    {
        case 0:
        sub_2242( ref g_U3043, 2000, 1, 0 );
        sub_2378( ref g_U3043 );
        sub_481( "RJM", "UPDATE_TRAM_PLATFORM_LIGHTS - going to eTRAM_LIGHT_SET1_SOUND", 0 );
        g_U3027 = 1;
        break;
        case 1:
        if (g_U3012)
        {
            if (sub_2498( ref g_U3043 ))
            {
                PLAY_SOUND_FROM_COORD( -1, "S_AIR_LIGHT_SWITCH_OFF_01", -79.97000000, 77.36000000, -0.64000000 );
                sub_2242( ref g_U3043, 180, 1, 0 );
                sub_2378( ref g_U3043 );
                sub_481( "RJM", "UPDATE_TRAM_PLATFORM_LIGHTS - going to eTRAM_LIGHT_SHUT_OFF_SET1", 0 );
                g_U3027 = 2;
            }
        }
        break;
        case 2:
        if (sub_2498( ref g_U3043 ))
        {
            sub_4295( g_U3028 );
            sub_4295( g_U3034 );
            CLEAR_TIMECYCLE_MODIFIER();
            SET_TIMECYCLE_MODIFIER( "departureC" );
            sub_38761( ref g_U3031, 1751830702 );
            sub_2242( ref g_U3043, iVar2, 1, 0 );
            sub_2378( ref g_U3043 );
            sub_481( "RJM", "UPDATE_TRAM_PLATFORM_LIGHTS - going to eTRAM_LIGHT_SET2_SOUND", 0 );
            g_U3027 = 3;
        }
        break;
        case 3:
        if (sub_2498( ref g_U3043 ))
        {
            PLAY_SOUND_FROM_COORD( -1, "S_AIR_LIGHT_SWITCH_OFF_02", -80.26000000, 61.74000000, -0.64000000 );
            sub_2242( ref g_U3043, 180, 1, 0 );
            sub_2378( ref g_U3043 );
            sub_481( "RJM", "UPDATE_TRAM_PLATFORM_LIGHTS - going to eTRAM_LIGHT_SHUT_OFF_SET2", 0 );
            g_U3027 = 4;
        }
        break;
        case 4:
        if (sub_2498( ref g_U3043 ))
        {
            sub_4295( g_U3029 );
            sub_4295( g_U3035 );
            sub_38761( ref g_U3032, -1803789817 );
            sub_2242( ref g_U3043, iVar2, 1, 0 );
            sub_2378( ref g_U3043 );
            sub_481( "RJM", "UPDATE_TRAM_PLATFORM_LIGHTS - going to eTRAM_LIGHT_SET3_SOUND", 0 );
            g_U3027 = 5;
        }
        break;
        case 5:
        if (sub_2498( ref g_U3043 ))
        {
            PLAY_SOUND_FROM_COORD( -1, "S_AIR_LIGHT_SWITCH_OFF_03", -80.15000000, 46.26000000, -0.64000000 );
            sub_2242( ref g_U3043, 180, 1, 0 );
            sub_2378( ref g_U3043 );
            sub_481( "RJM", "UPDATE_TRAM_PLATFORM_LIGHTS - going to eTRAM_LIGHT_SHUT_OFF_SET3", 0 );
            g_U3027 = 6;
        }
        break;
        case 6:
        if (sub_2498( ref g_U3043 ))
        {
            sub_4295( g_U3030 );
            sub_4295( g_U3036 );
            sub_38761( ref g_U3033, -1490157718 );
            sub_2242( ref g_U3043, 500, 1, 0 );
            sub_2378( ref g_U3043 );
            sub_481( "RJM", "UPDATE_TRAM_PLATFORM_LIGHTS - going to eTRAM_PLAY_SHUT_OFF_SOUND", 0 );
            g_U3027 = 7;
        }
        break;
        case 7:
        if (sub_2498( ref g_U3043 ))
        {
            PLAY_SOUND_FRONTEND( -1, "S_AIR_LIGHT_SWITCH_OFF_FINAL" );
            sub_2242( ref g_U3043, 3000, 1, 0 );
            sub_2378( ref g_U3043 );
            sub_481( "RJM", "UPDATE_TRAM_PLATFORM_LIGHTS - going to eTRAM_LIGHT_DONE", 0 );
            g_U3027 = 8;
        }
        break;
        case 8:
        if (sub_2498( ref g_U3043 ))
        {
            sub_55667();
            sub_38761( ref g_U3037, 367242137 );
            sub_481( "RJM", "UPDATE_TRAM_PLATFORM_LIGHTS - Finished", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

void sub_55667()
{
    sub_481( "SA", "P_TP_POWER_OFF start", 0 );
    sub_55711();
    PLAY_SOUND_FRONTEND( -1, "S_AIRPORT_TRAM_POWER_OFF" );
    AUD_SET_IS_POWER_ON( 0 );
    sub_55854( ref g_U3061, ref g_U3065 );
    sub_55854( ref g_U3062, ref g_U3066 );
    sub_55854( ref g_U3063, ref g_U3067 );
    sub_55854( ref g_U3064, ref g_U3068 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_PLAT1_ESCALATOR_02", 0 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_PLAT1_ESCALATOR_02_ENDS_01", 0 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_PLAT1_ESCALATOR_02_ENDS_02", 0 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_PLAT1_ESCALATOR_02_STAIR_HITS_01", 0 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_PLAT1_ESCALATOR_02_STAIR_HITS_02", 0 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_PLAT1_ESCALATOR_02_STAIR_HITS_03", 0 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_PLAT1_ESCALATOR_02_STAIR_HITS_04", 0 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_CAFE_ESCALATOR_01", 0 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_CAFE_ESCALATOR_01_ENDS_01", 0 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_CAFE_ESCALATOR_01_ENDS_02", 0 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_CAFE_ESCALATOR_01_STAIR_HITS_01", 0 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_CAFE_ESCALATOR_01_STAIR_HITS_02", 0 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_CAFE_ESCALATOR_01_STAIR_HITS_03", 0 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_CAFE_ESCALATOR_01_STAIR_HITS_04", 0 );
    sub_481( "SA", "P_TP_POWER_OFF end", 0 );
    return;
}

void sub_55711()
{
    sub_481( "SA", "P_TP_LIGHTS_OFF start", 0 );
    g_U3041 = 0;
    sub_481( "SA", "P_TP_LIGHTS_OFF end", 0 );
    return;
}

void sub_55854(unknown uParam0, unknown uParam1)
{
    SET_OBJECT_ANIM_SPEED( (uParam0^), "AP_EscSil_N1_Ad_H", "ap_anim", 0.00000000 );
    SET_MOVER_SPEED( (uParam1^), 0.00000000, 0.00000000 );
    return;
}

void sub_56929(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_39249( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_57027()
{
    sub_481( "SA", "P_TC_SNIPER_STOP_SNIPING start", 0 );
    if ((NOT (IS_PED_DEAD( sub_1464() ))) AND (NOT (IS_PED_DEAD( g_U2880[0] ))))
    {
        SET_PED_COMBAT_ATTRIBUTES( g_U2880[0], 8192, 1 );
        SET_PED_COMBAT_MOVEMENT( g_U2880[0], 2 );
        REGISTER_TARGET( g_U2880[0], sub_1464() );
        CLEAR_PED_TASKS( g_U2880[0] );
        TASK_COMBAT_MOVE_TO_COVER( g_U2880[0], "GenCover", "B0BB2A54_6BF903F7_Popover1", sub_1464() );
    }
    sub_481( "SA", "P_TC_SNIPER_STOP_SNIPING end", 0 );
    return;
}

void sub_57300(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_57483(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_11993( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_11993( iParam0, 0 );
        sub_57554( iParam0, 0 );
        if ((IS_PED_DEAD( sub_1464() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_1464() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_1464(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_57554(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_57705( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_57705(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_57766( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_57766( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_57766(int iParam0)
{
    if (((IS_PED_DEAD( sub_1464() )) == 0) AND ((IS_PLAYER_DEAD( sub_1486() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_1464() )) == 1) || (((IS_PED_GETTING_UP( sub_1464() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_1464() )) == 1) || (((IS_PED_IN_COVER( sub_1464() )) == 1) || (((IS_PED_DUCKING( sub_1464() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_1464() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_58641(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;

    sub_481( "SA", "P_PLAY_RANDOM_MONOLOGUE", 0 );
    uVar4 = (uParam0^);
    SET_RANDOM_SEED( GET_REAL_GAME_TIMER() );
    uVar5 = GET_RANDOM_INT_IN_RANGE( 0, uVar4 );
    sub_46458( (uParam0^)[uVar5], uParam1 );
    return;
}

int sub_59024(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_1464() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1464() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_39249( sub_1464(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_39249( sub_1464(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_57705( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_57766( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_59906() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_57483( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_11993( iParam0, 0 );
                            sub_57554( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_11993( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_1464() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_1464(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_11993( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_57554( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_1464() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_1464(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_1464() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_1464(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_1464() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_1464(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_11993( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_57554( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_1464() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_1464() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_1464() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_1464(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_57554( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_59906()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_60807()
{
    int I;

    sub_481( "SA", "P_TP_UPDATE_EXISTING_CONTROL_ROOM_PAINKILLERS start", 0 );
    for ( I = 0; I < g_U2818; I++ )
    {
        if (DOES_PLACEMENT_EXIST( g_U2818[I] ))
        {
            g_U2820[I] = 1;
        }
        else
        {
            g_U2820[I] = 0;
        }
    }
    sub_481( "SA", "P_TP_UPDATE_EXISTING_CONTROL_ROOM_PAINKILLERS end", 0 );
    return;
}

void sub_61129()
{
    int iVar2;

    if ((l_U144 == 4) AND (l_U137 == 4))
    {
        iVar2 = sub_57300( ref g_U2880 );
        if ((NOT l_U535) AND (iVar2 == 1))
        {
            sub_481( "SA", "Bullet cam assigned.", 0 );
            sub_61224( ref g_U2880 );
            l_U535 = 1;
        }
    }
    return;
}

void sub_61224(unknown uParam0)
{
    int I;

    if ((sub_57300( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_61365()
{
    if ((DOES_OBJECT_EXIST( g_U3031 )) AND (DOES_OBJECT_EXIST( g_U3028 )))
    {
        if (g_U3041)
        {
            sub_4295( g_U3031 );
        }
        else
        {
            sub_4295( g_U3028 );
        }
    }
    return;
}

void sub_61448()
{
    int I;

    for ( I = 0; I < 6; I++ )
    {
        if ((DOES_OBJECT_EXIST( g_U2969[I] )) AND (g_U2976[I]))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( g_U2969[I], "ap_TramDoors_Anim", "ap_anim" )))
            {
                g_U2976[I] = 0;
            }
        }
        if ((DOES_OBJECT_EXIST( g_U2990[I] )) AND (g_U2997[I]))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( g_U2990[I], "ap_TramDoors_Anim", "ap_anim" )))
            {
                g_U2997[I] = 0;
            }
        }
    }
    return;
}

void sub_61675()
{
    unknown uVar2;

    if (NOT (IS_PED_DEAD( sub_1464() )))
    {
        if (HAS_PED_GOT_SPECIFIC_WEAPON( sub_1464(), -2075384407 ))
        {
            REMOVE_PED_WEAPON( sub_1464(), GET_WEAPON_FROM_HAND( sub_1464(), 0, 0 ) );
            sub_8629( sub_1464(), 1224272620, 50, 0, 0 );
            g_U3075 = 0;
        }
        if (NOT g_U3075)
        {
            if (HAS_PED_GOT_SPECIFIC_WEAPON( sub_1464(), 1224272620 ))
            {
                uVar2 = GET_WEAPON_FROM_HAND( sub_1464(), 0, 0 );
                if (GET_DOES_WEAPON_EXIST( uVar2 ))
                {
                    sub_481( "SA", "Applying laser sight to the player's sniper rifle.", 0 );
                    ENABLE_WEAPON_ATTACHMENT( uVar2, 13, 1 );
                    TOGGLE_WEAPON_ATTACHMENT( uVar2, 13, 0 );
                    SET_LASER_SIGHT_ATTACHMENT( uVar2, -12373631 );
                    g_U3075 = 1;
                }
            }
        }
    }
    return;
}

void sub_61966(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_62003( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_62003(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_4111( uParam0 );
            }
        }
    }
    return;
}

void sub_62203()
{
    sub_481( "AT", "P_RELEASE_TRAMCONCESSIONS_ASSETS", 0 );
    sub_62267( ref l_U517, ref g_U1030 );
    sub_4827();
    sub_62340( 57534114, ref g_U1247 );
    sub_62340( -1464892298, ref g_U1247 );
    sub_62340( -612753081, ref g_U1247 );
    sub_62340( -184942895, ref g_U1247 );
    sub_62340( 724901397, ref g_U1247 );
    return;
}

void sub_62267(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_4880( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_62340(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_3817( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    StrCopy( ref l_U2, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U10, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = 1500;
    l_U50 = 0;
    l_U52 = -1;
    l_U53 = {64536, 64536, 64536};
    l_U92 = 0;
    l_U94 = 1;
    l_U95 = 0;
    l_U97 = 0;
    l_U98 = 0;
    l_U99 = 0;
    l_U318 = 5.00000000;
    l_U368 = 0.04000000;
    l_U369 = 3900;
    l_U370 = 100.00000000;
    l_U371 = 0.20000000;
    l_U400 = 0;
    l_U401 = -2.50000000;
    l_U402 = 2.50000000;
    l_U403 = -6.50000000;
    l_U404 = 3.30000000;
    l_U406 = 0.20000000;
    l_U407 = 0.50000000;
    l_U408 = 0.53000000;
    l_U412 = -15.00000000;
    l_U413 = -5.00000000;
    l_U414 = -15.00000000;
    l_U416 = {-619.80170000, -597.07040000, -6.34401000};
    l_U419 = 312.48550000;
    l_U420 = {0.10000000, -0.22000000, 0.65000000};
    l_U424 = {-619.78020000, -498.01610000, -5.49538000};
    l_U427 = 355.22000000;
    l_U428 = 269;
    l_U429 = -1;
    l_U430 = -1;
    l_U445 = 271;
    l_U446 = 21000;
    l_U447 = 22000;
    l_U448 = 5;
    l_U449 = 2.00000000;
    l_U450 = 26000;
    l_U469 = 3500;
    l_U470 = 4000;
    l_U471 = 5500;
    l_U472 = 60.00000000;
    l_U473 = 306;
    l_U474 = 1.00000000;
    l_U475 = {0.10000000, -0.35000000, 0.62000000};
    l_U478 = {-0.40000000, -0.03500000, 0.61200000};
    l_U517 = 15000;
    l_U518 = 0;
    l_U528 = 1.75000000;
    l_U529 = 0.22500000;
    l_U530 = 1000;
    l_U531 = 270;
    l_U563 = 4000;
    l_U595 = -1;
    StrCopy( ref l_U662, "MID_12B_FIN_CONCAT", 32 );
    StrCopy( ref l_U670, "14_05_FIN_concat", 32 );
    l_U739 = 2000;
    l_U740 = -1;
    l_U741 = -1;
    l_U742 = -630.00000000;
    l_U743 = -300.00000000;
    l_U744 = -18.00000000;
    l_U745 = 0.60000000;
    l_U746 = 0.01500000;
    l_U747 = 0.03500000;
    l_U748 = 200;
    l_U749 = 100;
    l_U759 = 6000;
    l_U769 = 11000;
    l_U779 = 6000;
    l_U780 = 0;
    l_U781 = 0;
    l_U782 = 0;
    l_U814 = {14.00000000, -7.00000000, 0.00000000};
    l_U817 = {-6.00000000, 0.00000000, 3.00000000};
    l_U820 = 2000;
    l_U821 = -1;
    l_U831 = 600;
    l_U841 = 1150;
    l_U851 = 1900;
    l_U852 = {0.00000000, 30.00000000, -1.00000000};
    l_U855 = {2.00000000, -40.00000000, 2.50000000};
    l_U858 = 4000;
    l_U877 = 2500;
    l_U878 = 0.00000000;
    l_U879 = 0.90000000;
    l_U880 = 0.25000000;
    l_U881 = {-1.00000000, -20.00000000, 0.00000000};
    l_U884 = -1;
    l_U885 = {-0.50000000, 2.00000000, -1.00000000};
    l_U888 = {0.00000000, 0.00000000, -10.00000000};
    l_U891 = 1.00000000;
    l_U892 = -1;
    l_U893 = {-0.50000000, -5.50000000, -1.00000000};
    l_U896 = {0.00000000, 0.00000000, -10.00000000};
    l_U899 = 1.50000000;
    l_U909 = 550;
    l_U919 = 1800;
    l_U920 = -1;
    l_U921 = {-0.70000000, -24.25000000, -1.05000000};
    l_U924 = {0.00000000, 0.00000000, -20.00000000};
    l_U927 = 1.00000000;
    l_U928 = -1;
    l_U929 = {1.50000000, -17.50000000, -1.20000000};
    l_U932 = {0.00000000, 0.00000000, -20.00000000};
    l_U935 = 1.00000000;
    l_U945 = 2225;
    l_U946 = -1;
    l_U947 = {1.50000000, -17.50000000, -1.00000000};
    l_U950 = -1;
    l_U951 = {-2.00000000, -21.00000000, -1.00000000};
    l_U957 = 0;
    l_U958 = 0;
    sub_1423( "CR", "Script s_air_Runway_2.sc is starting...", 0 );
    sub_1472();
    l_U92 = 3;
    l_U50 = 0;
    if (g_U830 == 13)
    {
        sub_1924( -620.04090000, -637.92260000, -6.74649000, 352.53850000, 5.52598000, 0.43149000 );
    }
    while (NOT IS_EXITFLAG_SET())
    {
        sub_2119();
        if (l_U95 == 0)
        {
            sub_11124();
        }
        WAIT( 0 );
    }
    sub_4573( 0 );
    sub_63448();
    sub_1423( "CO", "Saving Arcade Data main loop", 0 );
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_air_Runway_2" );
    sub_1423( "CR", "Script s_air_Runway_2.sc is terminating...", 0 );
    return;
}

void sub_1423(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1472()
{
    l_U605[0] = 1969936254;
    l_U605[1] = 1979959192;
    l_U605[2] = 877881452;
    l_U605[3] = 737677776;
    l_U605[4] = -1552305464;
    l_U605[5] = -646760381;
    l_U605[6] = -333143921;
    l_U605[7] = 279275920;
    l_U605[8] = -1268105652;
    l_U605[9] = -1623387150;
    l_U605[10] = 102195621;
    l_U605[11] = -136067778;
    l_U605[12] = -298298586;
    l_U605[13] = -2019064318;
    l_U605[14] = 2080140486;
    l_U605[15] = 446170022;
    l_U605[16] = 10807219;
    l_U605[17] = -944835128;
    l_U605[18] = -1534515949;
    l_U605[19] = -1832025700;
    l_U605[20] = -400668184;
    l_U605[21] = -132257305;
    l_U605[22] = 507765432;
    l_U605[23] = -878494344;
    l_U605[24] = 1570425160;
    l_U605[25] = 1796269108;
    l_U605[26] = 1687227279;
    l_U605[27] = 1081193277;
    l_U605[28] = -67723549;
    return;
}

void sub_1924(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_1934();
    sub_2011( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

int sub_1934()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1956() );
    }
    return 0;
}

void sub_1956()
{
    return GET_PLAYER_ID();
}

void sub_2011(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_2119()
{
    if (g_U830 == 13)
    {
        switch (l_U95)
        {
            case 0:
            if ((sub_2219()) || ((IS_PED_DEAD( sub_1934() )) || (l_U96)))
            {
                l_U95 = 1;
                sub_1423( "CR", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_2713())
            {
                l_U95 = 3;
            }
            else if ((sub_2753( 0 )) == 1)
            {
                l_U95 = 2;
            }
            break;
            case 2:
            sub_1423( "CR", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            if (NOT (IS_PED_DEAD( sub_1934() )))
            {
                l_U95 = 3;
                sub_1423( "CR", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_1423( "CR", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_1934() ))) AND (NOT (IS_PLAYER_DEAD( sub_1956() ))))
            {
                SET_PLAYER_CONTROL( sub_1956(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_1934() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_1934(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            sub_4367( "AIR_RUNWAY2_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_4573( 1 );
            l_U95 = 4;
            sub_1423( "CR", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_1423( "CR", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_6902( ref l_U56, sub_1934() );
            l_U95 = 5;
            sub_1423( "CR", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_1423( "CR", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U92 = 3;
            l_U94 = 0;
            l_U95 = 0;
            sub_1423( "CR", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_2219()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1934() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1934(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1956(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1956(), 1 );
            if ((IS_PED_VISIBLE( sub_1934() )) == 0)
            {
                SET_PED_VISIBLE( sub_1934(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_2713()
{
    return g_U648;
}

int sub_2753(int iParam0)
{
    iParam0 = 1;
    switch (l_U38)
    {
        case 0:
        if (NOT (sub_2814( ref l_U40 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1934() )))
            {
                l_U39 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_2924( ref l_U40, l_U39, 1, 1 );
            sub_3060( ref l_U40 );
        }
        if (sub_3180( ref l_U40 ))
        {
            sub_1423( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1934() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1956() )))
            {
                SET_PLAYER_CONTROL( sub_1956(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U38 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U38 = 2;
            }
            else
            {
                l_U38 = 3;
            }
        }
        break;
        case 2:
        sub_1423( "NS", "Player will QUIT", 0 );
        sub_3667();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1423( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_3667();
        return 1;
        break;
    }
    return 0;
}

int sub_2814(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_2924(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_3060(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_3180(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_3667()
{
    sub_1423( "NS", "P_PostFailRetryCleanup", 0 );
    sub_3717( ref l_U40 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1956() )))
    {
        SET_PLAYER_CONTROL( sub_1956(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U37 = 0;
    l_U37 = l_U37;
    l_U38 = 0;
    return;
}

void sub_3717(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_4367(unknown uParam0)
{
    sub_1423( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_4450( ref l_U51 );
    l_U50 = 1;
    return;
}

void sub_4450(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_4573(unknown uParam0)
{
    sub_1423( "CR", "P_CLEANUP_RUNWAY2 - START", 0 );
    ENABLE_LAST_MAN_STANDING( 1 );
    RESET_PED_MODEL_LOD_DISTANCES( 2113814688 );
    ISEQ_TERMINATE( 2116826630 );
    sub_4663( 2116826630, ref g_U1368 );
    sub_5036( l_U444 );
    sub_5036( l_U705 );
    sub_5125( l_U372 );
    sub_5125( l_U373 );
    sub_5125( l_U374 );
    sub_5125( l_U375 );
    sub_5125( l_U376 );
    sub_5125( l_U377 );
    sub_5125( l_U378 );
    sub_5125( l_U379 );
    sub_5125( l_U380 );
    sub_5125( l_U381 );
    sub_5125( l_U382 );
    sub_5125( l_U383 );
    sub_5125( l_U384 );
    sub_5125( l_U386 );
    sub_5125( l_U385 );
    sub_5125( l_U387 );
    sub_5125( l_U388 );
    sub_5125( l_U389 );
    sub_5125( l_U390 );
    sub_5125( l_U391 );
    sub_5125( l_U392 );
    sub_5369( ref l_U393 );
    sub_5125( l_U729 );
    if (NOT (IS_PED_DEAD( sub_1934() )))
    {
        DETACH_PED( sub_1934(), 1 );
    }
    sub_5472( l_U415 );
    sub_5472( l_U423 );
    SET_ALLOW_PLAYER_REACT_TO_EXPLOSION( sub_1934(), 0, 0 );
    DISPLAY_HUD( 1 );
    ENABLE_TINNITUS( 1 );
    sub_5568( uParam0 );
    sub_5785( "S_AIR_PLANE_RS_02", ref g_U1910 );
    sub_6114( "S_AIR_PLANE_RS_02", ref g_U1910 );
    sub_6289( l_U821, 0 );
    sub_6452( ref l_U821 );
    sub_6289( l_U595, 0 );
    sub_6452( ref l_U595 );
    sub_6289( l_U740, 0 );
    sub_6452( ref l_U740 );
    sub_6289( l_U741, 0 );
    sub_6452( ref l_U741 );
    sub_6694( ref l_U429 );
    sub_6694( ref l_U430 );
    sub_1423( "CR", "P_CLEANUP_RUNWAY2 - END", 0 );
    return;
}

void sub_4663(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_4775( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_4775(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_5036(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_5125(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_5369(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_5125( (uParam0^)[I] );
    }
    return;
}

void sub_5472(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_5568(boolean bParam0)
{
    sub_1423( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    else
    {
        sub_1423( "CCB", "Stopping the Finale_RS context...", 0 );
        END_CONTEXT( "Finale_RS" );
        sub_1423( "CCB", "Stopping the Finale context...", 0 );
        END_CONTEXT( "Finale" );
    }
    return;
}

void sub_5785(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_5802( uParam0, uParam1 ))
    {
        iVar4 = sub_5901( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    return;
}

int sub_5802(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_5901(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

void sub_6114(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_4775( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_6289(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
        sub_1423( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
        sub_1423( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

void sub_6452(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
        sub_1423( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
        sub_1423( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

void sub_6694(unknown uParam0)
{
    if ((uParam0^) != 0)
    {
        REMOVE_PARTICLE_FX( (uParam0^) );
        (uParam0^) = 0;
    }
    return;
}

void sub_6902(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1423( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_7086( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_8163( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_8455( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_8815( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_8455( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_8815( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_8455( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_8815( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_9100( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_8815( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_9100( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_8815( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_9593( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_9754( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1934(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1423( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_7086(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_7118( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_7118(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_8163(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_8455(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_8771( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_8771(unknown uParam0)
{
    return;
}

void sub_8815(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_9100(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_8771( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_9593(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_9754(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_7118( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_9826( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_9826(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_11124()
{
    int iVar2;

    iVar2 = l_U92;
    sub_11145( ref l_U959 );
    sub_11888();
    switch (l_U92)
    {
        case 0: break;
        case 3:
        sub_1423( "CR", "eCheckpoint = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_15303();
        sub_15703();
        sub_16113();
        l_U92 = 4;
        sub_1423( "CR", "eCheckpoint = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 4:
        sub_1423( "CR", "eCheckpoint = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_17762();
        sub_25537();
        l_U92 = 5;
        sub_1423( "CR", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 5:
        sub_1423( "CR", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        if ((sub_28689( ref g_U1368 )) AND ((sub_28562( ref g_U1910 )) AND ((sub_28441( ref g_U1638 )) AND ((sub_28314( ref g_U1783 )) AND ((sub_28187( ref g_U1429 )) AND ((sub_28066( ref g_U1247 )) AND (sub_27946( ref g_U1030 ))))))))
        {
            g_U831[13] = 1;
            if ((NOT l_U56._fU0) AND (g_U829 == 13))
            {
                sub_1423( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
                l_U92 = 1;
            }
            else
            {
                sub_1423( "AT", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
                l_U92 = 6;
            }
        }
        break;
        case 1:
        sub_1423( "CR", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUPS", 0 );
        l_U94 = 0;
        g_U846[13] = 1;
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        if ((sub_29135( ref l_U56 )) == 0)
        {
            sub_9100( sub_1934(), 879300975, 25000, 0, 0 );
            l_U92 = 2;
            sub_1423( "CR", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U92 = 6;
            sub_1423( "CR", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 2:
        sub_1423( "CR", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYERS_WEAPONS", 0 );
        if (NOT (IS_PED_DEAD( sub_1934() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_1934(), 0, 0 ) ))
            {
                g_U830 = 13;
                sub_29654( ref l_U56, g_U830, sub_1934(), g_U2014[13], g_U2129[13], g_U2168[13], g_U2207[13], 0 );
                l_U92 = 6;
                sub_1423( "CR", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 6:
        if (g_U846[13])
        {
            if (l_U94)
            {
                if (CUTSCENE_IS_LOADED( ref l_U662 ))
                {
                    l_U92 = 7;
                    sub_1423( "CR", "eCheckpointState = CP_HANDLE_MID_12B", 0 );
                }
                else if (CUTSCENE_NAMED_IS_LOADING( ref l_U662 ))
                {
                    sub_1423( "CR", "Waiting for cutscene MID_12B_FIN to load.", 0 );
                }
                else
                {
                    sub_1423( "CR", "Requesting cutscene MID_12B_FIN to load.", 0 );
                    PRE_STREAM_SEAMLESS_CUTSCENE( ref l_U662 );
                }
            }
            else
            {
                l_U92 = 7;
                sub_1423( "CR", "eCheckpointState = CP_HANDLE_MID_12B", 0 );
            }
        }
        break;
        case 7:
        if (l_U93)
        {
            sub_33655( 1, 0, 0, 1 );
            sub_39313( ref l_U635, ref l_U662, 33822, 35742, 36222, 36841, 36954, 39290, 250, 0 );
            if (l_U94)
            {
                l_U635._fU4 = 2;
            }
            else
            {
                sub_33884();
                sub_34807();
                sub_39737();
                sub_36362( 0.00000000 );
                l_U635._fU4 = 7;
                l_U635._fU104 = 0;
            }
        }
        if (sub_39952( ref l_U635 ))
        {
            if (g_U830 != 13)
            {
                g_U830 = 13;
                sub_29654( ref l_U56, g_U830, sub_1934(), g_U2014[13], g_U2129[13], g_U2168[13], g_U2207[13], 1 );
            }
            DISPLAY_HUD( 0 );
            ENABLE_CROSSHAIR( 1 );
            l_U92 = 8;
            sub_1423( "CR", "eCheckpointState = CP_GAMEPLAY_VERSUS_JETPLANE", 0 );
        }
        break;
        case 8:
        if (l_U93)
        {
            sub_3060( ref l_U451 );
            sub_3060( ref l_U720 );
            sub_1423( "MF", "Music Cue: 12", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_6", "FINALE_01_6", 0.00000000, 0, 0, -1082130432, 0 );
            sub_24487( "SCRIPT_MISSION\S_AIR_RUNWAY_02A", ref g_U1950 );
        }
        else if (IS_SCREEN_FADED_OUT())
        {
            if (NOT sub_42228())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
            sub_1423( "CR", "DO_SCREEN_FADE_IN", 0 );
        }
        sub_42488();
        sub_44443();
        sub_45021();
        sub_45199();
        sub_46433();
        if (sub_3180( ref l_U720 ))
        {
            sub_27559( ref l_U670, 0 );
            sub_1423( "CR", "Loading Cutscene 14_05_fin_concat", 0 );
        }
        if (sub_3180( ref l_U508 ))
        {
            l_U518 = 1;
            sub_3060( ref l_U519 );
            sub_1423( "CR", "Starting - P_SPEED_UP_PLANE()", 0 );
        }
        if (sub_3180( ref l_U730 ))
        {
            sub_46638();
        }
        if ((NOT (IS_PED_DEAD( sub_1934() ))) AND (DOES_OBJECT_EXIST( l_U372 )))
        {
            if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U372, sub_1934() ))
            {
                if (l_U97 == 0)
                {
                    sub_46870( 1 );
                    sub_5125( l_U372 );
                    sub_3060( ref l_U490 );
                    l_U97 = 1;
                    sub_1423( "CR", "eLeftEngineState = LEFT_ENGINE_HIT1", 0 );
                }
            }
        }
        if ((NOT (IS_PED_DEAD( sub_1934() ))) AND (DOES_OBJECT_EXIST( l_U372 )))
        {
            if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U372, sub_1934() ))
            {
                if (l_U97 == 1)
                {
                    sub_48068();
                    sub_3060( ref l_U490 );
                    sub_5125( l_U372 );
                    l_U97 = 2;
                    sub_1423( "CR", "eLeftEngineState = LEFT_ENGINE_HIT2", 0 );
                }
            }
        }
        if ((NOT (IS_PED_DEAD( sub_1934() ))) AND (DOES_OBJECT_EXIST( l_U372 )))
        {
            if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U372, sub_1934() ))
            {
                if (l_U97 == 2)
                {
                    sub_48961();
                    sub_3060( ref l_U490 );
                    sub_5125( l_U372 );
                    l_U97 = 4;
                    sub_1423( "CR", "eLeftEngineState = LEFT_ENGINE_COMPLETE", 0 );
                }
            }
        }
        if (sub_3180( ref l_U490 ))
        {
            sub_37853();
            sub_3717( ref l_U490 );
        }
        if ((NOT (IS_PED_DEAD( sub_1934() ))) AND (DOES_OBJECT_EXIST( l_U373 )))
        {
            if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U373, sub_1934() ))
            {
                if (l_U98 == 0)
                {
                    sub_49656();
                    sub_5125( l_U373 );
                    sub_3060( ref l_U499 );
                    l_U98 = 1;
                    sub_1423( "CR", "eRightEngineState = RIGHT_ENGINE_HIT1", 0 );
                }
            }
        }
        if ((NOT (IS_PED_DEAD( sub_1934() ))) AND (DOES_OBJECT_EXIST( l_U373 )))
        {
            if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U373, sub_1934() ))
            {
                if (l_U98 == 1)
                {
                    sub_50467();
                    sub_3060( ref l_U499 );
                    sub_5125( l_U373 );
                    l_U98 = 2;
                    sub_1423( "CR", "eRightEngineState = RIGHT_ENGINE_HIT2", 0 );
                }
            }
        }
        if ((NOT (IS_PED_DEAD( sub_1934() ))) AND (DOES_OBJECT_EXIST( l_U373 )))
        {
            if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( l_U373, sub_1934() ))
            {
                if (l_U98 == 2)
                {
                    sub_51175();
                    sub_3060( ref l_U499 );
                    sub_5125( l_U373 );
                    l_U98 = 4;
                    sub_1423( "CR", "eRightEngineState = RIGHT_ENGINE_COMPLETE", 0 );
                }
            }
        }
        if (sub_3180( ref l_U499 ))
        {
            sub_38334();
            sub_3717( ref l_U499 );
        }
        if ((l_U98 == 4) || ((l_U97 == 4) || (((l_U98 == 1) AND (l_U97 == 2)) || ((l_U98 == 2) AND (l_U97 == 1)))))
        {
            if (l_U400 == 0)
            {
                sub_51914();
                sub_53458();
                sub_53996( ref l_U451 );
                l_U92 = 11;
                sub_1423( "CR", "Starting SUCCESS timer", 0 );
                l_U400 = 1;
            }
        }
        if (sub_3180( ref l_U481 ))
        {
            sub_54093( ref l_U319, 1 );
            CAMERA_USE_HANDY_CAM( 0, 1065353216, 0 );
            l_U92 = 9;
            sub_1423( "CR", "eCheckpointState = CP_HANDLE_CUT_05_SUCCESS", 0 );
        }
        if (sub_3180( ref l_U451 ))
        {
            CAMERA_USE_HANDY_CAM( 0, 1065353216, 0 );
            l_U92 = 10;
            sub_1423( "CR", "eCheckpointState = CP_NIS_PLANE_ESCAPE", 0 );
        }
        break;
        case 9:
        if (l_U93 == 1)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U423 )))
            {
                STOP_PLAYBACK_RECORDED_VEHICLE( l_U423 );
            }
            if (NOT (IS_VEHICLE_DEAD( l_U415 )))
            {
                STOP_PLAYBACK_RECORDED_VEHICLE( l_U415 );
            }
            if (NOT IS_ARCADE_MODE_ACTIVE())
            {
                sub_56236( ref l_U678, ref l_U670, 54509, 55573, 55901, 56213, 250, 0 );
                l_U678._fU4 = 2;
                l_U678._fU104 = 0;
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
            DISPLAY_ARCADE_MODE_LEVEL_END( 0 );
            sub_1423( "CR", "eCheckpointState = CP_IDLE", 0 );
            l_U92 = 0;
            break;;
        }
        if ((sub_39952( ref l_U678 )) == 1)
        {
            l_U92 = 12;
            sub_1423( "CR", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 10:
        if (sub_56576())
        {
            sub_1423( "RJM", "eCheckpointState = CP_IDLE", 0 );
            l_U92 = 0;
        }
        break;
        case 11:
        if (l_U93)
        {
            l_U957 = 1;
            sub_59227();
            sub_1423( "CR", "eCheckpointState = CP_NIS_PLANE_EXPLODE", 0 );
        }
        if (sub_3180( ref l_U859 ))
        {
            DEACTIVATE_BULLET_TIME( 1, 1 );
            sub_1423( "CR", "Ending bullet time during exploding plane NIS", 0 );
        }
        if (sub_3180( ref l_U822 ))
        {
            SHAKE_CAM( l_U783._fU0, "MEDIUM_EXPLOSION_SHAKE", 0.06000000 );
            sub_1423( "CR", "Shaking camera when fuselage hits the ground", 0 );
        }
        if (sub_3180( ref l_U832 ))
        {
            SHAKE_CAM( l_U783._fU0, "MEDIUM_EXPLOSION_SHAKE", 0.04000000 );
            sub_1423( "CR", "Shaking camera when tail hits the ground", 0 );
        }
        if (sub_3180( ref l_U842 ))
        {
            SHAKE_CAM( l_U783._fU0, "MEDIUM_EXPLOSION_SHAKE", 0.04000000 );
            sub_1423( "CR", "Shaking camera when the engine hits the ground", 0 );
        }
        if (sub_3180( ref l_U900 ))
        {
            l_U884 = START_PARTICLE_FX_LOOPED_ON_OBJECT( "FIN_Plane_Sparks_Smoke_S", l_U393[3], l_U885, l_U888, l_U891 );
            l_U892 = START_PARTICLE_FX_LOOPED_ON_OBJECT( "FIN_Plane_Debris_Sparks_S", l_U393[3], l_U893, l_U896, l_U899 );
        }
        if (sub_3180( ref l_U910 ))
        {
            sub_59382( ref l_U884 );
            sub_59382( ref l_U892 );
        }
        if (sub_61070( ref l_U783, 1 ))
        {
            sub_61208();
            sub_62512();
        }
        if (l_U868._fU20)
        {
            sub_62964();
        }
        if (sub_3180( ref l_U936 ))
        {
            sub_59382( ref l_U920 );
            sub_59382( ref l_U928 );
        }
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FIN_CP_12", "PLANECRASH_CAM" )) - 300))
        {
            sub_1423( "CR", "NIS  Plane Exploded complete", 0 );
            sub_59382( ref l_U946 );
            sub_59382( ref l_U950 );
            if (l_U405)
            {
                l_U95 = 3;
            }
            else
            {
                l_U92 = 9;
            }
        }
        break;
        case 12:
        sub_1423( "CR", "eCheckpointState = CP_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U92 = 0;
        sub_1423( "CR", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    if (l_U92 != iVar2)
    {
        l_U93 = 1;
    }
    else
    {
        l_U93 = 0;
    }
    return;
}

void sub_11145(unknown uParam0)
{
    int I;
    int J;

    switch (l_U49)
    {
        case 0:
        sub_1423( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                sub_2924( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                sub_3060( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U49 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (sub_3180( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                    sub_2924( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                    sub_3060( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                            sub_2924( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                            sub_3060( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if (sub_3180( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

void sub_11888()
{
    switch (l_U954)
    {
        case 0:
        sub_1423( "CCB", "eGameComplete - STATE_CHALLENGE_IDLE", 0 );
        l_U954 = 1;
        break;
        case 1:
        if (l_U92 >= 8)
        {
            if (l_U92 >= 9)
            {
                if (l_U957)
                {
                    if (NOT IS_IN_STORY_MODE())
                    {
                        sub_1423( "CCB", "The player completed the game in Arcade mode or Chapter Select.", 0 );
                        sub_1423( "CCB", "No achievement...", 0 );
                        sub_1423( "CCB", "eGameComplete - STATE_CHALLENGE_COMPLETE", 0 );
                        l_U954 = 2;
                    }
                    else if (GET_LOWEST_USED_GAME_DIFFICULTY() == 0)
                    {
                        sub_1423( "CCB", "The player completed the game on GAMEDIFFICULTY_SUPEREASY difficulty level.", 0 );
                        sub_1423( "CCB", "No achievement...", 0 );
                        sub_1423( "CCB", "eGameComplete - STATE_CHALLENGE_COMPLETE", 0 );
                        l_U954 = 2;
                    }
                    else if (GET_LOWEST_USED_GAME_DIFFICULTY() == 1)
                    {
                        sub_1423( "CCB", "The player completed the game on GAMEDIFFICULTY_EASY difficulty level.", 0 );
                        sub_1423( "CCB", "No achievement...", 0 );
                        sub_1423( "CCB", "eGameComplete - STATE_CHALLENGE_COMPLETE", 0 );
                        l_U954 = 2;
                    }
                    else if (GET_LOWEST_USED_GAME_DIFFICULTY() == 2)
                    {
                        sub_1423( "CCB", "The player completed the game on GAMEDIFFICULTY_MEDIUM difficulty level.", 0 );
                        if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 6 )))
                        {
                            sub_1423( "CCB", "Giving the player the SP_FEEL_THE_PAYNE achievement.", 0 );
                            GIVE_ACHIEVEMENT_TO_PLAYER( 6 );
                        }
                        else
                        {
                            sub_1423( "CCB", "The player already has the SP_FEEL_THE_PAYNE achievement.", 0 );
                        }
                        sub_1423( "CCB", "eGameComplete - STATE_CHALLENGE_COMPLETE", 0 );
                        l_U954 = 2;
                    }
                    else if (GET_LOWEST_USED_GAME_DIFFICULTY() == 3)
                    {
                        sub_1423( "CCB", "The player completed the game on GAMEDIFFICULTY_HARD difficulty level.", 0 );
                        if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 6 )))
                        {
                            sub_1423( "CCB", "Giving the player the SP_FEEL_THE_PAYNE achievement.", 0 );
                            GIVE_ACHIEVEMENT_TO_PLAYER( 6 );
                        }
                        else
                        {
                            sub_1423( "CCB", "The player already has the SP_FEEL_THE_PAYNE achievement.", 0 );
                        }
                        if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 7 )))
                        {
                            sub_1423( "CCB", "Giving the player the SP_SERIOUS_PAYNE achievement.", 0 );
                            GIVE_ACHIEVEMENT_TO_PLAYER( 7 );
                        }
                        else
                        {
                            sub_1423( "CCB", "The player already has the SP_SERIOUS_PAYNE achievement.", 0 );
                        }
                        sub_1423( "CCB", "eGameComplete - STATE_CHALLENGE_COMPLETE", 0 );
                        l_U954 = 2;
                    }
                    else if (GET_LOWEST_USED_GAME_DIFFICULTY() == 4)
                    {
                        sub_1423( "CCB", "The player completed the game on GAMEDIFFICULTY_HARDCORE difficulty level.", 0 );
                        if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 6 )))
                        {
                            sub_1423( "CCB", "Giving the player the SP_FEEL_THE_PAYNE achievement.", 0 );
                            GIVE_ACHIEVEMENT_TO_PLAYER( 6 );
                        }
                        else
                        {
                            sub_1423( "CCB", "The player already has the SP_FEEL_THE_PAYNE achievement.", 0 );
                        }
                        if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 7 )))
                        {
                            sub_1423( "CCB", "Giving the player the SP_SERIOUS_PAYNE achievement.", 0 );
                            GIVE_ACHIEVEMENT_TO_PLAYER( 7 );
                        }
                        else
                        {
                            sub_1423( "CCB", "The player already has the SP_SERIOUS_PAYNE achievement.", 0 );
                        }
                        if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 9 )))
                        {
                            sub_1423( "CCB", "Giving the player the SP_FEELS_NO_PAYNE achievement.", 0 );
                            GIVE_ACHIEVEMENT_TO_PLAYER( 9 );
                        }
                        else
                        {
                            sub_1423( "CCB", "The player already has the SP_FEELS_NO_PAYNE achievement.", 0 );
                        }
                        sub_1423( "CCB", "eGameComplete - STATE_CHALLENGE_COMPLETE", 0 );
                        l_U954 = 2;
                    }
                    else if (GET_LOWEST_USED_GAME_DIFFICULTY() == 5)
                    {
                        sub_1423( "CCB", "The player completed the game on GAMEDIFFICULTY_OLDSCHOOL difficulty level.", 0 );
                        if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 8 )))
                        {
                            sub_1423( "CCB", "Giving the player the SP_MAXIMUM_PAYNE achievement.", 0 );
                            GIVE_ACHIEVEMENT_TO_PLAYER( 8 );
                        }
                        else
                        {
                            sub_1423( "CCB", "The player already has the SP_MAXIMUM_PAYNE achievement.", 0 );
                        }
                        sub_1423( "CCB", "eGameComplete - STATE_CHALLENGE_COMPLETE", 0 );
                        l_U954 = 2;
                    };;;;;;;
                }
            }
        }
        break;
        case 2: break;
    }
    switch (l_U955)
    {
        case 0:
        sub_1423( "CCB", "ePartIII - STATE_CHALLENGE_IDLE", 0 );
        l_U955 = 1;
        break;
        case 1:
        if (l_U92 >= 8)
        {
            if (l_U92 >= 9)
            {
                if (l_U957)
                {
                    if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 19 )))
                    {
                        sub_1423( "CCB", "Giving the player the SP_PART_III_COMPLETE achievement.", 0 );
                        GIVE_ACHIEVEMENT_TO_PLAYER( 19 );
                    }
                    else
                    {
                        sub_1423( "CCB", "The player already has the SP_PART_III_COMPLETE achievement.", 0 );
                    }
                    sub_1423( "CCB", "ePartIII - STATE_CHALLENGE_COMPLETE", 0 );
                    l_U955 = 2;
                }
            }
        }
        break;
        case 2: break;
    }
    switch (l_U956)
    {
        case 0:
        sub_1423( "CCB", "eOldPainless - STATE_CHALLENGE_IDLE", 0 );
        l_U956 = 1;
        break;
        case 1:
        if (l_U92 >= 8)
        {
            if (l_U92 >= 9)
            {
                if (l_U957)
                {
                    if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
                    {
                        SCRIPT_VAR_HASH_SET_INT( 1701971384, 1 );
                    }
                    else
                    {
                        sub_1423( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
                    }
                    sub_1423( "CCB", "eOldPainless - STATE_CHALLENGE_COMPLETE", 0 );
                    l_U956 = 2;
                }
            }
        }
        break;
        case 2: break;
    }
    return;
}

void sub_15303()
{
    sub_1423( "CR", "INITIALIZE_SCRIPT_DATA - START", 0 );
    l_U528 = 1.75000000;
    l_U518 = 0;
    sub_2924( ref l_U720, 1000, 1, 1 );
    sub_2924( ref l_U451, l_U450, 1, 0 );
    sub_2924( ref l_U490, 500, 1, 0 );
    sub_2924( ref l_U499, 500, 1, 0 );
    sub_2924( ref l_U481, 4000, 1, 0 );
    sub_2924( ref l_U519, l_U530, 1, 0 );
    sub_2924( ref l_U508, l_U517, 1, 0 );
    sub_2924( ref l_U730, l_U739, 1, 0 );
    sub_2924( ref l_U750, l_U759, 1, 0 );
    sub_2924( ref l_U760, l_U769, 1, 0 );
    sub_2924( ref l_U770, l_U779, 1, 0 );
    l_U97 = 0;
    l_U98 = 0;
    l_U400 = 0;
    sub_2924( ref l_U868, l_U877, 1, 0 );
    l_U405 = 0;
    l_U780 = 0;
    l_U781 = 0;
    l_U782 = 0;
    l_U99 = 0;
    l_U474 = 1.00000000;
    sub_2924( ref l_U596, l_U563 - 500, 1, 0 );
    l_U96 = 0;
    l_U957 = 0;
    l_U958 = 0;
    sub_1423( "CR", "INITIALIZE_SCRIPT_DATA - END", 0 );
    return;
}

void sub_15703()
{
    sub_1423( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U954 = 0;
    l_U955 = 0;
    l_U956 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1701971384 )))
    {
        sub_1423( "CCB", "Creating the OldPainless script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1701971384 );
        if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
        {
            sub_1423( "CCB", "The OldPainless script variable was successfully created...", 0 );
        }
        else
        {
            sub_1423( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_1423( "CCB", "The OldPainless script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1701971384, 0 );
    }
    return;
}

void sub_16113()
{
    sub_1423( "CR", "LOAD_ASSETS - START", 0 );
    sub_16190( ref l_U431, 1.00000000, 1.00000000, 1.00000000, 0.00000000, 413457302, 26, 6, 0, 0, 0 );
    sub_16190( ref l_U706, 2.00000000, 2.00000000, 2.00000000, 0.00000000, -1042440534, 7, 3, 2, 0, 0 );
    sub_16430( ref l_U170[0], "tb_TM2_R2_Dialogue[0] - SAIR_DSSTPL", -622.86000000, -37.69000000, -5.62000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16430( ref l_U170[1], "tb_TM2_R2_Dialogue[1] - SAIR_DSPCM", -612.31000000, -286.54000000, -5.62000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16430( ref l_U170[2], "tb_TM2_R2_Dialogue[2] - SAIR_DSMDN", -619.08000000, -242.87000000, -5.62000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16430( ref l_U170[3], "tb_TM2_R2_Dialogue[3] - SAIR_DSMXV5A", -618.96200000, -596.05130000, -6.73901500, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16430( ref l_U170[4], "tb_TM2_R2_Dialogue[4] - SAIR_DSMXV3A", -626.53740000, -388.75900000, -6.73923200, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16430( ref l_U170[5], "tb_TM2_R2_Dialogue[5] - SAIR_DSMXV5A", -612.17940000, -308.10200000, -6.74649000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16430( ref l_U170[6], "tb_TM2_R2_Dialogue[6] - SAIR_DSMXV3A", -627.97830000, -191.88660000, -6.74310700, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17126( ref l_U319, 7, l_U368, 10, -1, l_U369, 0, 0 );
    sub_1423( "CR", "LOAD_ASSETS - END", 0 );
    return;
}

void sub_16190(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_16430(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_17126(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (iParam0->_fU168 == 0)
    {
        sub_17154( iParam0, uParam1 );
        iParam0->_fU192 = uParam1;
        iParam0->_fU36 = uParam2;
        iParam0->_fU148 = uParam3;
        iParam0->_fU152 = uParam4;
        iParam0->_fU156 = uParam5;
        iParam0->_fU160 = uParam7;
        iParam0->_fU176 = uParam6;
    }
    sub_3717( iParam0 + 40 );
    sub_3717( iParam0 + 76 );
    sub_3717( iParam0 + 112 );
    iParam0->_fU172 = iParam0->_fU176;
    iParam0->_fU164 = 0;
    iParam0->_fU168 = 1;
    iParam0->_fU184 = 0;
    iParam0->_fU188 = 0;
    return;
}

void sub_17154(int iParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case 1:
        StrCopy( ref iParam0->_fU4, "SMALL_EXPLOSION_SHAKE", 32 );
        break;
        case 2:
        StrCopy( ref iParam0->_fU4, "MEDIUM_EXPLOSION_SHAKE", 32 );
        break;
        case 3:
        StrCopy( ref iParam0->_fU4, "LARGE_EXPLOSION_SHAKE", 32 );
        break;
        case 4:
        StrCopy( ref iParam0->_fU4, "HAND_SHAKE", 32 );
        break;
        case 5:
        StrCopy( ref iParam0->_fU4, "JOLT_SHAKE", 32 );
        break;
        case 6:
        StrCopy( ref iParam0->_fU4, "VIBRATE_SHAKE", 32 );
        break;
        case 7:
        StrCopy( ref iParam0->_fU4, "WOBBLY_SHAKE", 32 );
        break;
    }
    iParam0->_fU0 = iParam0->_fU192;
    return;
}

void sub_17762()
{
    sub_1423( "CR", "P_REQUEST_RUNWAY2_PERSISTENT_ASSETS - START", 0 );
    sub_17837( ref l_U605, ref g_U1030 );
    sub_19246( 879300975, ref g_U1247 );
    sub_20208( "level_s_fin_cp_10", ref g_U1429 );
    sub_20208( "w_sp_grnlch_aa_h", ref g_U1429 );
    sub_20208( "veh@std", ref g_U1429 );
    sub_20208( "veh@truck", ref g_U1429 );
    sub_20208( "LEVEL_S_FIN_CP_11", ref g_U1429 );
    sub_21327( "LEVEL/S_AIR/VIG_13_FIN_MAX_CAR_SHOOT.act", ref g_U1783 );
    sub_21327( "Vehicle/Vehicle_Car.act", ref g_U1783 );
    sub_22356( l_U428, ref g_U1638 );
    sub_22356( l_U531, ref g_U1638 );
    sub_22356( l_U445, ref g_U1638 );
    sub_22356( l_U473, ref g_U1638 );
    sub_23396( "S_AIR_PLANE_RS_02", ref g_U1910 );
    sub_24487( "SCRIPT_MISSION\S_AIR_RUNWAY_02B", ref g_U1950 );
    sub_1423( "CR", "P_REQUEST_RUNWAY2_PERSISTENT_ASSETS - END", 0 );
    return;
}

void sub_17837(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_17872( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_17872(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_17907( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_18038( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_17907(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_18038( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_18038( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_18038( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_18686( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_18038( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_18038( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18038(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18058( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_18058(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_18686(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_19246(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_19267( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_19399( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_19267(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_19399( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_19399( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_19399( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_18686( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_19399( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_19399( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19399(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18058( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_20208(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_20229( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_20366( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_20229(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_20366( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_20366( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_20366( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_18686( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_20366( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_20366( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20366(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18058( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_21327(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_21348( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_21487( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_21348(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being requested!!!", 0 );
                sub_21487( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is already loading!!!", 0 );
                sub_21487( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_ACTION_TREE_LOADED( uParam0 ))
                {
                    sub_21487( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ACTION_TREE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_18686( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being removed!!!", 0 );
                sub_21487( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_ACTION_TREE_LOADED( uParam0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_21487( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ACTION_TREE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_21487(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18058( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ACTION_TREE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_22356(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_22377( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_22515( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_22377(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                sub_22515( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                sub_22515( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    sub_22515( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_18686( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                sub_22515( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_22515( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22515(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18058( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_23396(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_23417( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_23558( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_23417(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                sub_23558( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                sub_23558( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        sub_23558( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                        sub_18686( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    sub_23558( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                sub_23558( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                sub_23558( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_23558(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18058( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_24487(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_24508( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_24646( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_24508(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_24646( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_24646( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_24646( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_18686( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_24646( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_24646( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_24646(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18058( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_25537()
{
    sub_1423( "AT", "P_REQUEST_RUNWAY2_NONPERSISTENT_ASSETS start", 0 );
    sub_25614( 2116826630, ref g_U1368 );
    if ((l_U94) AND (g_U829 != 13))
    {
        sub_27559( ref l_U662, 0 );
    }
    return;
}

void sub_25614(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_25649( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_25801( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_25649(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_25801( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_25801( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_25801( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_25801( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_18686( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_18686( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_25801( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_25801( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_25801(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18058( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_27559(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_27946(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_28066(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_28187(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_28314(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_28441(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_28562(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_28689(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_29135(unknown uParam0)
{
    sub_1423( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_6902( uParam0, sub_1934() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_29654(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1423( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1423( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_9754( iParam1 );
        sub_29913( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_30364( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_30364( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_30596( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_30364( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_30596( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_30596( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_30364( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_30596( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_30596( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_30596( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_30364( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_30596( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_30596( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_30596( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_30596( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_32154( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1423( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_29913(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_7118( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1423( "TEH", "Ending context", 0 );
        sub_1423( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_30364(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_30596(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_32154(int iParam0)
{
    sub_8771( "CHECKPOINT DATA" );
    sub_32193( iParam0->_fU4 );
    sub_32216( iParam0->_fU16 );
    sub_32216( iParam0->_fU20 );
    sub_32216( iParam0->_fU24 );
    sub_32259( iParam0->_fU28 );
    sub_32259( iParam0->_fU56 );
    sub_32259( iParam0->_fU60 );
    sub_32259( iParam0->_fU64 );
    sub_32259( iParam0->_fU68 );
    sub_32259( iParam0->_fU72 );
    sub_32259( iParam0->_fU76 );
    sub_32259( iParam0->_fU80 );
    sub_32259( iParam0->_fU84 );
    sub_32259( iParam0->_fU88 );
    sub_32259( iParam0->_fU92 );
    sub_32216( iParam0->_fU32 );
    sub_32259( iParam0->_fU36 );
    sub_32259( iParam0->_fU40 );
    sub_32259( iParam0->_fU44 );
    sub_32216( iParam0->_fU136 );
    sub_32464( iParam0->_fU140 );
    sub_32259( iParam0->_fU52 );
    sub_8771( "---nRightHolsterAttachmentEnabled: " );
    sub_32259( iParam0->_fU96 );
    sub_8771( "---nRightHolsterAttachmentToggled: " );
    sub_32259( iParam0->_fU100 );
    sub_8771( "---nLeftHolsterAttachmentEnabled: " );
    sub_32259( iParam0->_fU104 );
    sub_8771( "---nLeftHolsterAttachmentToggled: " );
    sub_32259( iParam0->_fU108 );
    sub_8771( "---nRifleHolsterAttachmentEnabled: " );
    sub_32259( iParam0->_fU112 );
    sub_8771( "---nRifleHolsterAttachmentToggled: " );
    sub_32259( iParam0->_fU116 );
    sub_8771( "---nRightHandAttachmentEnabled: " );
    sub_32259( iParam0->_fU120 );
    sub_8771( "---nRightHandAttachmentToggled: " );
    sub_32259( iParam0->_fU124 );
    sub_8771( "---nLeftHandAttachmentEnabled: " );
    sub_32259( iParam0->_fU128 );
    sub_8771( "---nLeftHandAttachmentToggled: " );
    sub_32259( iParam0->_fU132 );
    sub_32259( l_U1 );
    sub_32259( 144 );
    return;
}

void sub_32193(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_32216(unknown uParam0)
{
    return;
}

void sub_32259(unknown uParam0)
{
    return;
}

void sub_32464(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_33655(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1934() )))
        {
            SET_PLAYER_CONTROL( sub_1956(), 0, uParam2 );
            SET_PED_DUCKING( sub_1934(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1934() );
            }
            SET_PED_INVINCIBLE( sub_1934(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

int sub_33822()
{
    sub_1423( "CR", "F_MID_12B_FIN_PreCutsceneSetup - Start", 0 );
    sub_33884();
    sub_34807();
    sub_1423( "MF", "Music Cue: 12", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_6", "FINALE_01_6", 0.00000000, 0, 0, -1082130432, 0 );
    sub_1423( "CR", "F_MID_12B_FIN_PreCutsceneSetup - End", 0 );
    return 1;
}

void sub_33884()
{
    sub_1423( "CR", "P_SETUP_VEHICLES - START", 0 );
    l_U415 = sub_33951( 1979959192, l_U416, l_U419, 0, 0, 0 );
    if (DOES_VEHICLE_EXIST( l_U415 ))
    {
        SET_VEHICLE_CAN_BE_DAMAGED( l_U415, 0 );
        SET_VEHICLE_EXTRA( l_U415, 1, 1 );
        SET_VEHICLE_COLOUR_COMBINATION( l_U415, 0 );
        SET_VEHICLE_VISIBLE( l_U415, 0 );
    }
    l_U423 = sub_33951( 877881452, l_U424, l_U427, 0, 0, 0 );
    if (DOES_VEHICLE_EXIST( l_U423 ))
    {
        SET_VEHICLE_CAN_BE_DAMAGED( l_U423, 0 );
        SET_VEHICLE_EXTRA( l_U423, 1, 0 );
        SET_VEHICLE_EXTRA( l_U423, 2, 0 );
        SET_VEHICLE_COLOUR_COMBINATION( l_U423, 0 );
    }
    l_U729 = sub_34541( -67723549, l_U742, l_U743, l_U744, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    sub_1423( "CR", "P_SETUP_VEHICLES - END", 0 );
    return;
}

void sub_33951(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_34062( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_34062(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_8771( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_34541(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_34062( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_34807()
{
    sub_1423( "GA", "P_TM2_CREATE_DASILVA start", 0 );
    l_U444 = sub_34869( ref l_U431, l_U415, -1, 0, 0 );
    if (NOT (IS_PED_DEAD( l_U444 )))
    {
        SET_PED_PROOFS( l_U444, 1, 1, 1, 1, 1 );
        SET_PED_GORE( l_U444, 0 );
        SET_PED_VISIBLE( l_U444, 0 );
    }
    sub_1423( "GA", "P_TM2_CREATE_DASILVA end", 0 );
    return;
}

void sub_34869(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4)
{
    if ((HAS_MODEL_LOADED( iParam0->_fU16 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_34062( iParam0->_fU16, 1 );
    }
    if (((IS_VEHICLE_DEAD( uParam1 )) == 0) AND ((DOES_VEHICLE_EXIST( uParam1 )) == 1))
    {
        iParam0->_fU40 = CREATE_PED_INSIDE_VEHICLE( uParam1, iParam0->_fU24, iParam0->_fU16, uParam2, uParam4, iParam0->_fU48 );
    }
    else
    {
        SCRIPT_ASSERT( "The vehicle your trying to create a ped inside of is not valid!!!", 0 );
    }
    if (iParam3 == 1)
    {
        while ((DOES_PED_EXIST( iParam0->_fU40 )) == 0)
        {
            WAIT( 0 );
        }
    }
    sub_35183( iParam0->_fU40 );
    sub_35263( iParam0->_fU40 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        iParam0->_fU44 = 1;
    }
    return iParam0->_fU40;
}

void sub_35183(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_35263(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_35742()
{
    unknown uVar2;

    sub_1423( "CR", "P_MID_12B_FIN_CutsceneRegistration - Start", 0 );
    if (NOT (IS_PED_DEAD( sub_1934() )))
    {
        DETACH_PED( sub_1934(), 1 );
    }
    if (NOT (IS_PED_DEAD( sub_1934() )))
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1934(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_SP_GrnLch_Aa_H", 0 );
        }
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( sub_1934(), l_U415, 0, l_U420, 0.00000000, 360.00000000, 0, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_1934(), "/Global/VIG_13_FIN_MAX_CAR_SHOOT/VIG_13_FIN_BLEND_IN_ROOT" );
    }
    if (NOT (IS_PED_DEAD( l_U444 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U444, "Wlsn_Spp_Unif", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( l_U415 )))
    {
        CUTSCENE_REGISTER_VEHICLE_COPY( l_U415, "car_detective" );
    }
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U423, "plane_jet", 0 );
    }
    sub_1423( "CR", "P_MID_12B_FIN_CutsceneRegistration - End", 0 );
    return;
}

void sub_36222()
{
    if (l_U635._fU52)
    {
        sub_36260( 0, 1, 0, -859915232, -859915232, 0 );
        sub_36362( 0.00000000 );
    }
    return;
}

void sub_36260(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_36362(unknown uParam0)
{
    sub_1423( "CR", "P_START_VEHICLE_RECORDINGS_LEFTSIDE_HIT1 - START", 0 );
    sub_36452( l_U423, l_U428, uParam0, l_U447, 0 );
    sub_36452( l_U415, l_U445, uParam0, l_U446, 0 );
    sub_1423( "CR", "P_START_VEHICLE_RECORDINGS_LEFTSIDE_HIT1 - END", 0 );
    return;
}

void sub_36452(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3, boolean bParam4)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
    }
    sub_36503( uParam1, 1 );
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
        SET_PLAYBACK_SPEED( uParam0, uParam2 );
        if (fParam3 > 0.00000000)
        {
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, fParam3 );
        }
    }
    if (bParam4)
    {
        while ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
        {
            sub_8771( "Waiting for vehicle to start playing recorded path." );
            WAIT( 0 );
        }
    }
    return;
}

void sub_36503(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_36841()
{
    sub_1423( "CR", "F_MID_12B_FIN_PostCutscene - Start", 0 );
    sub_1423( "CR", "F_MID_12B_FIN_PostCutscene - End", 0 );
    return 1;
}

void sub_36954()
{
    sub_1423( "CR", "P_MID_12B_FIN_PrepareBlendout - Start", 0 );
    sub_37015();
    sub_37539();
    SET_CAMERA_OVERRIDE( "FINALE_GRENADE_FRONT_AIM", "FINALE_GRENADE_FRONT_AIM", 0, 1, 1 );
    LOAD_SCENE( g_U2014[13] );
    sub_37725();
    sub_37779();
    CAMERA_USE_HANDY_CAM( 1, 5, 0 );
    sub_39047( ref l_U319 );
    CAMERA_USE_HANDY_CAM( 1, l_U318, 0 );
    ENABLE_TINNITUS( 0 );
    if (NOT l_U94)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 47.50000000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[13], 1065353216, 0 );
    }
    else
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[13], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[13], 1065353216, 0 );
    }
    sub_1423( "CR", "P_MID_12B_FIN_PrepareBlendout - End", 0 );
    return;
}

void sub_37015()
{
    sub_1423( "CR", "P_SETUP_PLAYER - START", 0 );
    SET_CAMERA_OVERRIDE( "FINALE_GRENADE_FRONT_AIM", "FINALE_GRENADE_FRONT_AIM", 0, 1, 1 );
    SET_RAIL_RELATIVE_DIR( 5, 0 );
    SET_CAM_VIEW_MODE( 1 );
    if (NOT (IS_PED_DEAD( sub_1934() )))
    {
        REMOVE_ALL_PED_WEAPONS( sub_1934() );
        sub_37188( sub_1934(), 879300975, 25000, 0, 0 );
        PED_ACTION_TREE_PLAY_NODE( sub_1934(), "/Global/VIG_13_FIN_MAX_CAR_SHOOT/VIG_13_FIN_ROOT" );
        SET_ALLOW_PLAYER_REACT_TO_EXPLOSION( sub_1934(), 1, 0 );
        ATTACH_PED_TO_VEHICLE( sub_1934(), l_U415, 0, l_U420, 0, 360.00000000, 1, 0, 0, 1 );
    }
    sub_1423( "CR", "P_SETUP_PLAYER - END", 0 );
    return;
}

void sub_37188(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                sub_37336( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_37336(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_37539()
{
    sub_1423( "SA", "P_TM2_SETUP_WEATHER_TOD", 0 );
    sub_37586();
    return;
}

void sub_37586()
{
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
    FREEZE_TIME_OF_DAY( 6, 0 );
    return;
}

void sub_37725()
{
    sub_1423( "CCB", "P_START_SP_CHALLENGES", 0 );
    return;
}

void sub_37779()
{
    sub_1423( "CR", "P_START_VERSUS_JETPLANE_GAMEPLAY - START", 0 );
    sub_36362( l_U528 );
    sub_37853();
    sub_38334();
    FINALE_GRENADE_LAUNCHER_SETTINGS( 1, 877881452, 737677776, -1552305464 );
    sub_3060( ref l_U508 );
    sub_3060( ref l_U730 );
    sub_3060( ref l_U750 );
    sub_3060( ref l_U760 );
    sub_38688( "S_AIR_PLANE_RS_02", ref g_U1910 );
    l_U740 = GET_SOUND_ID();
    PLAY_SOUND_FRONTEND( l_U740, "S_AIR_PLANE_RS_PLANE_FLYBY_START" );
    sub_1423( "CR", "P_START_VERSUS_JETPLANE_GAMEPLAY - END", 0 );
    return;
}

void sub_37853()
{
    sub_1423( "GA", "P_TM2_CREATE_LEFT_SIDE_ENGINE_TARGET start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        l_U372 = sub_37972( 737677776, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U372 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U372, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( l_U372, 1 );
        }
    }
    sub_1423( "GA", "P_TM2_CREATE_LEFT_SIDE_ENGINE_TARGET end", 0 );
    return;
}

void sub_37972(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_34062( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_38334()
{
    sub_1423( "GA", "P_TM2_CREATE_RIGHT_SIDE_ENGINE_TARGET start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        l_U373 = sub_37972( -1552305464, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U373 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U373, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( l_U373, 1 );
        }
    }
    sub_1423( "GA", "P_TM2_CREATE_RIGHT_SIDE_ENGINE_TARGET end", 0 );
    return;
}

void sub_38688(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_5802( uParam0, uParam1 ))
    {
        iVar4 = sub_5901( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

void sub_39047(int iParam0)
{
    sub_3717( iParam0 + 40 );
    sub_3717( iParam0 + 76 );
    sub_3717( iParam0 + 112 );
    iParam0->_fU172 = 1;
    iParam0->_fU164 = 0;
    return;
}

int sub_39290()
{
    return 1;
}

void sub_39313(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_1423( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_39438( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 39398, 39416, uParam8 );
}

void sub_39398()
{
    return;
}

int sub_39416()
{
    return 1;
}

void sub_39438(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_39737()
{
    sub_1423( "CR", "P_SET_DASILVA_AND_PLANE_VISIBLE - START", 0 );
    if (NOT (IS_PED_DEAD( l_U444 )))
    {
        SET_PED_VISIBLE( l_U444, 1 );
    }
    if (DOES_VEHICLE_EXIST( l_U415 ))
    {
        SET_VEHICLE_VISIBLE( l_U415, 1 );
    }
    sub_1423( "CR", "P_SET_DASILVA_AND_PLANE_VISIBLE - END", 0 );
    return;
}

void sub_39952(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_1423( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_1423( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_1423( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_1423( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_1423( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_1423( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_27559( iParam0->_fU0, 0 );
            sub_1423( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_33655( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_33655( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_1423( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_41193( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_33655( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_41542( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_41542( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_41193(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_1934() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_1934(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1934(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1934(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1934(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1934(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_41542(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1934() )))
    {
        SET_PLAYER_CONTROL( sub_1956(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1934(), 0 );
        if (bParam0)
        {
            sub_41623();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_41623()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1934() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1934(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1934(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1934(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1934(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

int sub_42228()
{
    if (l_U50)
    {
        sub_1423( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U50 = 0;
        return 1;
        break;
    }
    sub_1423( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

void sub_42488()
{
    if ((sub_42506( ref l_U170[0], 0 )) == 1)
    {
        sub_42658( ref l_U100 );
        sub_42658( ref l_U110 );
        sub_42754( 2, l_U444, "DA_SILVA", ref l_U110, 2, 0 );
        sub_42972( "SAIR_DSSTPL", ref l_U110, 8, 1 );
    }
    if ((sub_42506( ref l_U170[2], 0 )) == 1)
    {
        ;
    }
    if ((sub_42506( ref l_U170[4], 0 )) == 1)
    {
        sub_42658( ref l_U130 );
        sub_42658( ref l_U120 );
        sub_42754( 2, l_U444, "DA_SILVA", ref l_U120, 2, 0 );
        sub_42972( "SAIR_DSMDN", ref l_U120, 8, 1 );
    }
    if ((sub_42506( ref l_U170[3], 0 )) == 1)
    {
        sub_42658( ref l_U130 );
        sub_42754( 1, sub_1934(), "MAX", ref l_U130, 2, 0 );
        sub_42754( 2, l_U444, "DA_SILVA", ref l_U130, 2, 0 );
        sub_42972( "SAIR_VIG13J", ref l_U130, 8, 1 );
        SET_PED_PRIMARY_LOOKAT( sub_1934(), l_U444 );
        l_U958 = 1;
    }
    if ((sub_42506( ref l_U170[5], 0 )) == 1)
    {
        sub_42658( ref l_U140 );
        sub_42754( 1, sub_1934(), "MAX", ref l_U140, 2, 0 );
        sub_42754( 2, l_U444, "DA_SILVA", ref l_U140, 2, 0 );
        sub_42972( "SAIR_DSPCM", ref l_U140, 8, 1 );
    }
    if ((sub_42506( ref l_U170[6], 0 )) == 1)
    {
        sub_42658( ref l_U150 );
        sub_42754( 2, l_U444, "DA_SILVA", ref l_U150, 2, 0 );
        sub_42972( "SAIR_DSMXV22A", ref l_U150, 8, 1 );
        SET_PED_PRIMARY_LOOKAT( sub_1934(), l_U444 );
    }
    if ((l_U958) AND ((NOT (sub_44205( l_U150 ))) AND (NOT (sub_44205( l_U130 )))))
    {
        sub_37336( "CLEARING PRIMARY LOOKAT" );
        CLEAR_PED_PRIMARY_LOOKAT( sub_1934() );
        l_U958 = 0;
    }
    return;
}

void sub_42506(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_42548( sub_1934(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_42548(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_42658(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_42754(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_42972(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_42996( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_42996(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_43051( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_43051(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_43086( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_43580( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_43086(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_43580(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_44205(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_44218( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_44218(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_44443()
{
    if (l_U97 == 1)
    {
        if (DOES_OBJECT_EXIST( l_U378 ))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( l_U378, "P_LEFT_ENG_2_HB", "ap_anim_jet" )))
            {
                sub_1423( "GA", "P_LEFT_ENG_2_HB done anim, deleting.", 0 );
                sub_5125( l_U378 );
            }
        }
    }
    if (l_U97 == 3)
    {
        if (DOES_OBJECT_EXIST( l_U381 ))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( l_U381, "P_LEFT_ENG_3_HA", "ap_anim_jet" )))
            {
                sub_1423( "GA", "P_LEFT_ENG_3_HA done anim, deleting.", 0 );
                sub_5125( l_U381 );
            }
        }
    }
    if (l_U98 == 1)
    {
        if (DOES_OBJECT_EXIST( l_U385 ))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( l_U385, "P_RIGHT_ENG_1_HA", "ap_anim_jet" )))
            {
                sub_1423( "GA", "P_RIGHT_ENG_1_HA done anim, deleting.", 0 );
                sub_5125( l_U385 );
            }
        }
    }
    if (l_U98 == 3)
    {
        if (DOES_OBJECT_EXIST( l_U391 ))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( l_U391, "P_RIGHT_ENG_4_HA", "ap_anim_jet" )))
            {
                sub_1423( "GA", "P_RIGHT_ENG_4_HA done anim, deleting.", 0 );
                sub_5125( l_U391 );
            }
        }
    }
    return;
}

void sub_45021()
{
    if ((l_U518 == 1) AND (sub_3180( ref l_U519 )))
    {
        l_U528 += l_U529;
        sub_45079( l_U423, l_U528 );
        sub_1423( "CR", "Increasing Plane speed", 0 );
        sub_3717( ref l_U519 );
        sub_3060( ref l_U519 );
    }
    return;
}

void sub_45079(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            SET_PLAYBACK_SPEED( uParam0, uParam1 );
        }
    }
    return;
}

void sub_45199()
{
    sub_45213( ref l_U319 );
    if (IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1934() ), l_U370 ))
    {
        if (IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1934() ), l_U370 / 4 ))
        {
            sub_45421( "SMALL_EXPLOSION_SHAKE", l_U371 );
            sub_1423( "CR", "Shaking Camera - Big - Explosion has gone off within 25m to the player", 0 );
        }
        else if (IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1934() ), l_U370 / 2 ))
        {
            sub_45421( "SMALL_EXPLOSION_SHAKE", l_U371 / 2 );
            sub_1423( "CR", "Shaking Camera - Medium - Explosion has gone off within 50m to the player", 0 );
        }
        else
        {
            sub_45421( "SMALL_EXPLOSION_SHAKE", l_U371 / 4 );
            sub_1423( "CR", "Shaking Camera - Small - Explosion has gone off within 100m to the player", 0 );
        }
    }
    if (((NOT l_U780) AND (l_U750._fU16)) || (sub_3180( ref l_U750 )))
    {
        sub_45421( "LARGE_EXPLOSION_SHAKE", l_U746 );
        if (NOT l_U781)
        {
            SET_PAD_SHAKE( 0, 5000, l_U749 );
            l_U781 = 1;
        }
    }
    if (((NOT l_U782) AND (l_U760._fU16)) || (sub_3180( ref l_U760 )))
    {
        sub_45421( "LARGE_EXPLOSION_SHAKE", l_U747 );
        if (NOT l_U780)
        {
            SET_PAD_SHAKE( 0, l_U779, l_U748 );
            l_U780 = 1;
            sub_3060( ref l_U770 );
        }
    }
    if ((l_U770._fU16) || (sub_3180( ref l_U770 )))
    {
        l_U782 = 1;
    }
    return;
}

void sub_45213(int iParam0)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam0->_fU164 == 0)
        {
            sub_2924( iParam0 + 40, iParam0->_fU148, 1, 0 );
            sub_3060( iParam0 + 40 );
            if (iParam0->_fU152 > 0)
            {
                sub_2924( iParam0 + 76, iParam0->_fU152, 1, 0 );
                sub_3060( iParam0 + 76 );
            }
            iParam0->_fU164 = 1;
        }
        if (sub_3180( iParam0 + 40 ))
        {
            sub_1423( "ML", "P_HANDLE_CAM_SHAKE is shaking the camera", "---" );
            sub_45421( iParam0 + 4, iParam0->_fU36 );
            if (iParam0->_fU156 > 0)
            {
                sub_2924( iParam0 + 112, iParam0->_fU156, 1, 0 );
                sub_3060( iParam0 + 112 );
            }
        }
        if (sub_3180( iParam0 + 112 ))
        {
            sub_45421( iParam0 + 4, iParam0->_fU36 );
            sub_2924( iParam0 + 112, iParam0->_fU156, 1, 0 );
            sub_3060( iParam0 + 112 );
        }
        if (sub_3180( iParam0 + 76 ))
        {
            sub_1423( "ML", "P_HANDLE_CAM_SHAKE is done shaking the camera", "---" );
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
            sub_3717( iParam0 + 112 );
            iParam0->_fU172 = 0;
        }
    }
    return;
}

void sub_45421(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    SHAKE_GAMEPLAY_CAM( uParam0, uParam1 );
    return;
}

void sub_46433()
{
    if (GET_ADRENALINE_AMT() < 0.50000000)
    {
        SET_ADRENALINE_AMT( 1.00000000 );
    }
    return;
}

void sub_46638()
{
    sub_1423( "CR", "P_START_747_ANIM - Start", 0 );
    if (DOES_OBJECT_EXIST( l_U729 ))
    {
        PLAY_OBJECT_ANIM( l_U729, "P_AP_747_A", "ap_objModels", 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U729, "P_AP_747_A", "ap_objModels", l_U745 );
    }
    return;
}

void sub_46870(boolean bParam0)
{
    sub_1423( "GA", "P_TM2_LEFT_SIDE_ENGINE_HIT1B start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        SET_VEHICLE_EXTRA( l_U423, 1, 1 );
        l_U429 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "FIN_Engine_Dest_loop_S", l_U423, l_U401, l_U403, l_U404, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
        if (NOT (DOES_OBJECT_EXIST( l_U374 )))
        {
            l_U374 = sub_37972( -646760381, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U374 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U374, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
        sub_5125( l_U375 );
        sub_5125( l_U376 );
        if (NOT (DOES_OBJECT_EXIST( l_U377 )))
        {
            l_U377 = sub_37972( -1268105652, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U377 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U377, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U377, "P_LEFT_ENG_2_HA", "ap_anim_jet", 0.00000000, 1, 0 );
            }
        }
        if (bParam0)
        {
            sub_5125( l_U378 );
        }
        else if (NOT (DOES_OBJECT_EXIST( l_U378 )))
        {
            l_U378 = sub_37972( -1623387150, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U378 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U378, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U378, "P_LEFT_ENG_2_HB", "ap_anim_jet", 0.00000000, 0, 1 );
            }
        }
        if (NOT (DOES_OBJECT_EXIST( l_U379 )))
        {
            l_U379 = sub_37972( 102195621, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U379 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U379, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
        if (NOT (DOES_OBJECT_EXIST( l_U380 )))
        {
            l_U380 = sub_37972( -136067778, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U380 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U380, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U380, "P_LEFT_ENG_2_HD", "ap_anim_jet", 0.00000000, 1, 0 );
            }
        }
    }
    sub_1423( "GA", "P_TM2_LEFT_SIDE_ENGINE_HIT1B end", 0 );
    return;
}

void sub_48068()
{
    sub_1423( "GA", "P_TM2_LEFT_SIDE_ENGINE_HIT2A start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        SET_VEHICLE_EXTRA( l_U423, 1, 1 );
        if (NOT (DOES_OBJECT_EXIST( l_U374 )))
        {
            l_U374 = sub_37972( -646760381, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U374 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U374, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
        sub_5125( l_U377 );
        sub_5125( l_U378 );
        sub_5125( l_U379 );
        if (NOT (DOES_OBJECT_EXIST( l_U380 )))
        {
            l_U380 = sub_37972( -136067778, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U380 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U380, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U380, "P_LEFT_ENG_2_HD", "ap_anim_jet", 0.00000000, 1, 0 );
            }
        }
        l_U381 = sub_37972( -298298586, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U381 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U381, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U381, "P_LEFT_ENG_3_HA", "ap_anim_jet", 0.00000000, 0, 1 );
        }
        l_U382 = sub_37972( -2019064318, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U382 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U382, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
    sub_1423( "GA", "P_TM2_LEFT_SIDE_ENGINE_HIT2A end", 0 );
    return;
}

void sub_48961()
{
    sub_1423( "GA", "P_TM2_LEFT_SIDE_ENGINE_HIT2B start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        SET_VEHICLE_EXTRA( l_U423, 1, 1 );
        sub_5125( l_U381 );
        sub_5125( l_U382 );
        if (NOT (DOES_OBJECT_EXIST( l_U380 )))
        {
            l_U380 = sub_37972( -136067778, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U380 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U380, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U380, "P_LEFT_ENG_2_HD", "ap_anim_jet", 0.00000000, 1, 0 );
            }
        }
        if (NOT (DOES_OBJECT_EXIST( l_U383 )))
        {
            l_U383 = sub_37972( 2080140486, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U383 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U383, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U383, "P_LEFT_ENG_4_HC", "ap_anim_jet", 0.00000000, 1, 0 );
            }
        }
    }
    sub_1423( "GA", "P_TM2_LEFT_SIDE_ENGINE_HIT2B end", 0 );
    return;
}

void sub_49656()
{
    sub_1423( "GA", "P_TM2_RIGHT_SIDE_ENGINE_HIT1B start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        SET_VEHICLE_EXTRA( l_U423, 2, 1 );
        l_U430 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "FIN_Engine_Dest_loop_S", l_U423, l_U402, l_U404, l_U404, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
        if (NOT (DOES_OBJECT_EXIST( l_U384 )))
        {
            l_U384 = sub_37972( 446170022, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U384 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U384, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
        sub_5125( l_U386 );
        if (NOT (DOES_OBJECT_EXIST( l_U387 )))
        {
            l_U387 = sub_37972( -1534515949, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U387 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U387, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
                PLAY_OBJECT_ANIM( l_U387, "P_RIGHT_ENG_2_HA", "ap_anim_jet", 0.00000000, 1, 0 );
            }
        }
        if (NOT (DOES_OBJECT_EXIST( l_U388 )))
        {
            l_U388 = sub_37972( -1832025700, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U388 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U388, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
    }
    sub_1423( "GA", "P_TM2_RIGHT_SIDE_ENGINE_HIT1B end", 0 );
    return;
}

void sub_50467()
{
    sub_1423( "GA", "P_TM2_RIGHT_SIDE_ENGINE_HIT2A start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        SET_VEHICLE_EXTRA( l_U423, 2, 1 );
        if (NOT (DOES_OBJECT_EXIST( l_U384 )))
        {
            l_U384 = sub_37972( 446170022, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U384 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U384, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
        sub_5125( l_U387 );
        sub_5125( l_U388 );
        l_U389 = sub_37972( -400668184, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U389 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U389, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        }
        l_U390 = sub_37972( -132257305, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U390 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U390, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U390, "P_RIGHT_ENG_3_HB", "ap_anim_jet", 0.00000000, 1, 0 );
        }
    }
    sub_1423( "GA", "P_TM2_RIGHT_SIDE_ENGINE_HIT2A end", 0 );
    return;
}

void sub_51175()
{
    sub_1423( "GA", "P_TM2_RIGHT_SIDE_ENGINE_HIT2B start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        SET_VEHICLE_EXTRA( l_U423, 2, 1 );
        if (NOT (DOES_OBJECT_EXIST( l_U384 )))
        {
            l_U384 = sub_37972( 446170022, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U384 ))
            {
                ATTACH_OBJECT_TO_VEHICLE( l_U384, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            }
        }
        sub_5125( l_U389 );
        sub_5125( l_U390 );
        l_U391 = sub_37972( 507765432, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U391 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U391, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U391, "P_RIGHT_ENG_4_HA", "ap_anim_jet", 0.00000000, 0, 1 );
        }
        l_U392 = sub_37972( -878494344, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U392 ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U392, l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
    sub_1423( "GA", "P_TM2_RIGHT_SIDE_ENGINE_HIT2B end", 0 );
    return;
}

void sub_51914()
{
    sub_1423( "CR", "P_TM2_ENGINE_HIT_COMPLETE start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U423 )))
    {
        l_U393[0] = sub_37972( 1570425160, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        l_U393[1] = sub_37972( 1796269108, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        l_U393[2] = sub_37972( 1687227279, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        l_U393[3] = sub_37972( 1081193277, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        l_U393[4] = sub_37972( -646760381, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        l_U393[5] = sub_37972( 446170022, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U423 ), 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U393[0] ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U393[0], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U393[0], "P_AN_FUSPRT_AB", "ap_anim_jet", 0.00000000, 0, 1 );
        }
        if (DOES_OBJECT_EXIST( l_U393[1] ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U393[1], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U393[1], "P_AN_FUSPRT_AA", "ap_anim_jet", 0.00000000, 0, 1 );
        }
        if (DOES_OBJECT_EXIST( l_U393[2] ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U393[2], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U393[2], "P_AN_TALEXP_AA", "ap_anim_jet", 0.00000000, 0, 1 );
        }
        if (DOES_OBJECT_EXIST( l_U393[3] ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U393[3], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U393[3], "P_AN_JETBOD_AA", "ap_anim_jet", 0.00000000, 0, 1 );
            START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "FIN_Explo_Plane_S", l_U393[3], 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
            START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "Veh_Explo_Truck_S", l_U393[3], 0.00000000, -5.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
        }
        if (DOES_OBJECT_EXIST( l_U393[4] ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U393[4], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U393[4], "P_AN_EXTRA_1_SWP", "ap_anim_jet", 0.00000000, 0, 1 );
        }
        if (DOES_OBJECT_EXIST( l_U393[5] ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U393[5], l_U423, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            PLAY_OBJECT_ANIM( l_U393[5], "P_AN_EXTRA_2_SWP", "ap_anim_jet", 0.00000000, 0, 1 );
        }
        if (NOT (IS_VEHICLE_DEAD( l_U423 )))
        {
            SET_VEHICLE_VISIBLE( l_U423, 0 );
        }
        sub_5125( l_U372 );
        sub_5125( l_U373 );
        sub_5125( l_U374 );
        sub_5125( l_U375 );
        sub_5125( l_U376 );
        sub_5125( l_U377 );
        sub_5125( l_U378 );
        sub_5125( l_U379 );
        sub_5125( l_U380 );
        sub_5125( l_U381 );
        sub_5125( l_U382 );
        sub_5125( l_U383 );
        sub_5125( l_U384 );
        sub_5125( l_U386 );
        sub_5125( l_U385 );
        sub_5125( l_U387 );
        sub_5125( l_U388 );
        sub_5125( l_U389 );
        sub_5125( l_U390 );
        sub_5125( l_U391 );
        sub_5125( l_U392 );
    }
    sub_1423( "CR", "P_TM2_ENGINE_HIT_COMPLETE end", 0 );
    return;
}

void sub_53458()
{
    sub_1423( "CR", "P_PLAY_747_FINALSEQUENCE - Start", 0 );
    l_U409 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1934() )};
    l_U409._fU0 += l_U412;
    l_U409._fU4 += l_U413;
    l_U409._fU8 += l_U414;
    if (((GET_OBJECT_ANIM_CURRENT_TIME( l_U729, "P_AP_747_A", "ap_objModels" )) <= l_U407) AND ((GET_OBJECT_ANIM_CURRENT_TIME( l_U729, "P_AP_747_A", "ap_objModels" )) >= l_U406))
    {
        if (DOES_OBJECT_EXIST( l_U729 ))
        {
            SET_OBJECT_COORDS( l_U729, l_U409 );
            PLAY_OBJECT_ANIM( l_U729, "P_AP_747_A", "ap_objModels", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( l_U729, "P_AP_747_A", "ap_objModels", l_U408 );
            SET_OBJECT_ANIM_SPEED( l_U729, "P_AP_747_A", "ap_objModels", 0.50000000 );
        }
        sub_6289( l_U740, 0 );
        sub_6452( ref l_U740 );
        l_U741 = GET_SOUND_ID();
        PLAY_SOUND_FRONTEND( l_U741, "S_AIR_PLANE_RS_PLANE_FLYBY_END" );
    }
    sub_1423( "CR", "P_PLAY_747_FINALSEQUENCE - End", 0 );
    return;
}

void sub_53996(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_54093(int iParam0, int iParam1)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam1 == 1)
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam1 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam1 );
        }
        else
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
        }
        sub_3717( iParam0 + 40 );
        sub_3717( iParam0 + 76 );
        sub_3717( iParam0 + 112 );
        iParam0->_fU172 = 0;
    }
    return;
}

int sub_54509()
{
    l_U705 = sub_54523( ref l_U706 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "CS_Intro_fireloop_S", 64922, 1113, -6.70000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "CS_Intro_fireloop_Sm_S", 64925, 1118, -6.20000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "CS_Intro_fireloop_Sm_S", 64922, 1113, -6.70000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "Ambient_Furnace_Fire_S", 64918, 1123, -6.50000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "Ambient_AP_Smoke_S", 64918, 1123, -6.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "Ambient_Furnace_Fire_S", -623.50000000, 1121, -6.80000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "Ambient_AP_Smoke_S", -623.50000000, 1121, -6.10000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    START_PARTICLE_FX_LOOPED_AT_COORD( "Ambient_AP_Smoke_S", 64915, 1110, -6.40000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    return 1;
}

void sub_54523(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_34062( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_35183( iParam0->_fU40 );
    sub_35263( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_55573()
{
    sub_1423( "MF", "P_14_05_REGISTER - START", 0 );
    if (NOT (IS_PED_DEAD( l_U705 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U705, "Vict_Crash", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U444 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U444, "Wlsn_Spp_Unif", 0 );
    }
    if (NOT (IS_PED_DEAD( sub_1934() )))
    {
        DETACH_PED( sub_1934(), 1 );
        REMOVE_ALL_PED_WEAPONS( sub_1934() );
    }
    sub_1423( "CO", "SET_HIGHEST_ARCADE_LEVEL_UNLOCKED", 0 );
    SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 17 );
    SET_HIGHEST_DIFFICULTY_BEAT();
    CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
    CUTSCENE_ENABLE_SKIP( 0 );
    CUTSCENE_REGISTER_SWITCH_TO_LEVEL_NAME( "s_beach" );
    DISABLE_FADE_BETWEEN_SP_LEVELS();
    sub_1423( "MF", "P_14_05_REGISTER - END", 0 );
    return;
}

void sub_55901()
{
    if (l_U678._fU52)
    {
        sub_1423( "MF", "Music Cue: 12.2", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_2", "FINALE_01_2", 0, 5000, 7000, -1082130432, 0 );
        CAMERA_ANIMATED_STOP( 0, 0 );
    }
    if (GET_CUTSCENE_TIME_MS() >= 52770)
    {
        if (NOT l_U719)
        {
            l_U719 = 1;
            if (NOT (IS_PED_DEAD( l_U705 )))
            {
                sub_1423( "CCB", "Swapping Victor to the M14_AP_Vict_APL scene ped...", 0 );
                SET_PERSISTENT_PED_VARIATION_ENUM( l_U705, -1593189117 );
            }
            sub_1423( "MF", "Music Cue: 12_2a", 0 );
            AUDIO_MUSIC_SUSPEND( 7000 );
        }
    }
    return;
}

int sub_56213()
{
    return 1;
}

void sub_56236(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_1423( "MSWW", "CutSys_CreateStandaloneCutscene", "###" );
    return sub_39438( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam7, 0, 56313, 56331, 0, 39398, 39416, uParam6 );
}

void sub_56313()
{
    return;
}

int sub_56331()
{
    return 1;
}

int sub_56576()
{
    switch (l_U99)
    {
        case 0:
        sub_36452( l_U423, l_U531, 1.00000000, 47150.00000000, 0 );
        sub_33655( 1, 0, 0, 1 );
        ENABLE_CROSSHAIR( 0 );
        sub_1423( "RJM", "IS_MID_15_FAILURE_SCENE_COMPLETE - Going to FAILURE_SCENE_FRAME1", 0 );
        l_U99 = 1;
        break;
        case 1:
        sub_5125( l_U729 );
        if ((ISEQ_QUERY_STATE( 2116826630, 3 )) == 0)
        {
            if (NOT (IS_PED_DEAD( sub_1934() )))
            {
                ISEQ_REGISTER_ENTITY( 2116826630, "Max", sub_1934(), 0 );
            }
            sub_5036( l_U444 );
            l_U444 = sub_54523( ref l_U431 );
            if (NOT (IS_PED_DEAD( l_U444 )))
            {
                SET_PED_PROOFS( l_U444, 1, 1, 1, 1, 1 );
                SET_PED_GORE( l_U444, 0 );
                DETACH_PED( l_U444, 1 );
                ATTACH_PED_TO_VEHICLE( l_U444, l_U415, 0, l_U478, 180, 360.00000000, 1, 0, 0, 1 );
                ISEQ_REGISTER_ENTITY( 2116826630, "DaSilva", l_U444, 0 );
            }
            ISEQ_START( 2116826630 );
        }
        CAMERA_PLAY_ANIMATED( "LEVEL_S_FIN_CP_12", "MID_15_FIN_JET_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
        sub_57077();
        l_U595 = GET_SOUND_ID();
        PLAY_SOUND_FRONTEND( l_U595, "S_AIR_PLANE_RS_FAIL" );
        sub_2924( ref l_U460, l_U469, 1, 0 );
        sub_3060( ref l_U460 );
        sub_1423( "RJM", "IS_MID_15_FAILURE_SCENE_COMPLETE - Going to FAILURE_SCENE_WAIT_FOR_PLANE_SHOT", 0 );
        l_U99 = 2;
        break;
        case 2:
        if (sub_3180( ref l_U460 ))
        {
            sub_36452( l_U415, l_U473, 1.00000000, l_U471, 0 );
            if (NOT (IS_VEHICLE_DEAD( l_U415 )))
            {
                if (NOT (IS_PED_DEAD( sub_1934() )))
                {
                    DETACH_PED( sub_1934(), 1 );
                    ATTACH_PED_TO_VEHICLE( sub_1934(), l_U415, 0, l_U475, 0, 360.00000000, 1, 0, 0, 1 );
                }
            }
            sub_1423( "RJM", "IS_MID_15_FAILURE_SCENE_COMPLETE - Going to FAILURE_SCENE_ONE_FRAME_FOR_MAX_CAM", 0 );
            l_U99 = 3;
        }
        break;
        case 3:
        sub_5472( l_U423 );
        sub_5125( l_U372 );
        sub_5125( l_U373 );
        sub_5125( l_U374 );
        sub_5125( l_U375 );
        sub_5125( l_U376 );
        sub_5125( l_U377 );
        sub_5125( l_U378 );
        sub_5125( l_U379 );
        sub_5125( l_U380 );
        sub_5125( l_U381 );
        sub_5125( l_U382 );
        sub_5125( l_U383 );
        sub_5125( l_U384 );
        sub_5125( l_U386 );
        sub_5125( l_U385 );
        sub_5125( l_U387 );
        sub_5125( l_U388 );
        sub_5125( l_U389 );
        sub_5125( l_U390 );
        sub_5125( l_U391 );
        sub_5125( l_U392 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_FIN_CP_12", "MID_15_FIN_MAX_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
        sub_1423( "RJM", "IS_MID_15_FAILURE_SCENE_COMPLETE - Going to FAILURE_SCENE_WAIT_FOR_CAR_DECELERATE", 0 );
        sub_58171();
        l_U99 = 4;
        break;
        case 4:
        if (NOT (IS_VEHICLE_DEAD( l_U415 )))
        {
            if ((sub_58387( l_U415, l_U473 )) >= l_U472)
            {
                SET_PLAYBACK_SPEED( l_U415, 0.00000000 );
                if (NOT (IS_PED_DEAD( sub_1934() )))
                {
                    PED_SET_ACTION_INTENTION( sub_1934(), 47, 1000, 0, 0, 0 );
                }
                if (NOT (IS_PED_DEAD( l_U444 )))
                {
                    PED_SET_ACTION_INTENTION( l_U444, 47, 1000, 0, 0, 0 );
                }
                sub_42658( ref l_U160 );
                sub_42754( 1, sub_1934(), "MAX", ref l_U160, 2, 0 );
                sub_42754( 0, l_U444, "DA_SILVA", ref l_U160, 2, 0 );
                sub_42972( "SAIR_MXFALS1", ref l_U160, 8, 1 );
                sub_1423( "RJM", "IS_MID_15_FAILURE_SCENE_COMPLETE - Going to FAILURE_SCENE_WAIT_FOR_MOCAP", 0 );
                l_U99 = 5;
            }
        }
        break;
        case 5:
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FIN_CP_12", "MID_15_FIN_MAX_CAM" )) - 2500))
        {
            sub_58862( "AIR_RUNWAY2_SCRIPTED_FAIL_FX", 0 );
            FINALE_GRENADE_LAUNCHER_SETTINGS( 1, 0, 0, 0 );
            sub_1423( "RJM", "IS_MID_15_FAILURE_SCENE_COMPLETE - Shot is done", 0 );
            l_U96 = 1;
            return 1;
        }
        break;
    }
    return 0;
}

void sub_57077()
{
    sub_57091( ref l_U959 );
    l_U959[0]._fU4 = "FLICKER_VIBRATE_ZOOM_01";
    l_U959[0]._fU8 = 4;
    l_U959[0]._fU32 = 0;
    l_U959[1]._fU4 = "COLOR_CHANNEL_SPLIT_REDGREEN";
    l_U959[1]._fU8 = 4;
    l_U959[1]._fU12 = 500;
    l_U959[1]._fU32 = 0;
    l_U49 = 0;
    return;
}

void sub_57091(unknown uParam0)
{
    int I;

    sub_1423( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

void sub_58171()
{
    sub_57091( ref l_U959 );
    l_U959[0]._fU4 = "GAMMA_SATURATION_COLOR_ZOOM";
    l_U959[0]._fU8 = 4;
    l_U959[0]._fU32 = 0;
    l_U959[1]._fU4 = "DOUBLE_WIDE_INTERLACE_FLASH_07";
    l_U959[1]._fU8 = 4;
    l_U959[1]._fU12 = 3450;
    l_U959[1]._fU32 = 0;
    l_U49 = 0;
    return;
}

float sub_58387(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            return 100.00000000 * ((GET_TIME_POSITION_IN_RECORDING( uParam0 )) / (GET_TOTAL_DURATION_OF_VEHICLE_RECORDING( uParam1 )));
        }
    }
    return -1.00000000;
}

void sub_58862(unknown uParam0, boolean bParam1)
{
    sub_4450( ref l_U51 );
    l_U51 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U51, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

void sub_59227()
{
    sub_1423( "CR", "P_RW2_START_EXPLODING_PLANE_NIS - Start", 0 );
    sub_1423( "MF", "Music Cue: 12.1", 0 );
    AUDIO_MUSIC_SUSPEND( 0 );
    CAMERA_USE_HANDY_CAM( 0, 1065353216, 0 );
    ENABLE_CROSSHAIR( 0 );
    sub_17872( -665082447, ref g_U1030 );
    sub_45079( l_U423, 1.75000000 );
    sub_59382( ref l_U429 );
    sub_6694( ref l_U429 );
    sub_59382( ref l_U430 );
    sub_6694( ref l_U430 );
    sub_5785( "S_AIR_PLANE_RS_02", ref g_U1910 );
    sub_6114( "S_AIR_PLANE_RS_02", ref g_U1910 );
    l_U821 = GET_SOUND_ID();
    PLAY_SOUND_FRONTEND( l_U821, "S_AIR_PLANE_RS_PLANE_CRASH" );
    sub_59562();
    if (NOT (IS_VEHICLE_DEAD( l_U415 )))
    {
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U415 );
        FREEZE_VEHICLE_POSITION( l_U415, 1 );
    }
    sub_33655( 1, 0, 0, 1 );
    sub_59819( ref l_U783, (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( l_U393[3] ))) + l_U814, 0.00000000, 0.00000000, 0.00000000, 45, l_U820 );
    sub_60028( ref l_U783 );
    POINT_CAM_AT_VEHICLE( l_U783._fU0, l_U423, l_U817, 1 );
    SHAKE_CAM( l_U783._fU0, "MEDIUM_EXPLOSION_SHAKE", 0.35000000 );
    if (GET_ADRENALINE_AMT() < 1.00000000)
    {
        SET_ADRENALINE_AMT( 1.00000000 );
    }
    DEACTIVATE_BULLET_TIME( 1, 1 );
    ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
    sub_60244( ref l_U859, l_U820 );
    sub_60244( ref l_U900, l_U909 );
    sub_60244( ref l_U910, l_U919 );
    sub_60244( ref l_U822, l_U831 );
    sub_60244( ref l_U832, l_U841 );
    sub_60244( ref l_U842, l_U851 );
    sub_1423( "CR", "P_RW2_START_EXPLODING_PLANE_NIS - End", 0 );
    return;
}

void sub_59382(unknown uParam0)
{
    if ((uParam0^) != 0)
    {
        STOP_PARTICLE_FX_LOOPED( (uParam0^) );
        (uParam0^) = 0;
    }
    return;
}

void sub_59562()
{
    sub_57091( ref l_U959 );
    l_U959[0]._fU4 = "GAMMA_ZOOM_1";
    l_U959[0]._fU8 = 4;
    l_U959[0]._fU32 = 0;
    l_U959[1]._fU4 = "CONTRAST_ZOOM_FAST_BLUE";
    l_U959[1]._fU8 = 4;
    l_U959[1]._fU12 = 200;
    l_U959[1]._fU32 = 0;
    l_U49 = 0;
    return;
}

void sub_59819(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_2924( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U2, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_60028(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_3060( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_60244(unknown uParam0, unknown uParam1)
{
    sub_2924( uParam0, uParam1, 1, 0 );
    sub_3060( uParam0 );
    return;
}

int sub_61070(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_3180( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_3180( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_61208()
{
    sub_1423( "CR", "P_RW2_START_EXPLODING_PLANE_NIS_SHOT2 - Start", 0 );
    sub_3060( ref l_U868 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_FIN_CP_12", "PLANECRASH_CAM", 1, (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( l_U393[3] ))) + l_U852, 0.00000000, 0, 0 );
    sub_36260( 0, 1, 0, -859915232, -859915232, 0 );
    sub_61379();
    l_U928 = START_PARTICLE_FX_LOOPED_ON_OBJECT( "FIN_Plane_Debris_Sparks_S", l_U393[3], l_U929, l_U932, l_U935 );
    l_U920 = START_PARTICLE_FX_LOOPED_ON_OBJECT( "FIN_Plane_Sparks_Smoke_S", l_U393[3], l_U921, l_U924, l_U927 );
    l_U946 = START_PARTICLE_FX_LOOPED_ON_OBJECT( "Ambient_Furnace_Fire_S", l_U393[3], l_U947, 0.00000000, 0.00000000, 0.00000000, 1.00000000 );
    l_U950 = START_PARTICLE_FX_LOOPED_ON_OBJECT( "Ambient_Furnace_Fire_S", l_U393[3], l_U951, 0.00000000, 0.00000000, 0.00000000, 1.00000000 );
    sub_2924( ref l_U936, l_U945, 1, 0 );
    sub_3060( ref l_U936 );
    sub_1423( "CR", "P_RW2_START_EXPLODING_PLANE_NIS_SHOT2 - End", 0 );
    return;
}

void sub_61379()
{
    sub_1423( "CR", "P_TM2_JETPLANE_SKIP_ANIMS - Start", 0 );
    if (DOES_OBJECT_EXIST( l_U393[0] ))
    {
        ATTACH_OBJECT_TO_VEHICLE( l_U393[0], l_U423, 0, -4.00000000, -20.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U393[0], "P_AN_FUSPRT_AB", "ap_anim_jet", 0.50000000 );
    }
    if (DOES_OBJECT_EXIST( l_U393[1] ))
    {
        ATTACH_OBJECT_TO_VEHICLE( l_U393[1], l_U423, 0, -4.00000000, -20.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U393[1], "P_AN_FUSPRT_AA", "ap_anim_jet", 0.50000000 );
    }
    if (DOES_OBJECT_EXIST( l_U393[2] ))
    {
        ATTACH_OBJECT_TO_VEHICLE( l_U393[2], l_U423, 0, l_U881, 0.00000000, 0.00000000, 0.00000000 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U393[2], "P_AN_TALEXP_AA", "ap_anim_jet", l_U880 );
    }
    if (DOES_OBJECT_EXIST( l_U393[3] ))
    {
        SET_OBJECT_ANIM_CURRENT_TIME( l_U393[3], "P_AN_JETBOD_AA", "ap_anim_jet", l_U879 );
    }
    if (DOES_OBJECT_EXIST( l_U393[4] ))
    {
        ATTACH_OBJECT_TO_VEHICLE( l_U393[4], l_U423, 0, l_U881, 0.00000000, 0.00000000, 0.00000000 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U393[4], "P_AN_EXTRA_1_SWP", "ap_anim_jet", l_U880 );
    }
    if (DOES_OBJECT_EXIST( l_U393[5] ))
    {
        ATTACH_OBJECT_TO_VEHICLE( l_U393[5], l_U423, 0, l_U881, 0.00000000, 0.00000000, 0.00000000 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U393[5], "P_AN_EXTRA_2_SWP", "ap_anim_jet", l_U880 );
    }
    sub_1423( "CR", "P_TM2_JETPLANE_SKIP_ANIMS - End", 0 );
    return;
}

void sub_62512()
{
    sub_57091( ref l_U959 );
    l_U959[0]._fU4 = "FLASH_WHITE";
    l_U959[0]._fU8 = 4;
    l_U959[0]._fU20 = 1;
    l_U959[0]._fU32 = 0;
    l_U959[1]._fU4 = "GRADE_RED_FAST";
    l_U959[1]._fU8 = 4;
    l_U959[1]._fU32 = 0;
    l_U959[2]._fU4 = "FLASH_WHITE_2";
    l_U959[2]._fU8 = 4;
    l_U959[2]._fU12 = 2200;
    l_U959[2]._fU32 = 0;
    l_U959[3]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
    l_U959[3]._fU8 = 4;
    l_U959[3]._fU12 = 3200;
    l_U959[3]._fU32 = 0;
    l_U959[4]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
    l_U959[4]._fU8 = 4;
    l_U959[4]._fU12 = 4200;
    l_U959[4]._fU32 = 0;
    l_U959[5]._fU4 = "COLOR_CHANNEL_INTERLACE_HARD";
    l_U959[5]._fU8 = 4;
    l_U959[5]._fU12 = 4700;
    l_U959[5]._fU32 = 0;
    l_U49 = 0;
    return;
}

void sub_62964()
{
    int iVar2;
    float fVar3;

    iVar2 = TIMERA() - l_U868._fU0;
    fVar3 = ((TO_FLOAT( l_U877 )) - (TO_FLOAT( iVar2 ))) / (TO_FLOAT( l_U877 ));
    l_U528 = 1.75000000 * fVar3;
    if (l_U528 >= l_U878)
    {
        sub_45079( l_U423, l_U528 );
    }
    else
    {
        sub_45079( l_U423, 0 );
    }
    return;
}

void sub_63448()
{
    sub_1423( "CR", "P_RELEASE_RUNWAY2_ASSETS - START", 0 );
    sub_63512( ref l_U605, ref g_U1030 );
    sub_63547( -665082447, ref g_U1030 );
    sub_63805( 879300975, ref g_U1247 );
    sub_63983( "level_s_fin_cp_10", ref g_U1429 );
    sub_63983( "w_sp_grnlch_aa_h", ref g_U1429 );
    sub_63983( "veh@std", ref g_U1429 );
    sub_63983( "veh@truck", ref g_U1429 );
    sub_63983( "LEVEL_S_FIN_CP_11", ref g_U1429 );
    sub_64296( "LEVEL/S_AIR/VIG_13_FIN_MAX_CAR_SHOOT.act", ref g_U1783 );
    sub_64296( "Vehicle/Vehicle_Car.act", ref g_U1783 );
    sub_64509( l_U428, ref g_U1638 );
    sub_64509( l_U531, ref g_U1638 );
    sub_64509( l_U445, ref g_U1638 );
    sub_64509( l_U473, ref g_U1638 );
    sub_64743( "SCRIPT_MISSION\S_AIR_RUNWAY_02A", ref g_U1950 );
    sub_64743( "SCRIPT_MISSION\S_AIR_RUNWAY_02B", ref g_U1950 );
    return;
}

void sub_63512(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_63547( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_63547(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_4775( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_63805(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_4775( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_63983(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_4775( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_64296(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_4775( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_64509(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_4775( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_64743(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_4775( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    StrCopy( ref l_U2, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U10, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U18 = -1;
    l_U19 = {64536, 64536, 64536};
    l_U41 = 0;
    l_U42 = 0;
    l_U43 = 1500;
    l_U54 = 0;
    l_U92 = 0;
    l_U94 = 1;
    l_U95 = 0;
    l_U97 = 0;
    l_U142 = "level_s_fin_cp_09";
    l_U180 = 6000;
    l_U199 = 9000;
    l_U309 = 0;
    l_U324 = 6.50000000;
    l_U325 = 23;
    l_U393 = {-827.13000000, -728.27000000, -4.55000000};
    l_U396 = 170.00000000;
    l_U397 = "LEVEL/S_AIR/VIG_09_FIN_BECKER.act";
    l_U398 = 47;
    l_U399 = 51;
    l_U400 = 49;
    l_U401 = 50;
    l_U432 = 3000;
    l_U433 = 8000;
    l_U570 = -1;
    l_U571 = {-2.70000000, -3.50000000, 3.00000000};
    l_U574 = -1;
    l_U575 = {2.70000000, -3.50000000, 3.00000000};
    l_U578 = -1;
    l_U579 = -1;
    l_U594 = {-1.00000000, 5.40000000, 2.05000000};
    l_U597 = 90.00000000;
    l_U600 = 10000.00000000;
    l_U772 = {-829.22000000, -728.54000000, -6.70000000};
    l_U775 = {-834.89000000, -741.72000000, -6.70000000};
    l_U778 = {-828.06000000, -740.62000000, -6.70000000};
    l_U781 = {-824.67000000, -745.43000000, -6.70000000};
    l_U784 = {-834.87000000, -733.91000000, -6.70000000};
    l_U790 = 2000;
    l_U1070 = 1500;
    l_U1111 = {-0.50000000, -1.80000000, 0.30000000};
    l_U1114 = {1.60000000, -0.72000000, 10.83000000};
    l_U1117 = {0.65000000, -2.40000000, 0.00000000};
    l_U1120 = {1.60000000, -0.72000000, 10.83000000};
    l_U1132 = 3000;
    l_U1143 = {-831.60000000, -732.40000000, -6.70000000};
    l_U1146 = 550;
    l_U1156 = 0.25000000;
    l_U1157 = 0;
    l_U1215 = 0;
    l_U1216 = 0;
    l_U1217 = 0;
    l_U1218 = 0;
    l_U1219 = 0;
    l_U1220 = 0;
    l_U1221 = 0;
    l_U1223 = {0.00000000, 0.00000000, 0.00000000};
    l_U1226 = {0.00000000, 0.00000000, 0.00000000};
    l_U1229 = 0;
    l_U1230 = 0;
    l_U1231 = 0;
    l_U1232 = 0;
    l_U1233 = 0;
    sub_886( "SA", "Script s_air_Becker.sc is starting...", 0 );
    sub_935();
    l_U92 = 1;
    l_U54 = 0;
    if (g_U829 == 10)
    {
        sub_886( "GA", "Setting player position and gameplay camera to face out of the hangar.", 0 );
        sub_2324( sub_2241(), g_U2014[9], g_U2129[9] );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[9], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[9], 1065353216, 0 );
    }
    while (NOT IS_EXITFLAG_SET())
    {
        sub_2436();
        sub_11937();
        if (l_U97 == 0)
        {
            sub_15737();
        }
        WAIT( 0 );
    }
    sub_5308();
    sub_71715();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_air_Becker" );
    sub_886( "SA", "Script s_air_Becker.sc is terminating...", 0 );
    return;
}

void sub_886(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_935()
{
    l_U1167[0] = 2113814688;
    l_U1167[1] = 877881452;
    l_U1167[2] = -1800280432;
    l_U1167[3] = 1703160427;
    l_U1167[4] = 1423542550;
    l_U1167[5] = -2104040304;
    l_U1167[6] = -1409914275;
    l_U1167[7] = -1589640354;
    l_U1176[0] = 1478009203;
    l_U1176[1] = -612753081;
    l_U1176[2] = -1464892298;
    l_U1176[3] = 930042831;
    l_U1176[4] = -1101340804;
    l_U1176[5] = 57534114;
    l_U1176[6] = 724901397;
    l_U610[0] = 282;
    l_U610[1] = 283;
    l_U610[2] = 284;
    l_U622[0] = -1;
    l_U622[1] = -1;
    l_U622[2] = -1;
    l_U326[0][0] = {-834.80000000, -750.20000000, -6.70000000};
    l_U326[0][1] = {-834.80000000, -750.20000000, -6.70000000};
    l_U326[1][0] = {-832.00000000, -750.50000000, -6.70000000};
    l_U326[1][1] = {-832.00000000, -750.50000000, -6.70000000};
    l_U326[2][0] = {-829.00000000, -750.50000000, -6.70000000};
    l_U326[2][1] = {-829.70000000, -750.20000000, -6.70000000};
    l_U326[3][0] = {-837.50000000, -749.00000000, -6.70000000};
    l_U326[3][1] = {l_U326[3][0]};
    l_U363[0] = "p_an_boxcrt_aa";
    l_U363[1] = "p_an_boxcrt_ab";
    l_U363[2] = "p_an_boxcrt_ac";
    l_U367[0] = 0.35000000;
    l_U367[1] = 0.35000000;
    l_U367[2] = 0.35000000;
    l_U371[0] = 0.50000000;
    l_U371[1] = 0.60000000;
    l_U371[2] = 0.66660000;
    l_U319[3] = 140.00000000;
    l_U319[0] = 170.00000000;
    l_U319[1] = 175.00000000;
    l_U319[2] = 200.00000000;
    l_U810[0] = {-836.12000000, -745.49000000, -6.74000000};
    l_U810[1] = {-834.25000000, -746.53000000, -6.74000000};
    l_U810[2] = {-832.21000000, -746.80000000, -6.74000000};
    l_U810[3] = {-830.22000000, -747.29000000, -6.74000000};
    l_U810[4] = {-828.20000000, -747.64000000, -6.74000000};
    l_U810[5] = {-826.17000000, -748.10000000, -6.74000000};
    l_U810[6] = {-823.83000000, -748.97000000, -6.74000000};
    l_U810[7] = {-824.01000000, -751.71000000, -6.74000000};
    l_U810[8] = {-824.01000000, -753.82000000, -6.74000000};
    l_U810[9] = {-824.01000000, -756.15000000, -6.74000000};
    l_U810[10] = {-824.01000000, -758.36000000, -6.74000000};
    l_U810[11] = {-824.03000000, -760.48000000, -6.74000000};
    l_U810[12] = {-824.01000000, -762.48000000, -6.74000000};
    l_U810[13] = {-838.48000000, -746.44000000, -6.74000000};
    l_U810[14] = {-841.47000000, -744.40000000, -6.74000000};
    l_U810[15] = {-843.57000000, -744.40000000, -6.74000000};
    l_U810[16] = {-845.67000000, -744.40000000, -6.74000000};
    l_U810[17] = {-847.77000000, -744.40000000, -6.74000000};
    return;
}

int sub_2241()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_2263() );
    }
    return 0;
}

void sub_2263()
{
    return GET_PLAYER_ID();
}

void sub_2324(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_2436()
{
    if ((g_U830 == 10) || (g_U830 == 9))
    {
        switch (l_U97)
        {
            case 0:
            if ((l_U95) || ((sub_2544()) || ((l_U96) || (IS_PED_DEAD( sub_2241() )))))
            {
                sub_886( "SA", "eFailState = FAIL_IDLE", 0 );
                l_U97 = 1;
                sub_886( "SA", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_3080())
            {
                l_U97 = 3;
            }
            else if ((sub_3120( 0 )) == 1)
            {
                l_U97 = 2;
            }
            break;
            case 2:
            sub_886( "SA", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            if (NOT (IS_PED_DEAD( sub_2241() )))
            {
                l_U97 = 3;
                sub_886( "SA", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_886( "SA", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_2241() ))) AND (NOT (IS_PLAYER_DEAD( sub_2263() ))))
            {
                SET_PLAYER_CONTROL( sub_2263(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_2241() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_2241(), 0 );
                }
                SET_PED_VISIBLE( sub_2241(), 1 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            sub_4747( "AIR_BECKER1_SCRIPTED_FAIL_FX" );
            sub_4747( "AIR_BECKER2_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            sub_4997();
            sub_5308();
            l_U97 = 4;
            sub_886( "SA", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_886( "SA", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_7650( ref l_U56, sub_2241() );
            SET_INTERIOR_ACTIVE( GET_INTERIOR_FROM_NAME( "MILO_hangar", 0 ), 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_FROM_NAME( "MILO_hangar", 0 ), GET_HASH_KEY( ref g_U2358 ) );
            l_U97 = 5;
            sub_886( "SA", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_886( "SA", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U92 = 1;
            l_U94 = 0;
            l_U95 = 0;
            l_U97 = 0;
            sub_886( "SA", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_2544()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_2241() )))
        {
            SET_PED_FORCED_TO_WALK( sub_2241(), 0 );
            SET_PLAYER_FORCED_AIM( sub_2263(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_2263(), 1 );
            if ((IS_PED_VISIBLE( sub_2241() )) == 0)
            {
                SET_PED_VISIBLE( sub_2241(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_3080()
{
    return g_U648;
}

int sub_3120(int iParam0)
{
    iParam0 = 1;
    switch (l_U42)
    {
        case 0:
        if (NOT (sub_3181( ref l_U44 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_2241() )))
            {
                l_U43 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_3291( ref l_U44, l_U43, 1, 1 );
            sub_3427( ref l_U44 );
        }
        if (sub_3547( ref l_U44 ))
        {
            sub_886( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_2241() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_2263() )))
            {
                SET_PLAYER_CONTROL( sub_2263(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U42 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U42 = 2;
            }
            else
            {
                l_U42 = 3;
            }
        }
        break;
        case 2:
        sub_886( "NS", "Player will QUIT", 0 );
        sub_4034();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_886( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_4034();
        return 1;
        break;
    }
    return 0;
}

int sub_3181(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_3291(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_3427(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_3547(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_4034()
{
    sub_886( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4084( ref l_U44 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_2263() )))
    {
        SET_PLAYER_CONTROL( sub_2263(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U41 = 0;
    l_U41 = l_U41;
    l_U42 = 0;
    return;
}

void sub_4084(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_4747(unknown uParam0)
{
    sub_886( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_4830( ref l_U55 );
    l_U54 = 1;
    return;
}

void sub_4830(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_4997()
{
    sub_886( "GA", "P_RESET_MAX_ACTION_TREE start", 0 );
    if (NOT (IS_PED_DEAD( sub_2241() )))
    {
        if (IS_PLAYER_SHOOTDODGING())
        {
            SCRIPT_ASSERT( "Do not try to reset Max's action tree when he is shoot dodging.", 0 );
            sub_886( "GA", "You cannot reset Max's action tree during a shoot dodge.", 0 );
        }
        else
        {
            PED_ACTION_TREE_PLAY_NODE( sub_2241(), "/Global/Player" );
        }
    }
    sub_886( "GA", "P_RESET_MAX_ACTION_TREE end", 0 );
    return;
}

void sub_5308()
{
    int I;

    sub_886( "SA", "P_CLEANUP_ALL - START", 0 );
    CAMERA_POINT_AT_GRENADE( 0 );
    SET_POST_LMS_DAMAGE_TO_PLAYER_OVERRIDES( 0, 1.00000000 );
    ISEQ_TERMINATE( 1975594589 );
    sub_5395( 1975594589, ref g_U1368 );
    ISEQ_TERMINATE( -670135969 );
    sub_5395( -670135969, ref g_U1368 );
    ISEQ_TERMINATE( 1347850635 );
    sub_5395( 1347850635, ref g_U1368 );
    sub_5844( "S_AIR_PLANE_TAXI_START", ref g_U1910 );
    sub_6178( "S_AIR_PLANE_TAXI_START", ref g_U1910 );
    sub_5844( "S_AIR_PLANE_TAXI_LEAVE", ref g_U1910 );
    sub_6178( "S_AIR_PLANE_TAXI_LEAVE", ref g_U1910 );
    for ( I = 0; I <= 2; I++ )
    {
        sub_6437( l_U622[I], 1 );
        sub_6604( ref l_U622[I] );
    }
    sub_6437( l_U578, 1 );
    sub_6604( ref l_U578 );
    sub_6437( l_U579, 1 );
    sub_6604( ref l_U579 );
    sub_6837( ref l_U570 );
    sub_6837( ref l_U574 );
    if ((CUTSCENE_NAMED_IS_LOADING( "14_03_FIN_concat" )) || (CUTSCENE_IS_LOADED( "14_03_FIN_concat" )))
    {
        CLEAR_NAMED_CUTSCENE( "14_03_FIN_concat" );
    }
    sub_6977( l_U140 );
    sub_6977( l_U392 );
    sub_6977( l_U593 );
    sub_7075( ref l_U553 );
    sub_7075( ref l_U757 );
    sub_7146( ref l_U614 );
    sub_7180( l_U569 );
    sub_7267( ref l_U355 );
    sub_7364( l_U141 );
    sub_7411( ref l_U218 );
    sub_7411( ref l_U221 );
    CAMERA_CAN_TARGET_PROJECTILES( 0 );
    RESET_PED_MODEL_LOD_DISTANCES( 2113814688 );
    sub_886( "SA", "P_CLEANUP_ALL - END", 0 );
    return;
}

void sub_5395(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_5507( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_5507(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_5844(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_5861( uParam0, uParam1 ))
    {
        iVar4 = sub_5960( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    return;
}

int sub_5861(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_5960(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

void sub_6178(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5507( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_6437(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
        sub_886( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
        sub_886( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

void sub_6604(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
        sub_886( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
        sub_886( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

void sub_6837(unknown uParam0)
{
    if ((uParam0^) != 0)
    {
        REMOVE_PARTICLE_FX( (uParam0^) );
        (uParam0^) = 0;
    }
    return;
}

void sub_6977(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_7075(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_6977( (uParam0^)[I] );
    }
    return;
}

void sub_7146(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_7180( (uParam0^)[I] );
    }
    return;
}

void sub_7180(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_7267(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_7300( (uParam0^)[I] );
    }
    return;
}

void sub_7300(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_7364(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_7411(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_7364( (uParam0^)[I] );
    }
    return;
}

void sub_7650(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_886( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_7834( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_8911( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_9203( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_9563( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_9203( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_9563( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_9203( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_9563( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_9848( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_9563( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_9848( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_9563( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_10341( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_10502( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_2241(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_886( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_7834(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_7866( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_7866(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_8911(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_9203(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_9519( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_9519(unknown uParam0)
{
    return;
}

void sub_9563(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_9848(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_9519( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_10341(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_10502(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_7866( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_10574( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_10574(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_11937()
{
    if (NOT l_U1215)
    {
        START_WIDGET_GROUP( "Becker Boss Fight" );
        ADD_WIDGET_BOOL( "Reset Checkpoint", ref l_U1216 );
        START_WIDGET_GROUP( "Blendout" );
        ADD_WIDGET_INT_SLIDER( "End Anim Cam time", ref l_U790, 0, 1000000, 50 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Grenade delays" );
        ADD_WIDGET_INT_SLIDER( "G2 grenade delay", ref l_U180, 0, 1000000, 50 );
        ADD_WIDGET_INT_SLIDER( "G3 grenade delay", ref l_U199, 0, 1000000, 50 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Plane Enemy" );
        ADD_WIDGET_FLOAT_SLIDER( "Time to close door", ref l_U600, 0.00000000, 1E7, 50.00000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Attach Rotation", ref l_U597, -360.00000000, 360.00000000, 1.00000000 );
        sub_12334( ref l_U594, "Attach Pos", 0.01000000 );
        STOP_WIDGET_GROUP();
        sub_12334( ref l_U571, "Blowback fx left", 0.01000000 );
        sub_12334( ref l_U575, "Blowback fx right", 0.01000000 );
        sub_12334( ref l_U1117, "Fail Max Cam Right Offset", 1036831949 );
        sub_12334( ref l_U1120, "Fail Max Cam Right Rotation", 1036831949 );
        sub_12334( ref l_U1111, "Fail Max Cam Left Offset", 1036831949 );
        sub_12334( ref l_U1114, "Fail Max Cam Left Rotation", 1036831949 );
        START_WIDGET_GROUP( "Vig 10" );
        ADD_WIDGET_BOOL( "Trigger Max thrown back", ref l_U1218 );
        ADD_WIDGET_FLOAT_SLIDER( "Explosion radius", ref l_U324, 0.00000000, 10.00000000, 0.10000000 );
        ADD_WIDGET_INT_SLIDER( "Damage in cover", ref l_U325, 0, 100000, 1 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Becker" );
        START_WIDGET_GROUP( "Aim coordinates" );
        ADD_WIDGET_BOOL( "Becker Fire Grenade", ref l_U1217 );
        sub_12334( ref l_U326[3][0], "TRUCK COVER", 1036831949 );
        sub_12334( ref l_U326[0][0], "Baggage Left Cover Hit 1", 1036831949 );
        sub_12334( ref l_U326[0][1], "Baggage Left Cover Hit 2", 1036831949 );
        sub_12334( ref l_U326[1][0], "Baggage Middle Cover Hit 1", 1036831949 );
        sub_12334( ref l_U326[1][1], "Baggage Middle Cover Hit 2", 1036831949 );
        sub_12334( ref l_U326[2][0], "baggage Right Cover Hit 1", 1036831949 );
        sub_12334( ref l_U326[2][1], "baggage Right Cover Hit 2", 1036831949 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Luggage" );
        ADD_WIDGET_BOOL( "Spawn luggage", ref l_U1219 );
        sub_12334( ref l_U1223, "Luggage position", 0.10000000 );
        sub_12334( ref l_U1226, "Luggage rotation", 0.10000000 );
        ADD_WIDGET_BOOL( "Grab player's position", ref l_U1220 );
        ADD_WIDGET_BOOL( "Grab luggage's position", ref l_U1221 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Becker MPM Tuning" );
        ADD_WIDGET_BOOL( "Start MPM", ref l_U1229 );
        ADD_WIDGET_FLOAT_SLIDER( "Bullet Time Mod", ref l_U1156, 0.00000000, 10.00000000, 0.01000000 );
        ADD_WIDGET_INT_SLIDER( "Duration of MPM", ref l_U1146, 0, 1000000, 25 );
        ADD_WIDGET_BOOL( "Test MPM Grenade", ref l_U1230 );
        sub_12334( ref l_U1143, "Grenade Shoot at Pos", 0.50000000 );
        ADD_WIDGET_INT_SLIDER( "Second grenade delay", ref l_U1132, 0, 1000000, 50 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Plane Door Debug" );
        ADD_WIDGET_BOOL( "Start Plane Door Debug mode", ref l_U1231 );
        ADD_WIDGET_BOOL( "Open Plane Door", ref l_U1232 );
        ADD_WIDGET_BOOL( "Close Plane Close", ref l_U1233 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U1215 = 1;
    }
    if (l_U1231)
    {
        sub_5308();
        l_U92 = 0;
        l_U569 = sub_13899( 877881452, -809.00000000, -736.74680000, -6.73908700, 47.63203000, 0, 0, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U569 )))
        {
            SET_ROOM_FOR_VEHICLE_BY_NAME( l_U569, ref g_U2358 );
            SET_VEHICLE_CAN_BE_DAMAGED( l_U569, 0 );
            SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( l_U569, 1 );
            SET_VEHICLE_ENGINE_CAN_BE_DAMAGED( l_U569, 0 );
            SET_VEHICLE_ENGINE_ON( l_U569, 1, 1 );
            SET_VEHICLE_EXTRA( l_U569, 1, 0 );
            SET_VEHICLE_EXTRA( l_U569, 2, 0 );
        }
        l_U1231 = 0;
    }
    if (l_U1232)
    {
        if (NOT (IS_VEHICLE_DEAD( l_U569 )))
        {
            SET_VEHICLE_DOOR_OPEN( l_U569, 0 );
        }
        l_U1232 = 0;
    }
    if (l_U1233)
    {
        if (NOT (IS_VEHICLE_DEAD( l_U569 )))
        {
            SET_VEHICLE_DOOR_SHUT( l_U569, 0, 0, 0 );
        }
        l_U1233 = 0;
    }
    if (l_U1216)
    {
        sub_5308();
        l_U92 = 1;
        l_U1216 = 0;
    }
    if (l_U1218)
    {
        sub_14547( GET_PED_HEADING( sub_2241() ) );
        l_U1218 = 0;
    }
    if (l_U1217)
    {
        sub_15086( sub_14781(), 4000 );
        l_U1217 = 0;
    }
    if (l_U1220)
    {
        l_U1223 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_2241() )};
        l_U1220 = 0;
    }
    if (l_U1221)
    {
        l_U1223 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( l_U1222 )};
        l_U1226 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_ROTATION( l_U1222 )};
        l_U1221 = 0;
    }
    if (l_U1219)
    {
        if (DOES_OBJECT_EXIST( l_U1222 ))
        {
            sub_7300( l_U1222 );
        }
        l_U1222 = sub_15397( -1168442120, l_U1223, l_U1226, 0, 1, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1222, ref g_U2358 );
        l_U1219 = 0;
    }
    if (l_U1229)
    {
        sub_7075( ref l_U553 );
        sub_7075( ref l_U757 );
        l_U92 = 15;
        l_U93 = 1;
        l_U1229 = 0;
    }
    if (l_U1230)
    {
        sub_15086( l_U1143, 4000 );
        l_U1230 = 0;
    }
    return;
}

void sub_12334(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

void sub_13899(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_14010( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_14010(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_9519( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_14547(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( sub_2241() ))) AND (NOT l_U309))
    {
        sub_886( "SA", "Triggering Vig 10", 0 );
        PED_SET_ACTION_INTENTION( sub_2241(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
        APPLY_DAMAGE_TO_PED( sub_2241(), l_U325, 0 );
        l_U309 = 1;
        sub_3427( ref l_U310 );
    }
    else if (sub_3547( ref l_U310 ))
    {
        sub_886( "GA", "Delay for detecting blown back complete", 0 );
        l_U309 = 0;
    }
    return;
}

string sub_14781()
{
    int iVar2;
    unknown uVar3;

    if (sub_14792( ref iVar2 ))
    {
        uVar3 = iVar2;
        if (iVar2 == 3)
        {
            return l_U326[uVar3][0];
        }
        else if (l_U359[uVar3] < 1)
        {
            return l_U326[uVar3][0];
        }
        else
        {
            return l_U326[uVar3][1];
        }
    }
    return "[dynamic result, ret vals = 3]";
    break;
    GET_PED_COORDS( sub_2241() );
    "[doubled result, dropped if not asigned]";
    "[doubled result, dropped if not asigned]";
    break;
}

int sub_14792(unknown uParam0)
{
    int I;

    if ((NOT IS_PLAYER_SHOOTDODGING()) AND ((NOT (IS_PED_VAULTING( sub_2241() ))) AND (NOT (IS_PED_DEAD( sub_2241() )))))
    {
        if (IS_PED_IN_COVER( sub_2241() ))
        {
            for ( I = 0; I < 4; I++ )
            {
                if (sub_14887( sub_2241(), l_U224[I] ))
                {
                    (uParam0^) = I;
                    return 1;
                }
            }
        }
    }
    return 0;
}

int sub_14887(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_15086(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;

    if (NOT (IS_PED_DEAD( l_U392 )))
    {
        SET_AMMO_IN_CLIP( l_U392, 930042831, 25000 );
        OPEN_SEQUENCE_TASK( ref uVar6 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_SHOOT_AT_COORD( 0, uParam0, uParam3, 1566631136, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_AIM_GUN_AT_PED( 0, sub_2241(), -1, 0 );
        CLOSE_SEQUENCE_TASK( uVar6 );
        CLEAR_PED_TASKS( l_U392 );
        TASK_PERFORM_SEQUENCE( l_U392, uVar6 );
        CLEAR_SEQUENCE_TASK( uVar6 );
    }
    return;
}

void sub_15397(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_14010( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_15737()
{
    int iVar2;
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    vector vVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;

    iVar2 = l_U92;
    iVar3 = (sub_15758( ref l_U553 )) + (sub_15758( ref l_U757 ));
    sub_15850();
    sub_16370( ref l_U553, -1054867456, 0, 1 );
    sub_16370( ref l_U757, -1054867456, 0, 1 );
    switch (l_U92)
    {
        case 0: break;
        case 1:
        sub_886( "SA", "eCheckpoint = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_16763();
        sub_17329();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U92 = 2;
        sub_886( "SA", "eCheckpoint = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_886( "SA", "eCheckpoint = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_20567();
        sub_27555();
        l_U92 = 3;
        sub_886( "SA", "eCheckpoint = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_32057( ref g_U1950 )) AND ((sub_31930( ref g_U1910 )) AND ((sub_31739( ref g_U1368 )) AND ((sub_31618( ref g_U1638 )) AND ((sub_31491( ref g_U1783 )) AND ((sub_31364( ref g_U1429 )) AND ((sub_31243( ref g_U1247 )) AND (sub_31123( ref g_U1030 )))))))))
        {
            g_U831[9] = 1;
            if ((NOT l_U56._fU0) AND ((g_U829 == 10) || (g_U829 == 9)))
            {
                sub_886( "SA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
                l_U92 = 4;
            }
            else
            {
                sub_886( "SA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
                l_U92 = 6;
            }
        }
        break;
        case 4:
        sub_886( "SA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUPS", 0 );
        l_U94 = 0;
        g_U846[9] = 1;
        if ((sub_32438( ref l_U56 )) == 0)
        {
            sub_9848( sub_2241(), 57534114, 200, 0, 0 );
            sub_9203( sub_2241(), -612753081, 1, 200, 0 );
            sub_9203( sub_2241(), -1464892298, 0, 200, 0 );
            l_U92 = 5;
            sub_886( "CR", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U92 = 6;
            sub_886( "CR", "eCheckpointState = CP_LOAD_LEVEL_VEHICLES", 0 );
        }
        break;
        case 5:
        sub_886( "SA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        if (NOT (IS_PED_DEAD( sub_2241() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_2241(), 0 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_2241(), 1 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_2241(), 0, 0 ) ))))
            {
                g_U830 = g_U829;
                sub_33044( ref l_U56, g_U830, sub_2241(), g_U2014[9], g_U2129[9], g_U2168[9], g_U2207[9], 1 );
                l_U92 = 6;
                sub_886( "SA", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
            }
        }
        break;
        case 6:
        sub_886( "SA", "eCheckpoint = CP_LOAD_LEVEL_VEHICLES", 0 );
        sub_36777();
        l_U92 = 7;
        break;
        case 7:
        if (l_U93)
        {
            l_U560 = 1;
        }
        if ((l_U560 != 4) AND (l_U560 != 0))
        {
            sub_37079();
        }
        if (l_U560 == 4)
        {
            sub_39274();
            l_U92 = 8;
        }
        break;
        case 8:
        if (g_U846[9])
        {
            sub_39604();
            if (g_U830 == 10)
            {
                sub_39721();
                sub_40490();
                if (GET_ADRENALINE_AMT() < 0.50000000)
                {
                    SET_ADRENALINE_AMT( 0.50000000 );
                }
                CAMERA_CAN_TARGET_PROJECTILES( 1 );
                l_U92 = 15;
                sub_886( "SA", "eCheckpoint = CP_BECKER_MPM_NIS", 0 );
            }
            else if (l_U94)
            {
                if (CUTSCENE_IS_LOADED( "14_03_FIN_concat" ))
                {
                    l_U92 = 9;
                    sub_886( "SA", "eCheckpoint = CP_HANDLE_CUT_04", 0 );
                }
                else
                {
                    sub_886( "GA", "Waiting for 14_03_FIN_concat to load ...", 0 );
                }
            }
            else
            {
                l_U92 = 9;
                sub_886( "SA", "eCheckpoint = CP_HANDLE_CUT_04", 0 );
            }
        }
        break;
        case 9:
        if (l_U93)
        {
            sub_39721();
            sub_40490();
            if (GET_ADRENALINE_AMT() < 0.50000000)
            {
                SET_ADRENALINE_AMT( 0.50000000 );
            }
            CAMERA_CAN_TARGET_PROJECTILES( 1 );
            SET_PLAYER_IN_BECKER_BOSS_FIGHT( sub_2263(), 1 );
            sub_50576( ref l_U98, "14_03_FIN_concat", 41357, 41491, 44658, 46928, 46947, 49680, 250, 0 );
            l_U98._fU104 = 0;
            if (l_U94)
            {
                l_U98._fU4 = 2;
            }
            else
            {
                l_U98._fU4 = 7;
            }
        }
        if (sub_51012( ref l_U98 ))
        {
            SET_POST_LMS_DAMAGE_TO_PLAYER_OVERRIDES( 10000, 0.25000000 );
            l_U92 = 10;
            sub_886( "SA", "eCheckpoint = CP_BECKER_GAMEPLAY_GRENADE_1", 0 );
        }
        break;
        case 10:
        if (l_U93)
        {
            if (g_U830 != 9)
            {
                g_U830 = 9;
                sub_33044( ref l_U56, g_U830, sub_2241(), g_U2014[9], g_U2129[9], g_U2168[9], g_U2207[9], 1 );
            }
            sub_53267();
        }
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD( sub_2241() )))))
        {
            if (NOT (sub_53503( l_U1009 )))
            {
                l_U92 = 14;
                sub_886( "SA", "eCheckpoint = CP_BECKER_FAIL_HIT_WITH_GRENADE", 0 );
            }
        }
        sub_53605();
        sub_54544();
        sub_54562();
        sub_55082();
        sub_56226();
        if ((iVar3 <= 4) AND (NOT l_U171._fU20))
        {
            sub_3427( ref l_U171 );
        }
        if (sub_3547( ref l_U171 ))
        {
            l_U92 = 11;
            sub_886( "SA", "eCheckpoint = CP_BECKER_GAMEPLAY_GRENADE_2", 0 );
        }
        break;
        case 11:
        if (l_U93)
        {
            sub_58212();
        }
        sub_53605();
        sub_54544();
        sub_54562();
        sub_55082();
        sub_56226();
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD( sub_2241() )))))
        {
            if (NOT (sub_53503( l_U1009 )))
            {
                l_U92 = 14;
                sub_886( "SA", "eCheckpoint = CP_BECKER_FAIL_HIT_WITH_GRENADE", 0 );
            }
        }
        if (sub_3547( ref l_U181 ))
        {
            if (sub_54661())
            {
                sub_15086( sub_14781(), 4000 );
                l_U434 = 0;
            }
            else
            {
                l_U434 = 1;
                sub_4084( ref l_U435 );
            }
        }
        if (l_U434)
        {
            if (NOT l_U435._fU20)
            {
                if (sub_54661())
                {
                    sub_886( "GA", "Becker can fire at Max.", 0 );
                    sub_3427( ref l_U435 );
                }
            }
            if (sub_3547( ref l_U435 ))
            {
                if (sub_54661())
                {
                    sub_886( "GA", "Becker firing his delayed grenade.", 0 );
                    sub_15086( sub_14781(), 4000 );
                    l_U434 = 0;
                }
                else
                {
                    sub_886( "GA", "Player went unavailable again.", 0 );
                    sub_4084( ref l_U435 );
                }
            }
        }
        if ((l_U768 != 4) AND (l_U768 != 0))
        {
            sub_58815();
        }
        if (l_U768 == 4)
        {
            sub_61580();
        }
        if ((NOT sub_62758()) AND ((l_U618[1]) AND (l_U618[0])))
        {
            if ((iVar3 <= 5) AND (NOT l_U190._fU20))
            {
                sub_3427( ref l_U190 );
            }
            if (sub_3547( ref l_U190 ))
            {
                l_U92 = 12;
                sub_886( "SA", "eCheckpoint = CP_BECKER_GAMEPLAY_GRENADE_3", 0 );
            }
        }
        break;
        case 12:
        if (l_U93)
        {
            sub_62972();
        }
        sub_53605();
        sub_54544();
        sub_54562();
        sub_55082();
        sub_56226();
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD( sub_2241() )))))
        {
            if (NOT (sub_53503( l_U1009 )))
            {
                l_U92 = 14;
                sub_886( "SA", "eCheckpoint = CP_BECKER_FAIL_HIT_WITH_GRENADE", 0 );
            }
        }
        if (sub_3547( ref l_U200 ))
        {
            if (sub_54661())
            {
                sub_15086( sub_14781(), 4000 );
                l_U434 = 0;
            }
            else
            {
                l_U434 = 1;
                sub_4084( ref l_U435 );
            }
        }
        if (l_U434)
        {
            if (NOT l_U435._fU20)
            {
                if (sub_54661())
                {
                    sub_886( "GA", "Becker can fire at Max.", 0 );
                    sub_3427( ref l_U435 );
                }
            }
            if (sub_3547( ref l_U435 ))
            {
                if (sub_54661())
                {
                    sub_886( "GA", "Becker firing his delayed grenade.", 0 );
                    sub_15086( sub_14781(), 4000 );
                    l_U434 = 0;
                }
                else
                {
                    sub_886( "GA", "Player went unavailable again.", 0 );
                    sub_4084( ref l_U435 );
                }
            }
        }
        if ((l_U770 != 4) AND (l_U770 != 0))
        {
            sub_63575();
        }
        if (l_U770 == 4)
        {
            sub_61580();
        }
        if ((NOT sub_62758()) AND (l_U618[2]))
        {
            if ((iVar3 <= 5) AND (NOT l_U209._fU20))
            {
                sub_3427( ref l_U209 );
            }
            if (sub_3547( ref l_U209 ))
            {
                l_U92 = 13;
                sub_886( "SA", "eCheckpoint = CP_BECKER_GAMEPLAY_GRENADE_4", 0 );
            }
        }
        break;
        case 13:
        if (l_U93)
        {
            sub_65170();
        }
        if (NOT IS_BULLET_CAMERA_ACTIVE())
        {
            sub_53605();
        }
        if (NOT IS_BULLET_CAMERA_ACTIVE())
        {
            sub_54544();
        }
        sub_54562();
        sub_55082();
        sub_56226();
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD( sub_2241() )))))
        {
            if (NOT (sub_53503( l_U1009 )))
            {
                l_U92 = 14;
                sub_886( "SA", "eCheckpoint = CP_BECKER_FAIL_HIT_WITH_GRENADE", 0 );
            }
        }
        if (l_U434)
        {
            if (NOT l_U435._fU20)
            {
                if (sub_54661())
                {
                    sub_886( "GA", "Becker can fire at Max.", 0 );
                    sub_3427( ref l_U435 );
                }
            }
            if (sub_3547( ref l_U435 ))
            {
                if (sub_54661())
                {
                    sub_886( "GA", "Becker firing his delayed grenade.", 0 );
                    sub_15086( sub_14781(), 4000 );
                    l_U434 = 0;
                }
                else
                {
                    sub_886( "GA", "Player went unavailable again.", 0 );
                    sub_4084( ref l_U435 );
                }
            }
        }
        if (NOT l_U787)
        {
            if (iVar3 == 1)
            {
                sub_886( "GA", "Assigning bullet cam to last living ped.", 0 );
                uVar4 = sub_65828( ref l_U553 );
                if (NOT (IS_PED_DEAD( uVar4 )))
                {
                    SET_BULLET_CAM_PREF( uVar4, "", "", "", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                }
                uVar4 = sub_65828( ref l_U757 );
                if (NOT (IS_PED_DEAD( uVar4 )))
                {
                    SET_BULLET_CAM_PREF( uVar4, "", "", "", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                }
                l_U787 = 1;
            }
        }
        if (NOT l_U378)
        {
            if (iVar3 == 0)
            {
                sub_886( "MF", "Music Cue: 9.1", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_5", "FINALE_01_5", 0.00000000, 3000, 10000, -1082130432, 0 );
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                l_U378 = 1;
            }
        }
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (iVar3 == 0)))
        {
            SET_PLAYER_IN_BECKER_BOSS_FIGHT( sub_2263(), 0 );
            l_U92 = 15;
            sub_886( "SA", "eCheckpoint = CP_BECKER_MPM_NIS", 0 );
        }
        break;
        case 14:
        if (l_U93)
        {
            sub_51879( 1, 0, 0, 1 );
            sub_66318( ref l_U444, 0 );
            CLEAR_PROJECTILES();
            if ((NOT (IS_PED_DEAD( l_U392 ))) AND (NOT (IS_PED_DEAD( sub_2241() ))))
            {
                uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_2241() )};
                uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U392 )};
                if (uVar5._fU0 > uVar8._fU0)
                {
                    sub_66540( ref l_U1039, -832.93000000, -732.41000000, -5.09000000, 14.31000000, -0.03000000, -56.84000000, 12.15000000, 0 );
                }
                else
                {
                    sub_66540( ref l_U1039, -824.32000000, -731.04000000, -3.90000000, 8.76000000, -0.54000000, 51.43000000, 21.18000000, 0 );
                }
            }
            sub_66803( ref l_U1039 );
            SHAKE_CAM( l_U1039._fU0, "HAND_SHAKE", 1065353216 );
            if (NOT (IS_PED_DEAD( l_U392 )))
            {
                CLEAR_PED_TASKS( l_U392 );
                PED_SET_ACTION_INTENTION( l_U392, 53, 1000, 0.00000000, 0.00000000, 0.00000000 );
            }
            sub_3427( ref l_U1030 );
            sub_3427( ref l_U1071 );
        }
        if (sub_3547( ref l_U1030 ))
        {
            if (NOT (IS_PED_DEAD( l_U392 )))
            {
                sub_886( "GA", "Kill shot fire grenade.", 0 );
                SET_PED_SHOOTS_AT_COORD( l_U392, -830.78000000, -757.17000000, 10.00000000 );
            }
        }
        if (sub_3547( ref l_U1071 ))
        {
            sub_886( "GA", "Showing explosion killing Max.", 0 );
            if ((NOT (IS_PED_DEAD( l_U392 ))) AND (NOT (IS_PED_DEAD( sub_2241() ))))
            {
                vVar11 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_2241() )};
                uVar14 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U392 )};
                if (vVar11.x > uVar14._fU0)
                {
                    sub_66540( ref l_U1080, vVar11 + l_U1117, l_U1120, 1110704128, 1000 );
                }
                else
                {
                    sub_66540( ref l_U1080, vVar11 + l_U1111, l_U1114, 1110704128, 1000 );
                }
                sub_66803( ref l_U1080 );
                sub_67350( "AIR_BECKER1_SCRIPTED_FAIL_FX", 0 );
                if (NOT (IS_PED_DEAD( l_U392 )))
                {
                    POINT_CAM_AT_PED( l_U1080._fU0, l_U392, 0, 0, 0, 0 );
                }
                SHAKE_CAM( l_U1080._fU0, "SMALL_EXPLOSION_SHAKE", 2.00000000 );
            }
            CLEAR_PROJECTILES();
            if (NOT (IS_PED_DEAD( sub_2241() )))
            {
                uVar17 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_2241() )};
                uVar17._fU4 += 0.60000000;
                uVar17._fU8 = -6.40000000;
                ADD_EXPLOSION( uVar17, 0, 2.00000000, 1, 0, 1.00000000 );
            }
            if (NOT (IS_PED_DEAD( sub_2241() )))
            {
                uVar20 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_2241() )};
                GET_GROUND_Z_FOR_3D_COORD( uVar20, ref uVar26 );
                uVar20._fU8 = uVar26;
                uVar23 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U392 )};
                if (uVar20._fU0 > uVar23._fU0)
                {
                    sub_2324( sub_2241(), uVar20, 10.00000000 );
                }
                else
                {
                    sub_2324( sub_2241(), uVar20, -25.00000000 );
                }
                ISEQ_REGISTER_ENTITY( 1347850635, "player", sub_2241(), 0 );
                ISEQ_START( 1347850635 );
            }
            if (GET_ADRENALINE_AMT() < 0.10000000)
            {
                SET_ADRENALINE_AMT( 0.10000000 );
            }
            ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
            sub_3427( ref l_U1123 );
        }
        if (sub_3547( ref l_U1123 ))
        {
            sub_886( "GA", "End of kill shot on Max.", 0 );
            l_U95 = 1;
        }
        break;
        case 15:
        if (l_U93)
        {
            sub_68022();
            sub_68970( ref g_U861[11] );
            sub_51879( 1, 0, 0, 1 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_FIN_CP_09", "VIG_11_FIN_FWD_CAM", 0, 0, 0, 0, 0, 0, 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            SET_CAMERA_OVERRIDE( "BECKER_MPM_AIM_CAMERA", "BECKER_MPM_AIM_CAMERA", 0, 1, 1 );
            sub_44700( 1 );
            sub_69141( ref uVar27, 1, 1 );
            if (NOT (IS_PED_DEAD( sub_2241() )))
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_2241() );
                RESET_PLAYER_INPUT_GAIT( 0 );
                sub_4997();
            }
            sub_2324( sub_2241(), g_U2014[10], g_U2129[10] );
            ISEQ_REGISTER_ENTITY( -670135969, "Max", sub_2241(), 0 );
            ISEQ_START( -670135969 );
            START_PLAYER_SHOOTDODGE( 0.00000000, 1.00000000, 0.00000000, 0, 0, 0.00000000, 4.00000000 );
            ADD_EXPLOSION( -834.76000000, -749.44000000, -6.74000000, 0, 2.00000000, 1, 0, 1.00000000 );
            sub_15086( -839.62000000, -757.73000000, -6.74000000, 2000 );
            sub_3427( ref l_U1133 );
            if (NOT l_U378)
            {
                sub_886( "MF", "Music Cue: 10.0", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_5", "FINALE_01_5", 0.00000000, 0, 0, -1082130432, 0 );
                l_U378 = 1;
            }
        }
        else
        {
            DO_SCREEN_FADE_IN( 0 );
            if (g_U830 != 10)
            {
                g_U830 = 10;
                sub_33044( ref l_U56, g_U830, sub_2241(), g_U2014[10], g_U2129[10], g_U2168[10], g_U2207[10], 1 );
            }
            l_U92 = 16;
            sub_886( "SA", "eCheckpoint = CP_BECKER_GAMEPLAY_MPM", 0 );
        }
        break;
        case 16:
        if (l_U93)
        {
            if (NOT l_U378)
            {
                sub_886( "MF", "Music Cue: 10.0", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_5", "FINALE_01_5", 0.00000000, 0, 0, -1082130432, 0 );
                l_U378 = 1;
            }
        }
        if (sub_3547( ref l_U1133 ))
        {
            sub_886( "GA", "Becker firing second NIS grenade.", 0 );
            sub_15086( -838.83000000, -748.04000000, -6.74000000, 1000 );
        }
        if (NOT l_U1142)
        {
            if (IS_PLAYER_SHOOTDODGING())
            {
                sub_52756( 1, 1 );
                sub_70650();
                l_U1142 = 1;
            }
            else
            {
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[10], 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[10], 1065353216, 0 );
            }
        }
        if (NOT (IS_PED_DEAD( sub_2241() )))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( sub_2241(), 47 )) == 3)
            {
                sub_886( "GA", "Drop player's two handed weapon.", 0 );
                if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_2241(), 2 ) ))
                {
                    REMOVE_PED_WEAPON( sub_2241(), GET_WEAPON_FROM_HOLSTER( sub_2241(), 2 ) );
                }
                PED_FINISH_ACTION_INTENTION( sub_2241(), 47 );
            }
        }
        if (sub_3547( ref l_U1158 ))
        {
            sub_886( "GA", "Becker shooting during MPM.", 0 );
            sub_15086( l_U1143, 4000 );
        }
        if (NOT (IS_VEHICLE_DEAD( l_U569 )))
        {
            if (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U569 )))
            {
                sub_886( "GA", "Plane reached the end of it's path, deleting.", 0 );
                sub_7180( l_U569 );
            }
        }
        if (IS_BULLET_CAMERA_RUNNING( 0 ))
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
            g_U846[11] = 1;
            l_U92 = 17;
            sub_886( "GA", "eCheckpointState = CP_BECKER_MPM_WIN", 0 );
            break;
        }
        if (sub_3547( ref l_U1147 ))
        {
            SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
            sub_67350( "AIR_BECKER2_SCRIPTED_FAIL_FX", 0 );
            l_U92 = 18;
            sub_886( "GA", "eCheckpointState = CP_BECKER_MPM_LOSE", 0 );
            break;
        }
        break;
        case 17:
        if (l_U93)
        {
            sub_71568();
        }
        if (NOT (IS_VEHICLE_DEAD( l_U569 )))
        {
            if (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U569 )))
            {
                sub_886( "GA", "Plane reached the end of it's path, deleting.", 0 );
                sub_7180( l_U569 );
            }
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            sub_6977( l_U392 );
            sub_73312();
            l_U92 = 19;
        }
        break;
        case 18:
        sub_73312();
        DEACTIVATE_BULLET_TIME( 1, 0 );
        sub_66540( ref l_U1184, -827.23000000, -727.37000000, -3.52000000, -8.28000000, -2.09000000, 146.24000000, 44.34000000, 1000 );
        sub_66803( ref l_U1184 );
        SHAKE_CAM( l_U1184._fU0, "MEDIUM_EXPLOSION_SHAKE", 1065353216 );
        CLEAR_PROJECTILES();
        if (NOT (IS_PED_DEAD( sub_2241() )))
        {
            uVar45 = {(vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_2241() ))) + (vector( 0.50000000, 1.00000000, 0.00000000))};
            ADD_EXPLOSION( uVar45, 0, 2.00000000, 1, 0, 1.00000000 );
            SET_PED_VISIBLE( sub_2241(), 0 );
        }
        if (NOT (IS_PED_DEAD( l_U392 )))
        {
            PED_SET_ACTION_INTENTION( l_U392, 50, 1000, 0.00000000, 0.00000000, 0.00000000 );
        }
        sub_7180( l_U569 );
        l_U96 = 1;
        break;
        case 19:
        if ((g_U830 != 10) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U92 = 0;
            sub_886( "SA", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U92 != iVar2)
    {
        l_U93 = 1;
    }
    else
    {
        l_U93 = 0;
    }
    return;
}

void sub_15758(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_15850()
{
    int I;

    for ( I = 0; I <= 2; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U355[I] ))
        {
            if (l_U359[I] == 1)
            {
                if (IS_OBJECT_PLAYING_ANIM( l_U355[I], l_U363[I], "ap_anim_hangar" ))
                {
                    if ((GET_OBJECT_ANIM_CURRENT_TIME( l_U355[I], l_U363[I], "ap_anim_hangar" )) >= l_U367[I])
                    {
                        sub_886( "GA", "Pausing luggage animation between first and second hit.", 0 );
                        SET_OBJECT_ANIM_SPEED( l_U355[I], l_U363[I], "ap_anim_hangar", 0.00000000 );
                        l_U359[I] = 2;
                    }
                }
            }
            else if (l_U359[I] == 3)
            {
                if (IS_OBJECT_PLAYING_ANIM( l_U355[I], l_U363[I], "ap_anim_hangar" ))
                {
                    if ((GET_OBJECT_ANIM_CURRENT_TIME( l_U355[I], l_U363[I], "ap_anim_hangar" )) >= 0.99000000)
                    {
                        sub_886( "GA", "Luggage animation completed second hit.", 0 );
                        ADD_OBJECT_TO_EXPLOSION_OCCLUSION_TESTS( l_U355[I], 0 );
                        l_U359[I] = 4;
                    }
                }
            }
        }
    }
    return;
}

void sub_16370(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_16407( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_16407(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_6977( uParam0 );
            }
        }
    }
    return;
}

void sub_16763()
{
    sub_886( "SA", "INITIALIZE_SCRIPT_DATA - START", 0 );
    l_U93 = 1;
    l_U96 = 0;
    l_U309 = 0;
    sub_3291( ref l_U310, 1000, 1, 0 );
    l_U359[0] = 0;
    l_U359[1] = 0;
    l_U359[2] = 0;
    sub_3291( ref l_U423, GET_RANDOM_INT_IN_RANGE( l_U432, l_U433 ), 1, 0 );
    l_U375 = 0;
    l_U376 = 0;
    l_U377 = 0;
    l_U378 = 0;
    l_U788 = 0;
    l_U789 = 1;
    l_U434 = 0;
    sub_3291( ref l_U435, 3000, 1, 0 );
    sub_3291( ref l_U171, 2000, 1, 0 );
    sub_3291( ref l_U181, l_U180, 1, 0 );
    sub_3291( ref l_U190, 2000, 1, 0 );
    sub_3291( ref l_U200, l_U199, 1, 0 );
    sub_3291( ref l_U209, 2000, 1, 0 );
    l_U598 = 0;
    l_U599 = 0;
    sub_3291( ref l_U601, 2000, 1, 0 );
    sub_3291( ref l_U1030, 1000, 1, 0 );
    sub_3291( ref l_U1071, l_U1070, 1, 0 );
    sub_3291( ref l_U1123, 2000, 1, 1 );
    l_U560 = 0;
    l_U561 = 0;
    l_U768 = 0;
    l_U769 = 0;
    l_U770 = 0;
    l_U771 = 8;
    l_U618[0] = 0;
    l_U618[1] = 0;
    l_U618[2] = 0;
    l_U787 = 0;
    l_U1142 = 0;
    sub_3291( ref l_U1133, l_U1132, 1, 0 );
    sub_3291( ref l_U1147, l_U1146, 1, 0 );
    sub_3291( ref l_U1158, l_U1157, 1, 0 );
    l_U126 = 0;
    l_U125 = 0;
    sub_3291( ref l_U454, 2000, 1, 0 );
    l_U463 = 0;
    sub_3291( ref l_U464, 2000, 1, 0 );
    l_U473 = 0;
    sub_886( "SA", "INITIALIZE_SCRIPT_DATA - END", 0 );
    return;
}

void sub_17329()
{
    unknown[4] uVar2;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;
    unknown uVar51;
    unknown uVar52;
    unknown uVar53;
    unknown uVar54;
    unknown uVar55;
    unknown uVar56;
    unknown uVar57;
    unknown uVar58;
    unknown uVar59;
    unknown uVar60;
    unknown uVar61;
    unknown uVar62;
    unknown uVar63;
    unknown uVar64;
    unknown uVar65;
    unknown uVar66;
    unknown uVar67;
    unknown uVar68;
    unknown uVar69;
    unknown uVar70;
    unknown uVar71;
    unknown uVar72;
    unknown uVar73;
    unknown uVar74;
    unknown uVar75;
    unknown uVar76;
    unknown uVar77;
    unknown uVar78;
    unknown uVar79;
    unknown uVar80;
    unknown uVar81;
    unknown uVar82;
    unknown uVar83;
    unknown uVar84;
    unknown uVar85;
    unknown uVar86;

    sub_886( "CR", "LOAD_ASSETS - START", 0 );
    sub_17409( ref l_U127, -828.91000000, -752.69000000, -6.70000000, 90.00000000, -1283807603, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U379, l_U393, l_U396, 621371016, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U580, -809.00000000, -736.74680000, -6.73908700, l_U597, 270627203, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U474[0], -821.11000000, -724.56000000, -6.70000000, 180.00000000, -1964312659, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U474[1], -816.57000000, -727.55000000, -6.70000000, 148.00000000, 565778318, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U474[2], -814.33000000, -729.84000000, -6.70000000, 136.00000000, -956334494, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U474[3], -833.29000000, -717.46000000, -6.70000000, 180.00000000, -2142812815, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U474[4], -837.74000000, -704.05000000, -6.70000000, 220.00000000, 300568837, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U474[5], -839.45000000, -712.11000000, -6.70000000, 220.00000000, -191687929, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U626[0], -817.46000000, -739.59000000, -6.70000000, 150.00000000, -868935864, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U626[1], -819.96000000, -741.03000000, -6.70000000, 130.00000000, 1617652839, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U626[2], -819.96000000, -742.03000000, -6.70000000, 130.00000000, -605387266, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U626[3], -819.96000000, -743.03000000, -6.70000000, 130.00000000, -1806766767, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U626[4], -832.57000000, -736.78000000, -6.70000000, 130.00000000, 995987111, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U626[5], -835.99000000, -735.37000000, -6.70000000, 260.00000000, 1572979149, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U626[6], -835.20000000, -734.24000000, -6.70000000, 190.00000000, -1809698420, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U626[7], -835.20000000, -735.24000000, -6.70000000, 190.00000000, -220943734, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U626[8], -818.88000000, -732.19000000, -6.70000000, 130.00000000, 1678515151, 7, 3, 2, 0, 0 );
    sub_17409( ref l_U626[9], -816.48000000, -729.95000000, -6.70000000, 155.00000000, 1866506332, 7, 3, 2, 0, 0 );
    sub_18383( ref l_U224[3], "TRIGGER_COVER_1", -838.68000000, -750.74000000, -6.75000000, 2.39000000, 1.05000000, 1.66000000, 0.00000000, 0.00000000, -40.00000000, 1 );
    sub_18383( ref l_U224[0], "TRIGGER_COVER_2", -835.11000000, -752.45000000, -6.75000000, 2.92000000, 1.05000000, 1.66000000, 0.00000000, 0.00000000, -10.00000000, 1 );
    sub_18383( ref l_U224[1], "TRIGGER_COVER_3", -832.30000000, -752.90000000, -6.75000000, 2.67000000, 1.05000000, 1.66000000, 0.00000000, 0.00000000, -5.00000000, 1 );
    sub_18383( ref l_U224[2], "TRIGGER_COVER_4", -828.38000000, -752.13000000, -6.75000000, 2.64000000, 1.05000000, 1.66000000, 0.00000000, 0.00000000, 20.00000000, 1 );
    array(ref uVar2, 4);
    sub_18383( ref uVar2[0], "tb_BF_DieInAFire[0]", -844.17000000, -742.93000000, -6.74000000, 9.21000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_18383( ref uVar2[1], "tb_BF_DieInAFire[1]", -834.91000000, -745.20000000, -6.74000000, 9.21000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_18383( ref uVar2[2], "tb_BF_DieInAFire[2]", -826.66000000, -746.35000000, -6.74000000, 9.21000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, -10.00000000, 1 );
    sub_18383( ref uVar2[3], "tb_BF_DieInAFire[3]", -822.51000000, -756.03000000, -6.74000000, 15.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_19034( ref l_U865, ref uVar2 );
    sub_18383( ref l_U402, "tb_BF_PlayerSafeArea", -833.13000000, -755.19000000, -6.82000000, 23.69000000, 16.78000000, 3.59000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_18383( ref l_U1009, "tb_BF_PlayerFailBox", -833.10000000, -751.85000000, -6.82000000, 31.29000000, 23.81000000, 3.59000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19549( ref l_U1006, "teth_BF_OutOfFireA", -818.67000000, -732.71000000, -6.84000000, 60.20000000, 22.37000000, 5.20000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19549( ref l_U1007, "teth_BF_OutOfFireB", -824.87000000, -742.23000000, -6.84000000, 10.00000000, 10.00000000, 5.20000000, 0.00000000, 0.00000000, -15.00000000, 1 );
    sub_19549( ref l_U1008, "teth_BF_OutOfFireC", -807.43000000, -752.80000000, -6.84000000, 30.00000000, 22.37000000, 5.20000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_19804( ref l_U143, 1854128078, -845.73500000, -764.31090000, -5.63138000, 0.00000000, 0.00000000, 0.00000000 );
    sub_19852( ref l_U143, 1 );
    sub_20055( ref l_U143, 1 );
    sub_19804( ref l_U150, -177757171, -845.73510000, -766.71090000, -5.63138000, 0.00000000, 0.00000000, 0.00000000 );
    sub_19852( ref l_U150, 1 );
    sub_20055( ref l_U150, 1 );
    sub_19804( ref l_U157, 1727764963, -830.87210000, -763.63670000, -5.64607000, 0.00000000, 0.00000000, 0.00000000 );
    sub_19852( ref l_U157, 1 );
    sub_20055( ref l_U157, 1 );
    sub_19804( ref l_U164, 383934658, -833.27800000, -763.67880000, -5.64595000, 0.00000000, 0.00000000, 0.00000000 );
    sub_19852( ref l_U164, 1 );
    sub_20055( ref l_U164, 1 );
    SET_PED_MODEL_LOD_DISTANCES( 2113814688, 10, 80 );
    sub_886( "CR", "LOAD_ASSETS - END", 0 );
    return;
}

void sub_17409(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_18383(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_19034(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
        sub_886( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

void sub_19549(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_19804(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_19852(int iParam0, int iParam1)
{
    if ((sub_19864( iParam0 )) == 0)
    {
        sub_19930( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_19864(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_19930(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_20055(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_19864( iParam0 )) == 0)
    {
        sub_19930( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_20567()
{
    sub_886( "SA", "P_REQUEST_BECKER_PERSISTENT_ASSETS - START", 0 );
    sub_20641( ref l_U1167, ref g_U1030 );
    if ((l_U94) AND (g_U829 < 9))
    {
        sub_20676( -602188521, ref g_U1030 );
    }
    else
    {
        sub_20676( 2038070575, ref g_U1030 );
        sub_20676( -1053689591, ref g_U1030 );
        sub_22115( -1980065396, ref g_U1247 );
        sub_23067( "veh@std", ref g_U1429 );
        sub_23067( "LEVEL_S_FIN_CP_11", ref g_U1429 );
        sub_23067( "LEVEL_S_FIN_CP_12", ref g_U1429 );
        sub_23067( "VEH@CAR_JASRE", ref g_U1429 );
        sub_23067( "npc_pstl_cover_grenade", ref g_U1429 );
        sub_23067( "npc_rifle_cover_grenade", ref g_U1429 );
        sub_23067( "mped_grenade_core", ref g_U1429 );
        sub_24260( "SCRIPT_MISSION\S_AIR_HANGAR_01", ref g_U1950 );
        sub_24260( "SCRIPT_MISSION\S_AIR_HANGAR_02", ref g_U1950 );
        sub_25319( "Vehicle/Vehicle_Car.act", ref g_U1783 );
        sub_26312( ref l_U610, ref g_U1638 );
    }
    sub_27348( ref l_U1176, ref g_U1247 );
    sub_23067( "LEVEL_S_FIN_CP_09", ref g_U1429 );
    sub_25319( "LEVEL/S_AIR/S_FIN_VIG10_REACT.act", ref g_U1783 );
    sub_26347( 285, ref g_U1638 );
    sub_886( "SA", "P_REQUEST_BECKER_PERSISTENT_ASSETS - END", 0 );
    return;
}

void sub_20641(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_20676( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_20676(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_20711( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_20842( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_20711(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_20842( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_20842( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_20842( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_21490( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_20842( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_20842( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20842(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_20862( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_20862(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_21490(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_22115(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_22136( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_22268( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_22136(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_22268( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_22268( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_22268( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_21490( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_22268( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_22268( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22268(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_20862( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_23067(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_23088( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_23225( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_23088(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_23225( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_23225( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_23225( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_21490( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_23225( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_23225( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_23225(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_20862( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_24260(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_24281( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_24419( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_24281(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_24419( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_24419( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_24419( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_21490( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_24419( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_24419( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_24419(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_20862( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_25319(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_25340( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_25479( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_25340(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being requested!!!", 0 );
                sub_25479( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is already loading!!!", 0 );
                sub_25479( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_ACTION_TREE_LOADED( uParam0 ))
                {
                    sub_25479( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ACTION_TREE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_21490( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being removed!!!", 0 );
                sub_25479( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_ACTION_TREE_LOADED( uParam0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_25479( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ACTION_TREE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_25479(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_20862( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ACTION_TREE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_26312(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_26347( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_26347(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_26368( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_26506( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_26368(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                sub_26506( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                sub_26506( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    sub_26506( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_21490( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                sub_26506( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_26506( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_26506(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_20862( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_27348(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_22115( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_27555()
{
    sub_886( "SA", "P_REQUEST_BECKER_NONPERSISTENT_ASSETS - START", 0 );
    if ((l_U94) AND (g_U829 < 9))
    {
        sub_27662( "14_03_FIN_concat", 0 );
    }
    else
    {
        sub_27924( -670135969, ref g_U1368 );
        sub_27924( 1347850635, ref g_U1368 );
    }
    sub_29889( "S_AIR_PLANE_TAXI_START", ref g_U1910 );
    sub_29889( "S_AIR_PLANE_TAXI_LEAVE", ref g_U1910 );
    sub_27924( 1975594589, ref g_U1368 );
    sub_886( "SA", "P_REQUEST_BECKER_NONPERSISTENT_ASSETS - END", 0 );
    return;
}

void sub_27662(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_27924(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_27959( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_28111( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_27959(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_28111( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_28111( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_28111( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_28111( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_21490( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_21490( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_28111( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_28111( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_28111(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_20862( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_29889(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_29910( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_30051( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_29910(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                sub_30051( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                sub_30051( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        sub_30051( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                        sub_21490( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    sub_30051( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                sub_30051( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                sub_30051( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_30051(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_20862( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_31123(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_31243(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_31364(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_31491(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_31618(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_31739(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_31930(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_32057(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_32438(unknown uParam0)
{
    sub_886( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_7650( uParam0, sub_2241() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_33044(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_886( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_886( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_10502( iParam1 );
        sub_33303( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_33754( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_33754( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_33986( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_33754( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_33986( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_33986( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_33754( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_33986( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_33986( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_33986( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_33754( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_33986( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_33986( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_33986( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_33986( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_35544( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_886( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_33303(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_7866( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_886( "TEH", "Ending context", 0 );
        sub_886( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_33754(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_33986(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_35544(int iParam0)
{
    sub_9519( "CHECKPOINT DATA" );
    sub_35583( iParam0->_fU4 );
    sub_35606( iParam0->_fU16 );
    sub_35606( iParam0->_fU20 );
    sub_35606( iParam0->_fU24 );
    sub_35649( iParam0->_fU28 );
    sub_35649( iParam0->_fU56 );
    sub_35649( iParam0->_fU60 );
    sub_35649( iParam0->_fU64 );
    sub_35649( iParam0->_fU68 );
    sub_35649( iParam0->_fU72 );
    sub_35649( iParam0->_fU76 );
    sub_35649( iParam0->_fU80 );
    sub_35649( iParam0->_fU84 );
    sub_35649( iParam0->_fU88 );
    sub_35649( iParam0->_fU92 );
    sub_35606( iParam0->_fU32 );
    sub_35649( iParam0->_fU36 );
    sub_35649( iParam0->_fU40 );
    sub_35649( iParam0->_fU44 );
    sub_35606( iParam0->_fU136 );
    sub_35854( iParam0->_fU140 );
    sub_35649( iParam0->_fU52 );
    sub_9519( "---nRightHolsterAttachmentEnabled: " );
    sub_35649( iParam0->_fU96 );
    sub_9519( "---nRightHolsterAttachmentToggled: " );
    sub_35649( iParam0->_fU100 );
    sub_9519( "---nLeftHolsterAttachmentEnabled: " );
    sub_35649( iParam0->_fU104 );
    sub_9519( "---nLeftHolsterAttachmentToggled: " );
    sub_35649( iParam0->_fU108 );
    sub_9519( "---nRifleHolsterAttachmentEnabled: " );
    sub_35649( iParam0->_fU112 );
    sub_9519( "---nRifleHolsterAttachmentToggled: " );
    sub_35649( iParam0->_fU116 );
    sub_9519( "---nRightHandAttachmentEnabled: " );
    sub_35649( iParam0->_fU120 );
    sub_9519( "---nRightHandAttachmentToggled: " );
    sub_35649( iParam0->_fU124 );
    sub_9519( "---nLeftHandAttachmentEnabled: " );
    sub_35649( iParam0->_fU128 );
    sub_9519( "---nLeftHandAttachmentToggled: " );
    sub_35649( iParam0->_fU132 );
    sub_35649( l_U1 );
    sub_35649( 144 );
    return;
}

void sub_35583(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_35606(unknown uParam0)
{
    return;
}

void sub_35649(unknown uParam0)
{
    return;
}

void sub_35854(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_36777()
{
    sub_886( "GA", "P_BF_CREATE_JET start", 0 );
    l_U569 = sub_13899( 877881452, -809.00000000, -736.74680000, -6.73908700, 47.63203000, 0, 0, 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U569 )))
    {
        SET_ROOM_FOR_VEHICLE_BY_NAME( l_U569, ref g_U2358 );
        SET_VEHICLE_CAN_BE_DAMAGED( l_U569, 0 );
        SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( l_U569, 1 );
        SET_VEHICLE_ENGINE_CAN_BE_DAMAGED( l_U569, 0 );
        SET_VEHICLE_ENGINE_ON( l_U569, 1, 1 );
        SET_VEHICLE_EXTRA( l_U569, 1, 0 );
        SET_VEHICLE_EXTRA( l_U569, 2, 0 );
        SET_VEHICLE_DOOR_OPEN( l_U569, 0 );
    }
    sub_886( "GA", "P_BF_CREATE_JET end", 0 );
    return;
}

void sub_37079()
{
    switch (l_U560)
    {
        case 1:
        sub_886( "GA", "e_BF_HangarEnemySpawn = ENTITY_STATE_INIT", 0 );
        l_U561 = 0;
        sub_37196( ref l_U562, 1056964608, 0 );
        l_U560 = 2;
        sub_886( "GA", "e_BF_HangarEnemySpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U553[l_U561] = sub_37449( ref l_U474[l_U561] );
        sub_38128( l_U553[l_U561], ref l_U562 );
        sub_38423( ref l_U553[l_U561], "AIT_EXPERT", 4.00000000, 25.00000000 );
        if (NOT (IS_PED_DEAD( l_U553[l_U561] )))
        {
            if (l_U561 <= 2)
            {
                SET_ROOM_FOR_PED_BY_NAME( l_U553[l_U561], ref g_U2358 );
            }
            SET_PED_ALERTNESS( l_U553[l_U561], 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U553[l_U561], 1 );
            SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U553[l_U561], 0 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U553[l_U561], 0 );
        }
        l_U561++;
        if (l_U561 >= 6)
        {
            l_U560 = 3;
            sub_886( "GA", "e_BF_HangarEnemySpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_38780( ref l_U553, "pi_BF_HangarEnemy" );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U562._fU0, 1 );
        sub_9848( l_U553[0], 57534114, 25000, 0, 0 );
        sub_9848( l_U553[1], 57534114, 25000, 0, 0 );
        sub_9848( l_U553[2], 57534114, 25000, 0, 0 );
        sub_9848( l_U553[3], 57534114, 25000, 0, 0 );
        sub_9848( l_U553[4], 57534114, 25000, 0, 0 );
        sub_9848( l_U553[5], 57534114, 25000, 0, 0 );
        sub_39037( ref l_U553 );
        l_U560 = 4;
        sub_886( "GA", "e_BF_HangarEnemySpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_37196(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_37449(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_14010( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_37928( iParam0->_fU40 );
    sub_38008( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_37928(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_38008(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_38128(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_9519( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_37196( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_37196( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_38423(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

void sub_38780(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_39037(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_39068( (uParam0^)[I] );
    }
    return;
}

void sub_39068(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_39274()
{
    sub_886( "SA", "P_SETUP_BECKER - START", 0 );
    l_U392 = sub_37449( ref l_U379 );
    if (NOT (IS_PED_DEAD( l_U392 )))
    {
        FREEZE_PED_POSITION( l_U392, 1 );
        SET_ROOM_FOR_PED_BY_NAME( l_U392, ref g_U2358 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U392, 0 );
        SET_PED_AIM_LOCKONABLE( l_U392, 0 );
        SET_PED_PROOFS( l_U392, 1, 1, 1, 1, 1 );
        SET_PED_PERFECT_ACCURACY_OVERRIDE( l_U392, 1 );
        SET_PED_ALERTNESS( l_U392, 3 );
        SET_PED_CONSUMING_AMMO( l_U392, 0 );
        if (NOT (IS_PED_DEAD( sub_2241() )))
        {
            REGISTER_TARGET( l_U392, sub_2241() );
        }
        sub_9848( l_U392, 930042831, 0, 0, 0 );
        sub_9848( l_U392, -1101340804, 25000, 1, 0 );
    }
    sub_886( "SA", "P_SETUP_BECKER - END", 0 );
    return;
}

void sub_39604()
{
    sub_886( "SA", "P_BF_SETUP_WEATHER_TOD", 0 );
    sub_39650();
    return;
}

void sub_39650()
{
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
    FREEZE_TIME_OF_DAY( 6, 0 );
    return;
}

void sub_39721()
{
    sub_886( "GA", "P_BF_CREATE_PLACEMENTS start", 0 );
    l_U218[0] = CREATE_AMMOBAG_PLACEMENT_ROTATE( -839.70000000, -749.39000000, -6.73800000, 0.00000000, 0.00000000, 0.25000000, 10.00000000, 3.00000000, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U218[0] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U218[0], ref g_U2358 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[0], -1088031219, 200 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[0], 1138793073, 200 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[0], -1295933220, 200 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[0], -1383321053, 200 );
    }
    l_U218[1] = CREATE_AMMOBAG_PLACEMENT_ROTATE( -826.71000000, -752.05000000, -6.73800000, 0.00000000, 0.00000000, 0.75000000, 10.00000000, 3.00000000, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U218[1] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U218[1], ref g_U2358 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[1], -1088031219, 200 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[1], 1138793073, 200 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[1], -1295933220, 200 );
        SET_AMMOBAG_AMMO_AMOUNT( l_U218[1], -1383321053, 200 );
    }
    l_U221[0] = sub_40209( -4072149, -839.74000000, -750.40000000, -6.74000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U221[0] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U221[0], ref g_U2358 );
    }
    l_U221[1] = sub_40209( -4072149, -826.01000000, -752.58000000, -6.74000000, 0.00000000, 0.00000000, 0.75000000, 1, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U221[1] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U221[1], ref g_U2358 );
    }
    sub_886( "GA", "P_BF_CREATE_PLACEMENTS end", 0 );
    return;
}

void sub_40209(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_40490()
{
    sub_886( "GA", "P_BF_CREATE_LUGGAGE_CARTS start", 0 );
    l_U355[0] = sub_15397( 1703160427, 64701, 64785, -6.80000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U355[0] ))
    {
        FREEZE_OBJECT_POSITION( l_U355[0], 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U355[0], ref g_U2358 );
        ADD_OBJECT_TO_EXPLOSION_OCCLUSION_TESTS( l_U355[0], 1 );
    }
    l_U355[1] = sub_15397( 1423542550, 64704, 64784, -6.80000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U355[1] ))
    {
        FREEZE_OBJECT_POSITION( l_U355[1], 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U355[1], ref g_U2358 );
        ADD_OBJECT_TO_EXPLOSION_OCCLUSION_TESTS( l_U355[1], 1 );
    }
    l_U355[2] = sub_15397( -2104040304, 64708, 64785, -6.80000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U355[2] ))
    {
        FREEZE_OBJECT_POSITION( l_U355[2], 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U355[2], ref g_U2358 );
        ADD_OBJECT_TO_EXPLOSION_OCCLUSION_TESTS( l_U355[2], 1 );
    }
    sub_886( "GA", "P_BF_CREATE_LUGGAGE_CARTS end", 0 );
    return;
}

int sub_41357()
{
    if (NOT (DOES_PED_EXIST( l_U140 )))
    {
        l_U140 = sub_37449( ref l_U127 );
        if (NOT (IS_PED_DEAD( l_U140 )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U140, 1 );
            SET_ROOM_FOR_PED_BY_NAME( l_U140, ref g_U2358 );
        }
        sub_39068( l_U140 );
    }
    if (DOES_PED_EXIST( l_U140 ))
    {
        return 1;
        break;
    }
    return 0;
}

void sub_41491()
{
    unknown uVar2;

    sub_886( "GA", "P_BF_1403_CutsceneRegistration start", 0 );
    if (NOT (IS_PED_DEAD( sub_2241() )))
    {
        CUTSCENE_REGISTER_PED_TELEPORT( sub_2241(), g_U2014[9], g_U2129[9] );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "ap_sec5", "GrabSpline37", 0, 0 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U2168[9], g_U2207[9] );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( sub_41655(), "W_PI_GLK18_AA_H", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U392 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U392, "Armo_Unif_1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U392, l_U379._fU0, l_U379._fU12 );
        uVar2 = GET_WEAPON_FROM_HAND( l_U392, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_SP_GrnLch_Aa_H", 0 );
        }
        uVar2 = GET_WEAPON_FROM_HAND( l_U392, 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 0 );
        }
        ISEQ_REGISTER_ENTITY( 1975594589, "vig09_becker", l_U392, 0 );
        CUTSCENE_REGISTER_ISEQ( 1975594589 );
        FREEZE_PED_POSITION( l_U392, 0 );
    }
    sub_42298( l_U140 );
    if (NOT (IS_PED_DEAD( l_U140 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U140, "Vict_Form", 1 );
    }
    sub_42298( l_U553[0] );
    if (NOT (IS_PED_DEAD( l_U553[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U553[0], "A_UFE_Sold_E", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U553[0], l_U474[0]._fU0, l_U474[0]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U553[0], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U553[0], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 0 );
        }
    }
    sub_42298( l_U553[1] );
    if (NOT (IS_PED_DEAD( l_U553[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U553[1], "A_UFE_Sold_E^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U553[1], l_U474[1]._fU0, l_U474[1]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U553[1], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U553[1], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 0 );
        }
    }
    sub_42298( l_U553[2] );
    if (NOT (IS_PED_DEAD( l_U553[2] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U553[2], "A_UFE_Sold_E^2", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U553[2], l_U474[2]._fU0, l_U474[2]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U553[2], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U553[2], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 0 );
        }
    }
    sub_42298( l_U553[3] );
    if (NOT (IS_PED_DEAD( l_U553[3] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U553[3], "A_UFE_Sold_E^3", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U553[3], l_U474[3]._fU0, l_U474[3]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U553[3], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U553[3], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 0 );
        }
    }
    sub_42298( l_U553[4] );
    if (NOT (IS_PED_DEAD( l_U553[4] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U553[4], "A_UFE_Sold_E^4", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U553[4], l_U474[4]._fU0, l_U474[4]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U553[4], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U553[4], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_AR_G36K_Aa_H^4", 0 );
        }
    }
    sub_42298( l_U553[5] );
    if (NOT (IS_PED_DEAD( l_U553[5] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U553[5], "A_UFE_Sold_E^5", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U553[5], l_U474[5]._fU0, l_U474[5]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U553[5], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U553[5], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 0 );
        }
    }
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^6", 270627203 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^7", -868935864 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^8", 1617652839 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^9", -605387266 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^10", -1806766767 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^11", 995987111 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^12", 1572979149 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^13", -1809698420 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^14", -220943734 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^25", 1678515151 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^26", 1866506332 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^28", 738541963 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^29", -522275510 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^31", -903881458 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^32", 135081397 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^33", -1674168334 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^34", 814067633 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^35", -1216859927 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_E^36", -559168962 );
    if (NOT (IS_VEHICLE_DEAD( l_U569 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U569, "plane_jet", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U4154._fU0 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U4154._fU0, "monorail2", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U4154._fU4 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U4154._fU4, "monorail3", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U4154._fU8 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U4154._fU8, "monorail", 0 );
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( l_U143._fU0, l_U143._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( l_U150._fU0, l_U150._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( l_U157._fU0, l_U157._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( l_U164._fU0, l_U164._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( 447585719, -845.87700000, -764.39680000, -5.52251000 );
    REGISTER_HIDE_ENTITY_AT_POSITION( 1662128536, -845.87930000, -766.79880000, -5.52251000 );
    CUTSCENE_ENABLE_SKIP( 0 );
    sub_886( "GA", "P_BF_1403_CutsceneRegistration end", 0 );
    return;
}

int sub_41655()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_2241() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_2241(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_41718( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_2241(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_2241(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_2241(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

int sub_41718(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_42298(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_44658()
{
    unknown uVar2;
    unknown uVar3;

    if (l_U98._fU52)
    {
        DO_SCREEN_FADE_IN( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        sub_44700( 1 );
        sub_44868( l_U569, 285, 0.00000000, 0, 0 );
        sub_20676( 2038070575, ref g_U1030 );
        sub_20676( -1053689591, ref g_U1030 );
        sub_22115( -1980065396, ref g_U1247 );
        sub_23067( "veh@std", ref g_U1429 );
        sub_23067( "LEVEL_S_FIN_CP_11", ref g_U1429 );
        sub_23067( "LEVEL_S_FIN_CP_12", ref g_U1429 );
        sub_23067( "VEH@CAR_JASRE", ref g_U1429 );
        sub_23067( "npc_pstl_cover_grenade", ref g_U1429 );
        sub_23067( "npc_rifle_cover_grenade", ref g_U1429 );
        sub_23067( "mped_grenade_core", ref g_U1429 );
        sub_25319( "Vehicle/Vehicle_Car.act", ref g_U1783 );
        sub_26312( ref l_U610, ref g_U1638 );
        sub_24260( "SCRIPT_MISSION\S_AIR_HANGAR_01", ref g_U1950 );
        sub_27924( -670135969, ref g_U1368 );
        sub_27924( 1347850635, ref g_U1368 );
    }
    if (NOT (DOES_PLACEMENT_EXIST( l_U141 )))
    {
        if (GET_CUTSCENE_TIME_MS() >= 64038)
        {
            sub_45554();
        }
    }
    if (NOT l_U125)
    {
        if (GET_CUTSCENE_TIME_MS() >= 66917)
        {
            if (NOT (IS_PED_DEAD( sub_2241() )))
            {
                sub_886( "GA", "Hiding left handed weapon.", 0 );
                uVar2 = sub_45616();
                if (GET_DOES_WEAPON_EXIST( uVar2 ))
                {
                    SET_WEAPON_VISIBLE( uVar2, 0 );
                }
                uVar3 = GET_WEAPON_FROM_HAND( sub_2241(), 1, 0 );
                if (GET_DOES_WEAPON_EXIST( uVar3 ))
                {
                    SET_WEAPON_VISIBLE( uVar3, 0 );
                }
                l_U125 = 1;
            }
        }
    }
    if (NOT l_U126)
    {
        if ((sub_32057( ref g_U1950 )) AND ((sub_31930( ref g_U1910 )) AND ((sub_31739( ref g_U1368 )) AND ((sub_31618( ref g_U1638 )) AND ((sub_31491( ref g_U1783 )) AND ((sub_31364( ref g_U1429 )) AND ((sub_31243( ref g_U1247 )) AND (sub_31123( ref g_U1030 )))))))))
        {
            if (GET_CUTSCENE_TIME_MS() > 86200)
            {
                sub_886( "GA", "14_03_FIN can be skipped.", 0 );
                CUTSCENE_ENABLE_SKIP( 1 );
                sub_46586( ref g_U4154 );
                l_U126 = 1;
            }
        }
    }
    if (NOT l_U375)
    {
        if (GET_CUTSCENE_TIME_MS() > 95660)
        {
            sub_886( "MF", "Music Cue: 8.3", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_2_5", "FINALE_01_2_5", 0.00000000, 9000, 3000, -1082130432, 0 );
            l_U375 = 1;
        }
    }
    return;
}

void sub_44700(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_2241() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_2241(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_41718( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_41655();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_2241(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

void sub_44868(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3, boolean bParam4)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
    }
    sub_44919( uParam1, 1 );
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
        SET_PLAYBACK_SPEED( uParam0, uParam2 );
        if (fParam3 > 0.00000000)
        {
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, fParam3 );
        }
    }
    if (bParam4)
    {
        while ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
        {
            sub_9519( "Waiting for vehicle to start playing recorded path." );
            WAIT( 0 );
        }
    }
    return;
}

void sub_44919(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_45554()
{
    int iVar2;
    unknown uVar3;
    int iVar4;

    sub_886( "GA", "P_BF_1403_CREATE_FAKE_GUN start", 0 );
    iVar2 = 3711131;
    uVar3 = sub_45616();
    if (GET_DOES_WEAPON_EXIST( uVar3 ))
    {
        iVar4 = GET_WEAPON_TYPE( uVar3 );
        if (iVar4 == -1013714740)
        {
            iVar2 = 1676080365;
        }
        else if (iVar4 == 724901397)
        {
            iVar2 = 1216559076;
        }
        else if (iVar4 == -184942895)
        {
            iVar2 = -2117698134;
        }
        else if (iVar4 == 1478009203)
        {
            iVar2 = 280965399;
        };;;;
    }
    l_U141 = sub_40209( iVar2, -830.50000000, -757.50000000, -6.72000000, -1.55000000, 0.00000000, 0.50000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U141, ref g_U2358 );
    sub_886( "GA", "P_BF_1403_CREATE_FAKE_GUN end", 0 );
    return;
}

int sub_45616()
{
    unknown Result;
    unknown uVar3;

    if ((IS_PED_DEAD( sub_2241() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_2241(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_45679( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2241(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
    }
    return 0;
}

int sub_45679(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_46586(int iParam0)
{
    sub_886( "SA", "P_T2_CLEANUP_TRAM", 0 );
    sub_7300( iParam0->_fU12 );
    sub_7300( iParam0->_fU16 );
    sub_7300( iParam0->_fU20 );
    sub_7300( iParam0->_fU32 );
    sub_7300( iParam0->_fU28 );
    sub_7300( iParam0->_fU32 );
    sub_7267( iParam0 + 36 );
    sub_7267( iParam0 + 48 );
    sub_7267( iParam0 + 60 );
    sub_46729( iParam0->_fU0 );
    return;
}

void sub_46729(unknown uParam0)
{
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_MISSION_TRAIN( uParam0 );
    }
    return;
}

int sub_46928()
{
    return 1;
}

void sub_46947()
{
    unknown uVar2;
    unknown uVar3;

    sub_886( "GA", "P_BF_1403_StartBlendout start", 0 );
    sub_46586( ref g_U4154 );
    sub_7364( l_U141 );
    sub_47028( -602188521, ref g_U1030 );
    if (NOT (IS_PED_DEAD( l_U392 )))
    {
        if (NOT (ISEQ_QUERY_STATE( 1975594589, 3 )))
        {
            sub_886( "GA", "Starting the checkpoint straight from the blendout.", 0 );
            ISEQ_REGISTER_ENTITY( 1975594589, "vig09_becker", l_U392, 0 );
            sub_2324( l_U392, l_U379._fU0, l_U379._fU12 );
            ISEQ_START( 1975594589 );
            if (NOT (IS_PED_DEAD( GET_PLAYER_PED( sub_2263() ) )))
            {
                sub_47464( sub_2241(), g_U2014[9], g_U2129[9] );
                SNAP_PLAYER_TO_COVERLINE( sub_2263(), "ap_sec5", "GrabSpline37", 0, g_U2014[9] );
            }
        }
        FREEZE_PED_POSITION( l_U392, 1 );
        uVar2 = GET_WEAPON_FROM_HAND( l_U392, 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            SET_WEAPON_VISIBLE( uVar2, 1 );
        }
    }
    if ((NOT (IS_PED_DEAD( sub_2241() ))) AND (l_U94))
    {
        uVar3 = sub_45616();
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            sub_886( "GA", "Putting the player's rifle equipped.", 0 );
            SELECT_WEAPON_TO_HAND( sub_2241(), uVar3, 0, 1 );
        }
        else
        {
            sub_886( "GA", "Giving player a G36K", 0 );
            sub_9848( sub_2241(), 57534114, 200, 0, 0 );
        }
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[9], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[9], 1065353216, 0 );
    sub_44868( l_U569, 285, 0.00000000, 0, 0 );
    sub_47855();
    sub_24260( "SCRIPT_MISSION\S_AIR_HANGAR_02", ref g_U1950 );
    sub_48283();
    sub_49281( 1 );
    sub_15086( l_U326[2][0], 4000 );
    if (NOT (IS_PED_DEAD( l_U392 )))
    {
        SET_PED_CAN_BE_TARGETTED( l_U392, 0 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_FIN_CP_09", "B_OUT_MID_10_FIN_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
    sub_886( "MF", "Music Cue: 8.3b", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_5", "FINALE_01_5", 0.00000000, 5000, 5000, -1082130432, 0 );
    l_U789 = 1;
    sub_886( "GA", "P_BF_1403_StartBlendout end", 0 );
    return;
}

void sub_47028(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_5507( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_47464(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_47855()
{
    unknown uVar2;

    sub_886( "GA", "P_BF_START_PLANE_ENEMY start", 0 );
    l_U593 = sub_37449( ref l_U580 );
    sub_38128( l_U593, ref l_U562 );
    sub_38423( ref l_U593, "AIT_EXPERT", 10.00000000, 80.00000000 );
    uVar2 = sub_9848( l_U593, 724901397, 25000, 0, 0 );
    ENABLE_WEAPON_ATTACHMENT( uVar2, 13, 1 );
    TOGGLE_WEAPON_ATTACHMENT( uVar2, 13, 1 );
    SET_LASER_SIGHT_ATTACHMENT( uVar2, -938171172 );
    if (NOT (IS_PED_DEAD( l_U593 )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U593, ref g_U2358 );
        SET_PED_ALERTNESS( l_U593, 3 );
        SET_PED_COMBAT_MOVEMENT( l_U593, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U569 )))
        {
            ATTACH_PED_TO_VEHICLE( l_U593, l_U569, 0, l_U594, l_U597, 360.00000000, 0, 0, 0, 1 );
        }
        if (NOT (IS_PED_DEAD( sub_2241() )))
        {
            REGISTER_TARGET( l_U593, sub_2241() );
            TASK_COMBAT_PED( l_U593, sub_2241() );
        }
    }
    sub_886( "GA", "P_BF_START_PLANE_ENEMY end", 0 );
    return;
}

void sub_48283()
{
    int I;
    unknown uVar3;

    sub_886( "GA", "P_BF_ACTIVATE_HANGAR_ENEMIES start", 0 );
    if (NOT (IS_PED_DEAD( sub_2241() )))
    {
        for ( I = 0; I <= 5; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U553[I] )))
            {
                REGISTER_TARGET( l_U553[I], sub_2241() );
            }
            uVar3 = GET_WEAPON_FROM_HAND( l_U553[I], 0, 0 );
            if (GET_DOES_WEAPON_EXIST( uVar3 ))
            {
                SET_WEAPON_VISIBLE( uVar3, 1 );
            }
        }
        sub_42298( l_U553[0] );
        if (NOT (IS_PED_DEAD( l_U553[0] )))
        {
            sub_48521( ref l_U553[0], l_U778, 0, 0, 0, 0, 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U553[0], 1 );
        }
        sub_42298( l_U553[1] );
        if (NOT (IS_PED_DEAD( l_U553[1] )))
        {
            sub_48521( ref l_U553[1], l_U781, 0, 0, 0, 0, 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U553[1], 1 );
        }
        sub_42298( l_U553[4] );
        if (NOT (IS_PED_DEAD( l_U553[4] )))
        {
            sub_48521( ref l_U553[4], l_U772, 0, 0, 0, 0, 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U553[4], 1 );
        }
        sub_42298( l_U553[5] );
        if (NOT (IS_PED_DEAD( l_U553[5] )))
        {
            sub_48521( ref l_U553[5], l_U775, 0, 0, 0, 0, 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U553[5], 1 );
        }
        sub_42298( l_U553[2] );
        if (NOT (IS_PED_DEAD( l_U553[2] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U553[2], 0 );
            SET_PED_COMBAT_ATTRIBUTES( l_U553[2], 8192, 1 );
        }
        sub_42298( l_U553[3] );
        if (NOT (IS_PED_DEAD( l_U553[3] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U553[3], 0 );
            SET_PED_COMBAT_ATTRIBUTES( l_U553[3], 8192, 1 );
        }
    }
    sub_886( "GA", "P_BF_ACTIVATE_HANGAR_ENEMIES end", 0 );
    return;
}

void sub_48521(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, boolean bParam6, boolean bParam7, unknown uParam8)
{
    unknown uVar11;

    sub_886( "AT", "P_TASK_ENEMY_TO_COVER_THEN_COMBAT", 0 );
    if ((NOT (IS_PED_DEAD( (uParam0^) ))) AND (NOT (IS_PED_DEAD( sub_2241() ))))
    {
        REGISTER_TARGET( (uParam0^), sub_2241() );
        OPEN_SEQUENCE_TASK( ref uVar11 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (bParam6)
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, 3, 20000, 0.25000000, 256, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if (NOT bParam7)
        {
            if ((NOT (IS_STRING_NULL( uParam5 ))) AND (NOT (IS_STRING_NULL( uParam4 ))))
            {
                TASK_COMBAT_MOVE_TO_COVER( 0, uParam4, uParam5, 0 );
            }
            else
            {
                TASK_COMBAT_MOVE_TO_COVER_COORDS( 0, uParam1, 0 );
            }
        }
        else if ((NOT (IS_STRING_NULL( uParam5 ))) AND (NOT (IS_STRING_NULL( uParam4 ))))
        {
            TASK_COMBAT_MOVE_TO_COVER_TACTICAL( 0, uParam4, uParam5, uParam8, 0 );
        }
        else
        {
            TASK_COMBAT_MOVE_TO_COVER_TACTICAL_COORDS( 0, uParam1, uParam8, 0 );
        }
        CLOSE_SEQUENCE_TASK( uVar11 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar11 );
        CLEAR_SEQUENCE_TASK( uVar11 );
    }
    return;
}

void sub_49281(boolean bParam0)
{
    int I;
    unknown uVar4;

    for ( I = 0; I <= 5; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U553[I] )))
        {
            uVar4 = GET_WEAPON_FROM_HAND( l_U553[I], 0, 0 );
            if (GET_DOES_WEAPON_EXIST( uVar4 ))
            {
                if (bParam0)
                {
                    SET_WEAPON_CHANCE_TO_FIRE_BLANKS( uVar4, 100 );
                }
                else
                {
                    SET_WEAPON_CHANCE_TO_FIRE_BLANKS( uVar4, 0 );
                }
            }
        }
    }
    return;
}

int sub_49680()
{
    if (l_U98._fU52)
    {
        if (NOT sub_49704())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U392 )))
    {
        if (NOT l_U788)
        {
            if (IS_PED_SHOOTING( l_U392 ))
            {
                sub_886( "GA", "Becker fires grenade.", 0 );
                ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
                l_U788 = 1;
            }
        }
    }
    if (((CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FIN_CP_09", "B_OUT_MID_10_FIN_CAM" )) - 1)) || (NOT IS_ANIMATED_CAMERA_PLAYING())) AND (l_U788))
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[9], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[9], 1065353216, 0 );
        CAMERA_ANIMATED_STOP( 500, 1 );
        CAMERA_POINT_AT_GRENADE( 1 );
        if (NOT (IS_PLAYER_DEAD( sub_2263() )))
        {
            SET_PLAYER_FORCED_AIM( sub_2263(), 1, 0 );
        }
        if (NOT (IS_VEHICLE_DEAD( l_U569 )))
        {
            l_U578 = GET_SOUND_ID();
            PLAY_SOUND_FROM_VEHICLE( l_U578, "S_AIR_PLANE_TAXI_HOLD", l_U569 );
            sub_50312( l_U569, "S_AIR_PLANE_TAXI_START", ref g_U1910 );
        }
        return 1;
    }
    return 0;
}

int sub_49704()
{
    if (l_U54)
    {
        sub_886( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U54 = 0;
        return 1;
        break;
    }
    sub_886( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

void sub_50312(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = -1;
    if (sub_5861( uParam1, uParam2 ))
    {
        iVar5 = sub_5960( uParam1, uParam2 );
        if (NOT (iVar5 == -1))
        {
            if (NOT (IS_VEHICLE_DEAD( uParam0 )))
            {
                PLAY_SCRIPT_STREAM_FROM_VEHICLE( uParam0, iVar5 );
            }
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

void sub_50576(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_886( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_50701( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 50661, 50679, uParam8 );
}

void sub_50661()
{
    return;
}

int sub_50679()
{
    return 1;
}

void sub_50701(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_51012(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_886( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_886( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_886( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_886( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_886( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_886( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_27662( iParam0->_fU0, 0 );
            sub_886( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_51879( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_51879( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_886( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_52407( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_51879( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_52756( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_52756( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_51879(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_2241() )))
        {
            SET_PLAYER_CONTROL( sub_2263(), 0, uParam2 );
            SET_PED_DUCKING( sub_2241(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_2241() );
            }
            SET_PED_INVINCIBLE( sub_2241(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_52407(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_2241() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_2241(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_2241(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2241(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2241(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2241(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_52756(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_2241() )))
    {
        SET_PLAYER_CONTROL( sub_2263(), 1, 0 );
        SET_PED_INVINCIBLE( sub_2241(), 0 );
        if (bParam0)
        {
            sub_52837();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_52837()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_2241() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_2241(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_2241(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_2241(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_2241(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_53267()
{
    sub_886( "SA", "P_START_GRENADE_1_GAMEPLAY - START", 0 );
    sub_52756( 1, 1 );
    sub_53353( ref l_U423, GET_RANDOM_INT_IN_RANGE( l_U432, l_U433 ) );
    sub_53389();
    sub_886( "SA", "P_START_GRENADE_1_GAMEPLAY - END", 0 );
    return;
}

void sub_53353(unknown uParam0, unknown uParam1)
{
    sub_3291( uParam0, uParam1, 1, 0 );
    sub_3427( uParam0 );
    return;
}

void sub_53389()
{
    return;
}

void sub_53503(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_14887( sub_2241(), uParam0 );
}

void sub_53605()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    int iVar5;
    unknown uVar6;

    if (IS_EXPLOSION_IN_AREA( 0, -848.56000000, -721.49000000, -6.77000000, -788.56000000, -763.53000000, 2.79000000 ))
    {
        if (IS_EXPLOSION_IN_AREA( 0, -848.56000000, -721.49000000, -5.40000000, -788.56000000, -763.53000000, 3.86000000 ))
        {
            sub_886( "GA", "Player shot grenade out of the air.", 0 );
        }
        else
        {
            uVar2 = {sub_14781()};
            if (IS_EXPLOSION_IN_SPHERE( 0, uVar2, l_U324 ))
            {
                if (sub_14792( ref iVar5 ))
                {
                    uVar6 = l_U319[iVar5];
                    sub_14547( uVar6 );
                    if (iVar5 != 3)
                    {
                        sub_53834( iVar5 );
                    }
                    PED_SET_ACTION_INTENTION( l_U392, l_U401, 1000, 0.00000000, 0.00000000, 0.00000000 );
                    sub_53353( ref l_U454, 2000 );
                }
            }
        }
        if (l_U789)
        {
            sub_886( "GA", "Ending first blendout grenade bullet time.", 0 );
            DEACTIVATE_BULLET_TIME( 0, 0 );
            CAMERA_POINT_AT_GRENADE( 0 );
            if (NOT (IS_PLAYER_DEAD( sub_2263() )))
            {
                SET_PLAYER_FORCED_AIM( sub_2263(), 0, 0 );
            }
            sub_49281( 0 );
            l_U789 = 0;
        }
        if (NOT l_U377)
        {
            sub_886( "MF", "Music Cue: 8.4", 0 );
            sub_886( "MF", "Music Cue: 8.5", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_4_5", "FINALE_01_4_5", 2.00000000, 5000, 3000, -1082130432, 0 );
            l_U377 = 1;
        }
    }
    return;
}

void sub_53834(unknown uParam0)
{
    sub_886( "GA", "P_BF_LUGGAGE_TAKES_DAMAGE start", 0 );
    if (DOES_OBJECT_EXIST( l_U355[uParam0] ))
    {
        if (l_U359[uParam0] == 0)
        {
            PLAY_OBJECT_ANIM( l_U355[uParam0], l_U363[uParam0], "ap_anim_hangar", 1000.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( l_U355[uParam0], l_U363[uParam0], "ap_anim_hangar", 0.00000000 );
            l_U359[uParam0] = 1;
        }
        else if (l_U359[uParam0] == 2)
        {
            PLAY_OBJECT_ANIM( l_U355[uParam0], l_U363[uParam0], "ap_anim_hangar", 1000.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( l_U355[uParam0], l_U363[uParam0], "ap_anim_hangar", l_U371[uParam0] );
            l_U359[uParam0] = 3;
        }
    }
    sub_886( "GA", "P_BF_LUGGAGE_TAKES_DAMAGE end", 0 );
    return;
}

void sub_54544()
{
    return;
}

void sub_54562()
{
    if (NOT (sub_53503( l_U402 )))
    {
        if (sub_3547( ref l_U423 ))
        {
            sub_886( "GA", "Player is out in the open, firing a grenade.", 0 );
            if (sub_54661())
            {
                sub_15086( sub_14781(), 4000 );
            }
            else
            {
                sub_886( "GA", "Becker can't fire at the player.", 0 );
            }
            sub_53353( ref l_U423, GET_RANDOM_INT_IN_RANGE( l_U432, l_U433 ) );
        }
    }
    return;
}

int sub_54661()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    int I;

    if (sub_53503( l_U402 ))
    {
        if ((IS_PLAYER_SHOOTDODGING()) || (IS_LAST_MAN_STANDING_ACTIVE()))
        {
            return 0;
        }
        if ((GET_TIME_SINCE_LAST_LMS_ACTIVATION() > 1) AND (GET_TIME_SINCE_LAST_LMS_ACTIVATION() < 15000))
        {
            return 0;
        }
    }
    uVar2 = {sub_14781()};
    for ( I = 0; I <= 5; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U553[I] )))
        {
            if ((sub_54795( l_U553[I], uVar2 )) < 4.50000000)
            {
                return 0;
            }
        }
    }
    for ( I = 0; I <= 9; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U757[I] )))
        {
            if ((sub_54795( l_U757[I], uVar2 )) < 4.50000000)
            {
                return 0;
            }
        }
    }
    return 1;
}

void sub_54795(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

void sub_55082()
{
    if (NOT l_U598)
    {
        if ((NOT (IS_VEHICLE_DEAD( l_U569 ))) AND (NOT (IS_PED_DEAD( sub_2241() ))))
        {
            if ((((sub_15758( ref l_U553 )) + (sub_15758( ref l_U757 ))) <= 2) AND (l_U92 == 13))
            {
                sub_55174( 0.00000000 );
                l_U598 = 1;
            }
        }
    }
    if ((l_U598) AND (NOT l_U599))
    {
        if (sub_55804( l_U569, 285, l_U600 ))
        {
            sub_55284();
            l_U570 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "FIN_Engine_BlowBack_S", l_U569, l_U571, 0, 0, 0, 1065353216 );
            l_U574 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "FIN_Engine_BlowBack_S", l_U569, l_U575, 0, 0, 0, 1065353216 );
            sub_3427( ref l_U601 );
            l_U599 = 1;
        }
    }
    if (sub_3547( ref l_U601 ))
    {
        sub_886( "GA", "Can delete plane enemy.", 0 );
        if (NOT (IS_PED_DEAD( l_U593 )))
        {
            sub_6977( l_U593 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U569 )))
    {
        if (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U569 )))
        {
            sub_886( "GA", "Plane reached the end of it's path, deleting.", 0 );
            sub_7180( l_U569 );
        }
    }
    return;
}

void sub_55174(float fParam0)
{
    sub_886( "GA", "P_BF_START_PLANE_MOVING start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U569 )))
    {
        sub_44868( l_U569, 285, 1.00000000, fParam0, 0 );
        if (fParam0 == 0.00000000)
        {
            ;
        }
        else
        {
            sub_55284();
            l_U570 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "FIN_Engine_BlowBack_S", l_U569, l_U571, 0, 0, 0, 1065353216 );
            l_U574 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "FIN_Engine_BlowBack_S", l_U569, l_U575, 0, 0, 0, 1065353216 );
        }
        sub_6437( l_U578, 0 );
        sub_5844( "S_AIR_PLANE_TAXI_START", ref g_U1910 );
        sub_6178( "S_AIR_PLANE_TAXI_START", ref g_U1910 );
        l_U579 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U579, "S_AIR_PLANE_TAXI_MOVE", l_U569 );
        sub_50312( l_U569, "S_AIR_PLANE_TAXI_LEAVE", ref g_U1910 );
    }
    sub_886( "GA", "P_BF_START_PLANE_MOVING end", 0 );
    return;
}

void sub_55284()
{
    sub_886( "GA", "P_BF_CLOSE_PLANE_DOOR start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U569 )))
    {
        SET_VEHICLE_DOOR_SHUT( l_U569, 0, 0.00500000, 0 );
        SET_VEHICLE_COLLISION( l_U569, 0 );
    }
    sub_886( "GA", "P_BF_CLOSE_PLANE_DOOR end", 0 );
    return;
}

void sub_55804(unknown uParam0, int iParam1, float fParam2)
{
    int Result;

    Result = 0;
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            if ((GET_CURRENT_PLAYBACK_NUMBER_FOR_VEHICLE( uParam0 )) == iParam1)
            {
                if ((GET_TIME_POSITION_IN_RECORDING( uParam0 )) >= fParam2)
                {
                    Result = 1;
                }
            }
        }
    }
    return Result;
}

void sub_56226()
{
    if (NOT (IS_PED_DEAD( sub_2241() )))
    {
        if (NOT l_U463)
        {
            if (NOT (IS_PED_USING_MP3_COVER_TASK( sub_2241() )))
            {
                l_U463 = 1;
                sub_3427( ref l_U464 );
            }
        }
        else if (sub_3547( ref l_U464 ))
        {
            sub_53353( ref l_U454, 50 );
        }
        if (IS_PED_USING_MP3_COVER_TASK( sub_2241() ))
        {
            sub_4084( ref l_U464 );
            l_U463 = 0;
        }
        if (NOT l_U473)
        {
            if (IS_LAST_MAN_STANDING_ACTIVE())
            {
                l_U473 = 1;
            }
        }
        else if (NOT IS_LAST_MAN_STANDING_ACTIVE())
        {
            l_U473 = 0;
            sub_53353( ref l_U454, 2000 );
        }
        if (NOT IS_BULLET_CAMERA_ACTIVE())
        {
            if (sub_3547( ref l_U454 ))
            {
                if (NOT (sub_56459( l_U444 )))
                {
                    sub_56621();
                }
            }
        }
    }
    return;
}

int sub_56459(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_56472( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_56472(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_56621()
{
    int iVar2;
    char[12] cVar3;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    sub_886( "GA", "P_BECKER_ACTIVATE_TAUNT start", 0 );
    if (NOT (sub_56459( l_U444 )))
    {
        sub_56695( ref l_U444 );
        sub_56780( 2, l_U392, "BECKER", ref l_U444, 2, 0 );
        sub_56780( 1, sub_2241(), "MAX", ref l_U444, 2, 0 );
        iVar2 = GET_RANDOM_INT_IN_RANGE( 0, 100 );
        if (iVar2 < 35)
        {
            sub_886( "GA", "Playing Becker and Max speech.", 0 );
            array(ref cVar3, 2);
            StrCopy( ref cVar3[0], "SAIR_VIG09", 16 );
            StrCopy( ref cVar3[1], "SAIR_VIG10", 16 );
            sub_57118( ref cVar3, ref l_U444, 8, 1 );
        }
        else
        {
            sub_886( "GA", "Playing just Becker speech.", 0 );
            sub_57936( "SAIR_VIG09", ref l_U444, 8, 1 );
        }
    }
    sub_886( "GA", "P_BECKER_ACTIVATE_TAUNT end", 0 );
    return;
}

void sub_56695(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_56780(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_57118(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_57142( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_57142(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;

    StrCopy( ref cVar7, uParam1, 16 );
    return sub_57170( uParam0, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_57170(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_57205( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_57699( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_57205(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_57699(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_57936(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_57960( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_57960(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_57170( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

void sub_58212()
{
    sub_886( "GA", "P_START_GRENADE_2_GAMEPLAY start", 0 );
    sub_53353( ref l_U423, GET_RANDOM_INT_IN_RANGE( l_U432, l_U433 ) );
    sub_3427( ref l_U181 );
    l_U768 = 1;
    sub_886( "GA", "P_START_GRENADE_2_GAMEPLAY end", 0 );
    return;
}

void sub_58815()
{
    int I;

    switch (l_U768)
    {
        case 1:
        sub_886( "GA", "e_BF_ReinforcementEnemyW1Spawn = ENTITY_STATE_INIT", 0 );
        l_U769 = 0;
        for ( I = 0; I <= 1; I++ )
        {
            l_U614[I] = sub_13899( -1053689591, 2.00000000, 1.00000000, 1.00000000, 0.00000000, 0, 0, 0 );
            if (NOT (IS_VEHICLE_DEAD( l_U614[I] )))
            {
                SET_VEHICLE_ENGINE_ON( l_U614[I], 1, 1 );
                SET_VEHICLE_EXTRA( l_U614[I], 1, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 2, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 3, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 4, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 5, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 6, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 7, 1 );
                SET_VEHICLE_EXTRA( l_U614[I], 8, 1 );
                SET_VEHICLE_COLOUR_COMBINATION( l_U614[I], 1 );
            }
        }
        sub_44868( l_U614[0], l_U610[0], 1.00000000, 0, 0 );
        l_U622[0] = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U622[0], "S_AIR_HANGAR_JEEP_01", l_U614[0] );
        sub_44868( l_U614[1], l_U610[1], 0.85000000, 0, 0 );
        l_U622[1] = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U622[1], "S_AIR_HANGAR_JEEP_02", l_U614[1] );
        l_U768 = 2;
        sub_886( "GA", "e_BF_ReinforcementEnemyW1Spawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        if (l_U769 == 0)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[0] )))
            {
                l_U757[l_U769] = sub_59509( ref l_U626[l_U769], l_U614[0], -1, 0, 0 );
            }
        }
        if (l_U769 == 1)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[0] )))
            {
                l_U757[l_U769] = sub_59509( ref l_U626[l_U769], l_U614[0], 0, 0, 0 );
            }
        }
        if (l_U769 == 2)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[0] )))
            {
                l_U757[l_U769] = sub_59509( ref l_U626[l_U769], l_U614[0], 2, 0, 0 );
            }
        }
        if (l_U769 == 3)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[0] )))
            {
                l_U757[l_U769] = sub_59509( ref l_U626[l_U769], l_U614[0], 1, 0, 0 );
            }
        }
        if (l_U769 == 4)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[1] )))
            {
                l_U757[l_U769] = sub_59509( ref l_U626[l_U769], l_U614[1], -1, 0, 0 );
            }
        }
        if (l_U769 == 5)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[1] )))
            {
                l_U757[l_U769] = sub_59509( ref l_U626[l_U769], l_U614[1], 0, 0, 0 );
            }
        }
        if (l_U769 == 6)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[1] )))
            {
                l_U757[l_U769] = sub_59509( ref l_U626[l_U769], l_U614[1], 2, 0, 0 );
            }
        }
        if (l_U769 == 7)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[1] )))
            {
                l_U757[l_U769] = sub_59509( ref l_U626[l_U769], l_U614[1], 1, 0, 0 );
            }
        }
        sub_38128( l_U757[l_U769], ref l_U562 );
        sub_38423( ref l_U757[l_U769], "AIT_EXPERT", 4.00000000, 25.00000000 );
        if (NOT (IS_PED_DEAD( l_U757[l_U769] )))
        {
            SET_PED_ALERTNESS( l_U757[l_U769], 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U757[l_U769], 1 );
            SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U757[l_U769], 0 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U757[l_U769], 0 );
            SET_BULLET_CAM_PREF( l_U757[l_U769], "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        }
        l_U769++;
        if (l_U769 >= 8)
        {
            l_U768 = 3;
            sub_886( "GA", "e_BF_ReinforcementEnemyW1Spawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_38780( ref l_U757, "pi_BF_ReinforcementEnemy" );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U562._fU0, 1 );
        sub_9848( l_U757[0], 1478009203, 25000, 0, 0 );
        sub_9848( l_U757[1], 1478009203, 25000, 0, 0 );
        sub_9848( l_U757[2], 57534114, 25000, 0, 0 );
        sub_9848( l_U757[3], 57534114, 25000, 0, 0 );
        sub_9848( l_U757[4], 1478009203, 25000, 0, 0 );
        sub_9848( l_U757[5], -612753081, 25000, 0, 0 );
        sub_9848( l_U757[6], 57534114, 25000, 0, 0 );
        sub_9848( l_U757[7], 57534114, 25000, 0, 0 );
        sub_61082();
        l_U768 = 4;
        sub_886( "GA", "e_BF_ReinforcementEnemyW1Spawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_59509(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4)
{
    if ((HAS_MODEL_LOADED( iParam0->_fU16 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_14010( iParam0->_fU16, 1 );
    }
    if (((IS_VEHICLE_DEAD( uParam1 )) == 0) AND ((DOES_VEHICLE_EXIST( uParam1 )) == 1))
    {
        iParam0->_fU40 = CREATE_PED_INSIDE_VEHICLE( uParam1, iParam0->_fU24, iParam0->_fU16, uParam2, uParam4, iParam0->_fU48 );
    }
    else
    {
        SCRIPT_ASSERT( "The vehicle your trying to create a ped inside of is not valid!!!", 0 );
    }
    if (iParam3 == 1)
    {
        while ((DOES_PED_EXIST( iParam0->_fU40 )) == 0)
        {
            WAIT( 0 );
        }
    }
    sub_37928( iParam0->_fU40 );
    sub_38008( iParam0->_fU40 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        iParam0->_fU44 = 1;
    }
    return iParam0->_fU40;
}

void sub_61082()
{
    int I;

    sub_886( "GA", "P_BF_START_AGA start", 0 );
    l_U568 = PEDGROUPTASK_ADVANCE_CREATE( l_U562._fU0 );
    for ( I = 0; I < l_U553; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U553[I] )))
        {
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U562._fU0, l_U568, l_U553[I] );
            SET_PED_FLAG_LOCK_TO_COVER( l_U553[I], 0 );
        }
    }
    for ( I = 0; I <= 7; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U757[I] )))
        {
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U562._fU0, l_U568, l_U757[I] );
        }
    }
    if (NOT (IS_PED_DEAD( sub_2241() )))
    {
        PEDGROUPTASK_ADVANCE_SETTARGET_PED( l_U562._fU0, l_U568, sub_2241() );
    }
    PEDGROUPTASK_ADVANCE_SETTIMETOHIDE( l_U562._fU0, l_U568, 3.00000000 );
    PEDGROUPTASK_ADVANCE_SETTIMETOIDLE( l_U562._fU0, l_U568, 4.00000000 );
    PEDGROUPTASK_ADVANCE_SETNUMPEDSTOADVANCE( l_U562._fU0, l_U568, 1 );
    PEDGROUPTASK_ADVANCE_TRIGGER_MOVE( l_U562._fU0, l_U568 );
    sub_886( "GA", "P_BF_START_AGA end", 0 );
    return;
}

void sub_61580()
{
    int I;

    if ((DOES_VEHICLE_EXIST( l_U614[0] )) AND (NOT l_U618[0]))
    {
        if (NOT (IS_VEHICLE_DEAD( l_U614[0] )))
        {
            if (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U614[0] )))
            {
                sub_886( "GA", "Car 0 arrived.", 0 );
                sub_61712( ref l_U757[0], l_U614[0], l_U781, 0 );
                sub_61712( ref l_U757[1], l_U614[0], l_U778, 0 );
                sub_61712( ref l_U757[2], l_U614[0], l_U775, 0 );
                sub_61712( ref l_U757[3], l_U614[0], l_U775, 0 );
                l_U618[0] = 1;
            }
        }
        else
        {
            sub_886( "GA", "Car 0 blew up before it could arrive.", 0 );
            for ( I = 0; I <= 3; I++ )
            {
                sub_6977( l_U757[I] );
            }
            sub_6437( l_U622[0], 0 );
            sub_6604( ref l_U622[0] );
            l_U618[0] = 1;
        }
    }
    if ((DOES_VEHICLE_EXIST( l_U614[1] )) AND (NOT l_U618[1]))
    {
        if (NOT (IS_VEHICLE_DEAD( l_U614[1] )))
        {
            if (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U614[1] )))
            {
                sub_886( "GA", "Car 1 arrived.", 0 );
                sub_61712( ref l_U757[4], l_U614[1], l_U784, 0 );
                sub_61712( ref l_U757[5], l_U614[1], l_U775, 0 );
                sub_61712( ref l_U757[6], l_U614[1], l_U772, 0 );
                sub_61712( ref l_U757[7], l_U614[1], l_U778, 0 );
                l_U618[1] = 1;
            }
        }
        else
        {
            sub_886( "GA", "Car 1 blew up before it could arrive.", 0 );
            for ( I = 4; I <= 7; I++ )
            {
                sub_6977( l_U757[I] );
            }
            sub_6437( l_U622[1], 0 );
            sub_6604( ref l_U622[1] );
            l_U618[1] = 1;
        }
    }
    if ((DOES_VEHICLE_EXIST( l_U614[2] )) AND (NOT l_U618[2]))
    {
        if (NOT (IS_VEHICLE_DEAD( l_U614[2] )))
        {
            if (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U614[2] )))
            {
                sub_886( "GA", "Car 2 arrived.", 0 );
                sub_61712( ref l_U757[8], l_U614[2], l_U778, 1 );
                sub_61712( ref l_U757[9], l_U614[2], l_U781, 0 );
                l_U618[2] = 1;
            }
        }
        else
        {
            sub_886( "GA", "Car 2 blew up before it could arrive.", 0 );
            for ( I = 8; I <= 9; I++ )
            {
                sub_6977( l_U757[I] );
            }
            sub_6437( l_U622[2], 0 );
            sub_6604( ref l_U622[2] );
            l_U618[2] = 1;
        }
    }
    return;
}

void sub_61712(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, boolean bParam5)
{
    unknown uVar8;

    if ((NOT (IS_PED_DEAD( (uParam0^) ))) AND (NOT (IS_PED_DEAD( sub_2241() ))))
    {
        REGISTER_TARGET( (uParam0^), sub_2241() );
        OPEN_SEQUENCE_TASK( ref uVar8 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (bParam5)
        {
            TASK_LEAVE_VEHICLE( 0, uParam1 );
        }
        else
        {
            TASK_LEAVE_VEHICLE_DONT_CLOSE_DOOR( 0, uParam1 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_MOVE_TO_COVER_COORDS( 0, uParam2, 0 );
        CLOSE_SEQUENCE_TASK( uVar8 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar8 );
        CLEAR_SEQUENCE_TASK( uVar8 );
    }
    return;
}

int sub_62758()
{
    int I;

    for ( I = 0; I <= 9; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U757[I] )))
        {
            if (IS_PED_IN_ANY_VEHICLE( l_U757[I] ))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_62972()
{
    sub_886( "GA", "P_START_GRENADE_3_GAMEPLAY start", 0 );
    sub_53353( ref l_U423, GET_RANDOM_INT_IN_RANGE( l_U432, l_U433 ) );
    sub_3427( ref l_U200 );
    l_U770 = 1;
    sub_886( "GA", "P_START_GRENADE_3_GAMEPLAY end", 0 );
    return;
}

void sub_63575()
{
    switch (l_U770)
    {
        case 1:
        sub_886( "GA", "e_BF_ReinforcementEnemyW2Spawn = ENTITY_STATE_INIT", 0 );
        l_U771 = 8;
        l_U614[2] = sub_13899( 2038070575, 1.00000000, 1.00000000, 1.00000000, 0.00000000, 0, 0, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U614[2] )))
        {
            SET_VEHICLE_ENGINE_ON( l_U614[2], 1, 1 );
            SET_VEHICLE_SIREN( l_U614[2], 1 );
        }
        sub_44868( l_U614[2], l_U610[2], 1065353216, 0, 0 );
        l_U622[2] = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U622[2], "S_AIR_HANGAR_POLICE_01", l_U614[2] );
        l_U770 = 2;
        sub_886( "GA", "e_BF_ReinforcementEnemyW2Spawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        if (l_U771 == 8)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[2] )))
            {
                l_U757[l_U771] = sub_59509( ref l_U626[l_U771], l_U614[2], -1, 0, 0 );
            }
        }
        else if (l_U771 == 9)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U614[2] )))
            {
                l_U757[l_U771] = sub_59509( ref l_U626[l_U771], l_U614[2], 0, 0, 0 );
            }
        }
        else
        {
            l_U757[l_U771] = sub_37449( ref l_U626[l_U771] );
        }
        sub_38128( l_U757[l_U771], ref l_U562 );
        sub_38423( ref l_U757[l_U771], "AIT_EXPERT", 4.00000000, 25.00000000 );
        sub_64216( l_U757[l_U771], -1980065396, 4 );
        if (NOT (IS_PED_DEAD( l_U757[l_U771] )))
        {
            SET_PED_ALERTNESS( l_U757[l_U771], 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U757[l_U771], 1 );
            SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U757[l_U771], 0 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U757[l_U771], 0 );
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U562._fU0, l_U568, l_U757[l_U771] );
        }
        l_U771++;
        if (l_U771 >= 10)
        {
            l_U770 = 3;
            sub_886( "GA", "e_BF_ReinforcementEnemyW2Spawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_38780( ref l_U757, "pi_BF_ReinforcementEnemy" );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U562._fU0, 1 );
        sub_9848( l_U757[8], -1464892298, 25000, 0, 0 );
        sub_9848( l_U757[9], 57534114, 25000, 0, 0 );
        l_U770 = 4;
        sub_886( "GA", "e_BF_ReinforcementEnemyW2Spawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_64216(unknown uParam0, int iParam1, unknown uParam2)
{
    sub_886( "GA", "P_GIVE_PED_THROW_PROJECTILE start", 0 );
    if ((iParam1 == -1986694060) || ((iParam1 == -1258125182) || ((iParam1 == -1629340685) || ((iParam1 == -1980065396) || ((iParam1 == -1378176668) || (iParam1 == -378310276))))))
    {
        sub_9203( uParam0, iParam1, 5, uParam2, 0 );
    }
    else if ((iParam1 == 735364275) || (iParam1 == 1545805694))
    {
        sub_9203( uParam0, iParam1, 6, uParam2, 0 );
    }
    else
    {
        SCRIPT_ASSERT( "Unknown holster for projectile type.  Please extend P_GIVE_PED_THROW_PROJECTILE to include this projectile type.", 0 );
        sub_9203( uParam0, iParam1, 5, uParam2, 0 );
    }
    sub_886( "GA", "P_GIVE_PED_THROW_PROJECTILE end", 0 );
    return;
}

void sub_65170()
{
    sub_886( "GA", "P_START_GRENADE_4_GAMEPLAY start", 0 );
    if (sub_54661())
    {
        sub_15086( sub_14781(), 4000 );
        l_U434 = 0;
    }
    else
    {
        l_U434 = 1;
        sub_4084( ref l_U435 );
    }
    sub_53353( ref l_U423, GET_RANDOM_INT_IN_RANGE( l_U432, l_U433 ) );
    sub_886( "GA", "P_START_GRENADE_4_GAMEPLAY end", 0 );
    return;
}

void sub_65828(unknown uParam0)
{
    int I;

    if ((sub_15758( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_66318(int iParam0, unknown uParam1)
{
    if (NOT (sub_56472( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

void sub_66540(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_3291( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U2, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_66803(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_3427( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_67350(unknown uParam0, boolean bParam1)
{
    sub_4830( ref l_U55 );
    l_U55 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U55, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

void sub_68022()
{
    int I;

    sub_886( "GA", "P_BF_SETUP_MPM_NIS start", 0 );
    if (NOT (IS_PED_DEAD( l_U392 )))
    {
        if (NOT (ISEQ_QUERY_STATE( 1975594589, 3 )))
        {
            ISEQ_REGISTER_ENTITY( 1975594589, "vig09_becker", l_U392, 0 );
            sub_2324( l_U392, l_U379._fU0, l_U379._fU12 );
            ISEQ_START( 1975594589 );
            PED_SET_ACTION_INTENTION( l_U392, 56, 1000, 0, 0, 0 );
        }
        FREEZE_PED_POSITION( l_U392, 1 );
        SET_PED_CAN_BE_TARGETTED( l_U392, 0 );
    }
    if (NOT l_U598)
    {
        sub_55174( 15000.00000000 );
        l_U598 = 1;
    }
    sub_55284();
    sub_6977( l_U593 );
    for ( I = 0; I <= 2; I++ )
    {
        if (NOT (DOES_VEHICLE_EXIST( l_U614[I] )))
        {
            if (I == 2)
            {
                l_U614[I] = sub_13899( 2038070575, 1.00000000, 1.00000000, 1.00000000, 0.00000000, 0, 0, 0 );
                SET_VEHICLE_SIREN( l_U614[I], 1 );
            }
            else
            {
                l_U614[I] = sub_13899( -1053689591, 1.00000000, 1.00000000, 1.00000000, 0.00000000, 0, 0, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 1, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 2, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 3, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 4, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 5, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 6, 0 );
                SET_VEHICLE_EXTRA( l_U614[I], 7, 1 );
                SET_VEHICLE_EXTRA( l_U614[I], 8, 1 );
                SET_VEHICLE_COLOUR_COMBINATION( l_U614[I], 1 );
            }
            sub_44868( l_U614[I], l_U610[I], 1065353216, 0, 0 );
            SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE( l_U614[I] );
        }
    }
    sub_68674( "SCRIPT_MISSION\S_AIR_HANGAR_01", ref g_U1950 );
    sub_5844( "S_AIR_PLANE_TAXI_START", ref g_U1910 );
    sub_6178( "S_AIR_PLANE_TAXI_START", ref g_U1910 );
    SET_CAM_VIEW_MODE( 0 );
    sub_886( "GA", "P_BF_SETUP_MPM_NIS end", 0 );
    return;
}

void sub_68674(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5507( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_68970(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_69141(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_69153( iParam0 );
    if ((IS_PED_DEAD( sub_2241() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_2241(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_41718( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_45679( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_2241(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_2241(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_2241(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_2241(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_2241() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_2241(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_2241(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_2241(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_2241(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_2241() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_2241(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_45679( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_2241(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_2241(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_2241(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_69153(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

void sub_70650()
{
    sub_886( "GA", "P_BF_START_MPM start", 0 );
    if (GET_ADRENALINE_AMT() < 0.10000000)
    {
        SET_ADRENALINE_AMT( 0.10000000 );
    }
    DEACTIVATE_BULLET_TIME( 1, 1 );
    ACTIVATE_BULLET_TIME( 0, l_U1156, 1 );
    SET_PLAYER_CAN_CANCEL_SHOOTDODGE( 0 );
    SET_PED_CONSUMING_AMMO( sub_2241(), 0 );
    DISPLAY_HUD( 0 );
    ENABLE_CROSSHAIR( 1 );
    SET_SILHOUETTE_ACTIVE( 0 );
    SET_INSTANT_FIRE_FORCED( 0 );
    SET_BULLET_CAM_ON_NEXT_PROJECTILE( l_U392, "FINALE_01_MEDIUM_FAILSAFE" );
    SET_PED_PROOFS( sub_2241(), 1, 1, 1, 1, 1 );
    sub_3427( ref l_U1147 );
    sub_3427( ref l_U1158 );
    ENABLE_MPM( 1 );
    ENABLE_ALL_ADRENALINE( 0 );
    SET_CROSSHAIR_PULSE();
    sub_886( "GA", "P_BF_START_MPM end", 0 );
    return;
}

void sub_71568()
{
    sub_886( "GA", "P_START_MPM_WIN_SEQUENCE start", 0 );
    sub_6977( l_U140 );
    sub_6977( l_U593 );
    sub_7075( ref l_U553 );
    sub_7075( ref l_U757 );
    sub_7146( ref l_U614 );
    if (NOT (IS_VEHICLE_ON_SCREEN( l_U569 )))
    {
        sub_7180( l_U569 );
    }
    sub_7267( ref l_U355 );
    sub_7411( ref l_U218 );
    sub_71715();
    sub_886( "GA", "P_START_MPM_WIN_SEQUENCE end", 0 );
    return;
}

void sub_71715()
{
    sub_886( "CR", "P_UNLOAD_ASSETS - START", 0 );
    sub_71770( ref l_U1167, ref g_U1030 );
    sub_47028( -602188521, ref g_U1030 );
    sub_47028( 2038070575, ref g_U1030 );
    sub_47028( -1053689591, ref g_U1030 );
    sub_71879( ref l_U1176, ref g_U1247 );
    sub_71914( -1980065396, ref g_U1247 );
    sub_72110( l_U142, ref g_U1429 );
    sub_72110( "veh@std", ref g_U1429 );
    sub_72110( "LEVEL_S_FIN_CP_11", ref g_U1429 );
    sub_72110( "LEVEL_S_FIN_CP_12", ref g_U1429 );
    sub_72110( "LEVEL_S_FIN_CP_09", ref g_U1429 );
    sub_72110( "VEH@CAR_JASRE", ref g_U1429 );
    sub_72110( "npc_pstl_cover_grenade", ref g_U1429 );
    sub_72110( "npc_rifle_cover_grenade", ref g_U1429 );
    sub_72110( "mped_grenade_core", ref g_U1429 );
    sub_68674( "SCRIPT_MISSION\S_AIR_HANGAR_01", ref g_U1950 );
    sub_68674( "SCRIPT_MISSION\S_AIR_HANGAR_02", ref g_U1950 );
    sub_72601( l_U397, ref g_U1783 );
    sub_72601( "LEVEL/S_AIR/S_FIN_VIG10_REACT.act", ref g_U1783 );
    if (g_U830 == 8)
    {
        sub_72601( "Vehicle/Vehicle_Car.act", ref g_U1783 );
    }
    sub_72870( ref l_U610, ref g_U1638 );
    sub_72905( 285, ref g_U1638 );
    sub_886( "CR", "P_UNLOAD_ASSETS - END", 0 );
    return;
}

void sub_71770(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_47028( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_71879(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_71914( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_71914(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_5507( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_72110(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5507( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_72601(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5507( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_72870(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_72905( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_72905(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_5507( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_73312()
{
    sub_886( "GA", "P_BF_END_MPM start", 0 );
    SET_CAM_VIEW_MODE( 1 );
    SET_PLAYER_CAN_CANCEL_SHOOTDODGE( 1 );
    SET_PED_CONSUMING_AMMO( sub_2241(), 1 );
    ENABLE_CROSSHAIR( 0 );
    DISPLAY_HUD( 0 );
    SET_SILHOUETTE_ACTIVE( 1 );
    SET_INSTANT_FIRE_FORCED( 0 );
    SET_PED_PROOFS( sub_2241(), 0, 0, 0, 0, 0 );
    ENABLE_MPM( 0 );
    ENABLE_ALL_ADRENALINE( 1 );
    sub_886( "GA", "P_BF_END_MPM end", 0 );
    return;
}


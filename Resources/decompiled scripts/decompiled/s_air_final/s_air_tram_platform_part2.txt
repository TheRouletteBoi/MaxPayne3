void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U55 = -1;
    l_U56 = {64536, 64536, 64536};
    l_U78 = 0;
    l_U79 = 0;
    l_U80 = 1500;
    l_U126 = 0;
    l_U127 = 1;
    l_U128 = 1;
    l_U129 = 0;
    l_U132 = {-81.84300000, 92.47200000, -4.07800000};
    l_U135 = {0.00000000, -2.00000000, 0.00000000};
    l_U138 = {-1.50000000, -1.40000000, 1.00000000};
    l_U141 = 90.00000000;
    l_U279 = 2000;
    l_U376 = 7.00000000;
    l_U377 = 50.00000000;
    l_U394 = 5000;
    l_U567 = 2000;
    l_U596 = 3000;
    l_U606 = 2000;
    l_U607 = 1500;
    l_U626 = 1000;
    l_U658 = 8.00000000;
    l_U659 = 8.00000000;
    l_U660 = 4.00000000;
    l_U680 = 3000;
    l_U748 = 4000;
    l_U759 = 3000;
    l_U769 = 4000;
    l_U771 = {-69.51894000, 138.47970000, -4.66799000};
    l_U903 = 650;
    l_U904 = 2250;
    l_U905 = 0;
    l_U906 = 0;
    l_U907 = 0;
    sub_662( "SA", "Script s_air_Tram_Platform.sc is starting up...", 0 );
    l_U126 = 1;
    sub_717();
    if (g_U829 == 5)
    {
        sub_2248();
    }
    while (NOT IS_EXITFLAG_SET())
    {
        sub_2855();
        sub_11311();
        if (l_U129 == 0)
        {
            sub_12862();
            sub_56192();
        }
        sub_56414();
        sub_56497();
        sub_56724();
        sub_57015( ref l_U232, -1054867456, 0, 1 );
        sub_57015( ref l_U336, -1054867456, 0, 1 );
        sub_57182( ref l_U232 );
        sub_57182( ref l_U336 );
        WAIT( 0 );
    }
    if (g_U861[4]._fU40 == 3)
    {
        sub_5108( 0 );
    }
    else
    {
        sub_5108( 1 );
    }
    sub_57407();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_air_Tram_Platform_Part2" );
    sub_662( "SA", "Script s_air_Tram_Platform.sc is terminating...", 0 );
    return;
}

void sub_662(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_717()
{
    sub_662( "SA", "P_INITIALIZE_ARRAYS", 0 );
    l_U704[0] = -1880103805;
    l_U704[1] = g_U2375;
    l_U704[2] = g_U2376;
    l_U704[3] = g_U2377;
    l_U704[4] = g_U2378;
    l_U704[5] = g_U2379;
    l_U704[6] = g_U2380;
    l_U704[7] = g_U2396;
    l_U704[8] = -576031449;
    l_U704[9] = -338998251;
    l_U704[10] = 2042458963;
    l_U704[11] = 1751830702;
    l_U704[12] = g_U2394;
    l_U704[13] = g_U2395;
    l_U704[14] = 2070806350;
    l_U704[15] = -340235727;
    l_U704[16] = -1409914275;
    l_U704[17] = -1589640354;
    l_U704[18] = g_U2384;
    l_U704[19] = g_U2385;
    l_U704[20] = g_U2386;
    l_U704[21] = g_U2387;
    l_U704[22] = g_U2381;
    l_U704[23] = g_U2382;
    l_U704[24] = g_U2383;
    l_U730[0] = -184942895;
    l_U730[1] = 57534114;
    l_U730[2] = -612753081;
    l_U730[3] = -1464892298;
    l_U730[4] = 1478009203;
    l_U730[5] = 724901397;
    l_U730[6] = 2090054632;
    l_U730[7] = -1986694060;
    l_U142[0] = {-70.36733000, 46.23283000, -5.89565800};
    l_U142[1] = {-70.74962000, 52.16768000, -5.89565800};
    l_U142[2] = {-70.66848000, 63.03588000, -5.89565800};
    l_U142[3] = {-70.39780000, 69.41042000, -5.89565800};
    l_U142[4] = {-70.95245000, 80.50426000, -5.89565800};
    l_U142[5] = {-71.21555000, 86.48540000, -5.89565800};
    l_U142[6] = {-89.12000000, 46.33000000, -5.88000000};
    l_U142[7] = {-89.24000000, 52.36000000, -5.88000000};
    l_U142[8] = {-89.52000000, 63.47000000, -5.88000000};
    l_U142[9] = {-89.16000000, 69.28000000, -5.88000000};
    l_U142[10] = {-89.25000000, 80.52000000, -5.88000000};
    l_U142[11] = {-89.77000000, 86.52000000, -5.88000000};
    l_U255[0] = -612753081;
    l_U255[1] = 57534114;
    l_U255[2] = 1478009203;
    l_U255[3] = 57534114;
    l_U237[0] = 1;
    l_U237[1] = 1;
    l_U237[2] = 2;
    l_U237[3] = 2;
    l_U242[0] = {-1.00000000, 3.00000000, 0.90000000};
    l_U242[1] = {-1.20000000, -3.50000000, 0.90000000};
    l_U242[2] = {-1.20000000, 3.00000000, 0.90000000};
    l_U242[3] = {-1.20000000, -3.50000000, 0.90000000};
    l_U260[0] = "B0BB2A54_1A7BC40E_Corner1";
    l_U260[1] = "Corner_Position02";
    l_U260[2] = "B0BB2A54_9C79663B_Popover1";
    l_U260[3] = "B0BB2A54_EB738302_Corner2";
    l_U265[0] = 2;
    l_U265[1] = 1;
    l_U265[2] = 0;
    l_U265[3] = 0;
    l_U359[0] = -184942895;
    l_U359[1] = 1478009203;
    l_U359[2] = -612753081;
    l_U359[3] = 57534114;
    l_U341[0] = 0;
    l_U341[1] = 1;
    l_U341[2] = 1;
    l_U341[3] = 2;
    l_U346[0] = {-1.20000000, -3.50000000, 0.90000000};
    l_U346[1] = {-1.00000000, 3.00000000, 0.90000000};
    l_U346[2] = {-1.20000000, -3.50000000, 0.90000000};
    l_U346[3] = {-1.20000000, -3.50000000, 0.90000000};
    l_U364[0] = "Corner_Position03";
    l_U364[1] = "B0BB2A54_B7CF7EB3_Popover1";
    l_U364[2] = "B0BB2A54_162BD872_Corner1";
    l_U364[3] = "B0BB2A54_FEF10CF9_Corner2";
    l_U369[0] = 1;
    l_U369[1] = 2;
    l_U369[2] = 0;
    l_U369[3] = 0;
    return;
}

void sub_2248()
{
    sub_662( "SA", "P_TP_SETUP_DOORS", 0 );
    sub_2329( ref g_U2804, -1193094906, -78.32187000, 92.00945000, -3.33296000, 0.00000000, 0.00000000, 0.00000000 );
    sub_2387( ref g_U2804, -85.00000000, 85.00000000 );
    sub_2559( ref g_U2804, 1 );
    sub_2689( ref g_U2804, 1 );
    sub_2329( ref g_U2811, -1654726147, -75.92067000, 92.00945000, -3.33296000, 0.00000000, 0.00000000, 0.00000000 );
    sub_2387( ref g_U2811, -85.00000000, 85.00000000 );
    sub_2559( ref g_U2811, 1 );
    sub_2689( ref g_U2811, 1 );
    return;
}

void sub_2329(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_2387(int iParam0, float fParam1, float fParam2)
{
    if ((sub_2399( iParam0 )) == 0)
    {
        sub_2465( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

int sub_2399(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_2465(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_2559(int iParam0, int iParam1)
{
    if ((sub_2399( iParam0 )) == 0)
    {
        sub_2465( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_2689(int iParam0, unknown uParam1)
{
    if ((sub_2399( iParam0 )) == 0)
    {
        sub_2465( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_2855()
{
    if (g_U830 == 5)
    {
        switch (l_U129)
        {
            case 0:
            if ((sub_3010()) || (IS_PED_DEAD( sub_2937() )))
            {
                l_U129 = 1;
                sub_662( "SA", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_3504())
            {
                l_U129 = 3;
            }
            else if ((sub_3544( 0 )) == 1)
            {
                l_U129 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_2937() )))
            {
                l_U129 = 3;
                sub_662( "SA", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_662( "SA", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_2937() ))) AND (NOT (IS_PLAYER_DEAD( sub_2959() ))))
            {
                SET_PLAYER_CONTROL( sub_2959(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_2937() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_2937(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_5108( 0 );
            l_U129 = 4;
            sub_662( "SA", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_662( "SA", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_6946( ref l_U90, sub_2937() );
            if ((g_U861[6]._fU40 != 4) AND (g_U861[6]._fU40 != 0))
            {
                sub_662( "SA", "Shutting down script for MCE_TRAM_FIGHT_PART_1.", 0 );
                sub_11080( ref g_U861[6] );
                SET_EXITFLAG_FOR_SCRIPT( g_U861[6]._fU32 );
            }
            l_U128 = 0;
            l_U129 = 5;
            sub_662( "SA", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_662( "SA", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U126 = 1;
            l_U129 = 0;
            sub_662( "SA", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_2937()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_2959() );
    }
    return 0;
}

void sub_2959()
{
    return GET_PLAYER_ID();
}

int sub_3010()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_2937() )))
        {
            SET_PED_FORCED_TO_WALK( sub_2937(), 0 );
            SET_PLAYER_FORCED_AIM( sub_2959(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_2959(), 1 );
            if ((IS_PED_VISIBLE( sub_2937() )) == 0)
            {
                SET_PED_VISIBLE( sub_2937(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_3504()
{
    return g_U648;
}

int sub_3544(int iParam0)
{
    iParam0 = 1;
    switch (l_U79)
    {
        case 0:
        if (NOT (sub_3605( ref l_U81 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_2937() )))
            {
                l_U80 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_3715( ref l_U81, l_U80, 1, 1 );
            sub_3851( ref l_U81 );
        }
        if (sub_3971( ref l_U81 ))
        {
            sub_662( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_2937() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_2959() )))
            {
                SET_PLAYER_CONTROL( sub_2959(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U79 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U79 = 2;
            }
            else
            {
                l_U79 = 3;
            }
        }
        break;
        case 2:
        sub_662( "NS", "Player will QUIT", 0 );
        sub_4458();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_662( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_4458();
        return 1;
        break;
    }
    return 0;
}

int sub_3605(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_3715(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_3851(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_3971(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_4458()
{
    sub_662( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4508( ref l_U81 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_2959() )))
    {
        SET_PLAYER_CONTROL( sub_2959(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U78 = 0;
    l_U78 = l_U78;
    l_U79 = 0;
    return;
}

void sub_4508(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_5108(boolean bParam0)
{
    sub_662( "SA", "P_TP_CLEANUP_ALL", 0 );
    STOP_SCRIPT_STREAM( l_U770 );
    ISEQ_TERMINATE( -1774213497 );
    sub_5181( -1774213497, ref g_U1368 );
    sub_5553( ref l_U232 );
    sub_5553( ref l_U336 );
    if (bParam0)
    {
        sub_5553( ref g_U2822 );
        sub_5553( ref g_U2880 );
    }
    sub_5719( l_U131 );
    sub_5762();
    sub_5866();
    sub_6015();
    sub_6141();
    sub_6256();
    sub_6391();
    sub_6454( ref g_U4353 );
    sub_6454( ref g_U4552 );
    sub_6655();
    if (NOT (IS_PED_DEAD( sub_2937() )))
    {
        SET_PLAYER_CAN_USE_SHOOTDODGE( sub_2959(), 1 );
        SET_PED_FORCED_TO_WALK( sub_2937(), 0 );
    }
    RESET_PED_MODEL_LOD_DISTANCES( -1880103805 );
    sub_6762( ref l_U661 );
    return;
}

void sub_5181(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_5293( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_5293(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_5553(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_5587( (uParam0^)[I] );
    }
    return;
}

void sub_5587(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_5719(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_5762()
{
    sub_662( "SA", "P_TP_CLEAN_BUTTON", 0 );
    sub_5808( g_U3013 );
    sub_5808( g_U3014 );
    return;
}

void sub_5808(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_5866()
{
    sub_662( "SA", "P_TP_CLEAN_LIGHTS", 0 );
    sub_5808( g_U3028 );
    sub_5808( g_U3029 );
    sub_5808( g_U3030 );
    sub_5808( g_U3031 );
    sub_5808( g_U3032 );
    sub_5808( g_U3033 );
    sub_5808( g_U3034 );
    sub_5808( g_U3035 );
    sub_5808( g_U3036 );
    sub_5808( g_U3037 );
    return;
}

void sub_6015()
{
    sub_662( "SA", "P_TP_CLEAN_SUICIDE_DOORS", 0 );
    sub_6067( ref g_U2969 );
    sub_6067( ref g_U2990 );
    return;
}

void sub_6067(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_5808( (uParam0^)[I] );
    }
    return;
}

void sub_6141()
{
    sub_662( "SA", "P_TP_CLEAN_PAINKILLERS", 0 );
    sub_6191( ref g_U2818 );
    return;
}

void sub_6191(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_5719( (uParam0^)[I] );
    }
    return;
}

void sub_6256()
{
    sub_662( "SA", "P_TP_CLEANUP_ESCALATORS", 0 );
    sub_5808( g_U3061 );
    sub_5808( g_U3062 );
    sub_5808( g_U3063 );
    sub_5808( g_U3064 );
    sub_5808( g_U3065 );
    sub_5808( g_U3066 );
    sub_5808( g_U3067 );
    sub_5808( g_U3068 );
    return;
}

void sub_6391()
{
    sub_662( "SA", "P_TP_CLEANUP_GATE", 0 );
    sub_5808( g_U3069 );
    return;
}

void sub_6454(int iParam0)
{
    sub_662( "SA", "P_T2_CLEANUP_TRAM", 0 );
    sub_5808( iParam0->_fU12 );
    sub_5808( iParam0->_fU16 );
    sub_5808( iParam0->_fU20 );
    sub_5808( iParam0->_fU32 );
    sub_5808( iParam0->_fU28 );
    sub_5808( iParam0->_fU32 );
    sub_6067( iParam0 + 36 );
    sub_6067( iParam0 + 48 );
    sub_6067( iParam0 + 60 );
    sub_6597( iParam0->_fU0 );
    return;
}

void sub_6597(unknown uParam0)
{
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_MISSION_TRAIN( uParam0 );
    }
    return;
}

void sub_6655()
{
    sub_6191( ref g_U3350 );
    sub_5719( g_U3321 );
    sub_5719( g_U3328 );
    return;
}

void sub_6762(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_6946(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_662( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_7130( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_8207( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_8499( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_8859( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_8499( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_8859( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_8499( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_8859( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_9144( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_8859( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_9144( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_8859( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_9637( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_9798( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_2937(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_662( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_7130(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_7162( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_7162(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_8207(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_8499(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_8815( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_8815(unknown uParam0)
{
    return;
}

void sub_8859(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_9144(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_8815( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_9637(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_9798(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_7162( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_9870( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_9870(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_11080(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_11311()
{
    if (NOT l_U905)
    {
        START_WIDGET_GROUP( "Tram Platform - Part II" );
        sub_11397( ref l_U138, "Max attach position", 1036831949 );
        sub_11397( ref g_U2966, "Player Tram Start Position", 1036831949 );
        sub_11397( ref g_U4951, "UFE Tram Start Position", 1036831949 );
        START_WIDGET_GROUP( "Mid 06" );
        ADD_WIDGET_INT_SLIDER( "Start tram arrival sound delay", ref l_U626, 0, 30000, 1 );
        ADD_WIDGET_INT_SLIDER( "Restore power delay", ref l_U607, 0, 30000, 1 );
        ADD_WIDGET_INT_SLIDER( "Start UFE tram delay", ref l_U748, 0, 30000, 1 );
        ADD_WIDGET_INT_SLIDER( "Start power restored speech", ref l_U680, 0, 30000, 1 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Tram arrival/departure" );
        ADD_WIDGET_FLOAT_SLIDER( "Max tram speed", ref g_U4955, 0.00000000, 1000.00000000, 0.10000000 );
        ADD_WIDGET_INT_SLIDER( "Power on delay", ref l_U606, 0, 60000, 500 );
        ADD_WIDGET_FLOAT_SLIDER( "Tram arrival speed", ref g_U4956, 0.00000000, 100.00000000, 0.10000000 );
        ADD_WIDGET_INT_SLIDER( "Tram slow down time", ref g_U4960, 1000, 60000, 500 );
        ADD_WIDGET_INT_SLIDER( "Tram speed up time", ref g_U4958, 1000, 60000, 500 );
        ADD_WIDGET_INT_SLIDER( "Delay between trams", ref g_U4959, 0, 60000, 500 );
        ADD_WIDGET_INT_SLIDER( "Start departing delay", ref g_U4957, 100, 60000, 500 );
        ADD_WIDGET_INT_SLIDER( "Start player tram delay", ref l_U769, 0, 120000, 1 );
        ADD_WIDGET_INT_SLIDER( "Start player tram sound delay", ref l_U759, 0, 120000, 1 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Grenade-throwing" );
        ADD_WIDGET_FLOAT_SLIDER( "Grenade throw pitch", ref l_U376, 0.00000000, 180.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Grenade throw speed", ref l_U377, 0.00000000, 180.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Control Room Button" );
        sub_11397( ref g_U3015, "Button Position", 1036831949 );
        sub_11397( ref g_U3018, "Button Rotation", 1036831949 );
        sub_11397( ref g_U3021, "Button Light Position", 1036831949 );
        sub_11397( ref g_U3024, "Button Light Rotation", 1036831949 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Control room sniper rifle" );
        sub_11397( ref l_U132, "Position", 1036831949 );
        sub_11397( ref l_U135, "Rotation", 1036831949 );
        STOP_WIDGET_GROUP();
        ADD_WIDGET_FLOAT_SLIDER( "Min. distance to UFE Tram", ref l_U659, 0.00000000, 100.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Min. distance to Player Tram", ref l_U660, 0.00000000, 100.00000000, 0.10000000 );
        ADD_WIDGET_INT_SLIDER( "iCP_05ImageFX_01", ref l_U903, 0, 20000, 1000 );
        ADD_WIDGET_INT_SLIDER( "iCP_05ImageFX_02", ref l_U904, 0, 20000, 1000 );
        STOP_WIDGET_GROUP();
        l_U905 = 1;
    }
    return;
}

void sub_11397(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

void sub_12862()
{
    int iVar2;
    unknown uVar3;

    iVar2 = l_U126;
    uVar3 = sub_2937();
    switch (l_U126)
    {
        case 0:
        if (l_U127)
        {
            sub_662( "SA", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
        case 1:
        if (l_U127)
        {
            sub_662( "SA", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        }
        sub_13141();
        sub_13653();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U126 = 2;
        break;
        case 2:
        if (l_U127)
        {
            sub_662( "SA", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        }
        sub_15137();
        sub_19727();
        l_U126 = 3;
        break;
        case 3:
        if (l_U127)
        {
            sub_662( "SA", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        }
        if ((sub_22231( ref g_U1368 )) AND ((sub_22104( ref g_U1429 )) AND ((sub_21983( ref g_U1247 )) AND (sub_21863( ref g_U1030 )))))
        {
            if ((NOT l_U90._fU0) AND (g_U829 == 5))
            {
                l_U126 = 4;
            }
            else
            {
                l_U126 = 6;
            }
        }
        break;
        case 4:
        if (l_U127)
        {
            sub_662( "SA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        }
        l_U128 = 0;
        g_U846[5] = 1;
        sub_22550();
        if ((sub_22731( ref l_U90 )) == 0)
        {
            sub_9144( sub_2937(), 1478009203, 200, 0, 0 );
            sub_8499( sub_2937(), -1464892298, 0, 50, 0 );
            sub_8499( sub_2937(), -612753081, 1, 50, 0 );
            l_U126 = 5;
            sub_662( "CR", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U126 = 6;
            sub_662( "CR", "eCheckpointState = CP_CREATE_TRAMS", 0 );
        }
        break;
        case 5:
        if (l_U127)
        {
            sub_662( "SA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        if (NOT (IS_PED_DEAD( sub_2937() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_2937(), 1 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_2937(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_2937(), 0, 0 ) ))))
            {
                g_U830 = 5;
                sub_23336( ref l_U90, g_U830, sub_2937(), g_U2014[5], g_U2129[5], g_U2168[5], g_U2207[5], 1 );
                l_U126 = 6;
            }
        }
        break;
        case 6:
        if (l_U127)
        {
            sub_662( "SA", "eCheckpointState = CP_CREATE_TRAMS", 0 );
            sub_27038( ref g_U4552, g_U4552._fU80, 1, ref g_U2302 );
            sub_27038( ref g_U4353, g_U4353._fU80, 1, ref g_U2302 );
        }
        if ((sub_29821( ref g_U4353 )) AND (sub_29821( ref g_U4552 )))
        {
            sub_29902();
            sub_30067( ref g_U4353._fU4, ref g_U2302 );
            l_U126 = 7;
        }
        break;
        case 7:
        if (l_U127)
        {
            sub_662( "SA", "eCheckpointState = CP_CREATE_PEDS", 0 );
            l_U282 = 0;
            l_U281 = 1;
            l_U375 = 0;
            l_U374 = 1;
        }
        if (sub_31553())
        {
            if (sub_33528())
            {
                l_U126 = 8;
            }
        }
        break;
        case 8:
        if (l_U127)
        {
            sub_662( "SA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        if (g_U846[5])
        {
            sub_34222();
            sub_35087( 1 );
            sub_35389();
            sub_35788();
            sub_36465();
            sub_36682();
            if (NOT (IS_PED_DEAD( sub_2937() )))
            {
                if ((NOT (HAS_PED_GOT_SPECIFIC_WEAPON( sub_2937(), 724901397 ))) AND (g_U829 == 5))
                {
                    sub_36823();
                }
            }
            l_U126 = 9;
        }
        break;
        case 9:
        if (l_U127)
        {
            sub_662( "SA", "eCheckpointState = CP_MID_06", 0 );
            sub_37021();
            SET_OBJECT_VISIBLE( g_U3014, 1 );
            sub_38945( ref l_U774, -76.48170000, 97.07248000, -2.25864300, -25.75284000, -0.00001700, 114.48420000, 1110704128, 1000 );
            sub_39156( ref l_U774 );
            PLAY_SOUND_FRONTEND( -1, "S_AIR_TRAM_CONTROL_BUTTON_PRESS" );
            sub_39350( ref l_U608, l_U607 );
            sub_39350( ref l_U617, l_U626 );
            sub_39350( ref l_U739, l_U748 );
            sub_39350( ref l_U671, l_U680 );
            if (NOT AUDIO_IS_MUSIC_PLAYING())
            {
                sub_662( "GA", "Starting FINALE_SONG_01 music track with FINALE_01_2 mood. Fade in 0 sec", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_2", "FINALE_01_2", 0.00000000, 0, 1000, -1082130432, 0 );
            }
            sub_39594();
            DO_SCREEN_FADE_IN( 0 );
        }
        if (sub_39862( ref g_U4751 ))
        {
            sub_39937( ref g_U4751 );
            sub_40037( ref g_U4751 );
        }
        sub_40037( ref g_U4552 );
        if (sub_3971( ref l_U608 ))
        {
            sub_662( "SA", "Activating power", 0 );
            sub_43656();
            SET_OBJECT_VISIBLE( g_U3014, 0 );
        }
        if (sub_3971( ref l_U617 ))
        {
            if (NOT (IS_VEHICLE_DEAD( g_U4552._fU0 )))
            {
                PLAY_SOUND_FROM_VEHICLE( -1, ref g_U2451, g_U4552._fU0 );
            }
        }
        if (sub_3971( ref l_U671 ))
        {
            sub_45219( "SAIR_MTTPWR", ref l_U661 );
        }
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FIN_CP_05", "MID_06B_FIN_BUTTON_PRESS_CAM" )) - 25))
        {
            sub_46398( sub_2937(), "/Global/VIG_MID06_FIN/vig_mid06_fin_seq/MAX/blendout" );
            WAIT( 0 );
            sub_46474( -77.80000000, 96.50000000, -4.41700000, 180, 0, 0 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            WAIT( 0 );
            sub_46622( 6000, 1, 0, 0, 0, 0 );
            sub_46719();
            if (sub_39862( ref g_U4751 ))
            {
                g_U4751._fU72 = 4;
                g_U4751._fU76 = 1;
            }
        }
        if (sub_3971( ref l_U739 ))
        {
            sub_47007( ref l_U232 );
            g_U4552._fU72 = 0;
            g_U4552._fU76 = 1;
        }
        sub_47174();
        if ((ISEQ_QUERY_ENTITY_STATE( -1774213497, "MAX", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -1774213497, "MAX", 5 )))
        {
            sub_47407();
            l_U126 = 10;
        }
        break;
        case 10:
        if (l_U127)
        {
            sub_662( "SA", "eCheckpointState = CP_TRAM_BACKUP_COMBAT", 0 );
            if (g_U830 != 5)
            {
                g_U830 = 5;
                sub_23336( ref l_U90, g_U830, sub_2937(), g_U2014[5], g_U2129[5], g_U2168[5], g_U2207[5], 1 );
            }
            sub_47950();
            sub_48075();
            sub_39350( ref l_U671, l_U680 );
            sub_39350( ref l_U750, l_U759 );
            sub_39350( ref l_U760, l_U769 );
            sub_13229( ref l_U385 );
            sub_6454( ref g_U4751 );
            l_U749 = 0;
            l_U280 = 0;
        }
        if ((NOT g_U861[6]._fU36) AND ((g_U861[4]._fU40 == 4) || (g_U861[4]._fU40 == 0)))
        {
            g_U861[6]._fU36 = 1;
        }
        sub_40037( ref g_U4353 );
        sub_40037( ref g_U4552 );
        if (NOT l_U280)
        {
            if ((g_U4552._fU72 == 2) || (g_U4552._fU72 == 1))
            {
                sub_48665();
                l_U280 = 1;
            }
        }
        if ((g_U4552._fU76) AND (g_U4552._fU72 == 2))
        {
            sub_49128();
            sub_39350( ref l_U270, l_U279 );
        }
        if (sub_3971( ref l_U750 ))
        {
            if (NOT (IS_VEHICLE_DEAD( g_U4353._fU0 )))
            {
                PLAY_SOUND_FROM_VEHICLE( -1, ref g_U2451, g_U4353._fU0 );
            }
        }
        if (sub_3971( ref l_U760 ))
        {
            sub_662( "SA", "Starting the player's tram", 0 );
            sub_47007( ref l_U336 );
            g_U4353._fU72 = 0;
            g_U4353._fU76 = 1;
            l_U749 = 1;
        }
        if (((l_U270._fU16) || (sub_3971( ref l_U270 ))) AND (g_U4552._fU72 == 2))
        {
            if ((NOT sub_50740()) AND ((NOT (sub_50569( ref uVar3, l_U659 ))) AND (NOT (sub_50417( ref uVar3 )))))
            {
                g_U4552._fU72 = 3;
                g_U4552._fU76 = 1;
            }
        }
        if ((g_U4552._fU76) AND (g_U4552._fU72 == 4))
        {
            if (NOT (IS_VEHICLE_DEAD( g_U4552._fU0 )))
            {
                PLAY_SOUND_FROM_VEHICLE( -1, ref g_U2459, g_U4552._fU0 );
            }
        }
        if ((g_U4353._fU76) AND (g_U4353._fU72 == 2))
        {
            sub_51007();
            if (NOT (IS_PED_DEAD( l_U232[1] )))
            {
                SET_PED_FLAG_LOCK_TO_COVER( l_U232[1], 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U232[1], 0 );
                sub_49242( ref l_U565, l_U232[1], 1 );
            }
        }
        if ((g_U4353._fU76) AND (g_U4353._fU72 == 2))
        {
            sub_51514();
            sub_39350( ref l_U385, l_U394 );
        }
        if (sub_3971( ref l_U385 ))
        {
            sub_51913();
            if (NOT (IS_PED_DEAD( l_U336[0] )))
            {
                SET_PED_FLAG_LOCK_TO_COVER( l_U336[0], 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U336[0], 0 );
                sub_49242( ref l_U565, l_U336[0], 1 );
            }
        }
        if ((NOT (IS_PED_DEAD( sub_2937() ))) AND (NOT l_U395))
        {
            if ((IS_PED_SHOOTING( sub_2937() )) || (((sub_52122( ref l_U232, 0, -1082130432 )) + (sub_52122( ref l_U336, 0, -1082130432 ))) > 0))
            {
                sub_662( "GA", "Starting FINALE_SONG_01 music track with FINALE_01_2_4 mood. Fade in 2 sec", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_2_4", "FINALE_01_2_4", 0.00000000, 2000, 7000, -1082130432, 0 );
                l_U395 = 1;
            }
        }
        if (((sub_52648( ref l_U336 )) == 0) AND ((sub_52648( ref l_U232 )) == 0))
        {
            if (sub_50076( sub_2937(), l_U396 ))
            {
                l_U126 = 12;
            }
            else if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
            {
                l_U126 = 11;
            }
        }
        break;
        case 11:
        if (l_U127)
        {
            sub_662( "SA", "eCheckpointState = CP_EVERYBODY_DEAD", 0 );
            sub_39350( ref l_U681, 1000 );
            l_U703 = 1;
        }
        sub_52882();
        if (g_U4353._fU72 == 2)
        {
            if ((NOT (sub_53216( sub_2937() ))) AND (sub_50076( sub_2937(), l_U396 )))
            {
                l_U126 = 13;
            }
        }
        break;
        case 12:
        if (l_U127)
        {
            sub_662( "SA", "eCheckpointState = CP_WAIT_FOR_BULLET_CAM", 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
        }
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            l_U126 = 13;
        }
        break;
        case 13:
        if (l_U127)
        {
            sub_662( "SA", "eCheckpointState = CP_WAIT_FOR_TRAM_TO_DEPART", 0 );
            l_U770 = sub_53541( ref g_U2419 );
            g_U4353._fU72 = 3;
            g_U4353._fU76 = 1;
            sub_37079( 1, 0, 0, 1 );
            sub_53753( sub_2937(), 0 );
            sub_38945( ref l_U805, -75.46000000, 91.37000000, -4.04000000, 10.52000000, 0.00000000, -154.02000000, 45, 60000 );
            sub_53929( ref l_U805 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            sub_54037( ref l_U836, 4, 1.00000000, 10, -1, -1, 0, 0 );
            sub_54521( ref l_U836 );
            if (NOT (sub_53216( sub_2937() )))
            {
                sub_45219( "SAIR_MXTRMSTR", ref l_U661 );
            }
            sub_54629();
            sub_662( "GA", "Starting FINALE_SONG_01 music track with FINALE_01_2 mood. Fade in 7 sec", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_2", "FINALE_01_2", 0.00000000, 7000, 3000, -1082130432, 0 );
        }
        sub_40037( ref g_U4353 );
        sub_55110( ref l_U836 );
        if ((g_U4353._fU76) AND (g_U4353._fU72 == 4))
        {
            PLAY_SCRIPT_STREAM_FRONTEND( l_U770 );
        }
        if (sub_41837( ref g_U4353._fU0, l_U771, 1073741824 ))
        {
            sub_55689( ref l_U836, 0 );
            sub_53753( sub_2937(), 1 );
            l_U126 = 14;
        }
        break;
        case 14:
        if (l_U127)
        {
            sub_662( "SA", "eCheckpointState = CP_FINISHED", 0 );
            sub_55920();
            g_U846[6] = 1;
        }
        if (NOT HAS_CUTSCENE_FINISHED())
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U126 = 0;
        }
        break;
    }
    if (l_U126 != iVar2)
    {
        l_U127 = 1;
    }
    else
    {
        l_U127 = 0;
    }
    return;
}

void sub_13141()
{
    sub_662( "SA", "P_INITIALIZE_SCRIPT_DATA", 0 );
    l_U281 = 0;
    l_U374 = 0;
    l_U127 = 1;
    l_U130 = 0;
    l_U280 = 0;
    l_U703 = 0;
    sub_13229( ref l_U693 );
    l_U395 = 0;
    g_U4353._fU80 = {-74.25000000, -6.75000000, -5.86000000};
    g_U4353._fU92 = {-375.27300000, 631.08000000, -5.86000000};
    g_U4353._fU104 = {-69.25000000, 83.48000000, -5.86000000};
    g_U4353._fU344 = g_U4956;
    g_U4353._fU336 = 0;
    g_U4353._fU340 = 0;
    g_U4353._fU332 = 0;
    g_U4353._fU72 = 2;
    g_U4353._fU76 = 1;
    g_U4353._fU348 = 0;
    g_U4353._fU352 = 0;
    g_U4353._fU356 = 0;
    g_U4353._fU360 = 0;
    g_U4552._fU80 = {-85.24000000, -6.75000000, -5.86000000};
    g_U4552._fU92 = {-74.97328000, 167.39750000, -4.24375000};
    g_U4552._fU104 = {-90.35000000, 83.48000000, -5.86000000};
    g_U4552._fU344 = g_U4956;
    g_U4552._fU336 = 1;
    g_U4552._fU340 = 0;
    g_U4552._fU332 = 1;
    g_U4552._fU72 = 2;
    g_U4552._fU76 = 1;
    g_U4552._fU348 = 0;
    g_U4552._fU352 = 0;
    g_U4552._fU356 = 0;
    g_U4552._fU360 = 0;
    AUD_SET_IS_POWER_ON( 0 );
    return;
}

void sub_13229(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_13653()
{
    sub_662( "SA", "P_SET_STATIC_DATA", 0 );
    sub_13734( ref l_U179[0], -74.25000000, -5.14000000, -5.86000000, 0.00000000, -15567472, 7, 3, 2, 0, 0 );
    sub_13734( ref l_U179[1], -74.25000000, -5.14000000, -5.86000000, 0.00000000, 1087318400, 7, 3, 2, 0, 0 );
    sub_13734( ref l_U179[2], -74.25000000, -5.14000000, -5.86000000, 0.00000000, 1057900324, 7, 3, 2, 0, 0 );
    sub_13734( ref l_U179[3], -74.25000000, -5.14000000, -5.86000000, 0.00000000, 1340644225, 7, 3, 2, 0, 0 );
    sub_13734( ref l_U283[0], -85.24000000, -6.75000000, -5.86000000, 0.00000000, -1370475429, 7, 3, 2, 0, 0 );
    sub_13734( ref l_U283[1], -85.24000000, -6.75000000, -5.86000000, 0.00000000, -348475733, 7, 3, 2, 0, 0 );
    sub_13734( ref l_U283[2], -85.24000000, -6.75000000, -5.86000000, 0.00000000, 360847804, 7, 3, 2, 0, 0 );
    sub_13734( ref l_U283[3], -85.24000000, -6.75000000, -5.86000000, 0.00000000, -1902917923, 7, 3, 2, 0, 0 );
    sub_14230( ref l_U396, "TRIGGER_INSIDE_TRAM", -68.79000000, 66.86000000, -4.89000000, 4.91000000, 47.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14230( ref l_U417, "TRIGGER_INSIDE_CONTROL_ROOM", -78.25000000, 94.73000000, -4.89000000, 7.52000000, 8.35000000, 3.00000000, 0.00000000, -0.00043713, -90.00000000, 1 );
    sub_14230( ref l_U438[0], "TRIGGER_TRAM_ENTRANCE_0", -72.17000000, 46.23000000, -4.50000000, 3.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14230( ref l_U438[1], "TRIGGER_TRAM_ENTRANCE_1", -72.15000000, 52.17000000, -4.50000000, 3.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14230( ref l_U438[2], "TRIGGER_TRAM_ENTRANCE_2", -72.16000000, 63.38000000, -4.50000000, 3.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14230( ref l_U438[3], "TRIGGER_TRAM_ENTRANCE_3", -72.14000000, 69.41000000, -4.50000000, 3.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14230( ref l_U438[4], "TRIGGER_TRAM_ENTRANCE_4", -72.15000000, 80.55000000, -4.50000000, 3.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14230( ref l_U438[5], "TRIGGER_TRAM_ENTRANCE_5", -72.17000000, 86.49000000, -4.50000000, 3.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14987( ref l_U565, "TETH_TP_PLATFORM", -76.57000000, 66.18000000, -4.47000000, 21.02000000, 64.57000000, 4.04000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

void sub_13734(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_14230(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_14987(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_15137()
{
    sub_662( "SA", "P_TP_REQUEST_PERSISTENT_ASSETS start", 0 );
    sub_15205( ref l_U704, ref g_U1030 );
    sub_16613( ref l_U730, ref g_U1247 );
    sub_17629( "LEVEL_S_FIN_CP_05", ref g_U1429 );
    sub_18640( "SCRIPT_MISSION\S_AIRPORT_TRAM", ref g_U1950 );
    sub_18640( "SCRIPT_MISSION\S_AIR_PLATFORM_01", ref g_U1950 );
    sub_662( "SA", "P_TP_REQUEST_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_15205(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_15240( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_15240(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_15275( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_15406( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_15275(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_15406( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_15406( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_15406( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_16054( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_15406( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_15406( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_15406(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15426( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_15426(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_16054(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_16613(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_16648( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_16648(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_16669( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_16801( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_16669(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_16801( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_16801( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_16801( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_16054( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_16801( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_16801( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16801(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15426( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_17629(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_17650( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_17787( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_17650(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_17787( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_17787( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_17787( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_16054( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_17787( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_17787( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_17787(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15426( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_18640(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_18661( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_18799( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_18661(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_18799( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_18799( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_18799( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_16054( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_18799( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_18799( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18799(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15426( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_19727()
{
    sub_662( "SA", "P_TP_REQUEST_NONPERSISTENT_ASSETS start", 0 );
    sub_19799( -1774213497, ref g_U1368 );
    sub_662( "SA", "P_TP_REQUEST_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_19799(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_19834( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_19986( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_19834(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_19986( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_19986( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_19986( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_19986( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_16054( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_16054( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_19986( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_19986( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19986(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15426( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_21863(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_21983(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22104(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22231(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

void sub_22550()
{
    int I;

    sub_662( "SA", "P_TP_ACTIVATE_ALL_CONTROL_ROOM_PAINKILLERS start", 0 );
    for ( I = 0; I < g_U2818; I++ )
    {
        g_U2820[I] = 1;
    }
    sub_662( "SA", "P_TP_ACTIVATE_ALL_CONTROL_ROOM_PAINKILLERS end", 0 );
    return;
}

int sub_22731(unknown uParam0)
{
    sub_662( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_6946( uParam0, sub_2937() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_23336(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_662( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_662( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_9798( iParam1 );
        sub_23595( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_24046( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_24046( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24278( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_24046( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24278( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_24278( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_24046( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24278( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_24278( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_24278( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_24046( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24278( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_24278( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_24278( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_24278( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_25836( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_662( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_23595(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_7162( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_662( "TEH", "Ending context", 0 );
        sub_662( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_24046(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_24278(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_25836(int iParam0)
{
    sub_8815( "CHECKPOINT DATA" );
    sub_25875( iParam0->_fU4 );
    sub_25898( iParam0->_fU16 );
    sub_25898( iParam0->_fU20 );
    sub_25898( iParam0->_fU24 );
    sub_25941( iParam0->_fU28 );
    sub_25941( iParam0->_fU56 );
    sub_25941( iParam0->_fU60 );
    sub_25941( iParam0->_fU64 );
    sub_25941( iParam0->_fU68 );
    sub_25941( iParam0->_fU72 );
    sub_25941( iParam0->_fU76 );
    sub_25941( iParam0->_fU80 );
    sub_25941( iParam0->_fU84 );
    sub_25941( iParam0->_fU88 );
    sub_25941( iParam0->_fU92 );
    sub_25898( iParam0->_fU32 );
    sub_25941( iParam0->_fU36 );
    sub_25941( iParam0->_fU40 );
    sub_25941( iParam0->_fU44 );
    sub_25898( iParam0->_fU136 );
    sub_26146( iParam0->_fU140 );
    sub_25941( iParam0->_fU52 );
    sub_8815( "---nRightHolsterAttachmentEnabled: " );
    sub_25941( iParam0->_fU96 );
    sub_8815( "---nRightHolsterAttachmentToggled: " );
    sub_25941( iParam0->_fU100 );
    sub_8815( "---nLeftHolsterAttachmentEnabled: " );
    sub_25941( iParam0->_fU104 );
    sub_8815( "---nLeftHolsterAttachmentToggled: " );
    sub_25941( iParam0->_fU108 );
    sub_8815( "---nRifleHolsterAttachmentEnabled: " );
    sub_25941( iParam0->_fU112 );
    sub_8815( "---nRifleHolsterAttachmentToggled: " );
    sub_25941( iParam0->_fU116 );
    sub_8815( "---nRightHandAttachmentEnabled: " );
    sub_25941( iParam0->_fU120 );
    sub_8815( "---nRightHandAttachmentToggled: " );
    sub_25941( iParam0->_fU124 );
    sub_8815( "---nLeftHandAttachmentEnabled: " );
    sub_25941( iParam0->_fU128 );
    sub_8815( "---nLeftHandAttachmentToggled: " );
    sub_25941( iParam0->_fU132 );
    sub_25941( l_U1 );
    sub_25941( 144 );
    return;
}

void sub_25875(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_25898(unknown uParam0)
{
    return;
}

void sub_25941(unknown uParam0)
{
    return;
}

void sub_26146(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_27038(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, unknown uParam5)
{
    sub_662( "SA", "P_T2_CREATE_TRAM", 0 );
    iParam0->_fU0 = sub_27119( uParam1, uParam5, iParam0->_fU332, iParam0->_fU348, iParam0->_fU352, iParam0->_fU356, iParam0->_fU360, 0 );
    sub_27659( iParam0->_fU0, 0.00000000 );
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU0 )))
    {
        iParam0->_fU8 = GET_TRAIN_CABOOSE( iParam0->_fU0 );
        iParam0->_fU4 = GET_TRAIN_CARRIAGE( iParam0->_fU0, 1 );
        if (iParam0->_fU332 == 0)
        {
            if (bParam4)
            {
                iParam0->_fU12 = sub_27814( g_U2378, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            }
            iParam0->_fU24 = sub_27814( g_U2381, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        else if (bParam4)
        {
            iParam0->_fU12 = sub_27814( g_U2379, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        iParam0->_fU24 = sub_27814( g_U2382, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );;
        if (bParam4)
        {
            ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU12, iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( iParam0->_fU12, 1 );
        }
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU24, iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        iParam0->_fU36[0] = sub_27814( g_U2384, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        iParam0->_fU36[1] = sub_27814( g_U2385, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU36[0], iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU36[1], iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        if (NOT (IS_STRING_NULL( uParam5 )))
        {
            if (bParam4)
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU12, uParam5 );
            }
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU24, uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU36[0], uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU36[1], uParam5 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU4 )))
    {
        if (bParam4)
        {
            iParam0->_fU16 = sub_27814( g_U2380, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU16, iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( iParam0->_fU16, 1 );
        }
        iParam0->_fU28 = sub_27814( g_U2383, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU28, iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        iParam0->_fU48[0] = sub_27814( g_U2386, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        iParam0->_fU48[1] = sub_27814( g_U2387, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU48[0], iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU48[1], iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        if (NOT (IS_STRING_NULL( uParam5 )))
        {
            if (bParam4)
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU16, uParam5 );
            }
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU28, uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU48[0], uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU48[1], uParam5 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU8 )))
    {
        if (iParam0->_fU332 == 0)
        {
            if (bParam4)
            {
                iParam0->_fU20 = sub_27814( g_U2379, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            }
            iParam0->_fU32 = sub_27814( g_U2382, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        else if (bParam4)
        {
            iParam0->_fU20 = sub_27814( g_U2378, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        iParam0->_fU32 = sub_27814( g_U2381, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );;
        if (bParam4)
        {
            ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU20, iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( iParam0->_fU20, 1 );
        }
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU32, iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        iParam0->_fU60[0] = sub_27814( g_U2384, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        iParam0->_fU60[1] = sub_27814( g_U2385, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU60[0], iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU60[1], iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        if (NOT (IS_STRING_NULL( uParam5 )))
        {
            if (bParam4)
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU20, uParam5 );
            }
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU32, uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU60[0], uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU60[1], uParam5 );
        }
    }
    return;
}

void sub_27119(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, boolean bParam5, boolean bParam6, boolean bParam7, boolean bParam8, boolean bParam9)
{
    unknown Result;
    unknown uVar13;
    unknown uVar14;

    sub_662( "GA", "F_CREATE_TRAM start", 0 );
    Result = CREATE_MISSION_TRAIN( uParam4, uParam0, 1 );
    if (bParam9)
    {
        while (NOT (DOES_VEHICLE_EXIST( Result )))
        {
            sub_662( "GA", "Waiting for tram to exist.", 0 );
            WAIT( 0 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( Result )))
    {
        SET_TRAIN_LEAVES_STATION( Result );
        SET_TRAIN_SPEED( Result, 0.00000000 );
        SET_TRAIN_CRUISE_SPEED( Result, 0.00000000 );
        SET_TRAIN_STOPS_FOR_STATIONS( Result, 0 );
        if (NOT (IS_STRING_NULL( uParam3 )))
        {
            SET_ROOM_FOR_VEHICLE_BY_NAME( Result, uParam3 );
        }
        SET_VEHICLE_EXTRA( Result, 3, NOT bParam5 );
        SET_VEHICLE_EXTRA( Result, 4, NOT bParam7 );
        SET_VEHICLE_EXTRA( Result, 5, NOT bParam6 );
        SET_VEHICLE_EXTRA( Result, 6, NOT bParam8 );
        uVar13 = GET_TRAIN_CARRIAGE( Result, 1 );
        uVar14 = GET_TRAIN_CABOOSE( Result );
    }
    if (NOT (IS_VEHICLE_DEAD( uVar13 )))
    {
        if (NOT (IS_STRING_NULL( uParam3 )))
        {
            SET_ROOM_FOR_VEHICLE_BY_NAME( uVar13, uParam3 );
        }
        SET_VEHICLE_EXTRA( uVar13, 3, NOT bParam5 );
        SET_VEHICLE_EXTRA( uVar13, 4, NOT bParam7 );
        SET_VEHICLE_EXTRA( uVar13, 5, NOT bParam6 );
        SET_VEHICLE_EXTRA( uVar13, 6, NOT bParam8 );
    }
    if (NOT (IS_VEHICLE_DEAD( uVar14 )))
    {
        if (NOT (IS_STRING_NULL( uParam3 )))
        {
            SET_ROOM_FOR_VEHICLE_BY_NAME( uVar14, uParam3 );
        }
        SET_VEHICLE_EXTRA( uVar14, 3, NOT bParam5 );
        SET_VEHICLE_EXTRA( uVar14, 4, NOT bParam7 );
        SET_VEHICLE_EXTRA( uVar14, 5, NOT bParam6 );
        SET_VEHICLE_EXTRA( uVar14, 6, NOT bParam8 );
    }
    return Result;
}

void sub_27659(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        SET_TRAIN_SPEED( uParam0, uParam1 );
        SET_TRAIN_CRUISE_SPEED( uParam0, uParam1 );
    }
    return;
}

void sub_27814(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_27924( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_27924(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_8815( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_29821(int iParam0)
{
    if ((DOES_VEHICLE_EXIST( iParam0->_fU8 )) AND ((DOES_VEHICLE_EXIST( iParam0->_fU4 )) AND (DOES_VEHICLE_EXIST( iParam0->_fU0 ))))
    {
        return 1;
    }
    return 0;
}

void sub_29902()
{
    int I;

    sub_662( "SA", "P_T2_ACTIVATE_ALL_PLACEMENTS start", 0 );
    for ( I = 0; I < g_U3350; I++ )
    {
        g_U3353[I] = 1;
    }
    g_U3356 = 1;
    sub_662( "SA", "P_T2_ACTIVATE_ALL_PLACEMENTS end", 0 );
    return;
}

void sub_30067(unknown uParam0, unknown uParam1)
{
    vector[3] vVar4;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_662( "SA", "P_T2_CREATE_PLACEMENTS", 0 );
    array(ref vVar4, 3);
    vVar4[0] = {-1.50000000, -8.35000000, 0.94500000};
    vVar4[1] = {-1.45000000, -8.35000000, 1.20700000};
    vVar4[2] = {-1.35000000, -8.35000000, 1.20700000};
    sub_30200( ref g_U3350, ref vVar4, ref g_U3353, (uParam0^), uParam1 );
    sub_30563( uParam0, g_U3322, g_U3325, uParam1 );
    sub_31219( uParam0, g_U3329, g_U3332, uParam1 );
    return;
}

void sub_30200(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    vector vVar7;
    unknown uVar10;
    int I;
    vector vVar12;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;

    if (NOT (IS_VEHICLE_DEAD( uParam3 )))
    {
        vVar7 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uParam3 )};
        uVar10 = GET_VEHICLE_HEADING( uParam3 );
        for ( I = 0; I < (uParam0^); I++ )
        {
            if ((uParam2^)[I])
            {
                if (DOES_PLACEMENT_EXIST( (uParam0^)[I] ))
                {
                    sub_5719( (uParam0^)[I] );
                }
                vVar12 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", VECTOR_ROTATE_AXIS( (uParam1^)[I], uVar10, "z" )};
                uVar15 = {vVar12 + vVar7};
                (uParam0^)[I] = sub_30382( -4072149, uVar15, 0.00000000, 0.00000000, 0.00000000, 1, 1, 0, 1119092736 );
                if ((DOES_PLACEMENT_EXIST( (uParam0^)[I] )) AND (NOT (IS_STRING_NULL( uParam4 ))))
                {
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^)[I], uParam4 );
                }
            }
        }
    }
    return;
}

void sub_30382(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_30563(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    unknown uVar10;
    vector vVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    sub_662( "SA", "P_TP_SPAWN_AMMO_BAG_AND_SNIPER_RIFLE", 0 );
    if (NOT (IS_VEHICLE_DEAD( (uParam0^) )))
    {
        if (DOES_PLACEMENT_EXIST( g_U3321 ))
        {
            sub_5719( g_U3321 );
        }
        uVar10 = GET_VEHICLE_HEADING( (uParam0^) );
        vVar11 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", VECTOR_ROTATE_AXIS( uParam1, uVar10, "z" )};
        uVar14 = {vVar11 + (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( (uParam0^) )))};
        uVar17 = {uParam4};
        uVar17._fU8 += sub_30734( uVar10 );
        g_U3321 = CREATE_AMMOBAG_PLACEMENT_ROTATE( uVar14, uVar17, 10.00000000, 3.00000000, 0, 1119092736 );
        if (DOES_PLACEMENT_EXIST( g_U3321 ))
        {
            sub_30830( g_U3321 );
            SET_AMMOBAG_ENABLED( g_U3321, 1 );
            if (NOT (IS_STRING_NULL( uParam7 )))
            {
                ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U3321, uParam7 );
            }
        }
    }
    return;
}

float sub_30734(unknown uParam0)
{
    return uParam0 * (3.14159300 / 180.00000000);
}

void sub_30830(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        SET_AMMOBAG_REGEN_TIME( uParam0, 10.00000000 );
        SET_AMMOBAG_REGEN_RANGE( uParam0, 3.00000000 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1088031219, 45 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 954369040, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1138793073, 95 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1087746638, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1295933220, 30 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1383321053, 85 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1481241171, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1889644301, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -790090695, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1742569970, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1575030772, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1622373246, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 558118158, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1701914198, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1126469201, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 936600426, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 205668857, 0 );
    }
    return;
}

void sub_31219(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    unknown uVar10;
    vector vVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;

    if ((g_U3356) AND (NOT (IS_VEHICLE_DEAD( (uParam0^) ))))
    {
        if (DOES_PLACEMENT_EXIST( g_U3328 ))
        {
            sub_5719( g_U3328 );
        }
        uVar10 = GET_VEHICLE_HEADING( (uParam0^) );
        vVar11 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", VECTOR_ROTATE_AXIS( uParam1, uVar10, "z" )};
        uVar14 = {vVar11 + (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( (uParam0^) )))};
        uVar17 = {uParam4};
        uVar17._fU8 += sub_30734( uVar10 );
        g_U3328 = sub_30382( 1216559076, uVar14, uVar17, 0, 0, 0, 1119092736 );
        uVar20 = GET_PICKUP_FROM_PLACEMENT( g_U3328 );
        if ((DOES_PLACEMENT_EXIST( g_U3328 )) AND (NOT (IS_STRING_NULL( uParam7 ))))
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U3328, uParam7 );
        }
    }
    return;
}

int sub_31553()
{
    char[64] cVar2;
    unknown uVar18;
    unknown uVar19;

    switch (l_U281)
    {
        case 1:
        l_U282 = 0;
        l_U281 = 2;
        break;
        case 2:
        StrCopy( ref cVar2, "Creating pi_TP_TramUFE_Wave1[", 64 );
        ConcatString(ref cVar2, l_U282, 64);
        ConcatString(ref cVar2, "]", 64);
        uVar18 = l_U282;
        l_U232[uVar18] = sub_31691( ref l_U179[uVar18] );
        if (NOT (IS_PED_DEAD( l_U232[uVar18] )))
        {
            sub_9144( l_U232[uVar18], l_U255[uVar18], 25000, 0, 0 );
            sub_8499( l_U232[uVar18], -1986694060, 5, 1, 0 );
            SET_PED_ALERTNESS( l_U232[uVar18], 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U232[uVar18], 1 );
            SET_ROOM_FOR_PED_BY_NAME( l_U232[uVar18], ref g_U2302 );
        }
        sub_32501( l_U232[uVar18], ref l_U378 );
        sub_32952( ref l_U232[uVar18], ref g_U2403, -1082130432, -1082130432 );
        switch (l_U237[uVar18])
        {
            case 0:
            uVar19 = g_U4552._fU0;
            break;
            case 1:
            uVar19 = g_U4552._fU4;
            break;
            case 2:
            uVar19 = g_U4552._fU8;
            break;
        }
        if (NOT (IS_VEHICLE_DEAD( uVar19 )))
        {
            ATTACH_PED_TO_VEHICLE( l_U232[uVar18], uVar19, 0, l_U242[uVar18], 90.00000000, 0.00000000, 0, 0, 0, 1 );
        }
        l_U282++;
        if (l_U282 >= l_U232)
        {
            l_U281 = 3;
        }
        break;
        case 3:
        sub_33249( ref l_U232, "TramUFE_Wave1" );
        sub_33347( ref l_U232 );
        l_U281 = 4;
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_31691(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_27924( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_32170( iParam0->_fU40 );
    sub_32250( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_32170(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_32250(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_32501(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_8815( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_32644( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_32644( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_32644(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_32952(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

void sub_33249(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_33347(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_33378( (uParam0^)[I] );
    }
    return;
}

void sub_33378(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

int sub_33528()
{
    char[64] cVar2;
    unknown uVar18;
    unknown uVar19;

    switch (l_U374)
    {
        case 1:
        l_U375 = 0;
        l_U374 = 2;
        break;
        case 2:
        StrCopy( ref cVar2, "Creating pi_TP_TramUFE_Wave2[", 64 );
        ConcatString(ref cVar2, l_U375, 64);
        ConcatString(ref cVar2, "]", 64);
        uVar18 = l_U375;
        l_U336[uVar18] = sub_31691( ref l_U283[uVar18] );
        if (NOT (IS_PED_DEAD( l_U336[uVar18] )))
        {
            sub_9144( l_U336[uVar18], l_U359[uVar18], 25000, 0, 0 );
            sub_8499( l_U336[uVar18], -1986694060, 5, 1, 0 );
            SET_PED_ALERTNESS( l_U336[uVar18], 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U336[uVar18], 1 );
            SET_ROOM_FOR_PED_BY_NAME( l_U336[uVar18], ref g_U2302 );
        }
        sub_32501( l_U336[uVar18], ref l_U378 );
        sub_32952( ref l_U336[uVar18], ref g_U2403, -1082130432, -1082130432 );
        switch (l_U341[uVar18])
        {
            case 0:
            uVar19 = g_U4353._fU0;
            break;
            case 1:
            uVar19 = g_U4353._fU4;
            break;
            case 2:
            uVar19 = g_U4353._fU8;
            break;
        }
        if (NOT (IS_VEHICLE_DEAD( uVar19 )))
        {
            ATTACH_PED_TO_VEHICLE( l_U336[uVar18], uVar19, 0, l_U346[uVar18], 90.00000000, 0.00000000, 0, 0, 0, 1 );
        }
        l_U375++;
        if (l_U375 >= l_U336)
        {
            l_U374 = 3;
        }
        break;
        case 3:
        sub_33249( ref l_U336, "TramUFE_Wave2" );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U378._fU0, 1 );
        sub_33347( ref l_U336 );
        l_U374 = 4;
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_34222()
{
    sub_662( "SA", "P_TP_CREATE_ESCALATORS", 0 );
    sub_34313( ref g_U3061, ref g_U3065, -81.63000000, 28.35000000, -2.17000000, 0.00000000, 0.00000000, 180.00000000, 1, ref g_U2302 );
    sub_34313( ref g_U3062, ref g_U3066, -78.15000000, 28.35000000, -2.17000000, 0.00000000, 0.00000000, 180.00000000, 0, ref g_U2302 );
    sub_34313( ref g_U3063, ref g_U3067, -81.63000000, 8.50000000, 2.20000000, 0.00000000, 0.00000000, 180.00000000, 1, ref g_U2294 );
    sub_34313( ref g_U3064, ref g_U3068, -78.15000000, 8.50000000, 2.20000000, 0.00000000, 0.00000000, 180.00000000, 0, ref g_U2294 );
    return;
}

void sub_34313(unknown uParam0, unknown uParam1, vector vParam2, unknown uParam5, unknown uParam6, unknown uParam7, boolean bParam8, unknown uParam9)
{
    sub_662( "AT", "P_CREATE_ESCALATOR", 0 );
    (uParam0^) = sub_27814( g_U2394, vParam2, uParam5, 0, 0, 0 );
    (uParam1^) = sub_34408( g_U2395, vParam2 - (vector( 0.00000000, 0.00000000, 2.38000000)), uParam5, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
        PLAY_OBJECT_ANIM( (uParam0^), "AP_EscSil_N1_Ad_H", "ap_anim", 0.00000000, 1, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), uParam9 );
        FREEZE_OBJECT_POSITION( (uParam0^), 1 );
        if (bParam8)
        {
            SET_OBJECT_ANIM_SPEED( (uParam0^), "AP_EscSil_N1_Ad_H", "ap_anim", 1.00000000 );
        }
        else
        {
            SET_OBJECT_ANIM_SPEED( (uParam0^), "AP_EscSil_N1_Ad_H", "ap_anim", -1.00000000 );
        }
    }
    if (DOES_OBJECT_EXIST( (uParam1^) ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam1^), uParam9 );
        FREEZE_OBJECT_POSITION( (uParam1^), 1 );
        if (bParam8)
        {
            SET_MOVER_SPEED( (uParam1^), 1.00000000, 1.00000000 );
        }
        else
        {
            SET_MOVER_SPEED( (uParam1^), -1.00000000, -1.00000000 );
        }
    }
    return;
}

void sub_34408(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object mover with MUST BE PRELOADED!!!!", 0 );
        sub_27924( uParam0, 1 );
    }
    Result = CREATE_OBJECT_MOVER( uParam0, uParam1, NOT bParam7, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_35087(boolean bParam0)
{
    sub_662( "AT", "P_CREATE_GATE", 0 );
    g_U3069 = sub_27814( 2070806350, g_U3070, 0.00000000, 0.00000000, g_U3073, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U3069 ))
    {
        FREEZE_OBJECT_POSITION( g_U3069, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U3069, ref g_U2302 );
        SET_OBJECT_AS_PATH_OBSTACLE( g_U3069 );
        if (bParam0)
        {
            SET_OBJECT_COLLISION( g_U3069, 1 );
        }
        else
        {
            SET_OBJECT_COLLISION( g_U3069, 0 );
            sub_35298( g_U3069, "SECGATEBASE", "ap_anim", 0.00000000, 0.65000000 );
        }
    }
    return;
}

void sub_35298(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        PLAY_OBJECT_ANIM( uParam0, uParam1, uParam2, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uParam0, uParam1, uParam2, uParam4 );
        SET_OBJECT_ANIM_SPEED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_35389()
{
    vector[3] vVar2;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    vector[3] vVar12;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    int I;

    sub_662( "SA", "P_TP_CREATE_PAINKILLERS start", 0 );
    array(ref vVar2, 3);
    vVar2[0] = {-74.14300000, 96.53500000, -2.86200000};
    vVar2[1] = {-74.14300000, 96.41600000, -3.14500000};
    vVar2[2] = {-74.14300000, 96.61600000, -3.14500000};
    array(ref vVar12, 3);
    vVar12[0] = {0.00000000, 0.00000000, 0.60000000};
    vVar12[1] = {0.00000000, 0.00000000, 2.60000000};
    vVar12[2] = {0.00000000, 0.00000000, 0.00000000};
    for ( I = 0; I < g_U2818; I++ )
    {
        if ((NOT (DOES_PLACEMENT_EXIST( g_U2818[I] ))) AND (g_U2820[I]))
        {
            g_U2818[I] = sub_30382( -4072149, vVar2[I], vVar12[I], 1, 1, 0, 1119092736 );
            if (DOES_PLACEMENT_EXIST( g_U2818[I] ))
            {
                ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U2818[I], ref g_U2302 );
            }
        }
    }
    sub_662( "SA", "P_TP_CREATE_PAINKILLERS end", 0 );
    return;
}

void sub_35788()
{
    vector[6] vVar2;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    vector[6] vVar21;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    int I;

    sub_662( "SA", "P_TP_CREATE_SUICIDE_DOORS start", 0 );
    array(ref vVar2, 6);
    vVar2[0] = {-72.03000000, 46.24000000, -4.47000000};
    vVar2[1] = {-72.03000000, 52.21000000, -4.47000000};
    vVar2[2] = {-72.03000000, 63.37000000, -4.47000000};
    vVar2[3] = {-72.03000000, 69.35000000, -4.47000000};
    vVar2[4] = {-72.03000000, 80.50000000, -4.47000000};
    vVar2[5] = {-72.03000000, 86.49000000, -4.47000000};
    array(ref vVar21, 6);
    vVar21[0] = {-87.73000000, 46.25000000, -4.47000000};
    vVar21[1] = {-87.73000000, 52.21000000, -4.47000000};
    vVar21[2] = {-87.73000000, 63.37000000, -4.47000000};
    vVar21[3] = {-87.73000000, 69.35000000, -4.47000000};
    vVar21[4] = {-87.73000000, 80.52000000, -4.47000000};
    vVar21[5] = {-87.73000000, 86.51000000, -4.47000000};
    for ( I = 0; I < 6; I++ )
    {
        if (NOT (DOES_OBJECT_EXIST( g_U2969[I] )))
        {
            g_U2969[I] = sub_27814( g_U2396, vVar2[I], 0.00000000, 0.00000000, 90.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( g_U2969[I] ))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2969[I], ref g_U2302 );
            }
        }
        if (NOT (DOES_OBJECT_EXIST( g_U2990[I] )))
        {
            g_U2990[I] = sub_27814( g_U2396, vVar21[I], 0.00000000, 0.00000000, 90.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( g_U2990[I] ))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2990[I], ref g_U2302 );
            }
        }
    }
    sub_662( "SA", "P_TP_CREATE_SUICIDE_DOORS end", 0 );
    return;
}

void sub_36465()
{
    sub_662( "SA", "P_TP_CREATE_BUTTON", 0 );
    if (NOT (DOES_OBJECT_EXIST( g_U3013 )))
    {
        g_U3013 = sub_27814( -576031449, g_U3015, g_U3018, 0, 0, 0 );
        FREEZE_OBJECT_POSITION( g_U3013, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U3013, ref g_U2302 );
    }
    if (NOT (DOES_OBJECT_EXIST( g_U3014 )))
    {
        g_U3014 = sub_27814( -338998251, g_U3021, g_U3024, 0, 0, 0 );
        FREEZE_OBJECT_POSITION( g_U3014, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U3014, ref g_U2302 );
        SET_OBJECT_VISIBLE( g_U3014, 0 );
    }
    return;
}

void sub_36682()
{
    sub_662( "SA", "P_TP_LIGHTS_OFF start", 0 );
    g_U3041 = 0;
    sub_662( "SA", "P_TP_LIGHTS_OFF end", 0 );
    return;
}

void sub_36823()
{
    unknown uVar2;

    sub_662( "SA", "P_CREATE_SNIPER_RIFLE", 0 );
    l_U131 = sub_30382( 1216559076, l_U132, l_U135, 0, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U131 ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U131, ref g_U2302 );
        uVar2 = GET_PICKUP_FROM_PLACEMENT( l_U131 );
    }
    return;
}

void sub_37021()
{
    unknown uVar2;

    sub_662( "GA", "P_TP_START_VIG_MID06_FIN start", 0 );
    sub_37079( 1, 0, 0, 1 );
    sub_37242( ref uVar2, ref uVar2, 1, 0 );
    sub_38535( sub_2937(), g_U2014[5], g_U2129[5] );
    if (NOT (IS_PED_DEAD( sub_2937() )))
    {
        FREEZE_PED_POSITION( sub_2937(), 1 );
        ISEQ_REGISTER_ENTITY( -1774213497, "Max", sub_2937(), 0 );
    }
    ISEQ_START( -1774213497 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_FIN_CP_05", "MID_06B_FIN_BUTTON_PRESS_CAM", 1, -79.00500000, 97.64300000, -3.19800000, -185.06000000, 0, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[5], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[5], 1065353216, 0 );
    sub_3715( ref l_U885, l_U903, 1, 0 );
    sub_3851( ref l_U885 );
    sub_3715( ref l_U894, l_U904, 1, 0 );
    sub_3851( ref l_U894 );
    sub_662( "GA", "P_TP_START_VIG_MID06_FIN end", 0 );
    return;
}

void sub_37079(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_2937() )))
        {
            SET_PLAYER_CONTROL( sub_2959(), 0, uParam2 );
            SET_PED_DUCKING( sub_2937(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_2937() );
            }
            SET_PED_INVINCIBLE( sub_2937(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_37242(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;

    uVar6 = GET_WEAPON_FROM_HAND( sub_2937(), 0, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar6 ))
    {
        if (sub_37282())
        {
            (uParam0^) = 1;
            SELECT_WEAPON_TO_HAND( sub_2937(), 0, 0, uParam2 );
            uVar6 = GET_WEAPON_FROM_HAND( sub_2937(), 0, 0 );
            if (bParam3)
            {
                sub_662( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: Waiting for player to holster RIFLE in right hand...", "###" );
                while (GET_DOES_WEAPON_EXIST( uVar6 ))
                {
                    WAIT( 0 );
                    uVar6 = GET_WEAPON_FROM_HAND( sub_2937(), 0, 0 );
                }
            }
            sub_662( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: ...right hand RIFLE holstered!", "###" );
        }
    }
    uVar6 = GET_WEAPON_FROM_HAND( sub_2937(), 1, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar6 ))
    {
        (uParam1^) = 1;
        SELECT_WEAPON_TO_HAND( sub_2937(), 0, 1, uParam2 );
        uVar6 = GET_WEAPON_FROM_HAND( sub_2937(), 1, 0 );
        if (bParam3)
        {
            sub_662( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: Waiting for player to holster gun in LEFT hand...", "###" );
            while (GET_DOES_WEAPON_EXIST( uVar6 ))
            {
                WAIT( 0 );
                uVar6 = GET_WEAPON_FROM_HAND( sub_2937(), 1, 0 );
            }
        }
        sub_662( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: ...LEFT hand gun holstered!", "###" );
    }
    uVar6 = GET_WEAPON_FROM_HAND( sub_2937(), 0, 0 );
    if (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
    {
        uVar6 = GET_WEAPON_FROM_HOLSTER( sub_2937(), 0 );
        if (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
        {
            uVar6 = GET_WEAPON_FROM_HOLSTER( sub_2937(), 1 );
        }
        SELECT_WEAPON_TO_HAND( sub_2937(), uVar6, 0, uParam2 );
        uVar6 = GET_WEAPON_FROM_HAND( sub_2937(), 0, 0 );
        if (bParam3)
        {
            sub_662( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: Waiting for player to draw gun from HOLSTER...", "###" );
            while (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
            {
                WAIT( 0 );
                uVar6 = GET_WEAPON_FROM_HAND( sub_2937(), 0, 0 );
            }
        }
        sub_662( "MSWW", "P_HolsterRifleOrDualAndDrawPistol: ...gun drawn from HOLSTER!", "###" );
    }
    return;
}

int sub_37282()
{
    int[18] iVar2;
    unknown uVar21;
    int I;

    array(ref iVar2, 18);
    iVar2[0] = -1013714740;
    iVar2[1] = -1074756423;
    iVar2[2] = 1308526797;
    iVar2[3] = 840671040;
    iVar2[4] = 57534114;
    iVar2[5] = 724901397;
    iVar2[6] = 1992962408;
    iVar2[7] = 319712764;
    iVar2[8] = 427207702;
    iVar2[9] = -110877124;
    iVar2[10] = 1224272620;
    iVar2[11] = 10648147;
    iVar2[12] = -2075384407;
    iVar2[13] = 1478009203;
    iVar2[14] = 434544317;
    iVar2[15] = -168327769;
    iVar2[16] = -184942895;
    iVar2[17] = 514118749;
    uVar21 = GET_WEAPON_FROM_HAND( sub_2937(), 0, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar21 ))
    {
        for ( I = 0; I < iVar2; I++ )
        {
            if ((GET_WEAPON_TYPE( uVar21 )) == iVar2[I])
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_38535(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_38945(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_3715( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U39, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_39156(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    if (iParam0->_fU92 == 1)
    {
        SET_CAM_ACTIVE_WITH_INTERP( iParam0->_fU0, iParam0->_fU120, iParam0->_fU88, iParam0->_fU100, iParam0->_fU104 );
    }
    else
    {
        SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    }
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_3851( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_39350(unknown uParam0, unknown uParam1)
{
    sub_3715( uParam0, uParam1, 1, 0 );
    sub_3851( uParam0 );
    return;
}

void sub_39594()
{
    int J;
    int I;

    sub_662( "SA", "P_TP_CLEANUP_CONCESSIONS_BODIES_IN_DOORWAY start", 0 );
    for ( J = 0; J < l_U438; J++ )
    {
        for ( I = 0; I < g_U2880; I++ )
        {
            if ((IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U2880[I], ref l_U438[J]._fU0 )) AND (IS_PED_DEAD( g_U2880[I] )))
            {
                sub_5587( g_U2880[I] );
            }
        }
    }
    sub_662( "SA", "P_TP_CLEANUP_CONCESSIONS_BODIES_IN_DOORWAY end", 0 );
    return;
}

int sub_39862(int iParam0)
{
    if ((DOES_VEHICLE_EXIST( iParam0->_fU8 )) AND ((DOES_VEHICLE_EXIST( iParam0->_fU4 )) AND (DOES_VEHICLE_EXIST( iParam0->_fU0 ))))
    {
        return 1;
    }
    return 0;
}

void sub_39937(int iParam0)
{
    if ((iParam0->_fU76) AND (iParam0->_fU72 == 0))
    {
        PLAY_SOUND_FROM_VEHICLE( -1, ref g_U2451, iParam0->_fU0 );
    }
    if ((iParam0->_fU76) AND (iParam0->_fU72 == 4))
    {
        PLAY_SOUND_FROM_VEHICLE( -1, ref g_U2459, iParam0->_fU0 );
    }
    return;
}

void sub_40037(int iParam0)
{
    int iVar3;

    iVar3 = iParam0->_fU72;
    switch (iParam0->_fU72)
    {
        case 2:
        if (iParam0->_fU76)
        {
            sub_662( "SA", "Tram State = eTRAM_IDLE", 0 );
        }
        break;
        case 3:
        if (iParam0->_fU76)
        {
            sub_662( "SA", "Tram State = eTRAM_CLOSE_DOORS", 0 );
            sub_40247( iParam0, 0 );
            sub_40720( iParam0->_fU336 );
            sub_3715( iParam0 + 116, g_U4957, 1, 0 );
            sub_3851( iParam0 + 116 );
            if (NOT (IS_VEHICLE_DEAD( iParam0->_fU4 )))
            {
                PLAY_SOUND_FROM_VEHICLE( -1, "VEHICLES_TRAIN_SUBWAY_DOORS_CLOSE", iParam0->_fU4 );
            }
        }
        if (sub_3971( iParam0 + 116 ))
        {
            iParam0->_fU72 = 4;
        }
        break;
        case 4:
        if (iParam0->_fU76)
        {
            sub_662( "SA", "Tram State = eTRAM_DEPARTING", 0 );
            sub_3715( iParam0 + 152, g_U4958, 1, 0 );
            sub_3851( iParam0 + 152 );
        }
        sub_41560( iParam0, iParam0->_fU344 );
        if (sub_41837( iParam0 + 0, iParam0->_fU92, 1073741824 ))
        {
            iParam0->_fU72 = 5;
        }
        break;
        case 5:
        if (iParam0->_fU76)
        {
            sub_662( "SA", "Tram State = eTRAM_CLEANUP", 0 );
        }
        sub_6454( iParam0 );
        if (iParam0->_fU340)
        {
            iParam0->_fU72 = 6;
        }
        else
        {
            iParam0->_fU72 = 2;
        }
        break;
        case 6:
        if (iParam0->_fU76)
        {
            sub_662( "SA", "Tram State = eTRAM_WAITING", 0 );
            sub_3715( iParam0 + 188, g_U4959, 1, 0 );
            sub_3851( iParam0 + 188 );
        }
        if (sub_3971( iParam0 + 188 ))
        {
            iParam0->_fU72 = 7;
        }
        break;
        case 7:
        if (iParam0->_fU76)
        {
            sub_662( "SA", "Tram State = eTRAM_SPAWN", 0 );
            sub_27038( iParam0, iParam0->_fU80, 1, 0 );
        }
        if (sub_29821( iParam0 ))
        {
            iParam0->_fU72 = 0;
        }
        break;
        case 0:
        if (iParam0->_fU76)
        {
            sub_662( "SA", "Tram State = eTRAM_ARRIVING", 0 );
            sub_3715( iParam0 + 224, g_U4960, 1, 0 );
            sub_3851( iParam0 + 224 );
            sub_13229( iParam0 + 260 );
            sub_3715( iParam0 + 296, g_U4960 - 3000, 1, 0 );
            sub_3851( iParam0 + 296 );
        }
        if ((NOT (IS_VEHICLE_DEAD( iParam0->_fU4 ))) AND (sub_3971( iParam0 + 296 )))
        {
            PLAY_SOUND_FROM_VEHICLE( -1, "VEHICLES_TRAIN_SUBWAY_DOOR_TONE", iParam0->_fU4 );
        }
        if ((NOT (ref iParam0->_fU260->_fU20)) AND (ref iParam0->_fU224->_fU20))
        {
            if (sub_42470( iParam0, iParam0->_fU344, iParam0->_fU104 ))
            {
                iParam0->_fU72 = 1;
            }
        }
        break;
        case 1:
        if (iParam0->_fU76)
        {
            sub_662( "SA", "Tram State = eTRAM_OPEN_DOORS", 0 );
            sub_42682( iParam0, 0 );
            sub_42884( iParam0->_fU336 );
            sub_3715( iParam0 + 260, g_U4961, 1, 0 );
            sub_3851( iParam0 + 260 );
        }
        if (sub_3971( iParam0 + 260 ))
        {
            iParam0->_fU72 = 2;
        }
        break;
    }
    if (iParam0->_fU72 != iVar3)
    {
        iParam0->_fU76 = 1;
    }
    else
    {
        iParam0->_fU76 = 0;
    }
    return;
}

void sub_40247(int iParam0, unknown uParam1)
{
    sub_662( "SA", "P_TP_TRAM_DOORS_CLOSE", 0 );
    if (iParam0->_fU332 == 0)
    {
        sub_40318( iParam0 + 0, 0.00000000, 0, uParam1 );
        sub_40318( iParam0 + 4, 0.00000000, 0, uParam1 );
        sub_40318( iParam0 + 8, 0.00000000, 1, uParam1 );
    }
    else if (iParam0->_fU332 == 1)
    {
        sub_40318( iParam0 + 0, 0.00000000, 1, uParam1 );
        sub_40318( iParam0 + 4, 0.00000000, 0, uParam1 );
        sub_40318( iParam0 + 8, 0.00000000, 0, uParam1 );
    }
    sub_40476( iParam0, 1 );
    return;
}

void sub_40318(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if (NOT (IS_VEHICLE_DEAD( (uParam0^) )))
    {
        FORCE_TRAIN_DOOR_OPEN_CLOSE( (uParam0^), uParam1, uParam2, 1, uParam3 );
    }
    return;
}

void sub_40476(int iParam0, unknown uParam1)
{
    int[2] iVar4;
    int[2] iVar7;
    int[2] iVar10;

    array(ref iVar4, 2);
    iVar4[0] = 8;
    iVar4[1] = 11;
    sub_40510( iParam0->_fU0, ref iVar4, uParam1 );
    array(ref iVar7, 2);
    iVar7[0] = 7;
    iVar7[1] = 9;
    sub_40510( iParam0->_fU4, ref iVar7, uParam1 );
    array(ref iVar10, 2);
    iVar10[0] = 5;
    iVar10[1] = 9;
    sub_40510( iParam0->_fU8, ref iVar10, uParam1 );
    return;
}

void sub_40510(unknown uParam0, unknown uParam1, unknown uParam2)
{
    char[24] cVar5;
    int I;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        StrCopy( ref cVar5, "VEH-", 24 );
        ConcatString(ref cVar5, uParam0, 24);
        ConcatString(ref cVar5, "-", 24);
        for ( I = 0; I < (uParam1^); I++ )
        {
            StrCopy( ref uVar12, 8, cVar5, 6);
            ConcatString(ref uVar12, (uParam1^)[I], 32);
            ENABLE_NORMAL_LINE( "DYNAMIC", ref uVar12, uParam2 );
        }
    }
    return;
}

void sub_40720(boolean bParam0)
{
    int I;

    sub_662( "GA", "P_TP_SUICIDE_DOORS_CLOSE start", 0 );
    for ( I = 0; I < 6; I++ )
    {
        if (bParam0)
        {
            if (DOES_OBJECT_EXIST( g_U2990[I] ))
            {
                PLAY_OBJECT_ANIM( g_U2990[I], "ap_TramDoors_Anim", "ap_anim", 1000.00000000, 0, 1 );
                SET_OBJECT_ANIM_CURRENT_TIME( g_U2990[I], "ap_TramDoors_Anim", "ap_anim", 1.00000000 );
                SET_OBJECT_ANIM_SPEED( g_U2990[I], "ap_TramDoors_Anim", "ap_anim", -g_U3011 );
                PLAY_SOUND_FROM_OBJECT( -1, "S_AIRPORT_TRAM_PLATFORM_DOOR_CLOSE", g_U2990[I] );
                g_U2997[I] = 1;
            }
        }
        else if (DOES_OBJECT_EXIST( g_U2969[I] ))
        {
            PLAY_OBJECT_ANIM( g_U2969[I], "ap_TramDoors_Anim", "ap_anim", 1000.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U2969[I], "ap_TramDoors_Anim", "ap_anim", 1.00000000 );
            SET_OBJECT_ANIM_SPEED( g_U2969[I], "ap_TramDoors_Anim", "ap_anim", -g_U3011 );
            PLAY_SOUND_FROM_OBJECT( -1, "S_AIRPORT_TRAM_PLATFORM_DOOR_CLOSE", g_U2990[I] );
            g_U2976[I] = 1;
        }
    }
    sub_662( "GA", "P_TP_SUICIDE_DOORS_CLOSE end", 0 );
    return;
}

int sub_41560(int iParam0, unknown uParam1)
{
    unknown uVar4;

    uVar4 = sub_41729( 0.00000000, uParam1, sub_41583( iParam0 + 152 ) );
    sub_27659( iParam0->_fU0, uVar4 );
    if (sub_3971( iParam0 + 152 ))
    {
        sub_27659( iParam0->_fU0, uParam1 );
        return 1;
    }
    return 0;
}

void sub_41583(int iParam0)
{
    int iVar3;

    if (iParam0->_fU28)
    {
        iVar3 = TIMERA();
    }
    else
    {
        iVar3 = TIMERB();
    }
    return sub_41664( (TO_FLOAT( iVar3 - iParam0->_fU0 )) / (TO_FLOAT( iParam0->_fU12 )), 0.00000000, 1.00000000 );
}

void sub_41664(float fParam0, float fParam1, float fParam2)
{
    float Result;

    Result = fParam0;
    if (fParam0 < fParam1)
    {
        Result = fParam1;
    }
    else if (fParam0 > fParam2)
    {
        Result = fParam2;
    }
    return Result;
}

float sub_41729(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return ((1.00000000 - uParam2) * uParam0) + (uParam1 * uParam2);
}

void sub_41837(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4)
{
    int Result;

    Result = 0;
    if (NOT (IS_VEHICLE_DEAD( (uParam0^) )))
    {
        if ((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( (uParam0^) ), uParam1, 1 )) <= fParam4)
        {
            Result = 1;
        }
    }
    return Result;
}

int sub_42470(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    uVar7 = sub_41729( uParam1, 0.00000000, sub_41583( iParam0 + 224 ) );
    sub_27659( iParam0->_fU0, uVar7 );
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU0 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( iParam0->_fU0 )};
    }
    if ((uVar8._fU4 >= uParam2._fU4) || (sub_3971( iParam0 + 224 )))
    {
        sub_27659( iParam0->_fU0, 0.00000000 );
        return 1;
    }
    return 0;
}

void sub_42682(int iParam0, unknown uParam1)
{
    sub_662( "SA", "P_TP_TRAM_DOORS_OPEN", 0 );
    if (iParam0->_fU332 == 0)
    {
        sub_40318( iParam0 + 0, 1.50000000, 0, uParam1 );
        sub_40318( iParam0 + 4, 1.50000000, 0, uParam1 );
        sub_40318( iParam0 + 8, 1.50000000, 1, uParam1 );
    }
    else if (iParam0->_fU332 == 1)
    {
        sub_40318( iParam0 + 0, 1.50000000, 1, uParam1 );
        sub_40318( iParam0 + 4, 1.50000000, 0, uParam1 );
        sub_40318( iParam0 + 8, 1.50000000, 0, uParam1 );
    }
    sub_40476( iParam0, 1 );
    return;
}

void sub_42884(boolean bParam0)
{
    int I;

    sub_662( "GA", "P_TP_SUICIDE_DOORS_OPEN start", 0 );
    for ( I = 0; I < 6; I++ )
    {
        if (bParam0)
        {
            if (DOES_OBJECT_EXIST( g_U2990[I] ))
            {
                PLAY_OBJECT_ANIM( g_U2990[I], "ap_TramDoors_Anim", "ap_anim", 1000.00000000, 0, 1 );
                SET_OBJECT_ANIM_CURRENT_TIME( g_U2990[I], "ap_TramDoors_Anim", "ap_anim", 0.00000000 );
                SET_OBJECT_ANIM_SPEED( g_U2990[I], "ap_TramDoors_Anim", "ap_anim", g_U3011 );
                PLAY_SOUND_FROM_OBJECT( -1, "S_AIRPORT_TRAM_PLATFORM_DOOR_OPEN", g_U2990[I] );
                g_U2997[I] = 1;
            }
        }
        else if (DOES_OBJECT_EXIST( g_U2969[I] ))
        {
            PLAY_OBJECT_ANIM( g_U2969[I], "ap_TramDoors_Anim", "ap_anim", 1000.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U2969[I], "ap_TramDoors_Anim", "ap_anim", 0.00000000 );
            SET_OBJECT_ANIM_SPEED( g_U2969[I], "ap_TramDoors_Anim", "ap_anim", g_U3011 );
            PLAY_SOUND_FROM_OBJECT( -1, "S_AIRPORT_TRAM_PLATFORM_DOOR_OPEN", g_U2969[I] );
            g_U2976[I] = 1;
        }
    }
    sub_662( "GA", "P_TP_SUICIDE_DOORS_OPEN end", 0 );
    return;
}

void sub_43656()
{
    sub_662( "SA", "P_TP_POWER_ON start", 0 );
    sub_43699();
    PLAY_SOUND_FRONTEND( -1, "S_AIRPORT_TRAM_POWER_ON" );
    AUD_SET_IS_POWER_ON( 1 );
    sub_44208( ref g_U3061, ref g_U3065, 1 );
    sub_44208( ref g_U3062, ref g_U3066, 0 );
    sub_44208( ref g_U3063, ref g_U3067, 1 );
    sub_44208( ref g_U3064, ref g_U3068, 0 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_PLAT1_ESCALATOR_02", 1 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_PLAT1_ESCALATOR_02_ENDS_01", 1 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_PLAT1_ESCALATOR_02_ENDS_02", 1 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_PLAT1_ESCALATOR_02_STAIR_HITS_01", 1 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_PLAT1_ESCALATOR_02_STAIR_HITS_02", 1 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_PLAT1_ESCALATOR_02_STAIR_HITS_03", 1 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_PLAT1_ESCALATOR_02_STAIR_HITS_04", 1 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_CAFE_ESCALATOR_01", 1 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_CAFE_ESCALATOR_01_ENDS_01", 1 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_CAFE_ESCALATOR_01_ENDS_02", 1 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_CAFE_ESCALATOR_01_STAIR_HITS_01", 1 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_CAFE_ESCALATOR_01_STAIR_HITS_02", 1 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_CAFE_ESCALATOR_01_STAIR_HITS_03", 1 );
    ENABLE_STATIC_EMITTER( "S_AIR_SE_CAFE_ESCALATOR_01_STAIR_HITS_04", 1 );
    sub_662( "SA", "P_TP_POWER_ON end", 0 );
    return;
}

void sub_43699()
{
    sub_662( "SA", "P_TP_LIGHTS_ON start", 0 );
    sub_43752( ref g_U3028, 2042458963 );
    sub_43752( ref g_U3029, 1244233750 );
    sub_43752( ref g_U3030, 1952011381 );
    if (DOES_OBJECT_EXIST( g_U3037 ))
    {
        sub_5808( g_U3037 );
    }
    g_U3034 = sub_27814( -340235727, g_U3038, g_U649, 0, 0, 0 );
    FREEZE_OBJECT_POSITION( g_U3034, 1 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U3034, ref g_U2302 );
    g_U3035 = sub_27814( 1356137923, g_U3038, g_U649, 0, 0, 0 );
    FREEZE_OBJECT_POSITION( g_U3035, 1 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U3035, ref g_U2302 );
    g_U3036 = sub_27814( 2123751748, g_U3038, g_U649, 0, 0, 0 );
    FREEZE_OBJECT_POSITION( g_U3036, 1 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U3036, ref g_U2302 );
    g_U3041 = 1;
    CLEAR_TIMECYCLE_MODIFIER();
    SET_TIMECYCLE_MODIFIER( "departureB" );
    sub_662( "SA", "P_TP_LIGHTS_ON end", 0 );
    return;
}

void sub_43752(unknown uParam0, unknown uParam1)
{
    sub_662( "SA", "P_TP_CREATE_LIGHTS", 0 );
    (uParam0^) = sub_27814( uParam1, g_U3038, g_U649, 0, 0, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), 1 );
    ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), ref g_U2302 );
    return;
}

void sub_44208(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (bParam2)
    {
        SET_OBJECT_ANIM_SPEED( (uParam0^), "AP_EscSil_N1_Ad_H", "ap_anim", 1.00000000 );
        SET_MOVER_SPEED( (uParam1^), 1.00000000, 1.00000000 );
    }
    else
    {
        SET_OBJECT_ANIM_SPEED( (uParam0^), "AP_EscSil_N1_Ad_H", "ap_anim", -1.00000000 );
        SET_MOVER_SPEED( (uParam1^), -1.00000000, -1.00000000 );
    }
    return;
}

void sub_45219(unknown uParam0, unknown uParam1)
{
    sub_6762( uParam1 );
    sub_45252( 0, sub_2937(), "MAX", uParam1, 2, 0 );
    sub_45252( 1, sub_2937(), "MAX", uParam1, 2, 0 );
    sub_45477( uParam0, uParam1, 8, 1 );
    return;
}

void sub_45252(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_45477(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_45501( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_45501(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_45556( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_45556(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_45591( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_46085( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_45591(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_46085(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_46398(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        PED_ACTION_TREE_PLAY_NODE( uParam0, uParam1 );
    }
    return;
}

void sub_46474(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_2937();
    sub_46500( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

void sub_46500(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_46622(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_46719()
{
    int I;

    sub_662( "SA", "P_TP_RESET_UFE_ROOM_NAMES start", 0 );
    for ( I = 0; I < 4; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U232[I] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U232[I], ref g_U2302 );
        }
    }
    for ( I = 0; I < 4; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U336[I] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U336[I], ref g_U2302 );
        }
    }
    sub_662( "SA", "P_TP_RESET_UFE_ROOM_NAMES end", 0 );
    return;
}

void sub_47007(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_47038( (uParam0^)[I] );
    }
    return;
}

void sub_47038(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_47174()
{
    if (sub_3971( ref l_U885 ))
    {
        PLAY_IMAGEFX( "TRIPLE_INTERLACE_HOLD_HARD", 4, 0 );
        PLAY_IMAGEFX( "FLASH_RED", 4, 0 );
    }
    if (sub_3971( ref l_U894 ))
    {
        PLAY_IMAGEFX( "FLICKER_VIBRATE_INTERLACE_01", 4, 0 );
        PLAY_IMAGEFX( "FLICKER_VIBRATE_INTERLACE_01", 4, 0 );
    }
    return;
}

void sub_47407()
{
    sub_662( "GA", "P_TP_END_VIG_MID06_FIN start", 0 );
    if (NOT (IS_PED_DEAD( sub_2937() )))
    {
        FREEZE_PED_POSITION( sub_2937(), 0 );
    }
    sub_47492( 1, 1 );
    sub_662( "GA", "P_TP_END_VIG_MID06_FIN end", 0 );
    return;
}

void sub_47492(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_2937() )))
    {
        SET_PLAYER_CONTROL( sub_2959(), 1, 0 );
        SET_PED_INVINCIBLE( sub_2937(), 0 );
        if (bParam0)
        {
            sub_47573();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_47573()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_2937() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_2937(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_2937(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_2937(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_2937(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_47950()
{
    sub_662( "GA", "P_START_GAMEPLAY start", 0 );
    SET_PED_MODEL_LOD_DISTANCES( -1880103805, 10.00000000, 100.00000000 );
    DO_SCREEN_FADE_IN( 0 );
    sub_47492( 1, 1 );
    sub_662( "GA", "P_START_GAMEPLAY end", 0 );
    return;
}

void sub_48075()
{
    int I;

    sub_662( "SA", "P_TP_SETUP_AGA", 0 );
    l_U384 = PEDGROUPTASK_ADVANCE_CREATE( l_U378._fU0 );
    for ( I = 0; I < 4; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U232[I] )))
        {
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U378._fU0, l_U384, l_U232[I] );
        }
    }
    for ( I = 0; I < 4; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U336[I] )))
        {
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U378._fU0, l_U384, l_U336[I] );
        }
    }
    if (NOT (IS_PED_DEAD( sub_2937() )))
    {
        PEDGROUPTASK_ADVANCE_SETTARGET_PED( l_U378._fU0, l_U384, sub_2937() );
    }
    PEDGROUPTASK_ADVANCE_SETTIMETOHIDE( l_U378._fU0, l_U384, 2.00000000 );
    PEDGROUPTASK_ADVANCE_SETTIMETOIDLE( l_U378._fU0, l_U384, 1.00000000 );
    PEDGROUPTASK_ADVANCE_SETTIMERANGEFORALLPEDSTOSTARTFIRING( l_U378._fU0, l_U384, 3.00000000 );
    PEDGROUPTASK_ADVANCE_SETNUMPEDSTOADVANCE( l_U378._fU0, l_U384, 3 );
    if (NOT (IS_PED_DEAD( sub_2937() )))
    {
        PEDGROUPTASK_ADVANCE_SETTARGET_PED( l_U378._fU0, l_U384, sub_2937() );
        SET_PED_NUM_CHARGERS_OVERRIDE( sub_2937(), 0 );
    }
    return;
}

void sub_48665()
{
    int I;

    sub_662( "SA", "P_TP_UFE_WAVE_1_START_SUPPRESSING_FIRE start", 0 );
    for ( I = 0; I < 4; I++ )
    {
        if (sub_48755( l_U232[I], 0 ))
        {
            if (l_U265[I] == 1)
            {
                SET_PED_FLAG_LOCK_TO_COVER( l_U232[I], 1 );
                REGISTER_TARGET( l_U232[I], sub_2937() );
                TASK_COMBAT_SNAP_TO_COVER_TACTICAL( l_U232[I], "ap_sec4", l_U260[I], 1, sub_2937() );
                WAIT( 0 );
                if (NOT (IS_PED_DEAD( l_U232[I] )))
                {
                    DETACH_PED( l_U232[I], 0 );
                    SET_PED_FORCE_START_FIRING_FROM_COVER( l_U232[I] );
                }
            }
        }
    }
    sub_662( "SA", "P_TP_UFE_WAVE_1_START_SUPPRESSING_FIRE end", 0 );
    return;
}

void sub_48755(unknown uParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((DOES_PED_EXIST( uParam0 )) == 1)
    {
        Result = 1;
    }
    else
    {
        Result = 0;
    }
    if (Result == 1)
    {
        if ((IS_PED_DEAD( uParam0 )) == 1)
        {
            if (iParam1 == 1)
            {
                Result = 1;
            }
            else
            {
                Result = 0;
            }
        }
        else
        {
            Result = 1;
        }
    }
    return Result;
}

void sub_49128()
{
    int I;

    sub_662( "SA", "P_TP_UFE_WAVE_1_ATTACK start", 0 );
    for ( I = 0; I < 4; I++ )
    {
        if (sub_48755( l_U232[I], 0 ))
        {
            if (l_U265[I] == 0)
            {
                sub_49242( ref l_U565, l_U232[I], 1 );
                DETACH_PED( l_U232[I], 0 );
                sub_49339( ref l_U232[I], 0 );
                SET_PED_SUGGESTED_COVER_POINT( l_U232[I], "GenCover", l_U260[I] );
            }
            else if (l_U265[I] == 2)
            {
                sub_49242( ref l_U565, l_U232[I], 1 );
                DETACH_PED( l_U232[I], 0 );
                sub_49339( ref l_U232[I], sub_50076( sub_2937(), l_U417 ) );
                SET_PED_SUGGESTED_COVER_POINT( l_U232[I], "GenCover", l_U260[I] );
            }
        }
    }
    sub_662( "SA", "P_TP_UFE_WAVE_1_ATTACK end", 0 );
    return;
}

void sub_49242(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_49339(unknown uParam0, boolean bParam1)
{
    int iVar4;
    float fVar5;
    int I;
    float fVar7;
    vector vVar8;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;

    sub_662( "SA", "P_TP_UFE_EXIT_TRAM start", 0 );
    iVar4 = 0;
    fVar5 = 999.00000000;
    if (sub_48755( (uParam0^), 0 ))
    {
        for ( I = 0; I < 12; I++ )
        {
            fVar7 = sub_49436( (uParam0^), l_U142[I] );
            if (fVar7 < fVar5)
            {
                fVar5 = fVar7;
                iVar4 = I;
            }
        }
        if (iVar4 < 6)
        {
            vVar8 = {GET_RANDOM_FLOAT_IN_RANGE( -5.00000000, -3.00000000 ), 0.00000000, 0.00000000};
        }
        else
        {
            vVar8 = {GET_RANDOM_FLOAT_IN_RANGE( 3.00000000, 5.00000000 ), 0.00000000, 0.00000000};
        }
        uVar11 = {l_U142[iVar4] + vVar8};
        SET_RANDOM_SEED( GET_GAME_TIMER() );
        OPEN_SEQUENCE_TASK( ref uVar14 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_PAUSE( 0, GET_RANDOM_INT_IN_RANGE( 0, 1000 ) );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U142[iVar4], 3, 5000, 0.01000000, 0, 0 );
        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, uVar11, sub_2937(), 3, 1, 0.50000000, 0, 0, 0 );
        if (bParam1)
        {
            TASK_SELECT_WEAPON_TO_HAND( 0, GET_WEAPON_FROM_HOLSTER( (uParam0^), 5 ), 0 );
            TASK_SHOOT_AT_COORD( 0, -80.10491000, 94.72768000, -4.42173800, 1000, 1566631136, 0, 0 );
        }
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_PED( 0, sub_2937() );
        CLOSE_SEQUENCE_TASK( uVar14 );
        REGISTER_TARGET( (uParam0^), sub_2937() );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar14 );
        CLEAR_SEQUENCE_TASK( uVar14 );
        if (bParam1)
        {
            SET_PED_COMBAT_ATTRIBUTES( (uParam0^), 512, 1 );
            SET_PED_PROJECTILE_OVERRIDE_PARAMETERS( (uParam0^), 0, l_U376, l_U377, 0, 0 );
        }
    }
    sub_662( "SA", "P_TP_UFE_EXIT_TRAM end", 0 );
    return;
}

void sub_49436(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

int sub_50076(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

int sub_50417(unknown uParam0)
{
    if ((NOT (IS_VEHICLE_DEAD( g_U4552._fU8 ))) AND ((NOT (IS_VEHICLE_DEAD( g_U4552._fU4 ))) AND ((NOT (IS_VEHICLE_DEAD( g_U4552._fU0 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))))
    {
        if ((IS_PED_INSIDE_TRAIN( (uParam0^), g_U4552._fU8 )) || ((IS_PED_INSIDE_TRAIN( (uParam0^), g_U4552._fU4 )) || (IS_PED_INSIDE_TRAIN( (uParam0^), g_U4552._fU0 ))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_50569(unknown uParam0, float fParam1)
{
    if ((NOT (IS_VEHICLE_DEAD( g_U4552._fU8 ))) AND ((NOT (IS_VEHICLE_DEAD( g_U4552._fU4 ))) AND ((NOT (IS_VEHICLE_DEAD( g_U4552._fU0 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))))
    {
        if (((sub_49436( (uParam0^), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( g_U4552._fU8 ) )) <= fParam1) || (((sub_49436( (uParam0^), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( g_U4552._fU4 ) )) <= fParam1) || ((sub_49436( (uParam0^), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( g_U4552._fU0 ) )) <= fParam1)))
        {
            return 1;
        }
    }
    return 0;
}

int sub_50740()
{
    int I;

    for ( I = 0; I < 4; I++ )
    {
        if (sub_48755( l_U232[I], 0 ))
        {
            if (sub_50417( ref l_U232[I] ))
            {
                return 1;
            }
        }
    }
    for ( I = 0; I < 4; I++ )
    {
        if (sub_48755( l_U336[I], 0 ))
        {
            if (sub_50417( ref l_U336[I] ))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_51007()
{
    int I;

    sub_662( "SA", "P_TP_UFE_WAVE_2_START_SUPPRESSING_FIRE start", 0 );
    for ( I = 0; I < 4; I++ )
    {
        if (sub_48755( l_U336[I], 0 ))
        {
            if (l_U369[I] == 1)
            {
                if (sub_50076( sub_2937(), l_U417 ))
                {
                    SET_PED_FLAG_LOCK_TO_COVER( l_U336[I], 1 );
                    REGISTER_TARGET( l_U336[I], sub_2937() );
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U336[I], 1 );
                    TASK_COMBAT_SNAP_TO_COVER_TACTICAL( l_U336[I], "ap_sec4", l_U364[I], 0, sub_2937() );
                    WAIT( 0 );
                    if (NOT (IS_PED_DEAD( l_U336[I] )))
                    {
                        DETACH_PED( l_U336[I], 0 );
                    }
                }
                else
                {
                    sub_49242( ref l_U565, l_U336[I], 1 );
                    DETACH_PED( l_U336[I], 0 );
                    sub_49339( ref l_U336[I], 0 );
                }
            }
        }
    }
    sub_662( "SA", "P_TP_UFE_WAVE_2_START_SUPPRESSING_FIRE end", 0 );
    return;
}

void sub_51514()
{
    int I;

    sub_662( "SA", "P_TP_ACTIVATE_BACKUP_UFE start", 0 );
    for ( I = 0; I < 4; I++ )
    {
        if (sub_48755( l_U336[I], 0 ))
        {
            if (l_U369[I] == 0)
            {
                sub_49242( ref l_U565, l_U336[I], 1 );
                DETACH_PED( l_U336[I], 0 );
                sub_49339( ref l_U336[I], 0 );
                SET_PED_SUGGESTED_COVER_POINT( l_U336[I], "GenCover", l_U364[I] );
            }
            else if (l_U369[I] == 2)
            {
                sub_49242( ref l_U565, l_U336[I], 1 );
                DETACH_PED( l_U336[I], 0 );
                sub_49339( ref l_U336[I], sub_50076( sub_2937(), l_U417 ) );
                SET_PED_SUGGESTED_COVER_POINT( l_U336[I], "GenCover", l_U364[I] );
            }
        }
    }
    sub_662( "SA", "P_TP_ACTIVATE_BACKUP_UFE end", 0 );
    return;
}

void sub_51913()
{
    sub_662( "SA", "P_TP_START_AGA start", 0 );
    PEDGROUPTASK_ADVANCE_TRIGGER_MOVE( l_U378._fU0, l_U384 );
    sub_662( "SA", "P_TP_START_AGA end", 0 );
    return;
}

void sub_52122(unknown uParam0, boolean bParam1, float fParam2)
{
    int iVar5;
    int Result;
    int I;
    int iVar8;

    Result = 0;
    iVar8 = (uParam0^) - 1;
    for ( I = 0; I <= iVar8; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            iVar5 = 1;
            if (bParam1)
            {
                if ((IS_SPHERE_VISIBLE( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I] ), 1.00000000, 0 )) == 0)
                {
                    iVar5 = 0;
                }
            }
            if (fParam2 > 0.00000000)
            {
                if ((sub_52250( sub_2937(), (uParam0^)[I], 1 )) > fParam2)
                {
                    iVar5 = 0;
                }
            }
            if ((iVar5) AND (IS_PED_SHOOTING( (uParam0^)[I] )))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_52250(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_52648(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_52882()
{
    int iVar2;
    int I;

    iVar2 = 0;
    for ( I = 0; I < g_U2818; I++ )
    {
        if (DOES_PLACEMENT_EXIST( g_U2818[I] ))
        {
            iVar2++;
        }
    }
    for ( I = 0; I < g_U3350; I++ )
    {
        if (DOES_PLACEMENT_EXIST( g_U3350[I] ))
        {
            iVar2++;
        }
    }
    if (iVar2 < l_U702)
    {
        sub_39350( ref l_U693, 500 );
    }
    if ((NOT (sub_53216( sub_2937() ))) AND ((NOT (sub_53053( l_U661 ))) AND ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (sub_3971( ref l_U693 )))))
    {
        sub_45219( "SAIR_MFFKNPLS", ref l_U661 );
    }
    l_U702 = iVar2;
    return;
}

int sub_53053(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_53066( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_53066(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

int sub_53216(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return IS_ANY_SPEECH_PLAYING( uParam0 );
    }
    return 0;
}

int sub_53541(unknown uParam0)
{
    int Result;

    sub_662( "SA", "F_REQUEST_SCRIPT_STREAM start", 0 );
    for ( Result = 0; Result < 3; Result++ )
    {
        if ((GET_SCRIPT_STREAM_STATE( "ANY_STREAM", Result )) == 0)
        {
            REQUEST_SCRIPT_STREAM( uParam0, Result );
            return Result;
        }
    }
    sub_662( "SA", "F_REQUEST_SCRIPT_STREAM end", 0 );
    return -1;
}

void sub_53753(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_VISIBLE( uParam0, uParam1 );
    }
    else
    {
        sub_53839( "MAL_SetPedVisible DOES NOT HAVE VALID PED!" );
    }
    return;
}

void sub_53839(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_53929(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_3851( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_54037(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (iParam0->_fU168 == 0)
    {
        sub_54065( iParam0, uParam1 );
        iParam0->_fU192 = uParam1;
        iParam0->_fU36 = uParam2;
        iParam0->_fU148 = uParam3;
        iParam0->_fU152 = uParam4;
        iParam0->_fU156 = uParam5;
        iParam0->_fU160 = uParam7;
        iParam0->_fU176 = uParam6;
    }
    sub_4508( iParam0 + 40 );
    sub_4508( iParam0 + 76 );
    sub_4508( iParam0 + 112 );
    iParam0->_fU172 = iParam0->_fU176;
    iParam0->_fU164 = 0;
    iParam0->_fU168 = 1;
    iParam0->_fU184 = 0;
    iParam0->_fU188 = 0;
    return;
}

void sub_54065(int iParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case 1:
        StrCopy( ref iParam0->_fU4, "SMALL_EXPLOSION_SHAKE", 32 );
        break;
        case 2:
        StrCopy( ref iParam0->_fU4, "MEDIUM_EXPLOSION_SHAKE", 32 );
        break;
        case 3:
        StrCopy( ref iParam0->_fU4, "LARGE_EXPLOSION_SHAKE", 32 );
        break;
        case 4:
        StrCopy( ref iParam0->_fU4, "HAND_SHAKE", 32 );
        break;
        case 5:
        StrCopy( ref iParam0->_fU4, "JOLT_SHAKE", 32 );
        break;
        case 6:
        StrCopy( ref iParam0->_fU4, "VIBRATE_SHAKE", 32 );
        break;
        case 7:
        StrCopy( ref iParam0->_fU4, "WOBBLY_SHAKE", 32 );
        break;
    }
    iParam0->_fU0 = iParam0->_fU192;
    return;
}

void sub_54521(int iParam0)
{
    sub_4508( iParam0 + 40 );
    sub_4508( iParam0 + 76 );
    sub_4508( iParam0 + 112 );
    iParam0->_fU172 = 1;
    iParam0->_fU164 = 0;
    return;
}

void sub_54629()
{
    int J;
    int I;

    sub_662( "SA", "P_TP_CLEANUP_BODIES_IN_DOORWAY start", 0 );
    for ( J = 0; J < l_U438; J++ )
    {
        for ( I = 0; I < 4; I++ )
        {
            if ((IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U232[I], ref l_U438[J]._fU0 )) AND (IS_PED_DEAD( l_U232[I] )))
            {
                sub_5587( l_U232[I] );
            }
        }
        for ( I = 0; I < 4; I++ )
        {
            if ((IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U336[I], ref l_U438[J]._fU0 )) AND (IS_PED_DEAD( l_U336[I] )))
            {
                sub_5587( l_U336[I] );
            }
        }
    }
    sub_662( "SA", "P_TP_CLEANUP_BODIES_IN_DOORWAY end", 0 );
    return;
}

void sub_55110(int iParam0)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam0->_fU164 == 0)
        {
            sub_3715( iParam0 + 40, iParam0->_fU148, 1, 0 );
            sub_3851( iParam0 + 40 );
            if (iParam0->_fU152 > 0)
            {
                sub_3715( iParam0 + 76, iParam0->_fU152, 1, 0 );
                sub_3851( iParam0 + 76 );
            }
            iParam0->_fU164 = 1;
        }
        if (sub_3971( iParam0 + 40 ))
        {
            sub_662( "ML", "P_HANDLE_CAM_SHAKE is shaking the camera", "---" );
            sub_55318( iParam0 + 4, iParam0->_fU36 );
            if (iParam0->_fU156 > 0)
            {
                sub_3715( iParam0 + 112, iParam0->_fU156, 1, 0 );
                sub_3851( iParam0 + 112 );
            }
        }
        if (sub_3971( iParam0 + 112 ))
        {
            sub_55318( iParam0 + 4, iParam0->_fU36 );
            sub_3715( iParam0 + 112, iParam0->_fU156, 1, 0 );
            sub_3851( iParam0 + 112 );
        }
        if (sub_3971( iParam0 + 76 ))
        {
            sub_662( "ML", "P_HANDLE_CAM_SHAKE is done shaking the camera", "---" );
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
            sub_4508( iParam0 + 112 );
            iParam0->_fU172 = 0;
        }
    }
    return;
}

void sub_55318(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    SHAKE_GAMEPLAY_CAM( uParam0, uParam1 );
    return;
}

void sub_55689(int iParam0, int iParam1)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam1 == 1)
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam1 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam1 );
        }
        else
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
        }
        sub_4508( iParam0 + 40 );
        sub_4508( iParam0 + 76 );
        sub_4508( iParam0 + 112 );
        iParam0->_fU172 = 0;
    }
    return;
}

void sub_55920()
{
    int I;

    sub_662( "SA", "P_T2_UPDATE_EXISTING_PLACEMENTS start", 0 );
    for ( I = 0; I < g_U3350; I++ )
    {
        g_U3353[I] = DOES_PLACEMENT_EXIST( g_U3350[I] );
    }
    g_U3356 = DOES_PLACEMENT_EXIST( g_U3328 );
    sub_662( "SA", "P_T2_UPDATE_EXISTING_PLACEMENTS end", 0 );
    return;
}

void sub_56192()
{
    int iVar2;

    if ((l_U374 == 4) AND (l_U281 == 4))
    {
        iVar2 = (sub_52648( ref l_U232 )) + (sub_52648( ref l_U336 ));
        if ((NOT l_U130) AND (iVar2 == 1))
        {
            sub_56263( ref l_U232 );
            sub_56263( ref l_U336 );
            l_U130 = 1;
        }
    }
    return;
}

void sub_56263(unknown uParam0)
{
    int I;

    if ((sub_52648( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_56414()
{
    if ((DOES_OBJECT_EXIST( g_U3031 )) AND (DOES_OBJECT_EXIST( g_U3028 )))
    {
        if (g_U3041)
        {
            sub_5808( g_U3031 );
        }
        else
        {
            sub_5808( g_U3028 );
        }
    }
    return;
}

void sub_56497()
{
    int I;

    for ( I = 0; I < 6; I++ )
    {
        if ((DOES_OBJECT_EXIST( g_U2969[I] )) AND (g_U2976[I]))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( g_U2969[I], "ap_TramDoors_Anim", "ap_anim" )))
            {
                g_U2976[I] = 0;
            }
        }
        if ((DOES_OBJECT_EXIST( g_U2990[I] )) AND (g_U2997[I]))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( g_U2990[I], "ap_TramDoors_Anim", "ap_anim" )))
            {
                g_U2997[I] = 0;
            }
        }
    }
    return;
}

void sub_56724()
{
    unknown uVar2;

    if (NOT (IS_PED_DEAD( sub_2937() )))
    {
        if (HAS_PED_GOT_SPECIFIC_WEAPON( sub_2937(), -2075384407 ))
        {
            REMOVE_PED_WEAPON( sub_2937(), GET_WEAPON_FROM_HAND( sub_2937(), 0, 0 ) );
            sub_9144( sub_2937(), 1224272620, 50, 0, 0 );
            g_U3075 = 0;
        }
        if (NOT g_U3075)
        {
            if (HAS_PED_GOT_SPECIFIC_WEAPON( sub_2937(), 1224272620 ))
            {
                uVar2 = GET_WEAPON_FROM_HAND( sub_2937(), 0, 0 );
                if (GET_DOES_WEAPON_EXIST( uVar2 ))
                {
                    sub_662( "SA", "Applying laser sight to the player's sniper rifle.", 0 );
                    ENABLE_WEAPON_ATTACHMENT( uVar2, 13, 1 );
                    TOGGLE_WEAPON_ATTACHMENT( uVar2, 13, 0 );
                    SET_LASER_SIGHT_ATTACHMENT( uVar2, -12373631 );
                    g_U3075 = 1;
                }
            }
        }
    }
    return;
}

void sub_57015(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_57052( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_57052(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_5587( uParam0 );
            }
        }
    }
    return;
}

void sub_57182(unknown uParam0)
{
    int I;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I] )};
            if (uVar4._fU4 > 110.00000000)
            {
                sub_57265( (uParam0^)[I] );
            }
        }
    }
    return;
}

void sub_57265(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_57407()
{
    sub_662( "SA", "P_TP_RELEASE_ASSETS start", 0 );
    sub_57464( ref l_U704, ref g_U1030 );
    sub_57742( ref l_U730, ref g_U1247 );
    sub_57974( "LEVEL_S_FIN_CP_05", ref g_U1429 );
    sub_58179( "SCRIPT_MISSION\S_AIRPORT_TRAM", ref g_U1950 );
    sub_58179( "SCRIPT_MISSION\S_AIR_PLATFORM_01", ref g_U1950 );
    sub_662( "SA", "P_TP_RELEASE_ASSETS end", 0 );
    return;
}

void sub_57464(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_57499( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_57499(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_5293( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_57742(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_57777( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_57777(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_5293( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_57974(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5293( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_58179(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5293( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


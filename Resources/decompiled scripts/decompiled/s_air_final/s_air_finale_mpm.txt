void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U55 = -1;
    l_U56 = {64536, 64536, 64536};
    l_U78 = 0;
    l_U79 = 0;
    l_U80 = 1500;
    l_U117 = "MID_09_FIN_concat";
    l_U154 = 0;
    l_U155 = 1;
    l_U156 = 1;
    l_U157 = 0;
    l_U159 = {0.30000000, 0.00000000, 0.86000000};
    l_U162 = 175.00000000;
    l_U196 = {0.36400000, 3.00000000, 0.59400000};
    l_U199 = {0.00000000, 0.00000000, 179.99700000};
    l_U202 = {-0.40000000, -100.00000000, 0.70000000};
    l_U205 = {-0.08000000, -0.75000000, 0.00000000};
    l_U208 = 250;
    l_U227 = 50;
    l_U237 = 500;
    l_U247 = 2500;
    l_U309 = 250;
    l_U310 = {-1035.00000000, -538.00000000, -5.87400000};
    l_U313 = {0.00000000, 0.00000000, 0.00000000};
    l_U515 = {-1028.08000000, -547.35800000, -5.89600000};
    l_U527 = 24750;
    l_U528 = 13.00000000;
    l_U1265 = {-1035.00000000, -538.00000000, -5.87400000};
    l_U1268 = {-1035.00000000, -426.90000000, -5.87400000};
    l_U1610 = -1;
    l_U1642 = 0;
    l_U1643 = 0;
    l_U1644 = 0;
    sub_729( "SA", "Script s_air_Finale_MPM.sc is starting up...", 0 );
    l_U154 = 1;
    sub_784();
    while (NOT IS_EXITFLAG_SET())
    {
        sub_2462();
        sub_10608();
        if (l_U157 == 0)
        {
            sub_14959();
        }
        WAIT( 0 );
    }
    if (g_U861[7]._fU40 == 3)
    {
        sub_5191( 1 );
    }
    else
    {
        sub_5191( 0 );
    }
    sub_48630();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_air_Finale_MPM" );
    sub_729( "SA", "Script s_air_Finale_MPM.sc is terminating...", 0 );
    return;
}

void sub_729(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_784()
{
    l_U1586[0] = g_U2375;
    l_U1586[1] = g_U2376;
    l_U1586[2] = g_U2377;
    l_U1586[3] = g_U2378;
    l_U1586[4] = g_U2379;
    l_U1586[5] = g_U2380;
    l_U1586[6] = -1880103805;
    l_U1586[7] = g_U828;
    l_U1586[8] = -1409914275;
    l_U1586[9] = g_U2384;
    l_U1586[10] = g_U2385;
    l_U1586[11] = g_U2386;
    l_U1586[12] = g_U2387;
    l_U1586[13] = g_U2381;
    l_U1586[14] = g_U2382;
    l_U1586[15] = g_U2383;
    l_U1603[0] = 57534114;
    l_U1603[1] = 1478009203;
    l_U1603[2] = -1464892298;
    l_U1603[3] = -612753081;
    l_U1603[4] = -862236369;
    l_U1603[5] = -184942895;
    l_U1323[0] = {-1.20000000, -0.50000000, 1.00000000};
    l_U1323[1] = {0.40000000, -2.50000000, 1.00000000};
    l_U1323[2] = {0.00000000, -4.50000000, 1.00000000};
    l_U1333[0] = 180.00000000;
    l_U1333[1] = -90.00000000;
    l_U1333[2] = -90.00000000;
    l_U1319[0] = -1464892298;
    l_U1319[1] = -612753081;
    l_U1319[2] = 57534114;
    l_U1475[0] = 0;
    l_U1475[1] = 1;
    l_U1475[2] = 1;
    l_U1475[3] = 1;
    l_U1475[4] = 2;
    l_U1475[5] = 2;
    l_U1475[6] = 2;
    l_U1445[0] = {1.00000000, 0.90000000, 0.95000000};
    l_U1445[1] = {-1.00000000, -5.70000000, 0.95000000};
    l_U1445[2] = {-1.00000000, -7.00000000, 0.95000000};
    l_U1445[3] = {-1.00000000, 6.00000000, 0.95000000};
    l_U1445[4] = {-0.20000000, -7.00000000, 0.95000000};
    l_U1445[5] = {-1.00000000, -5.50000000, 0.95000000};
    l_U1445[6] = {-1.00000000, -1.00000000, 0.95000000};
    l_U1467[0] = -70.00000000;
    l_U1467[1] = 120.00000000;
    l_U1467[2] = 90.00000000;
    l_U1467[3] = 90.00000000;
    l_U1467[4] = 100.00000000;
    l_U1467[5] = 76.00000000;
    l_U1467[6] = 90.00000000;
    l_U1483[0] = 12;
    l_U1483[1] = 3;
    l_U1483[2] = 8;
    l_U1483[3] = 4;
    l_U1483[4] = 11;
    l_U1483[5] = 5;
    l_U1483[6] = 6;
    l_U1499[0] = 3711131;
    l_U1499[1] = 3711131;
    l_U1499[2] = 280965399;
    l_U1499[3] = 525284907;
    l_U1499[4] = 280965399;
    l_U1499[5] = 426620576;
    l_U1499[6] = -2117698134;
    l_U1507[0] = {0.10000000, 0.30000000, -0.95000000};
    l_U1507[1] = {0.20000000, 0.10000000, -0.95000000};
    l_U1507[2] = {0.10000000, -0.20000000, -0.95000000};
    l_U1507[3] = {-0.20000000, 0.10000000, -0.95000000};
    l_U1507[4] = {0.10000000, -0.10000000, -0.95000000};
    l_U1507[5] = {-0.20000000, 0.10000000, -0.95000000};
    l_U1507[6] = {0.10000000, 0.10000000, -0.95000000};
    l_U1529[0] = {80.00000000, 0.00000000, 0.00000000};
    l_U1529[1] = {-80.00000000, 0.00000000, 0.00000000};
    l_U1529[2] = {80.00000000, 0.00000000, 0.00000000};
    l_U1529[3] = {-80.00000000, 0.00000000, 0.00000000};
    l_U1529[4] = {80.00000000, 0.00000000, 0.00000000};
    l_U1529[5] = {80.00000000, 0.00000000, 0.00000000};
    l_U1529[6] = {80.00000000, 0.00000000, 0.00000000};
    l_U248[0]._fU44 = {2.00000000, -17.00000000, 1.80000000};
    l_U248[0]._fU56 = {0.00000000, 0.00000000, -90.00000000};
    l_U248[0]._fU40 = 1.00000000;
    l_U248[0]._fU36 = 0;
    l_U248[1]._fU44 = {2.00000000, -11.50000000, 1.80000000};
    l_U248[1]._fU56 = {0.00000000, 0.00000000, -90.00000000};
    l_U248[1]._fU40 = 1.00000000;
    l_U248[1]._fU36 = 300;
    l_U248[2]._fU44 = {2.00000000, -5.80000000, 1.80000000};
    l_U248[2]._fU56 = {0.00000000, 0.00000000, -90.00000000};
    l_U248[2]._fU40 = 1.00000000;
    l_U248[2]._fU36 = 600;
    l_U316._fU332 = 1;
    l_U316._fU348 = 0;
    l_U316._fU352 = 1;
    l_U316._fU356 = 1;
    l_U316._fU360 = 0;
    l_U1066._fU332 = 0;
    l_U1066._fU348 = 1;
    l_U1066._fU352 = 1;
    l_U1066._fU356 = 1;
    l_U1066._fU360 = 1;
    return;
}

void sub_2462()
{
    if (g_U830 == 8)
    {
        switch (l_U157)
        {
            case 0:
            if ((sub_2617()) || (IS_PED_DEAD( sub_2544() )))
            {
                l_U157 = 1;
                sub_729( "SA", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_3111())
            {
                l_U157 = 3;
            }
            else if ((sub_3151( 0 )) == 1)
            {
                l_U157 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_2544() )))
            {
                if ((g_U861[9]._fU40 != 4) AND (g_U861[9]._fU40 != 0))
                {
                    sub_729( "GA", "Shutting down script for MCE_BECKER checkpoint.", 0 );
                    sub_4605( ref g_U861[9] );
                    SET_EXITFLAG_FOR_SCRIPT( g_U861[9]._fU32 );
                    g_U846[9] = 0;
                }
                l_U157 = 3;
                sub_729( "SA", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            sub_4725( ref l_U518, l_U528 );
            break;
            case 3:
            sub_729( "SA", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_2544() ))) AND (NOT (IS_PLAYER_DEAD( sub_2566() ))))
            {
                SET_PLAYER_CONTROL( sub_2566(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_2544() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_2544(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            sub_5191( 1 );
            l_U157 = 4;
            sub_729( "SA", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_729( "SA", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_6398( ref l_U118, sub_2544() );
            l_U156 = 0;
            l_U157 = 5;
            sub_729( "SA", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_729( "SA", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U154 = 1;
            l_U157 = 0;
            sub_729( "SA", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_2544()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_2566() );
    }
    return 0;
}

void sub_2566()
{
    return GET_PLAYER_ID();
}

int sub_2617()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_2544() )))
        {
            SET_PED_FORCED_TO_WALK( sub_2544(), 0 );
            SET_PLAYER_FORCED_AIM( sub_2566(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_2566(), 1 );
            if ((IS_PED_VISIBLE( sub_2544() )) == 0)
            {
                SET_PED_VISIBLE( sub_2544(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_3111()
{
    return g_U648;
}

int sub_3151(int iParam0)
{
    iParam0 = 1;
    switch (l_U79)
    {
        case 0:
        if (NOT (sub_3212( ref l_U81 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_2544() )))
            {
                l_U80 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_3322( ref l_U81, l_U80, 1, 1 );
            sub_3458( ref l_U81 );
        }
        if (sub_3578( ref l_U81 ))
        {
            sub_729( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_2544() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_2566() )))
            {
                SET_PLAYER_CONTROL( sub_2566(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U79 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U79 = 2;
            }
            else
            {
                l_U79 = 3;
            }
        }
        break;
        case 2:
        sub_729( "NS", "Player will QUIT", 0 );
        sub_4065();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_729( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_4065();
        return 1;
        break;
    }
    return 0;
}

int sub_3212(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_3322(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_3458(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_3578(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_4065()
{
    sub_729( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4115( ref l_U81 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_2566() )))
    {
        SET_PLAYER_CONTROL( sub_2566(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U78 = 0;
    l_U78 = l_U78;
    l_U79 = 0;
    return;
}

void sub_4115(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_4605(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_4725(unknown uParam0, unknown uParam1)
{
    unknown uVar4;

    uVar4 = sub_4890( uParam1, 0.00000000, sub_4744( uParam0 ) );
    sub_4936( l_U316._fU0, uVar4 );
    if (sub_3578( uParam0 ))
    {
        sub_4936( l_U316._fU0, 0.00000000 );
    }
    return;
}

void sub_4744(int iParam0)
{
    int iVar3;

    if (iParam0->_fU28)
    {
        iVar3 = TIMERA();
    }
    else
    {
        iVar3 = TIMERB();
    }
    return sub_4825( (TO_FLOAT( iVar3 - iParam0->_fU0 )) / (TO_FLOAT( iParam0->_fU12 )), 0.00000000, 1.00000000 );
}

void sub_4825(float fParam0, float fParam1, float fParam2)
{
    float Result;

    Result = fParam0;
    if (fParam0 < fParam1)
    {
        Result = fParam1;
    }
    else if (fParam0 > fParam2)
    {
        Result = fParam2;
    }
    return Result;
}

float sub_4890(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return ((1.00000000 - uParam2) * uParam0) + (uParam1 * uParam2);
}

void sub_4936(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        SET_TRAIN_SPEED( uParam0, uParam1 );
        SET_TRAIN_CRUISE_SPEED( uParam0, uParam1 );
    }
    return;
}

void sub_5191(boolean bParam0)
{
    int I;

    sub_729( "SA", "P_MPM_CLEANUP_ALL", 0 );
    SET_CAM_VIEW_MODE( 1 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    FORCE_QUICK_DEATH_CAMERAS( 0 );
    sub_5261( ref l_U1315 );
    sub_5261( ref l_U1437 );
    if (bParam0)
    {
        sub_5408( ref l_U316 );
    }
    for ( I = 0; I < l_U1271; I++ )
    {
        STOP_PARTICLE_FX_LOOPED( l_U1271[I] );
    }
    sub_5408( ref l_U1066 );
    sub_5743( ref l_U1553 );
    sub_5743( ref l_U1491 );
    sub_5776( g_U805._fU0 );
    ISEQ_TERMINATE( -1317042002 );
    sub_5873( bParam0 );
    for ( I = 0; I < l_U530; I++ )
    {
        GAMEPLAY_HELPER_BOX_DESTROY( ref l_U530[I]._fU0 );
    }
    for ( I = 0; I < l_U798; I++ )
    {
        GAMEPLAY_HELPER_BOX_DESTROY( ref l_U798[I]._fU0 );
    }
    STOP_SCRIPT_STREAM( l_U1610 );
    if (CUTSCENE_IS_LOADED( l_U117 ))
    {
        CLEAR_NAMED_CUTSCENE( l_U117 );
    }
    if (NOT (IS_PED_DEAD( sub_2544() )))
    {
        SET_PED_FORCED_TO_WALK( sub_2544(), 0 );
        SET_PED_ALLOWED_TO_DUCK( sub_2544(), 1 );
        SET_PLAYER_CAN_USE_SHOOTDODGE( sub_2566(), 1 );
    }
    SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 0 );
    RESET_FORCED_AIM_INTENTION_DIRECTION();
    sub_6214( ref l_U1611 );
    return;
}

void sub_5261(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_5295( (uParam0^)[I] );
    }
    return;
}

void sub_5295(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_5408(int iParam0)
{
    sub_729( "SA", "P_T2_CLEANUP_TRAM", 0 );
    sub_5454( iParam0->_fU12 );
    sub_5454( iParam0->_fU16 );
    sub_5454( iParam0->_fU20 );
    sub_5454( iParam0->_fU32 );
    sub_5454( iParam0->_fU28 );
    sub_5454( iParam0->_fU32 );
    sub_5554( iParam0 + 36 );
    sub_5554( iParam0 + 48 );
    sub_5554( iParam0 + 60 );
    sub_5638( iParam0->_fU0 );
    return;
}

void sub_5454(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_5554(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_5454( (uParam0^)[I] );
    }
    return;
}

void sub_5638(unknown uParam0)
{
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_MISSION_TRAIN( uParam0 );
    }
    return;
}

void sub_5743(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_5776( (uParam0^)[I] );
    }
    return;
}

void sub_5776(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_5873(boolean bParam0)
{
    sub_729( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    else
    {
        sub_729( "CCB", "Stopping the Finale_Tram context...", 0 );
        END_CONTEXT( "Finale_Tram" );
    }
    return;
}

void sub_6214(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_6398(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_729( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_6582( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_7659( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_7951( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_8311( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_7951( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_8311( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_7951( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_8311( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_8596( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_8311( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_8596( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_8311( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_9089( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_9250( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_2544(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_729( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_6582(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_6614( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_6614(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_7659(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_7951(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_8267( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_8267(unknown uParam0)
{
    return;
}

void sub_8311(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_8596(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_8267( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_9089(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_9250(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_6614( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_9322( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_9322(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_10608()
{
    int I;
    char[16] cVar3;
    int J;
    char[16] cVar8;

    if (NOT l_U1642)
    {
        START_WIDGET_GROUP( "MPM" );
        ADD_WIDGET_BOOL( "Set player on empty tram", ref l_U1643 );
        sub_10715( ref l_U159, "Player start position", 1036831949 );
        ADD_WIDGET_FLOAT_SLIDER( "Player rotation", ref l_U162, -180.00000000, 180.00000000, 0.10000000 );
        sub_10715( ref l_U515, "Tram start position", 1036831949 );
        ADD_WIDGET_FLOAT_SLIDER( "Tram Start Speed", ref l_U528, 0.00000000, 20.00000000, 0.10000000 );
        ADD_WIDGET_INT_SLIDER( "Tram brake time", ref l_U527, 0, 60000, 500 );
        START_WIDGET_GROUP( "Blendout" );
        sub_10715( ref l_U196, "Cam offset", 1036831949 );
        sub_10715( ref l_U199, "Cam rotation", 1036831949 );
        ADD_WIDGET_BOOL( "Grab cam offset", ref l_U1644 );
        sub_10715( ref l_U205, "Forced aim direction", 1036831949 );
        ADD_WIDGET_INT_SLIDER( "Gameplay cam interp", ref l_U208, 0, 10000, 1 );
        ADD_WIDGET_INT_SLIDER( "Wait for gameplay cam", ref l_U227, 0, 10000, 1 );
        ADD_WIDGET_INT_SLIDER( "Bullet time delay", ref l_U237, 0, 10000, 1 );
        ADD_WIDGET_INT_SLIDER( "Bullet time length", ref l_U247, 0, 5000, 1 );
        sub_10715( ref l_U202, "Aim offset", 1036831949 );
        ADD_WIDGET_INT_SLIDER( "Explosion Delay", ref l_U309, 0, 10000, 1 );
        sub_10715( ref l_U310, "Explosion position", 1036831949 );
        sub_10715( ref l_U313, "Explosion rotation", 1036831949 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "MPM UFE" );
        for ( I = 0; I < 3; I++ )
        {
            StrCopy( ref cVar3, "UFE ", 16 );
            ConcatString(ref cVar3, I, 16);
            START_WIDGET_GROUP( ref cVar3 );
            sub_10715( ref l_U1323[I], "Position", 1036831949 );
            ADD_WIDGET_FLOAT_SLIDER( "Rotation", ref l_U1333[I], -360.00000000, 360.00000000, 0.10000000 );
            STOP_WIDGET_GROUP();
        }
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Dead UFE" );
        for ( J = 0; J < 7; J++ )
        {
            StrCopy( ref cVar8, "Dead UFE ", 16 );
            ConcatString(ref cVar8, J, 16);
            START_WIDGET_GROUP( ref cVar8 );
            sub_10715( ref l_U1445[J], "Position", 1036831949 );
            ADD_WIDGET_FLOAT_SLIDER( "Rotation", ref l_U1467[J], -360.00000000, 360.00000000, 0.10000000 );
            sub_10715( ref l_U1507[J], "Weapon Position Offset", 1036831949 );
            sub_10715( ref l_U1529[J], "Weapon Rotation", 1036831949 );
            STOP_WIDGET_GROUP();
        }
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Crashed tram" );
        sub_10715( ref l_U1268, "Post-explosion position", 1036831949 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U1642 = 1;
    }
    if (l_U1643)
    {
        sub_5191( 0 );
        sub_11932( ref l_U316, l_U515, 0, 0 );
        sub_14660( l_U316._fU0, sub_2544(), l_U159, l_U162 );
        l_U154 = 0;
        l_U1643 = 0;
    }
    if (l_U1644)
    {
        l_U196 = {(vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD())) - (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U316._fU4 )))};
        l_U199 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
        l_U1644 = 0;
    }
    return;
}

void sub_10715(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

void sub_11932(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, unknown uParam5)
{
    sub_729( "SA", "P_T2_CREATE_TRAM", 0 );
    iParam0->_fU0 = sub_12013( uParam1, uParam5, iParam0->_fU332, iParam0->_fU348, iParam0->_fU352, iParam0->_fU356, iParam0->_fU360, 0 );
    sub_4936( iParam0->_fU0, 0.00000000 );
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU0 )))
    {
        iParam0->_fU8 = GET_TRAIN_CABOOSE( iParam0->_fU0 );
        iParam0->_fU4 = GET_TRAIN_CARRIAGE( iParam0->_fU0, 1 );
        if (iParam0->_fU332 == 0)
        {
            if (bParam4)
            {
                iParam0->_fU12 = sub_12658( g_U2378, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            }
            iParam0->_fU24 = sub_12658( g_U2381, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        else if (bParam4)
        {
            iParam0->_fU12 = sub_12658( g_U2379, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        iParam0->_fU24 = sub_12658( g_U2382, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );;
        if (bParam4)
        {
            ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU12, iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( iParam0->_fU12, 1 );
        }
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU24, iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        iParam0->_fU36[0] = sub_12658( g_U2384, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        iParam0->_fU36[1] = sub_12658( g_U2385, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU36[0], iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU36[1], iParam0->_fU0, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        if (NOT (IS_STRING_NULL( uParam5 )))
        {
            if (bParam4)
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU12, uParam5 );
            }
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU24, uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU36[0], uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU36[1], uParam5 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU4 )))
    {
        if (bParam4)
        {
            iParam0->_fU16 = sub_12658( g_U2380, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU16, iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( iParam0->_fU16, 1 );
        }
        iParam0->_fU28 = sub_12658( g_U2383, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU28, iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        iParam0->_fU48[0] = sub_12658( g_U2386, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        iParam0->_fU48[1] = sub_12658( g_U2387, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU48[0], iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU48[1], iParam0->_fU4, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        if (NOT (IS_STRING_NULL( uParam5 )))
        {
            if (bParam4)
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU16, uParam5 );
            }
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU28, uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU48[0], uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU48[1], uParam5 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU8 )))
    {
        if (iParam0->_fU332 == 0)
        {
            if (bParam4)
            {
                iParam0->_fU20 = sub_12658( g_U2379, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            }
            iParam0->_fU32 = sub_12658( g_U2382, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        else if (bParam4)
        {
            iParam0->_fU20 = sub_12658( g_U2378, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        }
        iParam0->_fU32 = sub_12658( g_U2381, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );;
        if (bParam4)
        {
            ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU20, iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( iParam0->_fU20, 1 );
        }
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU32, iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        iParam0->_fU60[0] = sub_12658( g_U2384, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        iParam0->_fU60[1] = sub_12658( g_U2385, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU60[0], iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        ATTACH_OBJECT_TO_VEHICLE( iParam0->_fU60[1], iParam0->_fU8, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
        if (NOT (IS_STRING_NULL( uParam5 )))
        {
            if (bParam4)
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU20, uParam5 );
            }
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU32, uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU60[0], uParam5 );
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU60[1], uParam5 );
        }
    }
    return;
}

void sub_12013(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, boolean bParam5, boolean bParam6, boolean bParam7, boolean bParam8, boolean bParam9)
{
    unknown Result;
    unknown uVar13;
    unknown uVar14;

    sub_729( "GA", "F_CREATE_TRAM start", 0 );
    Result = CREATE_MISSION_TRAIN( uParam4, uParam0, 1 );
    if (bParam9)
    {
        while (NOT (DOES_VEHICLE_EXIST( Result )))
        {
            sub_729( "GA", "Waiting for tram to exist.", 0 );
            WAIT( 0 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( Result )))
    {
        SET_TRAIN_LEAVES_STATION( Result );
        SET_TRAIN_SPEED( Result, 0.00000000 );
        SET_TRAIN_CRUISE_SPEED( Result, 0.00000000 );
        SET_TRAIN_STOPS_FOR_STATIONS( Result, 0 );
        if (NOT (IS_STRING_NULL( uParam3 )))
        {
            SET_ROOM_FOR_VEHICLE_BY_NAME( Result, uParam3 );
        }
        SET_VEHICLE_EXTRA( Result, 3, NOT bParam5 );
        SET_VEHICLE_EXTRA( Result, 4, NOT bParam7 );
        SET_VEHICLE_EXTRA( Result, 5, NOT bParam6 );
        SET_VEHICLE_EXTRA( Result, 6, NOT bParam8 );
        uVar13 = GET_TRAIN_CARRIAGE( Result, 1 );
        uVar14 = GET_TRAIN_CABOOSE( Result );
    }
    if (NOT (IS_VEHICLE_DEAD( uVar13 )))
    {
        if (NOT (IS_STRING_NULL( uParam3 )))
        {
            SET_ROOM_FOR_VEHICLE_BY_NAME( uVar13, uParam3 );
        }
        SET_VEHICLE_EXTRA( uVar13, 3, NOT bParam5 );
        SET_VEHICLE_EXTRA( uVar13, 4, NOT bParam7 );
        SET_VEHICLE_EXTRA( uVar13, 5, NOT bParam6 );
        SET_VEHICLE_EXTRA( uVar13, 6, NOT bParam8 );
    }
    if (NOT (IS_VEHICLE_DEAD( uVar14 )))
    {
        if (NOT (IS_STRING_NULL( uParam3 )))
        {
            SET_ROOM_FOR_VEHICLE_BY_NAME( uVar14, uParam3 );
        }
        SET_VEHICLE_EXTRA( uVar14, 3, NOT bParam5 );
        SET_VEHICLE_EXTRA( uVar14, 4, NOT bParam7 );
        SET_VEHICLE_EXTRA( uVar14, 5, NOT bParam6 );
        SET_VEHICLE_EXTRA( uVar14, 6, NOT bParam8 );
    }
    return Result;
}

void sub_12658(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_12768( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_12768(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_8267( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_14660(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;
    float fVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;

    sub_729( "GA", "P_SET_PED_ON_TRAM start", 0 );
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
    {
        uVar8 = GET_VEHICLE_HEADING( uParam0 );
        fVar9 = uVar8 + uParam5;
        uVar10 = {((vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uParam0 ))) + (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", VECTOR_ROTATE_AXIS( uParam2, uVar8, "z" )))) - (vector( 0.00000000, 0.00000000, 1.00000000))};
        SET_PED_COORDS( uParam1, uVar10, 1 );
        SET_PED_HEADING( uParam1, fVar9 );
    }
    sub_729( "GA", "P_SET_PED_ON_TRAM end", 0 );
    return;
}

void sub_14959()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;

    iVar2 = l_U154;
    switch (l_U154)
    {
        case 0:
        if (l_U155)
        {
            sub_729( "SA", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
        case 1:
        if (l_U155)
        {
            sub_729( "SA", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        }
        sub_15231();
        sub_15305();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U154 = 2;
        break;
        case 2:
        if (l_U155)
        {
            sub_729( "SA", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        }
        sub_15904();
        sub_20452();
        l_U154 = 3;
        break;
        case 3:
        if (l_U155)
        {
            sub_729( "SA", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        }
        if ((sub_23602( ref g_U1950 )) AND ((sub_23411( ref g_U1368 )) AND ((sub_23284( ref g_U1429 )) AND ((sub_23163( ref g_U1247 )) AND (sub_23043( ref g_U1030 ))))))
        {
            if ((NOT l_U118._fU0) AND (g_U829 == 8))
            {
                l_U154 = 4;
            }
            else
            {
                l_U154 = 6;
            }
        }
        break;
        case 4:
        if (l_U155)
        {
            sub_729( "SA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        }
        l_U156 = 0;
        g_U846[8] = 1;
        if ((sub_23861( ref l_U118 )) == 0)
        {
            sub_8596( sub_2544(), -1464892298, 50, 0, 0 );
            sub_7951( sub_2544(), -612753081, 1, 50, 0 );
            l_U154 = 5;
            sub_729( "CR", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U154 = 6;
            sub_729( "CR", "eCheckpointState = CP_CREATE_TRAMS", 0 );
        }
        break;
        case 5:
        if (l_U155)
        {
            sub_729( "SA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        if (NOT (IS_PED_DEAD( sub_2544() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_2544(), 1 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_2544(), 0, 0 ) )))
            {
                g_U830 = 8;
                sub_24424( ref l_U118, g_U830, sub_2544(), g_U2014[8], g_U2129[8], g_U2168[8], g_U2207[8], 1 );
                l_U154 = 6;
            }
        }
        break;
        case 6:
        if (l_U155)
        {
            sub_729( "SA", "eCheckpointState = CP_CREATE_TRAMS", 0 );
            sub_11932( ref l_U316, l_U515, 0, 0 );
            sub_4936( l_U316._fU0, 0.00000000 );
            sub_11932( ref l_U1066, l_U1265, 0, 0 );
            sub_4936( l_U1066._fU0, 0.00000000 );
        }
        if (sub_28175())
        {
            sub_28252();
            sub_29679( ref l_U530[0], "TRAM_ENGINE_EXIT_1", l_U316._fU0, 3.00000000, 2.98000000, 0.00000000, 2.50000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29679( ref l_U530[1], "TRAM_ENGINE_EXIT_2", l_U316._fU0, 3.00000000, -2.98000000, 0.00000000, 2.50000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29679( ref l_U530[2], "TRAM_CARRIAGE_EXIT_1", l_U316._fU4, -3.00000000, 2.48000000, 0.00000000, 2.50000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29679( ref l_U530[3], "TRAM_CARRIAGE_EXIT_2", l_U316._fU4, -3.00000000, -3.48000000, 0.00000000, 2.50000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29679( ref l_U530[4], "TRAM_CABOOSE_EXIT_1", l_U316._fU8, -3.00000000, 2.98000000, 0.00000000, 2.50000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29679( ref l_U530[5], "TRAM_CABOOSE_EXIT_2", l_U316._fU8, -3.00000000, -2.98000000, 0.00000000, 2.50000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_30255( ref l_U657, ref l_U530 );
            sub_29679( ref l_U798[0], "TRAM_ENGINE_FORCE_WALK_1", l_U316._fU0, 0.00000000, 2.98000000, 0.00000000, 5.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29679( ref l_U798[1], "TRAM_ENGINE_FORCE_WALK_2", l_U316._fU0, 0.00000000, -2.98000000, 0.00000000, 5.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29679( ref l_U798[2], "TRAM_CARRIAGE_FORCE_WALK_1", l_U316._fU4, 0.00000000, 2.48000000, 0.00000000, 5.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29679( ref l_U798[3], "TRAM_CARRIAGE_FORCE_WALK_2", l_U316._fU4, 0.00000000, -3.48000000, 0.00000000, 5.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29679( ref l_U798[4], "TRAM_CABOOSE_FORCE_WALK_1", l_U316._fU8, 0.00000000, 2.98000000, 0.00000000, 5.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_29679( ref l_U798[5], "TRAM_CABOOSE_FORCE_WALK_2", l_U316._fU8, 0.00000000, -2.98000000, 0.00000000, 5.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1, 1 );
            sub_30255( ref l_U925, ref l_U798 );
            l_U154 = 7;
        }
        break;
        case 7:
        if (l_U155)
        {
            sub_729( "SA", "eCheckpointState = CP_CREATE_PEDS", 0 );
            l_U1344 = 1;
            l_U1343 = 0;
            l_U1552 = 1;
            l_U1551 = 0;
        }
        if (sub_31207())
        {
            if (sub_32994())
            {
                l_U154 = 8;
            }
        }
        break;
        case 8:
        if (l_U155)
        {
            sub_729( "SA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        if (g_U846[8] == 1)
        {
            if (l_U156)
            {
                if (CUTSCENE_IS_LOADED( l_U117 ))
                {
                    l_U154 = 9;
                }
                else
                {
                    sub_729( "SA", "Waiting for MID 09 to load ...", 0 );
                }
            }
            else
            {
                l_U154 = 9;
            }
        }
        break;
        case 9:
        if (l_U155 == 1)
        {
            sub_729( "SA", "eCheckpointState = CP_MID_09", 0 );
            sub_39850( ref l_U90, l_U117, 33551, 35450, 36773, 37103, 37122, 39827, 250, 0 );
            sub_40254( ref l_U90, g_U2014[8] );
            if (l_U156 == 1)
            {
                l_U90._fU4 = 2;
            }
            else
            {
                l_U90._fU4 = 7;
            }
        }
        sub_40342( ref l_U90 );
        if (l_U90._fU4 == 9)
        {
            l_U154 = 10;
        }
        break;
        case 10:
        if (l_U155)
        {
            sub_729( "SA", "eCheckpointState = CP_MPM", 0 );
            if (g_U830 != 8)
            {
                g_U830 = 8;
                sub_24424( ref l_U118, g_U830, sub_2544(), g_U2014[8], g_U2129[8], g_U2168[8], g_U2207[8], 1 );
            }
            l_U164 = 0;
            l_U163 = 0;
            sub_42289( ref l_U238 );
            sub_4936( l_U316._fU0, l_U528 );
            sub_4936( l_U1066._fU0, l_U528 );
            sub_42362( ref l_U518, l_U527 );
            sub_42362( ref l_U228, l_U237 );
            sub_42362( ref l_U300, l_U309 );
            sub_42289( ref l_U218 );
            CLEAR_NAMED_CUTSCENE( l_U117 );
            DO_SCREEN_FADE_IN( 0 );
        }
        sub_42455();
        sub_4725( ref l_U518, l_U528 );
        sub_42853( ref l_U1315, -1054867456, 0, 1 );
        sub_43007( l_U316._fU0 );
        if (((g_U861[7]._fU40 == 4) || (g_U861[7]._fU40 == 0)) AND ((l_U164) AND (NOT g_U861[9]._fU36)))
        {
            sub_729( "SA", "Starting Becker script", 0 );
            g_U861[9]._fU36 = 1;
        }
        if ((sub_43330()) AND (NOT l_U164))
        {
            sub_43399();
            sub_42362( ref l_U209, l_U227 );
            l_U164 = 1;
        }
        if (sub_3578( ref l_U209 ))
        {
            sub_43722( l_U208, 1, 0, g_U2168[8], g_U2207[8], 0 );
            sub_41932( 1, 0 );
        }
        if (sub_3578( ref l_U218 ))
        {
            RESET_FORCED_AIM_INTENTION_DIRECTION();
        }
        if (sub_3578( ref l_U300 ))
        {
            sub_43861();
        }
        else if (l_U300._fU16)
        {
            sub_44561();
        }
        if (sub_3578( ref l_U228 ))
        {
            sub_729( "SA", "Activating bullet time", 0 );
            sub_44802();
            sub_42362( ref l_U238, l_U247 );
            l_U163 = 1;
        }
        if (sub_3578( ref l_U238 ))
        {
            sub_729( "SA", "Deactivating bullet time", 0 );
            sub_44981();
        }
        if ((sub_42480( ref l_U1315 )) == 0)
        {
            sub_44981();
            if (NOT l_U518._fU16)
            {
                sub_729( "GA", "Starting FINALE_SONG_01 music track with FINALE_01_3 mood. Fade in 5 sec", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_3", "FINALE_01_3", 0.00000000, 5000, 7000, -1082130432, 0 );
            }
            l_U154 = 11;
        }
        break;
        case 11:
        if (l_U155)
        {
            sub_729( "SA", "eCheckpointState = CP_WAIT_FOR_BULLET_CAM", 0 );
        }
        sub_4725( ref l_U518, l_U528 );
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
        {
            l_U154 = 12;
        }
        break;
        case 12:
        if (l_U155)
        {
            sub_729( "SA", "eCheckpointState = CP_WAIT_FOR_DOORS", 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
            sub_42289( ref l_U1558 );
            sub_42289( ref l_U1567 );
            l_U529 = 0;
            sub_42362( ref l_U1621, 2000 );
            sub_42289( ref l_U1630 );
        }
        sub_4725( ref l_U518, l_U528 );
        if ((NOT (sub_45621( sub_2544() ))) AND ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (NOT l_U518._fU16)))
        {
            if (sub_3578( ref l_U1621 ))
            {
                sub_45709( "SAIR_THTRMSLWS", ref l_U1611 );
            }
        }
        if ((l_U518._fU16) AND (NOT l_U529))
        {
            sub_42362( ref l_U1558, 2000 );
            PLAY_SOUND_FROM_VEHICLE( -1, "VEHICLES_TRAIN_SUBWAY_DOOR_TONE", l_U316._fU4 );
            l_U529 = 1;
        }
        if (sub_3578( ref l_U1558 ))
        {
            sub_46868( ref l_U316._fU0, 1.50000000, 1, 0 );
            sub_46868( ref l_U316._fU4, 1.50000000, 0, 0 );
            sub_46868( ref l_U316._fU8, 1.50000000, 0, 0 );
            sub_729( "GA", "Starting FINALE_SONG_01 music track with FINALE_01_2 mood. Fade in 7 sec", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_2", "FINALE_01_2", 0.00000000, 7000, 10000, -1082130432, 0 );
            sub_42362( ref l_U1567, 1000 );
            sub_42362( ref l_U1630, 1000 );
        }
        if ((NOT (sub_45621( sub_2544() ))) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
        {
            if (sub_3578( ref l_U1630 ))
            {
                l_U1639[0] = "SAIR_TTRMSTPS1";
                l_U1639[1] = "SAIR_TTRMSTPS1";
                sub_47232( ref l_U1639, ref l_U1611 );
            }
        }
        if ((l_U1567._fU20) || ((l_U1567._fU16) || (sub_3578( ref l_U1567 ))))
        {
            if ((NOT (IS_PED_DEAD( sub_2544() ))) AND (sub_47367( ref l_U925, 0 )))
            {
                SET_PED_FORCED_TO_WALK( sub_2544(), 1 );
                SET_PED_ALLOWED_TO_DUCK( sub_2544(), 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_2566(), 0 );
            }
            else
            {
                SET_PED_FORCED_TO_WALK( sub_2544(), 0 );
                SET_PED_ALLOWED_TO_DUCK( sub_2544(), 1 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_2566(), 1 );
            }
        }
        if ((l_U1567._fU16) || (sub_3578( ref l_U1567 )))
        {
            if (sub_47367( ref l_U657, 0 ))
            {
                l_U154 = 13;
            }
        }
        break;
        case 13:
        if (l_U155)
        {
            sub_729( "SA", "eCheckpointState = CP_WAIT_FOR_HOLSTER", 0 );
            sub_38679( 1, 0, 0, 1 );
            sub_42289( ref l_U1576 );
            l_U1585 = 0;
        }
        if (sub_47839( ref uVar3, ref uVar4, ref l_U1585, 0 ))
        {
            sub_42362( ref l_U1576, 250 );
        }
        if (sub_3578( ref l_U1576 ))
        {
            l_U154 = 14;
        }
        break;
        case 14:
        if (l_U155)
        {
            sub_729( "SA", "eCheckpointState = CP_FINISHED", 0 );
            sub_48402( ref l_U316 );
            g_U846[9] = 1;
        }
        if ((g_U830 == 9) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U154 = 0;
        }
        break;
    }
    if (l_U154 != iVar2)
    {
        l_U155 = 1;
    }
    else
    {
        l_U155 = 0;
    }
    return;
}

void sub_15231()
{
    sub_729( "SA", "P_INITIALIZE_SCRIPT_DATA", 0 );
    l_U155 = 1;
    l_U158 = 0;
    l_U1557 = 0;
    return;
}

void sub_15305()
{
    sub_729( "SA", "P_SET_STATIC_DATA", 0 );
    sub_15377( ref l_U1275[0], g_U2014[8], 0.00000000, -244610902, 7, 3, 2, 0, 0 );
    sub_15377( ref l_U1275[1], g_U2014[8], 0.00000000, 215628944, 7, 3, 2, 0, 0 );
    sub_15377( ref l_U1275[2], g_U2014[8], 0.00000000, 566158225, 7, 3, 2, 0, 0 );
    sub_15377( ref l_U1345[0], g_U2014[8], 0.00000000, 1447570344, 7, 3, 2, 0, 0 );
    sub_15377( ref l_U1345[1], g_U2014[8], 0.00000000, 1152757315, 7, 3, 2, 0, 0 );
    sub_15377( ref l_U1345[2], g_U2014[8], 0.00000000, 1854613990, 7, 3, 2, 0, 0 );
    sub_15377( ref l_U1345[3], g_U2014[8], 0.00000000, -119132553, 7, 3, 2, 0, 0 );
    sub_15377( ref l_U1345[4], g_U2014[8], 0.00000000, -1347471989, 7, 3, 2, 0, 0 );
    sub_15377( ref l_U1345[5], g_U2014[8], 0.00000000, 1403297832, 7, 3, 2, 0, 0 );
    sub_15377( ref l_U1345[6], g_U2014[8], 0.00000000, 1949885446, 7, 3, 2, 0, 0 );
    return;
}

void sub_15377(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_15904()
{
    sub_729( "SA", "P_MPM_REQUEST_PERSISTENT_ASSETS start", 0 );
    sub_15973( ref l_U1586, ref g_U1030 );
    sub_17381( ref l_U1603, ref g_U1247 );
    sub_18397( "LEVEL_S_FIN_CP_08", ref g_U1429 );
    sub_19408( "SCRIPT_MISSION\S_AIRPORT_TRAM", ref g_U1950 );
    sub_729( "SA", "P_MPM_REQUEST_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_15973(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_16008( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_16008(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_16043( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_16174( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_16043(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_16174( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_16174( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_16174( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_16822( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_16174( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_16174( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16174(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16194( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_16194(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_16822(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_17381(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_17416( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_17416(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_17437( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_17569( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_17437(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_17569( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_17569( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_17569( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_16822( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_17569( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_17569( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_17569(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16194( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_18397(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_18418( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_18555( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_18418(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_18555( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_18555( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_18555( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_16822( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_18555( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_18555( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18555(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16194( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_19408(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_19429( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_19567( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_19429(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_19567( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_19567( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_19567( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_16822( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_19567( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_19567( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19567(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16194( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_20452()
{
    sub_729( "SA", "P_MPM_REQUEST_NONPERSISTENT_ASSETS start", 0 );
    if ((l_U156) AND (g_U829 != 8))
    {
        sub_20540( l_U117, 0 );
    }
    sub_20797( -1317042002, ref g_U1368 );
    l_U1610 = sub_22723( ref g_U2443 );
    sub_729( "SA", "P_MPM_REQUEST_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_20540(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_20797(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_20832( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_20984( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_20832(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_20984( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_20984( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_20984( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_20984( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_16822( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_16822( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_20984( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_20984( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20984(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16194( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_22723(unknown uParam0)
{
    int Result;

    sub_729( "SA", "F_REQUEST_SCRIPT_STREAM start", 0 );
    for ( Result = 0; Result < 3; Result++ )
    {
        if ((GET_SCRIPT_STREAM_STATE( "ANY_STREAM", Result )) == 0)
        {
            REQUEST_SCRIPT_STREAM( uParam0, Result );
            return Result;
        }
    }
    sub_729( "SA", "F_REQUEST_SCRIPT_STREAM end", 0 );
    return -1;
}

int sub_23043(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_23163(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_23284(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_23411(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_23602(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_23861(unknown uParam0)
{
    sub_729( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_6398( uParam0, sub_2544() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_24424(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_729( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_729( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_9250( iParam1 );
        sub_24683( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_25134( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_25134( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_25366( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_25134( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_25366( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_25366( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_25134( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_25366( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_25366( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_25366( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_25134( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_25366( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_25366( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_25366( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_25366( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_26924( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_729( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_24683(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_6614( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_729( "TEH", "Ending context", 0 );
        sub_729( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_25134(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_25366(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_26924(int iParam0)
{
    sub_8267( "CHECKPOINT DATA" );
    sub_26963( iParam0->_fU4 );
    sub_26986( iParam0->_fU16 );
    sub_26986( iParam0->_fU20 );
    sub_26986( iParam0->_fU24 );
    sub_27029( iParam0->_fU28 );
    sub_27029( iParam0->_fU56 );
    sub_27029( iParam0->_fU60 );
    sub_27029( iParam0->_fU64 );
    sub_27029( iParam0->_fU68 );
    sub_27029( iParam0->_fU72 );
    sub_27029( iParam0->_fU76 );
    sub_27029( iParam0->_fU80 );
    sub_27029( iParam0->_fU84 );
    sub_27029( iParam0->_fU88 );
    sub_27029( iParam0->_fU92 );
    sub_26986( iParam0->_fU32 );
    sub_27029( iParam0->_fU36 );
    sub_27029( iParam0->_fU40 );
    sub_27029( iParam0->_fU44 );
    sub_26986( iParam0->_fU136 );
    sub_27234( iParam0->_fU140 );
    sub_27029( iParam0->_fU52 );
    sub_8267( "---nRightHolsterAttachmentEnabled: " );
    sub_27029( iParam0->_fU96 );
    sub_8267( "---nRightHolsterAttachmentToggled: " );
    sub_27029( iParam0->_fU100 );
    sub_8267( "---nLeftHolsterAttachmentEnabled: " );
    sub_27029( iParam0->_fU104 );
    sub_8267( "---nLeftHolsterAttachmentToggled: " );
    sub_27029( iParam0->_fU108 );
    sub_8267( "---nRifleHolsterAttachmentEnabled: " );
    sub_27029( iParam0->_fU112 );
    sub_8267( "---nRifleHolsterAttachmentToggled: " );
    sub_27029( iParam0->_fU116 );
    sub_8267( "---nRightHandAttachmentEnabled: " );
    sub_27029( iParam0->_fU120 );
    sub_8267( "---nRightHandAttachmentToggled: " );
    sub_27029( iParam0->_fU124 );
    sub_8267( "---nLeftHandAttachmentEnabled: " );
    sub_27029( iParam0->_fU128 );
    sub_8267( "---nLeftHandAttachmentToggled: " );
    sub_27029( iParam0->_fU132 );
    sub_27029( l_U1 );
    sub_27029( 144 );
    return;
}

void sub_26963(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_26986(unknown uParam0)
{
    return;
}

void sub_27029(unknown uParam0)
{
    return;
}

void sub_27234(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

int sub_28175()
{
    if ((DOES_VEHICLE_EXIST( l_U316._fU8 )) AND ((DOES_VEHICLE_EXIST( l_U316._fU4 )) AND (DOES_VEHICLE_EXIST( l_U316._fU0 ))))
    {
        return 1;
    }
    return 0;
}

void sub_28252()
{
    vector[6] vVar2;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    int[0] iVar21;
    int I;

    sub_729( "SA", "P_MPM_CREATE_PLACEMENTS start", 0 );
    array(ref vVar2, 6);
    vVar2[0] = {-1.32000000, -8.35000000, 0.94500000};
    vVar2[1] = {-1.56000000, -8.35000000, 1.20700000};
    vVar2[2] = {-1.58000000, -8.35000000, 0.94500000};
    vVar2[3] = {-1.34000000, -8.35000000, 1.20700000};
    vVar2[4] = {-1.47000000, -8.35000000, 1.20700000};
    vVar2[5] = {-1.45000000, -8.35000000, 0.94500000};
    array(ref iVar21, 6);
    for ( I = 0; I < iVar21; I++ )
    {
        iVar21[I] = 1;
    }
    sub_28505( ref l_U1553, ref vVar2, ref iVar21, l_U316._fU4, 0 );
    sub_28852();
    sub_729( "SA", "P_MPM_CREATE_PLACEMENTS end", 0 );
    return;
}

void sub_28505(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    vector vVar7;
    unknown uVar10;
    int I;
    vector vVar12;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;

    if (NOT (IS_VEHICLE_DEAD( uParam3 )))
    {
        vVar7 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uParam3 )};
        uVar10 = GET_VEHICLE_HEADING( uParam3 );
        for ( I = 0; I < (uParam0^); I++ )
        {
            if ((uParam2^)[I])
            {
                if (DOES_PLACEMENT_EXIST( (uParam0^)[I] ))
                {
                    sub_5776( (uParam0^)[I] );
                }
                vVar12 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", VECTOR_ROTATE_AXIS( (uParam1^)[I], uVar10, "z" )};
                uVar15 = {vVar12 + vVar7};
                (uParam0^)[I] = sub_28687( -4072149, uVar15, 0.00000000, 0.00000000, 0.00000000, 1, 1, 0, 1119092736 );
                if ((DOES_PLACEMENT_EXIST( (uParam0^)[I] )) AND (NOT (IS_STRING_NULL( uParam4 ))))
                {
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^)[I], uParam4 );
                }
            }
        }
    }
    return;
}

void sub_28687(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_28852()
{
    sub_729( "CO", "P_CREATE_S_AIR_GG_PD_03", 0 );
    sub_28954( ref g_U805, g_U828, 339779568, 1838346573, -1026.67000000, -502.18000000, -4.80000000, 0.00000000, 0.00000000, 1.00000000, "" );
    sub_29083( ref g_U805 );
    return;
}

void sub_28954(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_729( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_29083(int iParam0)
{
    sub_729( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_29144( iParam0->_fU12 )) == 1)
        {
            sub_729( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_729( "CO", "has never been collected.", 0 );
        }
        if ((sub_29144( iParam0->_fU12 )) == 0)
        {
            sub_5776( iParam0->_fU0 );
            iParam0->_fU0 = sub_28687( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_729( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_729( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_29144(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_29679(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    if ((DOES_VEHICLE_EXIST( uParam2 )) == 1)
    {
        if (((IS_VEHICLE_DEAD( uParam2 )) == 0) || ((IS_VEHICLE_DEAD( uParam2 )) == 1))
        {
            GAMEPLAY_HELPER_BOX_CREATE_VEHICLE_ATTACHED( 1, iParam0 + 0, uParam2, uParam3, uParam6, uParam7, uParam8, uParam9, uParam12, uParam13 );
            iParam0->_fU72 = {uParam3};
        }
    }
    return;
}

void sub_30255(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
        sub_729( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

int sub_31207()
{
    char[64] cVar2;

    switch (l_U1344)
    {
        case 1:
        l_U1343 = 0;
        l_U1344 = 2;
        break;
        case 2:
        StrCopy( ref cVar2, "Creating pi_MPM_UFE[", 64 );
        ConcatString(ref cVar2, l_U1343, 64);
        ConcatString(ref cVar2, "]", 64);
        l_U1315[l_U1343] = sub_31330( ref l_U1275[l_U1343] );
        if ((NOT (IS_PED_DEAD( sub_2544() ))) AND (NOT (IS_PED_DEAD( l_U1315[l_U1343] ))))
        {
            sub_8596( l_U1315[l_U1343], l_U1319[l_U1343], 25000, 0, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1315[l_U1343], 1 );
            SET_PED_CAN_RAGDOLL( l_U1315[l_U1343], 0 );
        }
        sub_32123( l_U1315[l_U1343], ref l_U1337 );
        sub_32576( ref l_U1315[l_U1343], ref g_U2411, 6.00000000, 10.00000000 );
        l_U1343++;
        if (l_U1343 >= l_U1315)
        {
            l_U1344 = 3;
        }
        break;
        case 3:
        sub_32715( ref l_U1315, "UFE" );
        sub_32813( ref l_U1315 );
        l_U1344 = 4;
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_31330(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_12768( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_31809( iParam0->_fU40 );
    sub_31889( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_31809(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_31889(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_32123(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_8267( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_32266( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_32266( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_32266(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_32576(unknown uParam0, unknown uParam1, float fParam2, float fParam3)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    return;
}

void sub_32715(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_32813(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_32844( (uParam0^)[I] );
    }
    return;
}

void sub_32844(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

int sub_32994()
{
    char[64] cVar2;

    switch (l_U1552)
    {
        case 1:
        l_U1551 = 0;
        l_U1552 = 2;
        break;
        case 2:
        StrCopy( ref cVar2, "Creating pi_MPM_DeadUFE[", 64 );
        ConcatString(ref cVar2, l_U1551, 64);
        ConcatString(ref cVar2, "]", 64);
        l_U1437[l_U1551] = sub_31330( ref l_U1345[l_U1551] );
        if ((NOT (IS_PED_DEAD( sub_2544() ))) AND (NOT (IS_PED_DEAD( l_U1437[l_U1551] ))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1437[l_U1551], 1 );
        }
        l_U1551++;
        if (l_U1551 >= l_U1437)
        {
            l_U1552 = 3;
        }
        break;
        case 3:
        sub_32715( ref l_U1437, "Dead_UFE" );
        sub_32813( ref l_U1437 );
        l_U1552 = 4;
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

int sub_33551()
{
    sub_729( "SA", "F_MPM_MID_09_PRECUTSCENE_SETUP - START", 0 );
    sub_4936( g_U3756._fU0, 0.00000000 );
    sub_4936( g_U3955._fU0, 0.00000000 );
    sub_33647();
    sub_33947();
    sub_729( "SA", "F_MPM_MID_09_PRECUTSCENE_SETUP - END", 0 );
    return 1;
}

void sub_33647()
{
    int I;

    sub_729( "SA", "P_MPM_ACTIVATE_UFE start", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1315[I] )))
        {
            sub_33738( l_U1315[I] );
            sub_14660( l_U316._fU0, l_U1315[I], l_U1323[I], l_U1333[I] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1315[I], 1 );
        }
    }
    sub_729( "SA", "P_MPM_ACTIVATE_UFE end", 0 );
    return;
}

void sub_33738(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_33947()
{
    int I;
    unknown uVar3;

    sub_729( "SA", "P_MPM_ACTIVATE_DEAD_UFE start", 0 );
    for ( I = 0; I < 7; I++ )
    {
        if (sub_34022( l_U1437[I], 0 ))
        {
            sub_33738( l_U1437[I] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1437[I], 1 );
            switch (l_U1475[I])
            {
                case 0:
                uVar3 = l_U316._fU0;
                break;
                case 1:
                uVar3 = l_U316._fU4;
                break;
                case 2:
                uVar3 = l_U316._fU8;
                break;
            }
            if ((NOT (IS_VEHICLE_DEAD( uVar3 ))) AND (NOT (IS_PED_DEAD( l_U1437[I] ))))
            {
                ATTACH_PED_TO_VEHICLE( l_U1437[I], uVar3, 0, l_U1445[I], l_U1467[I], 360.00000000, 0, 0, 0, 1 );
                sub_34341( l_U1437[I], l_U1483[I] );
                l_U1491[I] = sub_28687( l_U1499[I], (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U1437[I] ))) + l_U1507[I], l_U1529[I], 0, 0, 0, 1119092736 );
            }
        }
    }
    sub_729( "SA", "P_MPM_ACTIVATE_DEAD_UFE end", 0 );
    return;
}

void sub_34022(unknown uParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((DOES_PED_EXIST( uParam0 )) == 1)
    {
        Result = 1;
    }
    else
    {
        Result = 0;
    }
    if (Result == 1)
    {
        if ((IS_PED_DEAD( uParam0 )) == 1)
        {
            if (iParam1 == 1)
            {
                Result = 1;
            }
            else
            {
                Result = 0;
            }
        }
        else
        {
            Result = 1;
        }
    }
    return Result;
}

void sub_34341(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
        sub_8267( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

void sub_35450()
{
    sub_729( "MF", "P_MPM_MID_09_REGISTER - START", 0 );
    if (NOT (IS_PED_DEAD( sub_2544() )))
    {
        CUTSCENE_REGISTER_PED_TELEPORT( sub_2544(), g_U2014[8], g_U2129[8] );
        sub_35551( 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_2544(), 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
        CUTSCENE_REGISTER_ISEQ( -1317042002 );
        ISEQ_REGISTER_ENTITY( -1317042002, "Max", sub_2544(), 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1315[0] )))
    {
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_D", -244610902 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U1315[0], 0, 0 ), "W_PI_Glk18_Aa_H", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1315[1] )))
    {
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_D^1", 215628944 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U1315[1], 0, 0 ), "W_PI_Glk18_Aa_H^1", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1315[2] )))
    {
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "A_UFE_Sold_D^2", 566158225 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U1315[2], 0, 0 ), "W_SG_Spas_Aa_H", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3756._fU0 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U3756._fU0, "monorail", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3756._fU4 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U3756._fU4, "monorail3", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3756._fU8 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U3756._fU8, "monorail2", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3955._fU0 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U3955._fU0, "monorail2^1", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3955._fU4 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U3955._fU4, "monorail3^1", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U3955._fU8 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U3955._fU8, "monorail^1", 0 );
    }
    sub_729( "MF", "P_MPM_MID_09_REGISTER - END", 0 );
    return;
}

void sub_35551(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_2544() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_2544(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_35631( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_35840();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_2544(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_35631(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_35840()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_2544() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_2544(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_35631( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_2544(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_2544(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_2544(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_36773()
{
    if (l_U90._fU52)
    {
        sub_36797();
    }
    if (NOT l_U158)
    {
        if (GET_CUTSCENE_TIME_MS() >= 12000)
        {
            sub_729( "GA", "Starting FINALE_SONG_01 music track with FINALE_01_3_4 mood. Fade in 0 sec", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_3_4", "FINALE_01_3_4", 0.00000000, 0, 4000, -1082130432, 0 );
            l_U158 = 1;
        }
    }
    return;
}

void sub_36797()
{
    sub_729( "SA", "P_MPM_SETUP_WEATHER_TOD", 0 );
    sub_36844();
    return;
}

void sub_36844()
{
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
    FREEZE_TIME_OF_DAY( 6, 0 );
    return;
}

int sub_37103()
{
    return 1;
}

void sub_37122()
{
    sub_729( "MF", "P_MPM_MID_09_PREPARE_BLENDOUT", 0 );
    if (l_U156)
    {
        sub_37185();
        STOP_SCRIPT_STREAM( g_U4950 );
    }
    else
    {
        sub_33551();
    }
    if ((NOT (IS_PED_DEAD( sub_2544() ))) AND (l_U156))
    {
        APPLY_PLAYER_PRELOAD_VARIATION( sub_2544(), 0 );
    }
    if ((NOT (IS_VEHICLE_DEAD( l_U316._fU4 ))) AND ((NOT (IS_VEHICLE_DEAD( l_U316._fU0 ))) AND (sub_34022( sub_2544(), 0 ))))
    {
        if (sub_37365())
        {
            sub_37661( 1 );
            sub_38069( 1 );
        }
        sub_38372();
        SET_PED_CONSUMING_AMMO( sub_2544(), 0 );
        PED_SET_ACTION_INTENTION( sub_2544(), 47, -1, 0.00000000, 0.00000000, 0.00000000 );
        if (NOT (IS_PED_DEAD( sub_2544() )))
        {
            ATTACH_PED_TO_VEHICLE( sub_2544(), l_U316._fU4, 0, l_U159, l_U162, 360.00000000, 0, 0, 0, 1 );
        }
        if (NOT l_U156)
        {
            ISEQ_REGISTER_ENTITY( -1317042002, "Max", sub_2544(), 0 );
        }
        ISEQ_START( -1317042002 );
        sub_38679( 1, 0, 0, 1 );
        sub_38863( ref l_U165, l_U196, l_U199, 45, 60000 );
        ATTACH_CAM_TO_VEHICLE( l_U165._fU0, l_U316._fU4, l_U196, 1 );
        sub_39102( ref l_U165 );
        sub_39245();
        PLAY_SCRIPT_STREAM_FRONTEND( l_U1610 );
        sub_39375();
    }
    if (NOT AUDIO_IS_MUSIC_PLAYING())
    {
        sub_729( "GA", "Starting FINALE_SONG_01 music track with FINALE_01_3_4 mood. Fade in 0 sec", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_3_4", "FINALE_01_3_4", 0.00000000, 0, 4000, -1082130432, 0 );
    }
    return;
}

void sub_37185()
{
    sub_729( "SA", "P_T2_CLEAN_MID09_TRAMS", 0 );
    sub_5408( ref g_U3756 );
    sub_5408( ref g_U3955 );
    return;
}

int sub_37365()
{
    int[18] iVar2;
    unknown uVar21;
    int I;

    array(ref iVar2, 18);
    iVar2[0] = -1013714740;
    iVar2[1] = -1074756423;
    iVar2[2] = 1308526797;
    iVar2[3] = 840671040;
    iVar2[4] = 57534114;
    iVar2[5] = 724901397;
    iVar2[6] = 1992962408;
    iVar2[7] = 319712764;
    iVar2[8] = 427207702;
    iVar2[9] = -110877124;
    iVar2[10] = 1224272620;
    iVar2[11] = 10648147;
    iVar2[12] = -2075384407;
    iVar2[13] = 1478009203;
    iVar2[14] = 434544317;
    iVar2[15] = -168327769;
    iVar2[16] = -184942895;
    iVar2[17] = 514118749;
    uVar21 = GET_WEAPON_FROM_HAND( sub_2544(), 0, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar21 ))
    {
        for ( I = 0; I < iVar2; I++ )
        {
            if ((GET_WEAPON_TYPE( uVar21 )) == iVar2[I])
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_37661(unknown uParam0)
{
    unknown Result;

    Result = nil;
    if (sub_37689( GET_WEAPON_FROM_HAND( sub_2544(), 0, 0 ) ))
    {
        Result = GET_WEAPON_FROM_HAND( sub_2544(), 0, 0 );
        SELECT_WEAPON_TO_HAND( sub_2544(), 0, 0, uParam0 );
    }
    return Result;
}

int sub_37689(unknown uParam0)
{
    int iVar3;
    int[25] iVar4;
    int I;

    iVar3 = GET_WEAPON_TYPE( uParam0 );
    array(ref iVar4, 25);
    iVar4[0] = 162573582;
    iVar4[1] = -1659006841;
    iVar4[2] = 879300975;
    iVar4[3] = 377623895;
    iVar4[4] = 319712764;
    iVar4[5] = 427207702;
    iVar4[6] = -110877124;
    iVar4[7] = -1013714740;
    iVar4[8] = -1074756423;
    iVar4[9] = 1308526797;
    iVar4[10] = 840671040;
    iVar4[11] = 57534114;
    iVar4[12] = 724901397;
    iVar4[13] = 1992962408;
    iVar4[14] = -1312131151;
    iVar4[15] = 434544317;
    iVar4[16] = -168327769;
    iVar4[17] = -184942895;
    iVar4[18] = 514118749;
    iVar4[19] = 1478009203;
    iVar4[20] = 1224272620;
    iVar4[21] = 10648147;
    iVar4[22] = -1787162676;
    iVar4[23] = -2075384407;
    iVar4[24] = 1001413062;
    for ( I = 0; I < iVar4; I++ )
    {
        if (iVar3 == iVar4[I])
        {
            return 1;
        }
    }
    return 0;
}

void sub_38069(unknown uParam0)
{
    if (NOT (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_2544(), 0, 0 ) )))
    {
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_2544(), 1 ) ))
        {
            SELECT_WEAPON_TO_HAND( sub_2544(), GET_WEAPON_FROM_HOLSTER( sub_2544(), 1 ), 0, uParam0 );
        }
        else if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_2544(), 0 ) ))
        {
            SELECT_WEAPON_TO_HAND( sub_2544(), GET_WEAPON_FROM_HOLSTER( sub_2544(), 0 ), 0, uParam0 );
        }
        else
        {
            SCRIPT_ASSERT( "Can't unholster weapon, no gun found in left or right holster!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "CAN'T UNHOLSTER PISTOL! Weapon already in RIGHT hand.", 0 );
    }
    return;
}

void sub_38372()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_2544() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_2544(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_2544(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_2544(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_2544(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_38679(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_2544() )))
        {
            SET_PLAYER_CONTROL( sub_2566(), 0, uParam2 );
            SET_PED_DUCKING( sub_2544(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_2544() );
            }
            SET_PED_INVINCIBLE( sub_2544(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_38863(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_3322( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U39, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_39102(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    if (iParam0->_fU92 == 1)
    {
        SET_CAM_ACTIVE_WITH_INTERP( iParam0->_fU0, iParam0->_fU120, iParam0->_fU88, iParam0->_fU100, iParam0->_fU104 );
    }
    else
    {
        SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    }
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_3458( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_39245()
{
    int I;

    for ( I = 0; I < 3; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1315[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1315[I], 0 );
            REGISTER_TARGET( l_U1315[I], sub_2544() );
            SET_PED_CAN_RAGDOLL( l_U1315[I], 1 );
        }
    }
    return;
}

void sub_39375()
{
    sub_729( "SA", "P_MPM_START_GAMEPLAY start", 0 );
    SET_INSTANT_FIRE_FORCED( 1 );
    BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
    SET_CAM_VIEW_MODE( 0 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[8], 0.00000000, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[8], 0.00000000, 0 );
    SET_CAMERA_OVERRIDE( "PRONE_AIM_CAMERA", "PRONE_AIM_CAMERA", 0, 0, 0 );
    FORCE_QUICK_DEATH_CAMERAS( 1 );
    sub_39547();
    sub_729( "SA", "P_MPM_START_GAMEPLAY end", 0 );
    return;
}

void sub_39547()
{
    sub_729( "CCB", "P_START_SP_CHALLENGES", 0 );
    return;
}

int sub_39827()
{
    return 1;
}

void sub_39850(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_729( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_39975( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 39935, 39953, uParam8 );
}

void sub_39935()
{
    return;
}

int sub_39953()
{
    return 1;
}

void sub_39975(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_40254(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 0;
    iParam0->_fU84 = {uParam1};
    iParam0->_fU24 = 1;
    return;
}

void sub_40342(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_729( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_729( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_729( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_729( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_729( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_729( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_20540( iParam0->_fU0, 0 );
            sub_729( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_38679( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_38679( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_729( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_41583( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_38679( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_41932( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_41932( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_41583(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_2544() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_2544(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_2544(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2544(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2544(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_2544(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_41932(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_2544() )))
    {
        SET_PLAYER_CONTROL( sub_2566(), 1, 0 );
        SET_PED_INVINCIBLE( sub_2544(), 0 );
        if (bParam0)
        {
            sub_38372();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_42289(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_42362(unknown uParam0, unknown uParam1)
{
    sub_3322( uParam0, uParam1, 1, 0 );
    sub_3458( uParam0 );
    return;
}

void sub_42455()
{
    int iVar2;

    if (NOT l_U1557)
    {
        if ((sub_42480( ref l_U1315 )) == 1)
        {
            sub_729( "GA", "Assigning bullet cam.", 0 );
            iVar2 = sub_42606( ref l_U1315 );
            if (NOT (iVar2 == nil))
            {
                SET_BULLET_CAM_PREF( iVar2, "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", "ALL_LMS_01", 0, 0, 0, 0, 0, 0, 0, 0 );
            }
            l_U1557 = 1;
        }
    }
    return;
}

void sub_42480(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_42606(unknown uParam0)
{
    int I;

    if ((sub_42480( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_42853(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_42890( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_42890(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_5295( uParam0 );
            }
        }
    }
    return;
}

void sub_43007(unknown uParam0)
{
    if ((NOT (IS_VEHICLE_DEAD( uParam0 ))) AND (NOT (IS_PED_DEAD( sub_2544() ))))
    {
        if ((sub_43060( sub_2544(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uParam0 ) )) > 75.00000000)
        {
            sub_43148( sub_2544() );
        }
    }
    return;
}

void sub_43060(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

void sub_43148(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

int sub_43330()
{
    if (NOT (IS_PED_DEAD( sub_2544() )))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( sub_2544(), 47 )) == 1)
        {
            return 1;
        }
    }
    return 0;
}

void sub_43399()
{
    sub_729( "SA", "P_MPM_SET_PLAYER_PRONE", 0 );
    if ((NOT (IS_VEHICLE_DEAD( l_U316._fU0 ))) AND (sub_34022( sub_2544(), 0 )))
    {
        START_PLAYER_SHOOTDODGE( 0.00000000, 0.00000000, 0.00000000, 1, 1, 0, 0 );
        PED_FINISH_ACTION_INTENTION( sub_2544(), 47 );
        SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 1 );
        SET_FORCED_AIM_INTENTION_DIRECTION( l_U205 );
        SET_CAMERA_OVERRIDE( "PRONE_AIM_CAMERA", "PRONE_AIM_CAMERA", 0, 0, 0 );
        CAMERA_ENABLE_SHOULDER_MODE( 0 );
        SET_PLAYER_CONTROL( sub_2566(), 0, 0 );
        REENABLE_PLAYER_INPUT( 14 );
        REENABLE_PLAYER_INPUT( 15 );
        REENABLE_PLAYER_INPUT( 16 );
        REENABLE_PLAYER_INPUT( 17 );
        REENABLE_PLAYER_INPUT( 4 );
        SET_CROSSHAIR_PULSE();
    }
    return;
}

void sub_43722(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_43861()
{
    int I;

    sub_729( "SA", "P_MPM_TRIGGER_EXPLOSION", 0 );
    sub_43921( l_U1066._fU0, l_U1268 );
    sub_4936( l_U1066._fU0, 0.00000000 );
    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "FIN_Explo_Tram_S", l_U310, l_U313, 1065353216 );
    for ( I = 0; I < l_U248; I++ )
    {
        sub_3322( ref l_U248[I]._fU0, l_U248[I]._fU36, 1, 0 );
        sub_3458( ref l_U248[I]._fU0 );
    }
    if (NOT (IS_PED_DEAD( l_U1315[0] )))
    {
        PED_SET_ACTION_INTENTION( l_U1315[0], 1, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U1315[1] )))
    {
        SET_PED_TO_RAGDOLL_WITH_EXPLOSION( l_U1315[1], 1000, 2000, l_U310 );
    }
    if (NOT (IS_PED_DEAD( l_U1315[2] )))
    {
        SET_PED_TO_RAGDOLL_WITH_EXPLOSION( l_U1315[2], 1000, 1500, l_U310 );
    }
    if (NOT (IS_VEHICLE_DEAD( l_U1066._fU0 )))
    {
        l_U1271[0] = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "Fire_Gas_Pump_Burn_S", l_U1066._fU0, 0.00000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1.00000000 );
        l_U1271[1] = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "Fire_Gas_Pump_Burn_S", l_U1066._fU0, 0.00000000, -3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 2.00000000 );
        l_U1271[2] = START_PARTICLE_FX_LOOPED_ON_VEHICLE( "Fire_Gas_Pump_Burn_S", l_U1066._fU4, 0.00000000, 0.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 3.00000000 );
    }
    DAMAGE_GLASS_IN_RADIUS( l_U310, 100.00000000, 0.20000000 );
    return;
}

void sub_43921(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        SET_MISSION_TRAIN_COORDS( uParam0, uParam1 );
    }
    return;
}

void sub_44561()
{
    int I;

    for ( I = 0; I < l_U248; I++ )
    {
        if (sub_3578( ref l_U248[I]._fU0 ))
        {
            sub_729( "AT", "Starting shattered glass effect!", 0 );
            START_PARTICLE_FX_NON_LOOPED_ON_VEHICLE( "FIN_RF_Glass_Window_S", l_U316._fU0, l_U248[I]._fU44, l_U248[I]._fU56, l_U248[I]._fU40 );
        }
    }
    return;
}

void sub_44802()
{
    sub_729( "SA", "P_MPM_START_MPM", 0 );
    if (GET_ADRENALINE_AMT() < 0.10000000)
    {
        SET_ADRENALINE_AMT( 0.10000000 );
    }
    ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
    ENABLE_MPM( 1 );
    ENABLE_ALL_ADRENALINE( 0 );
    return;
}

void sub_44981()
{
    sub_729( "SA", "P_MPM_FINISH_MPM", 0 );
    if (sub_34022( sub_2544(), 0 ))
    {
        SET_PED_CONSUMING_AMMO( sub_2544(), 1 );
        SET_PLAYER_CONTROL( sub_2566(), 1, 0 );
        DEACTIVATE_BULLET_TIME( 0, 0 );
        ENABLE_MPM( 0 );
        ENABLE_ALL_ADRENALINE( 1 );
        CAMERA_ENABLE_SHOULDER_MODE( 1 );
        SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
        SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 0 );
        DETACH_PED( sub_2544(), 0 );
        RESET_FORCED_AIM_INTENTION_DIRECTION();
    }
    return;
}

int sub_45621(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return IS_ANY_SPEECH_PLAYING( uParam0 );
    }
    return 0;
}

void sub_45709(unknown uParam0, unknown uParam1)
{
    sub_6214( uParam1 );
    sub_45742( 0, sub_2544(), "MAX", uParam1, 2, 0 );
    sub_45742( 1, sub_2544(), "MAX", uParam1, 2, 0 );
    sub_45967( uParam0, uParam1, 8, 1 );
    return;
}

void sub_45742(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_45967(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_45991( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_45991(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_46046( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_46046(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_46081( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_46575( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_46081(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_46575(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_46868(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if (NOT (IS_VEHICLE_DEAD( (uParam0^) )))
    {
        FORCE_TRAIN_DOOR_OPEN_CLOSE( (uParam0^), uParam1, uParam2, 1, uParam3 );
    }
    return;
}

void sub_47232(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;

    sub_729( "SA", "P_PLAY_RANDOM_MONOLOGUE", 0 );
    uVar4 = (uParam0^);
    SET_RANDOM_SEED( GET_REAL_GAME_TIMER() );
    uVar5 = GET_RANDOM_INT_IN_RANGE( 0, uVar4 );
    sub_45709( (uParam0^)[uVar5], uParam1 );
    return;
}

void sub_47367(int iParam0, unknown uParam1)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD( sub_2544() )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if (sub_47426( iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam1) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU548 = 1;
    return Result;
}

void sub_47426(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_47444( sub_2544(), uParam0 );
}

int sub_47444(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

int sub_47839(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;

    switch ((uParam2^))
    {
        case 0:
        uVar6 = GET_WEAPON_FROM_HAND( sub_2544(), 0, 0 );
        if (sub_37365())
        {
            (uParam0^) = 1;
            SELECT_WEAPON_TO_HAND( sub_2544(), 0, 0, uParam3 );
            (uParam2^) = 1;
        }
        else
        {
            (uParam2^) = 2;
        }
        break;
        case 1:
        uVar6 = GET_WEAPON_FROM_HAND( sub_2544(), 0, 0 );
        if (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
        {
            uVar6 = GET_WEAPON_FROM_HOLSTER( sub_2544(), 2 );
            if (GET_DOES_WEAPON_EXIST( uVar6 ))
            {
                (uParam2^) = 4;
            }
        }
        break;
        case 2:
        uVar6 = GET_WEAPON_FROM_HAND( sub_2544(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar6 ))
        {
            (uParam1^) = 1;
            SELECT_WEAPON_TO_HAND( sub_2544(), 0, 1, uParam3 );
            (uParam2^) = 3;
        }
        else
        {
            (uParam2^) = 4;
        }
        break;
        case 3:
        uVar6 = GET_WEAPON_FROM_HAND( sub_2544(), 1, 0 );
        if (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
        {
            (uParam2^) = 4;
        }
        break;
        case 4:
        uVar6 = GET_WEAPON_FROM_HAND( sub_2544(), 0, 0 );
        if (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
        {
            uVar6 = GET_WEAPON_FROM_HOLSTER( sub_2544(), 0 );
            if (NOT (GET_DOES_WEAPON_EXIST( uVar6 )))
            {
                uVar6 = GET_WEAPON_FROM_HOLSTER( sub_2544(), 1 );
            }
            SELECT_WEAPON_TO_HAND( sub_2544(), uVar6, 0, uParam3 );
        }
        (uParam2^) = 5;
        break;
        case 5:
        uVar6 = GET_WEAPON_FROM_HAND( sub_2544(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar6 ))
        {
            (uParam2^) = 6;
            return 1;
        }
        break;
    }
    return 0;
}

void sub_48402(int iParam0)
{
    sub_729( "GA", "P_T2_SET_1403_TRAM", 0 );
    g_U4154._fU0 = iParam0->_fU0;
    g_U4154._fU4 = iParam0->_fU4;
    g_U4154._fU8 = iParam0->_fU8;
    return;
}

void sub_48630()
{
    sub_729( "SA", "P_MPM_RELEASE_ASSETS start", 0 );
    sub_48688( ref l_U1586, ref g_U1030 );
    sub_49111( ref l_U1603, ref g_U1247 );
    sub_49328( -1317042002, ref g_U1368 );
    sub_49575( "LEVEL_S_FIN_CP_08", ref g_U1429 );
    sub_49780( "SCRIPT_MISSION\S_AIRPORT_TRAM", ref g_U1950 );
    sub_729( "SA", "P_MPM_RELEASE_ASSETS end", 0 );
    return;
}

void sub_48688(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_48723( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_48723(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_48835( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_48835(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_49111(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_49146( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_49146(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_48835( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_49328(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_48835( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

void sub_49575(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_48835( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_49780(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_48835( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


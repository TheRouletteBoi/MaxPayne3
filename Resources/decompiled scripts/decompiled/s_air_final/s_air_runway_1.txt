void main()
{
    l_U0 = 1;
    l_U1 = 144;
    StrCopy( ref l_U2, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U10, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = 1500;
    l_U49 = -1;
    l_U50 = {64536, 64536, 64536};
    l_U89 = 0;
    l_U91 = 1;
    l_U92 = 0;
    l_U94 = -1;
    l_U122 = 1500;
    l_U164 = {-2.00000000, 30.00000000, 0.00000000};
    l_U167 = {0.00000000, 0.00000000, 4.00000000};
    l_U170 = 3500;
    l_U171 = 1000;
    l_U181 = -1;
    l_U213 = {6.00000000, -1.20000000, 2.00000000};
    l_U216 = {0.00000000, 0.00000000, 0.00000000};
    l_U219 = 3000;
    l_U220 = 0.35000000;
    l_U230 = 100;
    l_U231 = {0.60000000, 2.10000000, 0.00000000};
    l_U234 = {-0.60000000, 2.10000000, 0.00000000};
    l_U400 = 0;
    l_U401 = 10.00000000;
    l_U451 = 0.08000000;
    l_U452 = 3800;
    l_U453 = 100.00000000;
    l_U454 = 0.40000000;
    l_U456 = {-832.00070000, -712.93200000, -6.73889600};
    l_U459 = 312.48550000;
    l_U460 = {0.10000000, -0.22000000, 0.65000000};
    l_U464 = {-620.23000000, 1039.99000000, -6.73000000};
    l_U467 = 355.22000000;
    l_U468 = 269;
    l_U470 = {-803.96550000, -510.19930000, -6.74795100};
    l_U473 = 267;
    l_U475 = {-583.37730000, -755.13710000, -6.74778800};
    l_U478 = 11.78708000;
    l_U482 = -4.00000000;
    l_U498 = 274;
    l_U499 = 277;
    l_U500 = 278;
    l_U501 = 279;
    l_U502 = 280;
    l_U503 = 291;
    l_U504 = 287;
    l_U505 = 288;
    l_U506 = 289;
    l_U507 = 290;
    l_U508 = 293;
    l_U509 = 294;
    l_U510 = 17000;
    l_U511 = 5500;
    l_U512 = 8500;
    l_U513 = 7500;
    l_U514 = 7000;
    l_U515 = 8500;
    l_U516 = 6500;
    l_U517 = 9700;
    l_U518 = 6300;
    l_U519 = 35000;
    l_U520 = 35000;
    l_U521 = 25000;
    l_U522 = 25000;
    l_U523 = 1;
    l_U524 = 0.70000000;
    l_U536 = -1;
    l_U537 = -1;
    l_U538 = -1;
    l_U539 = -1;
    l_U540 = -1;
    l_U541 = -1;
    l_U542 = -1;
    l_U543 = -1;
    l_U544 = -1;
    l_U953 = 85000;
    l_U982 = 3000;
    l_U983 = 270;
    l_U1015 = 4000;
    l_U1084 = 500;
    l_U1085 = 0.05000000;
    l_U1095 = 4000;
    l_U1097 = 0.20000000;
    l_U1107 = 12000;
    l_U1340 = 0;
    l_U1341 = 0;
    l_U1342 = 0;
    l_U1343 = 0;
    l_U1344 = 0;
    l_U1345 = 0;
    l_U1346 = 0;
    l_U1347 = 0;
    l_U1348 = 0;
    l_U1349 = 0;
    l_U1350 = 0;
    l_U1351 = 0;
    l_U1352 = 0;
    l_U1353 = 0;
    l_U1354 = 0;
    l_U1355 = 0;
    l_U1356 = 0;
    l_U1357 = 0;
    l_U1358 = 0;
    l_U1359 = 0;
    l_U1360 = 0;
    l_U1361 = 0;
    l_U1362 = 0;
    l_U1731 = 0;
    sub_1118( "CR", "Script s_air_Runway_1.sc is starting...", 0 );
    sub_1167();
    l_U89 = 3;
    if (g_U830 == 12)
    {
        sub_1329( -801.51960000, -690.03890000, -6.74649000, 269.71960000, -4.75866100, -0.01460300 );
    }
    while (NOT IS_EXITFLAG_SET())
    {
        sub_1524();
        if (l_U92 == 0)
        {
            sub_10160();
        }
        WAIT( 0 );
    }
    sub_3796();
    sub_64200();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_air_Runway_1" );
    sub_1118( "CR", "Script s_air_Runway_1.sc is terminating...", 0 );
    return;
}

void sub_1118(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1167()
{
    l_U1025[0] = 2113814688;
    l_U1025[1] = 1969936254;
    l_U1025[2] = 1979959192;
    l_U1025[3] = 877881452;
    l_U1025[4] = -1053689591;
    l_U1025[5] = 975934894;
    l_U1025[6] = 1232833631;
    return;
}

void sub_1329(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;

    uVar8 = sub_1339();
    sub_1416( uVar8, uParam0, uParam3 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    return;
}

int sub_1339()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1361() );
    }
    return 0;
}

void sub_1361()
{
    return GET_PLAYER_ID();
}

void sub_1416(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_1524()
{
    if (g_U830 == 12)
    {
        switch (l_U92)
        {
            case 0:
            if ((sub_1624()) || ((IS_PED_DEAD( sub_1339() )) || (l_U93)))
            {
                l_U92 = 1;
                sub_1118( "CR", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_2118())
            {
                l_U92 = 3;
            }
            else if ((sub_2158( 0 )) == 1)
            {
                l_U92 = 2;
            }
            break;
            case 2:
            sub_1118( "CR", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            if (NOT (IS_PED_DEAD( sub_1339() )))
            {
                l_U92 = 3;
                sub_1118( "CR", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_1118( "CR", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_1339() ))) AND (NOT (IS_PLAYER_DEAD( sub_1361() ))))
            {
                SET_PLAYER_CONTROL( sub_1361(), 0, 0 );
                SET_PED_PROOFS( sub_1339(), 0, 0, 0, 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_1339() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_1339(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            FINALE_GRENADE_EXPLODE_ON_IMPACT( 0 );
            sub_3796();
            LOAD_SCENE( -673.08000000, -720.19460000, -4.54583900 );
            LOAD_SCENE( -447.41930000, -668.31260000, -3.62771300 );
            LOAD_SCENE( 104.01870000, -537.78030000, 35.01804000 );
            LOAD_SCENE( 99.67129000, -656.41140000, 25.83919000 );
            l_U92 = 4;
            sub_1118( "CR", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_1118( "CR", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_5938( ref l_U53, sub_1339() );
            l_U91 = 0;
            l_U92 = 5;
            sub_1118( "CR", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_1118( "CR", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U89 = 3;
            l_U92 = 0;
            sub_1118( "CR", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_1624()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1339() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1339(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1361(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1361(), 1 );
            if ((IS_PED_VISIBLE( sub_1339() )) == 0)
            {
                SET_PED_VISIBLE( sub_1339(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_2118()
{
    return g_U648;
}

int sub_2158(int iParam0)
{
    iParam0 = 1;
    switch (l_U38)
    {
        case 0:
        if (NOT (sub_2219( ref l_U40 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1339() )))
            {
                l_U39 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_2329( ref l_U40, l_U39, 1, 1 );
            sub_2465( ref l_U40 );
        }
        if (sub_2585( ref l_U40 ))
        {
            sub_1118( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1339() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1361() )))
            {
                SET_PLAYER_CONTROL( sub_1361(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U38 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U38 = 2;
            }
            else
            {
                l_U38 = 3;
            }
        }
        break;
        case 2:
        sub_1118( "NS", "Player will QUIT", 0 );
        sub_3072();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1118( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_3072();
        return 1;
        break;
    }
    return 0;
}

int sub_2219(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_2329(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2465(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_2585(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_3072()
{
    sub_1118( "NS", "P_PostFailRetryCleanup", 0 );
    sub_3122( ref l_U40 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1361() )))
    {
        SET_PLAYER_CONTROL( sub_1361(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U37 = 0;
    l_U37 = l_U37;
    l_U38 = 0;
    return;
}

void sub_3122(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_3796()
{
    sub_1118( "CR", "P_CLEANUP_RUNWAY1 - START", 0 );
    ENABLE_LAST_MAN_STANDING( 1 );
    RESET_PED_MODEL_LOD_DISTANCES( 2113814688 );
    sub_3870( l_U497 );
    sub_3948( ref l_U910 );
    sub_3948( ref l_U603 );
    if (NOT (IS_PED_DEAD( sub_1339() )))
    {
        DETACH_PED( sub_1339(), 1 );
    }
    sub_4051( l_U455 );
    sub_4051( l_U463 );
    sub_4051( l_U469 );
    sub_4051( l_U474 );
    sub_4139( ref l_U525 );
    sub_4139( ref l_U531 );
    SET_ALLOW_PLAYER_REACT_TO_EXPLOSION( sub_1339(), 0, 0 );
    ENABLE_TINNITUS( 1 );
    sub_4234( l_U536, 0 );
    sub_4397( ref l_U536 );
    sub_4234( l_U537, 0 );
    sub_4397( ref l_U537 );
    sub_4234( l_U538, 0 );
    sub_4397( ref l_U538 );
    sub_4234( l_U539, 0 );
    sub_4397( ref l_U539 );
    sub_4234( l_U540, 0 );
    sub_4397( ref l_U540 );
    sub_4234( l_U541, 0 );
    sub_4397( ref l_U541 );
    sub_4234( l_U542, 0 );
    sub_4397( ref l_U542 );
    sub_4234( l_U543, 0 );
    sub_4397( ref l_U543 );
    sub_4234( l_U544, 0 );
    sub_4397( ref l_U544 );
    sub_4234( l_U94, 0 );
    sub_4397( ref l_U94 );
    sub_4234( l_U181, 0 );
    sub_4397( ref l_U181 );
    sub_4799( "S_AIR_PLANE_RS_01", ref g_U1910 );
    sub_5128( "S_AIR_PLANE_RS_01", ref g_U1910 );
    sub_4799( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
    sub_5128( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
    sub_5516();
    sub_1118( "CR", "P_CLEANUP_RUNWAY1 - END", 0 );
    return;
}

void sub_3870(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_3948(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_3870( (uParam0^)[I] );
    }
    return;
}

void sub_4051(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_4139(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_4051( (uParam0^)[I] );
    }
    return;
}

void sub_4234(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
        sub_1118( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
        sub_1118( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

void sub_4397(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
        sub_1118( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
        sub_1118( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

void sub_4799(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_4816( uParam0, uParam1 ))
    {
        iVar4 = sub_4915( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    return;
}

int sub_4816(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_4915(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

void sub_5128(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5239( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

int sub_5239(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_5516()
{
    sub_1118( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (STAT_EXISTS( "SP_VEHICLES_DESTROYED" ))
    {
        ;
    }
    sub_1118( "CCB", "Ending the Finale_Runway1 context...", 0 );
    END_CONTEXT( "Finale_Runway1" );
    return;
}

void sub_5938(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1118( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_6122( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_7199( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_7491( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_7851( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_7491( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_7851( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_7491( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_7851( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_8136( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_7851( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_8136( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_7851( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_8629( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_8790( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1339(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1118( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_6122(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_6154( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_6154(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_7199(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_7491(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_7807( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_7807(unknown uParam0)
{
    return;
}

void sub_7851(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_8136(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_7807( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_8629(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_8790(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_6154( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_8862( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_8862(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_10160()
{
    int iVar2;
    int I;

    iVar2 = l_U89;
    switch (l_U89)
    {
        case 0: break;
        case 3:
        sub_1118( "CR", "eCheckpoint = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_10367();
        sub_11068();
        sub_15581();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U89 = 4;
        sub_1118( "CR", "eCheckpoint = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 4:
        sub_1118( "CR", "eCheckpoint = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_15939();
        sub_24179();
        l_U89 = 5;
        sub_1118( "CR", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 5:
        if ((sub_25110( ref g_U1638 )) AND ((sub_24983( ref g_U1783 )) AND ((sub_24856( ref g_U1429 )) AND ((sub_24735( ref g_U1247 )) AND (sub_24615( ref g_U1030 ))))))
        {
            g_U831[12] = 1;
            if ((NOT l_U53._fU0) AND (g_U829 == 12))
            {
                sub_1118( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
                l_U89 = 1;
            }
            else
            {
                sub_1118( "AT", "eCheckpointState = CP_LOADING_UFE_GUARDS", 0 );
                l_U89 = 6;
            }
        }
        break;
        case 1:
        sub_1118( "CR", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUPS", 0 );
        g_U846[12] = 1;
        l_U91 = 0;
        if ((sub_25476( ref l_U53 )) == 0)
        {
            sub_8136( sub_1339(), 879300975, 25000, 0, 0 );
            l_U89 = 2;
            sub_1118( "CR", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U89 = 6;
            sub_1118( "CR", "eCheckpointState = CP_LOADING_UFE_GUARDS", 0 );
        }
        break;
        case 2:
        sub_1118( "CR", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYERS_WEAPONS", 0 );
        if (NOT (IS_PED_DEAD( sub_1339() )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_1339(), 0, 0 ) ))
            {
                g_U830 = 12;
                sub_25994( ref l_U53, g_U830, sub_1339(), g_U2014[12], g_U2129[12], g_U2168[12], g_U2207[12], 0 );
                l_U89 = 6;
                sub_1118( "CR", "eCheckpointState = CP_LOADING_UFE_GUARDS", 0 );
            }
        }
        break;
        case 6:
        sub_1118( "CR", "eCheckpointState = CP_LOADING_UFE_GUARDS", 0 );
        if (l_U90)
        {
            l_U951 = 1;
            l_U613 = 1;
        }
        if ((l_U951 != 4) AND (l_U951 != 0))
        {
            sub_29769();
        }
        if (l_U951 > 2)
        {
            if ((l_U613 != 4) AND (l_U613 != 0))
            {
                sub_32339();
            }
        }
        if ((l_U613 == 4) AND (l_U951 == 4))
        {
            l_U89 = 7;
            sub_1118( "CR", "eCheckpointState = CP_SPAWN_VEHICLES_AND_DASILVA", 0 );
        }
        break;
        case 7:
        if ((sub_33943() == 1) AND (sub_33099() == 1))
        {
            l_U89 = 8;
            sub_1118( "CR", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 8:
        if (g_U846[12])
        {
            if (l_U91)
            {
                if (CUTSCENE_IS_LOADED( "mid_12_fin_concat" ))
                {
                    l_U89 = 9;
                    sub_1118( "GA", "eCheckpointState = CP_HANDLE_MID_12", 0 );
                }
                else if (CUTSCENE_NAMED_IS_LOADING( "mid_12_fin_concat" ))
                {
                    sub_1118( "GA", "Waiting for cutscene MID_12_FIN to load.", 0 );
                }
                else
                {
                    sub_1118( "GA", "Requesting cutscene MID_12_FIN to load.", 0 );
                    PRE_STREAM_SEAMLESS_CUTSCENE( "mid_12_fin_concat" );
                }
            }
            else
            {
                l_U89 = 9;
                sub_1118( "CR", "eCheckpointState = CP_HANDLE_MID_12", 0 );
            }
        }
        break;
        case 9:
        if (l_U90)
        {
            sub_34996( 1, 0, 0, 1 );
            sub_42829( ref l_U95, "mid_12_fin_concat", 35179, 35298, 36003, 37656, 37817, 42621, 250, 0 );
            sub_43233( ref l_U95, g_U2014[12] );
            if (g_U830 != 12)
            {
                l_U95._fU4 = 2;
            }
            else
            {
                sub_8136( sub_1339(), 879300975, 25000, 0, 0 );
                sub_36152( 0.00000000 );
                DO_SCREEN_FADE_IN( 0 );
                sub_36884();
                l_U95._fU4 = 7;
            }
        }
        if (sub_43365( ref l_U95 ))
        {
            if (g_U830 != 12)
            {
                g_U830 = 12;
                sub_25994( ref l_U53, g_U830, sub_1339(), g_U2014[12], g_U2129[12], g_U2168[12], g_U2207[12], 1 );
            }
            sub_45374();
            l_U89 = 10;
            sub_1118( "CR", "eCheckpointState = CP_GAMEPLAY_BACK_UFE_TRUCKS", 0 );
        }
        break;
        case 10:
        if (l_U90)
        {
            sub_2465( ref l_U954 );
            sub_44955( 1, 1 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[12], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[12], 1065353216, 0 );
            ENABLE_TINNITUS( 0 );
            sub_45766();
            sub_46018( "S_AIR_PLANE_RS_01", ref g_U1910 );
            sub_46280( l_U474, "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
        }
        else if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        sub_46552();
        sub_49083( ref l_U603, -1054867456, 0, 1 );
        sub_49230();
        sub_49423();
        sub_50339();
        sub_50414();
        sub_51417();
        sub_51704();
        sub_52782();
        sub_53064();
        if (sub_53079( ref l_U615, 0 ))
        {
            sub_53949();
        }
        if ((NOT (IS_PED_DEAD( sub_1339() ))) AND (NOT (IS_PED_DEAD( l_U910[10] ))))
        {
            REGISTER_TARGET( l_U910[10], sub_1339() );
            TASK_VEHICLE_SHOOT_AT_PED( l_U910[10], sub_1339() );
        }
        if ((NOT (IS_VEHICLE_DEAD( l_U455 ))) AND (NOT (IS_PED_DEAD( sub_1339() ))))
        {
            if ((NOT l_U237) AND (sub_54379() <= 0.18000000))
            {
                START_PARTICLE_FX_LOOPED_ON_VEHICLE( "veh_exhaust_truck", l_U455, l_U231, 0.00000000, 0.00000000, 0.00000000, 10.00000000 );
                START_PARTICLE_FX_LOOPED_ON_VEHICLE( "veh_exhaust_truck", l_U455, l_U234, 0.00000000, 0.00000000, 0.00000000, 10.00000000 );
                l_U237 = 1;
                sub_1118( "CR", "Starting Particle Effects on vehicle before it blows up", 0 );
            }
        }
        if (sub_54703( ref l_U1033, sub_1339(), 0 ))
        {
            sub_38477( l_U910[15] );
            sub_38477( l_U910[16] );
            sub_38477( l_U910[20] );
            sub_38477( l_U910[10] );
            sub_1118( "CR", "Activating CAV & Support Jeep AI", 0 );
        }
        if (sub_54703( ref l_U1054, sub_1339(), 0 ))
        {
            sub_2465( ref l_U1075 );
            sub_2465( ref l_U1086 );
            sub_1118( "CR", "Global Vehicle Acceleration - Starting", 0 );
        }
        if (sub_2585( ref l_U1086 ))
        {
            l_U1096 = 1;
            sub_1118( "CR", "Global Vehicle Acceleration - Complete", 0 );
        }
        if ((NOT l_U1108) AND ((sub_55066()) AND (l_U1096)))
        {
            sub_55218();
            l_U1108 = 1;
        }
        if ((NOT l_U1109) AND (sub_2585( ref l_U1098 )))
        {
            sub_55433();
            l_U1109 = 1;
        }
        if (sub_55622())
        {
            l_U89 = 11;
        }
        break;
        case 11:
        if (l_U90)
        {
            sub_56143();
            sub_45909( ref l_U221, l_U230 );
            sub_4799( "S_AIR_PLANE_RS_01", ref g_U1910 );
            sub_5128( "S_AIR_PLANE_RS_01", ref g_U1910 );
            sub_4799( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
            sub_5128( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
        }
        if (sub_2585( ref l_U221 ))
        {
            sub_56808();
        }
        break;
        case 13:
        if (l_U90)
        {
            sub_1118( "CR", "eCheckpointState = CP_NIS_LAST_VEHICLE_EXPLODE", 0 );
            sub_4799( "S_AIR_PLANE_RS_01", ref g_U1910 );
            sub_5128( "S_AIR_PLANE_RS_01", ref g_U1910 );
            sub_4799( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
            sub_5128( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
            sub_4051( l_U474 );
            sub_53467( 1232833631, ref g_U1030 );
            CAMERA_USE_HANDY_CAM( 0, 1065353216, 0 );
            sub_57367();
            g_U861[13]._fU36 = 1;
        }
        if (sub_2585( ref l_U124 ))
        {
            START_PARTICLE_FX_NON_LOOPED_ON_VEHICLE( "Veh_Explo_Truck_S", l_U123, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1.50000000 );
        }
        if (sub_2585( ref l_U172 ))
        {
            sub_1118( "GA", "Ending bullet time during exploding car NIS.", 0 );
            DEACTIVATE_BULLET_TIME( 1, 1 );
        }
        if (sub_58051( ref l_U133, 1 ))
        {
            sub_1118( "GA", "NIS Last Exploded vehicle complete.", 0 );
            g_U846[13] = 1;
            l_U89 = 14;
            sub_1118( "CR", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 12:
        if (l_U90)
        {
            if (NOT (IS_VEHICLE_DEAD( l_U455 )))
            {
                STOP_PLAYBACK_RECORDED_VEHICLE( l_U455 );
                FREEZE_VEHICLE_POSITION( l_U455, 1 );
            }
            if (NOT (IS_VEHICLE_DEAD( l_U469 )))
            {
                STOP_PLAYBACK_RECORDED_VEHICLE( l_U469 );
                FREEZE_VEHICLE_POSITION( l_U469, 1 );
            }
            for ( I = 0; I <= (l_U525 - 1); I++ )
            {
                if (NOT (IS_VEHICLE_DEAD( l_U525[I] )))
                {
                    STOP_PLAYBACK_RECORDED_VEHICLE( l_U525[I] );
                    FREEZE_VEHICLE_POSITION( l_U525[I], 1 );
                }
            }
            for ( I = 0; I <= (l_U531 - 1); I++ )
            {
                if (NOT (IS_VEHICLE_DEAD( l_U531[I] )))
                {
                    STOP_PLAYBACK_RECORDED_VEHICLE( l_U531[I] );
                    FREEZE_VEHICLE_POSITION( l_U531[I], 1 );
                }
            }
            sub_36240( l_U463, l_U983, 2.00000000, 47150.00000000, 0 );
            sub_34996( 1, 0, 0, 1 );
            sub_56268( ref l_U984, -643.59800000, 503.71350000, -6.19582300, 10.98809000, -0.00001400, -19.61548000, 45.00000000, l_U1015 );
            sub_56477( ref l_U984 );
            sub_2465( ref l_U1016 );
        }
        if (sub_2585( ref l_U1016 ))
        {
            DO_SCREEN_FADE_OUT( 500 );
        }
        if (sub_58051( ref l_U984, 1 ))
        {
            l_U93 = 1;
        }
        FINALE_GRENADE_EXPLODE_ON_IMPACT( 0 );
        break;
        case 14:
        sub_1118( "CR", "eCheckpointState = CP_FINISHED", 0 );
        if ((g_U830 == 13) || (NOT HAS_CUTSCENE_FINISHED()))
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U89 = 0;
            sub_1118( "CR", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    sub_58860();
    sub_59242();
    if (l_U89 != iVar2)
    {
        l_U90 = 1;
    }
    else
    {
        l_U90 = 0;
    }
    return;
}

void sub_10367()
{
    sub_1118( "CR", "INITIALIZE_SCRIPT_DATA - START", 0 );
    l_U545[0] = 0;
    l_U545[1] = 0;
    l_U545[2] = 0;
    l_U545[3] = 0;
    l_U550[0] = 0;
    l_U550[1] = 0;
    l_U550[2] = 0;
    l_U550[3] = 0;
    l_U550[4] = 0;
    l_U556[0] = 0;
    l_U556[1] = 0;
    l_U556[2] = 0;
    l_U556[3] = 0;
    l_U561 = 0;
    l_U562 = 0;
    l_U524 = 0.70000000;
    l_U938[0] = {-613.46890000, -430.63040000, -6.73923200};
    l_U938[1] = {-625.44200000, -431.33230000, -6.73923200};
    l_U938[2] = {-612.28060000, -331.85210000, -6.73923200};
    l_U938[3] = {-624.91500000, -333.15200000, -6.73923200};
    l_U613 = 0;
    l_U614 = 0;
    l_U951 = 0;
    l_U952 = 0;
    sub_2329( ref l_U954, l_U953, 1, 0 );
    sub_2329( ref l_U963, 2000, 1, 0 );
    l_U1730 = 0;
    l_U972 = 0;
    sub_2329( ref l_U973, l_U982, 1, 0 );
    l_U483 = 0;
    sub_2329( ref l_U1075, l_U1084, 1, 0 );
    sub_2329( ref l_U1086, l_U1095, 1, 0 );
    sub_2329( ref l_U1098, l_U1107, 1, 0 );
    l_U1096 = 0;
    l_U1108 = 0;
    l_U1109 = 0;
    sub_2329( ref l_U124, 1100, 1, 1 );
    l_U354 = 0;
    l_U1340 = 0;
    l_U1341 = 0;
    l_U1342 = 0;
    l_U1343 = 0;
    l_U1344 = 0;
    l_U1345 = 0;
    l_U1346 = 0;
    l_U1347 = 0;
    l_U1348 = 0;
    l_U1349 = 0;
    l_U1350 = 0;
    l_U1351 = 0;
    l_U1352 = 0;
    l_U1353 = 0;
    l_U1354 = 0;
    l_U1355 = 0;
    l_U1356 = 0;
    l_U1357 = 0;
    l_U1358 = 0;
    l_U1359 = 0;
    l_U1360 = 0;
    l_U1361 = 0;
    l_U1362 = 0;
    l_U1658 = 0;
    sub_2329( ref l_U1016, l_U1015 - 500, 1, 0 );
    l_U93 = 0;
    l_U237 = 0;
    sub_1118( "CR", "INITIALIZE_SCRIPT_DATA - END", 0 );
    return;
}

void sub_11068()
{
    sub_1118( "CR", "LOAD_ASSETS - START", 0 );
    sub_11145( ref l_U484, 1.00000000, 1.00000000, 1.00000000, 0.00000000, 413457302, 26, 6, 0, 0, 0 );
    sub_11145( ref l_U636[0], -889.52000000, -789.66000000, -5.50000000, 0.00000000, 270627203, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[1], -885.25000000, -789.66000000, -5.50000000, 0.00000000, -1964312659, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[2], -880.77000000, -789.66000000, -5.50000000, 0.00000000, 565778318, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[3], -889.67000000, -796.19000000, -5.50000000, 0.00000000, -956334494, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[4], -884.97000000, -796.19000000, -5.50000000, 0.00000000, -2142812815, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[5], -880.07000000, -796.19000000, -5.50000000, 0.00000000, 300568837, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[6], -874.67000000, -796.19000000, -5.50000000, 0.00000000, 270627203, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[7], -870.67000000, -796.19000000, -5.50000000, 0.00000000, -1964312659, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[8], -864.77000000, -789.66000000, -5.50000000, 0.00000000, 565778318, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[9], -860.67000000, -796.19000000, -5.50000000, 0.00000000, -956334494, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[10], -813.47000000, -501.30000000, 0.00000000, 0.00000000, -2142812815, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[11], -770.85000000, -530.35000000, -6.74000000, 0.00000000, 270627203, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[12], -468.61000000, -503.70000000, -6.76000000, 0.00000000, -1964312659, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[13], -770.85000000, -530.35000000, -6.74000000, 0.00000000, 565778318, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[14], -468.61000000, -503.70000000, -6.76000000, 0.00000000, -956334494, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[15], -465.61000000, -505.70000000, -6.76000000, 0.00000000, -2142812815, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[16], -461.61000000, -507.70000000, -6.76000000, 0.00000000, 300568837, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[17], -461.61000000, -509.70000000, -6.76000000, 0.00000000, 270627203, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[18], -461.61000000, -511.70000000, -6.76000000, 0.00000000, -1964312659, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[19], -461.61000000, -513.70000000, -6.76000000, 0.00000000, 565778318, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U636[20], -461.61000000, -515.70000000, -6.76000000, 0.00000000, -956334494, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U563[0], -712.54600000, -722.15860000, -6.74795100, 0.00000000, -2142812815, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U563[1], -707.38580000, -726.10050000, -6.74795100, 0.00000000, 300568837, 7, 3, 2, 0, 0 );
    sub_11145( ref l_U563[2], -677.34510000, -736.78360000, -6.74795100, 0.00000000, 270627203, 7, 3, 2, 0, 0 );
    sub_12421( ref l_U248[0], "tb_TM2_R1_Dialogue[0] - Argggg!", -707.95920000, -700.77200000, -6.73901500, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U248[1], "tb_TM2_R1_Dialogue[1] - What are you doing?", -613.58180000, -599.83410000, -6.73901500, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U248[2], "tb_TM2_R1_Dialogue[2] - Damn it!", -626.74350000, -481.65230000, -6.73901500, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U248[3], "tb_TM2_R1_Dialogue[3] - You trying to kill him or me?", -618.43500000, -433.19900000, -6.73923200, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U248[4], "tb_TM2_R1_Dialogue[4] - Get me close!", -607.43510000, -340.77940000, -6.73923200, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U615, "tb_TM2_MaxIsCloseToOnfootPeds", -729.39940000, -701.89110000, -6.74778600, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U1054, "tb_TM2_SpeedUpCavSection", -619.08000000, -288.53000000, -6.74000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 17.00000000, 1 );
    sub_12421( ref l_U1033, "tb_TM2_ActivateCAV_AI", -618.06000000, -429.61000000, -6.74000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U1659[0], "tb_TM2_CleanupRoadblock[0]", -610.07000000, -384.07000000, -6.74000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 17.00000000, 1 );
    sub_12421( ref l_U1659[1], "tb_TM2_CleanupRoadblock[1]", -614.24000000, -308.17000000, -6.74000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 17.00000000, 1 );
    sub_12421( ref l_U1702, "tb_TM2_CleanupOnfootPeds", -668.92000000, -693.55000000, -6.74000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 17.00000000, 1 );
    sub_12421( ref l_U1363[0], "tb_dialogue_runway[0] - Guys on foot spawned - SAIR_DSUFE1", -814.06000000, -705.87000000, -6.50000000, 5.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U1363[1], "tb_dialogue_runway[1] - shoot them or something - SAIR_DSSRT", -773.38000000, -699.55000000, -6.50000000, 5.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U1363[2], "tb_dialogue_runway[2] - Shoooting the car? - SAIR_DSTDMG", -707.95920000, -700.77200000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U1363[3], "tb_dialogue_runway[3] - 4x4's - SAIR_DSUFE2", -678.80000000, -696.23000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U1363[4], "tb_dialogue_runway[4] - Take out the guys - SAIR_DSTGO", -644.40000000, -676.49000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U1363[5], "tb_dialogue_runway[5] - Driving Noises - SAIR_DSMDN", -628.50000000, -653.26000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U1363[6], "tb_dialogue_runway[6] - Take out the guys - SAIR_DSTGO", -630.41000000, -475.65000000, -6.74000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U1363[7], "tb_dialogue_runway[7] - Max/DaSilva 2 line convo - SAIR_DSMXV7A", -615.96000000, -581.20000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U1363[8], "tb_dialogue_runway[8] - Oh Noes, a roadblock - SAIR_DSRBLK", -629.68000000, -489.43000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U1363[9], "tb_dialogue_runway[9] - Oh look! An APC! - SAIR_DSTABT", -609.77000000, -379.25000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U1363[10], "tb_dialogue_runway[10] - Take out teh guys - SAIR_DSSFT", -618.19000000, -291.73000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U1363[11], "tb_dialogue_runway[11] - Driving Noises - SAIR_DSMDN", -625.53000000, -98.14000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U1363[12], "tb_dialogue_runway[12]", -620.69000000, -156.30000000, -6.50000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12421( ref l_U1363[13], "tb_dialogue_runway[13]", -624.89000000, -247.80000000, -6.74000000, 15.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15062( ref l_U402, 7, l_U451, 10, -1, l_U452, 0, 0 );
    sub_1118( "CR", "LOAD_ASSETS - END", 0 );
    return;
}

void sub_11145(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_12421(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_15062(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (iParam0->_fU168 == 0)
    {
        sub_15090( iParam0, uParam1 );
        iParam0->_fU192 = uParam1;
        iParam0->_fU36 = uParam2;
        iParam0->_fU148 = uParam3;
        iParam0->_fU152 = uParam4;
        iParam0->_fU156 = uParam5;
        iParam0->_fU160 = uParam7;
        iParam0->_fU176 = uParam6;
    }
    sub_3122( iParam0 + 40 );
    sub_3122( iParam0 + 76 );
    sub_3122( iParam0 + 112 );
    iParam0->_fU172 = iParam0->_fU176;
    iParam0->_fU164 = 0;
    iParam0->_fU168 = 1;
    iParam0->_fU184 = 0;
    iParam0->_fU188 = 0;
    return;
}

void sub_15090(int iParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case 1:
        StrCopy( ref iParam0->_fU4, "SMALL_EXPLOSION_SHAKE", 32 );
        break;
        case 2:
        StrCopy( ref iParam0->_fU4, "MEDIUM_EXPLOSION_SHAKE", 32 );
        break;
        case 3:
        StrCopy( ref iParam0->_fU4, "LARGE_EXPLOSION_SHAKE", 32 );
        break;
        case 4:
        StrCopy( ref iParam0->_fU4, "HAND_SHAKE", 32 );
        break;
        case 5:
        StrCopy( ref iParam0->_fU4, "JOLT_SHAKE", 32 );
        break;
        case 6:
        StrCopy( ref iParam0->_fU4, "VIBRATE_SHAKE", 32 );
        break;
        case 7:
        StrCopy( ref iParam0->_fU4, "WOBBLY_SHAKE", 32 );
        break;
    }
    iParam0->_fU0 = iParam0->_fU192;
    return;
}

void sub_15581()
{
    sub_1118( "SA", "P_R1_SETUP_HEALTH_TIMERS start", 0 );
    l_U355[0]._fU36 = 5000;
    l_U355[0]._fU40 = 0.00000000;
    l_U355[1]._fU36 = 15000;
    l_U355[1]._fU40 = 0.10000000;
    l_U355[2]._fU36 = 30000;
    l_U355[2]._fU40 = 0.25000000;
    l_U355[3]._fU36 = 22500;
    l_U355[3]._fU40 = 0.65000000;
    sub_1118( "SA", "P_R1_SETUP_HEALTH_TIMERS end", 0 );
    return;
}

void sub_15939()
{
    sub_1118( "CR", "P_REQUEST_RUNWAY1_PERSISTENT_ASSETS - START", 0 );
    if ((g_U829 == 12) || (NOT l_U91))
    {
        sub_16034( 2038070575, ref g_U1030 );
    }
    sub_17388( ref l_U1025, ref g_U1030 );
    sub_17456( 879300975, ref g_U1247 );
    sub_17456( 1478009203, ref g_U1247 );
    sub_17456( 57534114, ref g_U1247 );
    sub_18446( "level_s_fin_cp_10", ref g_U1429 );
    sub_18446( "w_sp_grnlch_aa_h", ref g_U1429 );
    sub_18446( "veh@std", ref g_U1429 );
    sub_18446( "veh@truck", ref g_U1429 );
    sub_18446( "veh@helicopter", ref g_U1429 );
    sub_18446( "LEVEL_S_FIN_CP_11", ref g_U1429 );
    sub_18446( "LEVEL_S_FIN_CP_12", ref g_U1429 );
    sub_18446( "LEVEL_S_FAV2_CP_04", ref g_U1429 );
    sub_18446( "VEH@CAR_JASRE", ref g_U1429 );
    sub_19675( "LEVEL/S_AIR/VIG_13_FIN_MAX_CAR_SHOOT.act", ref g_U1783 );
    sub_19675( "Vehicle/Vehicle_Car.act", ref g_U1783 );
    sub_19675( "LEVEL/S_AIR/VIG_09_ChopperShooters", ref g_U1783 );
    sub_19675( "LEVEL/S_AIR/VIG_08_FIN_JEEP", ref g_U1783 );
    sub_19675( "VEHICLE/vehicle_heli", ref g_U1783 );
    sub_20821( l_U468, ref g_U1638 );
    sub_20821( l_U983, ref g_U1638 );
    sub_20821( l_U498, ref g_U1638 );
    sub_20821( l_U499, ref g_U1638 );
    sub_20821( l_U500, ref g_U1638 );
    sub_20821( l_U501, ref g_U1638 );
    sub_20821( l_U502, ref g_U1638 );
    sub_20821( l_U503, ref g_U1638 );
    sub_20821( l_U508, ref g_U1638 );
    sub_20821( l_U509, ref g_U1638 );
    sub_20821( l_U504, ref g_U1638 );
    sub_20821( l_U505, ref g_U1638 );
    sub_20821( l_U506, ref g_U1638 );
    sub_20821( l_U507, ref g_U1638 );
    sub_22001( "S_AIR_PLANE_RS_01", ref g_U1910 );
    sub_22001( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
    sub_23129( "SCRIPT_MISSION\S_AIR_RUNWAY_01A", ref g_U1950 );
    sub_1118( "CR", "P_REQUEST_RUNWAY1_PERSISTENT_ASSETS - END", 0 );
    return;
}

void sub_16034(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_16069( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_16200( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_16069(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_16200( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_16200( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_16200( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_16848( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_16200( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_16200( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16200(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16220( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_16220(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_16848(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_17388(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_16034( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_17456(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_17477( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_17609( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_17477(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_17609( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_17609( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_17609( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_16848( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_17609( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_17609( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_17609(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16220( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_18446(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_18467( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_18604( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_18467(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_18604( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_18604( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_18604( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_16848( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_18604( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_18604( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18604(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16220( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_19675(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_19696( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_19835( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_19696(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being requested!!!", 0 );
                sub_19835( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is already loading!!!", 0 );
                sub_19835( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_ACTION_TREE_LOADED( uParam0 ))
                {
                    sub_19835( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ACTION_TREE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_16848( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ACTION_TREE asset is currently being removed!!!", 0 );
                sub_19835( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_ACTION_TREE_LOADED( uParam0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_19835( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ACTION_TREE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19835(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16220( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ACTION_TREE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_20821(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_20842( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_20980( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_20842(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                sub_20980( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                sub_20980( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    sub_20980( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_16848( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                sub_20980( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_20980( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20980(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16220( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_22001(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_22022( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_22163( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_22022(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                sub_22163( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                sub_22163( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        sub_22163( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                        sub_16848( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    sub_22163( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                sub_22163( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                sub_22163( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22163(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16220( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_23129(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_23150( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_23288( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_23150(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_23288( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_23288( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_23288( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_16848( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_23288( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_23288( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_23288(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16220( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_24179()
{
    sub_1118( "AT", "P_REQUEST_RUNWAY1_NONPERSISTENT_ASSETS start", 0 );
    if ((l_U91) AND (g_U829 != 12))
    {
        sub_24286( "mid_12_fin_concat", 0 );
    }
    return;
}

void sub_24286(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_24615(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_24735(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_24856(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_24983(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25110(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25476(unknown uParam0)
{
    sub_1118( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_5938( uParam0, sub_1339() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_25994(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1118( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1118( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_8790( iParam1 );
        sub_26253( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_26704( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_26704( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26936( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_26704( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26936( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_26936( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_26704( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26936( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_26936( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_26936( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_26704( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26936( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_26936( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_26936( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_26936( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_28494( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1118( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_26253(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_6154( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1118( "TEH", "Ending context", 0 );
        sub_1118( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_26704(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_26936(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_28494(int iParam0)
{
    sub_7807( "CHECKPOINT DATA" );
    sub_28533( iParam0->_fU4 );
    sub_28556( iParam0->_fU16 );
    sub_28556( iParam0->_fU20 );
    sub_28556( iParam0->_fU24 );
    sub_28599( iParam0->_fU28 );
    sub_28599( iParam0->_fU56 );
    sub_28599( iParam0->_fU60 );
    sub_28599( iParam0->_fU64 );
    sub_28599( iParam0->_fU68 );
    sub_28599( iParam0->_fU72 );
    sub_28599( iParam0->_fU76 );
    sub_28599( iParam0->_fU80 );
    sub_28599( iParam0->_fU84 );
    sub_28599( iParam0->_fU88 );
    sub_28599( iParam0->_fU92 );
    sub_28556( iParam0->_fU32 );
    sub_28599( iParam0->_fU36 );
    sub_28599( iParam0->_fU40 );
    sub_28599( iParam0->_fU44 );
    sub_28556( iParam0->_fU136 );
    sub_28804( iParam0->_fU140 );
    sub_28599( iParam0->_fU52 );
    sub_7807( "---nRightHolsterAttachmentEnabled: " );
    sub_28599( iParam0->_fU96 );
    sub_7807( "---nRightHolsterAttachmentToggled: " );
    sub_28599( iParam0->_fU100 );
    sub_7807( "---nLeftHolsterAttachmentEnabled: " );
    sub_28599( iParam0->_fU104 );
    sub_7807( "---nLeftHolsterAttachmentToggled: " );
    sub_28599( iParam0->_fU108 );
    sub_7807( "---nRifleHolsterAttachmentEnabled: " );
    sub_28599( iParam0->_fU112 );
    sub_7807( "---nRifleHolsterAttachmentToggled: " );
    sub_28599( iParam0->_fU116 );
    sub_7807( "---nRightHandAttachmentEnabled: " );
    sub_28599( iParam0->_fU120 );
    sub_7807( "---nRightHandAttachmentToggled: " );
    sub_28599( iParam0->_fU124 );
    sub_7807( "---nLeftHandAttachmentEnabled: " );
    sub_28599( iParam0->_fU128 );
    sub_7807( "---nLeftHandAttachmentToggled: " );
    sub_28599( iParam0->_fU132 );
    sub_28599( l_U1 );
    sub_28599( 144 );
    return;
}

void sub_28533(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_28556(unknown uParam0)
{
    return;
}

void sub_28599(unknown uParam0)
{
    return;
}

void sub_28804(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_29769()
{
    switch (l_U951)
    {
        case 1:
        sub_1118( "GA", "e_TM2_UFE_PedSpawn = ENTITY_STATE_INIT", 0 );
        sub_29877( ref l_U932, 1056964608, 0 );
        l_U952 = 0;
        l_U951 = 2;
        sub_1118( "GA", "e_TM2_UFE_PedSpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U910[l_U952] = sub_30133( ref l_U636[l_U952] );
        if ((l_U952 != 17) AND ((l_U952 != 15) AND ((l_U952 != 14) AND ((l_U952 != 13) AND ((l_U952 != 12) AND ((l_U952 != 11) AND ((l_U952 != 8) AND ((l_U952 != 5) AND ((l_U952 != 2) AND (l_U952 != 0))))))))))
        {
            sub_31056( l_U910[l_U952], ref l_U932 );
        }
        if (NOT (IS_PED_DEAD( l_U910[l_U952] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U910[l_U952], 1 );
            SET_PED_AI_TEMPLATE( l_U910[l_U952], "AIT_EXPERT" );
            SET_PED_ALERTNESS( l_U910[l_U952], 3 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U910[l_U952], 1 );
            SET_PED_PROOFS( l_U910[l_U952], 1, 1, 0, 1, 1 );
            SET_PED_GORE( l_U910[l_U952], 0 );
            SET_PED_FORCE_USE_RAGDOLL( l_U910[l_U952], 0, 1 );
            if (NOT (IS_PED_DEAD( sub_1339() )))
            {
                SET_PED_RELATIONSHIP( sub_1339(), 1, 2 );
                SET_PED_RELATIONSHIP_GROUP( l_U910[l_U952], 2 );
                SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( sub_1339(), 1, 2 );
            }
        }
        if (l_U952 == 17)
        {
            if (NOT (IS_PED_DEAD( l_U910[l_U952] )))
            {
                SET_PED_PROOFS( l_U910[l_U952], 1, 1, 1, 1, 1 );
            }
        }
        l_U952++;
        if (l_U952 >= 21)
        {
            l_U951 = 3;
            sub_1118( "GA", "e_TM2_UFE_PedSpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_31747( ref l_U910, "pi_TM2_UFE_Ped" );
        sub_8136( l_U910[1], 1478009203, 25000, 0, 0 );
        sub_8136( l_U910[3], 57534114, 25000, 0, 0 );
        sub_8136( l_U910[4], 1478009203, 25000, 0, 0 );
        sub_8136( l_U910[6], 57534114, 25000, 0, 0 );
        sub_8136( l_U910[7], 1478009203, 25000, 0, 0 );
        sub_8136( l_U910[9], 57534114, 25000, 0, 0 );
        sub_8136( l_U910[16], 1478009203, 25000, 0, 0 );
        sub_8136( l_U910[18], 57534114, 25000, 0, 0 );
        sub_8136( l_U910[19], 1478009203, 25000, 0, 0 );
        sub_8136( l_U910[20], 57534114, 25000, 0, 0 );
        sub_32085( ref l_U910 );
        l_U951 = 4;
        sub_1118( "GA", "e_TM2_UFE_PedSpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_29877(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_30133(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_30303( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_30772( iParam0->_fU40 );
    sub_30852( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_30303(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_7807( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_30772(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_30852(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_31056(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_7807( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_29877( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_29877( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_31747(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_32085(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_32116( (uParam0^)[I] );
    }
    return;
}

void sub_32116(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_32339()
{
    switch (l_U613)
    {
        case 1:
        sub_1118( "CR", "e_TM2_UFE_OnfootPedSpawn = ENTITY_STATE_INIT", 0 );
        sub_29877( ref l_U607, 1056964608, 0 );
        l_U614 = 0;
        l_U613 = 2;
        sub_1118( "CR", "e_TM2_UFE_OnfootPedSpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U603[l_U614] = sub_30133( ref l_U563[l_U614] );
        sub_31056( l_U603[l_U614], ref l_U607 );
        if (NOT (IS_PED_DEAD( l_U603[l_U614] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U603[l_U614], 1 );
            SET_PED_AI_TEMPLATE( l_U603[l_U614], "AIT_EXPERT" );
            SET_PED_ALERTNESS( l_U603[l_U614], 3 );
            SET_PED_COMBAT_ATTRIBUTES( l_U603[l_U614], 256, 0 );
        }
        l_U614++;
        if (l_U614 >= 3)
        {
            l_U613 = 3;
            sub_1118( "GA", "e_TM2_UFE_OnfootPedSpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_31747( ref l_U603, "pi_TM2_UFE_OnFootPed" );
        sub_8136( l_U603[0], 1478009203, 25000, 0, 0 );
        sub_8136( l_U603[1], 57534114, 25000, 0, 0 );
        sub_8136( l_U603[2], 1478009203, 25000, 0, 0 );
        sub_32085( ref l_U603 );
        l_U613 = 4;
        sub_1118( "GA", "e_TM2_UFE_OnfootPedSpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

int sub_33099()
{
    sub_1118( "CR", "F_SETUP_VEHICLES - START", 0 );
    l_U455 = sub_33166( 1979959192, l_U456, l_U459, 0, 0, 0 );
    if (DOES_VEHICLE_EXIST( l_U455 ))
    {
        SET_VEHICLE_CAN_BE_DAMAGED( l_U455, 0 );
        SET_VEHICLE_EXTRA( l_U455, 1, 1 );
        SET_VEHICLE_COLOUR_COMBINATION( l_U455, 0 );
    }
    l_U463 = sub_33166( 877881452, l_U464, l_U467, 0, 0, 0 );
    if (DOES_VEHICLE_EXIST( l_U463 ))
    {
        SET_VEHICLE_CAN_BE_DAMAGED( l_U463, 0 );
        SET_VEHICLE_EXTRA( l_U463, 1, 0 );
        SET_VEHICLE_EXTRA( l_U463, 2, 0 );
        SET_VEHICLE_COLOUR_COMBINATION( l_U463, 0 );
    }
    l_U469 = sub_33166( 975934894, l_U470, l_U473, 0, 0, 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U469 )))
    {
        SET_VEHICLE_ENGINE_ON( l_U469, 1, 1 );
        SET_VEHICLE_ONLY_DAMAGED_BY_PLAYER( l_U469, 1 );
        SET_VEHICLE_FIXED_WEAPON_ACCURACY( l_U469, 0.75000000, 0 );
        SET_VEHICLE_FIXED_WEAPON_DAMAGE( l_U469, 30, 0 );
        SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_MODE( l_U469, 0, 0 );
        SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_SET( l_U469, 0, GET_HASH_KEY( "FIRING_PATTERN_CAV_STEADY_SINGLE" ), 0, 0, 0, 0, 0, 0, 0, 0, 0 );
        SET_VEHICLE_ONLY_EXPLODES_WHEN_HIT_BY_MULTIPLE_EXPLOSIONS( l_U469, 1, 3 );
    }
    l_U474 = sub_33166( 1232833631, l_U475, l_U478, 0, 0, 0 );
    if ((NOT (IS_VEHICLE_DEAD( l_U474 ))) AND (DOES_VEHICLE_EXIST( l_U474 )))
    {
        SET_VEHICLE_ENGINE_ON( l_U474, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( l_U474 );
        SET_VEHICLE_DOOR_OPEN( l_U474, 2 );
        SET_VEHICLE_DOOR_OPEN( l_U474, 3 );
        SET_VEHICLE_ONLY_EXPLODES_WHEN_HIT_BY_MULTIPLE_EXPLOSIONS( l_U474, 1, 1 );
        SET_VEHICLE_REACT_TO_EXPLOSION( l_U474, 0 );
        SET_VEHICLE_CAN_BE_DAMAGED( l_U474, 0 );
    }
    sub_1118( "CR", "F_SETUP_VEHICLES - END", 0 );
    return 1;
}

void sub_33166(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_30303( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

int sub_33943()
{
    sub_1118( "GA", "F_TM2_CREATE_DASILVA start", 0 );
    l_U497 = sub_34005( ref l_U484, l_U455, -1, 0, 0 );
    SET_PED_PROOFS( l_U497, 1, 1, 1, 1, 1 );
    SET_PED_GORE( l_U497, 0 );
    sub_1118( "GA", "F_TM2_CREATE_DASILVA end", 0 );
    return 1;
}

void sub_34005(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4)
{
    if ((HAS_MODEL_LOADED( iParam0->_fU16 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_30303( iParam0->_fU16, 1 );
    }
    if (((IS_VEHICLE_DEAD( uParam1 )) == 0) AND ((DOES_VEHICLE_EXIST( uParam1 )) == 1))
    {
        iParam0->_fU40 = CREATE_PED_INSIDE_VEHICLE( uParam1, iParam0->_fU24, iParam0->_fU16, uParam2, uParam4, iParam0->_fU48 );
    }
    else
    {
        SCRIPT_ASSERT( "The vehicle your trying to create a ped inside of is not valid!!!", 0 );
    }
    if (iParam3 == 1)
    {
        while ((DOES_PED_EXIST( iParam0->_fU40 )) == 0)
        {
            WAIT( 0 );
        }
    }
    sub_30772( iParam0->_fU40 );
    sub_30852( iParam0->_fU40 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        iParam0->_fU44 = 1;
    }
    return iParam0->_fU40;
}

void sub_34996(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1339() )))
        {
            SET_PLAYER_CONTROL( sub_1361(), 0, uParam2 );
            SET_PED_DUCKING( sub_1339(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1339() );
            }
            SET_PED_INVINCIBLE( sub_1339(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

int sub_35179()
{
    sub_1118( "CR", "F_MID_12_FIN_PreCutsceneSetup - Start", 0 );
    sub_1118( "CR", "F_MID_12_FIN_PreCutsceneSetup - End", 0 );
    return 1;
}

void sub_35298()
{
    unknown uVar2;
    unknown uVar3;

    sub_1118( "CR", "P_MID_12_FIN_CutsceneRegistration - Start", 0 );
    if (NOT (IS_PED_DEAD( sub_1339() )))
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1339(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_Glk18_Aa_H", 0 );
        }
        sub_35454( sub_1339(), 879300975, 200, 1, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1339(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar3, "W_SP_GrnLch_Aa_H", 0 );
            CUTSCENE_REGISTER_PED_WEAPON_HAND( sub_1339(), uVar3, 0 );
        }
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_1339(), "/Global/VIG_13_FIN_MAX_CAR_SHOOT/VIG_13_FIN_BLEND_IN_ROOT" );
    }
    if (NOT (IS_PED_DEAD( l_U497 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U497, "Wlsn_Spp_NOJ", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( l_U463 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U463, "plane_jet", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( l_U455 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U455, "car_detective", 0 );
    }
    sub_1118( "CR", "P_MID_12_FIN_CutsceneRegistration - End", 0 );
    return;
}

void sub_35454(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (bParam4)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                sub_35602( "MAL_GivePedWeapon waiting for weapon to exist" );
            }
        }
        return Result;
    }
    return nil;
}

void sub_35602(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_36003()
{
    if (l_U95._fU52)
    {
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        sub_36050( 0, 0, 0, -859915232, -859915232, 0 );
        sub_36152( 0.00000000 );
        DO_SCREEN_FADE_IN( 0 );
        sub_36884();
        sub_16034( 2038070575, ref g_U1030 );
    }
    if (NOT l_U1658)
    {
        if (GET_CUTSCENE_TIME_MS() > 6790)
        {
            sub_1118( "MF", "Music Cue: 10.2", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_6", "FINALE_01_6", 1.00000000, 12000, 8000, -1082130432, 0 );
            l_U1658 = 1;
        }
    }
    return;
}

void sub_36050(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_36152(unknown uParam0)
{
    sub_1118( "GA", "P_TM2_START_UFE_FIGHT_VEHICLE_RECORDINGS start", 0 );
    sub_36240( l_U455, l_U498, uParam0, l_U511, 0 );
    sub_36240( l_U525[0], l_U499, uParam0, l_U512, 0 );
    sub_36240( l_U525[1], l_U500, uParam0, l_U513, 0 );
    sub_36240( l_U525[2], l_U501, uParam0, l_U514, 0 );
    sub_36240( l_U525[3], l_U502, uParam0, l_U515, 0 );
    sub_36240( l_U525[4], l_U503, uParam0, l_U516, 0 );
    sub_36240( l_U469, l_U508, uParam0, l_U517, 0 );
    sub_36240( l_U474, l_U509, uParam0, l_U518, 0 );
    sub_36240( l_U531[0], l_U504, uParam0, l_U519, 0 );
    sub_36240( l_U531[1], l_U505, uParam0, l_U520, 0 );
    sub_36240( l_U531[2], l_U506, uParam0, l_U521, 0 );
    sub_36240( l_U531[3], l_U507, uParam0, l_U522, 0 );
    sub_1118( "GA", "P_TM2_START_UFE_FIGHT_VEHICLE_RECORDINGS end", 0 );
    return;
}

void sub_36240(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3, boolean bParam4)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
    }
    sub_36291( uParam1, 1 );
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
        SET_PLAYBACK_SPEED( uParam0, uParam2 );
        if (fParam3 > 0.00000000)
        {
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, fParam3 );
        }
    }
    if (bParam4)
    {
        while ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
        {
            sub_7807( "Waiting for vehicle to start playing recorded path." );
            WAIT( 0 );
        }
    }
    return;
}

void sub_36291(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_36884()
{
    vector[9] vVar2;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    int I;

    sub_1118( "GA", "P_TM2_CREATE_UFE_JEEPS start", 0 );
    array(ref vVar2, 9);
    vVar2[0] = {-888.95000000, -783.48000000, -5.50000000};
    vVar2[1] = {-885.95000000, -783.48000000, -5.50000000};
    vVar2[2] = {-878.95000000, -783.48000000, -5.50000000};
    vVar2[3] = {-873.95000000, -783.48000000, -5.50000000};
    vVar2[4] = {-878.95000000, -783.48000000, -5.50000000};
    vVar2[5] = {-873.95000000, -783.48000000, -5.50000000};
    vVar2[6] = {-878.95000000, -783.48000000, -5.50000000};
    vVar2[7] = {-873.95000000, -783.48000000, -5.50000000};
    vVar2[8] = {-873.95000000, -783.48000000, -5.50000000};
    for ( I = 0; I <= (l_U525 - 1); I++ )
    {
        l_U525[I] = sub_33166( -1053689591, vVar2[I], 0.00000000, 0, 0, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U525[I] )))
        {
            SET_VEHICLE_ENGINE_ON( l_U525[I], 1, 1 );
            SET_VEHICLE_EXTRA( l_U525[I], 1, 0 );
            SET_VEHICLE_EXTRA( l_U525[I], 2, 0 );
            SET_VEHICLE_EXTRA( l_U525[I], 3, 0 );
            SET_VEHICLE_EXTRA( l_U525[I], 4, 0 );
            SET_VEHICLE_EXTRA( l_U525[I], 5, 0 );
            SET_VEHICLE_EXTRA( l_U525[I], 6, 0 );
            SET_VEHICLE_EXTRA( l_U525[I], 7, 1 );
            SET_VEHICLE_EXTRA( l_U525[I], 8, 1 );
            SET_VEHICLE_COLOUR_COMBINATION( l_U525[I], 1 );
            SET_VEHICLE_ONLY_DAMAGED_BY_PLAYER( l_U525[I], 1 );
        }
    }
    sub_1118( "GA", "P_TM2_CREATE_UFE_JEEPS end", 0 );
    return;
}

int sub_37656()
{
    sub_1118( "CR", "F_MID_12_FIN_PostCutscene - Start", 0 );
    if ((NOT (IS_VEHICLE_DEAD( l_U455 ))) AND (NOT (IS_PED_DEAD( l_U497 ))))
    {
        SET_PED_INTO_VEHICLE( l_U497, l_U455, -1 );
    }
    sub_1118( "CR", "F_MID_12_FIN_PostCutscene - End", 0 );
    return 1;
}

void sub_37817()
{
    sub_1118( "CR", "P_MID_12_FIN_PrepareBlendOut - End", 0 );
    if (IS_SCREEN_FADED_OUT())
    {
        DO_SCREEN_FADE_IN( 0 );
    }
    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_1339(), 0 ) ))
    {
        REMOVE_WEAPON_FROM_PED( sub_1339(), GET_WEAPON_TYPE( GET_WEAPON_FROM_HOLSTER( sub_1339(), 0 ) ) );
    }
    if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_1339(), 1 ) ))
    {
        REMOVE_WEAPON_FROM_PED( sub_1339(), GET_WEAPON_TYPE( GET_WEAPON_FROM_HOLSTER( sub_1339(), 1 ) ) );
    }
    sub_4051( l_U463 );
    sub_38019();
    sub_38387();
    sub_41394();
    sub_41916();
    CAMERA_PLAY_ANIMATED_ATTACHED_VEHICLE_RELATIVE( "LEVEL_S_FIN_CP_11", "B_OUT_MID_12_FIN_CAM", l_U455, 0, 0 );
    sub_42375( ref l_U402 );
    CAMERA_USE_HANDY_CAM( 1, l_U401, 0 );
    if (NOT l_U1658)
    {
        sub_1118( "MF", "Music Cue: 11", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "FINALE_SONG_01", "FINALE_01_6", "FINALE_01_6", 1.00000000, 0, 0, -1082130432, 0 );
        l_U1658 = 1;
    }
    sub_1118( "CR", "P_MID_12_FIN_PrepareBlendOut - End", 0 );
    return;
}

void sub_38019()
{
    vector[9] vVar2;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    int I;

    sub_1118( "CR", "P_TM2_CREATE_UFE_SEDANS start", 0 );
    array(ref vVar2, 9);
    vVar2[0] = {-888.95000000, -783.48000000, -5.50000000};
    vVar2[1] = {-885.95000000, -783.48000000, -5.50000000};
    vVar2[2] = {-878.95000000, -783.48000000, -5.50000000};
    vVar2[3] = {-873.95000000, -783.48000000, -5.50000000};
    for ( I = 0; I <= (l_U531 - 1); I++ )
    {
        l_U531[I] = sub_33166( 2038070575, vVar2[I], 0.00000000, 0, 0, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U531[I] )))
        {
            SET_VEHICLE_ENGINE_ON( l_U531[I], 1, 1 );
            SET_VEHICLE_EXTRA( l_U531[I], 2, 1 );
            SET_VEHICLE_ONLY_DAMAGED_BY_PLAYER( l_U531[I], 1 );
            SET_VEHICLE_SIREN( l_U531[I], 1 );
        }
    }
    sub_1118( "CR", "P_TM2_CREATE_UFE_SEDANS end", 0 );
    return;
}

void sub_38387()
{
    vector vVar2;
    vector vVar5;
    vector vVar8;
    vector vVar11;
    int I;

    sub_1118( "GA", "P_TM2_SET_UFE_IN_VEHICLES start", 0 );
    sub_38446( ref l_U910 );
    sub_38446( ref l_U603 );
    vVar2 = {-0.25000000, -1.20000000, 0.30000000};
    vVar5 = {-0.25000000, -1.20000000, 0.60000000};
    vVar8 = {0.25000000, -0.90000000, 0.65000000};
    vVar11 = {0.25000000, -0.90000000, 0.30000000};
    if (NOT (IS_VEHICLE_DEAD( l_U525[0] )))
    {
        l_U540 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U540, "S_AIR_PLANE_RS_JEEP", l_U525[0] );
        if (NOT (IS_PED_DEAD( l_U910[0] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[0], l_U525[0], -1 );
        }
        if (NOT (IS_PED_DEAD( l_U910[1] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[1], l_U525[0], 0, vVar2, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[1], "/Global/VIG_08_FIN_JEEP/BACK_LEFT/COMBAT" );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U525[1] )))
    {
        l_U541 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U541, "S_AIR_PLANE_RS_JEEP", l_U525[1] );
        if (NOT (IS_PED_DEAD( l_U910[2] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[2], l_U525[1], -1 );
        }
        if (NOT (IS_PED_DEAD( l_U910[3] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[3], l_U525[1], 0, vVar2, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[3], "/Global/VIG_08_FIN_JEEP/BACK_LEFT/COMBAT" );
        }
        if (NOT (IS_PED_DEAD( l_U910[4] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[4], l_U525[1], 0, vVar8, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[4], "/Global/VIG_08_FIN_JEEP/BACK_RIGHT/COMBAT" );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U525[2] )))
    {
        l_U542 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U542, "S_AIR_PLANE_RS_JEEP", l_U525[2] );
        if (NOT (IS_PED_DEAD( l_U910[5] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[5], l_U525[2], -1 );
        }
        if (NOT (IS_PED_DEAD( l_U910[6] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[6], l_U525[2], 0, vVar5, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[6], "/Global/VIG_08_FIN_JEEP/BACK_LEFT/COMBAT" );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U525[3] )))
    {
        l_U543 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U543, "S_AIR_PLANE_RS_JEEP", l_U525[3] );
        if (NOT (IS_PED_DEAD( l_U910[8] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[8], l_U525[3], -1 );
        }
        if (NOT (IS_PED_DEAD( l_U910[9] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[9], l_U525[3], 0, vVar11, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[9], "/Global/VIG_08_FIN_JEEP/BACK_RIGHT/COMBAT" );
        }
        if (NOT (IS_PED_DEAD( l_U910[7] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[7], l_U525[3], 0, vVar5, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[7], "/Global/VIG_08_FIN_JEEP/BACK_LEFT/COMBAT" );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U525[4] )))
    {
        l_U544 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U544, "S_AIR_PLANE_RS_JEEP", l_U525[4] );
        if (NOT (IS_PED_DEAD( l_U910[15] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[15], l_U525[4], -1 );
            sub_32116( l_U910[15] );
        }
        if (NOT (IS_PED_DEAD( l_U910[16] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[16], l_U525[4], 0, vVar2, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[16], "/Global/VIG_08_FIN_JEEP/BACK_LEFT/COMBAT" );
            sub_32116( l_U910[16] );
        }
        if (NOT (IS_PED_DEAD( l_U910[20] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[20], l_U525[4], 0, vVar8, 180.00000000, 360.00000000, 1, 0, 0, 0 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[20], "/Global/VIG_08_FIN_JEEP/BACK_RIGHT/COMBAT" );
            sub_32116( l_U910[20] );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U531[0] )))
    {
        l_U536 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U536, "S_AIR_SIRENS", l_U531[0] );
        if (NOT (IS_PED_DEAD( l_U910[11] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[11], l_U531[0], -1 );
            sub_32116( l_U910[11] );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U531[1] )))
    {
        l_U537 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U537, "S_AIR_SIRENS", l_U531[1] );
        if (NOT (IS_PED_DEAD( l_U910[12] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[12], l_U531[1], -1 );
            sub_32116( l_U910[12] );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U531[2] )))
    {
        l_U538 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U538, "S_AIR_SIRENS", l_U531[2] );
        if (NOT (IS_PED_DEAD( l_U910[13] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[13], l_U531[2], -1 );
            sub_32116( l_U910[13] );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U531[3] )))
    {
        l_U539 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U539, "S_AIR_SIRENS", l_U531[3] );
        if (NOT (IS_PED_DEAD( l_U910[14] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[14], l_U531[3], -1 );
            sub_32116( l_U910[14] );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U469 )))
    {
        if (NOT (IS_PED_DEAD( l_U910[10] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[10], l_U469, -1 );
            sub_32116( l_U910[10] );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( l_U474 )))
    {
        if (NOT (IS_PED_DEAD( l_U910[17] )))
        {
            SET_PED_INTO_VEHICLE( l_U910[17], l_U474, -1 );
        }
        if (NOT (IS_PED_DEAD( l_U910[18] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[18], l_U474, 0, -0.80000000, 0.40000000, 0.80000000, 90, 0, 1, 0, 0, 1 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[18], "/Global/S_FAV2_VIG_09/S_FAV2_SKID/PASSENGER" );
        }
        if (NOT (IS_PED_DEAD( l_U910[19] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U910[19], l_U474, 0, 0.80000000, 0.40000000, 0.80000000, 65446, 0, 1, 0, 0, 1 );
            PED_ACTION_TREE_PLAY_NODE( l_U910[19], "/Global/S_FAV2_VIG_09/S_FAV2_SKID/PASSENGER" );
        }
    }
    for ( I = 0; I <= 20; I++ )
    {
        if ((I != 17) AND ((I != 12) AND ((I != 11) AND ((I != 8) AND ((I != 5) AND ((I != 2) AND ((I != 0) AND ((NOT (IS_PED_DEAD( sub_1339() ))) AND (NOT (IS_PED_DEAD( l_U910[I] )))))))))))
        {
            REGISTER_TARGET( l_U910[I], sub_1339() );
            TASK_AIM_GUN_AT_PED( l_U910[I], sub_1339(), -1, 1 );
        }
    }
    sub_1118( "GA", "P_TM2_SET_UFE_IN_VEHICLES end", 0 );
    return;
}

void sub_38446(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_38477( (uParam0^)[I] );
    }
    return;
}

void sub_38477(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_41394()
{
    int I;
    unknown uVar3;

    sub_1118( "GA", "P_TM2_START_UFE_GAMEPLAY start", 0 );
    for ( I = 0; I <= 20; I++ )
    {
        if ((I != 17) AND ((I != 15) AND ((I != 10) AND ((I != 8) AND ((I != 5) AND ((I != 2) AND ((I != 0) AND ((NOT (IS_PED_DEAD( sub_1339() ))) AND (NOT (IS_PED_DEAD( l_U910[I] )))))))))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U910[I], 0 );
            REGISTER_TARGET( l_U910[I], sub_1339() );
            TASK_COMBAT_PED( l_U910[I], sub_1339() );
        }
    }
    if (NOT (IS_PED_DEAD( sub_1339() )))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -672.96670000, -692.54710000, -6.73889600, sub_1339(), 1, 80, 80, -1, 4 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        for ( I = 0; I <= 2; I++ )
        {
            if ((NOT (IS_PED_DEAD( sub_1339() ))) AND (NOT (IS_PED_DEAD( l_U603[I] ))))
            {
                REGISTER_TARGET( l_U603[I], sub_1339() );
                TASK_PERFORM_SEQUENCE( l_U603[I], uVar3 );
            }
        }
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    SET_PED_MODEL_LOD_DISTANCES( 2113814688, 10, 100 );
    sub_36152( l_U524 );
    sub_36240( l_U463, l_U468, l_U523, l_U510, 0 );
    FINALE_GRENADE_EXPLODE_ON_IMPACT( 1 );
    sub_1118( "GA", "P_TM2_START_UFE_GAMEPLAY end", 0 );
    return;
}

void sub_41916()
{
    sub_1118( "CR", "P_SETUP_PLAYER - START", 0 );
    SET_CAMERA_OVERRIDE( "FINALE_GRENADE_FRONT_AIM", "FINALE_GRENADE_FRONT_AIM", 0, 1, 1 );
    SET_RAIL_RELATIVE_DIR( 5, 0 );
    SET_CAM_VIEW_MODE( 1 );
    HUD_SET_PLAYER_HEALTH_TEXTURE( "mp3_hud_health_car" );
    if ((NOT (IS_VEHICLE_DEAD( l_U455 ))) AND (NOT (IS_PED_DEAD( sub_1339() ))))
    {
        ATTACH_PED_TO_VEHICLE( sub_1339(), l_U455, 0, l_U460, 0, 360.00000000, 1, 0, 0, 1 );
        PED_ACTION_TREE_PLAY_NODE( sub_1339(), "/Global/VIG_13_FIN_MAX_CAR_SHOOT/VIG_13_FIN_BLEND_IN_ROOT" );
        SET_ALLOW_PLAYER_REACT_TO_EXPLOSION( sub_1339(), 1, 0 );
        SET_PED_PROOFS( sub_1339(), 1, 1, 1, 1, 1 );
        SET_PED_GORE( sub_1339(), 0 );
    }
    ENABLE_LAST_MAN_STANDING( 0 );
    SET_PAYNEKILLER_AMT( 0 );
    sub_1118( "CR", "P_SETUP_PLAYER - END", 0 );
    return;
}

void sub_42375(int iParam0)
{
    sub_3122( iParam0 + 40 );
    sub_3122( iParam0 + 76 );
    sub_3122( iParam0 + 112 );
    iParam0->_fU172 = 1;
    iParam0->_fU164 = 0;
    return;
}

int sub_42621()
{
    if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FIN_CP_11", "B_OUT_MID_12_FIN_CAM" )) - 1500))
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U2168[12], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U2207[12], 1065353216, 0 );
        CAMERA_ANIMATED_STOP( l_U122, 1 );
        SET_CAM_SIDE_LEFT( 0 );
        if (NOT (IS_PLAYER_DEAD( sub_1361() )))
        {
            PED_SET_ACTION_INTENTION( sub_1339(), 47, 1500, 0.00000000, 0.00000000, 0.00000000 );
        }
        return 1;
    }
    return 0;
}

void sub_42829(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_1118( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_42954( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 42914, 42932, uParam8 );
}

void sub_42914()
{
    return;
}

int sub_42932()
{
    return 1;
}

void sub_42954(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_43233(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 0;
    iParam0->_fU84 = {uParam1};
    iParam0->_fU24 = 1;
    return;
}

void sub_43365(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_1118( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_1118( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_1118( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_1118( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_1118( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_1118( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_24286( iParam0->_fU0, 0 );
            sub_1118( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_34996( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_34996( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_1118( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_44606( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_34996( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_44955( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_44955( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_44606(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_1339() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_1339(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1339(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1339(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1339(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1339(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_44955(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1339() )))
    {
        SET_PLAYER_CONTROL( sub_1361(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1339(), 0 );
        if (bParam0)
        {
            sub_45036();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_45036()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1339() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1339(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1339(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1339(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1339(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_45374()
{
    sub_1118( "CCB", "P_START_SP_CHALLENGES", 0 );
    l_U1731 = 0;
    if (STAT_EXISTS( "SP_VEHICLES_DESTROYED" ))
    {
        ;
    }
    sub_1118( "CCB", "Starting the Finale_RS context...", 0 );
    START_CONTEXT( "Finale_RS" );
    sub_1118( "CCB", "Starting the Finale_Runway1 context...", 0 );
    START_CONTEXT( "Finale_Runway1" );
    return;
}

void sub_45766()
{
    int I;

    sub_1118( "SA", "P_R1_INIT_PLAYER_HEALTH start", 0 );
    l_U400 = 0;
    for ( I = 0; I < 4; I++ )
    {
        sub_45847( ref l_U355[I]._fU0 );
    }
    sub_45909( ref l_U355[0]._fU0, l_U355[0]._fU36 );
    sub_1118( "SA", "P_R1_INIT_PLAYER_HEALTH end", 0 );
    return;
}

void sub_45847(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_45909(unknown uParam0, unknown uParam1)
{
    sub_2329( uParam0, uParam1, 1, 0 );
    sub_2465( uParam0 );
    return;
}

void sub_46018(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_4816( uParam0, uParam1 ))
    {
        iVar4 = sub_4915( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

void sub_46280(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = -1;
    if (sub_4816( uParam1, uParam2 ))
    {
        iVar5 = sub_4915( uParam1, uParam2 );
        if (NOT (iVar5 == -1))
        {
            if (NOT (IS_VEHICLE_DEAD( uParam0 )))
            {
                PLAY_SCRIPT_STREAM_FROM_VEHICLE( uParam0, iVar5 );
            }
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

void sub_46552()
{
    int I;

    if ((l_U550[0] == 0) AND (IS_VEHICLE_DEAD( l_U525[0] )))
    {
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U525[0] );
        APPLY_FORCE_TO_VEHICLE( l_U525[0], 2, 150.00000000, 0.00000000, 150.00000000, -5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
        sub_3870( l_U910[0] );
        sub_4234( l_U540, 0 );
        sub_4397( ref l_U540 );
        if (NOT (IS_PED_DEAD( l_U910[1] )))
        {
            sub_46722( l_U910[1] );
        }
        l_U550[0] = 1;
        if (sub_46796())
        {
            l_U123 = l_U525[0];
            l_U89 = 13;
        }
        sub_1118( "CR", "vi_TM2_UFE_Jeeps[0] dead", 0 );
    }
    if ((l_U550[1] == 0) AND (IS_VEHICLE_DEAD( l_U525[1] )))
    {
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U525[1] );
        APPLY_FORCE_TO_VEHICLE( l_U525[1], 2, 140.00000000, 0.00000000, 140.00000000, -5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
        sub_3870( l_U910[2] );
        sub_4234( l_U541, 0 );
        sub_4397( ref l_U541 );
        if (NOT (IS_PED_DEAD( l_U910[3] )))
        {
            sub_46722( l_U910[3] );
        }
        if (NOT (IS_PED_DEAD( l_U910[4] )))
        {
            sub_46722( l_U910[4] );
        }
        l_U550[1] = 1;
        if (sub_46796())
        {
            l_U123 = l_U525[1];
            l_U89 = 13;
        }
        sub_1118( "CR", "vi_TM2_UFE_Jeeps[1] dead", 0 );
    }
    if ((l_U550[2] == 0) AND (IS_VEHICLE_DEAD( l_U525[2] )))
    {
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U525[2] );
        APPLY_FORCE_TO_VEHICLE( l_U525[2], 2, -150.00000000, 0.00000000, 150.00000000, 5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
        sub_3870( l_U910[5] );
        sub_4234( l_U542, 0 );
        sub_4397( ref l_U542 );
        if (NOT (IS_PED_DEAD( l_U910[6] )))
        {
            sub_46722( l_U910[6] );
        }
        l_U550[2] = 1;
        if (sub_46796())
        {
            l_U123 = l_U525[2];
            l_U89 = 13;
        }
        sub_1118( "CR", "vi_TM2_UFE_Jeeps[2] dead", 0 );
    }
    if ((l_U550[3] == 0) AND (IS_VEHICLE_DEAD( l_U525[3] )))
    {
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U525[3] );
        APPLY_FORCE_TO_VEHICLE( l_U525[3], 2, -140.00000000, 0.00000000, 140.00000000, 5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
        sub_3870( l_U910[8] );
        sub_4234( l_U543, 0 );
        sub_4397( ref l_U543 );
        if (NOT (IS_PED_DEAD( l_U910[9] )))
        {
            sub_46722( l_U910[9] );
        }
        if (NOT (IS_PED_DEAD( l_U910[7] )))
        {
            sub_46722( l_U910[7] );
        }
        l_U550[3] = 1;
        if (sub_46796())
        {
            l_U123 = l_U525[3];
            l_U89 = 13;
        }
        sub_1118( "CR", "vi_TM2_UFE_Jeeps[3] dead", 0 );
    }
    if ((l_U550[4] == 0) AND (IS_VEHICLE_DEAD( l_U525[4] )))
    {
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U525[4] );
        APPLY_FORCE_TO_VEHICLE( l_U525[4], 2, -170.00000000, 0.00000000, 170.00000000, 5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
        sub_3870( l_U910[15] );
        sub_4234( l_U544, 0 );
        sub_4397( ref l_U544 );
        if (DOES_PED_EXIST( l_U910[16] ))
        {
            sub_46722( l_U910[16] );
        }
        if (DOES_PED_EXIST( l_U910[20] ))
        {
            sub_46722( l_U910[20] );
        }
        l_U550[4] = 1;
        if (sub_46796())
        {
            l_U123 = l_U525[4];
            l_U89 = 13;
        }
        sub_1118( "CR", "vi_TM2_UFE_Jeeps[4] dead", 0 );
    }
    if ((l_U561 == 0) AND (IS_VEHICLE_DEAD( l_U469 )))
    {
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U469 );
        l_U561 = 1;
        sub_3870( l_U910[10] );
        if (sub_46796())
        {
            APPLY_FORCE_TO_VEHICLE( l_U469, 2, 50.00000000, 0.00000000, 50.00000000, -5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
            l_U123 = l_U469;
            l_U89 = 13;
        }
        else
        {
            APPLY_FORCE_TO_VEHICLE( l_U469, 2, 75.00000000, 0.00000000, 75.00000000, -5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
        }
        sub_1118( "CR", "Caveirao dead", 0 );
    }
    if ((l_U562 == 0) AND (IS_VEHICLE_DEAD( l_U474 )))
    {
        l_U562 = 1;
        START_PARTICLE_FX_NON_LOOPED_ON_VEHICLE( "FIN_Heli_SmokeTrail_S", l_U474, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
        if (NOT (IS_PED_DEAD( l_U910[18] )))
        {
            sub_46722( l_U910[18] );
            DETACH_PED_FROM_WITHIN_VEHICLE( l_U910[18], 0 );
            START_PED_FIRE( l_U910[18], 5000 );
        }
        if (NOT (IS_PED_DEAD( l_U910[19] )))
        {
            sub_46722( l_U910[19] );
            DETACH_PED_FROM_WITHIN_VEHICLE( l_U910[19], 0 );
            START_PED_FIRE( l_U910[19], 5000 );
        }
        sub_3870( l_U910[17] );
        sub_1118( "CR", "Helicopter dead", 0 );
    }
    for ( I = 0; I <= (l_U531 - 1); I++ )
    {
        if ((l_U556[I] == 0) AND ((DOES_VEHICLE_EXIST( l_U531[I] )) AND (IS_VEHICLE_DEAD( l_U531[I] ))))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( l_U531[I] );
            APPLY_FORCE_TO_VEHICLE( l_U531[I], 2, -20.00000000, 0.00000000, 150.00000000, 5.00000000, 0.00000000, -0.50000000, 0, 1, 1, 1 );
            if (IS_VEHICLE_DEAD( l_U531[0] ))
            {
                sub_4234( l_U536, 0 );
                sub_4397( ref l_U536 );
            }
            else if (IS_VEHICLE_DEAD( l_U531[1] ))
            {
                sub_4234( l_U537, 0 );
                sub_4397( ref l_U537 );
            }
            else if (IS_VEHICLE_DEAD( l_U531[2] ))
            {
                sub_4234( l_U538, 0 );
                sub_4397( ref l_U538 );
            }
            else if (IS_VEHICLE_DEAD( l_U531[3] ))
            {
                sub_4234( l_U539, 0 );
                sub_4397( ref l_U539 );
            };;;;
            l_U556[I] = 1;
            sub_1118( "CR", "Sedan Dead", 0 );
        }
    }
    WAIT( 0 );
    return;
}

void sub_46722(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

int sub_46796()
{
    if ((IS_VEHICLE_DEAD( l_U469 )) AND ((IS_VEHICLE_DEAD( l_U525[4] )) AND ((IS_VEHICLE_DEAD( l_U525[3] )) AND ((IS_VEHICLE_DEAD( l_U525[2] )) AND ((IS_VEHICLE_DEAD( l_U525[1] )) AND (IS_VEHICLE_DEAD( l_U525[0] )))))))
    {
        sub_46908( ref l_U402, 1 );
        return 1;
    }
    return 0;
}

void sub_46908(int iParam0, int iParam1)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam1 == 1)
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam1 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam1 );
        }
        else
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
        }
        sub_3122( iParam0 + 40 );
        sub_3122( iParam0 + 76 );
        sub_3122( iParam0 + 112 );
        iParam0->_fU172 = 0;
    }
    return;
}

void sub_49083(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_49120( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_49120(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_3870( uParam0 );
            }
        }
    }
    return;
}

void sub_49230()
{
    int I;

    for ( I = 0; I <= 2; I++ )
    {
        if ((NOT (IS_PED_DEAD( sub_1339() ))) AND (NOT (IS_PED_DEAD( l_U603[I] ))))
        {
            REGISTER_TARGET( l_U603[I], sub_1339() );
        }
    }
    for ( I = 1; I <= 20; I++ )
    {
        if ((I != 8) AND ((I != 5) AND ((I != 2) AND ((NOT (IS_PED_DEAD( sub_1339() ))) AND (NOT (IS_PED_DEAD( l_U910[I] )))))))
        {
            REGISTER_TARGET( l_U910[I], sub_1339() );
        }
    }
    return;
}

void sub_49423()
{
    if ((DOES_VEHICLE_EXIST( l_U531[0] )) AND (NOT l_U545[0]))
    {
        if ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U531[0] ))) AND (NOT (IS_VEHICLE_DEAD( l_U531[0] ))))
        {
            sub_1118( "CR", "Sedan 0 arrived.", 0 );
            sub_49556( ref l_U910[11], l_U531[0], l_U938[0], 0 );
            sub_8136( l_U910[11], 57534114, 25000, 0, 0 );
            sub_38477( l_U910[11] );
            l_U545[0] = 1;
        }
    }
    if ((DOES_VEHICLE_EXIST( l_U531[1] )) AND (NOT l_U545[1]))
    {
        if ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U531[1] ))) AND (NOT (IS_VEHICLE_DEAD( l_U531[1] ))))
        {
            sub_1118( "CR", "Sedan 1 arrived.", 0 );
            sub_49556( ref l_U910[12], l_U531[1], l_U938[1], 0 );
            sub_8136( l_U910[12], 57534114, 25000, 0, 0 );
            sub_38477( l_U910[12] );
            l_U545[1] = 1;
        }
    }
    if ((DOES_VEHICLE_EXIST( l_U531[2] )) AND (NOT l_U545[2]))
    {
        if ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U531[2] ))) AND (NOT (IS_VEHICLE_DEAD( l_U531[2] ))))
        {
            sub_1118( "CR", "Sedan 2 arrived.", 0 );
            sub_49556( ref l_U910[13], l_U531[2], l_U938[2], 0 );
            sub_8136( l_U910[13], 57534114, 25000, 0, 0 );
            sub_38477( l_U910[13] );
            l_U545[2] = 1;
        }
    }
    if ((DOES_VEHICLE_EXIST( l_U531[3] )) AND (NOT l_U545[3]))
    {
        if ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U531[3] ))) AND (NOT (IS_VEHICLE_DEAD( l_U531[0] ))))
        {
            sub_1118( "CR", "Sedan 3 arrived.", 0 );
            sub_49556( ref l_U910[14], l_U531[3], l_U938[3], 0 );
            sub_8136( l_U910[14], 57534114, 25000, 0, 0 );
            sub_38477( l_U910[14] );
            l_U545[3] = 1;
        }
    }
    return;
}

void sub_49556(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, boolean bParam5)
{
    unknown uVar8;

    if ((NOT (IS_VEHICLE_DEAD( uParam1 ))) AND ((NOT (IS_PED_DEAD( (uParam0^) ))) AND (NOT (IS_PED_DEAD( sub_1339() )))))
    {
        REGISTER_TARGET( (uParam0^), sub_1339() );
        SET_PED_FLAG_LOCK_TO_COVER( (uParam0^), 1 );
        OPEN_SEQUENCE_TASK( ref uVar8 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (bParam5)
        {
            if (NOT (IS_VEHICLE_DEAD( uParam1 )))
            {
                TASK_LEAVE_VEHICLE( 0, uParam1 );
            }
        }
        else
        {
            TASK_LEAVE_VEHICLE_DONT_CLOSE_DOOR( 0, uParam1 );
        }
        TASK_GO_STRAIGHT_TO_COORD( 0, uParam2, 4, 20000 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar8 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar8 );
        CLEAR_SEQUENCE_TASK( uVar8 );
    }
    return;
}

void sub_50339()
{
    if ((NOT (IS_VEHICLE_DEAD( l_U474 ))) AND (DOES_VEHICLE_EXIST( l_U474 )))
    {
        SET_VEHICLE_ENGINE_ON( l_U474, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( l_U474 );
    }
    return;
}

void sub_50414()
{
    sub_50428( ref l_U402 );
    if (IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1339() ), l_U453 ))
    {
        if (IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1339() ), l_U453 / 4 ))
        {
            sub_50636( "SMALL_EXPLOSION_SHAKE", l_U454 );
            sub_1118( "CR", "Shaking Camera - Big - Explosion has gone off within 25m to the player", 0 );
        }
        else if (IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1339() ), l_U453 / 2 ))
        {
            sub_50636( "SMALL_EXPLOSION_SHAKE", l_U454 / 2 );
            sub_1118( "CR", "Shaking Camera - Medium - Explosion has gone off within 50m to the player", 0 );
        }
        else
        {
            sub_50636( "SMALL_EXPLOSION_SHAKE", l_U454 / 4 );
            sub_1118( "CR", "Shaking Camera - Small - Explosion has gone off within 100m to the player", 0 );
        }
    }
    return;
}

void sub_50428(int iParam0)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam0->_fU164 == 0)
        {
            sub_2329( iParam0 + 40, iParam0->_fU148, 1, 0 );
            sub_2465( iParam0 + 40 );
            if (iParam0->_fU152 > 0)
            {
                sub_2329( iParam0 + 76, iParam0->_fU152, 1, 0 );
                sub_2465( iParam0 + 76 );
            }
            iParam0->_fU164 = 1;
        }
        if (sub_2585( iParam0 + 40 ))
        {
            sub_1118( "ML", "P_HANDLE_CAM_SHAKE is shaking the camera", "---" );
            sub_50636( iParam0 + 4, iParam0->_fU36 );
            if (iParam0->_fU156 > 0)
            {
                sub_2329( iParam0 + 112, iParam0->_fU156, 1, 0 );
                sub_2465( iParam0 + 112 );
            }
        }
        if (sub_2585( iParam0 + 112 ))
        {
            sub_50636( iParam0 + 4, iParam0->_fU36 );
            sub_2329( iParam0 + 112, iParam0->_fU156, 1, 0 );
            sub_2465( iParam0 + 112 );
        }
        if (sub_2585( iParam0 + 76 ))
        {
            sub_1118( "ML", "P_HANDLE_CAM_SHAKE is done shaking the camera", "---" );
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
            sub_3122( iParam0 + 112 );
            iParam0->_fU172 = 0;
        }
    }
    return;
}

void sub_50636(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    SHAKE_GAMEPLAY_CAM( uParam0, uParam1 );
    return;
}

void sub_51417()
{
    if ((NOT l_U972) AND ((l_U550[3]) AND (l_U550[2])))
    {
        sub_51475( l_U525[4], l_U524 / 1.50000000 );
        sub_2465( ref l_U973 );
        l_U972 = 1;
        sub_1118( "CR", "CAV Supporting Jeep - Slowing Down", 0 );
    }
    if ((DOES_VEHICLE_EXIST( l_U525[4] )) AND (sub_2585( ref l_U973 )))
    {
        sub_51475( l_U525[4], l_U524 );
        sub_1118( "CR", "CAV Supporting Jeep - Speeding Back Up", 0 );
    }
    return;
}

void sub_51475(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            SET_PLAYBACK_SPEED( uParam0, uParam1 );
        }
    }
    return;
}

void sub_51704()
{
    if ((l_U562 == 0) AND ((IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U474 ), 10.00000000 )) AND (NOT (IS_VEHICLE_DEAD( l_U474 )))))
    {
        sub_1118( "CR", "Explosion has gone off in a sphere around the Helicopter", 0 );
        l_U562 = 1;
        if (NOT (IS_VEHICLE_DEAD( l_U474 )))
        {
            START_PARTICLE_FX_NON_LOOPED_ON_VEHICLE( "FIN_Heli_SmokeTrail_S", l_U474, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
        }
        if (NOT (IS_PED_DEAD( l_U910[18] )))
        {
            sub_46722( l_U910[18] );
            DETACH_PED_FROM_WITHIN_VEHICLE( l_U910[18], 0 );
            START_PED_FIRE( l_U910[18], 5000 );
        }
        if (NOT (IS_PED_DEAD( l_U910[19] )))
        {
            sub_46722( l_U910[19] );
            DETACH_PED_FROM_WITHIN_VEHICLE( l_U910[19], 0 );
            START_PED_FIRE( l_U910[19], 5000 );
        }
        if ((NOT (IS_PED_DEAD( l_U910[17] ))) AND (NOT (IS_VEHICLE_DEAD( l_U474 ))))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( l_U474 );
            TASK_HELI_MISSION( l_U910[17], l_U474, 0, 0, 0.00000000, 0.00000000, 0.00000000, 22, 1.00000000, 0, 0.00000000, 1, 0 );
            sub_1118( "CR", "TASK_HELI_MISSION >> MISSION_CRASH on pi_TM2_UFE_Ped[17]", 0 );
        }
        sub_4799( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
        sub_5128( "S_AIR_PLANE_RS_HELICOPTER", ref g_U1910 );
        l_U94 = GET_SOUND_ID();
        PLAY_SOUND_FROM_VEHICLE( l_U94, "S_AIR_RS_HELI_CRASH_DIVE", l_U474 );
    }
    l_U479 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U474 )};
    if ((NOT l_U483) AND ((NOT (IS_VEHICLE_DEAD( l_U474 ))) AND ((DOES_VEHICLE_EXIST( l_U474 )) AND (l_U479._fU8 < l_U482))))
    {
        START_PARTICLE_FX_NON_LOOPED_ON_VEHICLE( "Veh_Explo_Heli_S", l_U474, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
        sub_4234( l_U94, 0 );
        sub_4397( ref l_U94 );
        PLAY_SOUND_FROM_VEHICLE( -1, "S_AIR_RS_HELI_CRASH_LAND", l_U474 );
        SET_VEHICLE_REACT_TO_EXPLOSION( l_U474, 1 );
        SET_VEHICLE_CAN_BE_DAMAGED( l_U474, 1 );
        EXPLODE_VEHICLE( l_U474, 1, 0 );
        sub_3870( l_U910[17] );
        sub_1118( "CR", "Helicopter Hits Ground Explosion taken place", 0 );
        if (STAT_EXISTS( "SP_VEHICLES_DESTROYED" ))
        {
            l_U1731 = STAT_GET_INT( "SP_VEHICLES_DESTROYED" );
            STAT_HASH_INCREMENT_INT( -1017133960, 1 );
        }
        l_U483 = 1;
    }
    return;
}

void sub_52782()
{
    if ((NOT l_U1096) AND (sub_2585( ref l_U1075 )))
    {
        l_U524 += l_U1085;
        sub_28556( l_U524 );
        sub_51475( l_U455, l_U524 );
        sub_51475( l_U525[0], l_U524 );
        sub_51475( l_U525[1], l_U524 );
        sub_51475( l_U525[2], l_U524 );
        sub_51475( l_U525[3], l_U524 );
        sub_51475( l_U525[4], l_U524 );
        sub_51475( l_U469, l_U524 );
        sub_51475( l_U474, l_U524 );
        sub_1118( "CR", "P_HANDLE_SPEED_UP_VEHICLES_FOR_CAV_SECTION - Start", 0 );
        sub_3122( ref l_U1075 );
        sub_2465( ref l_U1075 );
    }
    return;
}

void sub_53064()
{
    int I;

    if (sub_53079( ref l_U1702, 0 ))
    {
        sub_3948( ref l_U603 );
        sub_1118( "CR", "Cleaning up onfoot peds", 0 );
        l_U1730 = 1;
    }
    if (sub_53079( ref l_U1659[0], 0 ))
    {
        sub_3870( l_U910[11] );
        sub_3870( l_U910[12] );
        sub_4051( l_U531[0] );
        sub_4051( l_U531[1] );
        sub_1118( "CR", "Cleaning up first roadblock", 0 );
    }
    if (sub_53079( ref l_U1659[1], 0 ))
    {
        sub_3870( l_U910[13] );
        sub_3870( l_U910[14] );
        sub_4051( l_U531[2] );
        sub_4051( l_U531[3] );
        sub_53467( 2038070575, ref g_U1030 );
        sub_1118( "CR", "Cleaning up second roadblock", 0 );
    }
    for ( I = 0; I <= 20; I++ )
    {
        if ((DOES_PED_EXIST( l_U910[I] )) AND ((NOT (IS_PED_DEAD( sub_1339() ))) AND (l_U1730)))
        {
            l_U1723 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1339() )};
            l_U1726 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U910[I] )};
            l_U1729 = l_U1723._fU4 - l_U1726._fU4;
            if (l_U1729 >= 15.00000000)
            {
                sub_3870( l_U910[I] );
                sub_53897( "Cleaning pi_TM2_UFE_Ped_", I );
            }
        }
    }
    return;
}

void sub_53079(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_53121( sub_1339(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_53121(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_53467(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_5239( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_53897(unknown uParam0, unknown uParam1)
{
    return;
}

void sub_53949()
{
    int I;
    unknown uVar3;

    sub_1118( "CR", "P_TM2_MAKE_ONFOOT_PEDS_RETREAT - Start", 0 );
    if (NOT (IS_PED_DEAD( sub_1339() )))
    {
        OPEN_SEQUENCE_TASK( ref uVar3 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -683.15520000, -730.58610000, -6.21142400, sub_1339(), 1, 80, 80, -1, 4 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar3 );
        for ( I = 0; I <= 2; I++ )
        {
            if ((NOT (IS_PED_DEAD( sub_1339() ))) AND (NOT (IS_PED_DEAD( l_U603[I] ))))
            {
                REGISTER_TARGET( l_U603[I], sub_1339() );
                TASK_PERFORM_SEQUENCE( l_U603[I], uVar3 );
            }
        }
        CLEAR_SEQUENCE_TASK( uVar3 );
    }
    sub_1118( "CR", "P_TM2_MAKE_ONFOOT_PEDS_RETREAT - End", 0 );
    return;
}

float sub_54379()
{
    unknown uVar2;
    unknown uVar3;
    float Result;

    if (NOT (IS_PED_DEAD( sub_1339() )))
    {
        uVar2 = TO_FLOAT( (GET_PED_MAX_HEALTH( sub_1339() )) - 100 );
        uVar3 = TO_FLOAT( (GET_PED_HEALTH( sub_1339() )) - 100 );
        Result = uVar3 / uVar2;
        return Result;
    }
    return 0.00000000;
}

void sub_54703(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_53121( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

int sub_55066()
{
    if ((IS_VEHICLE_DEAD( l_U525[4] )) AND ((IS_VEHICLE_DEAD( l_U525[3] )) AND (IS_VEHICLE_DEAD( l_U525[2] ))))
    {
        return 1;
        sub_1118( "CR", "F_MAKE_PLAYER_VEHICLE_CATCHUP_TO_CAV - RETURN TRUE", 0 );
    }
    return 0;
}

void sub_55218()
{
    sub_1118( "CR", "P_MAKE_PLAYER_VEHICLE_ACCELERATE_TO_CAV - Start", 0 );
    l_U524 += l_U1097;
    sub_28556( l_U524 );
    sub_51475( l_U455, l_U524 );
    sub_2465( ref l_U1098 );
    sub_1118( "CR", "P_MAKE_PLAYER_VEHICLE_ACCELERATE_TO_CAV - End", 0 );
    return;
}

void sub_55433()
{
    sub_1118( "CR", "P_MAKE_PLAYER_VEHICLE_DECELERATE_FROM_CAV - Start", 0 );
    l_U524 -= l_U1097;
    sub_28556( l_U524 );
    sub_51475( l_U455, l_U524 );
    sub_1118( "CR", "P_MAKE_PLAYER_VEHICLE_DECELERATE_FROM_CAV - End", 0 );
    return;
}

int sub_55622()
{
    float fVar2;
    int I;

    if (l_U400 < 4)
    {
        fVar2 = 1.00000000;
        for ( I = 0; I < l_U400; I++ )
        {
            fVar2 -= l_U355[I]._fU40;
        }
        fVar2 -= (sub_55711( ref l_U355[l_U400]._fU0 )) * l_U355[l_U400]._fU40;
        if (NOT (IS_PED_DEAD( sub_1339() )))
        {
            SET_PED_MAX_HEALTH( sub_1339(), 200 );
            if (fVar2 > 0.00000000)
            {
                sub_55925( fVar2 );
            }
            else
            {
                return 1;
            }
        }
        if (sub_2585( ref l_U355[l_U400]._fU0 ))
        {
            l_U400++;
            if (l_U400 < 4)
            {
                sub_45909( ref l_U355[l_U400]._fU0, l_U355[l_U400]._fU36 );
            }
        }
        return 0;
        break;
    }
    return 1;
}

void sub_55711(int iParam0)
{
    int iVar3;

    if (iParam0->_fU28)
    {
        iVar3 = TIMERA();
    }
    else
    {
        iVar3 = TIMERB();
    }
    return sub_55792( (TO_FLOAT( iVar3 - iParam0->_fU0 )) / (TO_FLOAT( iParam0->_fU12 )), 0.00000000, 1.00000000 );
}

void sub_55792(float fParam0, float fParam1, float fParam2)
{
    float Result;

    Result = fParam0;
    if (fParam0 < fParam1)
    {
        Result = fParam1;
    }
    else if (fParam0 > fParam2)
    {
        Result = fParam2;
    }
    return Result;
}

void sub_55925(unknown uParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD( sub_1339() )))
    {
        iVar3 = (ROUND( ((GET_PED_MAX_HEALTH( sub_1339() )) - 100) * uParam0 )) + 100;
        SET_PED_HEALTH( sub_1339(), iVar3, 0 );
    }
    return;
}

void sub_56143()
{
    sub_1118( "SA", "P_R1_START_PLAYER_DIES_NIS", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U455 )))
    {
        sub_34996( 1, 0, 0, 1 );
        sub_56268( ref l_U182, (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U455 ))) + l_U213, 0.00000000, 0.00000000, 0.00000000, 45.00000000, l_U219 );
        sub_56477( ref l_U182 );
        POINT_CAM_AT_VEHICLE( l_U182._fU0, l_U455, l_U216, 1 );
        if (GET_ADRENALINE_AMT() < 1.00000000)
        {
            SET_ADRENALINE_AMT( 1.00000000 );
        }
        DEACTIVATE_BULLET_TIME( 1, 1 );
        ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
    }
    return;
}

void sub_56268(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_2329( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U2, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_56477(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_2465( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_56808()
{
    sub_1118( "SA", "P_R1_PLAYER_DIES_CAR_EXPLODES", 0 );
    if ((NOT (IS_PED_DEAD( l_U497 ))) AND (NOT (IS_PED_DEAD( sub_1339() ))))
    {
        if (GET_ADRENALINE_AMT() < 0.10000000)
        {
            SET_ADRENALINE_AMT( 0.10000000 );
        }
        ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
        SET_VEHICLE_CAN_BE_DAMAGED( l_U455, 1 );
        STOP_PLAYBACK_RECORDED_VEHICLE( l_U455 );
        EXPLODE_VEHICLE( l_U455, 1, 0 );
        SHAKE_CAM( l_U182._fU0, "SMALL_EXPLOSION_SHAKE", l_U220 );
        SET_BULLET_CAM_PREF( sub_1339(), "MISS_DEATH_FALL_01A", "", "", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        sub_46722( sub_1339() );
        sub_46722( l_U497 );
        SET_PED_VISIBLE( sub_1339(), 0 );
        SET_PED_VISIBLE( l_U497, 0 );
    }
    return;
}

void sub_57367()
{
    sub_1118( "GA", "P_RW_START_LAST_EXPLODING_CAR_NIS start", 0 );
    if ((NOT (IS_VEHICLE_DEAD( l_U123 ))) || (IS_VEHICLE_DEAD( l_U123 )))
    {
        START_PARTICLE_FX_NON_LOOPED_ON_VEHICLE( "Veh_Explo_Truck_S", l_U123, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1.50000000 );
    }
    sub_34996( 1, 0, 0, 1 );
    sub_56268( ref l_U133, (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U123 ))) + l_U164, 0.00000000, 0.00000000, 0.00000000, 25.00000000, l_U170 );
    sub_56477( ref l_U133 );
    POINT_CAM_AT_VEHICLE( l_U133._fU0, l_U455, l_U167, 1 );
    SHAKE_CAM( l_U133._fU0, "SMALL_EXPLOSION_SHAKE", 0.35000000 );
    l_U181 = GET_SOUND_ID();
    PLAY_SOUND_FRONTEND( l_U181, "S_AIR_PLANE_RS_01_FINAL_KILL" );
    if (GET_ADRENALINE_AMT() < 0.10000000)
    {
        SET_ADRENALINE_AMT( 0.10000000 );
    }
    DEACTIVATE_BULLET_TIME( 1, 1 );
    ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
    sub_2329( ref l_U172, l_U171, 1, 0 );
    sub_2465( ref l_U172 );
    sub_2465( ref l_U124 );
    sub_1118( "GA", "P_RW_START_LAST_EXPLODING_CAR_NIS end", 0 );
    return;
}

int sub_58051(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_2585( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_2585( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_58860()
{
    if ((sub_53079( ref l_U1363[0], 0 )) == 1)
    {
        l_U1358 = 1;
    }
    if ((sub_53079( ref l_U1363[1], 0 )) == 1)
    {
        l_U1353 = 1;
    }
    if ((sub_53079( ref l_U1363[2], 0 )) == 1)
    {
        l_U1349 = 1;
    }
    if ((sub_53079( ref l_U1363[3], 0 )) == 1)
    {
        l_U1345 = 1;
    }
    if ((sub_53079( ref l_U1363[4], 0 )) == 1)
    {
        l_U1351 = 1;
    }
    if ((sub_53079( ref l_U1363[5], 0 )) == 1)
    {
        l_U1350 = 1;
    }
    if ((sub_53079( ref l_U1363[6], 0 )) == 1)
    {
        l_U1356 = 1;
    }
    if ((sub_53079( ref l_U1363[7], 0 )) == 1)
    {
        l_U1347 = 1;
    }
    if ((sub_53079( ref l_U1363[8], 0 )) == 1)
    {
        l_U1362 = 1;
    }
    if ((sub_53079( ref l_U1363[9], 0 )) == 1)
    {
        l_U1355 = 1;
    }
    if ((sub_53079( ref l_U1363[10], 0 )) == 1)
    {
        l_U1354 = 1;
    }
    if ((sub_53079( ref l_U1363[11], 0 )) == 1)
    {
        l_U1348 = 1;
    }
    if ((sub_53079( ref l_U1363[12], 0 )) == 1)
    {
        l_U1350 = 1;
    }
    if ((sub_53079( ref l_U1363[13], 0 )) == 1)
    {
        l_U1346 = 1;
    }
    return;
}

void sub_59242()
{
    if (l_U1340 == 1)
    {
        sub_1118( "ka", "Da Silva and Max chat en route v 1 - SAIR_DSMXV1A", 0 );
        sub_59331( ref l_U1110 );
        sub_59413( 1, sub_1339(), "MAX", ref l_U1110, 2, 0 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1110, 2, 0 );
        sub_59660( "SAIR_DSMXV1A", ref l_U1110, 8, 1 );
        l_U1340 = 0;
    }
    if (l_U1341 == 1)
    {
        sub_1118( "ka", "Da Silva and Max chat en route v 2 - SAIR_DSMXV2A", 0 );
        sub_59331( ref l_U1120 );
        sub_59413( 1, sub_1339(), "MAX", ref l_U1120, 2, 0 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1120, 2, 0 );
        sub_59660( "SAIR_DSMXV2A", ref l_U1120, 8, 1 );
        l_U1341 = 0;
    }
    if (l_U1342 == 1)
    {
        sub_1118( "ka", "Da Silva and Max chat en route v 2 p 2 - SAIR_DSMXV22A", 0 );
        sub_59331( ref l_U1130 );
        sub_59413( 1, sub_1339(), "MAX", ref l_U1130, 2, 0 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1130, 2, 0 );
        sub_59660( "SAIR_DSMXV22A", ref l_U1130, 8, 1 );
        l_U1342 = 0;
    }
    if (l_U1343 == 1)
    {
        sub_1118( "ka", "Da Silva and Max chat en route v 3 - SAIR_DSMXV3A", 0 );
        sub_59331( ref l_U1140 );
        sub_59413( 1, sub_1339(), "MAX", ref l_U1140, 2, 0 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1140, 2, 0 );
        sub_59660( "SAIR_DSMXV3A", ref l_U1140, 8, 1 );
        l_U1343 = 0;
    }
    if (l_U1344 == 1)
    {
        sub_1118( "ka", "Da Silva and Max chat en route v 4 - SAIR_DSMXV4A", 0 );
        sub_59331( ref l_U1150 );
        sub_59413( 1, sub_1339(), "MAX", ref l_U1150, 2, 0 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1150, 2, 0 );
        sub_59660( "SAIR_DSMXV4A", ref l_U1150, 8, 1 );
        l_U1344 = 0;
    }
    if (l_U1345 == 1)
    {
        sub_1118( "ka", "Da Silva and Max chat en route v 5 - SAIR_DSMXV5A", 0 );
        sub_59331( ref l_U1160 );
        sub_59413( 1, sub_1339(), "MAX", ref l_U1160, 2, 0 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1160, 2, 0 );
        sub_59660( "SAIR_DSMXV5A", ref l_U1160, 8, 1 );
        l_U1345 = 0;
    }
    if (l_U1346 == 1)
    {
        sub_1118( "ka", "Da Silva and Max chat en route v 6 - SAIR_DSMXV6A", 0 );
        sub_59331( ref l_U1170 );
        sub_59413( 1, sub_1339(), "MAX", ref l_U1170, 2, 0 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1170, 2, 0 );
        sub_59660( "SAIR_DSMXV6A", ref l_U1170, 8, 1 );
        SET_PED_PRIMARY_LOOKAT( sub_1339(), l_U497 );
        l_U354 = 1;
        l_U1346 = 0;
    }
    if (l_U1347 == 1)
    {
        sub_1118( "ka", "Da Silva and Max chat en route v 7 - SAIR_DSMXV7A", 0 );
        sub_59331( ref l_U1180 );
        sub_59413( 1, sub_1339(), "MAX", ref l_U1180, 2, 0 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1180, 2, 0 );
        sub_59660( "SAIR_DSMXV7A", ref l_U1180, 8, 1 );
        l_U1347 = 0;
    }
    if (l_U1348 == 1)
    {
        sub_1118( "ka", "Da Silva and Max chat en route v 8 - SAIR_DSMXV8A", 0 );
        sub_59331( ref l_U1190 );
        sub_59413( 1, sub_1339(), "MAX", ref l_U1190, 2, 0 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1190, 2, 0 );
        sub_59660( "SAIR_DSMXV8A", ref l_U1190, 8, 1 );
        l_U1348 = 0;
    }
    if (l_U1349 == 1)
    {
        sub_1118( "ka", "The Car gets shot up / Random / - SSAIR_DSTDMG", 0 );
        sub_59331( ref l_U1200 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1200, 2, 0 );
        sub_59660( "SAIR_DSTDMG", ref l_U1200, 8, 1 );
        l_U1349 = 0;
    }
    if (l_U1350 == 1)
    {
        sub_1118( "ka", "Da Silva makes driving noises / Random / Vroom-Vroom! - SAIR_DSMDN", 0 );
        sub_59331( ref l_U1210 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1210, 2, 0 );
        sub_59660( "SAIR_DSTDMG", ref l_U1210, 8, 1 );
        l_U1350 = 0;
    }
    if (l_U1351 == 1)
    {
        sub_1118( "ka", "Da Silva Takes out the guys / Random / - SAIR_DSTGO", 0 );
        sub_59331( ref l_U1220 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1220, 2, 0 );
        sub_59660( "SAIR_DSTGO", ref l_U1220, 8, 1 );
        l_U1351 = 0;
    }
    if (l_U1352 == 1)
    {
        sub_1118( "ka", "Da Silva Says Left / Random / - SAIR_DSSLT", 0 );
        sub_59331( ref l_U1230 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1230, 2, 0 );
        sub_59660( "SAIR_DSSLT", ref l_U1230, 8, 1 );
        l_U1352 = 0;
    }
    if (l_U1353 == 1)
    {
        sub_1118( "ka", "Da Silva Says Right / Random / - SAIR_DSSRT", 0 );
        sub_59331( ref l_U1240 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1240, 2, 0 );
        sub_59660( "SAIR_DSSRT", ref l_U1240, 8, 1 );
        l_U1353 = 0;
    }
    if (l_U1354 == 1)
    {
        sub_1118( "ka", "Da Silva Says in Front / Random / - SAIR_DSSFT", 0 );
        sub_59331( ref l_U1250 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1250, 2, 0 );
        sub_59660( "SAIR_DSSFT", ref l_U1250, 8, 1 );
        l_U1354 = 0;
    }
    if (l_U1355 == 1)
    {
        sub_1118( "ka", "Da Silva Says talks about the tank / Random / - SAIR_DSTABT", 0 );
        sub_59331( ref l_U1260 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1260, 2, 0 );
        sub_59660( "SAIR_DSTABT", ref l_U1260, 8, 1 );
        l_U1355 = 0;
    }
    if (l_U1356 == 1)
    {
        sub_1118( "ka", "Da Silva and Max discuss the tank v1  - SAIR_DSTNK1", 0 );
        sub_59331( ref l_U1270 );
        sub_59413( 1, sub_1339(), "MAX", ref l_U1270, 2, 0 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1270, 2, 0 );
        sub_59660( "SAIR_DSTNK1", ref l_U1270, 8, 1 );
        SET_PED_PRIMARY_LOOKAT( sub_1339(), l_U497 );
        l_U354 = 1;
        l_U1356 = 0;
    }
    if (l_U1357 == 1)
    {
        sub_1118( "ka", "Da Silva and Max discuss the tank v2  - SAIR_DSTNK2", 0 );
        sub_59331( ref l_U1280 );
        sub_59413( 1, sub_1339(), "MAX", ref l_U1280, 2, 0 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1280, 2, 0 );
        sub_59660( "SAIR_DSTNK2", ref l_U1280, 8, 1 );
        l_U1357 = 0;
    }
    if (l_U1358 == 1)
    {
        sub_1118( "ka", "Da Silva some UFE guys are running in / Random / - SAIR_DSUFE1", 0 );
        sub_59331( ref l_U1290 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1290, 2, 0 );
        sub_59660( "SAIR_DSUFE1", ref l_U1290, 8, 1 );
        l_U1358 = 0;
    }
    if (l_U1359 == 1)
    {
        sub_1118( "ka", "Da Silva some UFE four by fours / Random / - SAIR_DSUFE2", 0 );
        sub_59331( ref l_U1300 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1300, 2, 0 );
        sub_59660( "SAIR_DSUFE2", ref l_U1300, 8, 1 );
        l_U1359 = 0;
    }
    if (l_U1362 == 1)
    {
        sub_1118( "ka", "Roadblock / Random / - SAIR_DSRBLK", 0 );
        sub_59331( ref l_U1330 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1330, 2, 0 );
        sub_59660( "SAIR_DSRBLK", ref l_U1330, 8, 1 );
        l_U1362 = 0;
    }
    if (l_U1360 == 1)
    {
        sub_1118( "ka", "Da Silva sees another plane coming / Random / - SAIR_DSPCM", 0 );
        sub_59331( ref l_U1310 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1310, 2, 0 );
        sub_59660( "SAIR_DSPCM", ref l_U1310, 8, 1 );
        l_U1360 = 0;
    }
    if (l_U1361 == 1)
    {
        sub_1118( "ka", "Da Silva says take the plane / Random / - SAIR_DSSTPL", 0 );
        sub_59331( ref l_U1320 );
        sub_59413( 2, l_U497, "DA_SILVA", ref l_U1320, 2, 0 );
        sub_59660( "SAIR_DSSTPL", ref l_U1320, 8, 1 );
        l_U1361 = 0;
    }
    if ((l_U354) AND ((NOT (sub_63937( l_U1170 ))) AND (NOT (sub_63937( l_U1270 )))))
    {
        CLEAR_PED_PRIMARY_LOOKAT( sub_1339() );
        l_U354 = 0;
    }
    return;
}

void sub_59331(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_59413(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_59660(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_59684( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_59684(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_59739( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_59739(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_59774( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_60268( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_59774(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_60268(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_63937(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_63950( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_63950(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_64200()
{
    sub_1118( "CR", "P_RELEASE_RUNWAY1_ASSETS - START", 0 );
    sub_64264( ref l_U1025, ref g_U1030 );
    sub_53467( 2038070575, ref g_U1030 );
    sub_64346( 879300975, ref g_U1247 );
    sub_64346( 1478009203, ref g_U1247 );
    sub_64346( 57534114, ref g_U1247 );
    sub_64552( "level_s_fin_cp_10", ref g_U1429 );
    sub_64552( "w_sp_grnlch_aa_h", ref g_U1429 );
    sub_64552( "veh@std", ref g_U1429 );
    sub_64552( "veh@truck", ref g_U1429 );
    sub_64552( "LEVEL_S_FIN_CP_11", ref g_U1429 );
    sub_64552( "LEVEL_S_FIN_CP_12", ref g_U1429 );
    sub_64552( "LEVEL_S_FAV2_CP_04", ref g_U1429 );
    sub_64552( "VEH@CAR_JASRE", ref g_U1429 );
    sub_64949( "LEVEL/S_AIR/VIG_13_FIN_MAX_CAR_SHOOT.act", ref g_U1783 );
    sub_64949( "Vehicle/Vehicle_Car.act", ref g_U1783 );
    sub_64949( "LEVEL/S_AIR/VIG_09_ChopperShooters", ref g_U1783 );
    sub_64949( "LEVEL/S_AIR/VIG_08_FIN_JEEP", ref g_U1783 );
    sub_64949( "VEHICLE/vehicle_heli", ref g_U1783 );
    sub_65279( l_U468, ref g_U1638 );
    sub_65279( l_U983, ref g_U1638 );
    sub_65279( l_U498, ref g_U1638 );
    sub_65279( l_U499, ref g_U1638 );
    sub_65279( l_U500, ref g_U1638 );
    sub_65279( l_U501, ref g_U1638 );
    sub_65279( l_U502, ref g_U1638 );
    sub_65279( l_U503, ref g_U1638 );
    sub_65279( l_U508, ref g_U1638 );
    sub_65279( l_U509, ref g_U1638 );
    sub_65279( l_U504, ref g_U1638 );
    sub_65279( l_U505, ref g_U1638 );
    sub_65279( l_U506, ref g_U1638 );
    sub_65279( l_U507, ref g_U1638 );
    sub_65653( "SCRIPT_MISSION\S_AIR_RUNWAY_01A", ref g_U1950 );
    return;
}

void sub_64264(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_53467( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_64346(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_5239( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_64552(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5239( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_64949(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5239( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_65279(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_5239( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_65653(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5239( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


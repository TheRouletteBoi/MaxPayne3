void main()
{
    unknown uVar2;

    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = 0;
    l_U40 = {22.41000000, 67.57000000, 38.37000000};
    l_U43 = 176.40000000;
    l_U45 = {22.54000000, 64.99000000, 38.37000000};
    l_U48 = 38.80000000;
    l_U50 = 4000.00000000;
    StrCopy( ref l_U60, "f2_anim_rwash", 32 );
    StrCopy( ref l_U68, "rtrwsh_root", 32 );
    l_U77 = 0.26000000;
    l_U78 = {-45.79000000, 68.26000000, 27.36200000};
    l_U81 = -90.00000000;
    l_U82 = {-50.36000000, 68.31000000, 27.36230000};
    l_U85 = -90.00000000;
    l_U86 = {-60.47000000, 68.65000000, 27.36230000};
    l_U89 = -90.00000000;
    l_U90 = {-62.34000000, 67.16000000, 27.36230000};
    l_U93 = -90.00000000;
    l_U94 = 0;
    l_U95 = 0;
    l_U96 = {-27.06170000, 65.88060000, 27.36230000};
    l_U99 = 90.00000000;
    l_U100 = {-21.60890000, 63.62420000, 27.36230000};
    l_U103 = 90.00000000;
    l_U104 = {-17.58240000, 66.05960000, 27.36230000};
    l_U107 = 90.00000000;
    l_U108 = {-17.33440000, 67.31740000, 27.36230000};
    l_U111 = 90.00000000;
    l_U112 = 0;
    l_U113 = 0;
    l_U114 = 0;
    l_U115 = {13.14000000, 64.20000000, 38.29000000};
    l_U118 = 53.02000000;
    l_U119 = {15.01210000, 62.11330000, 39.46660000};
    l_U122 = {0.00000000, 0.00000000, -126.50000000};
    l_U125 = {16.64200000, 66.37700000, 39.76900000};
    l_U128 = 242.00000000;
    l_U129 = 0;
    l_U130 = 4500;
    l_U131 = 10000;
    l_U132 = 26.05900000;
    l_U133 = -6.80800000;
    l_U134 = 0;
    l_U143 = 0;
    l_U144 = 0;
    l_U145 = 0;
    l_U146 = 0;
    l_U148 = {-12.10000000, 87.49000000, 35.32000000};
    l_U151 = -89.00000000;
    l_U152 = {1.08625900, 67.63840000, 28.99118000};
    l_U155 = 500;
    l_U156 = 0;
    l_U157 = 0;
    l_U158 = 0;
    l_U159 = 0;
    l_U161 = {-17.32800000, 60.62500000, 27.69700000};
    l_U164 = 0.00000000;
    l_U165 = {2.23738000, 66.63959000, 28.96417000};
    l_U168 = 0;
    l_U171 = 0;
     /* WRITESCRIPTLOG */ sub_1011( "SP", "Script fav2_iSequences is starting...", "###" );
    uVar2 =  /* F_GIVEPEDWEAPON */ sub_1233(  /* PLAYER_PED_ID */ sub_1129(), 456708483, 200, 0, 1 );
     /* P_FADE_IN_AND_WAIT */ sub_1682( 1000 );
    while (true)
    {
         /* P_HANDLE_SEQUENCE_WIDGET */ sub_1842();
        WAIT( 0 );
    }
     /* WRITESCRIPTLOG */ sub_1011( "SP", "Script fav2_iSequences is terminating...", "###" );
    return;
}

/* WRITESCRIPTLOG */ void sub_1011(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* PLAYER_PED_ID */ int sub_1129()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1167() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1167()
{
    return GET_PLAYER_ID();
}

/* F_GIVEPEDWEAPON */ void sub_1233(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_1618( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_1618(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_FADE_IN_AND_WAIT */ void sub_1682(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            DISPLAYF( "[SP]### Waiting for screen to fade in... ###", 0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_HANDLE_SEQUENCE_WIDGET */ void sub_1842()
{
    if (l_U171 == 0)
    {
        START_WIDGET_GROUP( "Interactive Sequence Test Helper" );
        START_WIDGET_GROUP( "S_S_FAV2_09_01_BLEND" );
        ADD_WIDGET_STRING( "Opening cutscene blendout for Favela 2. Player walks out door over Favela" );
        ADD_WIDGET_BOOL( "Teleport player to the Sequence", ref l_U112 );
        ADD_WIDGET_BOOL( "Start Sequence", ref l_U113 );
        ADD_WIDGET_BOOL( "Stop Sequence", ref l_U114 );
        ADD_WIDGET_BOOL( "Use Animated Camera", ref l_U129 );
        START_WIDGET_GROUP( "Player" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U115._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U115._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U115._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U118, -360.00000000, 360.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Door" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U119._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U119._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U119._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U122._fU0, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U122._fU4, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U122._fU8, -360.00000000, 360.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Animated Camera" );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay Cam Heading", ref l_U132, -180.00000000, 180.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay Cam Pitch", ref l_U133, -180.00000000, 180.00000000, 0.10000000 );
        ADD_WIDGET_INT_SLIDER( "Interp Time", ref l_U130, 0, 999999, 100 );
        ADD_WIDGET_INT_SLIDER( "Stop Time", ref l_U131, 0, 999999, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos X", ref l_U125._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos X", ref l_U125._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos X", ref l_U125._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Heading", ref l_U128, -360.00000000, 360.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "S_FAV2_04_PED_ALLEY" );
        ADD_WIDGET_STRING( "A paniced civilian runs down an alley way." );
        ADD_WIDGET_BOOL( "Teleport player to the Sequence", ref l_U143 );
        ADD_WIDGET_BOOL( "Start Sequence", ref l_U144 );
        ADD_WIDGET_BOOL( "Kill Sequence", ref l_U145 );
        ADD_WIDGET_INT_SLIDER( "Sound Wait", ref l_U155, 0, 15000, 100 );
        START_WIDGET_GROUP( "PEDALLEY_MALE" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U148._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U148._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U148._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U151, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos X", ref l_U152._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos Y", ref l_U152._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos Z", ref l_U152._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "S_FAV2_06_CSHERO_R1" );
        ADD_WIDGET_STRING( "CS with a Rifle runs sideways and shoots." );
        ADD_WIDGET_BOOL( "Teleport player to the Sequence", ref l_U156 );
        ADD_WIDGET_BOOL( "Start Sequence", ref l_U157 );
        ADD_WIDGET_BOOL( "Kill Sequence", ref l_U158 );
        START_WIDGET_GROUP( "CSHEROR1_MALE" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U161._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U161._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U161._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U164, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos X", ref l_U165._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos Y", ref l_U165._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos Z", ref l_U165._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "CAV SHOOT PLAYER" );
        ADD_WIDGET_BOOL( " activate cav shoot player", ref l_U168 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U171 = 1;
    }
     /* P_HANDLE_S_FAV2_04_PED_ALLEY */ sub_4129();
     /* P_HANDLE_S_FAV2_06_CSHERO_R1 */ sub_7075();
     /* P_HANDLE_S_FAV2_09_01_BLEND */ sub_7843();
     /* P_HANDLE_CAV_SHOOT_PLAYER */ sub_9700();
    return;
}

/* P_HANDLE_S_FAV2_04_PED_ALLEY */ void sub_4129()
{
    vector vVar2;
    float fVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    if (l_U143 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1011( "SP", "Teleporting player to the S_FAV2_04_PED_ALLEY sequence", "###" );
        vVar2 = {3.86030800, 88.24167000, 36.05083000};
        fVar5 = 82.58531000;
         /* P_FADE_OUT_AND_WAIT */ sub_4283( 1000 );
         /* TELEPORTPED */ sub_4449(  /* PLAYER_PED_ID */ sub_1129(), vVar2, fVar5 );
        LOAD_SCENE( vVar2 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.06849300, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -21.42620000, 1065353216, 0 );
         /* P_FADE_IN_AND_WAIT */ sub_1682( 1000 );
        l_U143 = 0;
    }
    if (l_U144 == 1)
    {
         /* LOADAUDIOBANK */ sub_4628( "SCRIPT_MISSION\S_FAV2_THE_START", 1 );
         /* WRITESCRIPTLOG */ sub_1011( "SP", "Starting the S_FAV2_04_PED_ALLEY sequence", "###" );
        l_U146 = 0;
         /* TERMINATEISEQ */ sub_4857( 698501614, 1 );
         /* LOADISEQ */ sub_5164( 698501614, 1 );
         /* LOADMODEL */ sub_5462( 774585602, 1 );
         /* P_CREATEPEDSTRUCT */ sub_5729( ref uVar6, l_U148, l_U151, 774585602, 4, 1, 0, 0, 0 );
         /* CLEANPED */ sub_5847( l_U147 );
        l_U147 =  /* CREATEPED */ sub_5933( ref uVar6 );
        if (((IS_PED_DEAD( l_U147 )) == 0) AND ((DOES_PED_EXIST( l_U147 )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U147, 1 );
        }
        if ((NOT (IS_PED_DEAD( l_U147 ))) AND (DOES_PED_EXIST( l_U147 )))
        {
            PLAY_SOUND_FROM_PED( -1, "S_FAV2_ALLEY_RUNNER", l_U147 );
        }
        WAIT( l_U155 );
        ISEQ_REGISTER_ENTITY( 698501614, "pedalley_male", l_U147, 0 );
        ISEQ_START( 698501614 );
        l_U144 = 0;
    }
    if (l_U145 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1011( "SP", "Killing the S_FAV2_04_PED_ALLEY sequence", "###" );
         /* TERMINATEISEQ */ sub_4857( 698501614, 1 );
         /* CLEANPED */ sub_5847( l_U147 );
        l_U146 = 0;
        l_U145 = 0;
    }
    if (l_U146 == 0)
    {
        if (((IS_PED_DEAD( l_U147 )) == 0) AND ((DOES_PED_EXIST( l_U147 )) == 1))
        {
            OPEN_SEQUENCE_TASK( ref uVar19 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U152, 3, 20000, 1048576000, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( uVar19 );
            TASK_PERFORM_SEQUENCE( l_U147, uVar19 );
            CLEAR_SEQUENCE_TASK( uVar19 );
            l_U146 = 1;
        }
    }
    return;
}

/* P_FADE_OUT_AND_WAIT */ void sub_4283(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            DISPLAYF( "[SP]### Waiting for screen to fade out... ###", 0 );
            WAIT( 0 );
        }
    }
    return;
}

/* TELEPORTPED */ void sub_4449(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* LOADAUDIOBANK */ void sub_4628(unknown uParam0, int iParam1)
{
    LOAD_SCRIPT_AUDIO_BANK( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for script audio bank to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* TERMINATEISEQ */ void sub_4857(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADISEQ */ void sub_5164(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* LOADMODEL */ void sub_5462(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_1618( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_CREATEPEDSTRUCT */ void sub_5729(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

/* CLEANPED */ void sub_5847(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CREATEPED */ void sub_5933(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_5462( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_6424( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_6525( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_6424(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_6525(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_HANDLE_S_FAV2_06_CSHERO_R1 */ void sub_7075()
{
    vector vVar2;
    float fVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;

    if (l_U156 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1011( "SP", "Teleporting player to the S_FAV2_06_CSHERO_R1 sequence", "###" );
        vVar2 = {-26.73536000, 68.95181000, 27.20621000};
        fVar5 = 255.67240000;
         /* P_FADE_OUT_AND_WAIT */ sub_4283( 1000 );
         /* TELEPORTPED */ sub_4449(  /* PLAYER_PED_ID */ sub_1129(), vVar2, fVar5 );
        LOAD_SCENE( vVar2 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( -6.09093000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -14.71728000, 1065353216, 0 );
         /* P_FADE_IN_AND_WAIT */ sub_1682( 1000 );
        l_U156 = 0;
    }
    if (l_U157 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1011( "SP", "Starting the S_FAV2_06_CSHERO_R1 sequence", "###" );
        l_U159 = 0;
         /* TERMINATEISEQ */ sub_4857( -474937844, 1 );
         /* LOADISEQ */ sub_5164( -474937844, 1 );
         /* LOADMODEL */ sub_5462( 43800727, 1 );
         /* P_CREATEPEDSTRUCT */ sub_5729( ref uVar6, l_U161, l_U164, 43800727, 4, 1, 0, 0, 0 );
         /* CLEANPED */ sub_5847( l_U160 );
        l_U160 =  /* CREATEPED */ sub_5933( ref uVar6 );
        if (((IS_PED_DEAD( l_U160 )) == 0) AND ((DOES_PED_EXIST( l_U160 )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U160, 1 );
            uVar19 =  /* F_GIVEPEDWEAPON */ sub_1233( l_U160, -1074756423, 200, 0, 1 );
        }
        ISEQ_REGISTER_ENTITY( -474937844, "csheror1_male", l_U160, 0 );
        ISEQ_START( -474937844 );
        l_U157 = 0;
    }
    if (l_U158 == 1)
    {
         /* WRITESCRIPTLOG */ sub_1011( "SP", "Killing the S_FAV2_06_CSHERO_R1 sequence", "###" );
         /* TERMINATEISEQ */ sub_4857( -474937844, 1 );
         /* CLEANPED */ sub_5847( l_U160 );
        l_U159 = 0;
        l_U158 = 0;
    }
    if (l_U159 == 0)
    {
        if (((IS_PED_DEAD( l_U160 )) == 0) AND ((DOES_PED_EXIST( l_U160 )) == 1))
        {
            OPEN_SEQUENCE_TASK( ref uVar20 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U165, 3, -1, 1048576000, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( uVar20 );
            TASK_PERFORM_SEQUENCE( l_U160, uVar20 );
            CLEAR_SEQUENCE_TASK( uVar20 );
            l_U159 = 1;
        }
    }
    return;
}

/* P_HANDLE_S_FAV2_09_01_BLEND */ void sub_7843()
{
    vector vVar2;
    float fVar5;
    unknown uVar6;
    unknown uVar7;

    if (l_U112 == 1)
    {
         /* P_FADE_OUT_AND_WAIT */ sub_4283( 250 );
        vVar2 = {16.77525000, 61.79319000, 38.37061000};
        fVar5 = 50.76762000;
         /* TELEPORTPED */ sub_4449(  /* PLAYER_PED_ID */ sub_1129(), vVar2, fVar5 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1129() )) == 0)
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1129(), 1 );
        }
        LOAD_SCENE( vVar2 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1129() )) == 0)
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1129(), 0 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0.00000000, 1065353216, 0 );
         /* P_FADE_IN_AND_WAIT */ sub_1682( 250 );
        l_U112 = 0;
    }
    if (l_U113 == 1)
    {
        ISEQ_UNREGISTER_ENTITY( -622155656, "player" );
        ISEQ_UNREGISTER_ENTITY( -622155656, "door" );
         /* TERMINATEISEQ */ sub_4857( -622155656, 1 );
         /* LOADISEQ */ sub_5164( -622155656, 1 );
         /* LOADMODEL */ sub_5462( 729926863, 1 );
         /* LOADANIMDICT */ sub_8175( "LEVEL_S_FAV2_CP_01", 0, 1 );
         /* P_CREATEDOORSTRUCT */ sub_8380( ref l_U135, 729926863, 15.01210000, 62.11330000, 39.46660000, 0.00000000, 0.00000000, 0.00000000 );
        uVar6 = DOOR_FIND_CLOSEST( l_U135._fU0, l_U135._fU4 );
        if ((DOES_OBJECT_EXIST( uVar6 )) == 1)
        {
            SET_OBJECT_VISIBLE( uVar6, 0 );
            SET_OBJECT_COLLISION( uVar6, 0 );
        }
         /* CLEANOBJECT */ sub_8509( l_U142 );
        l_U142 =  /* CREATEOBJECTNOOFFSET */ sub_8583( 729926863, l_U119, l_U122, 0, 0, 0 );
        if ((DOES_OBJECT_EXIST( l_U142 )) == 1)
        {
            FREEZE_OBJECT_POSITION( l_U142, 1 );
        }
         /* TELEPORTPED */ sub_4449(  /* PLAYER_PED_ID */ sub_1129(), l_U115, l_U118 );
        ISEQ_REGISTER_ENTITY( -622155656, "player",  /* PLAYER_PED_ID */ sub_1129(), 0 );
        ISEQ_REGISTER_ENTITY( -622155656, "door", l_U142, 1 );
        ISEQ_START( -622155656 );
        if (l_U129 == 1)
        {
            WAIT( 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV2_CP_01", "B_OUT_09_01_F2_RIGHT_CAM", 1, l_U125, l_U128, 0, 0 );
        }
        SET_FORCED_AIM_INTENTION_DIRECTION( -0.97693800, 0.18643600, -0.10421700 );
        l_U113 = 0;
    }
    if (l_U114 == 1)
    {
        if (IS_ANIMATED_CAMERA_PLAYING() == 1)
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        l_U134 = 0;
        ISEQ_UNREGISTER_ENTITY( -622155656, "player" );
        ISEQ_UNREGISTER_ENTITY( -622155656, "door" );
         /* TERMINATEISEQ */ sub_4857( -622155656, 1 );
         /* CLEANOBJECT */ sub_8509( l_U142 );
        uVar7 = DOOR_FIND_CLOSEST( l_U135._fU0, l_U135._fU4 );
        if ((DOES_OBJECT_EXIST( uVar7 )) == 1)
        {
            SET_OBJECT_VISIBLE( uVar7, 1 );
            SET_OBJECT_COLLISION( uVar7, 1 );
        }
         /* UNLOADMODEL */ sub_9304( 729926863 );
         /* UNLOADANIMDICT */ sub_9475( "LEVEL_S_FAV2_CP_01" );
        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1129() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1167() )) == 0))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1167(), 1, 0 );
            CLEAR_PED_TASKS(  /* PLAYER_PED_ID */ sub_1129() );
        }
        l_U114 = 0;
    }
    if (l_U134 == 0)
    {
        if (IS_ANIMATED_CAMERA_PLAYING() == 1)
        {
            if (CAMERA_ANIMATED_CURRENT_TIME() >= l_U131)
            {
                RESET_FORCED_AIM_INTENTION_DIRECTION();
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U132, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U133, 1065353216, 0 );
                CAMERA_ANIMATED_STOP( l_U130, 1 );
                l_U134 = 1;
            }
        }
    }
    return;
}

/* LOADANIMDICT */ void sub_8175(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_CREATEDOORSTRUCT */ void sub_8380(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

/* CLEANOBJECT */ void sub_8509(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_8583(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_5462( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* UNLOADMODEL */ void sub_9304(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_1618( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* UNLOADANIMDICT */ void sub_9475(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

/* P_HANDLE_CAV_SHOOT_PLAYER */ void sub_9700()
{
    if (l_U168)
    {
         /* LOADMODEL */ sub_5462( -2029220367, 1 );
         /* LOADMODEL */ sub_5462( 43800727, 1 );
         /* CLEANVEHICLE */ sub_9775( l_U169 );
         /* CLEANPED */ sub_5847( l_U170 );
        l_U169 = CREATE_VEHICLE( -2029220367, (vector( -113.97200000, 520.76800000, -32.52970000)) - 1.48223000, 0, 1, 0 );
        if (NOT (IS_VEHICLE_DEAD( l_U169 )))
        {
            l_U170 = CREATE_PED_INSIDE_VEHICLE( l_U169, 8, 43800727, -1, 0, 0 );
            if (NOT (IS_PED_DEAD( l_U170 )))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U170, 1 );
                if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1129() )))
                {
                    SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1129(), -127.89000000, 525.98000000, -32.46000000, 1 );
                    TASK_VEHICLE_SHOOT_AT_PED( l_U170,  /* PLAYER_PED_ID */ sub_1129() );
                }
            }
        }
        l_U168 = 0;
    }
    return;
}

/* CLEANVEHICLE */ void sub_9775(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}


void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U38 = 0;
    l_U39 = 0;
    l_U40 = 1500;
    l_U53 = 0;
    l_U64 = 0;
    l_U65 = 0;
    l_U102 = 0;
    l_U103 = 0;
    l_U104 = 0;
    l_U434 = 8000;
    l_U435 = 5000;
    l_U500 = 0;
    l_U505 = 0;
    l_U506 = 0;
    l_U507 = 1;
    l_U508 = 0;
    l_U509 = 0;
    l_U510 = 0;
    l_U511 = 0;
    l_U512 = 0;
    l_U513 = 0;
    l_U514 = 0;
    l_U515 = 0;
    l_U516 = 0;
    l_U517 = 0;
    l_U518 = 0;
    l_U519 = {-154.88300000, 238.43200000, -11.87000000};
    l_U522 = {-155.69800000, 238.07400000, -11.87000000};
    l_U525 = {-154.18800000, 239.56400000, -11.87000000};
    l_U528 = 1 - 67.48100000;
    l_U529 = -67.48100000;
    l_U530 = -157.48100000;
    l_U531 = {-153.39000000, 240.36000000, -11.90000000};
    l_U534 = 152.15000000;
    l_U673 = 1;
    l_U674 = 0;
    l_U793 = 0;
     /* WRITESCRIPTLOG */ sub_565( "SP", "Script fav2_CavieraoIntro.sc starting...", 0 );
    l_U103 = 1;
    if (g_U782 == 7)
    {
        if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_701() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_701(), 0, 0 );
        }
    }
    while (IS_EXITFLAG_SET() == 0)
    {
         /* P_HANDLE_CHECKPOINTS */ sub_779();
        if (l_U104 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_8726();
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_ALL */ sub_3243();
     /* P_UNLOAD_ASSETS */ sub_36712();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "fav2_CavieraoIntro" );
    SET_EXITFLAG_RESPONSE();
     /* WRITESCRIPTLOG */ sub_565( "SP", "Script fav2_CavieraoIntro.sc terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_565(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* PLAYER_ID */ void sub_701()
{
    return GET_PLAYER_ID();
}

/* P_HANDLE_CHECKPOINTS */ void sub_779()
{
    int iVar2;

    iVar2 = 0;
    if (g_U782 == 7)
    {
        switch (l_U104)
        {
            case 0:
            if (( /* RESTARTING_CHECKPOINT */ sub_956()) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )))
            {
                l_U104 = 1;
                 /* WRITESCRIPTLOG */ sub_565( "kja", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_1477())
            {
                l_U104 = 2;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_1537( 0 )) == 1)
            {
                l_U104 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )))
            {
                l_U104 = 3;
                 /* WRITESCRIPTLOG */ sub_565( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_565( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_701() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_701(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_887() ))
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_887(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            STOP_SCRIPT_STREAM( 2 );
             /* P_CLEANUP_ALL */ sub_3243();
            l_U104 = 4;
             /* WRITESCRIPTLOG */ sub_565( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_565( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_3860( ref l_U66,  /* PLAYER_PED_ID */ sub_887() );
            l_U104 = 5;
             /* WRITESCRIPTLOG */ sub_565( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_565( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
             /* P_RESET_CHECKPOINT_THREAD */ sub_8480( ref g_U1312[7] );
            l_U103 = 1;
            l_U104 = 0;
             /* WRITESCRIPTLOG */ sub_565( "kja", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    else if (( /* IS_RESTART_ACTIVE */ sub_1477()) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )) == 1))
    {
         /* WRITESCRIPTLOG */ sub_565( "SP", "Player is dead, resetting script thread.", 0 );
         /* P_RESET_CHECKPOINT_THREAD */ sub_8480( ref g_U1312[7] );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* PLAYER_PED_ID */ int sub_887()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_701() );
    }
    return 0;
}

/* RESTARTING_CHECKPOINT */ int sub_956()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        g_U665 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_887(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_701(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_701(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_887() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_887(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_1477()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_1537(int iParam0)
{
    iParam0 = 1;
    switch (l_U39)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1619( ref l_U41 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )))
            {
                l_U40 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_1753( ref l_U41, l_U40, 1, 1 );
             /* STARTTIMER */ sub_1903( ref l_U41 );
        }
        if ( /* ISTIMERDONE */ sub_2036( ref l_U41 ))
        {
             /* WRITESCRIPTLOG */ sub_565( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_701() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_701(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U39 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U39 = 2;
            }
            else
            {
                l_U39 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_565( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_2537();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_565( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_2537();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_1619(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_1753(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_1903(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_2036(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_2537()
{
     /* WRITESCRIPTLOG */ sub_565( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_2612( ref l_U41 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_701() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_701(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U38 = 0;
    l_U38 = l_U38;
    l_U39 = 0;
    return;
}

/* RESETTIMER */ void sub_2612(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_CLEANUP_ALL */ void sub_3243()
{
     /* WRITESCRIPTLOG */ sub_565( "SP", "P_CLEANUP_ALL", 0 );
    ISEQ_UNREGISTER_ENTITY( 1353095170, "execute1_male1" );
    ISEQ_UNREGISTER_ENTITY( 1353095170, "execute1_male2" );
    ISEQ_UNREGISTER_ENTITY( 1353095170, "execute1_male3" );
    ISEQ_TERMINATE( 1353095170 );
    ISEQ_UNREGISTER_ENTITY( 1397217947, "GMED0" );
    ISEQ_TERMINATE( 1397217947 );
    STOP_PARTICLE_FX_LOOPED( l_U433 );
     /* CLEANPEDARRAY */ sub_3443( ref l_U496 );
     /* CLEANPED */ sub_3493( l_U449 );
     /* CLEANPLACEMENT */ sub_3612( l_U336 );
     /* CLEANPLACEMENT */ sub_3612( l_U337 );
     /* CLEANPLACEMENT */ sub_3612( g_U667._fU0 );
     /* RESETTIMER */ sub_2612( ref l_U664 );
     /* RESETTIMER */ sub_2612( ref l_U406 );
     /* RESETTIMER */ sub_2612( ref l_U415 );
     /* RESETTIMER */ sub_2612( ref l_U424 );
    STOP_SCRIPT_STREAM( 2 );
    return;
}

/* CLEANPEDARRAY */ void sub_3443(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_3493( (uParam0^)[I] );
    }
    return;
}

/* CLEANPED */ void sub_3493(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANPLACEMENT */ void sub_3612(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_3860(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_565( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (g_U665)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_4081( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_5245( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5559( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6038( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5559( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6038( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5559( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6038( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_6354( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6038( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_6354( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6038( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (g_U665 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_6928( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_7130( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_887(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (g_U665)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    g_U665 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_565( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_4081(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4143( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_4143(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_5245(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_5559(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_5963( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_5963(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_6038(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_6354(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_5963( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_6928(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_7130(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4143( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_7228( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_7228(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_8480(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_HANDLE_EVENTS */ void sub_8726()
{
    int iVar2;
    unknown uVar3;

    iVar2 = 0;
    switch (l_U103)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_IDLE", 0 );
         /* P_INIT_GAMEPLAY_STRUCTS */ sub_8902();
         /* P_INIT_SCRIPT_VARIABLES */ sub_10757();
         /* P_RESET_MAX_CONTEXTUAL_DIALOGUE */ sub_11099();
         /* SETUP_SCRIPTED_SPEECH */ sub_11218( "SFV2AUD" );
         /* P_CREATE_CAMERA */ sub_11381();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U103 = 2;
         /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_INIT_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_INIT_REQUEST_ASSETS", 0 );
         /* P_REQUEST_ASSETS */ sub_11602();
         /* P_ADD_BACKGROUND_SMOKE_FX */ sub_12885();
        l_U103 = 3;
         /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_INIT_LOAD_ASSETS", 0 );
        case 3:
        if (( /* F_HAVE_ASSETS_LOADED */ sub_13036()) == 1)
        {
            l_U103 = 4;
             /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_SETUP_START_POINT", 0 );
            break;
        }
        return;
        case 4:
         /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_SETUP_START_POINT", 0 );
        if (g_U782 < 7)
        {
            l_U103 = 5;
             /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_WAIT_FOR_HANDOFF", 0 );
        }
        else if ((l_U102 == 0) AND (g_U781 == 7))
        {
            l_U102 = 1;
            if (( /* HAS_SAVEFILE_LOADED */ sub_13593( ref l_U66 )) == 0)
            {
                 /* F_GIVEPEDWEAPON */ sub_6354(  /* PLAYER_PED_ID */ sub_887(), g_U1310, 200, 0, 0 );
                g_U1046 = 1;
            }
            l_U103 = 6;
             /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_DEBUG_WAIT_FOR_PLAYERS_WEAPON", 0 );
        }
        else
        {
            l_U103 = 7;
             /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_SETUP_GAMEPLAY", 0 );
        }
        break;
        case 5:
        if (g_U1041 == 1)
        {
            l_U103 = 7;
             /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_SETUP_GAMEPLAY", 0 );
        }
        break;
        case 6:
         /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_DEBUG_WAIT_FOR_PLAYERS_WEAPON", 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )) == 0)
        {
            uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_887(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
            {
                l_U103 = 7;
                 /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_SETUP_GAMEPLAY", 0 );
            }
        }
        break;
        case 7:
         /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_SETUP_GAMEPLAY", 0 );
         /* P_CREATE_PLACEMENTS */ sub_14313();
         /* P_SETUP_SEARCHABLE_COVERPOINTS */ sub_15461();
         /* P_SETUP_BAGHEAD_SCENE */ sub_15545();
        if (g_U782 < 7)
        {
             /* P_SETDOORLOCKED */ sub_18458( ref l_U338, 0 );
             /* P_OPENDOOR */ sub_18615( ref l_U338, 1, 1, 0.50000000 );
        }
        else
        {
             /* P_CLOSEDOOR */ sub_18784( ref l_U338, 1 );
             /* P_SETDOORLOCKED */ sub_18458( ref l_U338, 1 );
        }
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )) == 0)
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_701(), 1, 0 );
        }
        DO_SCREEN_FADE_IN( 0 );
        l_U508 = 0;
        l_U103 = 8;
         /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_HANDLE_GOTO_CAV_CUTSCENE", 0 );
        break;
        case 8:
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_19064( ref l_U231, 0 ))
        {
             /* WRITESCRIPTLOG */ sub_565( "NS", "POI on Dead CS in Baghead area", 0 );
            if (IS_PED_DEAD( l_U449 ))
            {
                l_U794 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_DEAD_PED_COORDS( l_U449 )};
            }
            else
            {
                l_U794 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U449 )};
            }
             /* P_CREATEPOISTRUCTCOORD */ sub_19412( ref l_U547, 2, 0.00000000, 0.00000000, 0.00000000, l_U794, l_U794, 1.50000000, 3.00000000, 1, 0 );
            l_U674 = 1;
             /* P_SET_INTERACTIVE_TEXT */ sub_20369( ref l_U547, 30, "POI_DEADCS" );
             /* P_SET_POI_FORCE_WALK */ sub_20579( ref l_U547, 0 );
             /* P_SET_POI_AVAILABLE */ sub_20634( ref l_U547, 0 );
             /* P_SET_POI_REUSABLE */ sub_21095( ref l_U547, 1 );
        }
         /* P_HANDLE_BAGHEAD_SEQUENCE */ sub_21143();
         /* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ sub_23834( ref l_U496 );
         /* SET_PLAYER_WALK */ sub_24122( l_U126, l_U147 );
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_19064( ref l_U105, 0 )) == 1)
        {
             /* P_CLOSEDOOR */ sub_18784( ref l_U338, 0 );
             /* CREATETIMER */ sub_1753( ref l_U352, 3550, 1, 0 );
             /* STARTTIMER */ sub_1903( ref l_U352 );
        }
        if (l_U509 == 0)
        {
            if (( /* F_GETDOOROPENRATIO */ sub_24481( ref l_U338 )) == 0.00000000)
            {
                 /* P_SETDOORLOCKED */ sub_18458( ref l_U338, 1 );
            }
            if ((( /* ISTIMERDONE */ sub_2036( ref l_U352 )) == 1) || (( /* F_ISDOORLOCKED */ sub_24598( ref l_U338 )) == 1))
            {
                 /* CO_HANDLE_SAVEDATA */ sub_24701( ref l_U66, 7, 0 );
                l_U509 = 1;
            }
        }
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_19064( ref l_U168, 0 )) == 1)
        {
             /* P_START_CHECKPOINT_THREAD */ sub_30236( ref g_U1312[8] );
             /* P_FAV2_22_EXECUTE_ACTIVATE */ sub_30290();
             /* CREATETIMER */ sub_1753( ref l_U397, 4000, 1, 0 );
             /* STARTTIMER */ sub_1903( ref l_U397 );
            l_U511 = 1;
            l_U508 = 1;
        }
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_19064( ref l_U189, 0 )) == 1)
        {
             /* P_SETDOORLOCKED */ sub_18458( ref l_U345, 0 );
             /* P_OPENDOOR */ sub_18615( ref l_U345, 1, 1, 0.35000000 );
        }
        if ( /* ISTIMERDONE */ sub_2036( ref l_U397 ))
        {
            if (NOT (IS_PED_DEAD( l_U496[2] )))
            {
                ISEQ_REGISTER_ENTITY( 1397217947, "GMED0", l_U496[2], 0 );
                ISEQ_START( 1397217947 );
                 /* CREATETIMER */ sub_1753( ref l_U379, l_U434, 1, 0 );
                 /* STARTTIMER */ sub_1903( ref l_U379 );
            }
        }
        if ( /* ISTIMERDONE */ sub_2036( ref l_U379 ))
        {
             /* P_START_SEARCHING */ sub_30879();
        }
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_19064( ref l_U252, 0 )) == 1)
        {
            SET_EXITFLAG_FOR_SCRIPT( g_U1312[6]._fU32 );
            AUDIO_MUSIC_REQUEST_ONESHOT( "FAV2_ONESHOT_J", 0 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_19064( ref l_U147, 0 ))
        {
            ;
        }
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_19064( ref l_U294, 0 )) == 1)
        {
             /* P_CLOSEDOOR */ sub_18784( ref l_U345, 0 );
            l_U103 = 9;
             /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_FINISHED", 0 );
        }
        if (l_U517 == 0)
        {
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_23887( ref l_U496 )) == 1)
            {
                 /* P_SET_LAST_ALIVE_ATTRIBUTES */ sub_31218();
                l_U517 = 1;
            }
        }
        if (l_U674 == 1)
        {
            if (l_U673 == 1)
            {
                if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_23887( ref l_U496 )) == 0)
                {
                    AUDIO_MUSIC_PLAY_ONESHOT();
                     /* CREATETIMER */ sub_1753( ref l_U775, 15000, 1, 0 );
                     /* STARTTIMER */ sub_1903( ref l_U775 );
                     /* P_SET_POI_AVAILABLE */ sub_20634( ref l_U547, 1 );
                    l_U673 = 0;
                }
            }
             /* P_HANDLE_DEADEND_POI */ sub_31599();
        }
         /* P_HANDLE_TOD */ sub_35894();
         /* P_HANDLE_DIALOGUES */ sub_35968();
        if (NOT (IS_PED_IN_SPHERE_AREA_OF_ANY_ENEMY_PEDS(  /* PLAYER_PED_ID */ sub_887(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_887() ), 50.00000000, 0 )))
        {
             /* P_HANDLE_MAX_CONTEXTUAL_DIALOGUE */ sub_36198();
        }
        break;
        case 9:
         /* WRITESCRIPTLOG */ sub_565( "SP", "eCheckpointState = CHECKPOINT_FINISHED", 0 );
        g_U1042 = 1;
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U103 = 0;
        break;
    }
    return;
}

/* P_INIT_GAMEPLAY_STRUCTS */ void sub_8902()
{
     /* WRITESCRIPTLOG */ sub_565( "SP", "P_INIT_GAMEPLAY_STRUCTS", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9000( ref l_U436, l_U519, l_U528, -1150708025, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9000( ref l_U456[0], l_U522, l_U529, 731221700, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9000( ref l_U456[1], l_U525, l_U530, 1448560763, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_9000( ref l_U456[2], l_U531, l_U534, 702779526, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_9309( ref l_U252, "TRIG_CIV_WINDOW_RUN", -129.88300000, 239.75500000, -9.21426000, 4.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -22.08050000, 1 );
     /* P_CREATETRIGGERBOX */ sub_9309( ref l_U273, "TRIG_CIV_WINDOW_REMOVE", -139.95100000, 245.89700000, -8.78384000, 4.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -17.76460000, 1 );
     /* P_CREATETRIGGERBOX */ sub_9309( ref l_U105, "TRIG_LOCK_GATE", -134.60400000, 239.85500000, -11.69010000, 5.50000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, -95.62000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_9309( ref l_U168, "TRIG_BAGHEAD_ACTIVEATE", -135.88800000, 239.59600000, -13.97170000, 4.00000000, 6.00000000, 8.00000000, 0.00000000, 0.00000000, -93.92290000, 1 );
     /* P_CREATETRIGGERBOX */ sub_9309( ref l_U189, "TRIG_SEARCHING_UFE", -142.88100000, 236.84300000, -13.97170000, 4.00000000, 6.00000000, 8.00000000, 0.00000000, 0.00000000, -77.01740000, 1 );
     /* P_CREATETRIGGERBOX */ sub_9309( ref l_U147, "TRIG_FORCE_PLAYER_UNWALK", -155.88900000, 247.00700000, -18.81000000, 8.00000000, 8.00000000, 8.00000000, 0.00000000, 0.00000000, -31.88000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_9309( ref l_U126, "TRIG_FORCE_PLAYER_WALK", -164.56800000, 252.60100000, -18.81000000, 8.00000000, 8.00000000, 8.00000000, 0.00000000, 0.00000000, -31.88000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_9309( ref l_U210, "TRIG_BAGHEAD_INTERRUPT", -145.55000000, 237.22000000, -13.97000000, 4.00000000, 6.00000000, 8.00000000, 0.00000000, 0.00000000, 8.65343000, 1 );
     /* P_CREATETRIGGERBOX */ sub_9309( ref l_U231, "tbCreateBagHeadPoi", -152.63000000, 239.38000000, -12.75000000, 3.00000000, 15.67000000, 5.00000000, 0.00000000, 0.00000000, -43.53000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_9309( ref l_U294, "TRIG_CAV_INTRO_FINISHED", -168.16300000, 258.61800000, -20.48000000, 12.00000000, 12.00000000, 8.00000000, 0.00000000, 0.00000000, -50.22000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_9309( ref l_U315, "TRIG_BAGHEAD_ENEMY_INTERRUPT", -144.90000000, 235.26000000, -13.97000000, 4.00000000, 6.00000000, 8.00000000, 0.00000000, 0.00000000, -53.20000000, 1 );
     /* P_CREATEDOORSTRUCT */ sub_10274( ref l_U338, 10345122, -129.55490000, 238.26100000, -7.62620000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORMINMAXLIMIT */ sub_10352( ref l_U338, 0.00000000, 95.00000000 );
     /* P_CREATEDOORSTRUCT */ sub_10274( ref l_U345, 10345122, -162.68200000, 250.12000000, -15.49700000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORMINMAXLIMIT */ sub_10352( ref l_U345, 0.00000000, 95.00000000 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_9000(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATETRIGGERBOX */ void sub_9309(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEDOORSTRUCT */ void sub_10274(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

/* P_SETDOORMINMAXLIMIT */ void sub_10352(int iParam0, float fParam1, float fParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_10387( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10471( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        PRINTSTRING( "[SP]### Error: Door fMinLimit greater than fMaxLimit (default min:-81.0 max:81.0) ###" );
        PRINTNL();
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_10387(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_10471(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_INIT_SCRIPT_VARIABLES */ void sub_10757()
{
    int I;

     /* WRITESCRIPTLOG */ sub_565( "SP", "P_INIT_SCRIPT_VARIABLES", 0 );
    for ( I = 0; I < l_U501; I++ )
    {
        l_U501[0] = 0;
    }
    l_U505 = 0;
    l_U506 = 0;
    l_U507 = 1;
    l_U508 = 0;
    l_U509 = 0;
    l_U510 = 0;
    l_U511 = 0;
    l_U512 = 0;
    l_U513 = 0;
    l_U514 = 0;
    l_U515 = 0;
    l_U516 = 0;
    l_U500 = 0;
    l_U673 = 1;
    l_U674 = 0;
    l_U517 = 0;
    l_U518 = 0;
     /* RESETTIMER */ sub_2612( ref l_U352 );
     /* RESETTIMER */ sub_2612( ref l_U361 );
     /* RESETTIMER */ sub_2612( ref l_U397 );
     /* RESETTIMER */ sub_2612( ref l_U370 );
     /* RESETTIMER */ sub_2612( ref l_U784 );
     /* RESETTIMER */ sub_2612( ref l_U775 );
     /* RESETTIMER */ sub_2612( ref l_U406 );
     /* RESETTIMER */ sub_2612( ref l_U415 );
     /* RESETTIMER */ sub_2612( ref l_U424 );
     /* CREATETIMER */ sub_1753( ref l_U406, 500, 1, 0 );
     /* CREATETIMER */ sub_1753( ref l_U415, 100, 1, 0 );
     /* CREATETIMER */ sub_1753( ref l_U424, 1450, 1, 0 );
    return;
}

/* P_RESET_MAX_CONTEXTUAL_DIALOGUE */ void sub_11099()
{
     /* WRITESCRIPTLOG */ sub_565( "NS", "P_RESET_MAX_CONTEXTUAL_DIALOGUE", 0 );
    l_U64 = 0;
    l_U65 = 0;
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_11218(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_11262();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_11262()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_CREATE_CAMERA */ void sub_11381()
{
     /* WRITESCRIPTLOG */ sub_565( "ka", "P_CREATE_CAMERA()", 0 );
    SET_CAM_VIEW_MODE( 0 );
    return;
}

/* P_REQUEST_ASSETS */ void sub_11602()
{
     /* WRITESCRIPTLOG */ sub_565( "SP", "P_REQUEST_ASSETS", 0 );
     /* LOADMODEL */ sub_11667( -692286235, 0 );
     /* LOADMODEL */ sub_11667( 2010586489, 0 );
     /* LOADMODEL */ sub_11667( g_U775, 0 );
     /* LOADWEAPON */ sub_11940( -378310276, 0 );
     /* LOADWEAPON */ sub_11940( -1629340685, 0 );
     /* LOADISEQ */ sub_12102( 1353095170, 0 );
     /* LOADISEQ */ sub_12102( 1397217947, 0 );
     /* LOADANIMDICT */ sub_12432( "npc_pstl_cover_grenade", 0, 0 );
     /* LOADANIMDICT */ sub_12432( "npc_rifle_cover_grenade", 0, 0 );
     /* LOADANIMDICT */ sub_12432( "mped_grenade_core", 0, 0 );
     /* LOADANIMDICT */ sub_12432( "EXPL_CAM", 0, 0 );
    STOP_SCRIPT_STREAM( 2 );
     /* LOADSCRIPTSTREAM */ sub_12703( "S_FAV2_BAGHEAD", 2, 0 );
    return;
}

/* LOADMODEL */ void sub_11667(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_5963( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADWEAPON */ void sub_11940(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load weapon: {!f1} : {1} ###", 2, 1, 199730165, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADISEQ */ void sub_12102(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* LOADANIMDICT */ void sub_12432(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADSCRIPTSTREAM */ void sub_12703(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for script stream to be loaded: {} : {} ###", 2, 1537, uParam0, 513, uParam1 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_ADD_BACKGROUND_SMOKE_FX */ void sub_12885()
{
     /* WRITESCRIPTLOG */ sub_565( "ka", "P_ADD_BACKGROUND_SMOKE_FX", 0 );
    return;
}

/* F_HAVE_ASSETS_LOADED */ int sub_13036()
{
    if ((HAS_ANIM_DICT_LOADED( "EXPL_CAM", 0 )) AND ((HAS_ANIM_DICT_LOADED( "mped_grenade_core", 0 )) AND ((HAS_ANIM_DICT_LOADED( "npc_rifle_cover_grenade", 0 )) AND ((HAS_ANIM_DICT_LOADED( "npc_pstl_cover_grenade", 0 )) AND (((LOAD_SCRIPT_STREAM( "S_FAV2_BAGHEAD", 2 )) == 1) AND (((ISEQ_IS_LOADED( 1397217947 )) == 1) AND (((ISEQ_IS_LOADED( 1353095170 )) == 1) AND (((HAS_WEAPON_LOADED( -1629340685 )) == 1) AND (((HAS_WEAPON_LOADED( -378310276 )) == 1) AND (((HAS_MODEL_LOADED( g_U775 )) == 1) AND (((HAS_MODEL_LOADED( 2010586489 )) == 1) AND ((HAS_MODEL_LOADED( -692286235 )) == 1))))))))))))
    {
        return 1;
    }
    return 0;
}

/* HAS_SAVEFILE_LOADED */ int sub_13593(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_565( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            g_U665 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, g_U666 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_3860( uParam0,  /* PLAYER_PED_ID */ sub_887() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_CREATE_PLACEMENTS */ void sub_14313()
{
     /* WRITESCRIPTLOG */ sub_565( "SP", "P_CREATE_PLACEMENTS", 0 );
     /* CLEANPLACEMENT */ sub_3612( l_U336 );
    l_U336 =  /* CREATEPLACEMENT */ sub_14433( -4072149, -156.39000000, 241.66000000, -11.04000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 1119092736 );
    if ((DOES_PLACEMENT_EXIST( l_U336 )) == 1)
    {
        ;
    }
    if ((DOES_PLACEMENT_EXIST( l_U337 )) == 1)
    {
        ;
    }
     /* P_CREATE_S_FV2_GG_97_01 */ sub_14646();
    return;
}

/* CREATEPLACEMENT */ void sub_14433(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_CREATE_S_FV2_GG_97_01 */ void sub_14646()
{
     /* WRITESCRIPTLOG */ sub_565( "CO", "P_CREATE_S_FV2_GG_97_01", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_14774( ref g_U667, g_U775, 130963054, -509338974, -132.62000000, 237.70000000, -10.63000000, 1.50000000, 0.00000000, -10.00000000, "" );
     /* P_CREATECOLLECTIBLE */ sub_14931( ref g_U667 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_14774(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_565( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_14931(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_565( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_15014( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_565( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_565( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_15014( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_3612( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_14433( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_565( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_565( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_15014(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* P_SETUP_SEARCHABLE_COVERPOINTS */ void sub_15461()
{
     /* WRITESCRIPTLOG */ sub_565( "SP", "P_CREATE_PLACEMENTS", 0 );
    return;
}

/* P_SETUP_BAGHEAD_SCENE */ void sub_15545()
{
    int I;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_565( "SP", "P_SETUP_BAGHEAD_SCENE", 0 );
     /* P_SETUP_AI_GROUP */ sub_15624( ref l_U450, 0.70000000, 0 );
     /* CLEANPED */ sub_3493( l_U449 );
    l_U449 =  /* CREATEPED */ sub_16023( ref l_U436 );
    if (((IS_PED_DEAD( l_U449 )) == 0) AND ((DOES_PED_EXIST( l_U449 )) == 1))
    {
        SET_PED_RELATIONSHIP( l_U449, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U449, 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U449, 1 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( l_U449, 1 );
        SET_PED_NAME_DEBUG( l_U449, "piExecutedCS" );
    }
    for ( I = 0; I < l_U496; I++ )
    {
         /* CLEANPED */ sub_3493( l_U496[I] );
        l_U496[I] =  /* P_CREATEPED */ sub_16888( ref l_U456[I] );
        if (((IS_PED_DEAD( l_U496[I] )) == 0) AND ((DOES_PED_EXIST( l_U496[I] )) == 1))
        {
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_17453( l_U496[I], ref l_U450 );
            if (I == 0)
            {
                SET_PED_AI_TEMPLATE( l_U496[I], "AIT_UFE_TOUGH" );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U496[I], 1 );
                SET_PED_COMBAT_MOVEMENT( l_U496[I], 2 );
                GIVE_WEAPON_TO_PED_HOLSTER( l_U496[I], g_U1310, 200, 0 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5559( l_U496[I], -378310276, 5, 25000, 0 );
            }
            else if (I == 1)
            {
                SET_PED_AI_TEMPLATE( l_U496[I], "AIT_UFE_AVERAGE" );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U496[I], 1 );
                SET_PED_COMBAT_MOVEMENT( l_U496[I], 2 );
                 /* F_GIVEPEDWEAPON */ sub_6354( l_U496[I], g_U1310, 25000, 0, 0 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5559( l_U496[I], -1629340685, 5, 25000, 0 );
            }
            else if (I == 2)
            {
                SET_PED_AI_TEMPLATE( l_U496[I], "AIT_UFE_AVERAGE" );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U496[I], 1 );
                SET_PED_COMBAT_MOVEMENT( l_U496[I], 2 );
                uVar3 =  /* F_GIVEPEDWEAPON */ sub_6354( l_U496[I], g_U1309, 25000, 0, 0 );
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5559( l_U496[I], -378310276, 5, 25000, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
                {
                    SET_WEAPON_LIGHT_DATA_BY_NAME( uVar3, "Flashlight_Favela2" );
                }
            };;;
        }
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_18303( ref l_U496, "piExecuteMale_" );
    return;
}

/* P_SETUP_AI_GROUP */ void sub_15624(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* CREATEPED */ void sub_16023(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_11667( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_16514( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_16615( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_16514(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_16615(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_CREATEPED */ void sub_16888(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_11667( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    return iParam0->_fU40;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_17453(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_5963( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_15624( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_15624( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_18303(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* P_SETDOORLOCKED */ void sub_18458(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_10387( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10471( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_OPENDOOR */ void sub_18615(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_10387( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10471( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* P_CLOSEDOOR */ void sub_18784(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_10387( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10471( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_19064(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_19140(  /* PLAYER_PED_ID */ sub_887(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* F_ISPEDINTRIGGERBOX */ int sub_19140(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_CREATEPOISTRUCTCOORD */ void sub_19412(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
     /* P_CREATEBLANKPOISTRUCT */ sub_19452( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
     /* P_CREATEPOIGLINT */ sub_19845( iParam0 );
    return;
}

/* P_CREATEBLANKPOISTRUCT */ void sub_19452(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

/* P_CREATEPOIGLINT */ void sub_19845(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
     /* P_INITPOIGLINT */ sub_19943( iParam0 );
    return;
}

/* P_INITPOIGLINT */ void sub_19943(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                 /* P_ENABLEPOIGLINT */ sub_20019( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                 /* P_ENABLEPOIGLINT */ sub_20019( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                 /* P_ENABLEPOIGLINT */ sub_20019( iParam0, 1 );
            }
            else
            {
                 /* P_ENABLEPOIGLINT */ sub_20019( iParam0, 0 );
            };;;
        }
        else
        {
             /* P_ENABLEPOIGLINT */ sub_20019( iParam0, 0 );
        }
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_20019( iParam0, 0 );
    }
    return;
}

/* P_ENABLEPOIGLINT */ void sub_20019(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

/* P_SET_INTERACTIVE_TEXT */ void sub_20369(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
     /* P_INITINTERACTIVETEXT */ sub_20425( iParam0 );
    return;
}

/* P_INITINTERACTIVETEXT */ void sub_20425(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

/* P_SET_POI_FORCE_WALK */ void sub_20579(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

/* P_SET_POI_AVAILABLE */ void sub_20634(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
     /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_20698( iParam0 );
    return;
}

/* P_UPDATEINTERACTIONTEXTAVAILABLE */ void sub_20698(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if (( /* F_ISACTIONINGAVAILABLE */ sub_20794( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if (( /* F_ISACTIONINGAVAILABLE */ sub_20794( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

/* F_ISACTIONINGAVAILABLE */ int sub_20794(int iParam0)
{
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_701() )) == 0))
    {
        if (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_887() )) == 1) || (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_887() )) == 1) || (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_887() )) == 1) || (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_887() )) == 1) || (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_887() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_887() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

/* P_SET_POI_REUSABLE */ void sub_21095(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

/* P_HANDLE_BAGHEAD_SEQUENCE */ void sub_21143()
{
    int I;

    if (l_U507 == 1)
    {
        if (l_U506 == 1)
        {
            if ((IS_PED_DEAD( l_U449 )) || (NOT (IS_PED_DEAD( l_U449 ))))
            {
                if ((GET_PED_SPEED( l_U449 )) < 0.00100000)
                {
                     /* WRITESCRIPTLOG */ sub_565( "NS", "FREEZING bag head", 0 );
                    l_U507 = 0;
                }
            }
        }
    }
    if (l_U508)
    {
        if (NOT l_U505)
        {
            for ( I = 0; I < l_U496; I++ )
            {
                if ((IS_PED_DEAD( l_U496[I] )) || (IS_PED_INJURED( l_U496[I] )))
                {
                     /* WRITESCRIPTLOG */ sub_565( "ka", "One of the UFE are injured or dead", 0 );
                    l_U505 = 1;
                }
            }
            if ( /* F_HAD_MAX_ALERTED_UFE */ sub_21436())
            {
                 /* WRITESCRIPTLOG */ sub_565( "ka", "Max has alerted UFE", 0 );
                l_U505 = 1;
            }
            if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_21955( ref l_U210,  /* PLAYER_PED_ID */ sub_887(), 0 ))
            {
                 /* WRITESCRIPTLOG */ sub_565( "ka", "tbBagheadInterrupt", 0 );
                l_U505 = 1;
            }
            if (l_U505)
            {
                 /* WRITESCRIPTLOG */ sub_565( "ka", "Interrupt was set to true.. ", 0 );
                if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )) == 0) AND (((IS_PED_DEAD( l_U496[2] )) == 0) AND ((DOES_PED_EXIST( l_U496[2] )) == 1)))
                {
                    PED_SET_ACTION_INTENTION( l_U496[2], 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U496[2], 0 );
                    CLEAR_PED_TASKS( l_U496[2] );
                    REGISTER_TARGET( l_U496[2],  /* PLAYER_PED_ID */ sub_887() );
                    TASK_COMBAT_PED( l_U496[2],  /* PLAYER_PED_ID */ sub_887() );
                }
                ISEQ_UNREGISTER_ENTITY( 1353095170, "execute1_male1" );
                ISEQ_UNREGISTER_ENTITY( 1353095170, "execute1_male2" );
                ISEQ_UNREGISTER_ENTITY( 1353095170, "execute1_male3" );
                ISEQ_TERMINATE( 1353095170 );
                ISEQ_UNREGISTER_ENTITY( 1397217947, "GMED0" );
                ISEQ_TERMINATE( 1397217947 );
                if (((IS_PED_DEAD( l_U449 )) == 0) AND ((DOES_PED_EXIST( l_U449 )) == 1))
                {
                    SET_PED_AS_ONE_SHOT_KILL( l_U449, 1 );
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U449, 1 );
                    SET_PED_CAN_BE_TARGETTED( l_U449, 0 );
                    SET_PED_CAN_BE_MELEED( l_U449, 0 );
                    SET_PED_AIM_LOCKONABLE( l_U449, 0 );
                    SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U449, 1 );
                    STOP_PED_SPEAKING( l_U449, 1 );
                    STOP_SCRIPT_STREAM( 2 );
                     /* P_KILL_PED */ sub_22605( l_U449 );
                    l_U506 = 1;
                }
                 /* STARTTIMER */ sub_1903( ref l_U406 );
                 /* STARTTIMER */ sub_1903( ref l_U415 );
                 /* STARTTIMER */ sub_1903( ref l_U424 );
                if (((IS_PED_DEAD( l_U496[1] )) == 0) AND ((DOES_PED_EXIST( l_U496[1] )) == 1))
                {
                    ;
                }
                l_U508 = 0;
            }
        }
        if (NOT l_U505)
        {
            if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_21955( ref l_U315, l_U496[2], 0 ))
            {
                 /* WRITESCRIPTLOG */ sub_565( "CO", "Patroller hit the trigger, break out now!!", 0 );
                if (NOT (IS_PED_DEAD( l_U449 )))
                {
                    SET_PED_FREEZE_PROCESSING( l_U449, 1 );
                    SET_PED_AS_ONE_SHOT_KILL( l_U449, 1 );
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U449, 1 );
                    SET_PED_CAN_BE_TARGETTED( l_U449, 0 );
                    SET_PED_CAN_BE_MELEED( l_U449, 0 );
                    SET_PED_AIM_LOCKONABLE( l_U449, 0 );
                    SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U449, 1 );
                    STOP_PED_SPEAKING( l_U449, 1 );
                }
                 /* WRITESCRIPTLOG */ sub_565( "CO", "ATTACK PLAYER!", 0 );
                if ((NOT (IS_PED_DEAD( l_U496[2] ))) AND (DOES_PED_EXIST( l_U496[2] )))
                {
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U496[2], 0 );
                    CLEAR_PED_TASKS( l_U496[2] );
                    SET_PED_ALERTNESS( l_U496[2], 3 );
                    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )))
                    {
                        REGISTER_TARGET( l_U496[2],  /* PLAYER_PED_ID */ sub_887() );
                        TASK_COMBAT_PED( l_U496[2],  /* PLAYER_PED_ID */ sub_887() );
                    }
                     /* CREATETIMER */ sub_1753( ref l_U388, 1500, 1, 0 );
                     /* STARTTIMER */ sub_1903( ref l_U388 );
                }
                l_U508 = 0;
            }
        }
    }
    if (( /* ISTIMERDONE */ sub_2036( ref l_U388 )) == 1)
    {
         /* STARTTIMER */ sub_1903( ref l_U406 );
         /* STARTTIMER */ sub_1903( ref l_U415 );
         /* STARTTIMER */ sub_1903( ref l_U424 );
    }
    if ( /* ISTIMERDONE */ sub_2036( ref l_U406 ))
    {
        if (((IS_PED_DEAD( l_U496[0] )) == 0) AND ((DOES_PED_EXIST( l_U496[0] )) == 1))
        {
             /* WRITESCRIPTLOG */ sub_565( "SA", "Triggering piExecuteMale[0]", 0 );
            PED_SET_ACTION_INTENTION( l_U496[0], 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U496[0], 0 );
            CLEAR_PED_TASKS( l_U496[0] );
            REGISTER_TARGET( l_U496[0],  /* PLAYER_PED_ID */ sub_887() );
            TASK_COMBAT_PED( l_U496[0],  /* PLAYER_PED_ID */ sub_887() );
        }
    }
    if ( /* ISTIMERDONE */ sub_2036( ref l_U415 ))
    {
        if (((IS_PED_DEAD( l_U496[1] )) == 0) AND ((DOES_PED_EXIST( l_U496[1] )) == 1))
        {
             /* WRITESCRIPTLOG */ sub_565( "SA", "Triggering piExecuteMale[1]", 0 );
            PED_SET_ACTION_INTENTION( l_U496[1], 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U496[1], 0 );
            CLEAR_PED_TASKS( l_U496[1] );
            REGISTER_TARGET( l_U496[1],  /* PLAYER_PED_ID */ sub_887() );
            TASK_COMBAT_PED( l_U496[1],  /* PLAYER_PED_ID */ sub_887() );
        }
    }
    if ( /* ISTIMERDONE */ sub_2036( ref l_U424 ))
    {
        if (((IS_PED_DEAD( l_U496[2] )) == 0) AND ((DOES_PED_EXIST( l_U496[2] )) == 1))
        {
             /* WRITESCRIPTLOG */ sub_565( "SA", "Triggering piExecuteMale[2]", 0 );
            PED_SET_ACTION_INTENTION( l_U496[2], 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U496[2], 0 );
            CLEAR_PED_TASKS( l_U496[2] );
            REGISTER_TARGET( l_U496[2],  /* PLAYER_PED_ID */ sub_887() );
            TASK_COMBAT_PED( l_U496[2],  /* PLAYER_PED_ID */ sub_887() );
        }
    }
    return;
}

/* F_HAD_MAX_ALERTED_UFE */ int sub_21436()
{
    unknown uVar2;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )))
    {
        if (IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_887() ))
        {
            l_U510 = 1;
        }
        if ( /* ISTIMERDONE */ sub_2036( ref l_U361 ))
        {
            l_U510 = 1;
        }
        uVar2 =  /* PLAYER_PED_ID */ sub_887();
        if (HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_887() ), 25.00000000, 1, ref uVar2 ))
        {
             /* WRITESCRIPTLOG */ sub_565( "AT", "Shots fired! Alerting UFE!", 0 );
            return 1;
        }
        if (l_U510)
        {
            if (IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_887() ))
            {
                l_U500 = 1;
            }
            if (l_U500 == 1)
            {
                if (NOT (IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_887() )))
                {
                     /* WRITESCRIPTLOG */ sub_565( "AT", "Max left cover! Alerting UFE!", 0 );
                    l_U500 = 0;
                    return 1;
                }
            }
            if (IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_887() ))
            {
                if ((l_U370._fU16) || ( /* ISTIMERDONE */ sub_2036( ref l_U370 )))
                {
                    if (IS_BUTTON_PRESSED( 0, 5 ))
                    {
                         /* WRITESCRIPTLOG */ sub_565( "AT", "Max is aiming! Alerting UFE!", 0 );
                        return 1;
                    }
                }
            }
            if (IS_PLAYER_SHOOTDODGING())
            {
                 /* WRITESCRIPTLOG */ sub_565( "AT", "Max is shootdodging! Alerting UFE!", 0 );
                return 1;
            }
        }
    }
    return 0;
}

/* F_ISPEDINTRIGGERBOXFIRSTTIME */ void sub_21955(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 =  /* F_ISPEDINTRIGGERBOX */ sub_19140( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

/* P_KILL_PED */ void sub_22605(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* F_ASSIGN_BULLET_CAM_TO_LAST_LIVING_PED */ void sub_23834(unknown uParam0)
{
    int I;

    if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_23887( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_23887(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* SET_PLAYER_WALK */ boolean sub_24122(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41)
{
    if (l_U53)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )))
        {
            if ( /* F_ISPEDINTRIGGERBOX */ sub_19140(  /* PLAYER_PED_ID */ sub_887(), uParam21 ))
            {
                 /* WRITESCRIPTLOG */ sub_565( "CO", "FORCE UNWALK", "******" );
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_887(), 0 );
                SET_CAN_ROLL_DODGE(  /* PLAYER_PED_ID */ sub_887(), 1 );
                SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_701(), 1 );
                l_U53 = 0;
            }
        }
    }
    if (NOT l_U53)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )))
        {
            if ( /* F_ISPEDINTRIGGERBOX */ sub_19140(  /* PLAYER_PED_ID */ sub_887(), uParam0 ))
            {
                 /* WRITESCRIPTLOG */ sub_565( "CO", "FORCE WALK", "******" );
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_887(), 1 );
                SET_CAN_ROLL_DODGE(  /* PLAYER_PED_ID */ sub_887(), 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_701(), 0 );
                l_U53 = 1;
            }
        }
    }
    return NOT l_U53;
}

/* F_GETDOOROPENRATIO */ void sub_24481(int iParam0)
{
    int iVar3;
    float Result;

    if (( /* F_DOESDOOREXIST */ sub_10387( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10471( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

/* F_ISDOORLOCKED */ void sub_24598(int iParam0)
{
    unknown Result;
    unknown uVar4;

    if (( /* F_DOESDOOREXIST */ sub_10387( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10471( iParam0 );
    }
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref Result, ref uVar4 );
    return Result;
}

/* CO_HANDLE_SAVEDATA */ void sub_24701(int iParam0, int iParam1, unknown uParam2)
{
     /* WRITESCRIPTLOG */ sub_565( "CO", "CO_HANDLE_SAVEDATA : Saving Data", 0 );
    if ((g_U782 < iParam1) || (NOT iParam0->_fU0))
    {
         /* WRITESCRIPTLOG */ sub_565( "CO", "CO_HANDLE_SAVEDATA : Saved Data", 0 );
         /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_24891( iParam0, iParam1,  /* PLAYER_PED_ID */ sub_887(), g_U783[iParam1], g_U910[iParam1], g_U953[iParam1], g_U996[iParam1], uParam2 );
    }
    g_U782 = iParam1;
     /* P_SETUP_TIMECYCLE */ sub_29505( g_U782 );
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_24891(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_565( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_565( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_7130( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_25182( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_25659( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_25659( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25919( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_25659( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25919( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25919( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_25659( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25919( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25919( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25919( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_25659( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25919( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25919( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25919( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_25919( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_27499( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, g_U666, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_565( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_25182(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4143( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_565( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_565( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_25659(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_25919(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_27499(int iParam0)
{
     /* WRITE_STRING */ sub_5963( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_27587( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_27664( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_27664( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_27664( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_27664( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_27664( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_28534( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU52 );
     /* WRITE_STRING */ sub_5963( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU96 );
     /* WRITE_STRING */ sub_5963( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU100 );
     /* WRITE_STRING */ sub_5963( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU104 );
     /* WRITE_STRING */ sub_5963( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU108 );
     /* WRITE_STRING */ sub_5963( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU112 );
     /* WRITE_STRING */ sub_5963( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU116 );
     /* WRITE_STRING */ sub_5963( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU120 );
     /* WRITE_STRING */ sub_5963( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU124 );
     /* WRITE_STRING */ sub_5963( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU128 );
     /* WRITE_STRING */ sub_5963( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_27833( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_27833( g_U666 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_27833( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_27587(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_27664(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_27833(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_28534(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_SETUP_TIMECYCLE */ void sub_29505(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_565( "CO", "P_SETUP_INITIAL_TIMECYCLE", 0 );
    switch (uParam0)
    {
        case 0:
        case 1:
        case 2:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
        case 3:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 0 );
        break;
        case 4:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 10 );
        break;
        case 5:
        if (g_U1046 == 1)
        {
             /* WRITESCRIPTLOG */ sub_565( "kja", "MCE_UFE_RUN bTimeofDayReleased = TRUE", 0 );
            FREEZE_TIME_OF_DAY( 20, 10 );
            break;
        }
         /* WRITESCRIPTLOG */ sub_565( "kja", "MCE_UFE_RUN bTimeofDayReleased = FALSE: SO WE're SETTING WEATHER AND TOD TO 20:20", 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 20, 10 );
        case 6:
        case 7:
        case 8:
        if (g_U1046 == 1)
        {
            ;
        }
        else
        {
            SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
            SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
            FREEZE_TIME_OF_DAY( 21, 0 );
        }
        break;
        case 9:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 21, 0 );
        break;
        case 10:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 22, 0 );
        break;
        default:
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
    }
    return;
}

/* P_START_CHECKPOINT_THREAD */ void sub_30236(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* P_FAV2_22_EXECUTE_ACTIVATE */ void sub_30290()
{
     /* WRITESCRIPTLOG */ sub_565( "SP", "P_FAV2_22_EXECUTE_ACTIVATE", 0 );
     /* TELEPORTPED */ sub_30385( l_U449, l_U519, l_U528 );
     /* TELEPORTPED */ sub_30385( l_U496[0], l_U522, l_U529 );
     /* TELEPORTPED */ sub_30385( l_U496[1], l_U525, l_U530 );
     /* TELEPORTPED */ sub_30385( l_U496[2], l_U531, l_U534 );
    ISEQ_REGISTER_ENTITY( 1353095170, "execute1_male1", l_U449, 0 );
    ISEQ_REGISTER_ENTITY( 1353095170, "execute1_male2", l_U496[0], 0 );
    ISEQ_REGISTER_ENTITY( 1353095170, "execute1_male3", l_U496[1], 0 );
    ISEQ_START( 1353095170 );
     /* CREATETIMER */ sub_1753( ref l_U370, 11250, 1, 0 );
     /* STARTTIMER */ sub_1903( ref l_U370 );
    return;
}

/* TELEPORTPED */ void sub_30385(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_START_SEARCHING */ void sub_30879()
{
     /* WRITESCRIPTLOG */ sub_565( "SP", "P_START_SEARCHING", 0 );
    if (NOT (IS_PED_DEAD( l_U496[2] )))
    {
        PED_SET_ACTION_INTENTION( l_U496[2], 47, -1, 0.00000000, 0.00000000, 0.00000000 );
         /* CREATETIMER */ sub_1753( ref l_U361, l_U435, 1, 0 );
         /* STARTTIMER */ sub_1903( ref l_U361 );
    }
    return;
}

/* P_SET_LAST_ALIVE_ATTRIBUTES */ void sub_31218()
{
    if ((IS_PED_DEAD( l_U496[0] )) == 0)
    {
        SET_PED_COMBAT_MOVEMENT( l_U496[0], 2 );
        SET_PED_COMBAT_ATTRIBUTES( l_U496[0], 1024, 1 );
        SET_PED_COMBAT_RANGE_MAX( l_U496[0], 2.00000000 );
    }
    else if ((IS_PED_DEAD( l_U496[1] )) == 0)
    {
        SET_PED_COMBAT_MOVEMENT( l_U496[1], 2 );
        SET_PED_COMBAT_ATTRIBUTES( l_U496[1], 1024, 1 );
        SET_PED_COMBAT_RANGE_MAX( l_U496[1], 2.00000000 );
    }
    else if ((IS_PED_DEAD( l_U496[2] )) == 0)
    {
        SET_PED_COMBAT_MOVEMENT( l_U496[2], 2 );
        SET_PED_COMBAT_ATTRIBUTES( l_U496[2], 1024, 1 );
        SET_PED_COMBAT_RANGE_MAX( l_U496[2], 2.00000000 );
    };;;
    return;
}

/* P_HANDLE_DEADEND_POI */ void sub_31599()
{
    if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "sfav2_DeadRes" )))
    {
        if (( /* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ sub_31665( ref l_U547 )) == 1)
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_32000( ref l_U537 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_32111( 0,  /* PLAYER_PED_ID */ sub_887(), "MAX", ref l_U537, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_32111( 1,  /* PLAYER_PED_ID */ sub_887(), "MAX", ref l_U537, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_32381( "EXPLORE_ITEM", ref l_U537, 8, 1 );
        }
        if (( /* F_HANDLE_POI */ sub_33283( ref l_U547 )) == 1)
        {
            FOUND_EXPLORATION_ITEM( "sfav2_DeadRes" );
             /* WRITESCRIPTLOG */ sub_565( "CCB", "Playing SFV2_MADFVRSA speech.", 0 );
             /* KILL_ANY_MISSION_SPEECH */ sub_35533( 0 );
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_32000( ref l_U755 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )))
            {
                 /* WRITESCRIPTLOG */ sub_565( "CCB", "Adding PLAYER_PED_ID ped for sss_SFV2_MADFVRSA script speech.", 0 );
                 /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_32111( 0,  /* PLAYER_PED_ID */ sub_887(), "MAX", ref l_U755, 2, 0 );
            }
             /* PLAY_SINGLE_SPEECH */ sub_32381( "SFV2_MADFVRSA", ref l_U755, 7, 1 );
        }
    }
    return;
}

/* F_POI_CAN_PLAY_UNAVALIABLE_MONO */ int sub_31665(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND (( /* F_IS_POI_AVAILABLE */ sub_31711( iParam0 )) == 0)))
    {
        if ((( /* F_HASACTIONBEENPRESSED */ sub_31896()) == 1) AND (((IS_PED_RELOADING(  /* PLAYER_PED_ID */ sub_887() )) == 0) AND (((IS_PED_GETTING_UP(  /* PLAYER_PED_ID */ sub_887() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP(  /* PLAYER_PED_ID */ sub_887() )) == 0) AND (((IS_PED_IN_COVER(  /* PLAYER_PED_ID */ sub_887() )) == 0) AND (((IS_PED_DUCKING(  /* PLAYER_PED_ID */ sub_887() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

/* F_IS_POI_AVAILABLE */ void sub_31711(int iParam0)
{
    return iParam0->_fU56;
}

/* F_HASACTIONBEENPRESSED */ int sub_31896()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_32000(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_32111(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_32381(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_32426( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_32426(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_32513( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_32513(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_32565( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_33083( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_32565(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_33083(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* F_HANDLE_POI */ int sub_33283(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_887() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_19140(  /* PLAYER_PED_ID */ sub_887(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if (( /* F_ISPEDINTRIGGERBOX */ sub_19140(  /* PLAYER_PED_ID */ sub_887(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_20698( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND (( /* F_ISACTIONINGAVAILABLE */ sub_20794( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (( /* F_HASACTIONBEENPRESSED */ sub_31896()) == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                             /* P_ENABLE_POI */ sub_34223( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                             /* P_ENABLEPOIGLINT */ sub_20019( iParam0, 0 );
                             /* P_ENABLEPOIINTERACTIONTEXT */ sub_34309( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                             /* P_ENABLEPOIGLINT */ sub_20019( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_887(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                         /* P_ENABLEPOIGLINT */ sub_20019( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                         /* P_ENABLEPOIINTERACTIONTEXT */ sub_34309( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED(  /* PLAYER_PED_ID */ sub_887(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )) == 0)
                    {
                        TASK_LOOK_AT_COORD(  /* PLAYER_PED_ID */ sub_887(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_887(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                     /* P_ENABLEPOIGLINT */ sub_20019( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                     /* P_ENABLEPOIINTERACTIONTEXT */ sub_34309( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_887() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_887(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                 /* P_ENABLEPOIINTERACTIONTEXT */ sub_34309( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

/* P_ENABLE_POI */ void sub_34223(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
             /* P_ENABLEPOIGLINT */ sub_20019( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
         /* P_ENABLEPOIGLINT */ sub_20019( iParam0, 0 );
         /* P_ENABLEPOIINTERACTIONTEXT */ sub_34309( iParam0, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )) == 0)
        {
            TASK_CLEAR_LOOK_AT(  /* PLAYER_PED_ID */ sub_887() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_887(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

/* P_ENABLEPOIINTERACTIONTEXT */ void sub_34309(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
         /* P_UPDATEINTERACTIONTEXTAVAILABLE */ sub_20698( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_35533(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* P_HANDLE_TOD */ void sub_35894()
{
    int iVar2;
    unknown uVar3;

    if (IS_TIME_OF_DAY_FROZEN() == 0)
    {
        GET_TIME_OF_DAY( ref iVar2, ref uVar3 );
        if (iVar2 == 21)
        {
            FREEZE_TIME_OF_DAY( 21, 0 );
        }
    }
    return;
}

/* P_HANDLE_DIALOGUES */ void sub_35968()
{
    char[28] cVar2;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;

    array(ref cVar2, 6);
    StrCopy( ref cVar2[0], "SFV2_VIG10A", 16 );
    StrCopy( ref cVar2[1], "SFV2_VIG10B", 16 );
    StrCopy( ref cVar2[2], "SFV2_VIG10C", 16 );
    StrCopy( ref cVar2[3], "SFV2_VIG10D", 16 );
    StrCopy( ref cVar2[4], "SFV2_VIG10E", 16 );
    StrCopy( ref cVar2[5], "SFV2_VIG10F", 16 );
    if (l_U511 == 1)
    {
        PLAY_SCRIPT_STREAM_FROM_PED( l_U449, 2 );
        l_U511 = 0;
    }
    return;
}

/* P_HANDLE_MAX_CONTEXTUAL_DIALOGUE */ void sub_36198()
{
    if (l_U64 == 0)
    {
        l_U65 = GET_PAYNEKILLER_AMT();
        l_U64 = 1;
    }
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_887() )) == 0)
    {
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
        {
            if ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ((IS_MONOLOGUE_PLAYING() == 0) AND (( /* IS_ANY_SPEECH_CURRENTLY_PLAYING */ sub_36317()) == 0)))
            {
                if (l_U65 < GET_PAYNEKILLER_AMT())
                {
                     /* WRITESCRIPTLOG */ sub_565( "NS", "Playing Pills Monologue", 0 );
                     /* RESET_SCRIPT_SPEECH_STRUCT */ sub_32000( ref l_U54 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_32111( 0,  /* PLAYER_PED_ID */ sub_887(), "MAX", ref l_U54, 2, 0 );
                     /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_32111( 1,  /* PLAYER_PED_ID */ sub_887(), "MAX", ref l_U54, 2, 0 );
                     /* PLAY_SINGLE_SPEECH */ sub_32381( "SFV2_MPFSFPLA", ref l_U54, 7, 1 );
                }
            }
            l_U65 = GET_PAYNEKILLER_AMT();
        }
    }
    return;
}

/* IS_ANY_SPEECH_CURRENTLY_PLAYING */ void sub_36317()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

/* P_UNLOAD_ASSETS */ void sub_36712()
{
     /* WRITESCRIPTLOG */ sub_565( "SP", "P_UNLOAD_ASSETS", 0 );
     /* UNLOADMODEL */ sub_36774( -692286235 );
     /* UNLOADMODEL */ sub_36774( 2010586489 );
     /* UNLOADMODEL */ sub_36774( g_U775 );
     /* UNLOADWEAPON */ sub_36949( -378310276 );
     /* UNLOADWEAPON */ sub_36949( -1629340685 );
     /* UNLOADANIMDICT */ sub_37026( "npc_pstl_cover_grenade" );
     /* UNLOADANIMDICT */ sub_37026( "npc_rifle_cover_grenade" );
     /* UNLOADANIMDICT */ sub_37026( "mped_grenade_core" );
     /* UNLOADANIMDICT */ sub_37026( "EXPL_CAM" );
    return;
}

/* UNLOADMODEL */ void sub_36774(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_5963( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* UNLOADWEAPON */ void sub_36949(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}

/* UNLOADANIMDICT */ void sub_37026(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}


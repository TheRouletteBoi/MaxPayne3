void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    StrCopy( ref l_U37, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U45, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U55 = -838056405;
    l_U57 = {24.16000000, -20.79000000, 0.80000000};
    l_U60 = 0.00000000;
    l_U61 = {0, -5.50000000, 1.20000000};
    l_U64 = {0, -4.90000000, 1.00000000};
    l_U67 = 180.00000000;
    l_U68 = 270.00000000;
    l_U69 = 0;
    l_U70 = 0;
    l_U71 = 0;
    l_U72 = -239844571;
    l_U74 = {10.13000000, -23.45000000, 1.00000000};
    l_U77 = 0.00000000;
    l_U78 = {0, 2.00000000, 3.70000000};
    l_U81 = {0, 2.60000000, 3.50000000};
    l_U84 = 0.00000000;
    l_U85 = 360.00000000;
    l_U86 = 0;
    l_U87 = 0;
    l_U88 = 0;
    l_U89 = 2121457570;
    l_U91 = {-13.24000000, -25.60000000, 1.00000000};
    l_U94 = 0;
    l_U95 = {1.30000000, 0, 0.70000000};
    l_U98 = {0.80000000, 0, 0.50000000};
    l_U101 = 270.00000000;
    l_U102 = 180.00000000;
    l_U103 = 0;
    l_U104 = 0;
    l_U105 = 0;
    l_U106 = 47;
    l_U107 = 0;
    l_U108 = 1;
    l_U109 = 0;
    l_U110 = 0;
    l_U111 = 0;
    l_U113 = -2029220367;
    l_U116 = 1750472651;
    l_U117 = {0.00000000, 0.00000000, 0.00000000};
    l_U120 = {0.00000000, 0.00000000, 0.00000000};
     /* WRITE_STRING */ sub_746( "[GA] VehicleTurretTest.sc started." );
    REQUEST_MODEL( 1581185106 );
    "[doubled result, dropped if not asigned]";
     /* P_CREATE_TURRET_WIDGET */ sub_809();
    DO_SCREEN_FADE_IN( 0 );
    while (true)
    {
         /* P_HANDLE_TURRENT_WIDGET_UPDATE */ sub_2878();
         /* P_DEBUG_OUTPUT_PLAYER_POSITION */ sub_9943();
        WAIT( 0 );
    }
    return;
}

/* WRITE_STRING */ void sub_746(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_CREATE_TURRET_WIDGET */ void sub_809()
{
     /* WRITE_STRING */ sub_746( "[GA] P_CREATE_TURRET_WIDGET Start" );
    START_WIDGET_GROUP( "Vehicle Cavierao" );
    ADD_WIDGET_BOOL( "Create Cavierao", ref l_U109 );
    ADD_WIDGET_INT_SLIDER( "Fire Pattern", ref l_U110, 0, 9, 1 );
    ADD_WIDGET_BOOL( "Start Fire Pattern", ref l_U111 );
    ADD_WIDGET_BOOL( "bCreatelight", ref l_U107 );
    ADD_WIDGET_BOOL( "bCavVisable", ref l_U108 );
    ADD_WIDGET_INT_SLIDER( "bone for light", ref l_U106, 0, 200, 1 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "Vehicle Turret Test" );
    START_WIDGET_GROUP( "Vehicle Boat" );
    ADD_WIDGET_FLOAT_SLIDER( "Boat pos X", ref l_U57._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Boat pos Y", ref l_U57._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Boat pos Z", ref l_U57._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Boat Heading", ref l_U60, 0.00000000, 360.00000000, 1.00000000 );
    ADD_WIDGET_BOOL( "Spawn Boat", ref l_U69 );
    ADD_WIDGET_FLOAT_SLIDER( "Boat Turret pos X", ref l_U61._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Boat Turret pos Y", ref l_U61._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Boat Turret pos Z", ref l_U61._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Boat Turret Heading", ref l_U67, 0.00000000, 360.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Boat Turret Heading Limit", ref l_U68, 0.00000000, 360.00000000, 1.00000000 );
    ADD_WIDGET_BOOL( "Create Boat Turret", ref l_U70 );
    ADD_WIDGET_BOOL( "Attach Player to Boat Turret", ref l_U71 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "Vehicle Truck" );
    ADD_WIDGET_FLOAT_SLIDER( "Truck pos X", ref l_U74._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Truck pos Y", ref l_U74._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Truck pos Z", ref l_U74._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Truck Heading", ref l_U77, 0.00000000, 360.00000000, 1.00000000 );
    ADD_WIDGET_BOOL( "Spawn Truck", ref l_U86 );
    ADD_WIDGET_FLOAT_SLIDER( "Truck Turret pos X", ref l_U78._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Truck Turret pos Y", ref l_U78._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Truck Turret pos Z", ref l_U78._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Truck Turret Heading", ref l_U84, 0.00000000, 360.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Truck Turret Heading Limit", ref l_U85, 0.00000000, 360.00000000, 1.00000000 );
    ADD_WIDGET_BOOL( "Create Truck Turret", ref l_U87 );
    ADD_WIDGET_BOOL( "Attach Player to Truck Turret", ref l_U88 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "Vehicle Heli" );
    ADD_WIDGET_FLOAT_SLIDER( "Heli pos X", ref l_U91._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Heli pos Y", ref l_U91._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Heli pos Z", ref l_U91._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Heli Heading", ref l_U94, 0.00000000, 360.00000000, 1.00000000 );
    ADD_WIDGET_BOOL( "Spawn Heli", ref l_U103 );
    ADD_WIDGET_FLOAT_SLIDER( "Heli Turret pos X", ref l_U95._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Heli Turret pos Y", ref l_U95._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Heli Turret pos Z", ref l_U95._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Heli Turret Heading", ref l_U101, 0.00000000, 360.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Heli Turret Heading Limit", ref l_U102, 0.00000000, 360.00000000, 1.00000000 );
    ADD_WIDGET_BOOL( "Create Heli Turret", ref l_U104 );
    ADD_WIDGET_BOOL( "Attach Player to Heli Turret", ref l_U105 );
    STOP_WIDGET_GROUP();
    STOP_WIDGET_GROUP();
     /* WRITE_STRING */ sub_746( "[GA] P_CREATE_TURRET_WIDGET End" );
    return;
}

/* P_HANDLE_TURRENT_WIDGET_UPDATE */ void sub_2878()
{
    if (l_U107)
    {
         /* P_CREATE_LIGHT */ sub_2931();
        l_U107 = 0;
    }
     /* P_MAK_CAV_SEE_THRU */ sub_3939();
    if (l_U69)
    {
         /* P_SPAWN_BOAT */ sub_4024();
        l_U69 = 0;
    }
    if (l_U86)
    {
         /* P_SPAWN_TRUCK */ sub_4428();
        l_U86 = 0;
    }
    if (l_U103)
    {
         /* P_SPAWN_HELI */ sub_4682();
        l_U103 = 0;
    }
    if (l_U70)
    {
         /* P_BOAT_TURRET */ sub_4933();
        l_U70 = 0;
    }
    if (l_U87)
    {
         /* P_TRUCK_TURRET */ sub_5165();
        l_U87 = 0;
    }
    if (l_U104)
    {
         /* P_HELI_TURRET */ sub_5400();
        l_U104 = 0;
    }
    if (l_U71)
    {
         /* P_ATTACH_PLAYER_BOAT_TURRET */ sub_5632();
        l_U71 = 0;
    }
    if (l_U88)
    {
         /* P_ATTACH_PLAYER_TRUCK_TURRET */ sub_5958();
        l_U88 = 0;
    }
    if (l_U105)
    {
         /* P_ATTACH_PLAYER_HELI_TURRET */ sub_6287();
        l_U105 = 0;
    }
    if (l_U109)
    {
         /* P_SETUPCAVIERAO */ sub_6613();
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4092() )))
        {
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_4092(), 1 );
        }
        l_U109 = 0;
    }
     /* P_CAVSHOOT */ sub_7987();
    return;
}

/* P_CREATE_LIGHT */ void sub_2931()
{
     /* WRITESCRIPTLOG */ sub_2983( "NS", "create cav light", 0 );
     /* LOADMODEL */ sub_3107( 572505350, 1 );
     /* CLEANOBJECT */ sub_3357( l_U115 );
    l_U115 =  /* CREATEOBJECT */ sub_3451( 572505350, -11.74821000, 8.91877400, -0.01884500, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( l_U115 )) == 1)
    {
        SET_OBJECT_LIGHTS( l_U115, 1 );
        SET_OBJECT_COLLISION( l_U115, 0 );
        SET_OBJECT_PROOFS( l_U115, 1, 1, 1, 1, 1 );
        FREEZE_OBJECT_POSITION( l_U115, 1 );
    }
    if ((NOT (IS_VEHICLE_DEAD( l_U112 ))) AND ((DOES_VEHICLE_EXIST( l_U112 )) AND (DOES_OBJECT_EXIST( l_U115 ))))
    {
        FREEZE_OBJECT_POSITION( l_U115, 0 );
        ATTACH_OBJECT_TO_VEHICLE( l_U115, l_U112, l_U106, l_U117, l_U120 );
    }
    return;
}

/* WRITESCRIPTLOG */ void sub_2983(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* LOADMODEL */ void sub_3107(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_746( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* CLEANOBJECT */ void sub_3357(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CREATEOBJECT */ void sub_3451(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_3107( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* P_MAK_CAV_SEE_THRU */ void sub_3939()
{
    if ((IS_VEHICLE_DEAD( l_U112 )) == 0)
    {
        SET_VEHICLE_VISIBLE( l_U112, l_U108 );
    }
    return;
}

/* P_SPAWN_BOAT */ void sub_4024()
{
     /* WRITE_STRING */ sub_746( "[GA] P_SPAWN_BOAT start" );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4092() ))) AND (DOES_VEHICLE_EXIST( l_U56 )))
    {
        if (IS_PED_IN_VEHICLE(  /* PLAYER_PED_ID */ sub_4092(), l_U56 ))
        {
            TASK_LEAVE_VEHICLE_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_4092(), l_U56 );
        }
        WAIT( 1 );
         /* CLEANVEHICLE */ sub_4252( l_U56 );
    }
     /* LOADMODEL */ sub_3107( l_U55, 1 );
    l_U56 = CREATE_VEHICLE( l_U55, l_U57, l_U60, 1, 0 );
    SET_LOAD_COLLISION_FOR_VEHICLE_FLAG( l_U56, 1 );
     /* WRITE_STRING */ sub_746( "[GA] P_SPAWN_BOAT end" );
    return;
}

/* PLAYER_PED_ID */ int sub_4092()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_4130() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_4130()
{
    return GET_PLAYER_ID();
}

/* CLEANVEHICLE */ void sub_4252(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* P_SPAWN_TRUCK */ void sub_4428()
{
     /* WRITE_STRING */ sub_746( "[GA] P_SPAWN_TRUCK start" );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4092() ))) AND (DOES_VEHICLE_EXIST( l_U73 )))
    {
        if (IS_PED_IN_VEHICLE(  /* PLAYER_PED_ID */ sub_4092(), l_U73 ))
        {
            TASK_LEAVE_VEHICLE_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_4092(), l_U73 );
        }
        WAIT( 1 );
         /* CLEANVEHICLE */ sub_4252( l_U73 );
    }
     /* LOADMODEL */ sub_3107( l_U72, 1 );
    l_U73 = CREATE_VEHICLE( l_U72, l_U74, l_U77, 1, 0 );
    SET_LOAD_COLLISION_FOR_VEHICLE_FLAG( l_U73, 1 );
     /* WRITE_STRING */ sub_746( "[GA] P_SPAWN_TRUCK end" );
    return;
}

/* P_SPAWN_HELI */ void sub_4682()
{
     /* WRITE_STRING */ sub_746( "[GA] P_SPAWN_HELI start" );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4092() ))) AND (DOES_VEHICLE_EXIST( l_U90 )))
    {
        if (IS_PED_IN_VEHICLE(  /* PLAYER_PED_ID */ sub_4092(), l_U90 ))
        {
            TASK_LEAVE_VEHICLE_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_4092(), l_U90 );
        }
        WAIT( 1 );
         /* CLEANVEHICLE */ sub_4252( l_U90 );
    }
     /* LOADMODEL */ sub_3107( l_U89, 1 );
    l_U90 = CREATE_VEHICLE( l_U89, l_U91, l_U94, 1, 0 );
    SET_LOAD_COLLISION_FOR_VEHICLE_FLAG( l_U90, 1 );
     /* WRITE_STRING */ sub_746( "[GA] P_SPAWN_HELI end" );
    return;
}

/* P_BOAT_TURRET */ void sub_4933()
{
     /* WRITE_STRING */ sub_746( "[GA] P_BOAT_TURRET start" );
    if (NOT (DOES_VEHICLE_EXIST( l_U56 )))
    {
         /* P_SPAWN_BOAT */ sub_4024();
    }
    else if (NOT (IS_VEHICLE_DEAD( l_U56 )))
    {
        REMOVE_ATTACHED_WEAPONS_FROM_VEHICLE( l_U56 );
    }
    WAIT( 1000 );
    if (NOT (IS_VEHICLE_DEAD( l_U56 )))
    {
        ATTACH_WEAPON_TO_VEHICLE( -110877124, l_U56, 0, l_U61, l_U67, l_U68 );
    }
     /* WRITE_STRING */ sub_746( "[GA] P_BOAT_TURRET end" );
    return;
}

/* P_TRUCK_TURRET */ void sub_5165()
{
     /* WRITE_STRING */ sub_746( "[GA] P_TRUCK_TURRET start" );
    if (NOT (DOES_VEHICLE_EXIST( l_U73 )))
    {
         /* P_SPAWN_TRUCK */ sub_4428();
    }
    else if (NOT (IS_VEHICLE_DEAD( l_U73 )))
    {
        REMOVE_ATTACHED_WEAPONS_FROM_VEHICLE( l_U73 );
    }
    WAIT( 1000 );
    if (NOT (IS_VEHICLE_DEAD( l_U73 )))
    {
        ATTACH_WEAPON_TO_VEHICLE( -110877124, l_U73, 0, l_U78, l_U84, l_U85 );
    }
     /* WRITE_STRING */ sub_746( "[GA] P_TRUCK_TURRET end" );
    return;
}

/* P_HELI_TURRET */ void sub_5400()
{
     /* WRITE_STRING */ sub_746( "[GA] P_HELI_TURRET start" );
    if (NOT (DOES_VEHICLE_EXIST( l_U90 )))
    {
         /* P_SPAWN_HELI */ sub_4682();
    }
    else if (NOT (IS_VEHICLE_DEAD( l_U90 )))
    {
        REMOVE_ATTACHED_WEAPONS_FROM_VEHICLE( l_U90 );
    }
    WAIT( 1000 );
    if (NOT (IS_VEHICLE_DEAD( l_U90 )))
    {
        ATTACH_WEAPON_TO_VEHICLE( -110877124, l_U90, 0, l_U95, l_U101, l_U102 );
    }
     /* WRITE_STRING */ sub_746( "[GA] P_HELI_TURRET end" );
    return;
}

/* P_ATTACH_PLAYER_BOAT_TURRET */ void sub_5632()
{
     /* WRITE_STRING */ sub_746( "[GA] P_ATTACH_PLAYER_BOAT_TURRET Start" );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4092() )))
    {
        if (IS_PED_IN_ANY_VEHICLE(  /* PLAYER_PED_ID */ sub_4092() ))
        {
            TASK_LEAVE_ANY_VEHICLE(  /* PLAYER_PED_ID */ sub_4092() );
        }
    }
     /* P_BOAT_TURRET */ sub_4933();
    WAIT( 1000 );
    if ((NOT (IS_VEHICLE_DEAD( l_U56 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4092() ))))
    {
        ATTACH_PED_TO_VEHICLE(  /* PLAYER_PED_ID */ sub_4092(), l_U56, 0, l_U64, 180.00000000, 0.00000000, 1, 0, 0, 1 );
    }
    WAIT( 1000 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4092() )))
    {
        TASK_USE_NEAREST_MOUNTED_WEAPON(  /* PLAYER_PED_ID */ sub_4092() );
    }
     /* WRITE_STRING */ sub_746( "[GA] P_ATTACH_PLAYER_BOAT_TURRET end" );
    return;
}

/* P_ATTACH_PLAYER_TRUCK_TURRET */ void sub_5958()
{
     /* WRITE_STRING */ sub_746( "[GA] P_ATTACH_PLAYER_TRUCK_TURRET Start" );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4092() )))
    {
        if (IS_PED_IN_ANY_VEHICLE(  /* PLAYER_PED_ID */ sub_4092() ))
        {
            TASK_LEAVE_ANY_VEHICLE(  /* PLAYER_PED_ID */ sub_4092() );
        }
    }
     /* P_TRUCK_TURRET */ sub_5165();
    WAIT( 1000 );
    if ((NOT (IS_VEHICLE_DEAD( l_U73 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4092() ))))
    {
        ATTACH_PED_TO_VEHICLE(  /* PLAYER_PED_ID */ sub_4092(), l_U73, 0, l_U81, 180.00000000, 0.00000000, 1, 0, 0, 1 );
    }
    WAIT( 1000 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4092() )))
    {
        TASK_USE_NEAREST_MOUNTED_WEAPON(  /* PLAYER_PED_ID */ sub_4092() );
    }
     /* WRITE_STRING */ sub_746( "[GA] P_ATTACH_PLAYER_TRUCK_TURRET end" );
    return;
}

/* P_ATTACH_PLAYER_HELI_TURRET */ void sub_6287()
{
     /* WRITE_STRING */ sub_746( "[GA] P_ATTACH_PLAYER_HELI_TURRET Start" );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4092() )))
    {
        if (IS_PED_IN_ANY_VEHICLE(  /* PLAYER_PED_ID */ sub_4092() ))
        {
            TASK_LEAVE_ANY_VEHICLE(  /* PLAYER_PED_ID */ sub_4092() );
        }
    }
     /* P_HELI_TURRET */ sub_5400();
    WAIT( 1000 );
    if ((NOT (IS_VEHICLE_DEAD( l_U90 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4092() ))))
    {
        ATTACH_PED_TO_VEHICLE(  /* PLAYER_PED_ID */ sub_4092(), l_U90, 0, l_U98, 90.00000000, 0.00000000, 1, 0, 0, 1 );
    }
    WAIT( 1000 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4092() )))
    {
        TASK_USE_NEAREST_MOUNTED_WEAPON(  /* PLAYER_PED_ID */ sub_4092() );
    }
     /* WRITE_STRING */ sub_746( "[GA] P_ATTACH_PLAYER_HELI_TURRET end" );
    return;
}

/* P_SETUPCAVIERAO */ void sub_6613()
{
     /* LOADMODEL */ sub_3107( l_U113, 1 );
     /* LOADMODEL */ sub_3107( -229120983, 1 );
    if (DOES_VEHICLE_EXIST( l_U112 ))
    {
         /* CLEANVEHICLE */ sub_4252( l_U112 );
    }
    l_U112 = CREATE_VEHICLE( l_U113, -115.10000000, 534.01000000, -32.62000000, 30, 0, 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U112 )))
    {
        SET_VEHICLE_ENGINE_ON( l_U112, 1, 1 );
        SET_VEHICLE_PROOFS( l_U112, 1, 1, 1, 1, 1 );
        SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_MODE( l_U112, 1, 0 );
        SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_SET( l_U112, 0, GET_HASH_KEY( "FIRING_PATTERN_CAV_BURST_LONG_DELAY" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_BURST_MEDIUM_DELAY" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_BURST_SHORT_DELAY" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_RANDOM_LONG_DELAY" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_RANDOM_SHORT_DELAY" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_RANDOM_LONG_DELAY" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_STEADY_COUPLE" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_STEADY_FEW" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_STEADY_SINGLE" ), 0 );
         /* CLEANPED */ sub_7210( l_U114 );
        l_U114 = CREATE_PED_INSIDE_VEHICLE( l_U112, 26, -229120983, -1, 0, 0 );
        if (NOT (IS_PED_DEAD( l_U114 )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U114, 1 );
            SET_PED_INVINCIBLE( l_U114, 1 );
            SET_PED_PROOFS( l_U114, 1, 1, 1, 1, 1 );
            SET_PED_COMBAT_ATTRIBUTES( l_U114, 2, 0 );
            SET_PED_RELATIONSHIP_GROUP( l_U114, 3 );
            SET_PED_NAME_DEBUG( l_U114, "CavieraoDriver" );
        }
         /* P_ASSIGNTURRETTARGETPLAYER */ sub_7448( 90.00000000, 0.05000000 );
    }
    return;
}

/* CLEANPED */ void sub_7210(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* P_ASSIGNTURRETTARGETPLAYER */ void sub_7448(unknown uParam0, unknown uParam1)
{
     /* P_OVERRIDETURRETATTRIBUTES */ sub_7491( uParam0, uParam1 );
    if ((NOT (IS_PED_DEAD( l_U114 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4092() ))))
    {
        TASK_VEHICLE_SHOOT_AT_PED( l_U114,  /* PLAYER_PED_ID */ sub_4092() );
    }
     /* P_HANDLECAVIERAOTOPLAYERACCURACY */ sub_7635();
    return;
}

/* P_OVERRIDETURRETATTRIBUTES */ void sub_7491(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_VEHICLE_DEAD( l_U112 )))
    {
        SET_VEHICLE_FIXED_WEAPON_DAMAGE( l_U112, uParam0, 0 );
        SET_VEHICLE_FIXED_WEAPON_ACCURACY( l_U112, uParam1, 0 );
    }
    return;
}

/* P_HANDLECAVIERAOTOPLAYERACCURACY */ void sub_7635()
{
    vector vVar2;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    vector vVar8;
    float fVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    float fVar15;

    if ((NOT (IS_VEHICLE_DEAD( l_U112 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_4092() ))))
    {
        vVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U112 )};
        uVar5 = {(vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_4092() ))) - vVar2};
        vVar8 = {0.00000000, 1.00000000, 0.00000000};
        fVar11 = (uVar5._fU0 * vVar8.x) + (uVar5._fU4 * vVar8.y);
        if (fVar11 < 0.00000000)
        {
             /* P_OVERRIDETURRETATTRIBUTES */ sub_7491( 90.00000000, 1.00000000 );
        }
        else
        {
            uVar12 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_VELOCITY(  /* PLAYER_PED_ID */ sub_4092() )};
            fVar15 = ((uVar12._fU0 * uVar12._fU0) + (uVar12._fU4 * uVar12._fU4)) + (uVar12._fU8 * uVar12._fU8);
            if (fVar15 < 1.50000000)
            {
                 /* P_OVERRIDETURRETATTRIBUTES */ sub_7491( 90.00000000, 1.00000000 );
            }
            else
            {
                 /* P_OVERRIDETURRETATTRIBUTES */ sub_7491( 90.00000000, 0.05000000 );
            }
        }
    }
    return;
}

/* P_CAVSHOOT */ void sub_7987()
{
    if (NOT (IS_VEHICLE_DEAD( l_U112 )))
    {
        if (l_U111)
        {
            switch (l_U110)
            {
                case 0:
                 /* WRITESCRIPTLOG */ sub_2983( "CO", "Random Fire Pattern", " ******** " );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_MODE( l_U112, 1, 0 );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_SET( l_U112, 0, GET_HASH_KEY( "FIRING_PATTERN_CAV_BURST_LONG_DELAY" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_BURST_MEDIUM_DELAY" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_BURST_SHORT_DELAY" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_RANDOM_LONG_DELAY" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_RANDOM_SHORT_DELAY" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_RANDOM_LONG_DELAY" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_STEADY_COUPLE" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_STEADY_FEW" ), GET_HASH_KEY( "FIRING_PATTERN_CAV_STEADY_SINGLE" ), 0 );
                break;
                case 1:
                 /* WRITESCRIPTLOG */ sub_2983( "CO", "FIRING_PATTERN_CAV_BURST_LONG_DELAY", " ******** " );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_MODE( l_U112, 0, 0 );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_SET( l_U112, 0, GET_HASH_KEY( "FIRING_PATTERN_CAV_BURST_LONG_DELAY" ), 0, 0, 0, 0, 0, 0, 0, 0, 0 );
                break;
                case 2:
                 /* WRITESCRIPTLOG */ sub_2983( "CO", "FIRING_PATTERN_CAV_BURST_MEDIUM_DELAY", " ******** " );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_MODE( l_U112, 0, 0 );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_SET( l_U112, 0, GET_HASH_KEY( "FIRING_PATTERN_CAV_BURST_MEDIUM_DELAY" ), 0, 0, 0, 0, 0, 0, 0, 0, 0 );
                break;
                case 3:
                 /* WRITESCRIPTLOG */ sub_2983( "CO", "FIRING_PATTERN_CAV_BURST_SHORT_DELAY", " ******** " );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_MODE( l_U112, 0, 0 );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_SET( l_U112, 0, GET_HASH_KEY( "FIRING_PATTERN_CAV_BURST_SHORT_DELAY" ), 0, 0, 0, 0, 0, 0, 0, 0, 0 );
                break;
                case 4:
                 /* WRITESCRIPTLOG */ sub_2983( "CO", "FIRING_PATTERN_CAV_RANDOM_LONG_DELAY", " ******** " );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_MODE( l_U112, 0, 0 );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_SET( l_U112, 0, GET_HASH_KEY( "FIRING_PATTERN_CAV_RANDOM_LONG_DELAY" ), 0, 0, 0, 0, 0, 0, 0, 0, 0 );
                break;
                case 5:
                 /* WRITESCRIPTLOG */ sub_2983( "CO", "FIRING_PATTERN_CAV_RANDOM_SHORT_DELAY", " ******** " );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_MODE( l_U112, 0, 0 );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_SET( l_U112, 0, GET_HASH_KEY( "FIRING_PATTERN_CAV_RANDOM_SHORT_DELAY" ), 0, 0, 0, 0, 0, 0, 0, 0, 0 );
                break;
                case 6:
                 /* WRITESCRIPTLOG */ sub_2983( "CO", "FIRING_PATTERN_CAV_RANDOM_LONG_DELAY", " ******** " );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_MODE( l_U112, 0, 0 );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_SET( l_U112, 0, GET_HASH_KEY( "FIRING_PATTERN_CAV_RANDOM_LONG_DELAY" ), 0, 0, 0, 0, 0, 0, 0, 0, 0 );
                break;
                case 7:
                 /* WRITESCRIPTLOG */ sub_2983( "CO", "FIRING_PATTERN_CAV_STEADY_COUPLE", " ******** " );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_MODE( l_U112, 0, 0 );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_SET( l_U112, 0, GET_HASH_KEY( "FIRING_PATTERN_CAV_STEADY_COUPLE" ), 0, 0, 0, 0, 0, 0, 0, 0, 0 );
                break;
                case 8:
                 /* WRITESCRIPTLOG */ sub_2983( "CO", "FIRING_PATTERN_CAV_STEADY_FEW", " ******** " );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_MODE( l_U112, 0, 0 );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_SET( l_U112, 0, GET_HASH_KEY( "FIRING_PATTERN_CAV_STEADY_FEW" ), 0, 0, 0, 0, 0, 0, 0, 0, 0 );
                break;
                case 9:
                 /* WRITESCRIPTLOG */ sub_2983( "CO", "FIRING_PATTERN_CAV_STEADY_SINGLE", " ******** " );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_MODE( l_U112, 0, 0 );
                SET_VEHICLE_FIXED_WEAPON_FIRING_PATTERN_SET( l_U112, 0, GET_HASH_KEY( "FIRING_PATTERN_CAV_STEADY_SINGLE" ), 0, 0, 0, 0, 0, 0, 0, 0, 0 );
                break;
            }
            l_U111 = 0;
        }
    }
    return;
}

/* P_DEBUG_OUTPUT_PLAYER_POSITION */ void sub_9943()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;

    iVar2 = 0;
    if (DOES_PAD_EXIST( 0 ))
    {
        iVar2 = IS_BUTTON_JUST_PRESSED( 0, 8 );
    }
    if ((IS_KEYBOARD_KEY_JUST_PRESSED( 25 )) || (iVar2))
    {
        uVar3 =  /* PLAYER_PED_ID */ sub_4092();
        if (NOT (IS_PED_DEAD( uVar3 )))
        {
            uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uVar3 )};
            uVar7 = GET_PED_HEADING( uVar3 );
            uVar8 = GET_DEBUG_CAM();
            uVar9 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_CAM_COORD( uVar8 )};
            uVar12 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_CAM_ROT( uVar8 )};
            uVar15 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD()};
            uVar18 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
            uVar21 = GET_GAMEPLAY_CAM_RELATIVE_HEADING();
            uVar22 = GET_GAMEPLAY_CAM_RELATIVE_PITCH();
            uVar24 = GET_GROUND_Z_FOR_3D_COORD( uVar4, ref uVar23 );
            PRINTNL();
            PRINTSTRING( "[SP] players position = <<" );
            PRINTFLOAT( uVar4._fU0 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar4._fU4 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar23 );
            PRINTSTRING( ">>" );
            PRINTNL();
            PRINTSTRING( "[SP] players heading = " );
            PRINTFLOAT( uVar7 );
            PRINTSTRING( "" );
            PRINTNL();
            PRINTSTRING( "[SP] Gameplay camera relative heading = " );
            PRINTFLOAT( uVar21 );
            PRINTNL();
            PRINTSTRING( "[SP] Gameplay camera relative pitch = " );
            PRINTFLOAT( uVar22 );
            PRINTNL();
            if ((IS_PED_IN_ANY_VEHICLE( uVar3 )) == 1)
            {
                 /* GET_PED_VEHICLE */ sub_10499( uVar3, ref uVar25, 1 );
                uVar26 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uVar25 )};
                uVar29 = GET_VEHICLE_HEADING( uVar25 );
                PRINTSTRING( "[SP] vehicle position = <<" );
                PRINTFLOAT( uVar26._fU0 );
                PRINTSTRING( ", " );
                PRINTFLOAT( uVar26._fU4 );
                PRINTSTRING( ", " );
                PRINTFLOAT( uVar26._fU8 );
                PRINTSTRING( ">>" );
                PRINTNL();
                PRINTSTRING( "[SP] vehicle heading = " );
                PRINTFLOAT( uVar29 );
                PRINTSTRING( "" );
                PRINTNL();
            }
            PRINTSTRING( "[SP] Debug camera position = <<" );
            PRINTFLOAT( uVar9._fU0 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar9._fU4 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar9._fU8 );
            PRINTSTRING( ">>" );
            PRINTNL();
            PRINTSTRING( "[SP] Debug camera rotation = <<" );
            PRINTFLOAT( uVar12._fU0 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar12._fU4 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar12._fU8 );
            PRINTSTRING( ">>" );
            PRINTNL();
            PRINTSTRING( "[SP] Gameplay camera position = <<" );
            PRINTFLOAT( uVar15._fU0 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar15._fU4 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar15._fU8 );
            PRINTSTRING( ">>" );
            PRINTNL();
            PRINTSTRING( "[SP] Gameplay camera rotation = <<" );
            PRINTFLOAT( uVar18._fU0 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar18._fU4 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar18._fU8 );
            PRINTSTRING( ">>" );
            PRINTNL();
        }
    }
    return;
}

/* GET_PED_VEHICLE */ int sub_10499(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (bParam2)
    {
        if (NOT (IS_PED_SITTING_IN_ANY_VEHICLE( uParam0 )))
        {
            return 0;
        }
    }
    else if (NOT (IS_PED_IN_ANY_VEHICLE( uParam0 )))
    {
        return 0;
    }
    (uParam1^) = GET_VEHICLE_PED_IS_IN( uParam0 );
    return 1;
}


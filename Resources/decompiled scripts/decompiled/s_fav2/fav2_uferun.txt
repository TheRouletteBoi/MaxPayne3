void main()
{
    unknown uVar2;

    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U40 = 0;
    l_U92 = 0;
    l_U93 = 0;
    l_U94 = 1;
    l_U96 = 0;
    l_U97 = 0;
    l_U98 = 1500;
    l_U108 = {0, 0, 0};
    StrCopy( ref l_U111, "DUMMY", 32 );
    l_U119 = 1;
    l_U124 = 0;
    l_U125 = 0;
    l_U126 = 0;
    l_U129 = 0;
    l_U174 = 2000;
    l_U176 = 0;
    l_U684 = 0;
    l_U685 = 0;
    l_U785 = 1;
    l_U786 = 1;
    l_U787 = 1;
    l_U788 = 0;
    l_U789 = 0;
    l_U790 = 1;
    l_U791 = 0;
    l_U792 = 0;
    l_U793 = 0;
    l_U794 = 1;
    l_U795 = 0;
    l_U796 = 0;
    l_U797 = 0;
    l_U798 = 0;
    l_U799 = 0;
    l_U800 = 0;
    l_U801 = 1;
    l_U802 = 0;
    l_U803 = 0;
    l_U804 = 0;
    l_U805 = 0;
    l_U806 = 0;
    l_U807 = 0;
    l_U808 = 0;
    l_U809 = 1;
    l_U810 = 0;
    l_U811 = 0;
    l_U812 = 0;
    l_U813 = 1;
    l_U827 = 0;
    l_U992 = 10000;
    l_U1165 = 0;
    l_U1166 = 0;
    l_U1190 = 0;
    l_U1191 = 0;
    l_U1275 = {-179.02000000, 224.51000000, 7.51000000};
    l_U1278 = 180.00000000;
    l_U1280 = {-179.84000000, 220.96000000, 7.49000000};
    l_U1283 = {0.00000000, 0.00000000, 180.00000000};
    l_U1286 = 2000;
    l_U1310 = {-139.76000000, 223.07000000, 1.63000000};
    l_U1313 = -122.00000000;
    l_U1315 = {-138.20000000, 220.54000000, 1.67000000};
    l_U1318 = {0.00000000, 0.00000000, -150.00000000};
    l_U1322 = 0;
    l_U1326 = 1232833631;
    StrCopy( ref l_U1368, "f2_anim_hlgt", 32 );
    l_U1376 = {0.00000000, 0.00000000, 0.00000000};
    l_U1379 = {-0.40000000, 2.40000000, -0.13000000};
    l_U1382 = {0.00000000, 0.00000000, 0.00000000};
    l_U1407 = 0;
    l_U1414 = {-167.68000000, 216.87000000, 5.65000000};
    l_U1417 = -90.00000000;
    l_U1418 = {-167.35000000, 215.58000000, 5.70000000};
    l_U1421 = -90.00000000;
    l_U1422 = {-171.56000000, 216.63000000, 6.10000000};
    l_U1425 = -90.00000000;
    l_U1426 = {-170.19000000, 215.59000000, 6.00000000};
    l_U1429 = -90.00000000;
    l_U1430 = {-170.38000000, 217.38000000, 5.80000000};
    l_U1433 = -90.00000000;
    l_U1434 = 0;
    l_U1447 = 0;
    if (g_U781 == 5)
    {
        if (( /* HAS_SAVEFILE_LOADED */ sub_998( ref l_U598 )) == 0)
        {
            uVar2 =  /* F_GIVEPEDWEAPON */ sub_3850(  /* PLAYER_PED_ID */ sub_1262(), g_U1310, 200, 0, 0 );
            g_U1046 = 1;
        }
    }
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLECHAPTERDEBUG */ sub_5944();
         /* P_HANDLE_CHECKPOINTS */ sub_5985();
         /* P_HANDLE_EVENTS */ sub_10947();
        WAIT( 0 );
    }
     /* WRITESCRIPTLOG */ sub_1060( "NS", "CHECKPOINT MCE_UFE_RUN HAS ENDED", "########################" );
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "fav2_UfeRun" );
    SET_EXITFLAG_RESPONSE();
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_998(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1060( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            g_U665 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, g_U666 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_1356( uParam0,  /* PLAYER_PED_ID */ sub_1262() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* WRITESCRIPTLOG */ void sub_1060(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* PLAYER_PED_ID */ int sub_1262()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1300() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1300()
{
    return GET_PLAYER_ID();
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_1356(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_1060( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (g_U665)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_1577( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_2741( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_3055( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_3534( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_3055( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_3534( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_3055( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_3534( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_3850( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_3534( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_3850( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_3534( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (g_U665 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_4424( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_4626( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1262(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (g_U665)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    g_U665 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_1060( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_1577(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_1639( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_1639(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_2741(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_3055(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_3459( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_3459(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_3534(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_3850(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_3459( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_4424(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_4626(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_1639( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_4724( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_4724(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLECHAPTERDEBUG */ void sub_5944()
{
    return;
}

/* P_HANDLE_CHECKPOINTS */ void sub_5985()
{
    if (g_U782 == 5)
    {
        switch (l_U176)
        {
            case 0:
            if (( /* RESTARTING_CHECKPOINT */ sub_6102()) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
            {
                l_U176 = 1;
                 /* WRITESCRIPTLOG */ sub_1060( "kja", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if ( /* IS_RESTART_ACTIVE */ sub_6623())
            {
                l_U176 = 2;
            }
            else if (( /* F_CHECK_QUIT_RETRY */ sub_6683( 0 )) == 1)
            {
                l_U176 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
            {
                if ((g_U1312[5]._fU40 != 4) AND (g_U1312[5]._fU40 != 0))
                {
                     /* WRITESCRIPTLOG */ sub_1060( "kja", "Shutting down script for MCE_UFE_RUN.", 0 );
                     /* P_RESET_CHECKPOINT_THREAD */ sub_8252( ref g_U1312[5] );
                }
                l_U176 = 3;
                 /* WRITESCRIPTLOG */ sub_1060( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_1060( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() ))) AND (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1300() ))))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1300(), 0, 0 );
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1262(), 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1300(), 1 );
                SET_CAN_ROLL_DODGE(  /* PLAYER_PED_ID */ sub_1262(), 1 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
             /* P_DELETEALLPEDS */ sub_8545();
             /* P_CLEAN_PLACEMENTS */ sub_10009();
             /* P_SETDOORLOCKED */ sub_10233( ref g_U1198, 1 );
             /* P_SETDOORLOCKED */ sub_10233( ref g_U1205, 1 );
             /* P_SETDOORLOCKED */ sub_10233( ref g_U1100, 0 );
            l_U176 = 4;
             /* WRITESCRIPTLOG */ sub_1060( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_1060( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_1356( ref l_U598,  /* PLAYER_PED_ID */ sub_1262() );
            l_U176 = 5;
             /* WRITESCRIPTLOG */ sub_1060( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_1060( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
             /* P_RESET_CHECKPOINT_THREAD */ sub_8252( ref g_U1312[5] );
            l_U175 = 0;
            l_U176 = 0;
             /* WRITESCRIPTLOG */ sub_1060( "kja", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    else if (( /* IS_RESTART_ACTIVE */ sub_6623()) || (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
    {
         /* WRITESCRIPTLOG */ sub_1060( "CO", "CHECKPOINT MCE_UFE_BATTLE HAS ENDED", "########################" );
         /* P_RESET_CHECKPOINT_THREAD */ sub_8252( ref g_U1312[5] );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_6102()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        g_U665 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1262(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1300(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1300(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1262() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1262(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* IS_RESTART_ACTIVE */ void sub_6623()
{
    return g_U648;
}

/* F_CHECK_QUIT_RETRY */ int sub_6683(int iParam0)
{
    iParam0 = 1;
    switch (l_U97)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_6765( ref l_U99 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
            {
                l_U98 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_6899( ref l_U99, l_U98, 1, 1 );
             /* STARTTIMER */ sub_7049( ref l_U99 );
        }
        if ( /* ISTIMERDONE */ sub_7182( ref l_U99 ))
        {
             /* WRITESCRIPTLOG */ sub_1060( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1300() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1300(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U97 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U97 = 2;
            }
            else
            {
                l_U97 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_1060( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_7683();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_1060( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_7683();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_6765(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_6899(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_7049(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_7182(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_7683()
{
     /* WRITESCRIPTLOG */ sub_1060( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_7758( ref l_U99 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1300() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1300(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U96 = 0;
    l_U96 = l_U96;
    l_U97 = 0;
    return;
}

/* RESETTIMER */ void sub_7758(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_8252(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* P_DELETEALLPEDS */ void sub_8545()
{
     /* TERMINATEISEQ */ sub_8579( 656995606, 1 );
     /* TERMINATEISEQ */ sub_8579( 1681008462, 1 );
     /* TERMINATEISEQ */ sub_8579( -1827157400, 1 );
     /* TERMINATEISEQ */ sub_8579( -851927440, 1 );
     /* TERMINATEISEQ */ sub_8579( -1170716322, 1 );
     /* TERMINATEISEQ */ sub_8579( -956144910, 1 );
     /* TERMINATEISEQ */ sub_8579( 1557696148, 1 );
    ISEQ_UNREGISTER_ENTITY( -1979577743, "civ" );
     /* TERMINATEISEQ */ sub_8579( -1979577743, 1 );
    ISEQ_UNREGISTER_ENTITY( 1789862085, "civ" );
     /* TERMINATEISEQ */ sub_8579( 1789862085, 1 );
    ISEQ_UNREGISTER_ENTITY( -1935874550, "csrunner8" );
    ISEQ_UNREGISTER_ENTITY( -1935874550, "csrunner9" );
     /* TERMINATEISEQ */ sub_8579( -1935874550, 1 );
    ISEQ_UNREGISTER_ENTITY( 268580424, "CIV" );
    ISEQ_UNREGISTER_ENTITY( 268580424, "DOOR" );
     /* CLEANPED */ sub_9105( l_U1261 );
     /* CLEANOBJECT */ sub_9195( l_U1279 );
    ISEQ_UNREGISTER_ENTITY( 432294348, "CIV" );
    ISEQ_UNREGISTER_ENTITY( 432294348, "DOOR" );
     /* CLEANPED */ sub_9105( l_U1296 );
     /* CLEANOBJECT */ sub_9195( l_U1314 );
    ISEQ_UNREGISTER_ENTITY( -851927440, "TFE_1" );
    ISEQ_UNREGISTER_ENTITY( -851927440, "TFE_2" );
    ISEQ_UNREGISTER_ENTITY( -851927440, "TFE_3" );
     /* P_DELETE_HELI */ sub_9366();
     /* CLEANPED */ sub_9105( l_U1327 );
     /* GP_DELETE_S_FAV2_20_TFE_ADV */ sub_9617();
     /* CLEANPEDARRAY */ sub_9672( ref l_U900 );
     /* CLEANPEDARRAY */ sub_9672( ref l_U907 );
     /* CLEANPED */ sub_9105( l_U925 );
     /* CLEANPED */ sub_9105( l_U939 );
     /* CLEANPED */ sub_9105( l_U953 );
     /* CLEANPED */ sub_9105( l_U1015 );
     /* CLEANPED */ sub_9105( l_U1029 );
     /* CLEANPED */ sub_9105( l_U1043 );
     /* CLEANPED */ sub_9105( l_U1135 );
     /* CLEANPED */ sub_9105( l_U1136 );
     /* CLEANPED */ sub_9105( l_U1137 );
     /* CLEANPED */ sub_9105( l_U1138 );
     /* CLEANPED */ sub_9105( l_U1139 );
     /* CLEANPED */ sub_9105( l_U1140 );
     /* CLEANPED */ sub_9105( l_U1141 );
     /* CLEANPED */ sub_9105( l_U1347 );
     /* CLEANPED */ sub_9105( l_U1361 );
     /* CLEANPED */ sub_9105( l_U1205 );
     /* CLEANPED */ sub_9105( l_U1219 );
     /* CLEANPEDARRAY */ sub_9672( ref l_U988 );
     /* CLEANPED */ sub_9105( l_U1233 );
     /* CLEANPED */ sub_9105( l_U1367 );
     /* CLEANVEHICLE */ sub_9397( l_U1366 );
     /* CLEANPED */ sub_9105( l_U1142 );
     /* CLEANPED */ sub_9105( l_U1167 );
    return;
}

/* TERMINATEISEQ */ void sub_8579(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* CLEANPED */ void sub_9105(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CLEANOBJECT */ void sub_9195(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* P_DELETE_HELI */ void sub_9366()
{
     /* CLEANVEHICLE */ sub_9397( l_U1328 );
     /* CLEANOBJECT */ sub_9195( l_U1329 );
     /* CLEANPED */ sub_9105( l_U1361 );
     /* CLEANPED */ sub_9105( l_U1333 );
     /* CLEANPED */ sub_9105( l_U1347 );
     /* P_GROUPDELETER */ sub_9510( ref l_U1330 );
    l_U1407 = 0;
    return;
}

/* CLEANVEHICLE */ void sub_9397(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* P_GROUPDELETER */ void sub_9510(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_9105( (uParam0^)[I] );
        WAIT( 0 );
    }
    return;
}

/* GP_DELETE_S_FAV2_20_TFE_ADV */ void sub_9617()
{
     /* TERMINATEISEQ */ sub_8579( 1681008462, 1 );
     /* CLEANPEDARRAY */ sub_9672( ref l_U894 );
    return;
}

/* CLEANPEDARRAY */ void sub_9672(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_9105( (uParam0^)[I] );
    }
    return;
}

/* P_CLEAN_PLACEMENTS */ void sub_10009()
{
     /* CLEANPLACEMENT */ sub_10045( l_U1363 );
     /* CLEANPLACEMENT */ sub_10045( l_U1364 );
     /* CLEANPLACEMENT */ sub_10045( l_U1365 );
     /* CLEANPLACEMENTARRAY */ sub_10129( ref l_U1323 );
     /* CLEANPLACEMENT */ sub_10045( g_U685._fU0 );
    return;
}

/* CLEANPLACEMENT */ void sub_10045(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* CLEANPLACEMENTARRAY */ void sub_10129(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPLACEMENT */ sub_10045( (uParam0^)[I] );
    }
    return;
}

/* P_SETDOORLOCKED */ void sub_10233(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_10263( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10347( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_10263(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_10347(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_HANDLE_EVENTS */ void sub_10947()
{
    switch (l_U175)
    {
        case 0:
         /* P_INITIALIZE_SCRIPT_DATA */ sub_11027();
         /* P_SETUP_STATIC_DATA */ sub_11352();
         /* P_LOAD_ASSETS */ sub_14790( 0 );
         /* P_SETDOORLOCKED */ sub_10233( ref g_U1191, 1 );
        if (g_U782 == 5)
        {
             /* WRITESCRIPTLOG */ sub_1060( "NS", "UFE Run: STARTUP debug or save load", 0 );
             /* P_LOAD_ASSETS */ sub_14790( 1 );
             /* P_CREATE_CAMERA */ sub_16596();
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1300(), 0, 0 );
            }
            g_U1046 = 1;
             /* CO_HANDLE_SAVEDATA */ sub_16715( ref l_U598, 5, 0 );
            l_U175 = 1;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1060( "NS", "UFE Run: Playthrough", 0 );
            l_U175 = 1;
        }
        break;
        case 1:
        if (l_U795 == 0)
        {
            if ( /* F_HAS_ASSETS_LOADED */ sub_22288())
            {
                if ( /* F_HANDLE_CREATE_ENEMIES */ sub_22925())
                {
                    l_U795 = 1;
                }
            }
        }
        else if (((ABSF(  /* F_GETDOOROPENRATIO */ sub_31589( ref g_U1198 ) )) > 0.10000000) || ((g_U781 == 5) || ( /* F_ISPLAYERINTRIGGERBOX */ sub_31454( l_U198 ))))
        {
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )) == 0)
            {
                SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1262(), 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1300(), 1 );
                SET_CAN_ROLL_DODGE(  /* PLAYER_PED_ID */ sub_1262(), 1 );
            }
            DO_SCREEN_FADE_IN( 1000 );
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1300(), 1, 0 );
            l_U175 = 2;
        }
        break;
        case 2:
        if (IS_SCREEN_FADED_OUT())
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1300(), 0, 0 );
            }
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U953[5], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U996[5], 1065353216, 0 );
        }
         /* P_CREATE_PLACEMENTS */ sub_31879();
         /* GP_LOCK_OLDLADY_DOOR */ sub_33333();
         /* RESET_PLAYER_WALK */ sub_33384();
         /* P_HELIA_ACTIVATE */ sub_33517();
         /* P_INIT_FS_ROOFTOPRUNNERS */ sub_35252();
         /* P_INIT_NS_DRAG */ sub_35755();
         /* P_CREATE_VIG07A */ sub_36160();
         /* P_CREATE_VIG07A_1 */ sub_36340();
         /* P_MOVE_HELIA */ sub_36536();
         /* P_CLOSEDOOR */ sub_36708( ref g_U1198, 0 );
        if (l_U796 == 0)
        {
            AUDIO_MUSIC_REQUEST_ONESHOT( "FAV2_ONESHOT_H", 0 );
            l_U796 = 1;
        }
        if (g_U782 < 5)
        {
            SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
            SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        }
         /* GP_ACTIVATED_S_FAV2_20_TFE_ADV */ sub_36947();
         /* CREATETIMER */ sub_6899( ref l_U704, 2250, 1, 0 );
         /* STARTTIMER */ sub_7049( ref l_U704 );
        g_U1046 = 1;
        l_U813 = 0;
         /* CREATETIMER */ sub_6899( ref l_U686, 15000, 1, 0 );
         /* STARTTIMER */ sub_7049( ref l_U686 );
        l_U175 = 3;
        break;
        case 3:
        if (l_U809 == 1)
        {
            if ( /* F_SHOOT_LOWER_BALCONY_GLASS */ sub_37556())
            {
                l_U809 = 0;
            }
        }
        if (l_U794 == 1)
        {
            if (( /* F_GETDOOROPENRATIO */ sub_31589( ref g_U1198 )) > -0.01000000)
            {
                if ( /* F_ISPLAYERINTRIGGERBOX */ sub_31454( l_U198 ))
                {
                    g_U1046 = 1;
                     /* CO_HANDLE_SAVEDATA */ sub_16715( ref l_U598, 5, 0 );
                     /* P_SETDOORLOCKED */ sub_10233( ref g_U1198, 1 );
                    l_U794 = 0;
                }
            }
        }
        if (l_U793 == 0)
        {
            if (( /* ISTIMERDONE */ sub_7182( ref l_U767 )) || (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_38652( ref l_U576, 0 )) || ( /* P_HAS_PLAYER_SHOT_IN_AREA */ sub_38534())))
            {
                 /* P_UFE_SURPRISE_ACTION */ sub_38798();
                l_U793 = 1;
            }
        }
        if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_39172( ref l_U219,  /* PLAYER_PED_ID */ sub_1262(), 0 ))
        {
            SET_WEATHER_TYPE_PERSIST( "DRIZZLE" );
            SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
            SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
            g_U1046 = 1;
        }
        if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_39172( ref l_U387,  /* PLAYER_PED_ID */ sub_1262(), 0 ))
        {
             /* P_CREATE_DEAD_CS */ sub_39379();
             /* GP_SET_F3DOOR_LIMITS */ sub_40540();
             /* P_DELETE_HELI */ sub_9366();
             /* INIT_FS_DOORKICKERS */ sub_41041();
             /* INIT_NS_DOORKICKERS */ sub_41783();
             /* P_INIT_NS_ROOFTOPRUNNERS */ sub_42510();
             /* P_CREATE_FS_COVER_GRENADERS */ sub_42963();
            if (l_U1434)
            {
                 /* GP_DELETE_S_FAV2_20_TFE_ADV */ sub_9617();
                l_U1434 = 0;
            }
             /* P_START_CHECKPOINT_THREAD */ sub_43628( ref g_U1312[6] );
        }
        if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_39172( ref l_U450,  /* PLAYER_PED_ID */ sub_1262(), 0 ))
        {
            ADD_EXPLOSION( -164.50640000, 208.28280000, -1.63300800, 0, 1.00000000, 1, 1, 1065353216 );
            l_U790 = 0;
             /* P_HANDLE_FS_DOORKICKERS */ sub_43745();
             /* P_FS_COVER_GRENADERS_ACTION */ sub_43970();
             /* P_CLEANUP_FS_SCRAMBLES */ sub_44504();
             /* P_CREATE_S_FAV2_VIG_00A_BATTLE_02 */ sub_44610();
        }
        if (l_U802 == 1)
        {
            if ( /* F_HANDLE_GRENADE_THROW */ sub_45035())
            {
                l_U802 = 0;
            }
        }
        if (( /* ISTIMERDONE */ sub_7182( ref l_U704 )) == 1)
        {
             /* P_HANDLE_FS_ROOFTOP_RUNNERS_3 */ sub_45368();
        }
        if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_39172( ref l_U429,  /* PLAYER_PED_ID */ sub_1262(), 0 ))
        {
             /* CLEANPED */ sub_9105( l_U1327 );
             /* P_CLOSEDOOR */ sub_36708( ref g_U1100, 0 );
             /* CREATETIMER */ sub_6899( ref l_U758, 2000, 1, 0 );
             /* STARTTIMER */ sub_7049( ref l_U758 );
        }
        if (l_U792 == 0)
        {
            if (( /* ISTIMERDONE */ sub_7182( ref l_U758 )) == 1)
            {
                 /* P_SETDOORLOCKED */ sub_10233( ref g_U1100, 1 );
                l_U792 = 1;
            }
        }
        if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_39172( ref l_U366,  /* PLAYER_PED_ID */ sub_1262(), 0 ))
        {
             /* P_CREATE_HELI_SOUND */ sub_45669();
             /* P_SETUP_HELI_FLYBY */ sub_46118();
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -168.14000000, 205.00000000, 5.30000000, -130.92700000, 210.46600000, 4.00300000, 100, 1, -1312131151, 0 );
            l_U684 = 1;
        }
         /* P_HANDLE_LOS_ROOFTOPRUNNERS */ sub_46905();
         /* P_HANDLE_LOS_NS_BALCONY */ sub_47457();
         /* P_HANDLE_LOWERVIG_CS */ sub_49153();
         /* P_HANDLE_HELIA_OPENER */ sub_49656();
         /* P_HANDLE_S_FAV2_20_TFE_ADV */ sub_50606();
         /* P_HANDLE_TOD */ sub_51944();
         /* P_HANDLE_VIG07A */ sub_52070();
         /* P_HANDLE_VIG07A_1 */ sub_52429();
         /* P_HANDLE_PLAYER_DAWDLING_ON_BALC */ sub_52804();
        if (( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_39172( ref l_U534,  /* PLAYER_PED_ID */ sub_1262(), 0 )) == 1)
        {
             /* P_HANDLE_S_FAV2_VIG_00A_BATTLE_02 */ sub_52969();
        }
        if ( /* ISTIMERDONE */ sub_7182( ref l_U1287 ))
        {
             /* P_HANDLE_S_FAV2_VIG_00B_WINDOW02 */ sub_53213();
        }
        if (NOT (IS_PED_DEAD( l_U1333 )))
        {
            if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_39172( ref l_U261, l_U1333, 0 ))
            {
                ADD_EXPLOSION( -117.24000000, 211.16000000, 4.46000000, 0, 0.01000000, 1, 0, 1065353216 );
                 /* P_DELETE_HELI */ sub_9366();
            }
        }
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_38652( ref l_U408, 0 )) == 1)
        {
            AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_3_4_5_6", "", 0.00000000, 1000, 5000, -1082130432, 0 );
             /* CREATETIMER */ sub_6899( ref l_U695, 15000, 1, 0 );
             /* STARTTIMER */ sub_7049( ref l_U695 );
            l_U685 = 1;
        }
        if (g_U1045 == 1)
        {
            l_U175 = 4;
        }
        if (( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_39172( ref l_U345,  /* PLAYER_PED_ID */ sub_1262(), 0 )) || (( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_39172( ref l_U324,  /* PLAYER_PED_ID */ sub_1262(), 0 )) || ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_39172( ref l_U303,  /* PLAYER_PED_ID */ sub_1262(), 0 ))))
        {
             /* WRITESCRIPTLOG */ sub_1060( "CO", "Player Hit the Kill Box", 0 );
             /* P_KILL_PED */ sub_49277(  /* PLAYER_PED_ID */ sub_1262() );
        }
        break;
        case 4:
        if (l_U799 == 0)
        {
             /* WRITESCRIPTLOG */ sub_1060( "?ka", "We're inside eStateShutdown - Let's delete Chapter3Resources", 0 );
             /* P_DELETECHAPTER3RESOURCES */ sub_53754();
            l_U799 = 1;
            l_U800 = 1;
        }
        if (l_U800 == 1)
        {
             /* WRITESCRIPTLOG */ sub_1060( "?ka", "We're inside eStateShutdown - Resources are deleting - set exitflag for uferun", 0 );
            SET_EXITFLAG_FOR_SCRIPT( g_U1312[5]._fU32 );
            l_U800 = 0;
        }
        break;
    }
    return;
}

/* P_INITIALIZE_SCRIPT_DATA */ void sub_11027()
{
     /* WRITESCRIPTLOG */ sub_1060( "NS", "P_INITIALIZE_SCRIPT_DATA()", 0 );
    l_U175 = 0;
    l_U1165 = 0;
    l_U1166 = 0;
    l_U1190 = 0;
    l_U1191 = 0;
    l_U1321 = 0;
    l_U1434 = 0;
    l_U827 = 0;
    l_U785 = 1;
    l_U786 = 1;
    l_U1259 = 0;
    l_U1260 = 0;
    l_U787 = 1;
    l_U790 = 1;
    l_U788 = 0;
    l_U789 = 0;
    l_U1322 = 0;
    l_U791 = 0;
    l_U792 = 0;
    l_U793 = 0;
    l_U795 = 0;
    l_U794 = 1;
    l_U797 = 0;
    l_U796 = 0;
    l_U798 = 0;
    l_U799 = 0;
    l_U800 = 0;
    l_U801 = 1;
    l_U802 = 0;
    l_U803 = 0;
    l_U804 = 0;
    l_U805 = 0;
    l_U806 = 0;
    l_U807 = 0;
    l_U808 = 0;
    l_U809 = 1;
    l_U810 = 0;
    l_U811 = 0;
    l_U812 = 0;
    l_U813 = 1;
    return;
}

/* P_SETUP_STATIC_DATA */ void sub_11352()
{
     /* SETUP_SCRIPTED_SPEECH */ sub_11394( "SFV2AUD" );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U177, "tbOldlady_Start", -156.61000000, 173.49500000, 5.62000000, 8.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 89.99000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U198, "tbActivateMission", -164.30000000, 204.31000000, 3.73000000, 20.00000000, 20.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U219, "tbActivateHELIA", -167.65000000, 194.77000000, 6.59000000, 9.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U240, "tbActivateHELIA_OPENER", -164.51000000, 199.03000000, 6.59000000, 10.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U282, "tbActivate_20_TFE_ADV", -164.42100000, 197.05100000, 6.59000000, 5.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U261, "Trigger_HeliDelete", -209.08400000, 209.98100000, -14.45500000, 50.00000000, 20.00000000, 40.00000000, 0.00000000, 0.00000000, 90.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U303, "Trigger_F03DeathBox0", -175.29000000, 208.87000000, 2.67000000, 30.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U324, "Trigger_F03DeathBox1", -159.45000000, 209.38000000, 2.69000000, 30.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U345, "Trigger_F03DeathBox2", -142.98000000, 210.36000000, 2.69000000, 8.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 19.70000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U387, "tbStartLoadMPMMission", -160.38000000, 198.88000000, 2.32000000, 4.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, -90.93000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U408, "tbResetSniper", -156.86600000, 195.65000000, 2.32000000, 5.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -89.72000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U429, "tbLockLowerDoor", -154.88000000, 198.10000000, 2.32000000, 7.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -24.81000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U366, "tbHeliFlyBy", -154.69100000, 202.77300000, 3.08521000, 8.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U450, "tbLowerVigStart", -157.71000000, 194.34000000, 2.32000000, 5.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -89.72000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U471, "tbLowerVigStartFailSafe", -155.10000000, 200.65000000, 2.32000000, 5.00000000, 7.80000000, 4.00000000, 0.00000000, 0.00000000, -89.72000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U492, "tbNSDoorkickers", -153.62000000, 203.35000000, 2.32000000, 5.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -89.72000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U513, "tbNSRFRs", -148.07000000, 203.35000000, 2.32000000, 5.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -89.72000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U534, "tbDoorCloser", -142.31000000, 203.35000000, 2.32000000, 5.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -89.72000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U555, "tbNSDragFailSafe", -150.36000000, 203.53000000, 2.32000000, 5.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -89.72000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11626( ref l_U576, "tbActivateUfeSurprise", -164.22000000, 202.47000000, 5.39000000, 3.00000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETETHERBOX */ sub_13253( ref l_U597, "thrDraggerKiller", -132.28000000, 200.46000000, 5.76000000, 3.00000000, 2.00000000, 4.00000000, 0.00000000, 0.00000000, -57.10000000, 1 );
     /* RESETTIMER */ sub_7758( ref l_U1250 );
     /* RESETTIMER */ sub_7758( ref l_U1241 );
     /* RESETTIMER */ sub_7758( ref l_U1156 );
     /* RESETTIMER */ sub_7758( ref l_U749 );
     /* RESETTIMER */ sub_7758( ref l_U740 );
     /* RESETTIMER */ sub_7758( ref l_U758 );
     /* RESETTIMER */ sub_7758( ref l_U1287 );
     /* RESETTIMER */ sub_7758( ref l_U767 );
     /* RESETTIMER */ sub_7758( ref l_U776 );
     /* RESETTIMER */ sub_7758( ref l_U993 );
     /* CREATETIMER */ sub_6899( ref l_U1287, l_U1286, 1, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U912, -156.56500000, 216.49200000, 3.87500000, -92.77900000, 932140135, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U926, -156.43040000, 215.89460000, 3.82605200, -82.65300000, -1459646085, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U940, -155.48000000, 216.20900000, 3.86400000, -16.90600000, -1336753797, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U961[0], -155.70000000, 215.30000000, 3.83000000, -82.65000000, 1059840429, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U961[1], -152.53000000, 214.85000000, 3.84000000, -82.65000000, 101331905, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1002, -133.78030000, 200.29870000, 3.16701500, -146.06400000, 932140135, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1016, -134.27420000, 199.54800000, 3.16659500, -147.16300000, -1459646085, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1030, -132.95440000, 198.21820000, 3.16685500, -53.47100000, -1336753797, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1044, -141.73800000, 215.84400000, 4.98500000, 71.60300000, 1942935997, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1057, -146.78070000, 222.21780000, 8.39085100, 41.36000000, -629381325, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1070, -156.69700000, 227.69600000, 3.88000000, 98.38000000, 977944719, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1083, -132.32500000, 200.36600000, 7.44500000, 60.00000000, 1807867450, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1096, -126.45000000, 195.10600000, 10.26800000, -50.00000000, 534483867, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1109, -142.95000000, 203.78000000, 2.89925100, 90.08000000, 1274170340, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1122, -141.72000000, 203.77000000, 2.93925100, 80.55000000, 1672525755, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1262, l_U1275, l_U1278, 534483867, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1297, l_U1310, l_U1313, 534483867, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1192, -157.98000000, 195.61000000, 3.53000000, -1.31000000, -72597801, 8, 4, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1206, -126.35000000, 199.77000000, 7.45000000, 60.00000000, 101331905, 8, 4, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1220, -155.60000000, 197.82000000, 3.43000000, -1.31000000, -259407639, 8, 4, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U828[4], -177.23600000, 215.83300000, 6.56244000, -86.91000000, -961888456, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U828[3], -175.44700000, 215.96300000, 6.56244000, -93.59350000, -1538254147, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U828[2], -173.70400000, 215.95900000, 6.56243000, -81.34080000, -468474721, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U828[1], -172.28300000, 216.62500000, 6.56243000, -84.45830000, -1589080611, 7, 3, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U828[0], -170.28900000, 216.21200000, 6.56244000, -87.27470000, 1274170340, 7, 3, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1143, -157.43000000, 203.08000000, 3.40000000, 65446, -1589080611, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1168, -157.31200000, 201.94200000, 3.40000000, 65446, -1317119986, 7, 3, 2, 0, 0 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
     /* P_CREATEDOORSTRUCT */ sub_14707( ref l_U1234, -1239208525, -161.10590000, 199.22870000, 8.70437000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_SETDOORLOCKED */ sub_10233( ref l_U1234, 1 );
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_11394(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_11438();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_11438()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_CREATETRIGGERBOX */ void sub_11626(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATETETHERBOX */ void sub_13253(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_13469(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATEDOORSTRUCT */ void sub_14707(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

/* P_LOAD_ASSETS */ void sub_14790(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1060( "SP", "P_LOAD_ASSETS", 0 );
     /* LOADMODEL */ sub_14850( -805468804, uParam0 );
     /* LOADMODEL */ sub_14850( -401048192, uParam0 );
     /* LOADMODEL */ sub_14850( l_U1326, uParam0 );
     /* LOADMODEL */ sub_14850( 1750472651, uParam0 );
     /* LOADMODEL */ sub_14850( 572505350, uParam0 );
     /* LOADMODEL */ sub_14850( g_U776, uParam0 );
     /* LOADMODEL */ sub_14850( 1686109657, uParam0 );
     /* LOADMODEL */ sub_14850( -1006708222, uParam0 );
     /* LOADANIMDICT */ sub_15199( "veh@helicopter", 0, uParam0 );
     /* LOADANIMDICT */ sub_15199( "LEVEL_S_FAV2_CP_04", 0, uParam0 );
     /* LOADANIMDICT */ sub_15199( ref l_U1368, 0, uParam0 );
     /* LOADISEQ */ sub_15413( 656995606, uParam0 );
     /* LOADISEQ */ sub_15413( 1681008462, uParam0 );
     /* LOADISEQ */ sub_15413( 268580424, uParam0 );
     /* LOADISEQ */ sub_15413( 432294348, uParam0 );
     /* LOADISEQ */ sub_15413( -1170716322, uParam0 );
     /* LOADISEQ */ sub_15413( -956144910, uParam0 );
     /* LOADISEQ */ sub_15413( 1557696148, uParam0 );
     /* LOADISEQ */ sub_15413( -1979577743, uParam0 );
     /* LOADISEQ */ sub_15413( 1789862085, uParam0 );
     /* LOADISEQ */ sub_15413( -851927440, uParam0 );
     /* LOADISEQ */ sub_15413( -1827157400, uParam0 );
     /* LOADISEQ */ sub_15413( -99898118, uParam0 );
     /* LOADISEQ */ sub_15413( -790308179, uParam0 );
     /* LOADISEQ */ sub_15413( -1935874550, uParam0 );
     /* LOADACTIONTREE */ sub_15886( "VEHICLE/vehicle_heli", uParam0 );
     /* LOADACTIONTREE */ sub_15886( "LEVEL/S_FAV2/S_FAV2_HELI_DRIVER_CP04", uParam0 );
     /* LOADWEAPON */ sub_16093( -378310276, uParam0 );
     /* LOADANIMDICT */ sub_15199( "npc_pstl_cover_grenade", 0, uParam0 );
     /* LOADANIMDICT */ sub_15199( "npc_rifle_cover_grenade", 0, uParam0 );
     /* LOADANIMDICT */ sub_15199( "mped_grenade_core", 0, uParam0 );
     /* LOADVEHICLERECORDING */ sub_16338( 123, uParam0 );
     /* LOADWEAPON */ sub_16093( g_U1309, uParam0 );
    return;
}

/* LOADMODEL */ void sub_14850(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_3459( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADANIMDICT */ void sub_15199(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADISEQ */ void sub_15413(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* LOADACTIONTREE */ void sub_15886(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an Action Tree to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADWEAPON */ void sub_16093(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load weapon: {!f1} : {1} ###", 2, 1, 199730165, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADVEHICLERECORDING */ void sub_16338(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a recording to be loaded: Rec# {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_CREATE_CAMERA */ void sub_16596()
{
     /* WRITESCRIPTLOG */ sub_1060( "ka", "P_CREATE_CAMERA()", 0 );
    SET_CAM_VIEW_MODE( 0 );
    return;
}

/* CO_HANDLE_SAVEDATA */ void sub_16715(int iParam0, int iParam1, unknown uParam2)
{
     /* WRITESCRIPTLOG */ sub_1060( "CO", "CO_HANDLE_SAVEDATA : Saving Data", 0 );
    if ((g_U782 < iParam1) || (NOT iParam0->_fU0))
    {
         /* WRITESCRIPTLOG */ sub_1060( "CO", "CO_HANDLE_SAVEDATA : Saved Data", 0 );
         /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_16905( iParam0, iParam1,  /* PLAYER_PED_ID */ sub_1262(), g_U783[iParam1], g_U910[iParam1], g_U953[iParam1], g_U996[iParam1], uParam2 );
    }
    g_U782 = iParam1;
     /* P_SETUP_TIMECYCLE */ sub_21519( g_U782 );
    return;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_16905(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_1060( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_1060( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_4626( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_17196( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_17673( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_17673( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_17933( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_17673( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_17933( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_17933( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_17673( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_17933( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_17933( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_17933( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_17673( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_17933( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_17933( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_17933( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_17933( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_19513( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, g_U666, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_1060( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_17196(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_1639( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_1060( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_1060( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_17673(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_17933(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_19513(int iParam0)
{
     /* WRITE_STRING */ sub_3459( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_19601( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_19678( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_19678( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_19678( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_19678( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_19678( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_20548( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU52 );
     /* WRITE_STRING */ sub_3459( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU96 );
     /* WRITE_STRING */ sub_3459( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU100 );
     /* WRITE_STRING */ sub_3459( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU104 );
     /* WRITE_STRING */ sub_3459( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU108 );
     /* WRITE_STRING */ sub_3459( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU112 );
     /* WRITE_STRING */ sub_3459( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU116 );
     /* WRITE_STRING */ sub_3459( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU120 );
     /* WRITE_STRING */ sub_3459( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU124 );
     /* WRITE_STRING */ sub_3459( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU128 );
     /* WRITE_STRING */ sub_3459( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_19847( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_19847( g_U666 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_19847( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_19601(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_19678(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_19847(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_20548(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* P_SETUP_TIMECYCLE */ void sub_21519(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_1060( "CO", "P_SETUP_INITIAL_TIMECYCLE", 0 );
    switch (uParam0)
    {
        case 0:
        case 1:
        case 2:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
        case 3:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 0 );
        break;
        case 4:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 10 );
        break;
        case 5:
        if (g_U1046 == 1)
        {
             /* WRITESCRIPTLOG */ sub_1060( "kja", "MCE_UFE_RUN bTimeofDayReleased = TRUE", 0 );
            FREEZE_TIME_OF_DAY( 20, 10 );
            break;
        }
         /* WRITESCRIPTLOG */ sub_1060( "kja", "MCE_UFE_RUN bTimeofDayReleased = FALSE: SO WE're SETTING WEATHER AND TOD TO 20:20", 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 20, 10 );
        case 6:
        case 7:
        case 8:
        if (g_U1046 == 1)
        {
            ;
        }
        else
        {
            SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
            SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
            FREEZE_TIME_OF_DAY( 21, 0 );
        }
        break;
        case 9:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 21, 0 );
        break;
        case 10:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 22, 0 );
        break;
        default:
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
    }
    return;
}

/* F_HAS_ASSETS_LOADED */ int sub_22288()
{
    if (((HAS_WEAPON_LOADED( g_U1309 )) == 1) AND ((HAS_VEHICLE_RECORDING_BEEN_LOADED( 123 )) AND ((HAS_ANIM_DICT_LOADED( "mped_grenade_core", 0 )) AND ((HAS_ANIM_DICT_LOADED( "npc_rifle_cover_grenade", 0 )) AND ((HAS_ANIM_DICT_LOADED( "npc_pstl_cover_grenade", 0 )) AND ((IS_ACTION_TREE_LOADED( "LEVEL/S_FAV2/S_FAV2_HELI_DRIVER_CP04" )) AND ((IS_ACTION_TREE_LOADED( "VEHICLE/vehicle_heli" )) AND (((ISEQ_IS_LOADED( -1935874550 )) == 1) AND (((ISEQ_IS_LOADED( -790308179 )) == 1) AND (((ISEQ_IS_LOADED( -99898118 )) == 1) AND (((ISEQ_IS_LOADED( -99898118 )) == 1) AND (((ISEQ_IS_LOADED( -1827157400 )) == 1) AND (((ISEQ_IS_LOADED( -851927440 )) == 1) AND (((ISEQ_IS_LOADED( 1557696148 )) == 1) AND (((ISEQ_IS_LOADED( -956144910 )) == 1) AND (((ISEQ_IS_LOADED( -1170716322 )) == 1) AND (((ISEQ_IS_LOADED( 432294348 )) == 1) AND (((ISEQ_IS_LOADED( 268580424 )) == 1) AND (((ISEQ_IS_LOADED( 1681008462 )) == 1) AND (((ISEQ_IS_LOADED( 656995606 )) == 1) AND ((HAS_ANIM_DICT_LOADED( ref l_U1368, 0 )) AND ((HAS_ANIM_DICT_LOADED( "LEVEL_S_FAV2_CP_04", 0 )) AND ((HAS_ANIM_DICT_LOADED( "veh@helicopter", 0 )) AND ((HAS_WEAPON_LOADED( -378310276 )) AND ((HAS_MODEL_LOADED( -1006708222 )) AND ((HAS_MODEL_LOADED( 1686109657 )) AND ((HAS_MODEL_LOADED( g_U776 )) AND ((HAS_MODEL_LOADED( 572505350 )) AND ((HAS_MODEL_LOADED( 1750472651 )) AND ((HAS_MODEL_LOADED( l_U1326 )) AND ((HAS_MODEL_LOADED( -401048192 )) AND (HAS_MODEL_LOADED( -805468804 )))))))))))))))))))))))))))))))))
    {
        return 1;
    }
    return 0;
}

/* F_HANDLE_CREATE_ENEMIES */ int sub_22925()
{
    if (l_U810 == 0)
    {
        if ( /* F_SETUP_HELIA */ sub_22973())
        {
            l_U810++;
        }
    }
    else if (l_U810 == 1)
    {
        if ( /* GP_INIT_S_FAV2_20_TFE_ADV */ sub_26046())
        {
            l_U810++;
        }
    }
    else if (l_U810 == 2)
    {
         /* P_CREATE_S_FAV2_VIG_00A_BATTLE_01 */ sub_28837();
        l_U810++;
    }
    else if (l_U810 == 3)
    {
         /* P_CSHELI_INIT */ sub_29279();
        l_U810++;
    }
    else if (l_U810 == 4)
    {
         /* P_INIT_SCRAMBLE_1STBALC */ sub_29792();
        l_U810++;
    }
    else if (l_U810 == 5)
    {
         /* P_CREATE_UFE_SURPRISE */ sub_30700();
        l_U810++;
    }
    else if (l_U810 == 6)
    {
         /* P_CREATE_UFE_DRAG_KILLER */ sub_31001();
        l_U810++;
        return 1;
    };;;;;;;
    return 0;
}

/* F_SETUP_HELIA */ int sub_22973()
{
    vector vVar2;
    float fVar5;
    unknown[2] uVar6;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown[2] uVar33;
    unknown uVar36;
    vector vVar37;
    vector vVar40;

     /* WRITESCRIPTLOG */ sub_1060( "SP", "P_SETUP_HELIA", 0 );
    vVar2 = {-160.47900000, 210.25900000, 8.23400000};
    fVar5 = 130.00000000;
    array(ref uVar6, 2);
    array(ref uVar33, 2);
    if (l_U811 == 0)
    {
         /* P_SETUP_VEHICLE */ sub_23089( ref l_U1328, vVar2, fVar5, l_U1326 );
        if ((NOT (IS_VEHICLE_DEAD( l_U1328 ))) AND (DOES_VEHICLE_EXIST( l_U1328 )))
        {
            SET_HELI_BLADES_FULL_SPEED( l_U1328 );
            SET_VEHICLE_LIGHTS( l_U1328, 1 );
            SET_VEHICLE_DOOR_OPEN( l_U1328, 2 );
            FREEZE_VEHICLE_POSITION( l_U1328, 1 );
        }
        l_U811++;
    }
    else if (l_U811 == 1)
    {
         /* P_ADDVCPFDRIVERTOVEH */ sub_23719( l_U1328, ref l_U1333, 1 );
        if (NOT (IS_VEHICLE_DEAD( l_U1328 )))
        {
            if (NOT (IS_PED_DEAD( l_U1333 )))
            {
                TASK_HELI_MISSION( l_U1333, l_U1328, 0, 0, vVar2, 4, 5.00000000, 10, fVar5, 10, 10 );
                SET_PED_PROOFS( l_U1333, 0, 0, 0, 0, 0 );
            }
        }
        l_U811++;
    }
    else if (l_U811 == 1)
    {
         /* CLEANOBJECT */ sub_9195( l_U1329 );
        l_U1329 =  /* CREATEOBJECT */ sub_25082( 1750472651, vVar2, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
        if ((DOES_OBJECT_EXIST( l_U1329 )) == 1)
        {
            SET_OBJECT_LIGHTS( l_U1329, 1 );
            SET_OBJECT_COLLISION( l_U1329, 0 );
            SET_OBJECT_PROOFS( l_U1329, 1, 1, 1, 1, 1 );
            FREEZE_OBJECT_POSITION( l_U1329, 1 );
        }
        if ((NOT (IS_VEHICLE_DEAD( l_U1328 ))) AND ((DOES_VEHICLE_EXIST( l_U1328 )) AND (DOES_OBJECT_EXIST( l_U1329 ))))
        {
            vVar37 = {0.00000000, 0.20000000, 1.19500000};
            vVar40 = {4.71000000, 0.00000000, 0.00000000};
            FREEZE_OBJECT_POSITION( l_U1329, 0 );
            ATTACH_OBJECT_TO_VEHICLE( l_U1329, l_U1328, 0, vVar37, vVar40 );
        }
        l_U811++;
    }
    else if (l_U811 == 2)
    {
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1348, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U1328 ), 0.00000000, -239417171, 7, 3, 2, 0, 0 );
        l_U1361 =  /* CREATEPED */ sub_23822( ref l_U1348 );
        if (NOT (IS_PED_DEAD( l_U1361 )))
        {
            ATTACH_PED_TO_VEHICLE( l_U1361, l_U1328, 0, -0.25000000, 0.50000000, 0.75000000, 90.00000000, 0.00000000, 1, 0, 0, 1 );
            SET_PED_NAME_DEBUG( l_U1361, "piHeliShooter" );
            CLEAR_PED_TASKS( l_U1361 );
            SET_PED_CAN_BE_TARGETTED( l_U1361, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1361, 1 );
            SET_PED_MAX_HEALTH( l_U1361, 500 );
            SET_PED_HEALTH( l_U1361, 500, 0 );
            SET_PED_AS_ONE_SHOT_KILL( l_U1361, 0 );
            SET_PED_SUFFERS_CRITICAL_HITS( l_U1361, 0 );
            SET_PED_DIES_WHEN_INJURED( l_U1361, 0 );
            SET_PED_COMBAT_ATTRIBUTES( l_U1361, 1, 0 );
            SET_PED_ALLOWED_TO_KNEEL_AND_FIRE( l_U1361, 0 );
            SET_PED_IGNORE_LOS_CHECKS( l_U1361, 1 );
            SET_PED_FLAG_BLOCK_GORE_REACTION( l_U1361, 1 );
            SET_PED_CONSUMING_AMMO( l_U1361, 0 );
            SET_PED_PROOFS( l_U1361, 1, 1, 1, 1, 1 );
            PED_SET_ACTION_INTENTION( l_U1361, 10, -1, 0, 0, 0 );
             /* F_GIVEPEDWEAPON */ sub_3850( l_U1361, g_U1309, 25000, 0, 0 );
        }
        return 1;
    };;;;
    return 0;
}

/* P_SETUP_VEHICLE */ void sub_23089(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
     /* WRITESCRIPTLOG */ sub_1060( "SP", "P_SETUP_VEHICLE", 0 );
     /* CLEANVEHICLE */ sub_9397( (uParam0^) );
    (uParam0^) =  /* CREATEVEHICLE */ sub_23164( uParam5, uParam1, uParam4, 1, 0, 0 );
    if ((NOT (IS_VEHICLE_DEAD( (uParam0^) ))) AND (DOES_VEHICLE_EXIST( (uParam0^) )))
    {
        SET_VEHICLE_DOORS_LOCKED( (uParam0^), 2 );
        SET_VEHICLE_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_VEHICLE_ENGINE_ON( (uParam0^), 1, 1 );
        SET_VEHICLE_LIGHTS( (uParam0^), 2 );
        SET_VEHICLE_NAME_DEBUG( (uParam0^), "vi_chaseVehicle" );
        SET_VEHICLE_COLOUR_COMBINATION( (uParam0^), 0 );
    }
    return;
}

/* CREATEVEHICLE */ void sub_23164(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_14850( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* P_ADDVCPFDRIVERTOVEH */ void sub_23719(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;

    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref uVar5, -176.73100000, 220.24200000, 6.56243000, -112.78100000, 1691402102, 7, 3, 2, 0, 0 );
        if ((IS_VEHICLE_DEAD( uParam0 )) == 0)
        {
            (uParam1^) =  /* CREATEPED */ sub_23822( ref uVar5 );
            SET_PED_INTO_VEHICLE( (uParam1^), uParam0, -1 );
        }
        if (NOT (IS_PED_DEAD( (uParam1^) )))
        {
            SET_PED_COMBAT_ATTRIBUTES( (uParam1^), 2, 0 );
            SET_PED_COMBAT_MOVEMENT( (uParam1^), 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam1^), 1 );
            SET_PED_VISIBLE( (uParam1^), 0 );
            if (bParam2)
            {
                SET_PED_PROOFS( (uParam1^), 1, 1, 1, 1, 1 );
            }
        }
        if ((IS_VEHICLE_DEAD( l_U1328 )) == 0)
        {
             /* CLEANPED */ sub_9105( l_U1347 );
             /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1334, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U1328 ), 0.00000000, -961888456, 7, 3, 2, 0, 0 );
            l_U1347 =  /* CREATEPED */ sub_23822( ref l_U1334 );
            if (NOT (IS_PED_DEAD( l_U1347 )))
            {
                ATTACH_PED_TO_VEHICLE( l_U1347, l_U1328, 0, 0.40000000, 2.00000000, 0.80000000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
                SET_PED_NAME_DEBUG( l_U1347, "piHeliFlyby3" );
                CLEAR_PED_TASKS( l_U1347 );
                SET_PED_CAN_BE_TARGETTED( l_U1347, 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1347, 1 );
                SET_PED_PROOFS( l_U1347, 1, 1, 1, 1, 1 );
                PED_ACTION_TREE_PLAY_NODE( l_U1347, "/Global/S_FAV2_HELI_DRIVER_CP04/S_FAV2_DRIVER/DRIVER" );
            }
        }
    }
    return;
}

/* CREATEPED */ void sub_23822(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_14850( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_24313( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_24414( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_24313(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_24414(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* CREATEOBJECT */ void sub_25082(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_14850( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* GP_INIT_S_FAV2_20_TFE_ADV */ int sub_26046()
{
    int I;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_1060( "NS", "creating GP_INIT_S_FAV2_20_TFE_ADV", 0 );
    if (l_U812 == 0)
    {
        l_U894[4] =  /* CREATEPED */ sub_23822( ref l_U828[4] );
         /* P_INITENEMY */ sub_26201( l_U894[4], g_U1309, 0, 1, 1, "Flashlight_Favela2" );
        if (NOT (IS_PED_DEAD( l_U894[4] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[4], 1 );
            SET_BULLET_CAM_PREF( l_U894[4], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        }
        l_U812++;
    }
    else if (l_U812 == 1)
    {
        l_U894[3] =  /* CREATEPED */ sub_23822( ref l_U828[3] );
         /* P_INITENEMY */ sub_26201( l_U894[3], g_U1311, 0, 1, 1, "Flashlight_Favela2" );
        if (NOT (IS_PED_DEAD( l_U894[3] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[3], 1 );
            SET_BULLET_CAM_PREF( l_U894[3], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        }
        l_U812++;
    }
    else if (l_U812 == 2)
    {
        l_U894[2] =  /* CREATEPED */ sub_23822( ref l_U828[2] );
         /* P_INITENEMY */ sub_26201( l_U894[2], g_U1311, 0, 1, 1, 0 );
        if (NOT (IS_PED_DEAD( l_U894[2] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[2], 1 );
            SET_BULLET_CAM_PREF( l_U894[2], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        }
        l_U812++;
    }
    else if (l_U812 == 3)
    {
        l_U894[1] =  /* CREATEPED */ sub_23822( ref l_U828[1] );
         /* P_INITENEMY */ sub_26201( l_U894[1], g_U1311, 1, 1, 0, 0 );
        if (NOT (IS_PED_DEAD( l_U894[1] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[1], 1 );
            SET_BULLET_CAM_PREF( l_U894[1], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        }
        l_U812++;
    }
    else if (l_U812 == 4)
    {
        l_U894[0] =  /* CREATEPED */ sub_23822( ref l_U828[0] );
         /* P_INITENEMY */ sub_26201( l_U894[0], g_U1311, 1, 1, 0, 0 );
        if (NOT (IS_PED_DEAD( l_U894[0] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[0], 1 );
            SET_BULLET_CAM_PREF( l_U894[0], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        }
        l_U812++;
    }
    else if (l_U812 == 5)
    {
        for ( I = 0; I <= 1; I++ )
        {
            if ((NOT (IS_PED_DEAD( l_U894[I] ))) AND (DOES_PED_EXIST( l_U894[I] )))
            {
                SET_PED_AS_ONE_SHOT_KILL( l_U894[I], 1 );
                SET_PED_PROOFS( l_U894[I], 0, 0, 1, 0, 0 );
                l_U1408[I] = 0;
            }
        }
        for ( I = 2; I <= 4; I++ )
        {
            if ((NOT (IS_PED_DEAD( l_U894[I] ))) AND (DOES_PED_EXIST( l_U894[I] )))
            {
                uVar3 =  /* F_GIVEPEDWEAPON */ sub_3850( l_U894[I], g_U1309, 200, 0, 1 );
                SET_PED_ALERTNESS( l_U894[I], 0 );
                l_U1408[I] = 0;
            }
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_27427( l_U894[I], ref l_U821 );
        }
        for ( I = 0; I <= (l_U894 - 1); I++ )
        {
            if (((IS_PED_DEAD( l_U894[I] )) == 0) AND ((DOES_PED_EXIST( l_U894[I] )) == 1))
            {
                SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U894[I], 1 );
            }
        }
         /* P_SETAIS_BRAINDEAD */ sub_28293( ref l_U894, 1, 0 );
         /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_28474( ref l_U894, "S_FAV2_20_TFE_ADV_" );
         /* TELEPORTPED */ sub_28623( l_U894[0], l_U1414, l_U1417 );
         /* TELEPORTPED */ sub_28623( l_U894[1], l_U1418, l_U1421 );
         /* TELEPORTPED */ sub_28623( l_U894[2], l_U1422, l_U1425 );
         /* TELEPORTPED */ sub_28623( l_U894[3], l_U1426, l_U1429 );
         /* TELEPORTPED */ sub_28623( l_U894[4], l_U1430, l_U1433 );
        return 1;
    };;;;;;
    return 0;
}

/* P_INITENEMY */ void sub_26201(unknown uParam0, unknown uParam1, boolean bParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (bParam2)
        {
            Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, 25000, 0 );
        }
        if ((NOT (ARE_STRINGS_EQUAL( uParam5, "" ))) || (NOT (IS_STRING_NULL( uParam5 ))))
        {
            if (GET_DOES_WEAPON_EXIST( Result ))
            {
                SET_WEAPON_LIGHT_DATA_BY_NAME( Result, "Flashlight_Default" );
            }
        }
        SET_PED_COMBAT_MOVEMENT( uParam0, uParam3 );
    }
    return Result;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_27427(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_3459( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_27597( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_27597( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* P_SETUP_AI_GROUP */ void sub_27597(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* P_SETAIS_BRAINDEAD */ void sub_28293(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
             /* WRITESCRIPTLOG */ sub_1060( "CO", "BRAINDEAD", "****" );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^)[I], uParam1 );
            FREEZE_PED_POSITION( (uParam0^)[I], uParam2 );
        }
        WAIT( 0 );
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_28474(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* TELEPORTPED */ void sub_28623(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_CREATE_S_FAV2_VIG_00A_BATTLE_01 */ void sub_28837()
{
     /* WRITESCRIPTLOG */ sub_1060( "NS", "P_CREATE_S_FAV2_VIG_00A_BATTLE_01", 0 );
     /* CLEANPED */ sub_9105( l_U1261 );
    l_U1261 =  /* CREATEPED */ sub_23822( ref l_U1262 );
     /* CLEANOBJECT */ sub_9195( l_U1279 );
    l_U1279 =  /* CREATEOBJECT */ sub_25082( -1006708222, l_U1280, l_U1283, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1279 ))
    {
        FREEZE_OBJECT_POSITION( l_U1279, 1 );
    }
    if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
    {
        SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U1261, 0, 0 );
        SET_PED_GORE_FROM_PLAYER( l_U1261, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1261 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( l_U1261, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1261, 1 );
        ISEQ_REGISTER_ENTITY( 268580424, "CIV", l_U1261, 0 );
        ISEQ_REGISTER_ENTITY( 268580424, "DOOR", l_U1279, 1 );
        ISEQ_START( 268580424 );
        SET_BULLET_CAM_PREF( l_U1261, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* P_CSHELI_INIT */ void sub_29279()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    vector vVar15;
    unknown uVar18;

    vVar15 = {-166.12500000, 202.79600000, 7.45375000};
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref uVar2, vVar15, -10.00000000, 977944719, 8, 4, 0, 0, 0 );
    l_U1327 =  /* CREATEPED */ sub_23822( ref uVar2 );
     /* RESETTIMER */ sub_7758( ref l_U713 );
     /* P_PED_SET_TETHERBOX */ sub_29441( l_U1327, "CSF03VIC_Tether", -165.94900000, 202.68600000, 7.40357000, 2.00000000, 2.00000000, 2.00000000, 0.00000000, 0.00000000, -29.82810000 );
    if (NOT (IS_PED_DEAD( l_U1327 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1327, 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U1327, 1 );
    }
    if ((NOT (IS_PED_DEAD( l_U1327 ))) AND (DOES_PED_EXIST( l_U1327 )))
    {
        uVar18 =  /* F_GIVEPEDWEAPON */ sub_3850( l_U1327, g_U1310, 200, 0, 1 );
    }
    SET_PED_NAME_DEBUG( l_U1327, "piCSFIGHTHELI" );
     /* TELEPORTPED */ sub_28623( l_U1327, vVar15, -10.00000000 );
    return;
}

/* P_PED_SET_TETHERBOX */ void sub_29441(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    unknown uVar13;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
         /* P_CREATETETHERBOX */ sub_13253( ref uVar13, uParam1, uParam2, uParam5, uParam6, uParam7, uParam8, 1 );
         /* P_TETHERPED */ sub_29516( ref uVar13, uParam0, 1 );
    }
    return;
}

/* P_TETHERPED */ void sub_29516(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

/* P_INIT_SCRAMBLE_1STBALC */ void sub_29792()
{
     /* CLEANPED */ sub_9105( l_U1137 );
    l_U1137 =  /* P_CREATEPED */ sub_29842( ref l_U1070 );
    if (((IS_PED_DEAD( l_U1137 )) == 0) AND ((DOES_PED_EXIST( l_U1137 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1137, "AIT_UFE_TOUGH" );
        SET_PED_AS_ONE_SHOT_KILL( l_U1137, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1137, 1 );
        SET_BULLET_CAM_PREF( l_U1137, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_3850( l_U1137, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1137, "piSCRAMBLE3" );
     /* P_DEACTIVATEPED */ sub_30548( l_U1137 );
    return;
}

/* P_CREATEPED */ void sub_29842(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_14850( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    return iParam0->_fU40;
}

/* P_DEACTIVATEPED */ void sub_30548(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

/* P_CREATE_UFE_SURPRISE */ void sub_30700()
{
     /* WRITESCRIPTLOG */ sub_1060( "NS", "P_CREATE_UFE_SURPRISE()", 0 );
     /* CLEANPED */ sub_9105( l_U1205 );
    if (NOT (IS_PED_DEAD( l_U1205 )))
    {
         /* F_GIVEPEDWEAPON */ sub_3850( l_U1205, g_U1311, 25000, 0, 1 );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_27427( l_U1205, ref l_U821 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1205, 1 );
        SET_PED_AI_TEMPLATE( l_U1205, "AIT_UFE_TOUGH" );
        SET_ROOM_FOR_PED_BY_NAME( l_U1205, "GtaMloRoom_lower" );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
        {
            REGISTER_TARGET( l_U1205,  /* PLAYER_PED_ID */ sub_1262() );
        }
    }
     /* CREATETIMER */ sub_6899( ref l_U767, 10000, 1, 0 );
     /* STARTTIMER */ sub_7049( ref l_U767 );
    return;
}

/* P_CREATE_UFE_DRAG_KILLER */ void sub_31001()
{
     /* WRITESCRIPTLOG */ sub_1060( "NS", "P_CREATE_UFE_DRAG_KILLER()", 0 );
     /* CLEANPED */ sub_9105( l_U1219 );
    l_U1219 =  /* CREATEPED */ sub_23822( ref l_U1206 );
    if (NOT (IS_PED_DEAD( l_U1219 )))
    {
         /* F_GIVEPEDWEAPON */ sub_3850( l_U1219, g_U1311, 25000, 0, 1 );
         /* P_QUICK_ADD_PED_TO_GROUP */ sub_27427( l_U1219, ref l_U821 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1219, 1 );
        SET_PED_AI_TEMPLATE( l_U1219, "AIT_UFE_TOUGH" );
        SET_PED_ALERTNESS( l_U1219, 4 );
        SET_PED_IGNORE_LOS_CHECKS( l_U1219, 1 );
        SET_PED_OBLIVIOUS_TO_DANGER( l_U1219, 1 );
        SET_PED_RELATIONSHIP( l_U1219, 2, 3 );
        SET_PED_NAME_DEBUG( l_U1219, "piUFEDragKiller" );
         /* P_TETHERPED */ sub_29516( ref l_U597, l_U1219, 1 );
        SET_BULLET_CAM_PREF( l_U1219, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        if (NOT (IS_PED_DEAD( l_U1141 )))
        {
            REGISTER_TARGET( l_U1219, l_U1141 );
        }
    }
     /* P_DEACTIVATEPED */ sub_30548( l_U1219 );
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_31454(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_31497(  /* PLAYER_PED_ID */ sub_1262(), uParam0 );
}

/* F_ISPEDINTRIGGERBOX */ int sub_31497(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* F_GETDOOROPENRATIO */ void sub_31589(int iParam0)
{
    int iVar3;
    float Result;

    if (( /* F_DOESDOOREXIST */ sub_10263( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10347( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

/* P_CREATE_PLACEMENTS */ void sub_31879()
{
     /* P_SETDOORAFFECTEDBYBULLETS */ sub_31916( ref g_U1205, 0 );
    if ((DOES_PLACEMENT_EXIST( l_U1364 )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1364, "GtaMloRoom_lower" );
    }
    if ((DOES_PLACEMENT_EXIST( l_U1323[0] )) == 1)
    {
         /* CLEANPLACEMENT */ sub_10045( l_U1323[0] );
    }
    l_U1323[0] =  /* CREATEPLACEMENT */ sub_32131( 3711131, 65380, 196.84000000, 3.48000000, 30, 0, 60, 0, 0, 0, 1119092736 );
    if ((DOES_PLACEMENT_EXIST( l_U1323[0] )) == 1)
    {
         /* CLEANPLACEMENT */ sub_10045( l_U1323[1] );
    }
    l_U1323[1] =  /* CREATEPLACEMENT */ sub_32131( -535211597, -155.12000000, 194.47000000, 4.15000000, 30, 0, 35, 0, 0, 0, 1119092736 );
    if ((DOES_PLACEMENT_EXIST( l_U1323[1] )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1323[0], "GtaMloRoom_lower" );
    }
    if ((DOES_PLACEMENT_EXIST( l_U1323[1] )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1323[1], "GtaMloRoom_lower" );
    }
     /* P_CREATE_S_FV2_GG_97_02 */ sub_32506();
    return;
}

/* P_SETDOORAFFECTEDBYBULLETS */ void sub_31916(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_10263( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10347( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

/* CREATEPLACEMENT */ void sub_32131(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_CREATE_S_FV2_GG_97_02 */ void sub_32506()
{
     /* WRITESCRIPTLOG */ sub_1060( "CO", "P_CREATE_S_FV2_GG_97_02", 0 );
     /* P_CREATECOLLECTIBLESTRUCT */ sub_32646( ref g_U685, g_U776, -175394327, -210584001, -159.87000000, 191.82000000, 7.65000000, 0.00000000, 0.00000000, 5.00000000, "GtaMloRoom_top" );
     /* P_CREATECOLLECTIBLE */ sub_32803( ref g_U685 );
    return;
}

/* P_CREATECOLLECTIBLESTRUCT */ void sub_32646(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1060( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* P_CREATECOLLECTIBLE */ void sub_32803(int iParam0)
{
     /* WRITESCRIPTLOG */ sub_1060( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_32886( iParam0->_fU12 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_1060( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_1060( "CO", "has never been collected.", 0 );
        }
        if (( /* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ sub_32886( iParam0->_fU12 )) == 0)
        {
             /* CLEANPLACEMENT */ sub_10045( iParam0->_fU0 );
            iParam0->_fU0 =  /* CREATEPLACEMENT */ sub_32131( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                     /* WRITESCRIPTLOG */ sub_1060( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_1060( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

/* F_HAS_COLLECTIBLE_BEEN_COLLECTED */ int sub_32886(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* GP_LOCK_OLDLADY_DOOR */ void sub_33333()
{
     /* P_SETDOORLOCKED */ sub_10233( ref g_U1093, 1 );
    return;
}

/* RESET_PLAYER_WALK */ void sub_33384()
{
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
    {
         /* WRITESCRIPTLOG */ sub_1060( "CO", "RESET WALK", "******" );
        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1262(), 0 );
        SET_CAN_ROLL_DODGE(  /* PLAYER_PED_ID */ sub_1262(), 1 );
        SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1300(), 1 );
        l_U40 = 0;
    }
    return;
}

/* P_HELIA_ACTIVATE */ void sub_33517()
{
     /* WRITESCRIPTLOG */ sub_1060( "SP", "P_HELIA_ACTIVATE", 0 );
    if ((NOT (IS_VEHICLE_DEAD( l_U1328 ))) AND (DOES_VEHICLE_EXIST( l_U1328 )))
    {
        FREEZE_VEHICLE_POSITION( l_U1328, 0 );
        SET_VEHICLE_LIGHTS( l_U1328, 2 );
        if ((NOT (IS_PED_DEAD( l_U1333 ))) AND ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() ))) AND (DOES_PED_EXIST( l_U1333 ))))
        {
            HELI_SPOTLIGHT_TRACK_PED( l_U1328,  /* PLAYER_PED_ID */ sub_1262(), 1 );
        }
    }
    if ((NOT (IS_PED_DEAD( l_U1327 ))) AND (DOES_PED_EXIST( l_U1327 )))
    {
         /* TELEPORTPED */ sub_28623( l_U1327, -166.12500000, 202.79600000, 7.45375000, -10.00000000 );
        ISEQ_REGISTER_ENTITY( 656995606, "csheli_male", l_U1327, 0 );
        ISEQ_START( 656995606 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_33808( ref l_U654 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_33933( 1, l_U1330[0], "SFV2_TFE_HELI1", ref l_U654, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_33933( 0,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref l_U654, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_34200( "SFV2_UBMA", ref l_U654, 8, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U1361 )))
    {
        OPEN_SEQUENCE_TASK( ref l_U1362 );
        TASK_PAUSE( 0, 1000 );
        TASK_SHOOT_AT_COORD( 0, -163.60250000, 201.95110000, 6.06237500, 90000, -256437761, 1, 1 );
        CLOSE_SEQUENCE_TASK( l_U1362 );
        TASK_PERFORM_SEQUENCE( l_U1361, l_U1362 );
        CLEAR_SEQUENCE_TASK( l_U1362 );
    }
     /* CREATETIMER */ sub_6899( ref l_U713, 1700, 1, 0 );
     /* STARTTIMER */ sub_7049( ref l_U713 );
    l_U1407 = 1;
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_33808(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_33933(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_34200(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_34245( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_34245(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_34332( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_34332(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_34384( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_34902( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_34384(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_34902(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* P_INIT_FS_ROOFTOPRUNNERS */ void sub_35252()
{
     /* CLEANPED */ sub_9105( l_U1135 );
    l_U1135 =  /* P_CREATEPED */ sub_29842( ref l_U1044 );
    if (((IS_PED_DEAD( l_U1135 )) == 0) AND ((DOES_PED_EXIST( l_U1135 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1135, "AIT_UFE_TOUGH" );
        SET_PED_AS_ONE_SHOT_KILL( l_U1135, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1135, 1 );
        SET_BULLET_CAM_PREF( l_U1135, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_3850( l_U1135, g_U1310, 25000, 0, 0 );
    }
     /* P_DEACTIVATEPED */ sub_30548( l_U1135 );
    SET_PED_NAME_DEBUG( l_U1135, "piSCRAMBLE1" );
     /* CLEANPED */ sub_9105( l_U1136 );
    l_U1136 =  /* P_CREATEPED */ sub_29842( ref l_U1057 );
    if (((IS_PED_DEAD( l_U1136 )) == 0) AND ((DOES_PED_EXIST( l_U1136 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1136, "AIT_UFE_TOUGH" );
        SET_PED_AS_ONE_SHOT_KILL( l_U1136, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1136, 1 );
        SET_BULLET_CAM_PREF( l_U1136, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_3850( l_U1136, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1136, "piSCRAMBLE2" );
     /* P_DEACTIVATEPED */ sub_30548( l_U1136 );
    return;
}

/* P_INIT_NS_DRAG */ void sub_35755()
{
     /* CLEANPED */ sub_9105( l_U1140 );
    l_U1140 =  /* P_CREATEPED */ sub_29842( ref l_U1109 );
    if (((IS_PED_DEAD( l_U1140 )) == 0) AND ((DOES_PED_EXIST( l_U1140 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1140, "AIT_UFE_TOUGH" );
        SET_PED_AS_ONE_SHOT_KILL( l_U1140, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1140, 1 );
        FREEZE_PED_POSITION( l_U1140, 1 );
        SET_PED_INVINCIBLE( l_U1140, 1 );
         /* F_GIVEPEDWEAPON */ sub_3850( l_U1140, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1140, "piSCRAMBLE8" );
     /* CLEANPED */ sub_9105( l_U1141 );
    l_U1141 =  /* P_CREATEPED */ sub_29842( ref l_U1122 );
    if (((IS_PED_DEAD( l_U1141 )) == 0) AND ((DOES_PED_EXIST( l_U1141 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1141, "AIT_UFE_TOUGH" );
        SET_PED_AS_ONE_SHOT_KILL( l_U1141, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1141, 1 );
         /* F_GIVEPEDWEAPON */ sub_3850( l_U1141, g_U1310, 25000, 0, 0 );
        SET_PED_INVINCIBLE( l_U1141, 1 );
        FREEZE_PED_POSITION( l_U1141, 1 );
    }
    SET_PED_NAME_DEBUG( l_U1141, "piSCRAMBLE9" );
    return;
}

/* P_CREATE_VIG07A */ void sub_36160()
{
     /* WRITESCRIPTLOG */ sub_1060( "SA", "P_CREATE_VIG07A", 0 );
     /* CLEANPED */ sub_9105( l_U1142 );
    l_U1142 =  /* P_CREATEPED */ sub_29842( ref l_U1143 );
    if (NOT (IS_PED_DEAD( l_U1142 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( l_U1142, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1142, 1 );
         /* F_GIVEPEDWEAPON */ sub_3850( l_U1142, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1142, "piEnemyV07A" );
    return;
}

/* P_CREATE_VIG07A_1 */ void sub_36340()
{
     /* WRITESCRIPTLOG */ sub_1060( "SA", "P_CREATE_VIG07A_1", 0 );
     /* CLEANPED */ sub_9105( l_U1167 );
    l_U1167 =  /* P_CREATEPED */ sub_29842( ref l_U1168 );
    if (NOT (IS_PED_DEAD( l_U1167 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( l_U1167, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1167, 1 );
         /* F_GIVEPEDWEAPON */ sub_3850( l_U1167, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1167, "piEnemyV07A_1" );
     /* P_DEACTIVATEPED */ sub_30548( l_U1167 );
    return;
}

/* P_MOVE_HELIA */ void sub_36536()
{
     /* P_MOVE_HELI */ sub_36598( l_U1333, l_U1328, -218.71320000, 205.36860000, 13.33274000, -134.88900000, 1092616192 );
     /* P_SETAIS_BRAINDEAD */ sub_28293( ref l_U1330, 0, 0 );
    return;
}

/* P_MOVE_HELI */ void sub_36598(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    if (NOT (IS_VEHICLE_DEAD( uParam1 )))
    {
        if (NOT (IS_PED_DEAD( uParam0 )))
        {
            TASK_HELI_MISSION( uParam0, uParam1, 0, 0, uParam2, 4, uParam6, 5, uParam5, 1, 1 );
        }
    }
    return;
}

/* P_CLOSEDOOR */ void sub_36708(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_10263( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10347( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* GP_ACTIVATED_S_FAV2_20_TFE_ADV */ void sub_36947()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1060( "SP", "GP_ACTIVATED_S_FAV2_20_TFE_ADV", 0 );
    ISEQ_REGISTER_ENTITY( 1681008462, "tfeadv_male1", l_U894[0], 0 );
    ISEQ_REGISTER_ENTITY( 1681008462, "tfeadv_male2", l_U894[1], 0 );
    ISEQ_REGISTER_ENTITY( 1681008462, "tfeadv_male3", l_U894[2], 0 );
    ISEQ_REGISTER_ENTITY( 1681008462, "tfeadv_male4", l_U894[3], 0 );
    ISEQ_REGISTER_ENTITY( 1681008462, "tfeadv_male5", l_U894[4], 0 );
    ISEQ_START( 1681008462 );
     /* TELEPORTPED */ sub_28623( l_U894[0], l_U1414, l_U1417 );
     /* TELEPORTPED */ sub_28623( l_U894[1], l_U1418, l_U1421 );
     /* TELEPORTPED */ sub_28623( l_U894[2], l_U1422, l_U1425 );
     /* TELEPORTPED */ sub_28623( l_U894[3], l_U1426, l_U1429 );
     /* TELEPORTPED */ sub_28623( l_U894[4], l_U1430, l_U1433 );
    for ( I = 0; I < 5; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U894[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[I], 0 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
            {
                REGISTER_TARGET( l_U894[I],  /* PLAYER_PED_ID */ sub_1262() );
            }
        }
    }
    l_U1434 = 1;
     /* STARTTIMER */ sub_7049( ref l_U1287 );
    return;
}

/* F_SHOOT_LOWER_BALCONY_GLASS */ int sub_37556()
{
     /* WRITESCRIPTLOG */ sub_1060( "SA", "Shooting Glass in Lower Balcony", 0 );
    if (l_U808 == 0)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -157.16900000, 198.08260000, 5.54884100, -156.63980000, 204.27980000, 5.42533300, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 1)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -157.21720000, 200.04930000, 4.77405600, -156.63980000, 204.27980000, 5.42533300, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 2)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -156.01560000, 200.22250000, 4.74531400, -156.63980000, 204.27980000, 5.42533300, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 3)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -156.01590000, 200.23950000, 5.18309800, -156.63980000, 204.27980000, 5.42533300, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 4)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -155.46990000, 199.15750000, 4.66441400, -155.68030000, 206.93090000, 5.34520800, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 5)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -154.27190000, 198.92930000, 4.34918300, -153.82890000, 207.57280000, 5.06921000, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 6)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -154.23720000, 199.60750000, 5.54787300, -153.95420000, 205.12810000, 4.92970300, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 7)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -155.31830000, 198.40880000, 5.42256800, -155.29450000, 207.71530000, 5.48419400, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 8)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -153.52280000, 200.11970000, 4.68538400, -152.66080000, 207.45840000, 5.26663400, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 9)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -152.37240000, 200.12330000, 4.84003400, -152.66080000, 207.45840000, 5.26663400, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 10)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -153.55170000, 199.72030000, 5.31100600, -152.66080000, 207.45840000, 5.26663400, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 11)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -152.70140000, 199.87360000, 5.50341100, -152.66080000, 207.45840000, 5.26663400, 0, 1, g_U1309, 0 );
        return 1;
    };;;;;;;;;;;;
    l_U808++;
    return 0;
}

/* P_HAS_PLAYER_SHOT_IN_AREA */ int sub_38534()
{
    int iVar2;

    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
    {
        if (HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1262() ), 2.00000000, 0, ref iVar2 ))
        {
            if (( /* PLAYER_PED_ID */ sub_1262()) == iVar2)
            {
                return 1;
            }
        }
    }
    return 0;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_38652(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_31497(  /* PLAYER_PED_ID */ sub_1262(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* P_UFE_SURPRISE_ACTION */ void sub_38798()
{
     /* WRITESCRIPTLOG */ sub_1060( "NS", "P_UFE_SURPRISE_ACTION()", 0 );
     /* P_OPENDOOR */ sub_38880( ref g_U1100, 1, 1, 1065353216 );
     /* P_CLOSEDOOR */ sub_36708( ref g_U1100, 0 );
    if (NOT (IS_PED_DEAD( l_U1205 )))
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1205, 0 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U1205, -167.39000000, 199.27000000, 7.54000000,  /* PLAYER_PED_ID */ sub_1262(), 1, 5.00000000, 1101004800, -1082130432, 3 );
        }
    }
    return;
}

/* P_OPENDOOR */ void sub_38880(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_10263( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10347( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* F_ISPEDINTRIGGERBOXFIRSTTIME */ void sub_39172(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 =  /* F_ISPEDINTRIGGERBOX */ sub_31497( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

/* P_CREATE_DEAD_CS */ void sub_39379()
{
     /* WRITESCRIPTLOG */ sub_1060( "NS", "P_CREATE_DEAD_CS", 0 );
    l_U1233 =  /* CREATEPED */ sub_23822( ref l_U1220 );
    if (NOT (IS_PED_DEAD( l_U1233 )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U1233, "GtaMloRoom_lower" );
    }
     /* P_CREATE_DEAD_BODY */ sub_39507( l_U1233, 0 );
    SET_PED_NAME_DEBUG( l_U1233, "piDeadCS" );
    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1233, 14989, 0, 0, 1 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1233, 3229, 0, 0, 0 ), 100, 1, g_U1308, 0 );
    return;
}

/* P_CREATE_DEAD_BODY */ void sub_39507(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
         /* WRITE_STRING */ sub_3459( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

/* GP_SET_F3DOOR_LIMITS */ void sub_40540()
{
     /* P_CREATEDOORSTRUCT */ sub_14707( ref l_U1386, -417746690, -154.22700000, 220.15400000, 5.10000000, 0, 0, 0 );
     /* P_CREATEDOORSTRUCT */ sub_14707( ref l_U1393, -417746690, -145.81000000, 220.35100000, 3.71500000, 0, 0, 0 );
     /* P_CREATEDOORSTRUCT */ sub_14707( ref l_U1400, -417746690, -144.22900000, 217.03400000, 0.78700000, 0, 0, 0 );
     /* P_CREATEDOORSTRUCT */ sub_14707( ref l_U954, -1006708222, -154.22420000, 217.26230000, 5.02125000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_40731( ref l_U1386, 0.00000000, 80.00000000 );
     /* P_SETDOORMINMAXLIMIT */ sub_40731( ref l_U1393, 0.00000000, 100.00000000 );
     /* P_SETDOORMINMAXLIMIT */ sub_40731( ref l_U1400, 0.00000000, 100.00000000 );
     /* P_CLOSEDOOR */ sub_36708( ref l_U1386, 0 );
     /* P_CLOSEDOOR */ sub_36708( ref l_U1393, 0 );
     /* P_CLOSEDOOR */ sub_36708( ref l_U1400, 0 );
     /* P_SETDOORAFFECTEDBYBULLETS */ sub_31916( ref l_U954, 0 );
    return;
}

/* P_SETDOORMINMAXLIMIT */ void sub_40731(int iParam0, float fParam1, float fParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_10263( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10347( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        PRINTSTRING( "[SP]### Error: Door fMinLimit greater than fMaxLimit (default min:-81.0 max:81.0) ###" );
        PRINTNL();
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

/* INIT_FS_DOORKICKERS */ void sub_41041()
{
     /* CLEANPED */ sub_9105( l_U925 );
    l_U925 =  /* P_CREATEPED */ sub_29842( ref l_U912 );
    if (((IS_PED_DEAD( l_U925 )) == 0) AND ((DOES_PED_EXIST( l_U925 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U925, "AIT_UFE_TOUGH" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U925, 1 );
        SET_PED_COMBAT_MOVEMENT( l_U925, 1 );
        SET_BULLET_CAM_PREF( l_U925, "all_lms_01", "all_lms_01", "all_lms_01", "all_lms_01", 1, 0, 0, 0, 0, 0, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_3850( l_U925, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U925, "piDOORKICKERS1" );
     /* CLEANPED */ sub_9105( l_U939 );
    l_U939 =  /* P_CREATEPED */ sub_29842( ref l_U926 );
    if (((IS_PED_DEAD( l_U939 )) == 0) AND ((DOES_PED_EXIST( l_U939 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U939, "AIT_UFE_TOUGH" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U939, 1 );
        SET_PED_COMBAT_MOVEMENT( l_U939, 1 );
        SET_BULLET_CAM_PREF( l_U939, "all_lms_01", "all_lms_01", "all_lms_01", "all_lms_01", 1, 0, 0, 0, 0, 0, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_3850( l_U939, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U939, "piDOORKICKERS2" );
     /* CLEANPED */ sub_9105( l_U953 );
    l_U953 =  /* P_CREATEPED */ sub_29842( ref l_U940 );
    if (((IS_PED_DEAD( l_U953 )) == 0) AND ((DOES_PED_EXIST( l_U953 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U953, "AIT_UFE_TOUGH" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U953, 1 );
        SET_PED_COMBAT_MOVEMENT( l_U953, 1 );
        SET_BULLET_CAM_PREF( l_U953, "all_lms_01", "all_lms_01", "all_lms_01", "all_lms_01", 1, 0, 0, 0, 0, 0, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_3850( l_U953, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U953, "piDOORKICKERS3" );
    return;
}

/* INIT_NS_DOORKICKERS */ void sub_41783()
{
     /* CLEANPED */ sub_9105( l_U1015 );
    l_U1015 =  /* P_CREATEPED */ sub_29842( ref l_U1002 );
    if (((IS_PED_DEAD( l_U1015 )) == 0) AND ((DOES_PED_EXIST( l_U1015 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1015, "AIT_UFE_TOUGH" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1015, 1 );
        SET_BULLET_CAM_PREF( l_U1015, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        SET_BULLET_CAM_PREF( l_U1015, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_3850( l_U1015, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1015, "piDOORKICKERS4" );
     /* CLEANPED */ sub_9105( l_U1029 );
    l_U1029 =  /* P_CREATEPED */ sub_29842( ref l_U1016 );
    if (((IS_PED_DEAD( l_U1029 )) == 0) AND ((DOES_PED_EXIST( l_U1029 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1029, "AIT_UFE_TOUGH" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1029, 1 );
        SET_BULLET_CAM_PREF( l_U1029, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_3850( l_U1029, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1029, "piDOORKICKERS5" );
     /* CLEANPED */ sub_9105( l_U1043 );
    l_U1043 =  /* P_CREATEPED */ sub_29842( ref l_U1030 );
    if (((IS_PED_DEAD( l_U1043 )) == 0) AND ((DOES_PED_EXIST( l_U1043 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1043, "AIT_UFE_TOUGH" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1043, 1 );
        SET_BULLET_CAM_PREF( l_U1043, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_3850( l_U1043, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1043, "piDOORKICKERS6" );
    return;
}

/* P_INIT_NS_ROOFTOPRUNNERS */ void sub_42510()
{
     /* CLEANPED */ sub_9105( l_U1138 );
    if (((IS_PED_DEAD( l_U1138 )) == 0) AND ((DOES_PED_EXIST( l_U1138 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1138, "AIT_UFE_TOUGH" );
        SET_PED_AS_ONE_SHOT_KILL( l_U1138, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1138, 1 );
        SET_BULLET_CAM_PREF( l_U1138, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_3850( l_U1138, g_U1310, 25000, 0, 0 );
    }
     /* CLEANPED */ sub_9105( l_U1139 );
    l_U1139 =  /* P_CREATEPED */ sub_29842( ref l_U1096 );
    if (((IS_PED_DEAD( l_U1139 )) == 0) AND ((DOES_PED_EXIST( l_U1139 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1139, "AIT_UFE_TOUGH" );
        SET_PED_AS_ONE_SHOT_KILL( l_U1139, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1139, 1 );
        SET_BULLET_CAM_PREF( l_U1139, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
         /* F_GIVEPEDWEAPON */ sub_3850( l_U1139, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1139, "piSCRAMBLE5" );
     /* P_DEACTIVATEPED */ sub_30548( l_U1139 );
    return;
}

/* P_CREATE_FS_COVER_GRENADERS */ void sub_42963()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1060( "NS", "P_CREATE_FS_COVER_GRENADERS", 0 );
     /* CLEANPEDARRAY */ sub_9672( ref l_U988 );
    for ( I = 0; I < 2; I++ )
    {
        l_U988[I] =  /* P_CREATEPED */ sub_29842( ref l_U961[I] );
        if (I == 0)
        {
             /* F_GIVEPEDWEAPON */ sub_3850( l_U988[0], g_U1311, 25000, 0, 0 );
        }
        else
        {
             /* F_GIVEPEDWEAPON */ sub_3850( l_U988[1], g_U1308, 25000, 0, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U988[I] )))
        {
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_27427( l_U988[I], ref l_U821 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U988[I], 1 );
            SET_PED_AI_TEMPLATE( l_U988[I], "AIT_UFE_TOUGH" );
            SET_PED_COMBAT_ATTRIBUTES( l_U988[I], 512, 1 );
            SET_PED_ALERTNESS( l_U988[I], 4 );
            SET_PED_PROJECTILE_OVERRIDE_PARAMETERS( l_U988[I], 0, 15.00000000, -1082130432, 0, 0 );
            SET_BULLET_CAM_PREF( l_U988[I], "all_lms_01", "all_lms_01", "all_lms_01", "all_lms_01", 1, 0, 0, 0, 0, 0, 0, 0 );
            SET_PED_FLAG_SCRIPTED_PROJECTILE_USE( l_U988[I], 1 );
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
            {
                REGISTER_TARGET( l_U988[I],  /* PLAYER_PED_ID */ sub_1262() );
            }
        }
    }
    l_U991 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_3055( l_U988[1], -378310276, 5, 25000, 0 );
    SET_AI_PROJECTILE_THROW_ENABLED( 1 );
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_28474( ref l_U988, "piUfeFSGrenader" );
     /* P_DEACTIVATEPEDARRAY */ sub_43514( ref l_U988 );
    return;
}

/* P_DEACTIVATEPEDARRAY */ void sub_43514(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_DEACTIVATEPED */ sub_30548( (uParam0^)[I] );
    }
    return;
}

/* P_START_CHECKPOINT_THREAD */ void sub_43628(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

/* P_HANDLE_FS_DOORKICKERS */ void sub_43745()
{
    if ((ISEQ_QUERY_STATE( -1827157400, 3 )) == 0)
    {
        ISEQ_REGISTER_ENTITY( -1827157400, "TFE1", l_U925, 0 );
        ISEQ_REGISTER_ENTITY( -1827157400, "TFE2", l_U939, 0 );
        ISEQ_REGISTER_ENTITY( -1827157400, "TFE3", l_U953, 0 );
         /* WRITESCRIPTLOG */ sub_1060( "ka", "KICK IN THE DOOR! GO GO GO !", 0 );
        ISEQ_START( -1827157400 );
         /* CREATETIMER */ sub_6899( ref l_U740, 7500, 1, 0 );
         /* STARTTIMER */ sub_7049( ref l_U740 );
        l_U797 = 1;
    }
    return;
}

/* P_FS_COVER_GRENADERS_ACTION */ void sub_43970()
{
     /* WRITESCRIPTLOG */ sub_1060( "NS", "P_FS_COVER_GRENADERS_ACTION()", 0 );
     /* P_ACTIVATEPEDARRAY */ sub_44057( ref l_U988 );
    if (NOT (IS_PED_DEAD( l_U988[0] )))
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
        {
            OPEN_SEQUENCE_TASK( ref l_U1362 );
            TASK_SHOOT_AT_PED( 0,  /* PLAYER_PED_ID */ sub_1262(), 5000, 0, 0, 0, 0 );
            TASK_SHOOT_AT_PED( 0,  /* PLAYER_PED_ID */ sub_1262(), 5000, -256437761, 0, 0, 0 );
            SET_SEQUENCE_TO_REPEAT( l_U1362, 1 );
            CLOSE_SEQUENCE_TASK( l_U1362 );
            TASK_PERFORM_SEQUENCE( l_U988[0], l_U1362 );
            CLEAR_SEQUENCE_TASK( l_U1362 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U988[1] )))
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U988[1], 0 );
            TASK_COMBAT_PED( l_U988[1],  /* PLAYER_PED_ID */ sub_1262() );
        }
    }
    l_U802 = 1;
     /* CREATETIMER */ sub_6899( ref l_U993, 5000, 1, 0 );
     /* STARTTIMER */ sub_7049( ref l_U993 );
    return;
}

/* P_ACTIVATEPEDARRAY */ void sub_44057(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
         /* P_ACTIVATEPED */ sub_44109( (uParam0^)[I] );
    }
    return;
}

/* P_ACTIVATEPED */ void sub_44109(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* P_CLEANUP_FS_SCRAMBLES */ void sub_44504()
{
     /* CLEANPED */ sub_9105( l_U1137 );
     /* CLEANPED */ sub_9105( l_U1135 );
     /* CLEANPED */ sub_9105( l_U1136 );
     /* TERMINATEISEQ */ sub_8579( -1170716322, 1 );
     /* TERMINATEISEQ */ sub_8579( -956144910, 1 );
     /* TERMINATEISEQ */ sub_8579( 1557696148, 1 );
    return;
}

/* P_CREATE_S_FAV2_VIG_00A_BATTLE_02 */ void sub_44610()
{
     /* WRITESCRIPTLOG */ sub_1060( "ka", "P_CREATE_S_FAV2_VIG_00A_BATTLE_02", 0 );
     /* CLEANPED */ sub_9105( l_U1296 );
    l_U1296 =  /* CREATEPED */ sub_23822( ref l_U1297 );
     /* CLEANOBJECT */ sub_9195( l_U1314 );
    l_U1314 =  /* CREATEOBJECT */ sub_25082( -1006708222, l_U1315, l_U1318, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1314 ))
    {
        FREEZE_OBJECT_POSITION( l_U1314, 1 );
    }
    if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
    {
        SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U1296, 0, 0 );
        SET_PED_GORE_FROM_PLAYER( l_U1296, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1296 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( l_U1296, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1296, 1 );
        ISEQ_REGISTER_ENTITY( 432294348, "CIV", l_U1296, 0 );
        ISEQ_REGISTER_ENTITY( 432294348, "DOOR", l_U1314, 1 );
        ISEQ_START( 432294348 );
        SET_BULLET_CAM_PREF( l_U1296, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    }
    return;
}

/* F_HANDLE_GRENADE_THROW */ int sub_45035()
{
    if ( /* ISTIMERDONE */ sub_7182( ref l_U993 ))
    {
        if (NOT (IS_PED_DEAD( l_U988[1] )))
        {
             /* WRITESCRIPTLOG */ sub_1060( "NS", "piUfeFSGrenader[1] is in cover", 0 );
            OPEN_SEQUENCE_TASK( ref l_U1362 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_SELECT_WEAPON_TO_HAND( 0, l_U991, 0 );
            TASK_SHOOT_AT_COORD( 0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_1262() ), 3000, 1566631136, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( l_U1362 );
            CLEAR_PED_TASKS( l_U988[1] );
            SET_PED_PROJECTILE_OVERRIDE_PARAMETERS( l_U988[1], 0, 15.00000000, -1082130432, 0, 0 );
            TASK_PERFORM_SEQUENCE( l_U988[1], l_U1362 );
            CLEAR_SEQUENCE_TASK( l_U1362 );
             /* CREATETIMER */ sub_6899( ref l_U993, 7000, 1, 0 );
             /* STARTTIMER */ sub_7049( ref l_U993 );
        }
    }
    return 0;
}

/* P_HANDLE_FS_ROOFTOP_RUNNERS_3 */ void sub_45368()
{
    if ((ISEQ_QUERY_STATE( 1557696148, 3 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_1060( "NS", "P_HANDLE_FS_ROOFTOP_RUNNERS_3()", 0 );
         /* P_ACTIVATEPED */ sub_44109( l_U1137 );
        ISEQ_REGISTER_ENTITY( 1557696148, "csrunner3", l_U1137, 0 );
        ISEQ_START( 1557696148 );
        l_U805 = 1;
    }
    return;
}

/* P_CREATE_HELI_SOUND */ void sub_45669()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;

     /* WRITESCRIPTLOG */ sub_1060( "NS", "P_CREATE_HELI_SOUND()", 0 );
    l_U1366 =  /* CREATEVEHICLE */ sub_23164( 1232833631, -153.64500000, 181.97390000, 10.18083000, 0.00000000, 0, 0, 0 );
    if (DOES_VEHICLE_EXIST( l_U1366 ))
    {
        FREEZE_VEHICLE_POSITION( l_U1366, 1 );
        SET_VEHICLE_ENGINE_ON( l_U1366, 1, 1 );
        SET_VEHICLE_COLLISION( l_U1366, 0 );
        SET_VEHICLE_VISIBLE( l_U1366, 0 );
        SET_VEHICLE_PROOFS( l_U1366, 1, 1, 1, 1, 1 );
         /* P_CREATEPEDSTRUCT */ sub_45887( ref uVar2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U1366 ), 0, 1686109657, 7, 3, 2, 0, 0 );
    }
    l_U1367 =  /* CREATEPED */ sub_23822( ref uVar2 );
    if ((NOT (IS_VEHICLE_DEAD( l_U1366 ))) AND (DOES_VEHICLE_EXIST( l_U1366 )))
    {
        SET_PED_INTO_VEHICLE( l_U1367, l_U1366, -1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1367, 1 );
        SET_PED_VISIBLE( l_U1367, 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1367, 2, 0 );
         /* P_DEACTIVATEPED */ sub_30548( l_U1367 );
    }
    return;
}

/* P_CREATEPEDSTRUCT */ void sub_45887(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

/* P_SETUP_HELI_FLYBY */ void sub_46118()
{
    vector vVar2;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;

     /* WRITESCRIPTLOG */ sub_1060( "SP", "P_SETUP_HELI_FLYBY", 0 );
    vVar2 = {-145.38000000, 147.01700000, 12.52000000};
     /* LOADVEHICLERECORDING */ sub_16338( 123, 1 );
     /* CLEANVEHICLE */ sub_9397( l_U1328 );
    l_U1328 =  /* CREATEVEHICLE */ sub_23164( 1232833631, vVar2, 0.00000000, 0, 0, 0 );
    if ((NOT (IS_VEHICLE_DEAD( l_U1328 ))) AND (DOES_VEHICLE_EXIST( l_U1328 )))
    {
        SET_VEHICLE_PROOFS( l_U1328, 1, 1, 1, 1, 1 );
        SET_VEHICLE_ENGINE_ON( l_U1328, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( l_U1328 );
        SET_VEHICLE_COLOUR_COMBINATION( l_U1328, 0 );
    }
     /* P_CREATEPEDSTRUCT */ sub_45887( ref uVar5, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U1328 ), 0.00000000, 1686109657, 7, 3, 2, 0, 0 );
     /* CLEANPED */ sub_9105( l_U1333 );
    l_U1333 =  /* CREATEPED */ sub_23822( ref uVar5 );
    if ((NOT (IS_VEHICLE_DEAD( l_U1328 ))) AND (DOES_VEHICLE_EXIST( l_U1328 )))
    {
        SET_PED_INTO_VEHICLE( l_U1333, l_U1328, -1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1333, 1 );
        SET_PED_VISIBLE( l_U1333, 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1333, 2, 0 );
        SET_PED_PROOFS( l_U1333, 1, 1, 1, 1, 1 );
        SET_PED_AIM_LOCKONABLE( l_U1333, 0 );
    }
     /* CLEANPED */ sub_9105( l_U1347 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_13469( ref l_U1334, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U1328 ), 0.00000000, -961888456, 7, 3, 2, 0, 0 );
    l_U1347 =  /* CREATEPED */ sub_23822( ref l_U1334 );
    if (NOT (IS_PED_DEAD( l_U1347 )))
    {
        ATTACH_PED_TO_VEHICLE( l_U1347, l_U1328, 0, 0.40000000, 2.00000000, 0.80000000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        SET_PED_NAME_DEBUG( l_U1347, "piHeliFlyby3" );
        CLEAR_PED_TASKS( l_U1347 );
        SET_PED_CAN_BE_TARGETTED( l_U1347, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1347, 1 );
        SET_PED_PROOFS( l_U1347, 1, 1, 1, 1, 1 );
        PED_ACTION_TREE_PLAY_NODE( l_U1347, "/Global/S_FAV2_HELI_DRIVER_CP04/S_FAV2_DRIVER/DRIVER" );
    }
    if ((NOT (IS_VEHICLE_DEAD( l_U1328 ))) AND (DOES_VEHICLE_EXIST( l_U1328 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( l_U1328, 123 );
        SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( l_U1328, 6000 );
    }
    return;
}

/* P_HANDLE_LOS_ROOFTOPRUNNERS */ void sub_46905()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;

    if (l_U788 == 0)
    {
        if ((NOT (IS_PED_DEAD( l_U1136 ))) AND (NOT (IS_PED_DEAD( l_U1135 ))))
        {
            if ((IS_PED_ON_SCREEN( l_U1136, 0 )) || (IS_PED_ON_SCREEN( l_U1135, 0 )))
            {
                 /* P_HANDLE_FS_ROOFTOP_RUNNERS_1 */ sub_47021();
                 /* P_HANDLE_FS_ROOFTOP_RUNNERS_2 */ sub_47173();
                l_U788 = 1;
            }
        }
    }
    if (l_U803 == 1)
    {
        uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U1135 )};
        if (uVar2._fU8 < 4.00000000)
        {
             /* CLEANPED */ sub_9105( l_U1135 );
            l_U803 = 0;
        }
    }
    if (l_U804 == 1)
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U1136 )};
        if (uVar5._fU8 < 1.00000000)
        {
             /* CLEANPED */ sub_9105( l_U1136 );
            l_U804 = 0;
        }
    }
    return;
}

/* P_HANDLE_FS_ROOFTOP_RUNNERS_1 */ void sub_47021()
{
     /* WRITESCRIPTLOG */ sub_1060( "NS", "P_HANDLE_FS_ROOFTOP_RUNNERS()", 0 );
     /* P_ACTIVATEPED */ sub_44109( l_U1135 );
    ISEQ_REGISTER_ENTITY( -1170716322, "csrunner1", l_U1135, 0 );
    ISEQ_START( -1170716322 );
    l_U803 = 1;
    return;
}

/* P_HANDLE_FS_ROOFTOP_RUNNERS_2 */ void sub_47173()
{
     /* WRITESCRIPTLOG */ sub_1060( "NS", "P_HANDLE_FS_ROOFTOP_RUNNERS_2()", 0 );
     /* P_ACTIVATEPED */ sub_44109( l_U1136 );
    ISEQ_REGISTER_ENTITY( -956144910, "csrunner2", l_U1136, 0 );
    ISEQ_START( -956144910 );
    l_U804 = 1;
    return;
}

/* P_HANDLE_LOS_NS_BALCONY */ void sub_47457()
{
    if (l_U790 == 0)
    {
        if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_38652( ref l_U555, 0 )) || ((IS_PED_ON_SCREEN( l_U1140, 1 )) == 1))
        {
             /* P_START_NS_DRAG */ sub_47536();
             /* P_UFE_DRAG_KILLER_ACTION */ sub_47882();
            l_U787 = 0;
            l_U790 = 1;
        }
    }
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_39172( ref l_U492,  /* PLAYER_PED_ID */ sub_1262(), 0 ))
    {
         /* P_HANDLE_NS_DOORKICKERS */ sub_48196();
    }
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_39172( ref l_U513,  /* PLAYER_PED_ID */ sub_1262(), 0 ))
    {
         /* P_HANDLE_NS_ROOFTOP_RUNNERS */ sub_48477();
         /* P_HANDLE_NS_ROOFTOP_RUNNERS1 */ sub_48525();
    }
    if (l_U797 == 1)
    {
        if (((HAS_PED_BEEN_DAMAGED_BY_PED( l_U953,  /* PLAYER_PED_ID */ sub_1262(), 0 )) == 1) || (((HAS_PED_BEEN_DAMAGED_BY_PED( l_U939,  /* PLAYER_PED_ID */ sub_1262(), 0 )) == 1) || ((HAS_PED_BEEN_DAMAGED_BY_PED( l_U925,  /* PLAYER_PED_ID */ sub_1262(), 0 )) == 1)))
        {
             /* TERMINATEISEQ */ sub_8579( -1827157400, 1 );
            ISEQ_UNREGISTER_ENTITY( -1827157400, "TFE1" );
            ISEQ_UNREGISTER_ENTITY( -1827157400, "TFE2" );
            ISEQ_UNREGISTER_ENTITY( -1827157400, "TFE3" );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U925, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U939, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U953, 0 );
            REGISTER_TARGET( l_U925,  /* PLAYER_PED_ID */ sub_1262() );
            REGISTER_TARGET( l_U939,  /* PLAYER_PED_ID */ sub_1262() );
            REGISTER_TARGET( l_U953,  /* PLAYER_PED_ID */ sub_1262() );
            l_U797 = 0;
        }
        else if (( /* ISTIMERDONE */ sub_7182( ref l_U740 )) == 1)
        {
             /* CLEANPED */ sub_9105( l_U925 );
             /* CLEANPED */ sub_9105( l_U939 );
             /* CLEANPED */ sub_9105( l_U953 );
             /* TERMINATEISEQ */ sub_8579( -1827157400, 1 );
            ISEQ_UNREGISTER_ENTITY( -1827157400, "TFE1" );
            ISEQ_UNREGISTER_ENTITY( -1827157400, "TFE2" );
            ISEQ_UNREGISTER_ENTITY( -1827157400, "TFE3" );
            l_U797 = 0;
        }
    }
    if (( /* ISTIMERDONE */ sub_7182( ref l_U749 )) == 1)
    {
        l_U797 = 0;
         /* TERMINATEISEQ */ sub_8579( -851927440, 1 );
        ISEQ_UNREGISTER_ENTITY( -851927440, "TFE_1" );
        ISEQ_UNREGISTER_ENTITY( -851927440, "TFE_2" );
        ISEQ_UNREGISTER_ENTITY( -851927440, "TFE_3" );
    }
    return;
}

/* P_START_NS_DRAG */ void sub_47536()
{
     /* TELEPORTPED */ sub_28623( l_U1140, l_U1109._fU0, l_U1109._fU12 );
     /* TELEPORTPED */ sub_28623( l_U1141, l_U1122._fU0, l_U1122._fU12 );
    if (NOT (IS_PED_DEAD( l_U1140 )))
    {
        FREEZE_PED_POSITION( l_U1140, 0 );
        SET_PED_INVINCIBLE( l_U1140, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1141 )))
    {
        FREEZE_PED_POSITION( l_U1141, 0 );
        SET_PED_INVINCIBLE( l_U1141, 0 );
    }
    if ((ISEQ_QUERY_STATE( -1935874550, 3 )) == 0)
    {
        ISEQ_REGISTER_ENTITY( -1935874550, "csrunner8", l_U1140, 0 );
        ISEQ_REGISTER_ENTITY( -1935874550, "csrunner9", l_U1141, 0 );
         /* WRITESCRIPTLOG */ sub_1060( "ka", "DRAG FOREST DRAG !", 0 );
        ISEQ_START( -1935874550 );
         /* CREATETIMER */ sub_6899( ref l_U1241, 5312, 1, 0 );
         /* CREATETIMER */ sub_6899( ref l_U1250, 5000, 1, 0 );
         /* STARTTIMER */ sub_7049( ref l_U1250 );
         /* STARTTIMER */ sub_7049( ref l_U1241 );
    }
    return;
}

/* P_UFE_DRAG_KILLER_ACTION */ void sub_47882()
{
     /* WRITESCRIPTLOG */ sub_1060( "NS", "P_UFE_DRAG_KILLER_ACTION", 0 );
     /* P_ACTIVATEPED */ sub_44109( l_U1219 );
    if ((NOT (IS_PED_DEAD( l_U1219 ))) AND ((NOT (IS_PED_DEAD( l_U1141 ))) AND (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))))
    {
        OPEN_SEQUENCE_TASK( ref l_U1362 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -132.38000000, 200.84000000, 7.44000000, l_U1141, 0, 1092616192, 1101004800, -1082130432, 3 );
        TASK_COMBAT_PED( 0, l_U1141 );
        CLOSE_SEQUENCE_TASK( l_U1362 );
        TASK_PERFORM_SEQUENCE( l_U1219, l_U1362 );
        CLEAR_SEQUENCE_TASK( l_U1362 );
    }
     /* CREATETIMER */ sub_6899( ref l_U776, 4000, 1, 0 );
     /* STARTTIMER */ sub_7049( ref l_U776 );
    return;
}

/* P_HANDLE_NS_DOORKICKERS */ void sub_48196()
{
    if ((ISEQ_QUERY_STATE( -851927440, 3 )) == 0)
    {
        ISEQ_REGISTER_ENTITY( -851927440, "TFE_1", l_U1015, 0 );
        ISEQ_REGISTER_ENTITY( -851927440, "TFE_2", l_U1029, 0 );
        ISEQ_REGISTER_ENTITY( -851927440, "TFE_3", l_U1043, 0 );
         /* WRITESCRIPTLOG */ sub_1060( "ka", "KICK IN THE DOOR! GO GO GO !", 0 );
        ISEQ_START( -851927440 );
         /* P_SETDOORAFFECTEDBYBULLETS */ sub_31916( ref g_U1212, 0 );
         /* CREATETIMER */ sub_6899( ref l_U722, 1500, 1, 0 );
         /* STARTTIMER */ sub_7049( ref l_U722 );
         /* CREATETIMER */ sub_6899( ref l_U749, 6500, 1, 0 );
         /* STARTTIMER */ sub_7049( ref l_U749 );
        l_U785 = 0;
    }
    return;
}

/* P_HANDLE_NS_ROOFTOP_RUNNERS */ void sub_48477()
{
    return;
}

/* P_HANDLE_NS_ROOFTOP_RUNNERS1 */ void sub_48525()
{
    if ((ISEQ_QUERY_STATE( -99898118, 3 )) == 0)
    {
         /* P_ACTIVATEPED */ sub_44109( l_U1139 );
        ISEQ_REGISTER_ENTITY( -99898118, "csrunner5", l_U1139, 0 );
         /* WRITESCRIPTLOG */ sub_1060( "ka", "RUN FOREST RUN 5!", 0 );
        ISEQ_START( -99898118 );
        l_U807 = 1;
    }
    return;
}

/* P_HANDLE_LOWERVIG_CS */ void sub_49153()
{
    if (l_U787 == 0)
    {
        if ((IS_PED_DEAD( l_U1141 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_1060( "ka", "dragger is dead.. terminate the isequence", 0 );
             /* P_KILL_PED */ sub_49277( l_U1140 );
             /* TERMINATEISEQ */ sub_8579( -1935874550, 1 );
            l_U787 = 1;
        }
    }
    if (l_U1260 == 0)
    {
        if (( /* ISTIMERDONE */ sub_7182( ref l_U1250 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_1060( "ka", "set draggee to corpse", 0 );
             /* P_KILL_PED */ sub_49277( l_U1140 );
            l_U1260 = 1;
        }
    }
    if (l_U785 == 0)
    {
        if (( /* ISTIMERDONE */ sub_7182( ref l_U722 )) == 1)
        {
             /* P_OPENDOOR */ sub_38880( ref g_U1212, 1, 1, 1065353216 );
             /* CREATETIMER */ sub_6899( ref l_U731, 3000, 1, 0 );
             /* STARTTIMER */ sub_7049( ref l_U731 );
            l_U785 = 1;
        }
    }
    if (l_U786 == 0)
    {
        if (( /* ISTIMERDONE */ sub_7182( ref l_U731 )) == 1)
        {
             /* P_CLOSEDOOR */ sub_36708( ref g_U1212, 0 );
            l_U786 = 1;
        }
    }
    if (l_U1259 == 0)
    {
        if (( /* ISTIMERDONE */ sub_7182( ref l_U1241 )) == 1)
        {
             /* WRITESCRIPTLOG */ sub_1060( "ka", "shoot dragger to death", 0 );
             /* P_KILL_PED */ sub_49277( l_U1141 );
            l_U1259 = 1;
        }
    }
    return;
}

/* P_KILL_PED */ void sub_49277(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* P_HANDLE_HELIA_OPENER */ void sub_49656()
{
    int I;

    if (l_U1407)
    {
        for ( I = 0; I <= 1; I++ )
        {
            if ((NOT (IS_PED_DEAD( l_U1330[I] ))) AND (DOES_PED_EXIST( l_U1330[I] )))
            {
                if (IS_PED_INJURED( l_U1330[I] ))
                {
                     /* P_HELIA_OPENER */ sub_49772();
                    l_U1407 = 0;
                }
            }
        }
    }
    if (NOT (IS_PED_DEAD( l_U1327 )))
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
        {
            if (( /* GET_DISTANCE_BETWEEN_PEDS */ sub_50128(  /* PLAYER_PED_ID */ sub_1262(), l_U1327, 1 )) < 1.50000000)
            {
                 /* WRITESCRIPTLOG */ sub_1060( "NS", "kill ped", 0 );
                SET_PED_HEALTH( l_U1327, 0, 0 );
            }
        }
    }
    if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_39172( ref l_U240,  /* PLAYER_PED_ID */ sub_1262(), 0 ))
    {
        AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_3_5", "", 0.00000000, 5000, 5000, -1082130432, 0 );
         /* WRITESCRIPTLOG */ sub_1060( "KA", "PLAY FAV2_EXIT_OLDLADY_ONESHOT When player goes through door", 0 );
        if (l_U798 == 0)
        {
            if ((AUDIO_MUSIC_IS_ONESHOT_PREPARED( "FAV2_ONESHOT_H" )) == 1)
            {
                AUDIO_MUSIC_PLAY_ONESHOT();
                l_U798 = 1;
            }
        }
    }
    if ( /* ISTIMERDONE */ sub_7182( ref l_U713 ))
    {
         /* P_HELIA_OPENER */ sub_49772();
        ADD_EXPLOSION( -158.92000000, 228.24000000, 3.90000000, 0, 0.01000000, 1, 0, 1065353216 );
        l_U1407 = 0;
    }
    return;
}

/* P_HELIA_OPENER */ void sub_49772()
{
     /* WRITESCRIPTLOG */ sub_1060( "NS", "P_HELIA_OPENER()", 0 );
    ISEQ_UNREGISTER_ENTITY( 656995606, "csheli_male" );
     /* TERMINATEISEQ */ sub_8579( 656995606, 1 );
    if (NOT (IS_PED_DEAD( l_U1327 )))
    {
        if (NOT (IS_PED_DEAD( l_U1333 )))
        {
            CLEAR_PED_TASKS( l_U1327 );
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1327, 65488, 0, 0, 1 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1327, 14989, 0, 0, 0 ), 100, 1, g_U1309, l_U1333 );
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1327, 14989, 0, 0, 1 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1327, 3227, 0, 0, 0 ), 100, 1, g_U1309, l_U1333 );
            SET_PED_HEALTH( l_U1327, 0, 0 );
        }
    }
    return;
}

/* GET_DISTANCE_BETWEEN_PEDS */ void sub_50128(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

/* P_HANDLE_S_FAV2_20_TFE_ADV */ void sub_50606()
{
    int I;
    vector[3] vVar3;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;

    array(ref vVar3, 3);
    vVar3[0] = {-161.90900000, 216.14700000, 3.39400000};
    vVar3[1] = {-164.99300000, 219.78200000, 4.85400000};
    vVar3[2] = {-167.52600000, 218.32900000, 4.85400000};
    if (l_U1434)
    {
        if (ISEQ_QUERY_STATE( 1681008462, 6 ))
        {
            l_U1434 = 0;
        }
        if (l_U801 == 1)
        {
            if ( /* F_HAS_PLAYER_SHOT_AT_VIG_20 */ sub_50761())
            {
                for ( I = 0; I < 5; I++ )
                {
                    if (NOT (IS_PED_DEAD( l_U894[I] )))
                    {
                        PED_SET_ACTION_INTENTION( l_U894[I], 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
                        {
                            TASK_COMBAT_PED( l_U894[I],  /* PLAYER_PED_ID */ sub_1262() );
                        }
                    }
                }
                l_U801 = 0;
            }
        }
        for ( I = 0; I <= 1; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U894[I] )))
            {
                if (IS_PED_INJURED( l_U894[I] ))
                {
                    if (NOT l_U1408[I])
                    {
                        SET_PED_CORPSE( l_U894[I], 0 );
                        l_U1408[I] = 1;
                    }
                }
                if ((PED_GET_ACTION_INTENTION_STATUS( l_U894[I], 48 )) == 3)
                {
                    SET_PED_CORPSE( l_U894[I], 0 );
                    l_U1408[I] = 1;
                }
            }
        }
        for ( I = 2; I <= 4; I++ )
        {
            if ((IS_PED_INJURED( l_U894[I] )) || (IS_PED_DEAD( l_U894[I] )))
            {
                if (NOT l_U1408[I])
                {
                    l_U1321 = 1;
                }
            }
            if (NOT (IS_PED_DEAD( l_U894[I] )))
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( l_U894[I], 48 )) == 3)
                {
                    DELETE_PED( ref l_U894[I] );
                    l_U1408[I] = 1;
                }
            }
        }
        if (l_U1321 == 1)
        {
            if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
            {
                for ( I = 0; I < 5; I++ )
                {
                     /* WRITESCRIPTLOG */ sub_1060( "ka", "Interrupted !!!! UFE Should Attack player!", 0 );
                    if (NOT (IS_PED_DEAD( l_U894[I] )))
                    {
                        PED_SET_ACTION_INTENTION( l_U894[I], 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                        OPEN_SEQUENCE_TASK( ref l_U1362 );
                        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1262() )))
                        {
                            REGISTER_TARGET( l_U894[I],  /* PLAYER_PED_ID */ sub_1262() );
                            TASK_COMBAT_PED( 0,  /* PLAYER_PED_ID */ sub_1262() );
                        }
                        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                        CLOSE_SEQUENCE_TASK( l_U1362 );
                        CLEAR_PED_TASKS( l_U894[I] );
                        TASK_PERFORM_SEQUENCE( l_U894[I], l_U1362 );
                        CLEAR_SEQUENCE_TASK( l_U1362 );
                    }
                }
            }
            ISEQ_UNREGISTER_ENTITY( 1681008462, "tfeadv_male1" );
            ISEQ_UNREGISTER_ENTITY( 1681008462, "tfeadv_male2" );
            ISEQ_UNREGISTER_ENTITY( 1681008462, "tfeadv_male3" );
            ISEQ_UNREGISTER_ENTITY( 1681008462, "tfeadv_male4" );
            ISEQ_UNREGISTER_ENTITY( 1681008462, "tfeadv_male5" );
             /* TERMINATEISEQ */ sub_8579( 1681008462, 1 );
            l_U1434 = 0;
        }
    }
    return;
}

/* F_HAS_PLAYER_SHOT_AT_VIG_20 */ int sub_50761()
{
    int I;

    for ( I = 0; I < 5; I++ )
    {
        if (I > 1)
        {
            if ( /* F_HAS_PLAYER_SHOT_NEAR_PED */ sub_50831( l_U894[I] ))
            {
                 /* WRITESCRIPTLOG */ sub_1060( "NS", "Player_shot vig 20", 0 );
                return 1;
            }
        }
    }
    return 0;
}

/* F_HAS_PLAYER_SHOT_NEAR_PED */ int sub_50831(unknown uParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 ), 6.00000000, ref iVar3 ))
        {
            if (iVar3 == ( /* PLAYER_PED_ID */ sub_1262()))
            {
                 /* WRITESCRIPTLOG */ sub_1060( "NS", "Player_shot near a ped", 0 );
                return 1;
            }
        }
    }
    return 0;
}

/* P_HANDLE_TOD */ void sub_51944()
{
    int iVar2;
    unknown uVar3;

    if (g_U1046 == 0)
    {
        if (IS_TIME_OF_DAY_FROZEN() == 0)
        {
            GET_TIME_OF_DAY( ref iVar2, ref uVar3 );
            if (iVar2 == 21)
            {
                 /* WRITESCRIPTLOG */ sub_1060( "kja", "TIME IS 21h, FReeze T-O-D", 0 );
                FREEZE_TIME_OF_DAY( 21, 0 );
            }
        }
    }
    return;
}

/* P_HANDLE_VIG07A */ void sub_52070()
{
    if (l_U1165 == 0)
    {
        if (( /* F_ISPLAYERINTRIGGERBOX */ sub_31454( l_U471 )) || (IS_SPHERE_VISIBLE( -155.47830000, 200.26340000, 3.43487100, 1.00000000, 1 )))
        {
            if (NOT (IS_PED_DEAD( l_U1142 )))
            {
                 /* WRITESCRIPTLOG */ sub_1060( "SA", "Starting - piEnemyV07A", 0 );
                 /* TELEPORTPED */ sub_28623( l_U1142, l_U1143._fU0, l_U1143._fU12 );
                ISEQ_REGISTER_ENTITY( -1979577743, "civ", l_U1142, 0 );
                ISEQ_START( -1979577743 );
                 /* CREATETIMER */ sub_6899( ref l_U1156, 2500, 1, 0 );
                 /* STARTTIMER */ sub_7049( ref l_U1156 );
            }
            l_U1165 = 1;
        }
    }
    if (l_U1166 == 0)
    {
        if ( /* ISTIMERDONE */ sub_7182( ref l_U1156 ))
        {
             /* WRITESCRIPTLOG */ sub_1060( "SA", "tmrVig07ADone", 0 );
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1142, 65488, -1, 1, 0 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1142, 65488, 0, 0, 0 ), 20, 1, g_U1308, 0 );
            l_U1166 = 1;
        }
    }
    return;
}

/* P_HANDLE_VIG07A_1 */ void sub_52429()
{
    if (l_U1190 == 0)
    {
        if (( /* F_ISPLAYERINTRIGGERBOX */ sub_31454( l_U471 )) || (IS_SPHERE_VISIBLE( -155.47830000, 200.26340000, 3.43487100, 1.00000000, 1 )))
        {
            if (NOT (IS_PED_DEAD( l_U1167 )))
            {
                 /* WRITESCRIPTLOG */ sub_1060( "SA", "Starting - piEnemyV07A_1", 0 );
                 /* P_ACTIVATEPED */ sub_44109( l_U1167 );
                 /* TELEPORTPED */ sub_28623( l_U1167, l_U1168._fU0, l_U1168._fU12 );
                ISEQ_REGISTER_ENTITY( 1789862085, "civ", l_U1167, 0 );
                ISEQ_START( 1789862085 );
                 /* CREATETIMER */ sub_6899( ref l_U1181, 3500, 1, 0 );
                 /* STARTTIMER */ sub_7049( ref l_U1181 );
            }
            l_U1190 = 1;
        }
    }
    if (l_U1191 == 0)
    {
        if ( /* ISTIMERDONE */ sub_7182( ref l_U1181 ))
        {
             /* WRITESCRIPTLOG */ sub_1060( "SA", "tmrVig07A_1Done", 0 );
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1167, 65488, -1, 1, 0 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1167, 65488, 0, 0, 0 ), 20, 1, g_U1308, 0 );
            l_U1191 = 1;
        }
    }
    return;
}

/* P_HANDLE_PLAYER_DAWDLING_ON_BALC */ void sub_52804()
{
    if ((l_U685 == 0) AND (( /* ISTIMERDONE */ sub_7182( ref l_U686 )) == 1))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_33808( ref l_U664 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_33933( 0,  /* PLAYER_PED_ID */ sub_1262(), "MAX", ref l_U664, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_34200( "SFV2_MXSTNDBL", ref l_U664, 8, 1 );
        l_U685 = 1;
    }
    return;
}

/* P_HANDLE_S_FAV2_VIG_00A_BATTLE_02 */ void sub_52969()
{
     /* WRITESCRIPTLOG */ sub_1060( "ka", "pi00ABattle_DOOR_02 - INSIDE PROC - FIRE OFF ACT_INT_SEQ_ACTION01", 0 );
    if (NOT (IS_PED_DEAD( l_U1296 )))
    {
         /* WRITESCRIPTLOG */ sub_1060( "ka", "pi00ABattle_DOOR_02 - ACT INT 01", 0 );
        PED_SET_ACTION_INTENTION( l_U1296, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    return;
}

/* P_HANDLE_S_FAV2_VIG_00B_WINDOW02 */ void sub_53213()
{
    if (NOT (IS_PED_DEAD( l_U1261 )))
    {
         /* WRITESCRIPTLOG */ sub_1060( "NS", "pi00ABATTLE_DOOR_01 - ACT INT 01", 0 );
        PED_SET_ACTION_INTENTION( l_U1261, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    return;
}

/* P_DELETECHAPTER3RESOURCES */ void sub_53754()
{
     /* P_CLEAN_PLACEMENTS */ sub_10009();
     /* CLEANOBJECT */ sub_9195( l_U1329 );
     /* CLEANPED */ sub_9105( l_U1333 );
     /* CLEANVEHICLE */ sub_9397( l_U1328 );
     /* P_DELETEALLPEDS */ sub_8545();
     /* P_UNLOAD_ASSETS */ sub_53832();
    return;
}

/* P_UNLOAD_ASSETS */ void sub_53832()
{
     /* WRITESCRIPTLOG */ sub_1060( "SP", "FAVELA RAID: P_UNLOAD_ASSETS", 0 );
     /* UNLOADMODEL */ sub_53907( -401048192 );
     /* UNLOADMODEL */ sub_53907( -1474177767 );
     /* UNLOADMODEL */ sub_53907( -805468804 );
     /* UNLOADMODEL */ sub_53907( -1006708222 );
     /* UNLOADWEAPON */ sub_54092( -378310276 );
     /* UNLOADMODEL */ sub_53907( g_U776 );
    REMOVE_ANIM_DICT( "npc_pstl_cover_grenade", 0 );
    REMOVE_ANIM_DICT( "npc_rifle_cover_grenade", 0 );
    REMOVE_ANIM_DICT( "mped_grenade_core", 0 );
    return;
}

/* UNLOADMODEL */ void sub_53907(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_3459( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* UNLOADWEAPON */ void sub_54092(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}


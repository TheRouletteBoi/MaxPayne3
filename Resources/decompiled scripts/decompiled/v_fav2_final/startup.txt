void main()
{
    g_U0 = 2;
    g_U1 = 5;
    g_U2 = 10;
    g_U3 = 10;
    g_U4 = 3;
    g_U5 = 10000;
    g_U6 = 10000;
    g_U7 = 50;
    g_U8 = 70;
    g_U9 = 100;
    g_U10 = 200;
    g_U11 = 250;
    g_U12 = 300;
    g_U13 = 3;
    g_U14 = 5;
    g_U15 = 10;
    g_U16 = 15;
    g_U17 = 20;
    g_U18 = 25;
    g_U19 = 50;
    g_U20 = 100;
    g_U21 = 150;
    g_U22 = 200;
    g_U23 = 5;
    g_U24 = 20.00000000;
    g_U25 = 10;
    g_U26 = 1500;
    g_U27 = 10;
    g_U28 = 5;
    g_U29 = 10;
    g_U30 = 20;
    g_U31 = 10;
    g_U32 = 10;
    g_U33 = 20;
    g_U34 = 25;
    g_U35 = 10;
    g_U36 = 20;
    g_U37 = 5000;
    g_U38 = 20;
    g_U39 = 10;
    g_U40 = 10;
    g_U41 = 20;
    g_U42 = 30;
    g_U43 = 20;
    g_U44 = 25;
    g_U45 = 10;
    g_U46 = 10;
    g_U47 = 20;
    g_U48 = 10;
    g_U49 = 15;
    g_U50 = 15;
    g_U51 = 10;
    g_U52 = 5;
    g_U53 = 10;
    g_U54 = 5;
    g_U55 = 30;
    g_U56 = 20;
    g_U57 = 10;
    g_U58 = 5;
    g_U59 = 0.33334000;
    g_U60 = 1.00000000;
    g_U61 = 0.11111000;
    g_U62 = 0.20000000;
    g_U63 = 0.10000000;
    g_U2519 = 0;
    g_U2520 = -1;
    g_U2544 = -1;
    g_U4702 = 0;
    g_U4724 = -1;
    g_U4895 = 1;
    g_U4900 = 10;
    g_U4901 = 20;
    g_U4902 = 30;
    g_U4903 = 10;
    g_U4904 = 10;
    g_U4905 = 10;
    g_U4906 = 10;
    g_U4907 = 10;
    g_U4908 = 20;
    g_U4909 = 10;
    g_U4910 = 30;
    g_U4911 = 10;
    g_U4912 = 10;
    g_U4913 = 20;
    g_U4914 = 10;
    g_U4915 = 20;
    g_U4916 = 10;
    g_U4917 = 5;
    g_U4918 = 20;
    g_U4919 = 50;
    g_U4920 = 10;
    g_U4921 = 20;
    g_U4922 = 10;
    g_U4923 = 5;
    g_U4924 = 20;
    g_U4925 = 20;
    g_U4926 = 50;
    g_U4927 = 100;
    g_U4928 = 125;
    g_U4929 = 15;
    g_U4930 = 30;
    g_U4931 = 50;
    g_U4932 = 100;
    g_U4933 = 100;
    g_U4934 = 10;
    g_U4935 = 20;
    g_U4936 = 20;
    g_U4937 = 20;
    g_U4938 = 5;
    g_U4939 = 25;
    g_U4940 = 20;
    g_U4941 = 20;
    g_U4942 = 10;
    g_U4943 = 20;
    g_U4944 = 20;
    g_U4945 = 20;
    g_U4946 = 10;
    g_U4947 = 10;
    g_U4948 = 20;
    g_U4949 = 75;
    g_U4950 = 75;
    g_U4951 = 200;
    g_U4952 = 200;
    g_U4953 = 20;
    g_U4954 = 10;
    g_U4955 = 10;
    g_U4956 = 200;
    g_U4957 = 25;
    g_U4958 = 25;
    g_U4959 = 75;
    g_U4960 = 150;
    g_U4961 = 0.20000000;
    g_U4962 = 0.20000000;
    g_U4963 = 0.10000000;
    g_U4964 = 0.10000000;
    g_U4965 = 0.10000000;
    g_U4966 = 0.10000000;
    g_U4967 = 0.10000000;
    g_U4968 = GET_STREAM_PED_PACK_ID( -1126833125 );
    g_U4969 = -1;
    g_U4970 = g_U2544;
    g_U5071 = 0;
    g_U5264 = -1;
    g_U5267 = 0;
    g_U5370 = 300;
    g_U5371 = 250;
    g_U5372 = 200;
    g_U5373 = 175;
    g_U5374 = 150;
    g_U5375 = 100;
    g_U5376 = 80;
    g_U5377 = 70;
    g_U5378 = 60;
    g_U5379 = 50;
    g_U5380 = 60;
    g_U5381 = 45;
    g_U5382 = 30;
    g_U5383 = 20;
    g_U5384 = 10;
    g_U5385 = 250;
    g_U5453 = 1;
    g_U5840 = 1;
    CREATE_PLAYER_WITH_AVATAR( NETWORK_GET_AVATAR_SELECTED_DEATHMATCH_SLOT_HASH(), 0, 0, 65486, 1 );
    sub_1108( "lev_startup", 1536 );
    SET_CAM_VIEW_MODE( 1 );
    sub_1211();
    return;
}

void sub_1108(unknown uParam0, unknown uParam1)
{
    unknown uVar4;

    REQUEST_SCRIPT( uParam0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_SCRIPT_LOADED( uParam0 )))
    {
        SEV_YIELD();
    }
    uVar4 = START_NEW_SCRIPT( uParam0, uParam1 );
    while (IS_THREAD_ACTIVE( uVar4 ))
    {
        SEV_YIELD();
    }
    return;
}

void sub_1211()
{
    int iVar2;
    boolean bVar3;
    boolean bVar4;
    boolean bVar5;

    SET_DEBUG_ACTIVE( 0 );
    iVar2 = GET_CHECKPOINT_SELECTED();
    bVar3 = iVar2 == 0;
    bVar4 = iVar2 == 3;
    bVar5 = iVar2 == 4;
    sub_1277( g_U5603, bVar3, bVar4, GET_HASH_KEY( ref g_U5606 ) );
    if (bVar4)
    {
        ;
    }
    else if (bVar3)
    {
        SET_ENABLE_PED_PROCESS_INTELLIGENCE( 1 );
    }
    else if (bVar5)
    {
        sub_2273();
    }
    else
    {
        SET_DEBUG_LINES_AND_SPHERES_DRAWING_ACTIVE( 1 );
        REQUEST_SCRIPT( "payne_versus_devmenuwidgets" );
        "[doubled result, dropped if not asigned]";
        while (NOT (HAS_SCRIPT_LOADED( "payne_versus_devmenuwidgets" )))
        {
            WAIT( 1 );
        }
        START_NEW_SCRIPT_TYPED( "payne_versus_devmenuwidgets", 8192, 0 );
    };;;
    return;
}

void sub_1277(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5)
{
    LOAD_SCENE( uParam0 );
    GIVE_WEAPON_TO_PED_HAND( sub_1297(), -1074756423, 250000, 0 );
    GIVE_WEAPON_TO_PED_HOLSTER( sub_1297(), 406496141, 250000, 0 );
    sub_1390( uParam0, 0.00000000, uParam5, 0 );
    DO_SCREEN_FADE_IN( 0 );
    if (NOT bParam4)
    {
        FORCE_WEAPON_LOAD();
    }
    if (bParam3)
    {
        sub_1612( uParam0 );
    }
    return;
}

void sub_1297()
{
    return GET_PLAYER_PED( INT_TO_PLAYERINDEX( GET_PLAYER_ID() ) );
}

void sub_1390(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4, boolean bParam5)
{
    unknown uVar8;

    REQUEST_COLLISION_AT_COORD( uParam0 );
    LOAD_SCENE( uParam0 );
    if (iParam4 != 0)
    {
        LOAD_SCENE_FOR_ROOM_BY_KEY( GET_INTERIOR_AT_COORDS( uParam0 ), iParam4 );
    }
    uVar8 = sub_1448();
    if (NOT (IS_PED_DEAD( uVar8 )))
    {
        if (bParam5)
        {
            SET_PED_COORDS_NO_OFFSET( uVar8, uParam0 );
        }
        else
        {
            SET_PED_COORDS( uVar8, uParam0, 1 );
        }
        SET_PED_HEADING( uVar8, uParam3 );
        if (iParam4 != 0)
        {
            SET_ROOM_FOR_PED_BY_KEY( uVar8, iParam4 );
        }
    }
    return;
}

void sub_1448()
{
    return GET_PLAYER_PED( GET_PLAYER_ID() );
}

void sub_1612(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_1647( 1274458747, "mp_cs_201", uParam0, 0, 1, 0, 0 );
    sub_1647( 1274458747, "mp_cs_202", uParam0, 0, 1, 0, 0 );
    sub_1647( 1274458747, "mp_cs_203", uParam0, 0, 1, 0, 0 );
    sub_1647( 1274458747, "mp_cs_204", uParam0, 0, 1, 0, 0 );
    sub_1647( 1274458747, "mp_cs_205", uParam0, 0, 1, 0, 0 );
    sub_1647( 1274458747, "mp_cs_206", uParam0, 0, 1, 0, 0 );
    sub_1647( 1274458747, "mp_cs_207", uParam0, 0, 1, 0, 0 );
    sub_1647( 1274458747, "mp_cs_208", uParam0, 0, 1, 0, 0 );
    sub_1647( -1238607547, "mp_ufe_01", uParam0, 0, 1, 0, 0 );
    sub_1647( -1238607547, "mp_ufe_02", uParam0, 0, 1, 0, 0 );
    sub_1647( 174663350, "mp_ufe_03", uParam0, 0, 1, 0, 0 );
    sub_1647( 174663350, "mp_ufe_04", uParam0, 0, 1, 0, 0 );
    sub_1647( -1238607547, "mp_ufe_05", uParam0, 0, 1, 0, 0 );
    sub_1647( -1238607547, "mp_ufe_06", uParam0, 0, 1, 0, 0 );
    sub_1647( -1238607547, "mp_ufe_07", uParam0, 0, 1, 0, 0 );
    return;
}

void sub_1647(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, boolean bParam6, boolean bParam7, boolean bParam8)
{
    unknown Result;

    if (bParam6)
    {
        REQUEST_MODEL( uParam0 );
        "[doubled result, dropped if not asigned]";
        while (NOT (HAS_MODEL_LOADED( uParam0 )))
        {
            WAIT( 0 );
        }
    }
    Result = CREATE_PED( 26, uParam0, uParam2, uParam5, 1, 0 );
    SET_PED_HEADING( Result, uParam5 );
    if (bParam7)
    {
        ;
    }
    if (bParam8)
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( Result, 1 );
        FREEZE_PED_POSITION( Result, 1 );
    }
    return Result;
}

void sub_2273()
{
    int[15] iVar2;
    int[14] iVar18;

    array(ref iVar2, 15);
    array(ref iVar18, 14);
    iVar18[0] = -193028838;
    iVar18[1] = 1157878433;
    iVar18[2] = 147144082;
    iVar18[3] = -628443318;
    iVar18[4] = 786970899;
    iVar18[5] = 1887961707;
    iVar18[6] = -496155350;
    iVar18[7] = 534634923;
    iVar18[8] = -1750088116;
    iVar18[9] = 1026452798;
    iVar18[10] = -2030956875;
    iVar18[11] = 204318279;
    iVar18[12] = -1789417893;
    iVar18[13] = 1951695172;
    iVar2[0] = 297;
    iVar2[1] = 247;
    iVar2[2] = 187;
    iVar2[3] = 147;
    iVar2[4] = 168;
    iVar2[5] = 336;
    iVar2[6] = 352;
    iVar2[7] = 25;
    iVar2[8] = 118;
    iVar2[9] = 96;
    iVar2[10] = 67;
    iVar2[11] = 57;
    iVar2[12] = 27;
    iVar2[13] = 78;
    iVar2[14] = 261;
    sub_2626( 0, sub_2564( 0 ), 1, 0, 0, 0 );
    sub_6011( ref iVar18, ref iVar2 );
    return;
}

void sub_2564(unknown uParam0)
{
    return sub_2578( 0, uParam0, 0 );
}

void sub_2578(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return NETWORK_LEVEL_DATA_RUN_STORED_QUERY_NODE( g_U2544, uParam0, uParam1, uParam2 );
}

void sub_2626(unknown uParam0, unknown uParam1, int iParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    if (sub_2638( uParam0 ))
    {
        sub_2676( uParam0 );
        sub_3486( uParam0, uParam1, 0, 1, uParam3, uParam4, 1, uParam5 );
        if ((NOT g_U116._fU0) AND (uParam5))
        {
            iParam2 = 0;
        }
        sub_5731( uParam0, iParam2 );
    }
    return;
}

void sub_2638(unknown uParam0)
{
    return g_U126[uParam0]._fU0;
}

void sub_2676(unknown uParam0)
{
    sub_2692( uParam0, 100, 0 );
    sub_2846( 100 );
    sub_2910( uParam0, 1, 1 );
    return;
}

void sub_2692(unknown uParam0, unknown uParam1, unknown uParam2)
{
    SEV_ISOLATE();
    if (sub_2711( uParam0 ))
    {
        sub_2766( uParam1, uParam2 );
    }
    SEV_ISOLATE_OFF();
    return;
}

boolean sub_2711(int iParam0)
{
    return iParam0 == sub_2723();
}

void sub_2723()
{
    return SEV_GET_MY_PLAYER();
}

void sub_2766(unknown uParam0, unknown uParam1)
{
    SEV_ISOLATE();
    if ((uParam1) || (NOT g_U3155))
    {
        MANOGAMETESTER_DISABLE();
        DO_SCREEN_FADE_OUT( uParam0 );
    }
    SEV_ISOLATE_OFF();
    return;
}

void sub_2846(unknown uParam0)
{
    if (IS_THIS_THREAD_ISOLATED())
    {
        WAIT( uParam0 );
    }
    else
    {
        SEV_WAIT_FOR( SEV_ON_TIMER( uParam0 ) );
    }
    return;
}

void sub_2910(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if ((sub_2924( uParam0 )) || (uParam1))
    {
        sub_3005( uParam0, 1, 1 );
        sub_3245( uParam0, 0 );
        sub_3338( uParam0, 1 );
    }
    else if (bParam2)
    {
        sub_3245( uParam0, 1 );
    }
    sub_3005( uParam0, 0, bParam2 );
    sub_3338( uParam0, 0 );;
    return;
}

boolean sub_2924(unknown uParam0)
{
    return (g_U126[uParam0]._fU32 == 3) || ((g_U126[uParam0]._fU32 == 2) || (g_U126[uParam0]._fU32 == 1));
}

void sub_3005(unknown uParam0, boolean bParam1, boolean bParam2)
{
    if (bParam1)
    {
        SET_PED_VISIBLE( g_U126[uParam0]._fU72, 0 );
        sub_3048( uParam0, 1 );
        SET_PED_COLLISION( g_U126[uParam0]._fU72, 0 );
    }
    else
    {
        SET_PED_COLLISION( g_U126[uParam0]._fU72, 1 );
        if (bParam2)
        {
            sub_3048( uParam0, 0 );
        }
        SET_PED_VISIBLE( g_U126[uParam0]._fU72, 1 );
    }
    SET_PED_CAN_BE_TARGETTED( g_U126[uParam0]._fU72, NOT bParam1 );
    g_U126[uParam0]._fU16 = bParam1;
    return;
}

void sub_3048(unknown uParam0, unknown uParam1)
{
    FREEZE_PED_POSITION( g_U126[uParam0]._fU72, uParam1 );
    g_U126[uParam0]._fU24 = uParam1;
    return;
}

void sub_3245(unknown uParam0, unknown uParam1)
{
    SET_PLAYER_CONTROL_FOR_NETWORK( sub_3257( uParam0 ), uParam1, 1 );
    g_U126[uParam0]._fU28 = uParam1;
    return;
}

void sub_3257(unknown uParam0)
{
    unknown Result;

    SEV_ISOLATE();
    Result = SEV_PLAYER_SLOT_TO_INDEX( uParam0 );
    SEV_ISOLATE_OFF();
    return Result;
}

void sub_3338(unknown uParam0, unknown uParam1)
{
    SET_PLAYER_INVINCIBLE( sub_3257( uParam0 ), uParam1 );
    SET_PED_PROOFS( g_U126[uParam0]._fU72, uParam1, uParam1, uParam1, uParam1, uParam1 );
    g_U126[uParam0]._fU20 = uParam1;
    return;
}

void sub_3486(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_3512( uParam0, uParam1, uParam2, uParam5, uParam4, uParam3, uParam6, uParam7 );
    return;
}

void sub_3512(unknown uParam0, int iParam1, boolean bParam2, unknown uParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;

    if ((iParam1 == g_U2544) || (iParam1 == nil))
    {
        SCRIPT_ASSERT( "__sev_mp_TeleportPlayerToSpawnPoint() Invalid spawn point node {} requested", 1, 1793, iParam1 );
        return;
    }
    uVar10 = {sub_3637( iParam1 )};
    SEV_ISOLATE();
    if (bParam4)
    {
        uVar13 = uParam3;
    }
    else if (bParam2)
    {
        uVar13 = sub_3714( iParam1, 1 );
    }
    else
    {
        uVar14 = {sub_3831( uParam0 )};
        sub_3874( iParam1, uVar14, ref uVar13, 20.00000000 );
    }
    SEV_ISOLATE_OFF();
    sub_4430( uParam0, uVar10, uVar13, sub_4385( iParam1 ), uParam5, uParam6, uParam7 );
    return;
}

void sub_3637(unknown uParam0)
{
    unknown Result;
    unknown uVar4;
    unknown uVar5;

    NETWORK_LEVEL_DATA_GET_VECTOR_FROM_NODE( ref Result, ":pos", uParam0 );
    return Result;
}

void sub_3714(unknown uParam0, boolean bParam1)
{
    float Result;
    unknown uVar5;

    Result = sub_3726( uParam0 );
    if (bParam1)
    {
        NETWORK_LEVEL_DATA_GET_FLOAT_FROM_NODE( ref uVar5, ":groupHeading", uParam0 );
        Result += uVar5;
    }
    return Result;
}

void sub_3726(unknown uParam0)
{
    unknown Result;

    NETWORK_LEVEL_DATA_GET_FLOAT_FROM_NODE( ref Result, ":heading", uParam0 );
    return Result;
}

string sub_3831(unknown uParam0)
{
    return "[dynamic result, ret vals = 11]";
    break;
    g_U2496;
    uParam0;
    break;
}

void sub_3874(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    float fVar23;
    float fVar24;
    unknown uVar25;
    boolean Result;
    int I;

    if (uParam1._fU0 <= 0)
    {
        (uParam12^) = sub_3726( uParam0 );
        return 1;
    }
    sub_3914( uParam0, ref uVar16 );
    if (uParam1._fU0 == 1)
    {
        return GET_BEST_HEADING_IF_POSSIBLE( uVar16._fU0, uParam1._fU4[0], uVar16._fU12, uVar16._fU16, uParam13, uParam12 );
    }
    else
    {
        (uParam12^) = uVar16._fU12;
    }
    for ( I = 0; I < uParam1._fU0; I++ )
    {
        if (NOT Result)
        {
            if (GET_BEST_HEADING_IF_POSSIBLE( uVar16._fU0, uParam1._fU4[I], uVar16._fU12, uVar16._fU16, uParam13, ref uVar25 ))
            {
                fVar23 = VDIST2( uVar16._fU0, uParam1._fU4[I] );
                (uParam12^) = uVar25;
                Result = true;
            }
        }
        else
        {
            fVar24 = VDIST2( uVar16._fU0, uParam1._fU4[I] );
            if (fVar24 < fVar23)
            {
                if (GET_BEST_HEADING_IF_POSSIBLE( uVar16._fU0, uParam1._fU4[I], uVar16._fU12, uVar16._fU16, uParam13, ref uVar25 ))
                {
                    fVar23 = fVar24;
                    (uParam12^) = uVar25;
                    Result = true;
                }
            }
        }
    }
    return Result;
}

void sub_3914(unknown uParam0, int iParam1)
{
    NETWORK_LEVEL_DATA_GET_VECTOR_FROM_NODE( iParam1 + 0, ":pos", uParam0 );
    NETWORK_LEVEL_DATA_GET_FLOAT_FROM_NODE( iParam1 + 12, ":heading", uParam0 );
    NETWORK_LEVEL_DATA_GET_FLOAT_FROM_NODE( iParam1 + 16, ":headingArc", uParam0 );
    NETWORK_LEVEL_DATA_GET_FLOAT_FROM_NODE( iParam1 + 20, ":groupHeading", uParam0 );
    NETWORK_LEVEL_DATA_GET_HASH_FROM_NODE( iParam1 + 24, ":milo", uParam0 );
    return;
}

void sub_4385(unknown uParam0)
{
    unknown Result;

    NETWORK_LEVEL_DATA_GET_HASH_FROM_NODE( ref Result, ":milo", uParam0 );
    return Result;
}

void sub_4430(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, boolean bParam6, boolean bParam7, unknown uParam8)
{
    sub_4442( uParam0 );
    if (IS_PED_DEAD( g_U126[uParam0]._fU72 ))
    {
        SCRIPT_ASSERT( "__sev_mp_TeleportPlayerToPosition() ERROR: Player {} is dead!", 1, 513, uParam0 );
    }
    if (bParam6)
    {
        sub_4606( uParam0, uParam1, uParam4, iParam5 );
        sub_4782( uParam0, 0, 0, -1, uParam8 );
    }
    CLEAR_PED_TASKS_IMMEDIATELY( g_U126[uParam0]._fU72 );
    SET_PED_COORDS( g_U126[uParam0]._fU72, uParam1, 0 );
    SET_PED_HEADING( g_U126[uParam0]._fU72, uParam4 );
    if (bParam7)
    {
        sub_5487( uParam0 );
    }
    SEV_ISOLATE();
    if (sub_2711( uParam0 ))
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
        STREAM_HELPERS_INIT();
    }
    SEV_ISOLATE_OFF();
    if (iParam5 != 0)
    {
        SET_ROOM_FOR_PED_BY_KEY( g_U126[uParam0]._fU72, iParam5 );
    }
    else
    {
        CLEAR_ROOM_FOR_PED( g_U126[uParam0]._fU72 );
    }
    return;
}

void sub_4442(unknown uParam0)
{
    if (sub_2638( uParam0 ))
    {
        g_U3125[uParam0] = g_U3124;
    }
    return;
}

void sub_4606(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    SEV_ISOLATE();
    if (sub_2711( uParam0 ))
    {
        sub_4643( uParam1, uParam4, uParam5, 0 );
    }
    SEV_ISOLATE_OFF();
    return;
}

void sub_4643(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4, boolean bParam5)
{
    sub_4654( 1 );
    if (bParam5)
    {
        uParam0._fU8 -= 1.00000000;
        SET_STREAMING_POINT_OF_INTEREST( uParam0, uParam3, 0 );
    }
    else
    {
        SET_STREAMING_POINT_OF_INTEREST( uParam0, uParam3, 1 );
    }
    if (iParam4 != 0)
    {
        REQUEST_ROOM_MINIMAL_COLLISION_MESH_BY_KEY( iParam4 );
    }
    return;
}

void sub_4654(unknown uParam0)
{
    SET_STREAMING( uParam0 );
    return;
}

void sub_4782(int iParam0, boolean bParam1, boolean bParam2, int iParam3, unknown uParam4)
{
    int Result;
    int iVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    boolean bVar12;

    SEV_ISOLATE();
    iVar8 = sub_2723();
    if (sub_4812( iVar8, 1, 0 ))
    {
        if (((sub_4857( iVar8 )) AND (iParam0 == -1)) || (iParam0 == iVar8))
        {
            Result = GET_NETWORK_TIMER();
            sub_4654( 1 );
            if (bParam1)
            {
                while (((GET_NETWORK_TIMER() - Result) < 10000) AND (NOT sub_4943()))
                {
                    SEV_YIELD();
                }
            }
            if (bParam2)
            {
                while (((GET_NETWORK_TIMER() - Result) < 10000) AND (IS_LOCAL_PLAYER_STILL_SCANNING_WORLD()))
                {
                    SEV_YIELD();
                }
            }
            bVar12 = (GET_NETWORK_TIMER() - Result) >= 10000;
            while ((NOT bVar12) AND ((iVar11 < 15) || (sub_5071())))
            {
                iVar10 = GET_NETWORK_TIMER() - Result;
                bVar12 = iVar10 >= 10000;
                iVar9++;
                if ((iParam3 > 0) AND (iVar10 >= iParam3))
                {
                    ;
                }
                if (NOT bVar12)
                {
                    sub_4654( 1 );
                    if (NOT sub_5071())
                    {
                        iVar11++;
                    }
                    if ((iVar9 mod 30) == 0)
                    {
                        iVar8 = sub_2723();
                        if (iVar8 == -1)
                        {
                            bVar12 = true;
                        }
                        else if (iParam0 == -1)
                        {
                            bVar12 = NOT (sub_4857( iVar8 ));
                        }
                        else
                        {
                            bVar12 = iParam0 != iVar8;
                        }
                    }
                    if ((NOT g_U116._fU0) AND (uParam4))
                    {
                        bVar12 = true;
                    }
                    SEV_YIELD();
                }
            }
            Result = GET_NETWORK_TIMER() - Result;
        }
    }
    SEV_ISOLATE_OFF();
    if (NOT IS_THIS_THREAD_ISOLATED())
    {
        sub_5350();
    }
    return Result;
}

boolean sub_4812(int iParam0, unknown uParam1, unknown uParam2)
{
    return (iParam0 < 16) AND (iParam0 >= 0);
}

int sub_4857(unknown uParam0)
{
    if (g_U126[uParam0]._fU0)
    {
        return g_U126[uParam0]._fU32 == 0;
    }
    return 0;
}

void sub_4943()
{
    SEV_ISOLATED_ONLY();
    return NETWORK_UPDATE_LOAD_SCENE();
}

boolean sub_5071()
{
    SEV_ISOLATED_ONLY();
    return (GET_STABLE_NUM_OF_STREAMING_REQUESTS() > 0) || (GET_STABLE_NUM_OF_PRIORITY_REQUESTS() > 0);
}

void sub_5350()
{
    unknown uVar2;

    uVar2 = SEV_CONSTRUCT_EVENT();
    SEV_INDUCE_GATHER_EVENT( uVar2 );
    SEV_WAIT_FOR( uVar2 );
    return;
}

void sub_5487(unknown uParam0)
{
    SEV_ISOLATE();
    if (sub_2711( uParam0 ))
    {
        sub_5516();
    }
    SEV_ISOLATE_OFF();
    return;
}

void sub_5516()
{
    SEV_ISOLATED_ONLY();
    RESET_STREAMING_POINT_OF_INTEREST();
    return;
}

void sub_5731(unknown uParam0, unknown uParam1)
{
    sub_2910( uParam0, 0, uParam1 );
    sub_5758( uParam0, 100, 0, 0 );
    return;
}

void sub_5758(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    SEV_ISOLATE();
    if (sub_2711( uParam0 ))
    {
        sub_5793( uParam1, uParam2, uParam3 );
    }
    SEV_ISOLATE_OFF();
    return;
}

void sub_5793(unknown uParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;

    SEV_ISOLATE();
    uVar5 = sub_2723();
    if (sub_4812( uVar5, 1, 0 ))
    {
        if (sub_5833( uVar5 ))
        {
            if ((uParam2) || (NOT (sub_5888( uVar5 ))))
            {
                if ((uParam1) || (NOT g_U3155))
                {
                    DO_SCREEN_FADE_IN( uParam0 );
                    MANOGAMETESTER_ENABLE();
                }
            }
        }
    }
    SEV_ISOLATE_OFF();
    return;
}

int sub_5833(unknown uParam0)
{
    if (g_U126[uParam0]._fU0)
    {
        return NOT (sub_2924( uParam0 ));
    }
    return 0;
}

boolean sub_5888(unknown uParam0)
{
    return g_U126[uParam0]._fU32 != 0;
}

void sub_6011(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    I = 0;
    iVar5 = 0;
    for ( I = 0; I < (uParam1^); I++ )
    {
        sub_6055( (uParam0^)[iVar5], (uParam1^)[I] );
        iVar5++;
        if (iVar5 >= (uParam0^))
        {
            iVar5 = 0;
        }
    }
    return;
}

void sub_6055(unknown uParam0, unknown uParam1)
{
    unknown Result;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    uVar5 = sub_2564( uParam1 );
    uVar6 = {sub_3637( uVar5 )};
    Result = CREATE_PED( 2, uParam0, uVar6, 0, 1, 0 );
    return Result;
}


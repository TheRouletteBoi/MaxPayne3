void main()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    g_U0 = 2;
    g_U1 = 5;
    g_U2 = 10;
    g_U3 = 10;
    g_U4 = 3;
    g_U5 = 10000;
    g_U6 = 10000;
    g_U7 = 50;
    g_U8 = 70;
    g_U9 = 100;
    g_U10 = 200;
    g_U11 = 250;
    g_U12 = 300;
    g_U13 = 3;
    g_U14 = 5;
    g_U15 = 10;
    g_U16 = 15;
    g_U17 = 20;
    g_U18 = 25;
    g_U19 = 50;
    g_U20 = 100;
    g_U21 = 150;
    g_U22 = 200;
    g_U23 = 5;
    g_U24 = 20.00000000;
    g_U25 = 10;
    g_U26 = 1500;
    g_U27 = 10;
    g_U28 = 5;
    g_U29 = 10;
    g_U30 = 20;
    g_U31 = 10;
    g_U32 = 10;
    g_U33 = 20;
    g_U34 = 25;
    g_U35 = 10;
    g_U36 = 20;
    g_U37 = 5000;
    g_U38 = 20;
    g_U39 = 10;
    g_U40 = 10;
    g_U41 = 20;
    g_U42 = 30;
    g_U43 = 20;
    g_U44 = 25;
    g_U45 = 10;
    g_U46 = 10;
    g_U47 = 20;
    g_U48 = 10;
    g_U49 = 15;
    g_U50 = 15;
    g_U51 = 10;
    g_U52 = 5;
    g_U53 = 10;
    g_U54 = 5;
    g_U55 = 30;
    g_U56 = 20;
    g_U57 = 10;
    g_U58 = 5;
    g_U59 = 0.33334000;
    g_U60 = 1.00000000;
    g_U61 = 0.11111000;
    g_U62 = 0.20000000;
    g_U63 = 0.10000000;
    g_U2519 = 0;
    g_U2520 = -1;
    g_U2544 = -1;
    g_U4530 = 0;
    g_U4534 = 0;
    StrCopy( ref g_U4552, " ", 64 );
    g_U4568 = 0;
    g_U5134 = 0;
    g_U5156 = -1;
    g_U5327 = 1;
    g_U5332 = 10;
    g_U5333 = 20;
    g_U5334 = 30;
    g_U5335 = 10;
    g_U5336 = 10;
    g_U5337 = 10;
    g_U5338 = 10;
    g_U5339 = 10;
    g_U5340 = 20;
    g_U5341 = 10;
    g_U5342 = 30;
    g_U5343 = 10;
    g_U5344 = 10;
    g_U5345 = 20;
    g_U5346 = 10;
    g_U5347 = 20;
    g_U5348 = 10;
    g_U5349 = 5;
    g_U5350 = 20;
    g_U5351 = 50;
    g_U5352 = 10;
    g_U5353 = 20;
    g_U5354 = 10;
    g_U5355 = 5;
    g_U5356 = 20;
    g_U5357 = 20;
    g_U5358 = 50;
    g_U5359 = 100;
    g_U5360 = 125;
    g_U5361 = 15;
    g_U5362 = 30;
    g_U5363 = 50;
    g_U5364 = 100;
    g_U5365 = 100;
    g_U5366 = 10;
    g_U5367 = 20;
    g_U5368 = 20;
    g_U5369 = 20;
    g_U5370 = 5;
    g_U5371 = 25;
    g_U5372 = 20;
    g_U5373 = 20;
    g_U5374 = 10;
    g_U5375 = 20;
    g_U5376 = 20;
    g_U5377 = 20;
    g_U5378 = 10;
    g_U5379 = 10;
    g_U5380 = 20;
    g_U5381 = 75;
    g_U5382 = 75;
    g_U5383 = 200;
    g_U5384 = 200;
    g_U5385 = 20;
    g_U5386 = 10;
    g_U5387 = 10;
    g_U5388 = 200;
    g_U5389 = 25;
    g_U5390 = 25;
    g_U5391 = 75;
    g_U5392 = 150;
    g_U5393 = 0.20000000;
    g_U5394 = 0.20000000;
    g_U5395 = 0.10000000;
    g_U5396 = 0.10000000;
    g_U5397 = 0.10000000;
    g_U5398 = 0.10000000;
    g_U5399 = 0.10000000;
    g_U5400 = GET_STREAM_PED_PACK_ID( -1126833125 );
    g_U5401 = -1;
    g_U5402 = g_U2544;
    g_U5503 = 0;
    g_U5696 = -1;
    g_U5699 = 0;
    g_U5815 = 300;
    g_U5816 = 250;
    g_U5817 = 200;
    g_U5818 = 175;
    g_U5819 = 150;
    g_U5820 = 100;
    g_U5821 = 80;
    g_U5822 = 70;
    g_U5823 = 60;
    g_U5824 = 50;
    g_U5825 = 60;
    g_U5826 = 45;
    g_U5827 = 30;
    g_U5828 = 20;
    g_U5829 = 10;
    g_U5830 = 250;
    g_U5898 = 1;
    g_U6081 = -10;
    g_U6082 = -10;
    g_U6083 = -10;
    g_U6084 = -10;
    g_U6087 = 0;
    g_U6391 = 1;
    DISPLAYF( "NETWORK SCRIPT KICK IN: payne_gangwars.sc", 0 );
     /* SEV_MP_INITLEVELDATA */ sub_1191();
    iVar2 =  /* SEV_MP_GETGAMEMODE */ sub_7741();
    if (NOT DOES_MAIN_PLAYER_EXIST())
    {
        DISPLAYF( "Main Player does not exist. Creating a New player...", 0 );
        DISPLAYF( "Game mode = {}", 1, 513, iVar2 );
         /* SEV_GW_SELECTGANGWARSSTORY */ sub_8244( iVar2 );
         /* SEV_MP_SETTEAMIDS */ sub_9068( iVar2 );
         /* SEV_MP_CHECKFORTEAMIDOVERRIDESFROMLOBBY */ sub_10448();
        uVar3 = { /* SEV_MP_GETINITIALSPAWNLOCATION */ sub_10929()};
        if ((iVar2 == 1) || (iVar2 == 2))
        {
            CREATE_PLAYER_WITH_AVATAR( NETWORK_GET_AVATAR_SELECTED_DEATHMATCH_SLOT_HASH(), uVar3, 0 );
        }
        else
        {
            CREATE_PLAYER_WITH_AVATAR( NETWORK_GET_AVATAR_SELECTED_DEATHMATCH_SLOT_HASH(), uVar3, 0 );
        }
         /* SET_NET_PLAYER_CONTROL */ sub_11288( GET_PLAYER_ID(), 0, 0 );
    }
    SET_DEBUG_ACTIVE( 0 );
    FORCE_WEAPON_LOAD();
    WAIT( 0 );
     /* LOAD_AND_LAUNCH_SCRIPT */ sub_11688( "payne_mp_bot", 8192, 0, 1 );
    SET_DEFAULT_GLOBAL_INSTANCE_PRIORITY();
    LOAD_ALL_PATH_NODES( 1 );
     /* LOAD_AND_LAUNCH_SCRIPT */ sub_11688( "startup_body_gw", 1536, 6, 1 );
    DISPLAYF( "END payne_gangwars.sc ", 0 );
    return;
}

/* SEV_MP_INITLEVELDATA */ void sub_1191()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    int I;
    unknown uVar9;
    int iVar10;

    DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData()", 0 );
    NETWORK_DUMP_STORED_QUERIES();
    NETWORK_REQUIRE_STORED_QUERIES( "common:/data/networkleveldata_queries.txt" );
    g_U6088 =  /* SEV_MP_GETLEVELDATASIZEFROMQUERY */ sub_1331( 0, 0, 0 );
    g_U6090 =  /* SEV_MP_GETLEVELDATASIZEFROMQUERY */ sub_1331( 3, 0, 0 );
    g_U6096 =  /* SEV_MP_GETLEVELDATASIZEFROMQUERY */ sub_1331( 10, 0, 0 );
    g_U6091 =  /* SEV_MP_GETLEVELDATASIZEFROMQUERY */ sub_1331( 20, 0, 0 );
    g_U6094 =  /* SEV_MP_GETLEVELDATASIZEFROMQUERY */ sub_1331( 22, 0, 0 );
    g_U6095 =  /* SEV_MP_GETLEVELDATASIZEFROMQUERY */ sub_1331( 2, 0, 0 );
    g_U6093 =  /* SEV_MP_GETLEVELDATASIZEFROMQUERY */ sub_1331( 51, 0, 0 );
    g_U6092 =  /* SEV_MP_GETLEVELDATASIZEFROMQUERY */ sub_1331( 24, 0, 0 );
    g_U6089 =  /* SEV_MP_GETLEVELDATASIZEFROMQUERY */ sub_1331( 42, 0, 0 );
    g_U6097 =  /* SEV_MP_GETLEVELDATASIZEFROMQUERY */ sub_1331( 14, 0, 0 );
    uVar7 =  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 38, 0, 0 );
     /* SEV_MP_GETTIMEOFDAYSETTINGSBYNODE */ sub_2052( uVar7, ref uVar2, ref uVar3 );
    SET_TIME_OF_DAY( uVar2, 0 );
    FREEZE_TIME_OF_DAY( uVar2, 0 );
    CLEAR_WEATHER_TYPE_PERSIST();
    g_U4362 = {uVar3};
    SET_WEATHER_TYPE_NOW_PERSIST( ref g_U4362 );
    DISPLAYF( "sev_mp_InitLevelData() Setting default weather to hour {} and weather {}", 2, 513, uVar2, 1281, ref g_U4362 );
     /* SEV_MP_GETLEVELNAMES */ sub_2318( ref g_U4088._fU16, ref g_U4088._fU0 );
    g_U4088._fU32 = GET_HASH_KEY( ref g_U4088._fU16 );
     /* HUD_SCOREBOARD_SETARENA */ sub_2454( ref g_U4088._fU16 );
     /* SEV_MP_INITLEVELVEHICLES */ sub_2498();
    DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() {} spawn points loaded", 1, 513, g_U6088 );
    for ( I = 0; I < g_U6088; I++ )
    {
        uVar9 =  /* SEV_MP_GETSPAWNPOINTNODE */ sub_5158( I );
        DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() Spawn point {} is named {}{} and is at position {}", 4, 513,  /* SEV_MP_GETSPAWNPOINTINDEXBYNODE */ sub_5310( uVar9 ), 1537,  /* SEV_MP_GETLEVELDATANAMEBYNODE */ sub_1930( uVar9 ), 1281, ref g_U3173, 1027,  /* SEV_MP_GETLEVELDATAPOSITIONBYNODE */ sub_2668( uVar9 ) );
    }
    DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() {} spawn point groups loaded", 1, 513, g_U6090 );
    for ( I = 0; I < g_U6090; I++ )
    {
        uVar9 =  /* SEV_MP_GETSPGROUPNODE */ sub_5531( I );
        DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() Spawn point group {} is named {}{} and has {} spawnpoints", 4, 513, I, 1537,  /* SEV_MP_GETLEVELDATANAMEBYNODE */ sub_1930( uVar9 ), 1281, ref g_U3173, 513,  /* SEV_MP_GETLEVELDATASIZEBYNODE */ sub_5736( uVar9, "PlayerSpawnGroupMember" ) );
    }
    DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() {} cutscene groups loaded", 1, 513, g_U6096 );
    for ( I = 0; I < g_U6096; I++ )
    {
        uVar9 =  /* SEV_MP_GETCUTSCENEGROUPNODE */ sub_6020( I );
        DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() Cutscene group {} is named {}{} and has {} marks", 4, 513, I, 1537,  /* SEV_MP_GETLEVELDATANAMEBYNODE */ sub_1930( uVar9 ), 1281, ref g_U3173, 513,  /* SEV_MP_GETLEVELDATASIZEBYNODE */ sub_5736( uVar9, "CutsceneGroupMember" ) );
    }
    DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() {} territories points loaded", 1, 513, g_U6091 );
    for ( I = 0; I < g_U6091; I++ )
    {
        uVar9 =  /* SEV_MP_GETTERRITORYNODE */ sub_6347( I );
        DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() Territory {} is named {}{} and is at position {}", 4, 513, I, 1537,  /* SEV_MP_GETLEVELDATANAMEBYNODE */ sub_1930( uVar9 ), 1281, ref g_U3173, 1027,  /* SEV_MP_GETLEVELDATAPOSITIONBYNODE */ sub_2668( uVar9 ) );
    }
    DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() {} pickups loaded", 1, 513, g_U6094 );
    for ( I = 0; I < g_U6094; I++ )
    {
        uVar9 =  /* SEV_MP_GETPICKUPNODE */ sub_6637( I );
        DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() Pickup {} is named {}{} and is at position {}", 4, 513, I, 1537,  /* SEV_MP_GETLEVELDATANAMEBYNODE */ sub_1930( uVar9 ), 1281, ref g_U3173, 1027,  /* SEV_MP_GETLEVELDATAPOSITIONBYNODE */ sub_2668( uVar9 ) );
    }
    DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() {} spawn beacons loaded", 1, 513, g_U6095 );
    for ( I = 0; I < g_U6095; I++ )
    {
        uVar9 =  /* SEV_MP_GETSPAWNBEACONNODE */ sub_6927( I );
        DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() Spawn beacon {} is at position {} with radius {}", 3, 513, I, 1027,  /* SEV_MP_GETLEVELDATAPOSITIONBYNODE */ sub_2668( uVar9 ), 769,  /* SEV_MP_GETLEVELDATARADIUSBYNODE */ sub_7095( uVar9 ) );
    }
    DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() {} locations loaded", 1, 513, g_U6092 );
    for ( I = 0; I < g_U6092; I++ )
    {
        uVar9 =  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 24, I, 0 );
        DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() Location {} is at position {} with radius {}", 3, 513, I, 1027,  /* SEV_MP_GETLEVELDATAPOSITIONBYNODE */ sub_2668( uVar9 ), 769,  /* SEV_MP_GETLEVELDATARADIUSBYNODE */ sub_7095( uVar9 ) );
    }
    iVar10 =  /* SEV_MP_GETLEVELDATASIZEFROMQUERY */ sub_1331( 85, 0, 0 );
    DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() {} GW Stories loaded", 1, 513, iVar10 );
    for ( I = 0; I < iVar10; I++ )
    {
        DISPLAYF( "[LEVELDATA] sev_mp_InitLevelData() Story {} has {} nodes", 2, 513, I, 513,  /* SEV_MP_GETLEVELDATASIZEBYNODE */ sub_5736(  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 85, I, 0 ), "StoryNodes/StoryNode" ) );
    }
    return;
}

/* SEV_MP_GETLEVELDATASIZEFROMQUERY */ void sub_1331(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return  /* SEV_MP_GETLEVELDATASIZEFROMQUERYBYNODE */ sub_1387( g_U2544, uParam0, uParam1, uParam2 );
}

/* SEV_MP_GETLEVELDATASIZEFROMQUERYBYNODE */ void sub_1387(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown Result;

    Result = NETWORK_LEVEL_DATA_RUN_STORED_QUERY_COUNT( uParam0, uParam1, uParam2, uParam3 );
    DISPLAYF( "[LEVELDATA] sev_mp_GetLevelDataSizeFromQueryByNode() for query #{}, params {} and {}, and node {} is {}", 5, 513, uParam1, 513, uParam2, 513, uParam3, 1793, uParam0, 513, Result );
    return Result;
    return NETWORK_LEVEL_DATA_RUN_STORED_QUERY_COUNT( uParam0, uParam1, uParam2, uParam3 );
}

/* SEV_MP_GETLEVELDATANODE */ void sub_1761(unknown uParam0, unknown uParam1, unknown uParam2)
{
    unknown Result;

    Result = NETWORK_LEVEL_DATA_RUN_STORED_QUERY_NODE( g_U2544, uParam0, uParam1, uParam2 );
    DISPLAYF( "[LEVELDATA] sev_mp_GetLevelDataNode() Query #{} with params {} and {} returned node ", 6, 513, uParam0, 513, uParam1, 513, uParam2, 1793, Result, 1537,  /* SEV_MP_GETLEVELDATANAMEBYNODE */ sub_1930( Result ), 1281, ref g_U3173 );
    return Result;
}

/* SEV_MP_GETLEVELDATANAMEBYNODE */ string sub_1930(unknown uParam0)
{
    if (NOT (NETWORK_LEVEL_DATA_GET_STRING_FROM_NODE( 64, ref g_U3173, ":name", uParam0 )))
    {
        StrCopy( ref g_U3173, "", 64 );
    }
    return "";
}

/* SEV_MP_GETTIMEOFDAYSETTINGSBYNODE */ int sub_2052(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NETWORK_LEVEL_DATA_GET_INT_FROM_NODE( uParam1, ":hour", uParam0 ))
    {
        if (NETWORK_LEVEL_DATA_GET_STRING_FROM_NODE( 16, uParam2, ":weather", uParam0 ))
        {
            return 1;
        }
    }
    return 0;
}

/* SEV_MP_GETLEVELNAMES */ void sub_2318(unknown uParam0, unknown uParam1)
{
    unknown uVar4;

    uVar4 =  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 30, 0, 0 );
    NETWORK_LEVEL_DATA_GET_STRING_FROM_NODE( 16, uParam0, ":levelName", uVar4 );
    NETWORK_LEVEL_DATA_GET_STRING_FROM_NODE( 16, uParam1, ":levelNameShort", uVar4 );
    return;
}

/* HUD_SCOREBOARD_SETARENA */ void sub_2454(unknown uParam0)
{
    return;
}

/* SEV_MP_INITLEVELVEHICLES */ void sub_2498()
{
    int iVar2;
    int iVar3;
    int J;
    int I;
    unknown uVar6;
    unknown uVar7;
    int iVar8;
    int iVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int iVar13;
    int iVar14;
    unknown uVar15;
    char[32] cVar16;
    int iVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    char[32] cVar28;

    DISPLAYF( "sev_mp_InitLevelVehicles() Loading {} vehicles", 1, 513, g_U6089 );
    for ( J = 0; J < g_U6089; J++ )
    {
        iVar2 =  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 42, J, 0 );
        if (iVar2 != g_U2544)
        {
            if (NETWORK_LEVEL_DATA_GET_HASH_FROM_NODE( ref uVar6, ":model", iVar2 ))
            {
                uVar10 = { /* SEV_MP_GETLEVELDATAPOSITIONBYNODE */ sub_2668( iVar2 )};
                uVar15 =  /* SEV_MP_GETLEVELDATAHEADINGBYNODE */ sub_2830( iVar2 );
                if (NETWORK_LEVEL_DATA_GET_BOOL_FROM_NODE( ref uVar7, ":autospawn", iVar2 ))
                {
                    iVar13 =  /* INT_TO_BOOL */ sub_3019( uVar7 );
                }
                else
                {
                    iVar13 = 0;
                }
                if (NETWORK_LEVEL_DATA_GET_BOOL_FROM_NODE( ref uVar7, ":nodestroy", iVar2 ))
                {
                    iVar14 =  /* INT_TO_BOOL */ sub_3019( uVar7 );
                }
                else
                {
                    iVar14 = 0;
                }
                if (NOT (NETWORK_LEVEL_DATA_GET_STRING_FROM_NODE( 32, ref cVar16, ":milo", iVar2 )))
                {
                    StrCopy( ref cVar16, "", 32 );
                }
                if (NOT (NETWORK_LEVEL_DATA_GET_INT_FROM_NODE( ref iVar9, ":colour", iVar2 )))
                {
                    iVar9 = -1;
                }
                if (NETWORK_LEVEL_DATA_GET_BOOL_FROM_NODE( ref uVar7, ":frozen", iVar2 ))
                {
                    iVar24 =  /* INT_TO_BOOL */ sub_3019( uVar7 );
                }
                else
                {
                    iVar24 = 0;
                }
                if (NOT (NETWORK_LEVEL_DATA_GET_STRING_FROM_NODE( 32, ref cVar28, ":name", iVar2 )))
                {
                    StrCopy( ref cVar28, "", 32 );
                }
                DISPLAYF( "sev_mp_InitLevelVehicles() Adding vehicle #{} as '{}' at pos {} with heading {}, colour {}, autoSpawn {}, noDamage {}, room '{}' and frozen {}", 9, 513, J, 1281, ref cVar28, 1027, uVar10, 769, uVar15, 513, iVar9, 257, iVar13, 257, iVar14, 1281, ref cVar16, 257, iVar24 );
                g_U6107[J] = { /* SEV_VEHICLECREATE */ sub_3499( J, ref cVar28, uVar10, uVar15, iVar9, iVar13, iVar14, ref cVar16, iVar24 )};
                g_U6107[J]._fU52 = uVar6;
                iVar8 =  /* SEV_MP_GETLEVELDATASIZEFROMQUERYBYNODE */ sub_1387( iVar2, 44, 0, 0 );
                for ( I = 0; I < iVar8; I++ )
                {
                    if (NETWORK_LEVEL_DATA_RUN_STORED_QUERY_INT( ref uVar7, iVar2, 44, I, 0 ))
                    {
                        DISPLAYF( "sev_mp_InitLevelVehicles() Enabling extra {} on vehicle {}", 2, 513, uVar7, 513, J );
                         /* SEV_VEHICLEENABLEEXTRA */ sub_3930( J, uVar7 );
                    }
                }
                if (NETWORK_LEVEL_DATA_GET_HASH_FROM_NODE( ref uVar6, ":name", iVar2 ))
                {
                    iVar3 =  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 45, uVar6, 0 );
                    if (iVar3 != g_U2544)
                    {
                        iVar8 =  /* SEV_MP_GETLEVELDATASIZEFROMQUERYBYNODE */ sub_1387( iVar3, 41, 0, 0 );
                        for ( I = 0; I < iVar8; I++ )
                        {
                            if (g_U6107[J]._fU140 < 4)
                            {
                                if ( /* SEV_MP_GETSPATIALDATAMODULEBYNODE */ sub_4113( iVar3, I, ref uVar25 ))
                                {
                                    g_U6107[J]._fU88[g_U6107[J]._fU140] = {uVar25};
                                    g_U6107[J]._fU140++;
                                }
                            }
                        }
                        DISPLAYF( "sev_mp_InitLevelVehicles() Added {} spatial data entries for vehicle {}", 2, 513, g_U6107[J]._fU140, 513, J );
                    }
                }
            }
            else
            {
                DISPLAYF( "sev_mp_InitLevelVehicles() Unable to load a model name for vehicle '{}{}', ignoring", 2, 1537,  /* SEV_MP_GETLEVELDATANAMEBYNODE */ sub_1930( iVar2 ), 1281, ref g_U3173 );
            }
        }
    }
    return;
}

/* SEV_MP_GETLEVELDATAPOSITIONBYNODE */ void sub_2668(unknown uParam0)
{
    unknown Result;
    unknown uVar4;
    unknown uVar5;

    NETWORK_LEVEL_DATA_GET_VECTOR_FROM_NODE( ref Result, ":pos", uParam0 );
    DISPLAYF( "[LEVELDATA] sev_mp_GetLevelDataPositionByNode()", 3, 1537,  /* SEV_MP_GETLEVELDATANAMEBYNODE */ sub_1930( uParam0 ), 1281, ref g_U3173, 1027, Result );
    return Result;
}

/* SEV_MP_GETLEVELDATAHEADINGBYNODE */ void sub_2830(unknown uParam0)
{
    unknown Result;

    NETWORK_LEVEL_DATA_GET_FLOAT_FROM_NODE( ref Result, ":heading", uParam0 );
    DISPLAYF( "[LEVELDATA] sev_mp_GetLevelDataHeadingByNode()", 3, 1537,  /* SEV_MP_GETLEVELDATANAMEBYNODE */ sub_1930( uParam0 ), 1281, ref g_U3173, 769, Result );
    return Result;
}

/* INT_TO_BOOL */ int sub_3019(int iParam0)
{
    if (iParam0 > 0)
    {
        return 1;
    }
    return 0;
}

/* SEV_VEHICLECREATE */ void sub_3499(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;

    array(ref Result._fU88, 4);
    ref Result;
    StrCopy( ref Result._fU0, uParam1, 32 );
    Result._fU32 =  /* SEV_ID_TO_VEHICLE */ sub_3554( iParam0 + 300 );
    Result._fU36 = {uParam2};
    Result._fU48 = uParam5 - 90;
    Result._fU56 = -1;
    Result._fU68 = uParam10;
    Result._fU60 = 0;
    Result._fU64 = uParam6;
    Result._fU72 = uParam7;
    Result._fU76 = 0;
    Result._fU80 = uParam8;
    if (NOT (ARE_STRINGS_EQUAL( uParam9, "" )))
    {
        Result._fU84 = GET_HASH_KEY( uParam9 );
    }
    else
    {
        Result._fU84 = 0;
    }
    Result._fU140 = 0;
    return Result;
}

/* SEV_ID_TO_VEHICLE */ void sub_3554(unknown uParam0)
{
    return SEV_ID_TO_INDEX( uParam0 );
}

/* SEV_VEHICLEENABLEEXTRA */ void sub_3930(unknown uParam0, unknown uParam1)
{
    SET_BIT( ref g_U6107[uParam0]._fU60, uParam1 );
    return;
}

/* SEV_MP_GETSPATIALDATAMODULEBYNODE */ int sub_4113(unknown uParam0, unknown uParam1, int iParam2)
{
    int iVar5;
    unknown uVar6;

    iVar5 =  /* SEV_MP_GETLEVELDATANODEBYNODE */ sub_4167( uParam0, 41, uParam1, 0 );
    if (iVar5 != g_U2544)
    {
        if (NETWORK_LEVEL_DATA_GET_HASH_FROM_NODE( iParam2 + 4, ":sectionID", iVar5 ))
        {
            if (NETWORK_LEVEL_DATA_GET_HASH_FROM_NODE( iParam2 + 0, ":uid", iVar5 ))
            {
                if (NETWORK_LEVEL_DATA_GET_BOOL_FROM_NODE( ref uVar6, ":enable", iVar5 ))
                {
                    iParam2->_fU8 =  /* INT_TO_BOOL */ sub_3019( uVar6 );
                }
                else
                {
                    iParam2->_fU8 = 0;
                }
                DISPLAYF( "[LEVELDATA] sev_mp_GetSpatialDataNormalLineByNode() Found entry sectionID {}, UID {} and enable {}", 3, 513, iParam2->_fU4, 513, iParam2->_fU0, 257, iParam2->_fU8 );
                return 1;
            }
        }
    }
    DISPLAYF( "[LEVELDATA] sev_mp_GetSpatialDataNormalLineByNode() Failed to find a valid normal line entry", 0 );
    return 0;
}

/* SEV_MP_GETLEVELDATANODEBYNODE */ void sub_4167(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown Result;

    Result = NETWORK_LEVEL_DATA_RUN_STORED_QUERY_NODE( uParam0, uParam1, uParam2, uParam3 );
    DISPLAYF( "[LEVELDATA] sev_mp_GetLevelDataNode() Query #{} with params {} and {} returned node ", 6, 513, uParam1, 513, uParam2, 513, uParam3, 1793, Result, 1537,  /* SEV_MP_GETLEVELDATANAMEBYNODE */ sub_1930( Result ), 1281, ref g_U3173 );
    return Result;
}

/* SEV_MP_GETSPAWNPOINTNODE */ void sub_5158(unknown uParam0)
{
    return  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 0, uParam0, 0 );
}

/* SEV_MP_GETSPAWNPOINTINDEXBYNODE */ int sub_5310(unknown uParam0)
{
    return (g_U6088 - (NETWORK_LEVEL_DATA_GET_SIBLING_COUNT_AFTER_NODE( uParam0 ))) - 1;
}

/* SEV_MP_GETSPGROUPNODE */ void sub_5531(unknown uParam0)
{
    return  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 3, uParam0, 0 );
}

/* SEV_MP_GETLEVELDATASIZEBYNODE */ void sub_5736(unknown uParam0, unknown uParam1)
{
    unknown Result;

    Result = NETWORK_LEVEL_DATA_GET_NUM_NODES_FROM_NODE( uParam1, uParam0 );
    DISPLAYF( "[LEVELDATA] sev_mp_GetLevelDataSizeByNode() for query '{}' is {}", 2, 1537, uParam1, 513, Result );
    return Result;
    return NETWORK_LEVEL_DATA_GET_NUM_NODES_FROM_NODE( uParam1, uParam0 );
}

/* SEV_MP_GETCUTSCENEGROUPNODE */ void sub_6020(unknown uParam0)
{
    return  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 10, uParam0, 0 );
}

/* SEV_MP_GETTERRITORYNODE */ void sub_6347(unknown uParam0)
{
    return  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 20, uParam0, 0 );
}

/* SEV_MP_GETPICKUPNODE */ void sub_6637(unknown uParam0)
{
    return  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 22, uParam0, 0 );
}

/* SEV_MP_GETSPAWNBEACONNODE */ void sub_6927(unknown uParam0)
{
    return  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 2, uParam0, 0 );
}

/* SEV_MP_GETLEVELDATARADIUSBYNODE */ void sub_7095(unknown uParam0)
{
    unknown Result;

    NETWORK_LEVEL_DATA_GET_FLOAT_FROM_NODE( ref Result, ":radius", uParam0 );
    DISPLAYF( "[LEVELDATA] sev_mp_GetLevelDataRadiusByNode()", 3, 1537,  /* SEV_MP_GETLEVELDATANAMEBYNODE */ sub_1930( uParam0 ), 1281, ref g_U3173, 769, Result );
    return Result;
}

/* SEV_MP_GETGAMEMODE */ void sub_7741()
{
    if (g_U64._fU4)
    {
        return g_U64._fU8;
        break;
    }
    if (IS_THIS_THREAD_CONNECTED())
    {
        DISPLAYF( "sev_mp_GetGameMode() directly from observation", 0 );
    }
    else
    {
        SCRIPT_ASSERT( "sev_mp_GetGameMode() ERROR: observation on an isolated thread when we didn't ask before, probably will go wrong!", 0 );
        DISPLAYF( "sev_mp_GetGameMode() ERROR: observation on an isolated thread when we didn't ask before, probably will go wrong!", 0 );
    }
    return LOBBY_GET_SELECTED_GAME_MODE();
}

/* SEV_GW_SELECTGANGWARSSTORY */ void sub_8244(int iParam0)
{
    if (iParam0 != 2)
    {
         /* PUTS */ sub_8348( "sev_mp_SelectGangwarsStory() - not Gang Wars, exiting" );
        g_U5401 = -1;
        return;
    }
    g_U5401 =  /* SEV_MP_GETLOBBYOPTIONVALUE */ sub_8399( 24 );
    DISPLAYF( "Lobby option LOBBY_OPT_GW_GAMEMODE = {}", 1, 513, g_U5401 );
    if ((g_U5401 >= 27) || (g_U5401 < 0))
    {
        g_U5401 = 1;
        DISPLAYF( "sev_mp_SelectGangwarsStory() - default story -", 1, 513, g_U5401 );
    }
    else
    {
        DISPLAYF( "sev_mp_SelectGangwarsStory() - chosen story =", 1, 513, g_U5401 );
    }
    return;
}

/* PUTS */ void sub_8348(unknown uParam0)
{
    DISPLAYF( "", 1, 1537, uParam0 );
    return;
}

/* SEV_MP_GETLOBBYOPTIONVALUE */ void sub_8399(unknown uParam0)
{
    if (g_U64._fU4)
    {
        return g_U64._fU12[uParam0];
        break;
    }
    if (IS_THIS_THREAD_CONNECTED())
    {
        DISPLAYF( "sev_mp_GetLobbyOptionValue() directly from observation", 0 );
    }
    else
    {
        SCRIPT_ASSERT( "sev_mp_GetLobbyOptionValue() ERROR: observation on an isolated thread when we didn't ask before, probably will go wrong!", 0 );
        DISPLAYF( "sev_mp_GetLobbyOptionValue() ERROR: observation on an isolated thread when we didn't ask before, probably will go wrong!", 0 );
    }
    return LOBBY_GET_OPTION_VALUE(  /* SEV_MP_GETGAMEMODE */ sub_7741(), uParam0 );
}

/* SEV_MP_SETTEAMIDS */ void sub_9068(unknown uParam0)
{
    int iVar3;
    int iVar4;

    if (NOT ( /* SEV_MP_GETPLAYERMODELS */ sub_9102( uParam0, ref iVar3, ref iVar4 )))
    {
        iVar3 = -490519477;
        iVar4 = -685981850;
    }
     /* SEV_MP_SETTEAMID */ sub_9975( 0, iVar3 );
     /* SEV_MP_SETTEAMID */ sub_9975( 1, iVar4 );
    return;
}

/* SEV_MP_GETPLAYERMODELS */ int sub_9102(int iParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    if (iParam0 == 2)
    {
        iVar5 =  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 34, g_U5401 - 1, 0 );
        if ((iVar5 != nil) AND (iVar5 != g_U2544))
        {
            if ( /* SEV_MP_GETPLAYERMODELSBYNODE */ sub_9189( iVar5, uParam1, uParam2 ))
            {
                return 1;
            }
        }
        DISPLAYF( "[LEVELDATA] sev_mp_GetPlayerModels() Failed to find a valid story-specific set of models, trying to grab the default story set", 0 );
        iVar5 =  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 32, 0, 0 );
        if ((iVar5 != nil) AND (iVar5 != g_U2544))
        {
            if ( /* SEV_MP_GETPLAYERMODELSBYNODE */ sub_9189( iVar5, uParam1, uParam2 ))
            {
                return 1;
            }
        }
        DISPLAYF( "[LEVELDATA] sev_mp_GetPlayerModels() Failed to find a valid default set of story models, trying to grab the default set", 0 );
    }
    iVar5 =  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 31, 0, 0 );
    if ((iVar5 != nil) AND (iVar5 != g_U2544))
    {
        if ( /* SEV_MP_GETPLAYERMODELSBYNODE */ sub_9189( iVar5, uParam1, uParam2 ))
        {
            return 1;
        }
    }
    DISPLAYF( "[LEVELDATA] sev_mp_GetPlayerModels() Failed to find a valid default set of models, setting to invalid", 0 );
    return 0;
}

/* SEV_MP_GETPLAYERMODELSBYNODE */ int sub_9189(unknown uParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;

    if (NETWORK_LEVEL_DATA_GET_HASH_FROM_NODE( ref uVar5, ":teamA", uParam0 ))
    {
        (uParam1^) = uVar5;
        DISPLAYF( "[LEVELDATA] sev_mp_GetPlayerModelsByNode() Found Team A of {}", 1, 513, uVar5 );
        if (NETWORK_LEVEL_DATA_GET_HASH_FROM_NODE( ref uVar5, ":teamB", uParam0 ))
        {
            (uParam2^) = uVar5;
            DISPLAYF( "[LEVELDATA] sev_mp_GetPlayerModelsByNode() Found Team B of {}", 1, 513, uVar5 );
            return 1;
        }
    }
    return 0;
}

/* SEV_MP_SETTEAMID */ void sub_9975(unknown uParam0, unknown uParam1)
{
    if (NOT ( /* SEV_MP_ISTEAMINDEXVALID */ sub_10009( uParam0, 1, 1, 0 )))
    {
        return;
    }
    DISPLAYF( "sev_mp_SetTeamID() Setting Team {}'s ID to {}", 2, 513, uParam0, 513, uParam1 );
    g_U959[uParam0]._fU4 = uParam1;
    return;
}

/* SEV_MP_ISTEAMINDEXVALID */ int sub_10009(int iParam0, boolean bParam1, boolean bParam2, unknown uParam3)
{
    char[64] cVar6;
    char[128] cVar22;

    if ((iParam0 >= 2) || (iParam0 < 0))
    {
        if ((bParam2) || (bParam1))
        {
            StrCopy( ref cVar6, "sev_mp_IsTeamIndexValid - ERROR: iTeam out of bounds: ", 64 );
            ConcatString(ref cVar6, iParam0, 64);
            if (bParam1)
            {
                 /* PUTS */ sub_8348( ref cVar6 );
            }
            if (bParam2)
            {
                SCRIPT_ASSERT( ref cVar6, 0 );
            }
        }
        return 0;
    }
    if ((g_U959[iParam0]._fU0 == 0) AND (uParam3))
    {
        if ((bParam2) || (bParam1))
        {
            StrCopy( ref cVar22, "sev_mp_IsTeamIndexValid - ERROR: iTeam is not active: ", 128 );
            ConcatString(ref cVar22, iParam0, 128);
            ConcatString(ref cVar22, " has ", 128);
            ConcatString(ref cVar22, g_U959[iParam0]._fU20, 128);
            if (bParam1)
            {
                 /* PUTS */ sub_8348( ref cVar22 );
            }
            if (bParam2)
            {
                SCRIPT_ASSERT( ref cVar22, 0 );
            }
        }
        return 0;
    }
    return 1;
}

/* SEV_MP_CHECKFORTEAMIDOVERRIDESFROMLOBBY */ void sub_10448()
{
     /* SEV_MP_CHECKFORTEAMIDOVERRIDEFROMLOBBY */ sub_10502( 0, 8 );
     /* SEV_MP_CHECKFORTEAMIDOVERRIDEFROMLOBBY */ sub_10502( 1, 2 );
    return;
}

/* SEV_MP_CHECKFORTEAMIDOVERRIDEFROMLOBBY */ void sub_10502(unknown uParam0, unknown uParam1)
{
    unknown uVar4;

    uVar4 =  /* SEV_MP_GETLOBBYOPTIONVALUE */ sub_8399( uParam1 );
    DISPLAYF( "TeamIDOverride - team {}, lobby option {}, set to {}", 3, 513, uParam0, 513, uParam1, 513, uVar4 );
    switch (uVar4)
    {
        default:
          case 0: break;
        case 1:
        g_U959[uParam0]._fU4 = -685981850;
        break;
        case 2:
        g_U959[uParam0]._fU4 = 1761086916;
        break;
        case 3:
        g_U959[uParam0]._fU4 = -490519477;
        break;
        case 4:
        g_U959[uParam0]._fU4 = -1615069372;
        break;
        case 5:
        g_U959[uParam0]._fU4 = 1832091570;
        break;
        case 6:
        g_U959[uParam0]._fU4 = 65927786;
        break;
    }
    DISPLAYF( "Team ID after override is {} for team {}", 2, 513, g_U959[uParam0]._fU4, 513, uParam0 );
    return;
}

/* SEV_MP_GETINITIALSPAWNLOCATION */ vector sub_10929()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;

    if (NETWORK_LEVEL_DATA_GET_VECTOR_FROM_NODE( ref Result, ":startLocation",  /* SEV_MP_GETLEVELDATANODE */ sub_1761( 30, 0, 0 ) ))
    {
        DISPLAYF( "[LEVELDATA] sev_mp_GetInitialSpawnLocation() Returning position {}", 1, 1027, Result );
        return Result;
        break;
    }
    DISPLAYF( "[LEVELDATA] sev_mp_GetInitialSpawnLocation() Returning default position of {}", 1, 1027, 0, 0, 65486 );
    return vector( 0, 0, 65486);
}

/* SET_NET_PLAYER_CONTROL */ void sub_11288(unknown uParam0, boolean bParam1, unknown uParam2)
{
    SET_PLAYER_CONTROL_FOR_NETWORK(  /* PLAYERS_ID */ sub_11325( uParam0 ), bParam1, 0 );
    SET_PED_VISIBLE(  /* PLAYERS_PED_ID */ sub_11377( uParam0 ), uParam2 );
    if (bParam1)
    {
        if (NOT (IS_PED_IN_ANY_VEHICLE(  /* PLAYERS_PED_ID */ sub_11377( uParam0 ) )))
        {
            SET_PED_COLLISION(  /* PLAYERS_PED_ID */ sub_11377( uParam0 ), 1 );
        }
        FREEZE_PED_POSITION(  /* PLAYERS_PED_ID */ sub_11377( uParam0 ), 0 );
        SET_PED_CAN_BE_TARGETTED(  /* PLAYERS_PED_ID */ sub_11377( uParam0 ), 0 );
        SET_PLAYER_INVINCIBLE(  /* PLAYERS_ID */ sub_11325( uParam0 ), 0 );
    }
    else
    {
        SET_PED_COLLISION(  /* PLAYERS_PED_ID */ sub_11377( uParam0 ), 0 );
        FREEZE_PED_POSITION(  /* PLAYERS_PED_ID */ sub_11377( uParam0 ), 1 );
        SET_PED_CAN_BE_TARGETTED(  /* PLAYERS_PED_ID */ sub_11377( uParam0 ), 1 );
        SET_PLAYER_INVINCIBLE(  /* PLAYERS_ID */ sub_11325( uParam0 ), 1 );
        REMOVE_PARTICLE_FX_FROM_PED(  /* PLAYERS_PED_ID */ sub_11377( uParam0 ) );
        if (NOT (IS_PED_FATALLY_INJURED(  /* PLAYERS_PED_ID */ sub_11377( uParam0 ) )))
        {
            CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYERS_PED_ID */ sub_11377( uParam0 ) );
        }
    }
    return;
}

/* PLAYERS_ID */ void sub_11325(unknown uParam0)
{
    return INT_TO_PLAYERINDEX( uParam0 );
}

/* PLAYERS_PED_ID */ void sub_11377(unknown uParam0)
{
    return GET_PLAYER_PED( INT_TO_PLAYERINDEX( uParam0 ) );
}

/* LOAD_AND_LAUNCH_SCRIPT */ void sub_11688(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    REQUEST_SCRIPT( uParam0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_SCRIPT_LOADED( uParam0 )))
    {
        SEV_YIELD();
    }
    if (bParam3)
    {
        START_NEW_SCRIPT_TYPED( uParam0, uParam1, uParam2 );
    }
    else
    {
        START_NEW_SCRIPT( uParam0, uParam1 );
    }
    return;
}


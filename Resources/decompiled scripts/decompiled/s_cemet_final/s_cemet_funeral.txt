void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 1;
    l_U38 = 144;
    l_U59 = {0, 0, 0};
    StrCopy( ref l_U62, "DUMMY", 32 );
    l_U70 = 1;
    l_U75 = 0;
    l_U76 = 0;
    l_U77 = 0;
    l_U80 = 0;
    l_U125 = "PED_DEF";
    l_U167 = 1.00000000;
    l_U179 = 0;
    l_U220 = 0;
    l_U240 = -1;
    l_U241 = {64536, 64536, 64536};
    l_U263 = 0;
    l_U264 = 0;
    l_U265 = 1500;
    l_U275 = 1;
    l_U276 = 0;
    l_U277 = 6;
    l_U278 = 6;
    l_U288 = "08_02A_CEMETERY_concat";
    l_U321 = 1;
    l_U417 = 0;
    l_U678 = 0;
    l_U679 = 0;
    l_U680 = 0;
    l_U687 = 3;
    l_U688 = 10;
    l_U689 = l_U688 + 1;
    sub_491( "BSW", "s_cemet_funeral.sc script started", 0 );
    if (g_U825 <= 1)
    {
        sub_552();
    }
    sub_1417();
    sub_1935();
    sub_3105( 1 );
    sub_3532();
    while (NOT IS_EXITFLAG_SET())
    {
        sub_11917();
        sub_12907();
        sub_19118();
        WAIT( 0 );
    }
    sub_18028();
    sub_35809();
    sub_36167( 1 );
    sub_597( "[GA] s_cemet_funeral.sc script ended." );
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_cemet_funeral" );
    return;
}

void sub_491(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_552()
{
    sub_597( "[GA] P_LOAD_ASSETS_FUNERAL start" );
    sub_621( g_U1334, 1 );
    sub_621( g_U1362, 1 );
    sub_621( 466468872, 1 );
    sub_621( g_U1330, 1 );
    sub_825( 2111514372, 1 );
    sub_825( 550058844, 1 );
    sub_825( -1144523979, 1 );
    sub_825( 1394393399, 1 );
    sub_1069( "FACE_PASNYB", 0, 1 );
    sub_1183( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", 1 );
    sub_1259( "SCMTAUD" );
    sub_597( "[GA] P_LOAD_ASSETS_FUNERAL end" );
    return;
}

void sub_597(unknown uParam0)
{
    return;
}

void sub_621(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_597( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_825(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_1069(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1183(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1259(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_1279();
    return;
}

void sub_1279()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_1417()
{
    sub_1456( "P_INITIALIZE_SCRIPT_DATA", 0, 0 );
    l_U322 = 0;
    l_U417 = 1;
    l_U420 = 0;
    l_U681 = 0;
    l_U678 = 0;
    l_U679 = 0;
    l_U680 = 0;
    l_U682 = 0;
    l_U683 = 0;
    sub_1591( ref l_U323, 2000, 1, 0 );
    l_U686 = 0;
    l_U418 = 0;
    l_U684 = 0;
    l_U685 = 0;
    l_U421 = 0;
    sub_1757( ref l_U441 );
    sub_1868();
    return;
}

void sub_1456(unknown uParam0, string sParam1, string sParam2)
{
    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "ML";
    }
    if (IS_STRING_NULL( sParam1 ))
    {
        sParam1 = "---";
    }
    sub_491( sParam2, uParam0, sParam1 );
    return;
}

void sub_1591(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1757(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_1868()
{
    sub_491( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    return;
}

void sub_1935()
{
    sub_1456( "P_SET_STATIC_GAMEPLAY_DATA", 0, 0 );
    sub_2016( ref l_U651, g_U779[0]._fU0, g_U779[0]._fU12, 1265654828, 26, 6, 0, 0, 0 );
    sub_2016( ref l_U491[0], -64.72000000, -88.49000000, 8.18000000, -166.33000000, 2046816868, 7, 3, 2, 0, 0 );
    sub_2016( ref l_U491[1], -67.32000000, -90.80000000, 8.06000000, -131.62000000, 2132016071, 7, 3, 2, 0, 0 );
    sub_2016( ref l_U491[2], -67.47000000, -95.29000000, 8.34000000, -131.62000000, 1465169239, 7, 3, 2, 0, 0 );
    sub_2016( ref l_U542[0], -115.88000000, -32.65000000, 0.64000000, 59.69820000, 130636593, 7, 3, 2, 0, 0 );
    sub_2016( ref l_U542[1], -96.80000000, -20.36000000, -1.35000000, 119.39890000, -851060128, 7, 3, 2, 0, 0 );
    sub_2016( ref l_U542[2], -115.62000000, -21.43000000, -0.48000000, 193.40360000, 1438777858, 7, 3, 2, 0, 0 );
    sub_2016( ref l_U542[3], -101.24000000, -17.97000000, -1.06000000, 180, -957390706, 7, 3, 2, 0, 0 );
    sub_2016( ref l_U605[0], -94.11000000, -23.72000000, -0.93000000, -180.00000000, 1025372559, 7, 3, 2, 0, 0 );
    sub_2016( ref l_U605[1], -87.50000000, -45.80000000, 2.56000000, 180.00000000, -293412092, 7, 3, 2, 0, 0 );
    sub_2016( ref l_U605[2], -87.55000000, -23.76000000, -0.93000000, 180.00000000, -1851501719, 7, 3, 2, 0, 0 );
    sub_2644( ref l_U332, "ACTIVATE_CAR_WAVE", -90.09000000, -60.59000000, 1.10000000, 70.00000000, 55.00000000, 10.00000000, 0.00000000, 0.00000000, -162.12000000, 1 );
    sub_2644( ref l_U353, "ACTIVATE_CAR_WAVE2", -116.62000000, -90.34000000, 1.10000000, 40.00000000, 55.00000000, 10.00000000, 0.00000000, 0.00000000, -172.12000000, 1 );
    sub_2644( ref l_U374, "ACTIVATE_PASSOS_GUYS", -107.29000000, -10.02000000, -2.50000000, 65.00000000, 55.00000000, 12.00000000, 0.00000000, 0.00000000, -172.12000000, 1 );
    sub_2644( ref l_U395, "PASSOS_FUNERAL_DEATH", -84.49000000, -88.33000000, 2.56000000, 70.00000000, 55.00000000, 10.00000000, 0.00000000, 0.00000000, -157.12000000, 1 );
    sub_3042( ref l_U416, "TETHER_NEAR_BRIDGE", -88.25000000, -70.87000000, -3.18000000, 75.00000000, 115.00000000, 15.00000000, 0.00000000, 0.00000000, -167.12000000, 1 );
    return;
}

void sub_2016(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_2644(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_3042(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_3105(unknown uParam0)
{
    sub_3121( -862236369, 1 );
    switch (uParam0)
    {
        case 0:
        case 1:
        sub_3121( 434544317, 1 );
        sub_3121( -691403429, 1 );
        break;
        case 2: break;
        case 3:
        sub_3121( -691403429, 1 );
        sub_3121( 930042831, 1 );
        break;
        case 4:
        case 5:
        sub_3121( 434544317, 1 );
        sub_3121( -691403429, 1 );
        break;
        case 6:
        sub_3121( 434544317, 1 );
        sub_3121( -691403429, 1 );
        break;
        case 7:
        sub_3121( 434544317, 1 );
        sub_3121( -691403429, 1 );
        sub_3121( 1224272620, 1 );
        break;
        case 8:
        sub_3121( 434544317, 1 );
        sub_3121( -691403429, 1 );
        break;
        case 9:
        sub_3121( 434544317, 1 );
        sub_3121( -691403429, 1 );
        break;
        case 10:
        sub_3121( 434544317, 1 );
        sub_3121( -184942895, 1 );
        sub_3121( -691403429, 1 );
        break;
    }
    return;
}

void sub_3121(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3532()
{
    if (g_U825 == 0)
    {
        sub_491( "RJM", "INITIALIZE_PLAYER_BY_CHECKPOINT says we're in MCE_START", " " );
        g_U826 = 1;
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 250 );
        }
        l_U322 = 0;
    }
    else if (g_U825 == 1)
    {
        sub_491( "RJM", "INITIALIZE_PLAYER_BY_CHECKPOINT says we're in MCE_FUNERAL", " " );
        g_U826 = 1;
        sub_3759();
        l_U417 = 1;
        l_U678 = 1;
        l_U322 = 3;
    }
    START_CONTEXT( "CEMETERY_WIFE_GRAVE" );
    START_CONTEXT( "CEMETERY_FUNERAL_TO_END" );
    return;
}

void sub_3759()
{
    sub_3769();
    sub_8458();
    sub_8813();
    sub_11277();
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    return;
}

void sub_3769()
{
    if (sub_3779())
    {
        if (NOT (sub_3930( ref l_U450 )))
        {
            REMOVE_ALL_PED_WEAPONS( sub_3789() );
            sub_6251( sub_3789(), -862236369, 100, 0, 0 );
        }
        SET_PAYNEKILLER_AMT( 5 );
        sub_8178();
    }
    return;
}

int sub_3779()
{
    if (sub_3855( sub_3789() ))
    {
        return 1;
    }
    return 0;
}

int sub_3789()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_3811() );
    }
    return 0;
}

void sub_3811()
{
    return GET_PLAYER_ID();
}

int sub_3855(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

int sub_3930(unknown uParam0)
{
    sub_491( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U37 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U38 );
            sub_4064( uParam0, sub_3789() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_4064(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_491( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U37)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_4250( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_5327( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_5619( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_5966( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_5619( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_5966( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_5619( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_5966( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_6251( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_5966( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_6251( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_5966( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U37 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_6746( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_6907( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_3789(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U37)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U37 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_491( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_4250(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_4282( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_4282(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_5327(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_5619(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_597( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_5966(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_6251(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_597( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_6746(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_6907(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_4282( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_6979( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_6979(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_8178()
{
    if (sub_3779())
    {
        sub_491( "bsw", "snapping Max to cover 25806C4F_4EF389A0_Corner1", 0 );
        sub_8286( sub_3789(), g_U971[0]._fU0, g_U971[0]._fU12 );
        SNAP_PLAYER_TO_COVERPOINT( sub_3811(), "GenCover", "25806C4F_4EF389A0_Corner1", 1 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[0]._fU16, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[0]._fU20, 1065353216, 0 );
    }
    return;
}

void sub_8286(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_8458()
{
    sub_491( "BSW", "CREATE_MICHELLES_GRAVESTONE - start", 0 );
    sub_8523( l_U486 );
    l_U486 = sub_8583( g_U1330, g_U1297, g_U1300, 0, 0, 0 );
    return;
}

void sub_8523(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_8583(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_621( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_8813()
{
    sub_8860( ref l_U491, ref l_U487, ref l_U531, -862236369, 1.00000000, ref g_U1212, 0, 0, 25000, 3, 0, 25000, 0 );
    sub_11030( ref l_U487, 2 );
    sub_10923( ref l_U487, "CONFRONT_ENEMY_" );
    SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U531._fU0, 1 );
    sub_11173( ref l_U487, 1 );
    return;
}

void sub_8860(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5, boolean bParam6, unknown uParam7, unknown uParam8, unknown uParam9, int iParam10, unknown uParam11, unknown uParam12)
{
    int I;
    unknown uVar16;

    if ((uParam0^) != (uParam1^))
    {
        SCRIPT_ASSERT( "PED_ARRAY_INITIALIZE - Array sizes don't match!!", 0 );
        return;
    }
    sub_8949( uParam2, uParam4, 0 );
    if (IS_STRING_NULL( uParam12 ))
    {
        uParam12 = l_U125;
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_9170( (uParam1^)[I] );
        (uParam1^)[I] = sub_9251( ref (uParam0^)[I] );
        if (sub_3855( (uParam1^)[I] ))
        {
            SET_PED_AI_TEMPLATE( (uParam1^)[I], uParam5 );
            SET_PED_ALERTNESS( (uParam1^)[I], uParam9 );
            SET_PED_ALLOWED_TO_SURRENDER( (uParam1^)[I], 0 );
            sub_9989( (uParam1^)[I], uParam2 );
            if (iParam3 != -1569615261)
            {
                uVar16 = sub_6251( (uParam1^)[I], iParam3, uParam8, 0, 0 );
            }
            if (iParam10 != 0)
            {
                sub_5619( (uParam1^)[I], iParam10, 0, uParam11, 0 );
            }
            if (bParam6)
            {
                sub_10335( (uParam1^)[I], iParam3 );
            }
            switch (uParam7)
            {
                case 0: break;
                case 1:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                break;
                case 2:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                break;
                case 3:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                break;
            }
        }
    }
    sub_10923( uParam1, uParam12 );
    return;
}

void sub_8949(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_9170(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_9251(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_621( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_9730( iParam0->_fU40 );
    sub_9810( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_9730(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_9810(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_9989(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_597( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_8949( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_8949( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_10335(unknown uParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case -1569615261:
        case 406496141:
        case -862236369:
        case 456708483:
        case -1464892298:
        case 68019059:
        case -612753081:
        case -820634585:
        SET_PED_COMBAT_RANGE_MAX( uParam0, 10.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 434544317:
        case 1845102363:
        case -168327769:
        case -184942895:
        case 514118749:
        case 1964270085:
        case -691403429:
        case 1478009203:
        case -1404433099:
        case 1194438308:
        SET_PED_COMBAT_RANGE( uParam0, 1 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 20.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case -1013714740:
        case -1074756423:
        case 1308526797:
        case 840671040:
        case 57534114:
        case 724901397:
        case 1992962408:
        SET_PED_COMBAT_RANGE( uParam0, 2 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 30.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 1224272620:
        case 10648147:
        case 377623895:
        case 319712764:
        case -110877124:
        case -1659006841:
        SET_PED_COMBAT_RANGE( uParam0, 3 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 50.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 5.00000000 );
        break;
    }
    return;
}

void sub_10923(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_11030(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_11064( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_11064(unknown uParam0, unknown uParam1)
{
    if (sub_3855( (uParam0^) ))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

void sub_11173(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_11207( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_11207(unknown uParam0, unknown uParam1)
{
    if (sub_3855( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

void sub_11277()
{
    sub_597( "[GA] CREATE_BRIDGE_RAYFIRE_INTACT start" );
    sub_8523( g_U1796 );
    sub_8523( g_U1786 );
    sub_8523( g_U1787 );
    sub_8523( g_U1788 );
    sub_8523( g_U1789 );
    sub_8523( g_U1790 );
    sub_8523( g_U1791 );
    sub_8523( g_U1792 );
    sub_8523( g_U1793 );
    sub_8523( g_U1794 );
    sub_8523( g_U1795 );
    sub_8523( g_U1797 );
    sub_8523( g_U1798 );
    sub_8523( g_U1799 );
    g_U1796 = sub_11494( g_U1362, g_U1933, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U1796 ))
    {
        FREEZE_OBJECT_POSITION( g_U1796, 1 );
    }
    sub_597( "[GA] CREATE_BRIDGE_RAYFIRE_INTACT end" );
    return;
}

void sub_11494(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_621( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_11917()
{
    if (l_U277 != l_U275)
    {
        sub_491( "TEH", "playing music:changed CUR FLAG", 0 );
        sub_11993( l_U275 );
        sub_11993( l_U276 );
        l_U277 = l_U275;
    }
    else if (l_U278 != l_U276)
    {
        sub_491( "TEH", "playing music:changed NEW FLAG", 0 );
        sub_11993( l_U275 );
        sub_11993( l_U276 );
        l_U278 = l_U276;
    }
    switch (l_U275)
    {
        case 1:
        sub_491( "TEH", "playing music:MC_Start_up SUSPEND ", 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        l_U275 = 3;
        break;
        case 2:
        sub_491( "TEH", "playing music:MC_CHECKPOINT_RESTART_FUNERAL ", 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        l_U275 = 3;
        break;
        case 3:
        if (l_U276 == 3)
        {
            sub_491( "TEH", "playing music: MC_GAMEPLAY_STARTS ", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_1_3_4", "", 0, 5000, 50000, -1082130432, 0 );
            sub_1591( ref l_U279, 10000, 1, 0 );
            sub_12478( ref l_U279 );
            l_U275 = 4;
        }
        break;
        case 4:
        if (l_U276 == 4)
        {
            sub_491( "TEH", "playing music: MC_THREE_GUYS_DEAD ", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_3_4_5", "", 0, 8000, 5000, -1082130432, 0 );
            l_U275 = 5;
        }
        break;
        case 5:
        if (l_U276 == 5)
        {
            sub_491( "TEH", "playing music: MC_ALL_DEAD AUDIO_MUSIC_SUSPEND 8000 ", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_3", "", 0, 6000, 5000, -1082130432, 0 );
            l_U275 = 6;
        }
        break;
    }
    return;
}

void sub_11993(unknown uParam0)
{
    return;
}

void sub_12478(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

void sub_12907()
{
    if (g_U826 == 1)
    {
        if (l_U419 == 0)
        {
            if (NOT (sub_3855( sub_3789() )))
            {
                sub_491( "RJM", "HANDLE_CHECKPOINTS - Player died in Funeral", 0 );
                l_U419 = 1;
            }
            else if (sub_13026())
            {
                sub_491( "SBA", "HANDLE_CHECKPOINTS - Restart", 0 );
                l_U419 = 1;
            }
            else if (l_U682)
            {
                if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT ((l_U685) || (sub_3855( g_U824 )))))
                {
                    sub_491( "RJM", "HANDLE_CHECKPOINTS - Passos died in Funeral", 0 );
                    l_U419 = 2;
                }
            };;;
        }
        sub_13619();
    }
    return;
}

int sub_13026()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U37 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_3789() )))
        {
            SET_PED_FORCED_TO_WALK( sub_3789(), 0 );
            SET_PLAYER_FORCED_AIM( sub_3811(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_3811(), 1 );
            if ((IS_PED_VISIBLE( sub_3789() )) == 0)
            {
                SET_PED_VISIBLE( sub_3789(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_13619()
{
    switch (l_U419)
    {
        case 0: break;
        case 2:
        if (l_U418 == 0)
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            l_U419 = 1;
        }
        else if (l_U418 == 1)
        {
            if (sub_13746())
            {
                l_U419 = 1;
                sub_491( "CCB", "eFailure - STATE_FAIL_WAITING", 0 );
            }
        }
        break;
        case 1:
        if (sub_16924())
        {
            l_U419 = 3;
        }
        else if ((sub_16964( 0 )) == 1)
        {
            l_U419 = 3;
        }
        break;
        case 3:
        if (NOT (IS_PED_DEAD( sub_3789() )))
        {
            sub_491( "CCB", "Deactivating bullettime...", 0 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            END_POSTFX_BLENDER( 3, 0 );
            l_U419 = 4;
            sub_491( "CCB", "eFailure - STATE_FAIL_CLEANUP", 0 );
        }
        break;
        case 4:
        if (NOT (IS_PLAYER_DEAD( sub_3811() )))
        {
            if (NOT (IS_PED_DEAD( sub_3789() )))
            {
                SET_PLAYER_CONTROL( sub_3811(), 0, 0 );
            }
        }
        DO_SCREEN_FADE_OUT( 0 );
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        sub_9170( g_U824 );
        sub_18028();
        l_U419 = 5;
        sub_491( "CCB", "eFailure - STATE_FAIL_RESTORE", 0 );
        break;
        case 5:
        if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
        sub_1417();
        sub_1935();
        sub_3759();
        sub_18584();
        l_U419 = 6;
        sub_491( "CCB", "eFailure - STATE_FAIL_RESTART", 0 );
        break;
        case 6:
        if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
        {
            sub_491( "CCB", "eFailure - STATE_FAIL_IDLE", 0 );
            sub_4064( ref l_U450, sub_3789() );
            if (sub_3779())
            {
                SET_PED_INVINCIBLE( sub_3789(), 0 );
                SET_PLAYER_CONTROL( sub_3811(), 1, 0 );
                SET_PED_VISIBLE( sub_3789(), 1 );
            }
            l_U275 = 2;
            sub_1069( "FACE_PASNYB", 0, 1 );
            sub_1183( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", 1 );
            l_U419 = 0;
            l_U417 = 1;
            l_U678 = 1;
            l_U322 = 3;
            sub_491( "CCB", "eCheckpoint - STATE_CHECKPOINT_INIT", 0 );
        }
        else
        {
            sub_491( "CCB", "Waiting for stream requests...", 0 );
        }
        break;
    }
    return;
}

int sub_13746()
{
    unknown uVar2;

    switch (l_U686)
    {
        case 0:
        sub_491( "CCB", "PLAY_PASSOS_TREEGARDEN_DEATH_SCENE: ePassosDeathMidsceneState - STATE_DEATHCAM_INIT", 0 );
        sub_13910( 1, 0, 0, 1 );
        sub_14073( ref l_U487 );
        sub_14073( ref l_U537 );
        sub_14073( ref l_U601 );
        uVar2 = sub_14238();
        sub_14824( ref l_U699, -102.72390000, -7.28837000, -0.05328800, -10.01655000, 0.00002600, -170.28390000, 45, 1500 );
        sub_825( -1144523979, 1 );
        if (sub_3779())
        {
            SET_PED_VISIBLE( sub_3789(), 0 );
        }
        if (ISEQ_QUERY_ENTITY_STATE( 550058844, "PASSOS", 3 ))
        {
            sub_491( "RJM", "S_CEM_08_03_BLENDOUT was playing, kill it.", 0 );
            ISEQ_UNREGISTER_ENTITY( 550058844, "PASSOS" );
            sub_15176( 550058844, 1 );
        }
        if (sub_3855( g_U824 ))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( g_U824 );
            sub_8286( g_U824, l_U651._fU0, l_U651._fU12 );
            sub_15431( ref g_U824 );
            ISEQ_REGISTER_ENTITY( -1144523979, "PASSOS", g_U824, 0 );
            ISEQ_START( -1144523979 );
        }
        sub_2016( ref l_U664, -100.21000000, -13.14000000, -1.46000000, 30, uVar2, 7, 3, 2, 0, 0 );
        sub_9170( l_U677 );
        l_U677 = sub_9251( ref l_U664 );
        if (sub_3855( l_U677 ))
        {
            sub_15842( ref l_U677 );
            sub_6251( l_U677, -862236369, 25000, 0, 0 );
            REGISTER_TARGET( l_U677, g_U824 );
            SET_PED_DEFAULT_AIM_AT_PED( l_U677, g_U824 );
            TASK_AIM_GUN_AT_PED( l_U677, g_U824, -1, 0 );
        }
        l_U686 = 3;
        sub_491( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_START", 0 );
        case 3:
        sub_16052( ref l_U699 );
        SHAKE_CAM( l_U699._fU0, sub_16143(), 0.25000000 );
        sub_1591( ref l_U690, 750, 1, 0 );
        sub_12478( ref l_U690 );
        l_U686 = 1;
        sub_491( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_WAITING", 0 );
        break;
        case 1:
        if (sub_16291( ref l_U690 ))
        {
            if ((sub_3855( g_U824 )) AND (sub_3855( l_U677 )))
            {
                SET_PED_SHOOTS_AT_COORD( l_U677, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U824, 65488, 0, 0, 0 ) );
                SHAKE_CAM( l_U699._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
                SET_PED_DEFAULT_AIM_AT_COORD( l_U677, -10.06000000, 108.19000000, 5.24000000 );
                sub_16591( g_U824 );
                sub_1591( ref l_U690, 50, 1, 0 );
                sub_12478( ref l_U690 );
                l_U686 = 5;
                sub_491( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_PLAYING", 0 );
            }
        }
        break;
        case 5:
        if (sub_16291( ref l_U690 ))
        {
            l_U686 = 6;
            sub_491( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_FINISHED", 0 );
        }
        break;
        case 6:
        return 1;
        break;
    }
    return 0;
}

void sub_13910(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_3789() )))
        {
            SET_PLAYER_CONTROL( sub_3811(), 0, uParam2 );
            SET_PED_DUCKING( sub_3789(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_3789() );
            }
            SET_PED_INVINCIBLE( sub_3789(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_14073(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_14104( (uParam0^)[I] );
    }
    return;
}

void sub_14104(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

int sub_14238()
{
    int I;

    for ( I = 0; I <= (l_U487 - 1); I++ )
    {
        if (sub_3855( l_U487[I] ))
        {
            sub_491( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Confront", 0 );
            return l_U491[I]._fU20;
        }
    }
    for ( I = 0; I <= (l_U537 - 1); I++ )
    {
        if (sub_3855( l_U537[I] ))
        {
            sub_491( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Car", 0 );
            return l_U542[I]._fU20;
        }
    }
    for ( I = 0; I <= (l_U601 - 1); I++ )
    {
        if (sub_3855( l_U601[I] ))
        {
            sub_491( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Middle Wave", 0 );
            return l_U605[I]._fU20;
        }
    }
    sub_491( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Couldn't find anyone alive...that's weird, use a default", 0 );
    return -293412092;
}

void sub_14824(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_1591( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U763, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_15176(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_15431(unknown uParam0)
{
    sub_491( "RJM", "P_SETUP_PASSOS_FOR_FAILURE_SCENE", "***" );
    if (sub_3855( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 0 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 1 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 0 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 0 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 1 );
    }
    return;
}

void sub_15842(unknown uParam0)
{
    if (sub_3855( (uParam0^) ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_COMBAT_MOVEMENT( (uParam0^), 0 );
    }
    return;
}

void sub_16052(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_12478( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

string sub_16143()
{
    return "WOBBLY_SHAKE";
}

int sub_16291(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_16591(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_16924()
{
    return g_U648;
}

int sub_16964(int iParam0)
{
    iParam0 = 1;
    switch (l_U264)
    {
        case 0:
        if (NOT (sub_17025( ref l_U266 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_3789() )))
            {
                l_U265 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1591( ref l_U266, l_U265, 1, 1 );
            sub_12478( ref l_U266 );
        }
        if (sub_16291( ref l_U266 ))
        {
            sub_491( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_3789() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_3811() )))
            {
                SET_PLAYER_CONTROL( sub_3811(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U264 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U264 = 2;
            }
            else
            {
                l_U264 = 3;
            }
        }
        break;
        case 2:
        sub_491( "NS", "Player will QUIT", 0 );
        sub_17484();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_491( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_17484();
        return 1;
        break;
    }
    return 0;
}

int sub_17025(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_17484()
{
    sub_491( "NS", "P_PostFailRetryCleanup", 0 );
    sub_1757( ref l_U266 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_3811() )))
    {
        SET_PLAYER_CONTROL( sub_3811(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U263 = 0;
    l_U263 = l_U263;
    l_U264 = 0;
    return;
}

void sub_18028()
{
    sub_597( "[GA] P_CLEANUP_ALL start" );
    ISEQ_UNREGISTER_ENTITY( 550058844, "passos" );
    sub_15176( 550058844, 0 );
    ISEQ_UNREGISTER_ENTITY( -1144523979, "passos" );
    sub_15176( -1144523979, 0 );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "max" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed1" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed2" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed3" );
    sub_15176( 2111514372, 0 );
    sub_9170( l_U677 );
    sub_18256( ref l_U487 );
    sub_18256( ref l_U601 );
    sub_18256( ref l_U537 );
    sub_8523( l_U486 );
    sub_18356( "FACE_PASNYB" );
    sub_18426( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act" );
    sub_597( "[GA] P_CLEANUP_ALL end" );
    return;
}

void sub_18256(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_9170( (uParam0^)[I] );
    }
    return;
}

void sub_18356(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_18426(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}

void sub_18584()
{
    sub_491( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", "###" );
    if ((IS_PED_DEAD( sub_3789() )) == 0)
    {
        SET_PED_RELATIONSHIP( sub_3789(), 0, 1 );
        SET_PED_RELATIONSHIP( sub_3789(), 0, 2 );
        SET_PED_RELATIONSHIP( sub_3789(), 0, 6 );
        SET_PED_RELATIONSHIP( sub_3789(), 0, 7 );
    }
    return;
}

void sub_19118()
{
    int iVar2;
    int I;
    int iVar4;

    if (l_U419 == 0)
    {
        switch (l_U322)
        {
            case 0:
            sub_491( "RJM", "Moving to FUNERAL_INTRO_BINK", 0 );
            sub_3759();
            l_U322 = 1;
            case 1: if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                sub_491( "RJM", "Moving to FUNERAL_WAIT_FOR_BINK", 0 );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                DO_SCREEN_FADE_IN( 0 );
                l_U322 = 2;
            }
            case 2:
            if (((l_U689 < l_U688) || (NOT IS_TRANSITION_MOVIE_PLAYING())) AND (NOT l_U679))
            {
                l_U679 = 1;
                CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_01", "000750_06_GC_BLEND_OUT_08_01_CEM_ALT1", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            }
            if ((l_U689 < l_U687) || (NOT IS_TRANSITION_MOVIE_PLAYING()))
            {
                sub_491( "RJM", "Moving to FUNERAL_BLENDOUT", 0 );
                if (l_U689 < l_U687)
                {
                    sub_491( "RJM", "We've hit our safety frame number, just move forward now", 0 );
                }
                l_U678 = 1;
                l_U275 = 1;
                l_U322 = 3;
            }
            l_U689 = GET_TRANSITION_MOVIE_FRAMES_REMAINING();
            case 3:
            if (sub_19679())
            {
                sub_25200();
                sub_25697();
                sub_20297( l_U288, 0 );
                sub_825( 1394393399, 0 );
                sub_26468( ref l_U595, 0.10000000 );
                sub_26468( ref l_U645, 0.10000000 );
                l_U682 = 1;
                sub_491( "RJM", "Moving to FUNERAL_FIRST_FIGHT", 0 );
                l_U322 = 4;
            }
            break;
            case 4:
            sub_26718();
            sub_27100();
            if (sub_17025( ref l_U323 ))
            {
                if (sub_16291( ref l_U323 ))
                {
                    sub_29117( ref l_U323 );
                }
            }
            if (sub_29157( g_U824, 2.00000000 ))
            {
                sub_29239( g_U824 );
                sub_491( "RJM", "Max has shot near Passos", 0 );
                PED_SET_ACTION_INTENTION( g_U824, 58, 1000, 0, 0, 0 );
            }
            if (NOT l_U680)
            {
                if ((sub_29445( ref l_U353, 0 )) || (sub_29445( ref l_U332, 0 )))
                {
                    sub_29557();
                    sub_30422();
                    l_U421 = 1;
                    if (l_U681)
                    {
                        l_U681 = 0;
                        for ( I = 0; I <= (l_U487 - 1); I++ )
                        {
                            if (sub_3855( l_U487[I] ))
                            {
                                SET_PED_CAN_TRIGGER_BULLET_CAM( l_U487[I], 0 );
                            }
                        }
                    }
                    l_U680 = 1;
                }
            }
            else if (sub_29445( ref l_U332, 0 ))
            {
                l_U421 = 1;
            }
            if (l_U683)
            {
                if ((sub_29445( ref l_U374, 0 )) || ((sub_30659( ref l_U537 )) <= 2))
                {
                    sub_491( "RJM", "2 guys died, or Max got close, or bullet impacted, activate the closer guys to Passos", 0 );
                    sub_29635( l_U537[1] );
                    sub_29635( l_U537[3] );
                    l_U683 = 0;
                }
            }
            iVar2 = sub_30659( ref l_U487 );
            iVar4 = 3;
            if (iVar2 == 0)
            {
                END_CONTEXT( "CEMETERY_WIFE_GRAVE" );
            }
            if (((IS_PED_AT_COORD( sub_3789(), g_U971[1]._fU0, 2.00000000, 2.00000000, 2.00000000, 0, 1 )) == 0) || ((IS_PED_IN_COVER( sub_3789() )) == 0))
            {
                if ((SCRIPT_VAR_EXISTS( "SP_SV_LEFT_GRAVE" )) == 0)
                {
                    SCRIPT_VAR_ADD_INT( "SP_SV_LEFT_GRAVE" );
                }
                SCRIPT_VAR_SET_INT( "SP_SV_LEFT_GRAVE", 1 );
            }
            if (l_U680)
            {
                iVar2 += sub_30659( ref l_U537 );
                iVar2 += sub_30659( ref l_U601 );
                iVar4 += 7;
            }
            if (l_U275 == 4)
            {
                if (iVar2 <= (iVar4 - 3))
                {
                    sub_491( "BSW", "3 guys died, bump the music", 0 );
                    l_U276 = 4;
                }
            }
            if (iVar2 == 1)
            {
                if (NOT l_U681)
                {
                    sub_31229( ref l_U487 );
                    if (l_U680)
                    {
                        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                        sub_31229( ref l_U537 );
                        sub_31229( ref l_U601 );
                        FORCE_CUSTOM_WIPE_BULLET_CAMERA( 1 );
                    }
                    l_U681 = 1;
                }
            }
            else if (iVar2 == 0)
            {
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    if (NOT IS_LAST_MAN_STANDING_ACTIVE())
                    {
                        if (l_U680)
                        {
                            l_U276 = 5;
                            l_U682 = 0;
                            sub_491( "RJM", "Moving to FUNERAL_MIDSCENE_02A_02B", 0 );
                            g_U1783 = 1;
                            RESET_PED_MODEL_LOD_DISTANCES( g_U1334 );
                            l_U322 = 7;
                        }
                        else
                        {
                            l_U421 = 1;
                            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
                            CAMERA_SNAP_POINT_AT_COORD( -103.00000000, -10.30000000, -0.60000000 );
                            sub_491( "RJM", "Moving to FUNERAL_PASSOS_TROUBLE_BLENDOUT", 0 );
                            l_U322 = 5;
                        }
                    }
                }
            }
            break;
            case 5:
            l_U681 = 0;
            CAMERA_CLEAR_POINT_AT_TARGET();
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            sub_491( "RJM", "Moving to FUNERAL_SAVE_PASSOS", 0 );
            l_U322 = 6;
            break;
            case 6:
            sub_27100();
            sub_26718();
            if (l_U683)
            {
                if ((sub_29445( ref l_U374, 0 )) || ((sub_30659( ref l_U537 )) <= 2))
                {
                    sub_491( "RJM", "2 guys died, or Max got close, or bullet impacted, activate the closer guys to Passos", 0 );
                    sub_29635( l_U537[1] );
                    sub_29635( l_U537[3] );
                    l_U683 = 0;
                }
            }
            if (sub_29157( g_U824, 2.00000000 ))
            {
                sub_29239( g_U824 );
                sub_491( "RJM", "Max has shot near Passos", 0 );
                PED_SET_ACTION_INTENTION( g_U824, 58, 1000, 0, 0, 0 );
            }
            if (NOT l_U680)
            {
                if ((sub_29445( ref l_U353, 0 )) || (sub_29445( ref l_U332, 0 )))
                {
                    sub_29557();
                    sub_30422();
                    l_U680 = 1;
                }
            }
            iVar2 = (sub_30659( ref l_U537 )) + (sub_30659( ref l_U601 ));
            if (iVar2 == 1)
            {
                if (NOT l_U681)
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                    sub_31229( ref l_U537 );
                    sub_31229( ref l_U601 );
                    FORCE_CUSTOM_WIPE_BULLET_CAMERA( 1 );
                    l_U681 = 1;
                }
            }
            else if (iVar2 == 0)
            {
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    if (NOT IS_LAST_MAN_STANDING_ACTIVE())
                    {
                        l_U276 = 5;
                        l_U682 = 0;
                        sub_491( "RJM", "Moving to FUNERAL_MIDSCENE_02A_02B", 0 );
                        g_U1783 = 1;
                        RESET_PED_MODEL_LOD_DISTANCES( g_U1334 );
                        l_U322 = 7;
                    }
                }
            }
            break;
            case 7:
            if (sub_32275( 1 ))
            {
                g_U1785 = 1;
                sub_491( "RJM", "Moving to FUNERAL_PREP_FOR_MPM", 0 );
                l_U322 = 8;
            }
            if (l_U321 == 3)
            {
                g_U1784 = 1;
            }
            break;
            case 8:
            sub_35481( ref g_U1403, 0, 1, 1065353216 );
            sub_35481( ref g_U1410, 1, 1, 1065353216 );
            sub_491( "RJM", "Moving to FUNERAL_DONE", 0 );
            l_U322 = 9;
            break;
            case 9:
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            break;
        }
    }
    return;
}

int sub_19679()
{
    switch (l_U417)
    {
        case 1:
        sub_491( "SP", "eBlend0801State = BLEND_SETUP", 0 );
        sub_13910( 1, 0, 0, 1 );
        SET_ADRENALINE_AMT( 0.00000000 );
        sub_825( 2111514372, 1 );
        sub_8178();
        if ((ISEQ_QUERY_STATE( 2111514372, 3 )) == 0)
        {
            sub_491( "bsw", "starting 08_01_blendout", 0 );
            sub_8286( l_U487[0], g_U1303, g_U1306 );
            sub_8286( l_U487[1], g_U1307, g_U1310 );
            sub_8286( l_U487[2], g_U1311, g_U1314 );
            ISEQ_REGISTER_ENTITY( 2111514372, "max", sub_3789(), 0 );
            ISEQ_REGISTER_ENTITY( 2111514372, "gmed", l_U487[0], 0 );
            ISEQ_REGISTER_ENTITY( 2111514372, "gmed1", l_U487[1], 0 );
            ISEQ_REGISTER_ENTITY( 2111514372, "gmed2", l_U487[2], 0 );
            ISEQ_START( 2111514372 );
        }
        l_U417 = 2;
        sub_491( "SP", "eBlend0801State = moving to START", 0 );
        break;
        case 2:
        if (l_U678)
        {
            sub_491( "SP", "eBlend0801State = BLEND_START", 0 );
            if (NOT IS_ANIMATED_CAMERA_PLAYING())
            {
                CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_01", "000750_06_GC_BLEND_OUT_08_01_CEM_ALT1", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            }
            sub_20297( l_U288, 0 );
            sub_621( g_U1332, 0 );
            PED_SET_ACTION_INTENTION( sub_3789(), 47, 1000, 0, 0, 0 );
            PED_SET_ACTION_INTENTION( l_U487[0], 47, 1000, 0, 0, 0 );
            PED_SET_ACTION_INTENTION( l_U487[1], 47, 1000, 0, 0, 0 );
            PED_SET_ACTION_INTENTION( l_U487[2], 47, 1000, 0, 0, 0 );
            l_U276 = 3;
            l_U417 = 3;
        }
        break;
        case 3:
        sub_491( "SP", "eBlend0801State = BLEND_FIRST_FRAME", 0 );
        if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || ((IS_SCREEN_FADING_OUT()) || (IS_SCREEN_FADED_OUT())))
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        sub_20763();
        if (NOT l_U450._fU0)
        {
            sub_21039( ref l_U450, g_U826, sub_3789(), g_U971[1]._fU0, g_U971[1]._fU12, g_U971[1]._fU16, g_U971[1]._fU20, 1 );
        }
        l_U417 = 4;
        sub_491( "SP", "eBlend0801State = BLEND_PLAYING", 0 );
        case 4:
        if ((CAMERA_ANIMATED_CURRENT_TIME() + 1) >= (CAMERA_ANIMATED_LENGTH( "LEVEL_S_CEM_CP_01", "000750_06_GC_BLEND_OUT_08_01_CEM_ALT1" )))
        {
            CAMERA_FREEZE_FRAME( 1, 500, 0, 0 );
            sub_491( "SP", "eBlend0801State = BLEND_FINISHED", 0 );
            l_U417 = 5;
        }
        break;
        case 5:
        SET_PED_MODEL_LOD_DISTANCES( g_U1334, 25.00000000, 100.00000000 );
        sub_491( "SP", "eBlend0801State = BLEND_IDLE", 0 );
        sub_24913( 1, 1 );
        return 1;
        break;
    }
    return 0;
}

void sub_20297(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_20763()
{
    int I;

    sub_491( "RJM", "P_START_CONFRONT_PEDS", 0 );
    sub_11173( ref l_U487, 0 );
    sub_11030( ref l_U537, 2 );
    for ( I = 0; I <= (l_U487 - 1); I++ )
    {
        if ((NOT (IS_PED_RAGDOLL( l_U487[I], 0 ))) AND ((NOT (IS_PED_INJURED( l_U487[I] ))) AND ((sub_3779()) AND (sub_3855( l_U487[I] )))))
        {
            REGISTER_TARGET( l_U487[I], sub_3789() );
            TASK_COMBAT_PED( l_U487[I], sub_3789() );
        }
    }
    return;
}

void sub_21039(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_491( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_491( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_6907( iParam1 );
        sub_21298( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_21749( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_21749( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_21981( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_21749( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_21981( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_21981( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_21749( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_21981( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_21981( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_21981( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_21749( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_21981( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_21981( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_21981( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_21981( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_23539( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U38, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_491( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_21298(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_4282( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_491( "TEH", "Ending context", 0 );
        sub_491( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_21749(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_21981(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_23539(int iParam0)
{
    sub_597( "CHECKPOINT DATA" );
    sub_23578( iParam0->_fU4 );
    sub_23601( iParam0->_fU16 );
    sub_23601( iParam0->_fU20 );
    sub_23601( iParam0->_fU24 );
    sub_11993( iParam0->_fU28 );
    sub_11993( iParam0->_fU56 );
    sub_11993( iParam0->_fU60 );
    sub_11993( iParam0->_fU64 );
    sub_11993( iParam0->_fU68 );
    sub_11993( iParam0->_fU72 );
    sub_11993( iParam0->_fU76 );
    sub_11993( iParam0->_fU80 );
    sub_11993( iParam0->_fU84 );
    sub_11993( iParam0->_fU88 );
    sub_11993( iParam0->_fU92 );
    sub_23601( iParam0->_fU32 );
    sub_11993( iParam0->_fU36 );
    sub_11993( iParam0->_fU40 );
    sub_11993( iParam0->_fU44 );
    sub_23601( iParam0->_fU136 );
    sub_23836( iParam0->_fU140 );
    sub_11993( iParam0->_fU52 );
    sub_597( "---nRightHolsterAttachmentEnabled: " );
    sub_11993( iParam0->_fU96 );
    sub_597( "---nRightHolsterAttachmentToggled: " );
    sub_11993( iParam0->_fU100 );
    sub_597( "---nLeftHolsterAttachmentEnabled: " );
    sub_11993( iParam0->_fU104 );
    sub_597( "---nLeftHolsterAttachmentToggled: " );
    sub_11993( iParam0->_fU108 );
    sub_597( "---nRifleHolsterAttachmentEnabled: " );
    sub_11993( iParam0->_fU112 );
    sub_597( "---nRifleHolsterAttachmentToggled: " );
    sub_11993( iParam0->_fU116 );
    sub_597( "---nRightHandAttachmentEnabled: " );
    sub_11993( iParam0->_fU120 );
    sub_597( "---nRightHandAttachmentToggled: " );
    sub_11993( iParam0->_fU124 );
    sub_597( "---nLeftHandAttachmentEnabled: " );
    sub_11993( iParam0->_fU128 );
    sub_597( "---nLeftHandAttachmentToggled: " );
    sub_11993( iParam0->_fU132 );
    sub_11993( l_U38 );
    sub_11993( 144 );
    return;
}

void sub_23578(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_23601(unknown uParam0)
{
    return;
}

void sub_23836(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_24913(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_3789() )))
    {
        SET_PLAYER_CONTROL( sub_3811(), 1, 0 );
        SET_PED_INVINCIBLE( sub_3789(), 0 );
        if (bParam0)
        {
            sub_24994();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_24994()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_3789() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_3789(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_3789(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_3789(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_3789(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_25200()
{
    sub_621( g_U1332, 1 );
    sub_9170( g_U824 );
    g_U824 = sub_9251( ref l_U651 );
    sub_825( 550058844, 1 );
    if (sub_3855( g_U824 ))
    {
        sub_6251( g_U824, -862236369, 25000, 0, 0 );
        sub_25296( ref g_U824 );
        sub_11207( ref g_U824, 0 );
        SET_PED_DEFAULT_AIM_AT_PED( g_U824, sub_3789() );
        ISEQ_REGISTER_ENTITY( 550058844, "passos", g_U824, 0 );
        ISEQ_START( 550058844 );
    }
    return;
}

void sub_25296(unknown uParam0)
{
    sub_491( "SBA", "P_SETUP_PASSOS_GENERAL_ATTRIBUTES", "***" );
    if (sub_3855( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 0 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 1 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 1 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 0 );
        SET_PED_CONSUMING_AMMO( (uParam0^), 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^), 1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^), 1 );
    }
    return;
}

void sub_25697()
{
    sub_25731( "CREATE_CAR_WAVE_THUGS" );
    sub_18256( ref l_U537 );
    sub_8860( ref l_U542, ref l_U537, ref l_U595, -691403429, 0.00000000, ref g_U1212, 0, 0, 25000, 2, 0, 25000, 0 );
    sub_25819( ref l_U537, l_U416, 1 );
    sub_11173( ref l_U537, 1 );
    SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U595._fU0, 1 );
    sub_10923( ref l_U537, "CAR_THUG" );
    sub_14073( ref l_U537 );
    sub_8860( ref l_U605, ref l_U601, ref l_U645, -691403429, 0.00000000, ref g_U1212, 0, 0, 25000, 2, 0, 25000, 0 );
    sub_25819( ref l_U601, l_U416, 1 );
    sub_11173( ref l_U601, 1 );
    SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U645._fU0, 1 );
    sub_10923( ref l_U601, "MIDDLE_WAVE" );
    sub_26204( l_U601[0], "GenCover", "25806C4F_A55C7C4C_Corner1", g_U824, 1 );
    sub_26204( l_U601[1], "GenCover", "25806C4F_D615C04E_Corner2", g_U824, 1 );
    sub_26204( l_U601[2], "GenCover", "25806C4F_D0D8C702_Corner1", g_U824, 1 );
    sub_14073( ref l_U601 );
    return;
}

void sub_25731(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_25819(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_25855( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

void sub_25855(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (sub_3855( (uParam0^) ))
    {
        RESET_PED_TETHERING( (uParam0^) );
        sub_25894( ref uParam1, (uParam0^), uParam2 );
    }
    return;
}

void sub_25894(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_26204(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (sub_3855( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        sub_26238( ref uParam0, uParam4 );
        TASK_COMBAT_MOVE_TO_COVER( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_26238(unknown uParam0, unknown uParam1)
{
    if (sub_3855( (uParam0^) ))
    {
        SET_PED_FLAG_LOCK_TO_COVER( (uParam0^), uParam1 );
    }
    return;
}

void sub_26468(int iParam0, unknown uParam1)
{
    iParam0->_fU4 = uParam1;
    if (DOES_GROUP_EXIST( iParam0->_fU0 ))
    {
        SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
        SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    }
    else
    {
        sub_597( "[GA] Warning - AI Group does not exist when calling P_GROUP_CHANGE_FIRING_DISTRIBUTION" );
    }
    return;
}

void sub_26718()
{
    if (NOT l_U684)
    {
        if ((sub_3855( g_U824 )) AND (sub_3779()))
        {
            if ((sub_26771( sub_3789(), g_U824, 1 )) <= 23.00000000)
            {
                sub_491( "RJM", "Player got close to Passos, start checking for failure", 0 );
                l_U684 = 1;
            }
        }
    }
    else if (sub_26999( l_U395 ))
    {
        l_U685 = 1;
        l_U418 = 1;
    }
    return;
}

void sub_26771(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_26999(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_27017( sub_3789(), uParam0 );
}

int sub_27017(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_27100()
{
    switch (l_U420)
    {
        case 0:
        if (l_U421)
        {
            sub_27179( ref l_U422, 1500 );
            sub_491( "RJM", "P_UPDATE_MAX_VO - eMAX_VO_START_LINE1", 0 );
            l_U420 = 1;
        }
        break;
        case 1:
        if (sub_16291( ref l_U422 ))
        {
            sub_27296( ref l_U431 );
            sub_27378( 0, sub_3789(), "MAX", ref l_U431, 2, 0 );
            sub_27378( 1, sub_3789(), "MAX", ref l_U431, 2, 0 );
            sub_27620( "SCMT_WTHSPSA", ref l_U431, 8, 1 );
            sub_27179( ref l_U422, 30000 );
            sub_491( "RJM", "P_UPDATE_MAX_VO - eMAX_VO_WAIT_FOR_LINE1_END", 0 );
            l_U420 = 2;
        }
        break;
        case 2:
        if (sub_16291( ref l_U422 ))
        {
            sub_491( "RJM", "P_UPDATE_MAX_VO - eMAX_VO_START_LINE2", 0 );
            l_U420 = 3;
        }
        break;
        case 3:
        if (NOT sub_28559())
        {
            if (NOT (sub_26999( l_U374 )))
            {
                if (sub_28647( 3000, 15 ))
                {
                    sub_27296( ref l_U431 );
                    sub_27378( 0, sub_3789(), "MAX", ref l_U431, 2, 0 );
                    sub_27378( 1, sub_3789(), "MAX", ref l_U431, 2, 0 );
                    sub_27620( "SCMT_MLPALA", ref l_U431, 8, 1 );
                    sub_491( "RJM", "P_UPDATE_MAX_VO - eMAX_VO_DONE", 0 );
                    l_U420 = 4;
                }
            }
        }
        break;
        case 4: break;
    }
    return;
}

void sub_27179(unknown uParam0, unknown uParam1)
{
    sub_1591( uParam0, uParam1, 1, 0 );
    sub_12478( uParam0 );
    return;
}

void sub_27296(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_27378(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_27620(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_27644( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_27644(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_27699( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_27699(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_27734( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_28228( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_27734(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_28228(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_28559()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

int sub_28647(unknown uParam0, unknown uParam1)
{
    unknown uVar4;

    if (NOT (sub_17025( ref l_U441 )))
    {
        sub_27179( ref l_U441, uParam0 );
    }
    else if (sub_16291( ref l_U441 ))
    {
        sub_491( "SBA", "F_HAS_ANYONE_NOT_SHOT_AROUND_PLAYER_RECENTLY: Returning TRUE", 0 );
        return 1;
    }
    else if (sub_3779())
    {
        if (HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_3789() ), uParam1, 0, ref uVar4 ))
        {
            sub_491( "SBA", "F_HAS_ANYONE_NOT_SHOT_AROUND_PLAYER_RECENTLY: Shot fired, resetting timer", 0 );
            sub_1757( ref l_U441 );
        }
    };;;
    return 0;
}

void sub_29117(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

int sub_29157(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (sub_3855( uParam0 ))
    {
        if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 ), uParam1, ref iVar4 ))
        {
            if (iVar4 == sub_3789())
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_29239(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (NOT (IS_PED_DEAD( sub_3789() ))))
    {
        sub_27296( ref l_U49 );
        sub_27378( 1, uParam0, "PASSOS", ref l_U49, 2, 0 );
        sub_27378( 0, sub_3789(), "MAX", ref l_U49, 2, 0 );
        sub_27620( "SCMT_LPPSH", ref l_U49, 8, 1 );
    }
    return;
}

void sub_29445(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_27017( sub_3789(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_29557()
{
    int I;

    sub_491( "RJM", "ACTIVATE_CAR_WAVE_AND_LONE_WOLF_CONFRONTATION", 0 );
    sub_29635( l_U537[0] );
    sub_29635( l_U537[2] );
    sub_30161( l_U537[1] );
    sub_30161( l_U537[3] );
    for ( I = 0; I <= (l_U487 - 1); I++ )
    {
        if (sub_3855( l_U487[I] ))
        {
            SET_PED_COMBAT_ATTRIBUTES( l_U487[I], 8192, 1 );
        }
    }
    l_U683 = 1;
    sub_26468( ref l_U595, 1.00000000 );
    return;
}

void sub_29635(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if ((NOT (IS_PED_RAGDOLL( uParam0, 0 ))) AND ((NOT (IS_PED_INJURED( uParam0 ))) AND ((sub_3779()) AND (sub_3855( uParam0 )))))
    {
        sub_29688( uParam0 );
        uVar3 = GET_PED_COMBAT_RANGE_MIN( uParam0 );
        fVar4 = (GET_PED_COMBAT_RANGE_MAX( uParam0 )) / 4;
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 0 );
        SET_PED_FLAG_LOCK_TO_COVER( uParam0, 0 );
        sub_11064( ref uParam0, 2 );
        sub_29842( ref uParam0, uVar3, fVar4 );
        sub_29918( ref uParam0 );
        sub_30014( ref uParam0 );
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        TASK_COMBAT_PED( uParam0, sub_3789() );
    }
    return;
}

void sub_29688(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_29842(unknown uParam0, float fParam1, float fParam2)
{
    if (sub_3855( (uParam0^) ))
    {
        if (fParam1 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam1 );
        }
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam2 );
        }
    }
    return;
}

void sub_29918(unknown uParam0)
{
    if ((sub_3779()) AND (sub_3855( (uParam0^) )))
    {
        sub_29954( uParam0, sub_3789() );
    }
    return;
}

void sub_29954(unknown uParam0, unknown uParam1)
{
    if ((sub_3855( uParam1 )) AND (sub_3855( (uParam0^) )))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_30014(unknown uParam0)
{
    if ((sub_3779()) AND (sub_3855( (uParam0^) )))
    {
        sub_30050( uParam0, sub_3789() );
    }
    return;
}

void sub_30050(unknown uParam0, unknown uParam1)
{
    if ((sub_3855( uParam1 )) AND (sub_3855( (uParam0^) )))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_30161(unknown uParam0)
{
    if ((NOT (IS_PED_RAGDOLL( uParam0, 0 ))) AND ((NOT (IS_PED_INJURED( uParam0 ))) AND ((sub_3855( g_U824 )) AND (sub_3855( uParam0 )))))
    {
        sub_29688( uParam0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 0 );
        SET_PED_FLAG_LOCK_TO_COVER( uParam0, 1 );
        sub_11064( ref uParam0, 0 );
        sub_29954( ref uParam0, g_U824 );
        sub_30050( ref uParam0, g_U824 );
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        TASK_COMBAT_SNAP_TO_COVER_COORDS( uParam0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 ), g_U824 );
    }
    return;
}

void sub_30422()
{
    int I;

    sub_491( "RJM", "ACTIVATE_MIDDLE_WAVE", 0 );
    for ( I = 0; I <= 2; I++ )
    {
        sub_29635( l_U601[I] );
    }
    sub_26468( ref l_U645, 1.00000000 );
    return;
}

void sub_30659(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_31229(unknown uParam0)
{
    int I;

    if ((sub_30659( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_32275(boolean bParam0)
{
    int Result;

    Result = 0;
    switch (l_U321)
    {
        case 1:
        sub_491( "RJM", "PLAY_CUTSCENE_08_02a: CUTSCENE_LOADING", 0 );
        sub_13910( 1, 0, 0, 1 );
        if (NOT bParam0)
        {
            sub_32402();
            sub_20297( l_U288, 1 );
            sub_32431();
        }
        sub_32622();
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U1417._fU0, g_U1417._fU4 );
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U1424._fU0, g_U1424._fU4 );
        l_U321 = 2;
        break;
        case 2:
        CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        l_U321 = 3;
        break;
        case 3:
        START_PANEL_WIPE( 300, 6 );
        if ((IS_SCREEN_FADING_OUT()) || (IS_SCREEN_FADED_OUT()))
        {
            DO_SCREEN_FADE_IN( 500 );
        }
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        l_U321 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[2]._fU16, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[2]._fU20, 1065353216, 0 );
            sub_35120();
            sub_35148();
            sub_24913( 1, 1 );
            CUTSCENE_ENABLE_SKIP( 1 );
            sub_491( "RJM", "PLAY_CUTSCENE_08_02a end", 0 );
            l_U321 = 5;
            Result = 1;
        }
        break;
    }
    return Result;
}

void sub_32402()
{
    return;
}

void sub_32431()
{
    sub_491( "RJM", "CREATE_08_02a_PEDS_AND_OBJECTS - start", 0 );
    sub_2016( ref l_U308, 0, 0, 0, 0.00000000, 1265654828, 26, 6, 0, 0, 0 );
    l_U307 = sub_9251( ref l_U308 );
    SET_PED_NAME_DEBUG( l_U307, "SHITPASSOS" );
    sub_491( "RJM", "CREATE_08_02a_PEDS_AND_OBJECTS - end", 0 );
    return;
}

void sub_32622()
{
    sub_491( "RJM", "REGISTER_PEDS_CUT_08_02a - start", 0 );
    if (sub_3779())
    {
        sub_491( "RJM", "Registering player with 04_01_pt01", 0 );
        sub_32744( ref l_U289, 1, 1 );
        sub_34010( l_U289, 0 );
        sub_34109( 1 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_3789(), 0, 0 ), "W_PI_Clt1911_Aa_H^1", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_3789(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_3789(), g_U971[2]._fU0, g_U971[2]._fU12 );
        ISEQ_REGISTER_ENTITY( 1394393399, "cem_vig01_max", sub_3789(), 0 );
    }
    if (sub_3855( g_U824 ))
    {
        sub_491( "RJM", "Registering piPassos with 08_02a_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U824, "Pass_NY_H", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( g_U824, 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U824, ref g_U1249 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U824, g_U779[2]._fU0, g_U779[2]._fU12 );
        ISEQ_REGISTER_ENTITY( 1394393399, "cem_vig01_pas", g_U824, 0 );
    }
    CUTSCENE_REGISTER_ISEQ( 1394393399 );
    sub_491( "RJM", "REGISTER_PEDS_CUT_08_02a - end", 0 );
    return;
}

void sub_32744(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_32756( iParam0 );
    if ((IS_PED_DEAD( sub_3789() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_3789(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_32935( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_33163( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_3789(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_3789(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_3789(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_3789(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_3789() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_3789(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_3789(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_3789(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_3789(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_3789() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_3789(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_33163( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_3789(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_3789(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_3789(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_32756(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_32935(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_33163(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_34010(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

void sub_34109(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_3789() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_3789(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_32935( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_34214();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_3789(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_34214()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_3789() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_3789(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_32935( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_3789(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_3789(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_3789(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_35120()
{
    sub_9170( l_U307 );
    return;
}

void sub_35148()
{
    sub_35163( g_U1332 );
    return;
}

void sub_35163(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_597( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_35481(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_35493( iParam0 )) == 0)
    {
        sub_35559( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

int sub_35493(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_35559(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_35809()
{
    sub_597( "[GA] P_UNLOAD_ASSETS_FUNERAL start" );
    sub_35163( g_U1334 );
    sub_35163( g_U1362 );
    sub_35163( g_U1330 );
    ISEQ_UNREGISTER_ENTITY( 550058844, "passos" );
    sub_15176( 550058844, 0 );
    ISEQ_UNREGISTER_ENTITY( -1144523979, "passos" );
    sub_15176( -1144523979, 0 );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "max" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed1" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed2" );
    ISEQ_UNREGISTER_ENTITY( 2111514372, "gmed3" );
    sub_18356( "FACE_PASNYB" );
    sub_18426( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act" );
    sub_597( "[GA] P_UNLOAD_ASSETS_FUNERAL end" );
    return;
}

void sub_36167(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        case 1: break;
        case 2: break;
        case 3: break;
        case 4:
        case 5: break;
        case 6: break;
        case 7:
        sub_36304( 1224272620 );
        break;
        case 8: break;
        case 9:
        sub_3121( 434544317, 1 );
        sub_3121( -691403429, 1 );
        break;
        case 10:
        sub_36304( -184942895 );
        break;
    }
    return;
}

void sub_36304(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}


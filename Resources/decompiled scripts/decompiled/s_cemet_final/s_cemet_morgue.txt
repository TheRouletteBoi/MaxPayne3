void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 1;
    l_U38 = 144;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    l_U52 = {0, 0, 0};
    StrCopy( ref l_U55, "DUMMY", 32 );
    l_U63 = 1;
    l_U68 = 0;
    l_U69 = 0;
    l_U70 = 0;
    l_U73 = 0;
    l_U118 = -1;
    l_U119 = {64536, 64536, 64536};
    l_U122 = "PED_DEF";
    l_U164 = 1.00000000;
    l_U176 = 0;
    l_U217 = 0;
    l_U275 = 1;
    l_U276 = 0;
    l_U277 = 1;
    l_U278 = 0;
    l_U563 = 0;
    l_U573 = {g_U779[9]._fU0};
    l_U576 = g_U779[9]._fU12;
    l_U577 = {64.52800000, -68.19200000, 7.82600000};
    l_U580 = 96.93400000;
    l_U583 = {75.30000000, 65456, 4.32000000};
    l_U586 = 210;
    l_U587 = {61.90000000, -102.67900000, 0.98148900};
    l_U590 = 90;
    l_U602 = 6000;
    l_U603 = {67.75000000, -107.75000000, 0.98000000};
    l_U606 = 270.00000000;
    l_U758 = -1;
    l_U845 = {59.57495000, -79.52670000, 8.12000000};
    l_U1783 = {60.53000000, -56.18000000, 9.22000000};
    l_U1786 = {-1.57000000, 0.00000000, 1.57000000};
    l_U1799 = {66.58000000, -116.50000000, 2.25000000};
    l_U1802 = {66.85000000, -116.53000000, 2.25000000};
    l_U1805 = {97.40000000, -80.51100000, 5.28000000};
    l_U1808 = {97.50000000, -81.15000000, 5.28000000};
    l_U1811 = {67.40000000, -99.95000000, 2.01000000};
    l_U1814 = {78.93000000, -111.31000000, 1.94700000};
    l_U1817 = {0.00000000, 0.00000000, -0.50000000};
    l_U1820 = {0.00000000, 0.00000000, 2.50000000};
    l_U1823 = {0.00000000, 0.00000000, -0.50000000};
    l_U1826 = {0.00000000, 0.00000000, 2.50000000};
    l_U2003 = 0;
    l_U2072 = 0;
    l_U2073 = 0;
    sub_886( "SBA", "s_cemet_morgue script started", "***" );
    l_U1951 = 0;
    sub_941();
    sub_4022();
    sub_8165();
    sub_8837( 9 );
    sub_9265( 0 );
    sub_11096();
    l_U275 = 1;
    if (g_U825 == 9)
    {
        sub_886( "SBA", "s_cemet_morgue is starting from dev menu", "***" );
        sub_12441();
        g_U1774 = 1;
        l_U1951 = 1;
        g_U826 = 9;
        sub_13140( ref l_U1966, g_U826, sub_13032(), g_U971[9]._fU0, g_U971[9]._fU12, g_U971[9]._fU16, g_U971[9]._fU20, 0 );
    }
    while (NOT IS_EXITFLAG_SET())
    {
        if (g_U1991[8])
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        else if (g_U826 == 9)
        {
            sub_18375();
        }
        sub_19228();
        if (l_U2070 == 0)
        {
            sub_30136();
        }
        WAIT( 0 );
    }
    sub_25994();
    sub_65701();
    sub_66027( 9 );
    if (sub_20310())
    {
        SET_PED_FORCED_TO_WALK( sub_13032(), 0 );
    }
    sub_886( "SBA", "s_cemet_morgue script ended", "***" );
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_cemet_morgue" );
    SET_EXITFLAG_RESPONSE();
    return;
}

void sub_886(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_941()
{
    sub_886( "SBA", "P_INITIALIZE_SCRIPT_DATA", "***" );
    l_U2071 = 0;
    l_U563 = 0;
    l_U2062 = -1;
    l_U2063 = -1;
    l_U2064 = -1;
    l_U2065 = -1;
    l_U2066 = -1;
    l_U2067 = -1;
    l_U758 = -1;
    l_U2069 = 3;
    l_U2068 = 0;
    l_U757 = 0;
    l_U908 = 0;
    l_U877 = 0;
    l_U2002 = 0;
    l_U1202 = 0;
    l_U1958 = 0;
    l_U1959 = 0;
    l_U1952 = 0;
    l_U1953 = 0;
    l_U953 = 0;
    l_U954 = 0;
    l_U955 = 0;
    l_U581 = 0;
    l_U1954 = 0;
    l_U591 = 0;
    l_U592 = 0;
    l_U607 = 0;
    l_U608 = 0;
    l_U1955 = 0;
    l_U1956 = 0;
    l_U582 = 0;
    l_U1957 = 0;
    l_U1950 = 0;
    l_U1961 = 0;
    l_U1102 = 0;
    l_U1103 = 0;
    l_U1104 = 0;
    l_U1962 = 0;
    l_U1963 = 0;
    l_U1964 = 0;
    l_U1965 = 0;
    l_U1960 = 0;
    l_U2003 = 0;
    l_U2004 = 0;
    l_U2005 = 0;
    sub_1282( ref l_U593, l_U602, 1, 0 );
    l_U1169 = -1;
    sub_1424( ref l_U1105 );
    sub_1535();
    sub_1424( ref l_U1213 );
    l_U1203 = 0;
    sub_3893( "SCMTAUD" );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    return;
}

void sub_1282(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1424(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_1535()
{
    l_U279._fU0 = 0;
    StrCopy( ref l_U279._fU8, "TV_06_16x9_cemet", 32 );
    l_U279._fU40 = sub_1619( -109087371, 67.03983000, -112.09730000, 1.97810000, 0.00000000, 0.00000000, 180.00000000, 0, 0, 0 );
    l_U279._fU912 = 1;
    l_U279._fU44 = {g_U1180};
    l_U279._fU76 = -2026953275;
    l_U279._fU916 = 2400;
    l_U279._fU920 = 0;
    l_U279._fU80 = {66.16300000, -113.61900000, 0.99800000};
    l_U279._fU92 = -45.00000000;
    l_U279._fU128 = {67.02464000, -112.91520000, 1.97979400};
    l_U279._fU140 = {-0.72415800, 0.00000300, 0.45710000};
    l_U279._fU1008 = 1837218119;
    l_U279._fU1012 = {66.16300000, -113.61900000, 0.99800000};
    l_U279._fU1024 = -45.00000000;
    l_U279._fU1064 = 2000;
    l_U279._fU1068 = 3800;
    l_U279._fU96 = "08_CEM_TV_ON_CHANNEL_CAM";
    l_U279._fU100 = "LEVEL_S_CEM_CP_09";
    l_U279._fU104 = "08_CEM_TV_OFF_CAM";
    l_U279._fU108 = {66.02000000, -114.01000000, 3.21000000};
    l_U279._fU120 = -36.43000000;
    l_U279._fU1076 = -9.00000000;
    l_U279._fU924 = 0.65000000;
    l_U279._fU928 = 0.70000000;
    l_U279._fU932 = 1.00000000;
    if (DOES_OBJECT_EXIST( l_U279._fU40 ))
    {
        FREEZE_OBJECT_POSITION( l_U279._fU40, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U279._fU40, ref l_U279._fU44 );
        sub_2510( ref l_U279 );
    }
    return;
}

void sub_1619(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_1729( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_1729(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_1834( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1834(unknown uParam0)
{
    return;
}

void sub_2510(int iParam0)
{
    float fVar3;
    float fVar4;

    fVar3 = 1.10000000;
    fVar4 = 1.50000000;
    fVar3 = 1.00000000;
    fVar4 = 2.00000000;
    if (DOES_OBJECT_EXIST( iParam0->_fU40 ))
    {
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( iParam0->_fU40, 1 );
    }
    sub_2643( iParam0 + 152, 2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), 10.00000000, 10.00000000, 0, 0 );
    sub_3496( iParam0 + 152, 30, "POI_STOPWATCHTV" );
    sub_3659( iParam0 + 152, 0 );
    sub_2643( iParam0 + 496, 2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), fVar3, fVar4, 1, 0 );
    sub_3496( iParam0 + 496, 30, "POI_WATCHTV" );
    sub_3659( iParam0 + 496, 0 );
    sub_1424( iParam0 + 840 );
    sub_1424( iParam0 + 876 );
    sub_1424( iParam0 + 968 );
    sub_1424( iParam0 + 1028 );
    iParam0->_fU936 = 0;
    iParam0->_fU940 = 0;
    iParam0->_fU1080 = 0;
    return;
}

void sub_2643(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_2658( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_3026( iParam0 );
    return;
}

void sub_2658(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_3026(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_3105( iParam0 );
    return;
}

void sub_3105(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_3164( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_3164( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_3164( iParam0, 1 );
            }
            else
            {
                sub_3164( iParam0, 0 );
            };;;
        }
        else
        {
            sub_3164( iParam0, 0 );
        }
    }
    else
    {
        sub_3164( iParam0, 0 );
    }
    return;
}

void sub_3164(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_3496(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_3527( iParam0 );
    return;
}

void sub_3527(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_3659(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_3893(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_3913();
    return;
}

void sub_3913()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_4022()
{
    sub_886( "SBA", "P_SET_STATIC_GAMEPLAY_DATA", "***" );
    MARK_COVERPOINTMP3_SEARCHABLE( "chapel", "corner_position70", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "chapel", "corner_position58", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "847B4949_1F5660D4_Popover1", 1 );
    sub_4234( ref l_U550, 58.03064000, -58.72383000, 9.22866700, 270, 1862331818, 26, 6, 0, 0, 0 );
    sub_4234( ref l_U878[0], 54.37000000, -56.35000000, 9.20000000, 82, 1622707886, 7, 3, 2, 0, 0 );
    sub_4234( ref l_U878[1], 52.41710000, -55.82571000, 9.23229100, 86, 2141917892, 7, 3, 2, 0, 0 );
    sub_4234( ref l_U909[0], 68.24551000, -67.89835000, 6.15920500, 90, -1121642072, 7, 3, 2, 0, 0 );
    sub_4234( ref l_U909[1], 72.63588000, -86.10957000, 4.36866400, 270, -668953082, 7, 3, 2, 0, 0 );
    sub_4234( ref l_U909[2], 85.90213000, -80.59420000, 4.39419000, 100, -124028970, 7, 3, 2, 0, 0 );
    sub_4234( ref l_U974[0], 93.06915000, -98.59776000, 4.49083400, 0, 1154206158, 7, 3, 2, 0, 0 );
    sub_4234( ref l_U974[1], 94.02710000, -99.31252000, 4.39260400, 0, 1711889162, 7, 3, 2, 0, 0 );
    sub_4234( ref l_U974[2], 93.25728000, -100.40440000, 4.49017500, 0, 345702555, 7, 3, 2, 0, 0 );
    sub_4234( ref l_U974[3], 61.31458000, -96.72986000, 2.62957400, 0, -450920877, 7, 3, 2, 0, 0 );
    sub_4234( ref l_U1038[0], 68.23412000, -98.36195000, 0.98242800, 270, 2023925988, 7, 3, 2, 0, 0 );
    sub_4234( ref l_U1038[1], 84.05423000, -94.86452000, 0.98143600, 90.00000000, 854299459, 7, 3, 2, 0, 0 );
    sub_4234( ref l_U1038[2], 71.47224000, -101.67450000, 0.98245400, 180.00000000, 1074238504, 7, 3, 2, 0, 0 );
    sub_4234( ref l_U1038[3], 74.58130000, -100.27250000, 0.98245400, 180.00000000, -124028970, 7, 3, 2, 0, 0 );
    sub_4234( ref l_U1115[0], 77.59000000, -110.08000000, 2.02000000, 275.50000000, 934016064, 8, 4, 2, 3, 0 );
    sub_4234( ref l_U1115[1], 77.32000000, -104.83500000, 2.02000000, 180.00000000, 1861557540, 8, 4, 2, 3, 0 );
    sub_4234( ref l_U1115[2], 64.59000000, -98.80000000, 2.02000000, 250.00000000, -1771592279, 8, 4, 2, 3, 0 );
    sub_5087( ref l_U1222, "TRIG_MORGUE_CHECKPOINT", 78.05000000, -81.35000000, 3.80000000, 7.00000000, 3.50000000, 7.00000000, 0.00000000, 0.00000000, 45.00000000, 1 );
    sub_5087( ref l_U1243, "TRIG_REMOVE_PASSOS", 70.83000000, -74.33000000, 3.80000000, 7.33000000, 7.65000000, 4.00000000, 0.00000000, 0.00000000, 15.00000000, 1 );
    sub_5087( ref l_U1264, "TRIG_GRAVE_DRIVEWAY2", 71.13000000, -70.42000000, 3.80000000, 26.00000000, 15.00000000, 6.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1306, "TRIG_START_WAVE2", 71.42000000, -73.75000000, 3.80000000, 10.00000000, 18.50000000, 5.50000000, 0.00000000, 0.00000000, 35.00000000, 1 );
    sub_5087( ref l_U1327, "TRIG_FREE_CORNER_COVER", 92.56000000, -90.49000000, 3.80000000, 22.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 70.00000000, 1 );
    sub_5087( ref l_U1285, "TRIG_START_STAIRS", 67.75000000, -94.22000000, 0.90000000, 15.00000000, 16.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1348, "TRIG_MORGUE_STAIRS", 61.08000000, -95.90000000, 2.12000000, 3.39000000, 3.00000000, 3.84000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1474, "TRIG_CHAPEL_MORGUE_STAIRS_BOTTOM", 82.50000000, -94.92000000, 1.18000000, 15.00000000, 4.50000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1369, "TRIG_MORGUE_ENTRANCE", 62.04000000, -108.45000000, 0.90000000, 16.50000000, 10.35000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1390, "TRIG_WAITING_ROOM", 68.05000000, -109.35000000, 0.90000000, 4.26000000, 11.44000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1432, "TRIG_ENTER_MAIN_ROOM", 71.59000000, -107.56000000, 0.94000000, 2.50000000, 8.50000000, 2.86000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1453, "TRIG_MRG_MAIN_MIDDLE", 74.42000000, -101.37300000, 0.90000000, 8.64000000, 10.02000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1411, "TRIG_INSIDE_MORGUE", 61.50000000, -104.34000000, 0.95000000, 3.56000000, 2.00000000, 2.66000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1558, "TRIG_MORGUE1", 75.08000000, -105.51800000, 0.90000000, 10.10000000, 16.42000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1579, "TRIG_MORGUE2", 67.04700000, -99.04000000, 0.90000000, 6.00000000, 7.51000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1600, "TRIG_MORGUE_HALL", 79.12000000, -95.02000000, 0.90000000, 18.29000000, 3.83000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1642, "TRIG_MRG_FREEZE_PEDS", 69.89000000, -93.66000000, 3.80000000, 2.50000000, 15.39000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1663, "TRIG_MRG_UNFREEZE_PEDS", 67.35000000, -93.88000000, 3.80000000, 2.50000000, 15.03000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U609, "TRIG_MRG_PASSOS_WARN_GRAVE", 58.03000000, -62.97000000, 3.80000000, 20.62000000, 31.09000000, 8.00000000, 0.00000000, 0.00000000, -18.00000000, 1 );
    sub_5087( ref l_U630, "TRIG_MRG_PASSOS_WARN_PARKING", 81.23000000, -80.31000000, 0.90000000, 42.87000000, 46.89000000, 11.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U651, "TRIG_GRAVE_RIGHT_ZONE", 91.31000000, -66.97500000, 6.25000000, 23.38000000, 21.29600000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1516, "TRIG_MRG_WEST_EXIT", 67.61600000, -107.56000000, 0.90000000, 3.21000000, 7.91000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1495, "TRIG_START_MORGUE_SEARCHERS", 67.61600000, -107.56000000, 0.90000000, 8.50000000, 30.00000000, 3.00000000, 0.00000000, 0.00000000, -55.00000000, 1 );
    sub_5087( ref l_U1537, "TRIG_MRG_EAST_EXIT", 74.59000000, -98.79000000, 0.90000000, 8.39000000, 3.02000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1621, "TRIG_DUMMY", 19.60000000, 68.57000000, 0.00000000, 2.00000000, 2.00000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U693, "TRIG_MRG_PASSOS_WARN_WEST", 61.24000000, -95.80000000, 0.90000000, 4.00000000, 9.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U672, "TRIG_MRG_PASSOS_DEATH_WEST", 64.90540000, -93.71000000, 3.00000000, 4.00000000, 6.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U735, "TRIG_MRG_PASSOS_WARN_EAST", 77.54000000, -94.90000000, 0.90000000, 14.60000000, 3.55000000, 2.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U714, "TRIG_MRG_PASSOS_DEATH_EAST", 86.50000000, -94.90000000, 0.90000000, 5.00000000, 3.55000000, 2.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_5087( ref l_U1684, "TRIG_IMAGEFX_MORG", 74.84700000, -94.73450000, 0.94000000, 10.00000000, 4.00000000, 2.86000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    l_U1705 = {l_U693};
    l_U1726 = {l_U672};
    sub_7560( ref l_U1747, "TETH_FIRST_WAVE", 72.19000000, -73.12000000, 3.80000000, 40.00000000, 20.00000000, 11.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7560( ref l_U1748, "TETH_MORGUE_PARKING", 83.89000000, -90.34900000, 4.00000000, 32.42000000, 22.33000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7560( ref l_U1749, "TETH_PARKING_EXTENSION", 75.18000000, -78.95000000, 3.80000000, 4.45000000, 7.00000000, 3.00000000, 0.00000000, 0.00000000, 47.00000000, 1 );
    sub_7560( ref l_U1750, "TETH_NEAR_STAIRS", 69.80000000, -94.17000000, 2.50000000, 13.60000000, 14.17000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7560( ref l_U1751, "TETH_PASSOS_GARAGE", 62.34000000, -107.13000000, 0.90000000, 5.21000000, 7.47000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7560( ref l_U1752, "TETH_MORGUE_ENTRANCE", 62.65000000, -108.45000000, 0.90000000, 16.15000000, 10.25000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7560( ref l_U1753, "TETH_MORGUE", 73.48000000, -106.56000000, 0.90000000, 11.62000000, 18.39000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7560( ref l_U1754, "TETH_MORGUE_WAITING_AREA", 67.84000000, -107.55000000, 0.90000000, 5.50000000, 5.30000000, 2.98000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

void sub_4234(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_5087(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_7560(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_8165()
{
    sub_886( "SBA", "P_LOAD_ASSETS_MORGUE", "***" );
    sub_1729( g_U1332, 1 );
    sub_1729( -2073192064, 1 );
    sub_1729( -2015623084, 1 );
    sub_1729( -1504197122, 1 );
    sub_1729( 1728917300, 1 );
    sub_1729( 1419741785, 1 );
    sub_1729( -1746005771, 1 );
    sub_1729( -1852489064, 1 );
    sub_1729( g_U1346, 1 );
    sub_1729( -488097608, 1 );
    sub_1729( g_U758, 1 );
    sub_1729( 1887965138, 1 );
    sub_1729( -109087371, 1 );
    sub_8364( -1101879058, 1 );
    sub_8364( -2026953275, 1 );
    sub_8364( 1837218119, 1 );
    sub_8364( 247804313, 0 );
    sub_1729( -1612743506, 1 );
    sub_8364( 529069709, 0 );
    sub_8627( "EXPL_CAM", 0, 0 );
    sub_8627( "FACE_PASNYB", 0, 1 );
    sub_8762( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", 1 );
    return;
}

void sub_8364(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_8627(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_8762(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_8837(unknown uParam0)
{
    sub_8853( -862236369, 1 );
    switch (uParam0)
    {
        case 0:
        case 1:
        sub_8853( 434544317, 1 );
        sub_8853( -691403429, 1 );
        break;
        case 2: break;
        case 3:
        sub_8853( -691403429, 1 );
        sub_8853( 930042831, 1 );
        break;
        case 4:
        case 5:
        sub_8853( 434544317, 1 );
        sub_8853( -691403429, 1 );
        break;
        case 6:
        sub_8853( 434544317, 1 );
        sub_8853( -691403429, 1 );
        break;
        case 7:
        sub_8853( 434544317, 1 );
        sub_8853( -691403429, 1 );
        sub_8853( 1224272620, 1 );
        break;
        case 8:
        sub_8853( 434544317, 1 );
        sub_8853( -691403429, 1 );
        break;
        case 9:
        sub_8853( 434544317, 1 );
        sub_8853( -691403429, 1 );
        break;
        case 10:
        sub_8853( 434544317, 1 );
        sub_8853( -184942895, 1 );
        sub_8853( -691403429, 1 );
        break;
    }
    return;
}

void sub_8853(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_9265(unknown uParam0)
{
    int I;

    sub_886( "SBA", "P_CREATE_DEAD_THUGS", "***" );
    for ( I = 0; I <= 1; I++ )
    {
        l_U905[I] = sub_9334( ref l_U878[I] );
        SET_PED_VISIBLE( l_U905[I], uParam0 );
        if (I == 0)
        {
            sub_10031( l_U905[I], 7 );
        }
        else
        {
            sub_10031( l_U905[I], 3 );
        }
    }
    if (DOES_PED_EXIST( l_U905[0] ))
    {
        SET_PED_COORDS( l_U905[0], 61.37000000, -56.05000000, 9.20000000, 1 );
    }
    if (DOES_PED_EXIST( l_U905[1] ))
    {
        SET_PED_COORDS( l_U905[1], 57.30000000, -54.32000000, 9.22000000, 1 );
    }
    return;
}

void sub_9334(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_1729( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_9813( iParam0->_fU40 );
    sub_9893( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_9813(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_9893(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_10031(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
        sub_1834( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

void sub_11096()
{
    sub_886( "SBA", "P_CREATE_MORGUE_PLACEMENTS", "***" );
    sub_11152();
    sub_11981( ref l_U1789 );
    l_U1789[0] = sub_11725( -4072149, l_U1799, l_U1817, 0, 0, 0, 1119092736 );
    l_U1789[1] = sub_11725( -4072149, l_U1805, l_U1823, 0, 0, 0, 1119092736 );
    l_U1789[2] = sub_11725( -4072149, l_U1811, 0, 0, 0, 0, 0, 0, 1119092736 );
    l_U1789[3] = sub_11725( -4072149, l_U1814, 0, 0, 0, 0, 0, 0, 1119092736 );
    if (DOES_PLACEMENT_EXIST( l_U1789[0] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1789[0], ref g_U1180 );
    }
    if (DOES_PLACEMENT_EXIST( l_U1789[1] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1789[1], "stnmsnsInt" );
    }
    if (DOES_PLACEMENT_EXIST( l_U1789[2] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1789[2], ref g_U1188 );
    }
    if (DOES_PLACEMENT_EXIST( l_U1789[3] ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1789[3], ref g_U1188 );
    }
    return;
}

void sub_11152()
{
    sub_886( "CO", "P_CREATE_S_NYC_GG_A9_02", 0 );
    sub_11262( ref g_U667, g_U758, -834543747, 677146476, 92.78000000, -83.81000000, 4.44000000, 1.50000000, 0.00000000, 1.00000000, "stnmsnslnt" );
    sub_11391( ref g_U667 );
    return;
}

void sub_11262(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_886( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_11391(int iParam0)
{
    sub_886( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_11452( iParam0->_fU12 )) == 1)
        {
            sub_886( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_886( "CO", "has never been collected.", 0 );
        }
        if ((sub_11452( iParam0->_fU12 )) == 0)
        {
            sub_11657( iParam0->_fU0 );
            iParam0->_fU0 = sub_11725( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_886( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_886( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_11452(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_11657(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_11725(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_11981(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_11657( (uParam0^)[I] );
    }
    return;
}

void sub_12441()
{
    sub_886( "SBA", "P_SETUP_SCRIPT: Start", "***" );
    sub_12518( g_U1178, g_U971[9]._fU0, g_U971[9]._fU12 );
    sub_12590( g_U1178, -691403429, 100, 0, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[9]._fU16, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[9]._fU20, 1065353216, 0 );
    sub_886( "SBA", "P_SETUP_SCRIPT: End", "***" );
    return;
}

void sub_12518(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_12590(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_1834( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_13032()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_13054() );
    }
    return 0;
}

void sub_13054()
{
    return GET_PLAYER_ID();
}

void sub_13140(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_886( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_886( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_13392( iParam1 );
        sub_14959( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_15410( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_15410( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_15642( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_15410( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_15642( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_15642( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_15410( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_15642( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_15642( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_15642( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_15410( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_15642( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_15642( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_15642( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_15642( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_17200( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U38, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_886( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_13392(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_13421( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_14202( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

int sub_13421(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_14202(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_14959(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_13421( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_886( "TEH", "Ending context", 0 );
        sub_886( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_15410(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_15642(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_17200(int iParam0)
{
    sub_1834( "CHECKPOINT DATA" );
    sub_17239( iParam0->_fU4 );
    sub_17262( iParam0->_fU16 );
    sub_17262( iParam0->_fU20 );
    sub_17262( iParam0->_fU24 );
    sub_17305( iParam0->_fU28 );
    sub_17305( iParam0->_fU56 );
    sub_17305( iParam0->_fU60 );
    sub_17305( iParam0->_fU64 );
    sub_17305( iParam0->_fU68 );
    sub_17305( iParam0->_fU72 );
    sub_17305( iParam0->_fU76 );
    sub_17305( iParam0->_fU80 );
    sub_17305( iParam0->_fU84 );
    sub_17305( iParam0->_fU88 );
    sub_17305( iParam0->_fU92 );
    sub_17262( iParam0->_fU32 );
    sub_17305( iParam0->_fU36 );
    sub_17305( iParam0->_fU40 );
    sub_17305( iParam0->_fU44 );
    sub_17262( iParam0->_fU136 );
    sub_17510( iParam0->_fU140 );
    sub_17305( iParam0->_fU52 );
    sub_1834( "---nRightHolsterAttachmentEnabled: " );
    sub_17305( iParam0->_fU96 );
    sub_1834( "---nRightHolsterAttachmentToggled: " );
    sub_17305( iParam0->_fU100 );
    sub_1834( "---nLeftHolsterAttachmentEnabled: " );
    sub_17305( iParam0->_fU104 );
    sub_1834( "---nLeftHolsterAttachmentToggled: " );
    sub_17305( iParam0->_fU108 );
    sub_1834( "---nRifleHolsterAttachmentEnabled: " );
    sub_17305( iParam0->_fU112 );
    sub_1834( "---nRifleHolsterAttachmentToggled: " );
    sub_17305( iParam0->_fU116 );
    sub_1834( "---nRightHandAttachmentEnabled: " );
    sub_17305( iParam0->_fU120 );
    sub_1834( "---nRightHandAttachmentToggled: " );
    sub_17305( iParam0->_fU124 );
    sub_1834( "---nLeftHandAttachmentEnabled: " );
    sub_17305( iParam0->_fU128 );
    sub_1834( "---nLeftHandAttachmentToggled: " );
    sub_17305( iParam0->_fU132 );
    sub_17305( l_U38 );
    sub_17305( 144 );
    return;
}

void sub_17239(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_17262(unknown uParam0)
{
    return;
}

void sub_17305(unknown uParam0)
{
    return;
}

void sub_17510(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_18375()
{
    if (l_U277 != l_U275)
    {
        sub_886( "TEH", "playing music:changed CUR FLAG", 0 );
        sub_17305( l_U275 );
        sub_17305( l_U276 );
        l_U277 = l_U275;
    }
    else if (l_U278 != l_U276)
    {
        sub_886( "TEH", "playing music:changed NEW FLAG", 0 );
        sub_17305( l_U275 );
        sub_17305( l_U276 );
        l_U278 = l_U276;
    }
    switch (l_U275)
    {
        case 1:
        sub_886( "BSW", "MC_STARTUP - CEMETERY_SONG_03_1_2_5_6", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_1_2_5_6", "", 0, 5000, 5000, -1082130432, 0 );
        l_U275 = 3;
        break;
        case 2:
        sub_886( "TEH", "playing music: CEMETERY_SONG_03 CEMETERY_SONG_03_1_2_5_6 ", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_1_2_5_6", "", 0, 5000, 5000, -1082130432, 0 );
        l_U275 = 3;
        break;
        case 3:
        if (l_U276 == 3)
        {
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_3_6", "", 0, 6000, 9000, -1082130432, 0 );
            l_U275 = 4;
        }
        break;
        case 4:
        if (l_U276 == 4)
        {
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_1_3_4_6", "", 0, 6000, 12000, -1082130432, 0 );
            l_U275 = 5;
        }
        break;
        case 5:
        if (l_U276 == 5)
        {
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_1", "", 0, 5000, 6000, -1082130432, 0 );
            l_U275 = 6;
        }
        break;
        case 6:
        if (l_U276 == 6)
        {
            AUDIO_MUSIC_SUSPEND( 6000 );
            l_U275 = 7;
        }
        break;
    }
    return;
}

void sub_19228()
{
    if (g_U826 == 9)
    {
        if (l_U2070 == 0)
        {
            if ((IS_PED_DEAD( sub_13032() )) == 1)
            {
                sub_886( "SBA", "P_HANDLE_CHECKPOINTS: player is dead, setting eFailure = STATE_FAIL_WAITING", "***" );
                l_U2070 = 2;
            }
            else if (sub_19387())
            {
                sub_886( "SBA", "HANDLE_CHECKPOINTS - Restart, setting eFailure = STATE_FAIL_WAITING", 0 );
                l_U2070 = 2;
            }
            else if (l_U2071 >= 2)
            {
                if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (IS_PED_DEAD( g_U824 )))
                {
                    sub_886( "SBA", "P_HANDLE_CHECKPOINTS: Passos killed, setting eFailure = STATE_FAIL_DEATH_CAM_PASSOS", "***" );
                    SET_PED_GORE( g_U824, 1 );
                    SET_PED_GORE_FROM_PLAYER( g_U824, 1 );
                    SET_PED_GORE_FROM_NPC( g_U824, 0 );
                    l_U2070 = 1;
                }
                else if (l_U2004)
                {
                    sub_886( "SBA", "P_HANDLE_CHECKPOINTS: Passos abandoned, setting eFailure = STATE_FAIL_DEATH_CAM_PASSOS", "***" );
                    l_U2070 = 1;
                }
            };;;
        }
        sub_20227();
    }
    return;
}

int sub_19387()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U37 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_13032() )))
        {
            SET_PED_FORCED_TO_WALK( sub_13032(), 0 );
            SET_PLAYER_FORCED_AIM( sub_13054(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_13054(), 1 );
            if ((IS_PED_VISIBLE( sub_13032() )) == 0)
            {
                SET_PED_VISIBLE( sub_13032(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_20227()
{
    switch (l_U2070)
    {
        case 0: break;
        case 1:
        if (sub_20310())
        {
            SET_PED_INVINCIBLE( sub_13032(), 1 );
        }
        if (l_U2069 == 3)
        {
            l_U2070 = 2;
            sub_886( "SBA", "Disabling ALLOW_BULLET_CAMERA_TO_GAMEPLAY...", 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            sub_886( "CCB", "ePassosDeathState = PE_MOVING; eFailure - STATE_FAIL_WAITING", 0 );
        }
        else if (sub_20575())
        {
            l_U2070 = 2;
            sub_886( "CCB", "eFailure - STATE_FAIL_WAITING", 0 );
        }
        break;
        case 2:
        if (sub_24507())
        {
            if ((g_U1800[10]._fU40 != 4) AND (g_U1800[10]._fU40 != 0))
            {
                sub_886( "GA", "Shutting down script for Chapel.", 0 );
                g_U1991[9] = 0;
                sub_24631( ref g_U1800[10] );
                SET_EXITFLAG_FOR_SCRIPT( g_U1800[10]._fU32 );
            }
            l_U2070 = 3;
        }
        else if ((sub_24696( 0 )) == 1)
        {
            if ((g_U1800[10]._fU40 != 4) AND (g_U1800[10]._fU40 != 0))
            {
                sub_886( "GA", "Shutting down script for Chapel.", 0 );
                g_U1991[9] = 0;
                sub_24631( ref g_U1800[10] );
                SET_EXITFLAG_FOR_SCRIPT( g_U1800[10]._fU32 );
            }
            l_U2070 = 3;
        }
        break;
        case 3:
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            if (NOT IS_LAST_MAN_STANDING_ACTIVE())
            {
                if (NOT (IS_PED_DEAD( sub_13032() )))
                {
                    sub_886( "CCB", "Deactivating bullettime...", 0 );
                    DEACTIVATE_BULLET_TIME( 1, 0 );
                    END_POSTFX_BLENDER( 3, 0 );
                    l_U2070 = 4;
                    sub_886( "CCB", "eFailure - STATE_FAIL_CLEANUP", 0 );
                }
            }
            else
            {
                sub_886( "CCB", "Waiting for the last man standing...", 0 );
            }
        }
        else
        {
            sub_886( "CCB", "Waiting for bullet death cam...", 0 );
        }
        break;
        case 4:
        if (NOT (IS_PLAYER_DEAD( sub_13054() )))
        {
            if (NOT (IS_PED_DEAD( sub_13032() )))
            {
                SET_PLAYER_CONTROL( sub_13054(), 0, 0 );
            }
        }
        DO_SCREEN_FADE_OUT( 0 );
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        sub_25994();
        l_U2070 = 5;
        sub_886( "CCB", "eFailure - STATE_FAIL_RESTORE", 0 );
        break;
        case 5:
        sub_941();
        sub_4022();
        sub_11096();
        sub_9265( 0 );
        sub_8364( 247804313, 1 );
        sub_8364( -2026953275, 0 );
        sub_8364( 1837218119, 0 );
        sub_8627( "FACE_PASNYB", 0, 1 );
        sub_8762( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", 1 );
        if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
        if (sub_20310())
        {
            SET_PED_VISIBLE( sub_13032(), 1 );
        }
        sub_27254();
        sub_27399( ref g_U1627, 0 );
        sub_27399( ref g_U1634, 0 );
        l_U2004 = 0;
        g_U1774 = 1;
        l_U1951 = 1;
        SET_HELPER_TRACKING_MODE( 1 );
        sub_27645( ref l_U1966, sub_13032() );
        l_U2070 = 6;
        sub_886( "CCB", "eFailure - STATE_FAIL_RESTART", 0 );
        break;
        case 6:
        if ((GET_STABLE_NUM_OF_STREAMING_REQUESTS() == 0) AND (GET_NUMBER_OF_STREAMING_REQUESTS() == 0))
        {
            sub_886( "CCB", "eFailure - STATE_FAIL_IDLE", 0 );
            if (sub_20310())
            {
                SET_PED_INVINCIBLE( sub_13032(), 0 );
            }
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[9]._fU16, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[9]._fU20, 1065353216, 0 );
            l_U275 = 2;
            l_U276 = 2;
            l_U2070 = 0;
            sub_886( "CCB", "eCheckpoint - STATE_CHECKPOINT_INIT", 0 );
        }
        else
        {
            sub_886( "CCB", "Waiting for stream requests...", 0 );
        }
        break;
    }
    return;
}

int sub_20310()
{
    if (sub_20325( sub_13032() ))
    {
        return 1;
    }
    return 0;
}

int sub_20325(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

int sub_20575()
{
    int iVar2;
    boolean bVar3;
    int iVar4;

    switch (l_U2068)
    {
        case 0:
        sub_886( "CCB", "ePassosDeathCamState - STATE_DEATHCAM_INIT", 0 );
        sub_886( "CCB", "Disabling ALLOW_BULLET_CAMERA_TO_GAMEPLAY...", 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
        sub_20774( 1, 0, 0, 1 );
        sub_20937( ref l_U1159 );
        sub_20937( ref l_U905 );
        sub_20937( ref l_U949 );
        sub_20937( ref l_U1027 );
        sub_20937( ref l_U1091 );
        sub_20937( ref l_U1155 );
        if (sub_20325( g_U824 ))
        {
            sub_21148( ref g_U824 );
        }
        if (l_U2069 == 0)
        {
            sub_21497( ref l_U2017, 57.77817000, -55.96317000, 10.88589000, -15.05016000, 3.00000700, -160.28450000, 45.00000000, 1000 );
            iVar2 = -1121642072;
            l_U2074 = {61.07000000, -60.97000000, 9.12000000};
            l_U2077 = 45;
            iVar4 = 50;
            bVar3 = false;
        }
        else if (l_U2069 == 1)
        {
            sub_21497( ref l_U2017, 71.45673000, -65.50500000, 7.79826300, -14.01735000, -0.00000900, -179.35200000, 45.00000000, 1000 );
            iVar2 = sub_21818();
            l_U2074 = {71.11000000, -76.03000000, 4.76000000};
            l_U2077 = 0;
            iVar4 = 50;
            bVar3 = false;
        }
        else if (l_U2069 == 2)
        {
            if (l_U1960)
            {
                if (sub_20310())
                {
                    sub_22350( sub_13032(), 60.49000000, -108.68000000, 0.98000000, 0 );
                }
                sub_21497( ref l_U2017, 65.63830000, -105.41590000, 2.33375900, -1.46216000, 2.68336900, 66.97011000, 45.00000000, 1000 );
                sub_22350( g_U824, 62.01132000, -104.22690000, 0.98242800, 276 );
                sub_22496( ref g_U824, g_U1180 );
                iVar2 = sub_22538();
                l_U2074 = {72.69849000, -104.91250000, 0.98745000};
                l_U2077 = 90;
                iVar4 = 0;
                bVar3 = true;
            }
            else
            {
                sub_21497( ref l_U2017, 61.11683000, -100.68800000, 4.98304100, -60.24496000, -0.00001700, -150.49860000, 45.00000000, 1000 );
                iVar2 = sub_22538();
                l_U2074 = {61.31253000, -107.10400000, 0.98245400};
                l_U2077 = 0;
                iVar4 = 50;
                bVar3 = false;
            }
        };;;
        sub_4234( ref l_U2048, l_U2074, l_U2077, iVar2, 7, 3, 2, 0, 0 );
        sub_22991( l_U2061 );
        l_U2061 = sub_9334( ref l_U2048 );
        if (sub_20325( l_U2061 ))
        {
            sub_23098( ref l_U2061 );
            sub_12590( l_U2061, -862236369, 25000, 0, 0 );
            REGISTER_TARGET( l_U2061, g_U824 );
            SET_PED_DEFAULT_AIM_AT_PED( l_U2061, g_U824 );
            TASK_AIM_GUN_AT_PED( l_U2061, g_U824, -1, 0 );
        }
        sub_1282( ref l_U2008, iVar4, 1, 0 );
        sub_23252( ref l_U2008 );
        if (bVar3)
        {
            l_U2068 = 2;
            sub_886( "CCB", "ePassosDeathCamState - STATE_DEATHCAM_ONE_TICK_FOR_TELEPORT", 0 );
        }
        else
        {
            l_U2068 = 3;
            sub_886( "CCB", "ePassosDeathCamState - STATE_DEATHCAM_START", 0 );
        }
        break;
        case 2: if (sub_20310())
        {
            SET_ROOM_FOR_PED_BY_NAME( sub_13032(), ref g_U1180 );
            SET_PED_VISIBLE( sub_13032(), 0 );
            l_U2068 = 3;
            sub_886( "CCB", "ePassosDeathCamState - STATE_DEATHCAM_START", 0 );
        }
        case 3:
        if (sub_23636( ref l_U2008 ))
        {
            sub_23806( ref l_U2017 );
            SHAKE_CAM( l_U2017._fU0, sub_23897(), 0.25000000 );
            sub_1282( ref l_U2008, 500, 1, 0 );
            sub_23252( ref l_U2008 );
            l_U2068 = 1;
            sub_886( "CCB", "ePassosDeathCamState - STATE_DEATHCAM_WAITING", 0 );
        }
        break;
        case 1:
        if (sub_23636( ref l_U2008 ))
        {
            if ((sub_20325( g_U824 )) AND (sub_20325( l_U2061 )))
            {
                SET_PED_SHOOTS_AT_COORD( l_U2061, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U824, 65488, 0, 0, 0 ) );
                SHAKE_CAM( l_U2017._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
                SET_PED_DEFAULT_AIM_AT_COORD( l_U2061, -10.06000000, 108.19000000, 5.24000000 );
                sub_24184( g_U824 );
                sub_1282( ref l_U2008, 50, 1, 0 );
                sub_23252( ref l_U2008 );
                l_U2068 = 5;
                sub_886( "CCB", "ePassosDeathCamState - STATE_DEATHCAM_PLAYING", 0 );
            }
        }
        break;
        case 5:
        if (sub_23636( ref l_U2008 ))
        {
            l_U2068 = 6;
            sub_886( "CCB", "ePassosDeathCamState - STATE_DEATHCAM_FINISHED", 0 );
        }
        break;
        case 6:
        return 1;
        break;
    }
    return 0;
}

void sub_20774(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_13032() )))
        {
            SET_PLAYER_CONTROL( sub_13054(), 0, uParam2 );
            SET_PED_DUCKING( sub_13032(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_13032() );
            }
            SET_PED_INVINCIBLE( sub_13032(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_20937(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_20968( (uParam0^)[I] );
    }
    return;
}

void sub_20968(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_21148(unknown uParam0)
{
    sub_886( "RJM", "P_SETUP_PASSOS_FOR_FAILURE_SCENE", "***" );
    if (sub_20325( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 0 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 1 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 0 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 0 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 1 );
    }
    return;
}

void sub_21497(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_1282( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U763, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

int sub_21818()
{
    int I;

    for ( I = 0; I <= (l_U949 - 1); I++ )
    {
        if (sub_20325( l_U949[I] ))
        {
            sub_886( "RJM", "GET_SCENEPED_FOR_OUTSIDE_PASSOS_DEATH - Found a guy from the Wave 1 group", 0 );
            return l_U909[I]._fU20;
        }
    }
    for ( I = 0; I <= (l_U1027 - 1); I++ )
    {
        if (sub_20325( l_U1027[I] ))
        {
            sub_886( "RJM", "GET_SCENEPED_FOR_OUTSIDE_PASSOS_DEATH - Found a guy from the Wave 2 group", 0 );
            return l_U974[I]._fU20;
        }
    }
    sub_886( "RJM", "GET_SCENEPED_FOR_OUTSIDE_PASSOS_DEATH - Couldn't find anyone alive...that's weird, use a default", 0 );
    return -668953082;
}

void sub_22350(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_22496(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    if (sub_20325( (uParam0^) ))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), ref uParam1 );
    }
    return;
}

int sub_22538()
{
    int I;

    for ( I = 0; I <= (l_U1091 - 1); I++ )
    {
        if (sub_20325( l_U1091[I] ))
        {
            sub_886( "RJM", "GET_SCENEPED_FOR_MORGUE_PASSOS_DEATH - Found a guy from the Wave 1 group", 0 );
            return l_U1038[I]._fU20;
        }
    }
    sub_886( "RJM", "GET_SCENEPED_FOR_MORGUE_PASSOS_DEATH - Couldn't find anyone alive...that's weird, use a default", 0 );
    return -1121642072;
}

void sub_22991(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_23098(unknown uParam0)
{
    if (sub_20325( (uParam0^) ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_COMBAT_MOVEMENT( (uParam0^), 0 );
    }
    return;
}

void sub_23252(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_23636(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_23806(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_23252( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

string sub_23897()
{
    return "WOBBLY_SHAKE";
}

void sub_24184(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_24507()
{
    return g_U648;
}

void sub_24631(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_24696(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT (sub_24757( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_13032() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1282( ref l_U43, l_U42, 1, 1 );
            sub_23252( ref l_U43 );
        }
        if (sub_23636( ref l_U43 ))
        {
            sub_886( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_13032() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_13054() )))
            {
                SET_PLAYER_CONTROL( sub_13054(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
        sub_886( "NS", "Player will QUIT", 0 );
        sub_25216();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_886( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_25216();
        return 1;
        break;
    }
    return 0;
}

int sub_24757(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_25216()
{
    sub_886( "NS", "P_PostFailRetryCleanup", 0 );
    sub_1424( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_13054() )))
    {
        SET_PLAYER_CONTROL( sub_13054(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

void sub_25994()
{
    int I;

    sub_886( "SBA", "P_CLEANUP_ALL", "***" );
    if (sub_20310())
    {
        sub_886( "SBA", "P_CLEANUP_ALL: Reset ForceAim", "***" );
        SET_PLAYER_FORCED_AIM( sub_13054(), 0, 0 );
    }
    ISEQ_UNREGISTER_ENTITY( -1101879058, "max" );
    ISEQ_UNREGISTER_ENTITY( -1101879058, "passos" );
    sub_26155( -1101879058, 0 );
    ISEQ_UNREGISTER_ENTITY( 247804313, "passos" );
    sub_26155( 247804313, 0 );
    ISEQ_UNREGISTER_ENTITY( 99074045, "passos" );
    sub_26155( 99074045, 0 );
    ISEQ_UNREGISTER_ENTITY( 250466825, "passos" );
    sub_26155( 250466825, 0 );
    ISEQ_UNREGISTER_ENTITY( 557479586, "passos" );
    sub_26155( 557479586, 0 );
    ISEQ_UNREGISTER_ENTITY( 1837218119, "Max" );
    sub_26155( 1837218119, 0 );
    ISEQ_UNREGISTER_ENTITY( -2026953275, "Max" );
    sub_26155( -2026953275, 0 );
    ISEQ_UNREGISTER_ENTITY( 529069709, "Cadaver1" );
    ISEQ_UNREGISTER_ENTITY( 529069709, "Cadaver2" );
    ISEQ_UNREGISTER_ENTITY( 529069709, "Cadaver3" );
    sub_26155( 529069709, 0 );
    SET_HELPER_TRACKING_MODE( 0 );
    sub_26633( l_U756 );
    sub_26633( g_U1781 );
    sub_26633( g_U1782 );
    sub_22991( g_U824 );
    sub_22991( l_U2061 );
    sub_26717( ref l_U905 );
    sub_26717( ref l_U949 );
    sub_26717( ref l_U1027 );
    sub_26717( ref l_U1091 );
    sub_26717( ref l_U1155 );
    sub_26815( ref l_U279 );
    for ( I = 0; I <= 14; I++ )
    {
        sub_26633( l_U1829[I]._fU4 );
    }
    sub_11657( l_U1782 );
    sub_11981( ref l_U1789 );
    sub_11657( g_U667._fU0 );
    sub_26995( "DAM_DEAD" );
    return;
}

void sub_26155(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_26633(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_26717(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_22991( (uParam0^)[I] );
    }
    return;
}

void sub_26815(int iParam0)
{
    sub_886( "rw", "P_CLEAN_MOVIE", 0 );
    sub_26633( iParam0->_fU40 );
    sub_26155( iParam0->_fU76, 1 );
    if (IS_SCRIPT_MOVIE_PLAYING( 2 ))
    {
        STOP_MOVIE( 2 );
    }
    RELEASE_MOVIE( 2 );
    return;
}

void sub_26995(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_27254()
{
    sub_886( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", "###" );
    if ((IS_PED_DEAD( sub_13032() )) == 0)
    {
        SET_PED_RELATIONSHIP( sub_13032(), 0, 1 );
        SET_PED_RELATIONSHIP( sub_13032(), 0, 2 );
        SET_PED_RELATIONSHIP( sub_13032(), 0, 6 );
        SET_PED_RELATIONSHIP( sub_13032(), 0, 7 );
    }
    return;
}

void sub_27399(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_27411( iParam0 )) == 0)
    {
        sub_27477( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_27411(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_27477(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_27645(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_886( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U37)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_27831( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_28170( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_28462( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_28809( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_28462( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_28809( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_28462( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_28809( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_12590( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_28809( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_12590( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_28809( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U37 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_29273( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_13392( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_13032(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U37)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U37 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_886( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_27831(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_13421( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

void sub_28170(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_28462(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_1834( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_28809(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

int sub_29273(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_30136()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    sub_30146();
    sub_31284( ref l_U279 );
    sub_37548();
    if (NOT l_U877)
    {
        if ((IS_PED_DEAD( l_U949[0] )) AND (l_U2071 > 2))
        {
            sub_886( "SBA", "Setting tomb POI available", "***" );
            sub_38948( ref l_U759, 1 );
            l_U877 = 1;
        }
        else if ((sub_39018( ref l_U759 )) == 1)
        {
            sub_37682( "EXPLORE_ITEM", ref l_U858 );
        }
    }
    sub_39259();
    switch (l_U2071)
    {
        case 0:
        if ((NOT l_U757) AND (g_U1776))
        {
            sub_40613();
            g_U1776 = 0;
            l_U757 = 1;
        }
        if ((NOT l_U908) AND (g_U1775))
        {
            sub_41013();
            g_U1775 = 0;
            l_U908 = 1;
        }
        if (g_U1774)
        {
            l_U2071 = 1;
        }
        break;
        case 1:
        if (sub_41230())
        {
            if (l_U1951)
            {
                sub_41298();
            }
            if (NOT (IS_PED_DEAD( g_U824 )))
            {
                if (NOT (HAS_PED_GOT_WEAPON( g_U824, -691403429 )))
                {
                    sub_886( "SBA", " Passos needs a gun, giving him one.", "***" );
                    sub_12590( g_U824, -691403429, 25000, 0, 0 );
                }
                sub_42560( ref g_U824, 1 );
                sub_42608( ref g_U824, 0 );
            }
            sub_42651();
            l_U2062 = 0;
            sub_43740();
            sub_886( "SBA", "P_HANDLE_EVENTS: advancing to eMS_Start", "***" );
            l_U2071 = 2;
        }
        break;
        case 2:
        sub_43740();
        sub_44529();
        sub_45178();
        l_U1962 = 1;
        sub_1282( ref l_U1204, 600, 1, 0 );
        sub_886( "SBA", "P_HANDLE_EVENTS: advancing to eMS_GraveArea", "***" );
        l_U2071 = 3;
        break;
        case 3:
        sub_43740();
        sub_45455();
        if (sub_23636( ref l_U1755 ))
        {
            if (sub_20310())
            {
                sub_886( "SBA", "P_HANDLE_EVENTS: tmrForceAim Done", "***" );
                SET_PLAYER_FORCED_AIM( sub_13054(), 0, 0 );
                RESET_FORCED_AIM_INTENTION_DIRECTION();
                sub_8364( 99074045, 0 );
            }
        }
        if (NOT l_U1955)
        {
            if ((sub_30183( l_U1264 )) || (sub_23636( ref l_U956 )))
            {
                sub_46615( l_U949[0], 61.62237000, -65.25700000, 8.28275700, 2.50000000, 1101004800, -1082130432, 3 );
                sub_46681( ref l_U949[0] );
                sub_22991( l_U949[2] );
                l_U1955 = 1;
            }
        }
        if (sub_46795())
        {
            l_U2069 = 0;
            l_U2004 = 1;
        }
        if (sub_47864( ref l_U1306, 0 ))
        {
            sub_47965();
            l_U1956 = 0;
            sub_886( "SBA", "P_HANDLE_EVENTS: advancing to eMS_ParkingArea", "***" );
            l_U2071 = 4;
        }
        break;
        case 4:
        sub_43740();
        sub_45455();
        if (NOT (IS_PED_DEAD( l_U949[0] )))
        {
            if (sub_46795())
            {
                l_U2069 = 0;
                l_U2004 = 1;
            }
        }
        else if (sub_50551())
        {
            l_U2069 = 1;
            l_U2004 = 1;
        }
        if (NOT l_U953)
        {
            if (sub_20325( l_U1027[1] ))
            {
                if (IS_PED_USING_MP3_COVER_TASK( l_U1027[1] ))
                {
                    sub_886( "SBA", "P_HANDLE_EVENTS: Shed guy is in cover", "***" );
                    sub_37607( ref l_U965, 6000 );
                    l_U953 = 1;
                }
            }
        }
        if (NOT l_U954)
        {
            if (((sub_51092( sub_13032(), l_U1027[1], 0 )) < 4.00000000) || (sub_23636( ref l_U965 )))
            {
                sub_886( "SBA", "P_HANDLE_EVENTS: Shed guy can leave cover", "***" );
                sub_1424( ref l_U965 );
                sub_43385( ref l_U1027[1], 0 );
                SET_PED_COMBAT_ATTRIBUTES( l_U1027[1], 8192, 1 );
                l_U954 = 1;
            }
        }
        if (NOT l_U955)
        {
            if (((IS_PED_DEAD( l_U1027[1] )) AND (IS_PED_DEAD( l_U1027[0] ))) || (sub_30183( l_U1327 )))
            {
                if (sub_20325( l_U1027[2] ))
                {
                    sub_886( "SBA", "P_HANDLE_EVENTS: Corner cover guy can leave cover", "***" );
                    sub_43385( ref l_U1027[2], 0 );
                    SET_PED_COMBAT_ATTRIBUTES( l_U1027[2], 8192, 1 );
                    l_U955 = 1;
                }
            }
        }
        sub_51527();
        l_U1170 = (sub_51669( ref l_U1027 )) + (sub_51669( ref l_U949 ));
        if (l_U1170 == 0)
        {
            l_U276 = 3;
            if ((sub_20310()) AND (NOT l_U1954))
            {
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_13032() )};
                    if ((NOT (IS_SPHERE_VISIBLE( l_U583, 1.50000000, 0 ))) AND (uVar2._fU4 < -81.00000000))
                    {
                        sub_886( "SBA", "P_HANDLE_EVENTS: Outside waves are dead - starting to watson Passos", "***" );
                        l_U2062 = -1;
                        if (sub_45512())
                        {
                            PED_FINISH_ACTION_INTENTION( g_U824, 56 );
                        }
                        ISEQ_UNREGISTER_ENTITY( 247804313, "passos" );
                        sub_26155( 247804313, 1 );
                        l_U2063 = 0;
                        sub_8364( 250466825, 0 );
                        l_U1954 = 1;
                    }
                }
            }
        }
        else if (l_U1170 == 1)
        {
            if (NOT l_U1958)
            {
                sub_52697( ref l_U949 );
                sub_52697( ref l_U1027 );
                l_U1958 = 1;
            }
        }
        if (sub_47864( ref l_U1348, 0 ))
        {
            sub_52855();
            sub_53083( ref g_U1613, 1, 1, 1065353216 );
            sub_53083( ref g_U1620, 0, 1, 1065353216 );
            sub_53250( ref g_U1613, 1 );
            sub_53250( ref g_U1620, 1 );
            sub_53319();
            sub_53886();
            sub_55075();
            if (sub_20325( l_U1027[3] ))
            {
                if (IS_PED_PROCESSING_FROZEN( l_U1027[3] ))
                {
                    sub_886( "SBA", "Stairs enemy never activated - cleaning him up.", "***" );
                    sub_22991( l_U1027[3] );
                }
            }
            l_U1963 = 1;
        }
        if (sub_47864( ref l_U1411, 0 ))
        {
            l_U275 = 4;
            l_U276 = 4;
            if (NOT l_U1954)
            {
                sub_8364( 250466825, 0 );
            }
            sub_44529();
            sub_886( "SBA", "P_HANDLE_EVENTS:  Going to eMS_Morgue", "***" );
            l_U2071 = 5;
        }
        break;
        case 5:
        sub_55757( ref l_U1091, -1054867456 );
        sub_55757( ref l_U949, -1054867456 );
        sub_55757( ref l_U1027, -1054867456 );
        sub_43740();
        sub_45455();
        l_U1170 = (sub_55981( ref l_U949 )) + (sub_55981( ref l_U1027 ));
        if ((NOT l_U1954) AND (l_U1170 == 0))
        {
            l_U276 = 3;
            if (sub_20310())
            {
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_13032() )};
                    if ((NOT (IS_SPHERE_VISIBLE( l_U583, 1.50000000, 0 ))) AND (uVar2._fU4 < -81.00000000))
                    {
                        sub_886( "SBA", "P_HANDLE_EVENTS: Outside waves are dead - starting to watson Passos", "***" );
                        l_U2062 = -1;
                        if (sub_45512())
                        {
                            PED_FINISH_ACTION_INTENTION( g_U824, 56 );
                        }
                        ISEQ_UNREGISTER_ENTITY( 247804313, "passos" );
                        sub_26155( 247804313, 1 );
                        l_U2063 = 0;
                        l_U1954 = 1;
                    }
                }
            }
        }
        else if (l_U1170 == 1)
        {
            if (NOT l_U1958)
            {
                sub_52697( ref l_U949 );
                sub_52697( ref l_U1027 );
                l_U1958 = 1;
            }
        }
        if ((l_U1957) AND (NOT l_U1961))
        {
            if (sub_56430())
            {
                sub_56845();
                sub_57001();
                l_U1961 = 1;
            }
        }
        if (l_U1961)
        {
            sub_886( "SBA", "P_HANDLE_EVENTS: advancing to eMS_Morgue_Fight", "***" );
            l_U2071 = 6;
            sub_58757( ref l_U949 );
            sub_58757( ref l_U1027 );
            sub_8364( 557479586, 0 );
        }
        break;
        case 6:
        sub_55757( ref l_U1091, -1054867456 );
        sub_55757( ref l_U949, -1054867456 );
        sub_55757( ref l_U1027, -1054867456 );
        sub_43740();
        sub_45455();
        sub_58919();
        if (NOT l_U1102)
        {
            if ((sub_30183( l_U1432 )) || (sub_59372()))
            {
                sub_59532();
                l_U1102 = 1;
            }
        }
        if (NOT l_U1103)
        {
            if (sub_30183( l_U1432 ))
            {
                sub_59808();
                l_U1103 = 1;
            }
        }
        if (NOT l_U1104)
        {
            if ((IS_PED_IN_COMBAT( l_U1091[3] )) || (IS_PED_IN_COMBAT( l_U1091[2] )))
            {
                l_U1104 = 1;
            }
        }
        else
        {
            sub_60112();
        }
        l_U1170 = (sub_51669( ref l_U949 )) + (sub_51669( ref l_U1027 ));
        if ((NOT l_U591) AND (NOT l_U1954))
        {
            if ((NOT (sub_61143( ref l_U1027, l_U630 ))) AND (NOT (sub_61143( ref l_U949, l_U630 ))))
            {
                if (sub_20310())
                {
                    if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                    {
                        uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_13032() )};
                        if ((NOT (IS_SPHERE_VISIBLE( l_U583, 1.50000000, 0 ))) AND (uVar2._fU4 < -81.00000000))
                        {
                            sub_886( "SBA", "P_HANDLE_EVENTS: Survivors are inside - starting to watson Passos", "***" );
                            l_U2062 = -1;
                            if (sub_45512())
                            {
                                PED_FINISH_ACTION_INTENTION( g_U824, 56 );
                            }
                            ISEQ_UNREGISTER_ENTITY( 247804313, "passos" );
                            sub_26155( 247804313, 1 );
                            l_U2063 = 0;
                            l_U1954 = 1;
                        }
                    }
                }
            }
        }
        if (NOT l_U591)
        {
            if (l_U1170 == 0)
            {
                if ((sub_30183( l_U1558 )) || (sub_30183( l_U1369 )))
                {
                    if (NOT l_U592)
                    {
                        if (NOT (IS_SPHERE_VISIBLE( l_U587, 1.50000000, 0 )))
                        {
                            sub_886( "SBA", "P_HANDLE_EVENTS: tmrDelayVig20C timer is ACTIVE", "***" );
                            sub_23252( ref l_U593 );
                            l_U592 = 1;
                        }
                    }
                    else if (IS_SPHERE_VISIBLE( l_U587, 1.50000000, 0 ))
                    {
                        sub_886( "SBA", "P_HANDLE_EVENTS: tmrDelayVig20C timer has been RESET", "***" );
                        sub_1424( ref l_U593 );
                        l_U592 = 0;
                    }
                    if (sub_23636( ref l_U593 ))
                    {
                        sub_886( "SBA", "P_HANDLE_EVENTS: tmrDelayVig20C timer is DONE", "***" );
                        sub_61847();
                        sub_8364( 557479586, 0 );
                        l_U591 = 1;
                    }
                }
            }
        }
        l_U1171 = l_U1170 + (sub_55981( ref l_U1091 ));
        sub_62041( l_U1171 );
        if (l_U591)
        {
            if (sub_62475( l_U1705, l_U1726, 1 ))
            {
                l_U2069 = 2;
                l_U2004 = 1;
            }
        }
        else if (sub_62475( l_U735, l_U714, 1 ))
        {
            l_U2069 = 2;
            l_U2004 = 1;
        }
        if (NOT l_U1959)
        {
            if (l_U1171 == 1)
            {
                sub_52697( ref l_U1091 );
                sub_52697( ref l_U949 );
                sub_52697( ref l_U1027 );
                l_U1959 = 1;
                sub_886( "SBA", "P_HANDLE_EVENTS: assigning death cam", "***" );
            }
        }
        if (l_U1171 == 0)
        {
            if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
            {
                l_U276 = 5;
                sub_18375();
                sub_63671( ref l_U1789, ref l_U1794 );
                g_U1991[9] = 1;
                sub_886( "SBA", "P_HANDLE_EVENTS: advancing to eMS_Done", "***" );
                l_U2071 = 7;
            }
        }
        break;
        case 7:
        if (NOT l_U1965)
        {
            sub_63943();
        }
        sub_64273();
        if (NOT l_U607)
        {
            if ((NOT (IS_SPHERE_VISIBLE( 58.50234000, -107.91580000, 1.98242800, 1.50000000, 0 ))) AND (NOT (IS_SPHERE_VISIBLE( l_U603, 2.75000000, 0 ))))
            {
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    if (NOT (sub_30183( l_U1369 )))
                    {
                        sub_886( "SBA", "P_HANDLE_EVENTS: Kill VIG20C, init VIG20D", "***" );
                        l_U2063 = -1;
                        ISEQ_UNREGISTER_ENTITY( 99074045, "passos" );
                        sub_26155( 99074045, 1 );
                        l_U2064 = -1;
                        ISEQ_UNREGISTER_ENTITY( 250466825, "passos" );
                        sub_26155( 250466825, 1 );
                        l_U2065 = 0;
                        l_U607 = 1;
                    }
                }
            }
        }
        if (sub_65473( ref l_U1684, sub_13032(), 0 ))
        {
            PLAY_IMAGEFX( "GAMMA_ZOOM_1", 4, 1 );
        }
        if (sub_47864( ref l_U1474, 0 ))
        {
            SET_PED_FORCED_TO_WALK( sub_13032(), 1 );
            sub_37607( ref l_U1773, 1250 );
        }
        if (sub_23636( ref l_U1773 ))
        {
            g_U1991[8] = 1;
            l_U276 = 6;
            sub_18375();
        }
        break;
    }
    return;
}

void sub_30146()
{
    if (l_U1963)
    {
        if (NOT l_U1964)
        {
            if (sub_30183( l_U1642 ))
            {
                sub_30269( ref l_U949, 1 );
                sub_30269( ref l_U1027, 1 );
                sub_30269( ref l_U1091, 1 );
                sub_30789( ref l_U1155, 1 );
                if (sub_30201( g_U824, l_U1558 ))
                {
                    sub_886( "SBA", "P_HANDLE_FREEZING_MORUGE_PEDS: freezing Passos too", "***" );
                    sub_30823( ref g_U824, 1 );
                }
                l_U1964 = 1;
            }
        }
        else if (sub_30183( l_U1663 ))
        {
            sub_30269( ref l_U949, 0 );
            sub_30269( ref l_U1027, 0 );
            sub_30269( ref l_U1091, 0 );
            sub_30789( ref l_U1155, 0 );
            sub_31066( ref l_U1155, g_U1188 );
            if (sub_30201( g_U824, l_U1558 ))
            {
                sub_886( "SBA", "P_HANDLE_FREEZING_MORUGE_PEDS: unfreezing Passos too", "***" );
                sub_30823( ref g_U824, 0 );
                sub_22496( ref g_U824, g_U1188 );
            }
            l_U1964 = 0;
        }
    }
    return;
}

void sub_30183(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_30201( sub_13032(), uParam0 );
}

int sub_30201(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_30269(unknown uParam0, boolean bParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        IS_PED_DEAD( (uParam0^)[I] );
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if ((IS_PED_IN_GAMEPLAY_HELPER_BOX( (uParam0^)[I], ref l_U1600._fU0 )) || ((IS_PED_IN_GAMEPLAY_HELPER_BOX( (uParam0^)[I], ref l_U1579._fU0 )) || ((IS_PED_IN_GAMEPLAY_HELPER_BOX( (uParam0^)[I], ref l_U1558._fU0 )) || (IS_PED_IN_GAMEPLAY_HELPER_BOX( (uParam0^)[I], ref l_U1369._fU0 )))))
            {
                sub_886( "SBA", "P_FREEZE_MORGUE_PED_ARRAY", "***" );
                sub_17510( bParam1 );
                FREEZE_PED_POSITION( (uParam0^)[I], bParam1 );
                if (sub_20325( (uParam0^)[I] ))
                {
                    SET_PED_FREEZE_PROCESSING( (uParam0^)[I], bParam1 );
                }
                if (NOT bParam1)
                {
                    sub_30533( (uParam0^)[I] );
                }
            }
        }
    }
    return;
}

void sub_30533(unknown uParam0)
{
    unknown uVar3;

    IS_PED_DEAD( uParam0 );
    if (DOES_PED_EXIST( uParam0 ))
    {
        if (IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref l_U1369._fU0 ))
        {
            sub_886( "SBA", "P_RESET_MORGUE_PED_ROOM: tbMorgueEntrance", "***" );
            SET_ROOM_FOR_PED_BY_NAME( uParam0, ref g_U1180 );
        }
        else
        {
            sub_886( "SBA", "P_RESET_MORGUE_PED_ROOM: txtRoomChapel", "***" );
            SET_ROOM_FOR_PED_BY_NAME( uParam0, ref g_U1188 );
        }
    }
    return;
}

void sub_30789(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_30823( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_30823(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        FREEZE_PED_POSITION( (uParam0^), uParam1 );
    }
    return;
}

void sub_31066(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (sub_20325( (uParam0^)[I] ))
        {
            sub_22496( ref (uParam0^)[I], uParam1 );
        }
    }
    return;
}

void sub_31284(int iParam0)
{
    if (DOES_OBJECT_EXIST( iParam0->_fU40 ))
    {
        if ((GET_OBJECT_HEALTH( iParam0->_fU40 )) < 1000.00000000)
        {
            if (iParam0->_fU4)
            {
                sub_26633( iParam0->_fU40 );
            }
            if ((ref iParam0->_fU496->_fU0) == 1)
            {
                sub_31383( iParam0 + 496, 0 );
            }
        }
    }
    switch (iParam0->_fU940)
    {
        case 0:
        if (DOES_OBJECT_EXIST( iParam0->_fU40 ))
        {
            if (((GET_OBJECT_HEALTH( iParam0->_fU40 )) == 1000.00000000) AND ((sub_32202() == 0) AND (iParam0->_fU0 == 0)))
            {
                if ((IS_SCRIPT_MOVIE_PLAYING( 2 )) == 0)
                {
                    if (sub_32321( iParam0 + 496 ))
                    {
                        if (NOT (IS_PED_DEAD( sub_13032() )))
                        {
                            SET_PLAYER_CONTROL( sub_13054(), 0, 0 );
                            REENABLE_PLAYER_INPUT( 30 );
                        }
                        iParam0->_fU944 = GET_WEAPON_FROM_HAND( sub_13032(), 0, 0 );
                        if (iParam0->_fU1072)
                        {
                            if (sub_34173( iParam0->_fU944 ))
                            {
                                sub_34459( iParam0 );
                            }
                        }
                        else
                        {
                            sub_34620();
                        }
                        if (NOT (IS_PED_DEAD( sub_13032() )))
                        {
                            if (IS_PED_DUAL_WIELDING( sub_13032() ))
                            {
                                sub_1282( ref l_U257, 1200, 1, 0 );
                            }
                            else
                            {
                                sub_1282( ref l_U257, 500, 1, 0 );
                            }
                        }
                        sub_8364( iParam0->_fU76, 0 );
                        sub_23252( ref l_U257 );
                        iParam0->_fU940 = 1;
                    }
                }
            }
        }
        break;
        case 1:
        if ((sub_23636( ref l_U257 )) AND (sub_34791( iParam0 )))
        {
            if ((sub_34881( iParam0 )) AND (NOT (IS_PED_DEAD( sub_13032() ))))
            {
                ISEQ_REGISTER_ENTITY( iParam0->_fU76, "Max", sub_13032(), 0 );
            }
            if (sub_34881( iParam0 ))
            {
                ISEQ_START( iParam0->_fU76 );
            }
            sub_31383( iParam0 + 496, 0 );
            iParam0->_fU940 = 2;
        }
        else
        {
            sub_886( "rw", "waiting for weapon to holster", 0 );
        }
        break;
        case 2:
        if (sub_34881( iParam0 ))
        {
            CAMERA_PLAY_ANIMATED( iParam0->_fU100, iParam0->_fU96, 0, iParam0->_fU108, iParam0->_fU120, 0, 0 );
            sub_22350( sub_13032(), iParam0->_fU80, iParam0->_fU92 );
        }
        PRELOAD_MOVIE( 2, iParam0 + 8, 0, sub_35118() );
        if (sub_34881( iParam0 ))
        {
            sub_1282( iParam0 + 840, iParam0->_fU916, 1, 0 );
        }
        else
        {
            sub_1282( iParam0 + 840, 0, 1, 0 );
        }
        sub_23252( iParam0 + 840 );
        iParam0->_fU940 = 3;
        break;
        case 3:
        if (sub_23636( iParam0 + 840 ))
        {
            sub_1424( iParam0 + 840 );
            if (sub_34881( iParam0 ))
            {
                ISEQ_UNREGISTER_ENTITY( iParam0->_fU76, "Max" );
                ISEQ_TERMINATE( iParam0->_fU76 );
            }
            CAMERA_ANIMATED_STOP( 0, 0 );
            iParam0->_fU124 = CREATE_CAM_WITH_PARAMS( "DEFAULT_SCRIPTED_CAMERA", iParam0->_fU128, iParam0->_fU140, 45, 0 );
            if (iParam0->_fU924 != 0)
            {
                SET_CAM_FAR_DOF( iParam0->_fU124, iParam0->_fU924, iParam0->_fU928 );
                SET_CAM_DOF_STRENGTH( iParam0->_fU124, iParam0->_fU932 );
            }
            SET_CAM_ACTIVE( iParam0->_fU124, 1 );
            RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
            if (NOT (IS_PED_DEAD( sub_13032() )))
            {
                SET_PED_VISIBLE( sub_13032(), 0 );
                DISPLAY_HUD( 0 );
            }
            if ((iParam0->_fU912 == 0) AND ((DOES_OBJECT_EXIST( iParam0->_fU40 )) == 1))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU40, iParam0 + 44 );
                FREEZE_OBJECT_POSITION( iParam0->_fU40, 1 );
                SET_OBJECT_COLLISION( iParam0->_fU40, 0 );
            }
            sub_31383( iParam0 + 496, 0 );
            sub_31383( iParam0 + 152, 1 );
            if ((IS_SCRIPT_MOVIE_PLAYING( 2 )) == 0)
            {
                SET_MOVIE_LOOP( 2, 0 );
                PLAY_MOVIE( 2, 0 );
                AUDIO_ENABLE_TV_MOVIE( 1 );
            }
            if ((NOT (sub_24757( iParam0 + 876 ))) AND ((sub_34881( iParam0 )) AND (iParam0->_fU920 > 0)))
            {
                sub_1282( iParam0 + 876, iParam0->_fU920, 1, 0 );
                sub_23252( iParam0 + 876 );
            }
            STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
            iParam0->_fU940 = 4;
        }
        break;
        case 4:
        if (sub_23636( iParam0 + 876 ))
        {
            sub_8364( iParam0->_fU76, 0 );
            if (NOT (IS_PED_DEAD( sub_13032() )))
            {
                ISEQ_REGISTER_ENTITY( iParam0->_fU76, "Max", sub_13032(), 0 );
                SET_PED_VISIBLE( sub_13032(), 1 );
            }
            sub_22350( sub_13032(), iParam0->_fU80, iParam0->_fU92 );
            if (sub_34881( iParam0 ))
            {
                SET_CAM_ACTIVE( iParam0->_fU124, 0 );
                CAMERA_PLAY_ANIMATED( iParam0->_fU100, iParam0->_fU96, 0, iParam0->_fU108, iParam0->_fU120, 0, 0 );
                ISEQ_START( iParam0->_fU76 );
            }
            CLEAR_PED_PRIMARY_LOOKAT( sub_13032() );
            SET_COORD_PRIMARY_LOOKAT( sub_13032(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ) );
            sub_1424( iParam0 + 840 );
            sub_1282( iParam0 + 840, iParam0->_fU916, 1, 0 );
            sub_23252( iParam0 + 840 );
            sub_31383( iParam0 + 496, 0 );
            sub_31383( iParam0 + 152, 0 );
        }
        if (sub_23636( iParam0 + 840 ))
        {
            sub_1424( iParam0 + 840 );
            if (sub_34881( iParam0 ))
            {
                ISEQ_UNREGISTER_ENTITY( iParam0->_fU76, "Max" );
                ISEQ_TERMINATE( iParam0->_fU76 );
            }
            if (sub_34881( iParam0 ))
            {
                if (IS_ANIMATED_CAMERA_PLAYING())
                {
                    CAMERA_ANIMATED_STOP( 0, 0 );
                }
            }
            if ((DOES_CAM_EXIST( iParam0->_fU124 )) == 0)
            {
                iParam0->_fU124 = CREATE_CAM_WITH_PARAMS( "DEFAULT_SCRIPTED_CAMERA", iParam0->_fU128, iParam0->_fU140, 45, 0 );
                if (iParam0->_fU924 != 0)
                {
                    SET_CAM_FAR_DOF( iParam0->_fU124, iParam0->_fU924, iParam0->_fU928 );
                    SET_CAM_DOF_STRENGTH( iParam0->_fU124, iParam0->_fU932 );
                }
            }
            SET_CAM_ACTIVE( iParam0->_fU124, 1 );
            if (NOT (IS_PED_DEAD( sub_13032() )))
            {
                SET_PLAYER_CONTROL( sub_13054(), 0, 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( sub_13032(), 1 );
                REENABLE_PLAYER_INPUT( 30 );
                SET_PED_VISIBLE( sub_13032(), 0 );
                DISPLAY_HUD( 0 );
            }
            RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
            if ((iParam0->_fU912 == 0) AND ((DOES_OBJECT_EXIST( iParam0->_fU40 )) == 1))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU40, iParam0 + 44 );
                FREEZE_OBJECT_POSITION( iParam0->_fU40, 1 );
                SET_OBJECT_COLLISION( iParam0->_fU40, 0 );
            }
            sub_31383( iParam0 + 152, 1 );
        }
        if ((sub_32202()) || (((sub_36497( iParam0 )) AND ((ref iParam0->_fU152->_fU0) == 1)) || (sub_32321( iParam0 + 152 ))))
        {
            sub_22350( sub_13032(), iParam0->_fU1012, iParam0->_fU1024 );
            sub_31383( iParam0 + 152, 0 );
            if (sub_34881( iParam0 ))
            {
                sub_1282( iParam0 + 1028, iParam0->_fU1064, 1, 0 );
            }
            else
            {
                sub_1282( iParam0 + 1028, iParam0->_fU1068, 1, 0 );
            }
            sub_23252( iParam0 + 1028 );
            if (sub_34881( iParam0 ))
            {
                sub_8364( iParam0->_fU1008, 0 );
                ISEQ_REGISTER_ENTITY( iParam0->_fU1008, "Max", sub_13032(), 0 );
                ISEQ_START( iParam0->_fU1008 );
            }
            iParam0->_fU940 = 5;
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_13032() )))
        {
            SET_PED_VISIBLE( sub_13032(), 1 );
        }
        if (sub_34881( iParam0 ))
        {
            CAMERA_PLAY_ANIMATED( iParam0->_fU100, iParam0->_fU104, 0, iParam0->_fU108, iParam0->_fU120, 0, 0 );
            iParam0->_fU1080 = 1;
        }
        SET_CAM_ACTIVE( iParam0->_fU124, 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        iParam0->_fU940 = 6;
        break;
        case 6:
        if (sub_23636( iParam0 + 1028 ))
        {
            if (sub_34881( iParam0 ))
            {
                ISEQ_UNREGISTER_ENTITY( iParam0->_fU1008, "Max" );
                ISEQ_TERMINATE( iParam0->_fU1008 );
            }
            iParam0->_fU0 = 1;
            DISPLAY_HUD( 1 );
            DESTROY_CAM( iParam0->_fU124 );
            STOP_MOVIE( 2 );
            AUDIO_ENABLE_TV_MOVIE( 0 );
            RELEASE_MOVIE( 2 );
            if (iParam0->_fU912 == 0)
            {
                sub_26633( iParam0->_fU40 );
            }
            sub_1282( ref l_U266, 750, 1, 0 );
            sub_23252( ref l_U266 );
            iParam0->_fU940 = 7;
        }
        break;
        case 7:
        if (sub_23636( ref l_U266 ))
        {
            if (iParam0->_fU1072 == 0)
            {
                sub_34459( iParam0 );
            }
            iParam0->_fU940 = 8;
        }
        break;
        case 8:
        if (sub_37153( iParam0 ))
        {
            DESTROY_CAM( iParam0->_fU124 );
            if (sub_34881( iParam0 ))
            {
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU1076, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
            }
            if (NOT (IS_PED_DEAD( sub_13032() )))
            {
                CLEAR_PED_PRIMARY_LOOKAT( sub_13032() );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( sub_13032(), 0 );
            }
            iParam0->_fU940 = 0;
        }
        else
        {
            sub_886( "rw", " waiting to reholster weapon ", 0 );
        }
        break;
        default: break;
    }
    if ((iParam0->_fU1080) AND ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( iParam0->_fU100, iParam0->_fU104 )) - sub_37420())) AND (IS_ANIMATED_CAMERA_PLAYING())))
    {
        iParam0->_fU1080 = 0;
        sub_37465();
    }
    return;
}

void sub_31383(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_3164( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_3164( iParam0, 0 );
        sub_31454( iParam0, 0 );
        if ((IS_PED_DEAD( sub_13032() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_13032() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_13032(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_31454(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_31605( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_31605(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_31666( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_31666( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_31666(int iParam0)
{
    if (((IS_PED_DEAD( sub_13032() )) == 0) AND ((IS_PLAYER_DEAD( sub_13054() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_13032() )) == 1) || (((IS_PED_GETTING_UP( sub_13032() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_13032() )) == 1) || (((IS_PED_IN_COVER( sub_13032() )) == 1) || (((IS_PED_DUCKING( sub_13032() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_13032() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

int sub_32202()
{
    float fVar2;

    fVar2 = 50.00000000;
    fVar2 = 14.00000000;
    if (IS_PED_IN_SPHERE_AREA_OF_ANY_ENEMY_PEDS( sub_13032(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_13032() ), fVar2, 0 ))
    {
        return 1;
    }
    return 0;
}

int sub_32321(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_13032() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_13032() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_30201( sub_13032(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_30201( sub_13032(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_31605( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_31666( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_33203() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_31383( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_3164( iParam0, 0 );
                            sub_31454( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_3164( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_13032() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_13032(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_3164( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_31454( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_13032() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_13032(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_13032() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_13032(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_13032() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_13032(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_3164( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_31454( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_13032() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_13032() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_13032() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_13032(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_31454( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_33203()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

int sub_34173(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_34459(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (NOT (IS_PED_DEAD( sub_13032() )))
    {
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_13032(), 0 ) ))
        {
            iParam0->_fU944 = GET_WEAPON_FROM_HOLSTER( sub_13032(), 0 );
        }
        else if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_13032(), 1 ) ))
        {
            iParam0->_fU944 = GET_WEAPON_FROM_HOLSTER( sub_13032(), 1 );
        }
        SELECT_WEAPON_TO_HAND( sub_13032(), iParam0->_fU944, 0, iVar3 );
    }
    return;
}

void sub_34620()
{
    if (NOT (IS_PED_DEAD( sub_13032() )))
    {
        SELECT_WEAPON_TO_HAND( sub_13032(), 0, 0, 0 );
        SELECT_WEAPON_TO_HAND( sub_13032(), 0, 1, 0 );
    }
    return;
}

int sub_34791(int iParam0)
{
    if ((iParam0->_fU1072 == 1) || ((GET_WEAPON_FROM_HAND( sub_13032(), 0, 0 )) != iParam0->_fU944))
    {
        return 1;
    }
    return 0;
}

int sub_34881(unknown uParam0)
{
    return 1;
    return 0;
}

int sub_35118()
{
    return 1;
    return 0;
}

int sub_36497(int iParam0)
{
    if (sub_34881( iParam0 ))
    {
        if ((GET_SCRIPT_MOVIE_FRAMES_REMAINING( 2 )) < ((iParam0->_fU1068 / 1000) * 30.00000000))
        {
            return 1;
        }
    }
    else if ((IS_PAUSE_MENU_ACTIVE() == 0) AND ((IS_SCRIPT_MOVIE_PLAYING( 2 )) == 0))
    {
        return 1;
    }
    return 0;
}

int sub_37153(int iParam0)
{
    if ((iParam0->_fU1072) || ((GET_WEAPON_FROM_HAND( sub_13032(), 0, 0 )) == iParam0->_fU944))
    {
        return 1;
    }
    return 0;
}

int sub_37420()
{
    return 1500;
}

void sub_37465()
{
    int iVar2;

    iVar2 = 1500;
    iVar2 = 1500;
    CAMERA_FREEZE_FRAME( 1, iVar2, 1500, 0 );
    if (NOT (IS_PED_DEAD( sub_13032() )))
    {
        SET_PLAYER_CONTROL( sub_13054(), 1, 0 );
    }
    return;
}

void sub_37548()
{
    if (NOT l_U1203)
    {
        if (NOT (sub_24757( ref l_U1213 )))
        {
            if (l_U279._fU940 == 8)
            {
                sub_37607( ref l_U1213, 500 );
            }
        }
        else if (sub_23636( ref l_U1213 ))
        {
            sub_37682( "SCMT_HBKNSHTN", ref l_U1192 );
            l_U1203 = 1;
        }
    }
    return;
}

void sub_37607(unknown uParam0, unknown uParam1)
{
    sub_1282( uParam0, uParam1, 1, 0 );
    sub_23252( uParam0 );
    return;
}

void sub_37682(unknown uParam0, unknown uParam1)
{
    sub_886( "SBA", "P_SPEECH_PLAY_MAX_MONOLOGUE", "***" );
    if (sub_20310())
    {
        sub_37751( uParam1 );
        sub_37831( 0, sub_13032(), "MAX", uParam1, 2, 0 );
        sub_37831( 1, sub_13032(), "MAX", uParam1, 2, 0 );
        sub_38056( uParam0, uParam1, 8, 1 );
    }
    return;
}

void sub_37751(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_37831(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_38056(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_38080( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_38080(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_38135( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_38135(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_38170( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_38664( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_38170(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_38664(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_38948(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_31605( iParam0 );
    return;
}

int sub_39018(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_39030( iParam0 )) == 0)))
    {
        if ((sub_33203() == 1) AND (((IS_PED_RELOADING( sub_13032() )) == 0) AND (((IS_PED_GETTING_UP( sub_13032() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_13032() )) == 0) AND (((IS_PED_IN_COVER( sub_13032() )) == 0) AND (((IS_PED_DUCKING( sub_13032() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_39030(int iParam0)
{
    return iParam0->_fU56;
}

void sub_39259()
{
    if (sub_32321( ref l_U759 ))
    {
        l_U758 = 0;
    }
    if (sub_39289())
    {
        sub_31383( ref l_U759, 1 );
    }
    return;
}

void sub_39289()
{
    int Result;

    Result = 0;
    switch (l_U758)
    {
        case 0:
        sub_886( "SBA", "HANDLE_NEWS_CLIPPINGS_CAM: eVG_TombStone = ASS_SETUP", 0 );
        sub_20774( 1, 0, 0, 1 );
        sub_39423( 0 );
        sub_1424( ref l_U868 );
        l_U758 = 3;
        break;
        case 3:
        sub_886( "SBA", "HANDLE_NEWS_CLIPPINGS_CAM: eNewsClippings = ASS_WAITING_TO_PLAY", 0 );
        CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_WAL_25_F", 1, 59.43000000, -77.57000000, 8.29000000, 270, 0, 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "scem_VinTomb" )))
        {
            sub_39423( 0 );
            sub_37682( "SCMT_EXTMVCG", ref l_U848 );
            FOUND_EXPLORATION_ITEM( "scem_VinTomb" );
        }
        else
        {
            sub_37607( ref l_U868, 4000 );
        }
        if (sub_20310())
        {
            SET_PED_VISIBLE( sub_13032(), 0 );
        }
        l_U758 = 4;
        break;
        case 4:
        if (((NOT (sub_39828( l_U848 ))) AND (NOT l_U868._fU20)) || (sub_23636( ref l_U868 )))
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
            if (sub_20310())
            {
                SET_PED_VISIBLE( sub_13032(), 1 );
            }
            sub_886( "SBA", "HANDLE_NEWS_CLIPPINGS_CAM: Cam cut done, going to eVG_TombStone = ASS_FINISHED", 0 );
            l_U758 = 5;
        }
        break;
        case 5:
        sub_40130( 1, 1 );
        Result = 1;
        sub_886( "SBA", "HANDLE_NEWS_CLIPPINGS_CAM: going to eVG_TombStone = ASS_INACTIVE", 0 );
        l_U758 = -1;
        break;
    }
    return Result;
}

void sub_39423(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

int sub_39828(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_39841( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_39841(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_40130(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_13032() )))
    {
        SET_PLAYER_CONTROL( sub_13054(), 1, 0 );
        SET_PED_INVINCIBLE( sub_13032(), 0 );
        if (bParam0)
        {
            sub_40211();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_40211()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_13032() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_13032(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_13032(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_13032(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_13032(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_40613()
{
    sub_886( "SBA", "P_MAKE_DISTURBED_GRAVE", "***" );
    sub_26633( g_U1780 );
    sub_40680( -161147555 );
    sub_26633( g_U1781 );
    g_U1781 = sub_1619( -2073192064, 58.18300000, -57.48900000, 9.34000000, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U1781 ))
    {
        FREEZE_OBJECT_POSITION( g_U1781, 1 );
    }
    sub_26633( g_U1782 );
    g_U1782 = sub_1619( -2015623084, 58.18300000, -57.48900000, 9.34000000, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U1782 ))
    {
        FREEZE_OBJECT_POSITION( g_U1782, 1 );
    }
    return;
}

void sub_40680(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_1834( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_41013()
{
    sub_886( "SBA", "P_SETUP_GRAVE_SITE", 0 );
    if (DOES_PED_EXIST( l_U905[0] ))
    {
        SET_PED_VISIBLE( l_U905[0], 1 );
    }
    if (DOES_PED_EXIST( l_U905[1] ))
    {
        SET_PED_VISIBLE( l_U905[1], 1 );
    }
    sub_26633( l_U756 );
    l_U756 = sub_1619( 1887965138, 59.60000000, -56.14244000, 9.27500000, -90.00000000, 180.00000000, -20.00000000, 0, 0, 0 );
    return;
}

void sub_41230()
{
    int Result;
    int iVar3;

    Result = 0;
    switch (l_U563)
    {
        case 0:
        sub_20774( 1, 0, 0, 1 );
        if (l_U1951)
        {
            sub_41298();
        }
        if (sub_20310())
        {
            SET_PLAYER_FORCED_AIM( sub_13054(), 1, 0 );
            SET_FORCED_AIM_INTENTION_DIRECTION( (vector( 64.88000000, -69.47000000, 8.13000000)) - (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_13032() ))) );
        }
        sub_37607( ref l_U1755, 3000 );
        g_U1778 = 1;
        if (NOT (ISEQ_QUERY_STATE( -1101879058, 3 )))
        {
            sub_8364( -1101879058, 1 );
            sub_22350( sub_13032(), g_U971[9]._fU0, g_U971[9]._fU12 );
            ISEQ_REGISTER_ENTITY( -1101879058, "max", sub_13032(), 0 );
            sub_22350( g_U824, g_U779[9]._fU0, g_U779[9]._fU12 );
            ISEQ_REGISTER_ENTITY( -1101879058, "passos", g_U824, 0 );
            ISEQ_START( -1101879058 );
        }
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_08", "B_OUT_08_04B_CEM_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[9]._fU16, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[9]._fU20, 1065353216, 0 );
        if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || (IS_SCREEN_FADED_OUT()))
        {
            sub_41013();
            sub_40613();
            sub_886( "SBA", "UPDATE_PASSOS_VIG20: fading in...", "***" );
            DO_SCREEN_FADE_IN( 500 );
        }
        if (g_U826 != 9)
        {
            g_U826 = 9;
            sub_13140( ref l_U1966, g_U826, sub_13032(), g_U971[9]._fU0, g_U971[9]._fU12, g_U971[9]._fU16, g_U971[9]._fU20, 1 );
        }
        l_U563 = 2;
        break;
        case 2:
        if ((CAMERA_ANIMATED_CURRENT_TIME() + 1) >= (CAMERA_ANIMATED_LENGTH( "LEVEL_S_CEM_CP_08", "B_OUT_08_04B_CEM_CAM" )))
        {
            iVar3 = 1000;
            CAMERA_FREEZE_FRAME( 1, iVar3, 0, 0 );
            SET_HELPER_TRACKING_MODE( 0 );
            sub_40130( 1, 1 );
            l_U563 = 4;
        }
        break;
        case 4:
        Result = 1;
        break;
    }
    return Result;
}

void sub_41298()
{
    sub_886( "SBA", "P_CREATE_GD_BLENDOUT_PASSOS", "***" );
    sub_22991( g_U824 );
    g_U824 = sub_9334( ref l_U550 );
    sub_41383( ref g_U824 );
    if (sub_20325( g_U824 ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U824, 1 );
        CLEAR_PED_TASKS_IMMEDIATELY( g_U824 );
    }
    return;
}

void sub_41383(unknown uParam0)
{
    sub_886( "SBA", "P_SETUP_PASSOS_GENERAL_ATTRIBUTES", "***" );
    if (sub_20325( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 0 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 1 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 1 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 0 );
        SET_PED_CONSUMING_AMMO( (uParam0^), 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^), 1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^), 1 );
    }
    return;
}

void sub_42560(unknown uParam0, unknown uParam1)
{
    if (sub_20325( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

void sub_42608(unknown uParam0, unknown uParam1)
{
    if (sub_20325( (uParam0^) ))
    {
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam1 );
    }
    return;
}

void sub_42651()
{
    int I;

    sub_886( "SBA", "P_CREATE_OUTSIDE_THUGS_WAVE1", "***" );
    for ( I = 0; I <= 2; I++ )
    {
        sub_42755( ref l_U909[I], ref l_U949[I], -862236369, ref g_U1212, 0, 25000, 2, 0, 25000 );
        if (I == 0)
        {
            if (sub_20325( l_U949[I] ))
            {
                REMOVE_ALL_PED_WEAPONS( l_U949[I] );
                sub_12590( l_U949[I], 434544317, 25000, 0, 0 );
                sub_28462( l_U949[I], -862236369, 1, 25000, 0 );
                sub_43106( ref l_U949[I], 3 );
                SET_PED_COMBAT_ATTRIBUTES( l_U949[I], 16, 0 );
                TASK_STAND_STILL( l_U949[I], -1 );
                sub_37607( ref l_U956, 5000 );
                sub_43210( ref l_U1747, l_U949[I], 1 );
            }
        }
        else if (I == 1)
        {
            if (sub_20310())
            {
                sub_43351( l_U949[I], "Gravedig", "Corner_Position51", sub_13032(), 0 );
                SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U949[I], 0 );
                sub_43210( ref l_U1748, l_U949[I], 1 );
                sub_43210( ref l_U1749, l_U949[I], 1 );
            }
        }
        else
        {
            sub_42608( ref l_U949[I], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U949[I], 1 );
            SET_PED_CAN_PLAY_LOCO_FLAVOR_STARTS( l_U949[I], 0 );
            SET_PED_COMBAT_ATTRIBUTES( l_U949[I], 16, 0 );
            SET_PED_CAN_SLOW_DOWN_WHEN_TURNING( l_U949[I], 0 );
            sub_20968( l_U949[I] );
        }
    }
    sub_43632( ref l_U949, "WAVE1-" );
    return;
}

void sub_42755(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, int iParam7, unknown uParam8)
{
    unknown uVar11;

    sub_22991( (uParam1^) );
    (uParam1^) = sub_9334( uParam0 );
    if (sub_20325( (uParam1^) ))
    {
        uVar11 = sub_12590( (uParam1^), uParam2, uParam5, 0, 1 );
        if (iParam7 != 0)
        {
            sub_28462( (uParam1^), iParam7, 0, uParam8, 0 );
        }
        SET_PED_AI_TEMPLATE( (uParam1^), uParam3 );
        SET_PED_ALERTNESS( (uParam1^), uParam6 );
        switch (uParam4)
        {
            case 0: break;
            case 1:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            break;
            case 2:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            break;
            case 3:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            break;
        }
    }
    return;
}

void sub_43106(unknown uParam0, unknown uParam1)
{
    if (sub_20325( (uParam0^) ))
    {
        SET_PED_ALERTNESS( (uParam0^), uParam1 );
    }
    return;
}

void sub_43210(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_43351(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (sub_20325( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        sub_43385( ref uParam0, uParam4 );
        TASK_COMBAT_SNAP_TO_COVER( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_43385(unknown uParam0, unknown uParam1)
{
    if (sub_20325( (uParam0^) ))
    {
        SET_PED_FLAG_LOCK_TO_COVER( (uParam0^), uParam1 );
    }
    return;
}

void sub_43632(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_43740()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    switch (l_U2062)
    {
        case -1: break;
        case 0:
        sub_8364( 247804313, 1 );
        if (sub_20325( g_U824 ))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U824, 1 );
        }
        if ((ISEQ_QUERY_STATE( 247804313, 3 )) == 0)
        {
            sub_886( "SBA", "UPDATE_PASSOS_VIG20: VIG20 is not running yet - start it", "***" );
            sub_22350( g_U824, l_U573, l_U576 );
            ISEQ_REGISTER_ENTITY( 247804313, "passos", g_U824, 0 );
            ISEQ_START( 247804313 );
        }
        sub_886( "SBA", "UPDATE_PASSOS_VIG20 - Setup done: Going to State eCIS_PLAYING", 0 );
        l_U2062 = 2;
        case 2:
        if (sub_44085())
        {
            sub_44195( g_U824 );
            sub_886( "SBA", "UPDATE_PASSOS_VIG20 - Max Shot near Passos", 0 );
            PED_SET_ACTION_INTENTION( g_U824, 58, 1500, 0, 0, 0 );
        }
        if (NOT l_U581)
        {
            if (sub_20325( g_U824 ))
            {
                if (IS_PED_DEAD( l_U949[0] ))
                {
                    sub_886( "SBA", "UPDATE_PASSOS_VIG20 - Passos can look", 0 );
                    PED_SET_ACTION_INTENTION( g_U824, 56, -1, 0, 0, 0 );
                    l_U581 = 1;
                    sub_44529();
                    l_U1952 = 1;
                }
            }
        }
        if ((sub_20310()) AND ((sub_20325( g_U824 )) AND (l_U1952)))
        {
            uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_13032() )};
            if (uVar2._fU4 < -81.00000000)
            {
                if ((NOT (IS_SPHERE_VISIBLE( l_U577, 1.00000000, 0 ))) AND (NOT (IS_PED_ON_SCREEN( g_U824, 0 ))))
                {
                    sub_886( "SBA", "UPDATE_PASSOS_VIG20 - Teleport Passos", 0 );
                    sub_22350( g_U824, l_U577, l_U580 );
                    sub_886( "SBA", "UPDATE_PASSOS_VIG20 - Going to eCIS_WAITING_TO_PLAY", 0 );
                    l_U2062 = 1;
                }
            }
        }
        break;
        case 1:
        if (sub_20325( g_U824 ))
        {
            SET_PED_SYNC_POINT( g_U824, l_U577, l_U580 );
            PED_SET_ACTION_INTENTION( g_U824, 47, 1000, 0, 0, 0 );
            sub_886( "SBA", "UPDATE_PASSOS_VIG20 - Going to eCIS_CHECKS", 0 );
            l_U2062 = 3;
        }
        break;
        case 3:
        if (sub_44085())
        {
            sub_44195( g_U824 );
            sub_886( "SBA", "UPDATE_PASSOS_VIG20 - Max Shot near Passos", 0 );
            PED_SET_ACTION_INTENTION( g_U824, 58, 1500, 0, 0, 0 );
        }
        break;
    }
    return;
}

int sub_44085()
{
    int iVar2;

    if (((IS_PED_DEAD( g_U824 )) == 0) AND ((DOES_PED_EXIST( g_U824 )) == 1))
    {
        if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U824 ), 4.00000000, ref iVar2 ))
        {
            if (iVar2 == sub_13032())
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_44195(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (NOT (IS_PED_DEAD( sub_13032() ))))
    {
        sub_37751( ref l_U247 );
        sub_37831( 1, uParam0, "PASSOS", ref l_U247, 2, 0 );
        sub_37831( 0, sub_13032(), "MAX", ref l_U247, 2, 0 );
        sub_38056( "SCMT_LPPSH", ref l_U247, 8, 1 );
    }
    return;
}

void sub_44529()
{
    sub_886( "SBA", "P_INIT_PASSOS_WARNING_DEATH", "***" );
    l_U217 = 1;
    return;
}

void sub_45178()
{
    sub_886( "SBA", "P_CREATE_VG_TOMBSTONE_POI", 0 );
    sub_2643( ref l_U759, 1, l_U845, l_U845, l_U845, 1.50000000, 3.00000000, 1, 0 );
    sub_3496( ref l_U759, 30, "POI_CEM_TOMB_VG" );
    sub_45301( ref l_U759, 1 );
    sub_3659( ref l_U759, 0 );
    sub_38948( ref l_U759, 0 );
    return;
}

void sub_45301(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_45455()
{
    switch (l_U2063)
    {
        case 0:
        sub_8364( 99074045, 1 );
        if (sub_45512())
        {
            CLEAR_PED_TASKS_IMMEDIATELY( g_U824 );
            if (sub_20310())
            {
                SET_PED_DEFAULT_AIM_AT_PED( g_U824, sub_13032() );
            }
        }
        sub_886( "SBA", "UPDATE_PASSOS_VIG20B - Setup done: Going to State eCIS_WAITING_TO_PLAY", 0 );
        l_U2063 = 1;
        break;
        case 1:
        if (sub_20325( g_U824 ))
        {
            sub_22350( g_U824, l_U583, l_U586 );
            ISEQ_REGISTER_ENTITY( 99074045, "passos", g_U824, 0 );
            ISEQ_START( 99074045 );
            sub_886( "SBA", "UPDATE_PASSOS_VIG20B - Setup done: Going to State eCIS_PLAYING", 0 );
            l_U2063 = 2;
        }
        break;
        case 2:
        if (sub_44085())
        {
            sub_44195( g_U824 );
            sub_886( "SBA", "UPDATE_PASSOS_VIG20B- Max Shot near Passos", 0 );
            PED_SET_ACTION_INTENTION( g_U824, 58, 1500, 0, 0, 0 );
        }
        if (NOT l_U608)
        {
            if (NOT ((PED_GET_ACTION_INTENTION_STATUS( g_U824, 52 )) == 3))
            {
                if ((IS_PLAYER_GUN_RAISED( sub_13054() )) AND (IS_PED_IN_CROSSHAIR_CYLINDER_OFFSET( g_U824, 0.40000000, 1.00000000, 0.00000000, 0.00000000, -0.20000000, 12.00000000, 1 )))
                {
                    sub_886( "SBA", "UPDATE_PASSOS_VIG20B - Max is aiming at Passos", 0 );
                    sub_46133( g_U824 );
                    PED_SET_ACTION_INTENTION( g_U824, 52, 1000, 0, 0, 0 );
                    l_U608 = 1;
                }
            }
        }
        else if (NOT (IS_PED_IN_CROSSHAIR_CYLINDER_OFFSET( g_U824, 0.40000000, 1.00000000, 0.00000000, 0.00000000, -0.20000000, 12.00000000, 1 )))
        {
            sub_886( "SBA", "UPDATE_PASSOS_VIG20B - Max is NOT aiming at Passos", 0 );
            l_U608 = 0;
        }
        break;
    }
    return;
}

int sub_45512()
{
    if ((NOT (IS_PED_DEAD( g_U824 ))) AND (DOES_PED_EXIST( g_U824 )))
    {
        return 1;
    }
    return 0;
}

void sub_46133(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (NOT (IS_PED_DEAD( sub_13032() ))))
    {
        sub_37751( ref l_U237 );
        sub_37831( 1, uParam0, "PASSOS", ref l_U237, 2, 0 );
        sub_37831( 0, sub_13032(), "MAX", ref l_U237, 2, 0 );
        sub_38056( "SCMT_LPPAH", ref l_U237, 8, 1 );
    }
    return;
}

void sub_46615(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (sub_20325( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        TASK_ATTACK_MOVE( uParam0, uParam1, uParam4, uParam5, uParam6, uParam7 );
    }
    return;
}

void sub_46681(unknown uParam0)
{
    if ((sub_20310()) AND (sub_20325( (uParam0^) )))
    {
        sub_46717( uParam0, sub_13032() );
    }
    return;
}

void sub_46717(unknown uParam0, unknown uParam1)
{
    if ((sub_20325( uParam1 )) AND (sub_20325( (uParam0^) )))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

int sub_46795()
{
    if (NOT (sub_30201( l_U949[0], l_U609 )))
    {
        return 0;
    }
    else if (sub_46849( l_U609, 8000, 0 ))
    {
        return 1;
    }
    return 0;
}

int sub_46849(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, boolean bParam22)
{
    switch (l_U217)
    {
        case 0: break;
        case 1:
        sub_1282( ref l_U218, uParam21, 0, 0 );
        l_U217 = 2;
        case 2:
        if (bParam22)
        {
            if (sub_30183( uParam0 ))
            {
                sub_886( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH_WITH_TIMER: Player entered Passos warning box, passos in danger", "***" );
                sub_23252( ref l_U218 );
                sub_47079();
                l_U217 = 3;
            }
        }
        else if (NOT (sub_30183( uParam0 )))
        {
            sub_886( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH_WITH_TIMER: Player exited Passos warning box, passos in danger", "***" );
            sub_23252( ref l_U218 );
            sub_47079();
            l_U217 = 3;
        }
        break;
        case 3:
        if (sub_23636( ref l_U218 ))
        {
            sub_886( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH_WITH_TIMER: Passos death timer has expired (as will passos)", "***" );
            l_U217 = 4;
        }
        else if (((sub_30183( uParam0 )) AND (NOT bParam22)) || ((NOT (sub_30183( uParam0 ))) AND (bParam22)))
        {
            sub_886( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH_WITH_TIMER: Player returned from warning box, Passos out of danger", "***" );
            sub_1424( ref l_U218 );
            l_U217 = 2;
        }
        break;
        case 4:
        sub_886( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH_WITH_TIMER: returning TRUE - going to ePWDS_Idle", "***" );
        l_U217 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_47079()
{
    sub_886( "SBA", "P_DIAL_PASSOS_WARNING", "***" );
    if (NOT (IS_PED_DEAD( sub_13032() )))
    {
        sub_37751( ref l_U166 );
        sub_37831( 1, sub_13032(), "PASSOS", ref l_U166, 2, 0 );
        sub_37831( 0, sub_13032(), "MAX", ref l_U166, 2, 0 );
        sub_38056( "SNYC_HBPH", ref l_U166, 8, 1 );
    }
    return;
}

void sub_47864(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_30201( sub_13032(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_47965()
{
    int I;

    sub_886( "SBA", "P_CREATE_OUTSIDE_THUGS_WAVE2", "***" );
    sub_48060( ref l_U974, ref l_U1027, ref l_U1032, -862236369, 1.00000000, ref g_U1212, 0, 0, 25000, 3, 0, 25000, 0 );
    sub_43632( ref l_U1027, "WAVE2-" );
    for ( I = 0; I <= 3; I++ )
    {
        if (sub_20325( l_U1027[I] ))
        {
            SET_PED_CAN_SLOW_DOWN_WHEN_TURNING( l_U1027[I], 0 );
            if (I == 0)
            {
                REMOVE_ALL_PED_WEAPONS( l_U1027[I] );
                sub_12590( l_U1027[I], 434544317, 25000, 0, 0 );
                sub_28462( l_U1027[I], -862236369, 1, 25000, 0 );
                sub_49562();
            }
            else if (I == 3)
            {
                sub_49833( ref l_U1027[I] );
                sub_20968( l_U1027[I] );
            }
        }
    }
    sub_50147( l_U1027[1], "Gravedig", "Corner_Position30", 0, 1 );
    sub_50147( l_U1027[2], "GenCover", "DB726F91_654ED926_Corner2", 0, 1 );
    SET_PED_FLAG_FORCE_LEANFIRE_IN_COVER( l_U1027[2], 1 );
    SET_PED_FLAG_FIRE_UNTIL_EMPTY_IN_COVER( l_U1027[2], 1 );
    sub_43210( ref l_U1748, l_U1027[0], 1 );
    sub_43210( ref l_U1749, l_U1027[0], 1 );
    sub_43210( ref l_U1748, l_U1027[1], 1 );
    sub_43210( ref l_U1749, l_U1027[1], 1 );
    sub_43210( ref l_U1748, l_U1027[2], 1 );
    sub_43210( ref l_U1749, l_U1027[2], 1 );
    return;
}

void sub_48060(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5, boolean bParam6, unknown uParam7, unknown uParam8, unknown uParam9, int iParam10, unknown uParam11, unknown uParam12)
{
    int I;
    unknown uVar16;

    if ((uParam0^) != (uParam1^))
    {
        SCRIPT_ASSERT( "PED_ARRAY_INITIALIZE - Array sizes don't match!!", 0 );
        return;
    }
    sub_48149( uParam2, uParam4, 0 );
    if (IS_STRING_NULL( uParam12 ))
    {
        uParam12 = l_U122;
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_22991( (uParam1^)[I] );
        (uParam1^)[I] = sub_9334( ref (uParam0^)[I] );
        if (sub_20325( (uParam1^)[I] ))
        {
            SET_PED_AI_TEMPLATE( (uParam1^)[I], uParam5 );
            SET_PED_ALERTNESS( (uParam1^)[I], uParam9 );
            SET_PED_ALLOWED_TO_SURRENDER( (uParam1^)[I], 0 );
            sub_48474( (uParam1^)[I], uParam2 );
            if (iParam3 != -1569615261)
            {
                uVar16 = sub_12590( (uParam1^)[I], iParam3, uParam8, 0, 0 );
            }
            if (iParam10 != 0)
            {
                sub_28462( (uParam1^)[I], iParam10, 0, uParam11, 0 );
            }
            if (bParam6)
            {
                sub_48820( (uParam1^)[I], iParam3 );
            }
            switch (uParam7)
            {
                case 0: break;
                case 1:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                break;
                case 2:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                break;
                case 3:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                break;
            }
        }
    }
    sub_43632( uParam1, uParam12 );
    return;
}

void sub_48149(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_48474(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_1834( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_48149( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_48149( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_48820(unknown uParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case -1569615261:
        case 406496141:
        case -862236369:
        case 456708483:
        case -1464892298:
        case 68019059:
        case -612753081:
        case -820634585:
        SET_PED_COMBAT_RANGE_MAX( uParam0, 10.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 434544317:
        case 1845102363:
        case -168327769:
        case -184942895:
        case 514118749:
        case 1964270085:
        case -691403429:
        case 1478009203:
        case -1404433099:
        case 1194438308:
        SET_PED_COMBAT_RANGE( uParam0, 1 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 20.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case -1013714740:
        case -1074756423:
        case 1308526797:
        case 840671040:
        case 57534114:
        case 724901397:
        case 1992962408:
        SET_PED_COMBAT_RANGE( uParam0, 2 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 30.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 1224272620:
        case 10648147:
        case 377623895:
        case 319712764:
        case -110877124:
        case -1659006841:
        SET_PED_COMBAT_RANGE( uParam0, 3 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 50.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 5.00000000 );
        break;
    }
    return;
}

void sub_49562()
{
    unknown uVar2;

    sub_886( "SBA", "P_RUN_FIRST_2ND_WAVE_GUY", "***" );
    if ((sub_20310()) AND (sub_20325( l_U1027[0] )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( l_U1027[0] );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, 88.54897000, -91.30183000, 4.40495500, sub_13032(), 3, 1, 1056964608, 0, 1, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "DB726F91_4E6B48DC_Corner1", 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U1027[0], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    return;
}

void sub_49833(unknown uParam0)
{
    sub_886( "MSWW", "P_REMOVE_PED_FROM_GROUP", "###" );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        if ((GET_PED_GROUP_INDEX( (uParam0^) )) != -1)
        {
            sub_886( "MSWW", "P_REMOVE_PED_FROM_GROUP: Removing ped from group.", "###" );
            REMOVE_PED_FROM_GROUP( (uParam0^) );
        }
        else
        {
            sub_886( "MSWW", "P_REMOVE_PED_FROM_GROUP: Ped is not in a group!", "###" );
        }
    }
    return;
}

void sub_50147(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (sub_20325( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        sub_43385( ref uParam0, uParam4 );
        TASK_COMBAT_MOVE_TO_COVER( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

int sub_50551()
{
    if ((sub_30183( l_U1411 )) || (l_U2063 != -1))
    {
        return 0;
    }
    if (l_U2062 == 3)
    {
        if (NOT l_U582)
        {
            if (sub_30183( l_U651 ))
            {
                sub_886( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH_WITH_TIMER: Setting for tbGraveRightZone.", 0 );
                sub_44529();
                l_U582 = 1;
            }
            else if (sub_46849( l_U630, 8000, 0 ))
            {
                return 1;
            }
        }
        else if (NOT (sub_30183( l_U651 )))
        {
            sub_886( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH_WITH_TIMER: Setting for tbMrgPassosWarnParking.", 0 );
            sub_44529();
            l_U582 = 0;
        }
        else if (sub_46849( l_U651, 8000, 1 ))
        {
            return 1;
        };;;
    }
    return 0;
}

void sub_51092(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_51527()
{
    if (NOT l_U1956)
    {
        if (((sub_51669( ref l_U949 )) == 0) AND (((sub_51564( ref l_U1027 )) >= 3) AND (NOT (sub_30183( l_U1285 )))))
        {
            if (sub_20325( l_U1027[3] ))
            {
                if (IS_PED_ON_SCREEN( l_U1027[3], 0 ))
                {
                    sub_886( "SBA", "P_HANDLE_STAIRS_RUNNER: Stair runner away!", "***" );
                    sub_51883( l_U1027[3], 65.86920000, -93.36626000, 4.49354000, 3 );
                    sub_43210( ref l_U1750, l_U1027[3], 1 );
                    sub_43210( ref l_U1748, l_U1027[3], 1 );
                    l_U1956 = 1;
                }
            }
        }
    }
    return;
}

void sub_51564(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_51669(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_51883(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    sub_886( "SBA", "P_ACTIVATE_ENEMY_AND_ATTACK_PLAYER", "***" );
    sub_51949( uParam0 );
    sub_52052( ref uParam0, uParam1, uParam4 );
    return;
}

void sub_51949(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_52052(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown uVar7;

    if (sub_20325( (uParam0^) ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        CLEAR_LOCKED_TARGET( (uParam0^) );
        sub_46681( uParam0 );
        sub_52104( uParam0 );
        OPEN_SEQUENCE_TASK( ref uVar7 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam1, uParam4, 20000, 1048576000, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        if (sub_20310())
        {
            TASK_COMBAT_PED( 0, sub_13032() );
        }
        CLOSE_SEQUENCE_TASK( uVar7 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar7 );
        CLEAR_SEQUENCE_TASK( uVar7 );
    }
    return;
}

void sub_52104(unknown uParam0)
{
    if ((sub_20310()) AND (sub_20325( (uParam0^) )))
    {
        sub_52140( uParam0, sub_13032() );
    }
    return;
}

void sub_52140(unknown uParam0, unknown uParam1)
{
    if ((sub_20325( uParam1 )) AND (sub_20325( (uParam0^) )))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_52697(unknown uParam0)
{
    int I;

    if ((sub_51669( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_52855()
{
    sub_52892( "P_DIAL_MAX_MORGUE_MONO", 0, 0 );
    if (NOT (IS_PED_DEAD( g_U1178 )))
    {
        sub_37751( ref l_U1182 );
        sub_37831( 0, g_U1178, "MAX", ref l_U1182, 2, 0 );
        sub_37831( 1, g_U1178, "MAX", ref l_U1182, 2, 0 );
        sub_38056( "SCMT_MWNTMRG", ref l_U1182, 8, 1 );
    }
    return;
}

void sub_52892(unknown uParam0, string sParam1, string sParam2)
{
    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "ML";
    }
    if (IS_STRING_NULL( sParam1 ))
    {
        sParam1 = "---";
    }
    sub_886( sParam2, uParam0, sParam1 );
    return;
}

void sub_53083(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_27411( iParam0 )) == 0)
    {
        sub_27477( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_53250(int iParam0, unknown uParam1)
{
    if ((sub_27411( iParam0 )) == 0)
    {
        sub_27477( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_53319()
{
    int I;

    sub_886( "SBA", "P_CREATE_MORGUE_GANGSTERS", "***" );
    sub_48060( ref l_U1038, ref l_U1091, ref l_U1096, -862236369, 1.00000000, ref g_U1212, 0, 0, 25000, 3, 0, 25000, 0 );
    for ( I = 0; I < 4; I++ )
    {
        if ((sub_20310()) AND (sub_20325( l_U1091[I] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U1091[I], ref g_U1188 );
            REMOVE_ALL_PED_WEAPONS( l_U1091[I] );
            if (I == 0)
            {
                sub_12590( l_U1091[I], 434544317, 25000, 0, 0 );
                sub_28462( l_U1091[I], -862236369, 1, 25000, 0 );
                SET_PED_AI_TEMPLATE( l_U1091[I], ref g_U1220 );
            }
            else if (I == 1)
            {
                sub_12590( l_U1091[I], -862236369, 25000, 0, 0 );
            }
            else if (I == 2)
            {
                sub_12590( l_U1091[I], -691403429, 25000, 0, 0 );
                sub_53660( ref l_U1091[I], l_U1753, 1 );
                sub_43210( ref l_U1754, l_U1091[I], 1 );
                SET_PED_ALERTNESS( l_U1091[I], 1 );
            }
            else
            {
                sub_12590( l_U1091[I], -691403429, 25000, 0, 0 );
                sub_53660( ref l_U1091[I], l_U1753, 1 );
                sub_43210( ref l_U1754, l_U1091[I], 1 );
                SET_PED_ALERTNESS( l_U1091[I], 2 );
            };;;
        }
    }
    sub_43632( ref l_U1091, "MORGUE-" );
    sub_20937( ref l_U1091 );
    l_U1957 = 1;
    return;
}

void sub_53660(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (sub_20325( (uParam0^) ))
    {
        RESET_PED_TETHERING( (uParam0^) );
        sub_43210( ref uParam1, (uParam0^), uParam2 );
    }
    return;
}

void sub_53886()
{
    int I;

    sub_886( "SBA", "P_SETUP_EXPLOSIVES", "***" );
    l_U1829[0]._fU0 = 1728917300;
    l_U1829[1]._fU0 = 1728917300;
    l_U1829[2]._fU0 = 1728917300;
    l_U1829[3]._fU0 = 1419741785;
    l_U1829[4]._fU0 = 1419741785;
    l_U1829[5]._fU0 = 1419741785;
    l_U1829[6]._fU0 = -1746005771;
    l_U1829[7]._fU0 = -1746005771;
    l_U1829[8]._fU0 = -1746005771;
    l_U1829[9]._fU0 = -1746005771;
    l_U1829[10]._fU0 = -1746005771;
    l_U1829[11]._fU0 = -1746005771;
    l_U1829[12]._fU0 = 1728917300;
    l_U1829[13]._fU0 = -1746005771;
    l_U1829[14]._fU0 = 1419741785;
    l_U1829[0]._fU8 = {74.15000000, -113.45000000, 1.92900000};
    l_U1829[1]._fU8 = {78.91872000, -109.81530000, 1.93188000};
    l_U1829[2]._fU8 = {71.41200000, -113.66100000, 1.92900000};
    l_U1829[3]._fU8 = {64.93000000, -97.28000000, 1.85900000};
    l_U1829[4]._fU8 = {78.97359000, -107.68320000, 1.91357000};
    l_U1829[5]._fU8 = {71.80000000, -113.66100000, 1.92900000};
    l_U1829[6]._fU8 = {79.16000000, -106.76600000, 1.92900000};
    l_U1829[7]._fU8 = {76.27300000, -99.90000000, 1.86700000};
    l_U1829[8]._fU8 = {69.27100000, -100.64000000, 1.85900000};
    l_U1829[9]._fU8 = {70.22300000, -103.90600000, 0.96000000};
    l_U1829[10]._fU8 = {73.96000000, -110.65000000, 1.85900000};
    l_U1829[11]._fU8 = {70.49500000, -113.66100000, 1.92900000};
    l_U1829[12]._fU8 = {78.98976000, -104.07110000, 1.92188000};
    l_U1829[13]._fU8 = {79.35025000, -100.90890000, 1.91357000};
    l_U1829[14]._fU8 = {79.02052000, -99.49244000, 1.91357000};
    l_U1829[0]._fU20 = {0, 0, 95.00000000};
    l_U1829[1]._fU20 = {0, 0, 61.29000000};
    l_U1829[2]._fU20 = {0, 0, 145.00000000};
    l_U1829[3]._fU20 = {0, 0, -97.00000000};
    l_U1829[4]._fU20 = {0, 0, 135.00000000};
    l_U1829[5]._fU20 = {0, 0, -165.00000000};
    l_U1829[6]._fU20 = {0, 0, -80.00000000};
    l_U1829[7]._fU20 = {0, 0, -125.00000000};
    l_U1829[8]._fU20 = {0, 0, -100.00000000};
    l_U1829[9]._fU20 = {0, 0, -90.00000000};
    l_U1829[10]._fU20 = {0, 0, 65.00000000};
    l_U1829[11]._fU20 = {0, 0, -170.00000000};
    l_U1829[12]._fU20 = {0, 0, 61.29000000};
    l_U1829[13]._fU20 = {0, 0, 135.00000000};
    l_U1829[14]._fU20 = {0, 0, -95.00000000};
    for ( I = 0; I <= 14; I++ )
    {
        sub_26633( l_U1829[I]._fU4 );
        l_U1829[I]._fU4 = CREATE_OBJECT_NO_OFFSET( l_U1829[I]._fU0, l_U1829[I]._fU8, 1, 0 );
        if (DOES_OBJECT_EXIST( l_U1829[I]._fU4 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1829[I]._fU4, ref g_U1188 );
            SET_OBJECT_ROTATION( l_U1829[I]._fU4, l_U1829[I]._fU20 );
            SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( l_U1829[I]._fU4, 1 );
            CAMERA_CAN_TARGET_OBJECT( 1, l_U1829[I]._fU4 );
        }
    }
    return;
}

void sub_55075()
{
    int I;
    string[3] sVar3;

    sub_886( "SBA", "P_CREATE_CADAVERS", "***" );
    array(ref sVar3, 3);
    sVar3[0] = "Cadaver1";
    sVar3[1] = "Cadaver2";
    sVar3[2] = "Cadaver3";
    sub_8364( 529069709, 1 );
    for ( I = 0; I <= 2; I++ )
    {
        sub_22991( l_U1155[I] );
        l_U1155[I] = sub_9334( ref l_U1115[I] );
        SET_ROOM_FOR_PED_BY_NAME( l_U1155[I], ref g_U1188 );
        FREEZE_PED_POSITION( l_U1155[I], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1155[I], 1 );
        SET_PED_CAN_BE_TARGETTED( l_U1155[I], 0 );
        SET_PED_AIM_LOCKONABLE( l_U1155[I], 0 );
        SET_PED_INVINCIBLE( l_U1155[I], 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( l_U1155[I], 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U1155[I], 1 );
        STOP_PED_SPEAKING( l_U1155[I], 1 );
        SET_PED_CAN_BE_MELEED( l_U1155[I], 0 );
        SET_PED_BLOODSPRAY_ENABLE( l_U1155[I], 0 );
        ISEQ_REGISTER_ENTITY( 529069709, sVar3[I], l_U1155[I], 0 );
    }
    sub_43632( ref l_U1155, "Cadaver" );
    ISEQ_START( 529069709 );
    return;
}

void sub_55757(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_55789( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_55789(unknown uParam0, float fParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^) )};
        if (uVar4._fU8 < fParam1)
        {
            sub_52892( "A ped has been killed by P_PED_HEIGHT_SAFETY_CHECK", 0, 0 );
            SET_PED_HEALTH( (uParam0^), 0, 0 );
        }
    }
    return;
}

void sub_55981(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            if (NOT (IS_PED_ON_FIRE( (uParam0^)[I] )))
            {
                Result++;
            }
        }
    }
    return Result;
}

int sub_56430()
{
    int I;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;

    for ( I = 2; I <= 3; I++ )
    {
        if ((sub_20310()) AND (sub_20325( l_U1091[I] )))
        {
            if (HAS_PED_BEEN_DAMAGED_BY_PED( l_U1091[I], sub_13032(), 0 ))
            {
                sub_886( "SBA", "F_SHOULD_AMBUSHERS_REACT: YES! Ped Damaged!", "***" );
                return 1;
            }
            if (IS_PED_ON_FIRE( l_U1091[I] ))
            {
                sub_886( "SBA", "F_SHOULD_AMBUSHERS_REACT: YES! Ped is on fire!", "***" );
                return 1;
            }
            if (sub_30183( l_U1369 ))
            {
                uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U1091[I] )};
                if (HAS_BULLET_IMPACTED_IN_AREA( uVar3, 10.00000000, ref iVar6 ))
                {
                    if (iVar6 == sub_13032())
                    {
                        sub_886( "SBA", "F_SHOULD_AMBUSHERS_REACT: YES! Bullet Impact!", "***" );
                        return 1;
                    }
                }
            }
        }
    }
    if (sub_30183( l_U1495 ))
    {
        return 1;
    }
    return 0;
}

void sub_56845()
{
    sub_886( "SBA", "P_START_AMBUSH", "***" );
    if (sub_20310())
    {
        if (sub_20325( l_U1091[3] ))
        {
            sub_51949( l_U1091[3] );
            TASK_SEARCH_FOR_UNSEEN_ENEMY( l_U1091[3], 1 );
        }
        if (sub_20325( l_U1091[2] ))
        {
            sub_51949( l_U1091[2] );
            TASK_SEARCH_FOR_UNSEEN_ENEMY( l_U1091[2], 1 );
        }
    }
    return;
}

void sub_57001()
{
    int I;
    vector[3] vVar3;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    vector[3] vVar13;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;

    sub_886( "SBA", "P_CREATE_SURVIVOR_GROUP_AND_TASK_INTO_MORGUE", "***" );
    array(ref vVar3, 3);
    array(ref vVar13, 3);
    vVar3[0] = {66.62447000, -93.39633000, 4.49337300};
    vVar3[1] = {68.12447000, -93.39633000, 4.49337300};
    vVar3[2] = {70.62447000, -93.39633000, 4.49337300};
    vVar13[0] = {61.98178000, -106.23210000, 0.98242800};
    vVar13[1] = {62.56540000, -105.19310000, 0.98242800};
    vVar13[2] = {61.40173000, -104.84790000, 0.98242800};
    sub_48149( ref l_U1163, 0.75000000, 0 );
    for ( I = 0; I <= 2; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U949[I] )))
        {
            if ((GET_PED_HEALTH( l_U949[I] )) < (GET_PED_MAX_HEALTH( l_U949[I] )))
            {
                sub_886( "SBA", "P_CREATE_SURVIVOR_GROUP_AND_TASK_INTO_MORGUE: Killing Wounded Wave1 Thug", "***" );
                sub_24184( l_U949[I] );
            }
            else
            {
                l_U1169++;
                if ((l_U1169 + 1) <= 3)
                {
                    sub_886( "SBA", "P_CREATE_SURVIVOR_GROUP_AND_TASK_INTO_MORGUE: Found Wave1 Thug alive!  Adding to survivors...", "***" );
                    l_U1159[l_U1169] = l_U949[I];
                }
                else
                {
                    sub_24184( l_U949[I] );
                    l_U1169 = 2;
                }
            }
        }
    }
    for ( I = 0; I <= 3; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U1027[I] )))
        {
            if ((GET_PED_HEALTH( l_U1027[I] )) < (GET_PED_MAX_HEALTH( l_U1027[I] )))
            {
                sub_886( "SBA", "P_CREATE_SURVIVOR_GROUP_AND_TASK_INTO_MORGUE: Killing Wounded Wave2 Thug", "***" );
                sub_24184( l_U1027[I] );
            }
            else
            {
                l_U1169++;
                if ((l_U1169 + 1) <= 3)
                {
                    sub_886( "SBA", "P_CREATE_SURVIVOR_GROUP_AND_TASK_INTO_MORGUE: Found Wave2 Thug alive!  Adding to survivors...", "***" );
                    l_U1159[l_U1169] = l_U1027[I];
                }
                else
                {
                    sub_24184( l_U1027[I] );
                    l_U1169 = 2;
                }
            }
        }
    }
    sub_886( "SBA", "P_CREATE_SURVIVOR_GROUP_AND_TASK_INTO_MORGUE: Total survivors:", "***" );
    sub_17305( l_U1169 + 1 );
    if ((l_U1169 < 3) AND (l_U1169 >= 0))
    {
        for ( I = 0; I <= l_U1169; I++ )
        {
            if (sub_20325( l_U1159[I] ))
            {
                if (IS_PED_PROCESSING_FROZEN( l_U1159[I] ))
                {
                    sub_886( "SBA", "P_CREATE_SURVIVOR_GROUP_AND_TASK_INTO_MORGUE: re-activating survivor ped", "***" );
                    sub_51949( l_U1159[I] );
                }
                sub_886( "SBA", "P_CREATE_SURVIVOR_GROUP_AND_TASK_INTO_MORGUE: re-tasking survivor ped", "***" );
                RESET_PED_TETHERING( l_U1159[I] );
                SET_PED_CAN_SLOW_DOWN_WHEN_TURNING( l_U1159[I], 0 );
                sub_49833( ref l_U1159[I] );
                sub_48474( l_U1159[I], ref l_U1163 );
                sub_22350( l_U1159[I], vVar3[I], 90 );
                sub_46615( l_U1159[I], vVar13[I], 3.00000000, 5.00000000, -1082130432, 3 );
                sub_43210( ref l_U1752, l_U1159[I], 1 );
                sub_43210( ref l_U1753, l_U1159[I], 1 );
                SET_PED_COMBAT_ATTRIBUTES( l_U1159[I], 8192, 0 );
            }
        }
    }
    else if (l_U1169 >= 3)
    {
        SCRIPT_ASSERT( "P_CREATE_SURVIVOR_GROUP_AND_TASK_INTO_MORGUE: iNumSurvivors is out of range!", 0 );
    }
    return;
}

void sub_58757(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 0 );
            sub_17305( I );
        }
    }
    return;
}

void sub_58919()
{
    switch (l_U2064)
    {
        case 0:
        sub_8364( 250466825, 1 );
        if (sub_45512())
        {
            CLEAR_PED_TASKS_IMMEDIATELY( g_U824 );
        }
        sub_22350( g_U824, l_U587, l_U590 );
        sub_886( "SBA", "UPDATE_PASSOS_VIG20C - Setup done: Going to State eCIS_WAITING_TO_PLAY", 0 );
        l_U2064 = 1;
        break;
        case 1:
        if (sub_20325( g_U824 ))
        {
            ISEQ_REGISTER_ENTITY( 250466825, "passos", g_U824, 0 );
            ISEQ_START( 250466825 );
            sub_886( "SBA", "UPDATE_PASSOS_VIG20C - Going to State eCIS_PLAYING", 0 );
            l_U2064 = 2;
        }
        break;
        case 2:
        if (sub_44085())
        {
            sub_886( "SBA", "UPDATE_PASSOS_VIG20C - Max Shot near Passos", 0 );
            sub_44195( g_U824 );
            PED_SET_ACTION_INTENTION( g_U824, 58, 1500, 0, 0, 0 );
        }
        break;
    }
    return;
}

int sub_59372()
{
    if ((IS_PED_DEAD( l_U1091[3] )) AND (IS_PED_DEAD( l_U1091[2] )))
    {
        sub_886( "SBA", "F_ACTIVATE_FINAL_MORGUE_ENEMIES: hiders are dead, returning TRUE", "***" );
        return 1;
    }
    return 0;
}

void sub_59532()
{
    sub_886( "SBA", "P_ACTIVATE_FREEZER_THUG", "***" );
    if (sub_20325( l_U1091[0] ))
    {
        sub_51949( l_U1091[0] );
        SET_PED_COMBAT_MOVEMENT( l_U1091[0], 2 );
        STOP_PED_SPEAKING( l_U1091[0], 0 );
        SET_PED_AIM_LOCKONABLE( l_U1091[0], 1 );
        sub_42560( ref l_U1091[0], 0 );
        sub_46615( l_U1091[0], 72.40731000, -102.31520000, 0.98251800, 2, 1101004800, -1082130432, 3 );
        sub_46681( ref l_U1091[0] );
        sub_53660( ref l_U1091[0], l_U1753, 1 );
        sub_43210( ref l_U1754, l_U1091[0], 1 );
    }
    return;
}

void sub_59808()
{
    sub_886( "SBA", "P_ACTIVATE_HALL_THUG", "***" );
    if (sub_20325( l_U1091[1] ))
    {
        sub_51949( l_U1091[1] );
        SET_PED_COMBAT_MOVEMENT( l_U1091[1], 2 );
        STOP_PED_SPEAKING( l_U1091[1], 0 );
        SET_PED_AIM_LOCKONABLE( l_U1091[1], 1 );
        sub_42560( ref l_U1091[1], 0 );
        sub_46615( l_U1091[1], 74.49033000, -99.33433000, 0.98243500, 2, 1101004800, -1082130432, 3 );
        sub_46681( ref l_U1091[1] );
        sub_53660( ref l_U1091[1], l_U1753, 1 );
        sub_43210( ref l_U1754, l_U1091[1], 1 );
    }
    return;
}

void sub_60112()
{
    if (sub_20310())
    {
        if (NOT (sub_24757( ref l_U1105 )))
        {
            if ((NOT (sub_30183( l_U1390 ))) AND (NOT (sub_30183( l_U1558 ))))
            {
                if (IS_PED_USING_MP3_COVER_TASK( sub_13032() ))
                {
                    sub_886( "SBA", "P_HANDLE_ROUST_MAX_FROM_COVER_IN_MORUGE: Start timer", "***" );
                    sub_37607( ref l_U1105, 12000 );
                }
            }
        }
        else if (NOT (IS_PED_USING_MP3_COVER_TASK( sub_13032() )))
        {
            sub_886( "SBA", "P_HANDLE_ROUST_MAX_FROM_COVER_IN_MORUGE: Out of cover, reset timer", "***" );
            sub_1424( ref l_U1105 );
        }
        if (l_U1114 != nil)
        {
            if (IS_PED_DEAD( l_U1114 ))
            {
                sub_886( "SBA", "P_HANDLE_ROUST_MAX_FROM_COVER_IN_MORUGE: Charger is dead, reset timer", "***" );
                sub_1424( ref l_U1105 );
                l_U1114 = nil;
            }
        }
        if (sub_23636( ref l_U1105 ))
        {
            sub_886( "SBA", "P_HANDLE_ROUST_MAX_FROM_COVER_IN_MORUGE: Timer Is Done!", "***" );
            sub_60620();
        }
    }
    return;
}

void sub_60620()
{
    l_U1114 = nil;
    if (NOT (IS_PED_DEAD( l_U1091[2] )))
    {
        l_U1114 = l_U1091[2];
    }
    else if (NOT (IS_PED_DEAD( l_U1091[3] )))
    {
        l_U1114 = l_U1091[3];
    }
    else if ((NOT (IS_PED_DEAD( l_U1091[0] ))) AND (l_U1102))
    {
        l_U1114 = l_U1091[0];
    }
    else if ((NOT (IS_PED_DEAD( l_U1091[1] ))) AND (l_U1103))
    {
        l_U1114 = l_U1091[1];
    };;;;
    if (sub_20325( l_U1114 ))
    {
        sub_886( "SBA", "P_CHARGE_MAX_IN_MORGUE: Setting aggresive charger", "***" );
        SET_PED_FLAG_AGGRESSIVE_CHARGER( l_U1114, 1 );
        sub_60903( l_U1114, 0 );
    }
    else
    {
        sub_886( "SBA", "P_CHARGE_MAX_IN_MORGUE: No valid ped!", "***" );
    }
    return;
}

void sub_60903(unknown uParam0, boolean bParam1)
{
    if ((NOT (IS_PED_RAGDOLL( uParam0, 0 ))) AND ((NOT (IS_PED_INJURED( uParam0 ))) AND ((sub_20310()) AND (sub_20325( uParam0 )))))
    {
        if (bParam1)
        {
            CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        }
        CLEAR_LOCKED_TARGET( uParam0 );
        sub_46681( ref uParam0 );
        sub_52104( ref uParam0 );
        TASK_COMBAT_PED( uParam0, sub_13032() );
    }
    return;
}

void sub_61143(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (sub_30201( (uParam0^)[I], uParam1 ))
        {
            Result = 1;
        }
    }
    return Result;
}

void sub_61847()
{
    sub_886( "SBA", "P_PREPARE_PASSOS_FOR_MORGUE", 0 );
    if (sub_45512())
    {
        l_U2062 = -1;
        l_U2063 = -1;
        ISEQ_UNREGISTER_ENTITY( 247804313, "passos" );
        sub_26155( 247804313, 1 );
        ISEQ_UNREGISTER_ENTITY( 99074045, "passos" );
        sub_26155( 99074045, 1 );
        l_U2064 = 0;
    }
    return;
}

void sub_62041(int iParam0)
{
    if ((NOT l_U2003) AND (iParam0 == 0))
    {
        sub_886( "SBA", "P_SET_PASSOS_MORGUE_TRIGGERS: turning off exit triggers", "***" );
        l_U1705 = {l_U1621};
        l_U1726 = {l_U1621};
        l_U2003 = 1;
        return;
    }
    if (l_U1960)
    {
        if (sub_30183( l_U1516 ))
        {
            sub_886( "SBA", "P_SET_PASSOS_MORGUE_TRIGGERS: Switching to WEST exit triggers", "***" );
            l_U1705 = {l_U693};
            l_U1726 = {l_U672};
            l_U1960 = 0;
        }
    }
    else if (sub_30183( l_U1537 ))
    {
        sub_886( "SBA", "P_SET_PASSOS_MORGUE_TRIGGERS: Switching to EAST exit triggers", "***" );
        l_U1705 = {l_U735};
        l_U1726 = {l_U714};
        l_U1960 = 1;
    }
    return;
}

int sub_62475(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, boolean bParam42)
{
    switch (l_U217)
    {
        case 0: break;
        case 1: l_U217 = 2;
        case 2:
        if (bParam42)
        {
            if (sub_30183( uParam21 ))
            {
                SCRIPT_ASSERT( "F_HANDLE_PASSOS_WARNING_DEATH: How did player hit death box before warning box?", 0 );
                l_U217 = 4;
            }
            else if (sub_30183( uParam0 ))
            {
                sub_886( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH: Player entered Passos warning box, passos in danger", "***" );
                sub_47079();
                l_U217 = 3;
            }
        }
        else if (NOT (sub_30183( uParam21 )))
        {
            SCRIPT_ASSERT( "F_HANDLE_PASSOS_WARNING_DEATH: How did player hit death box before warning box?", 0 );
            l_U217 = 4;
        }
        else if (NOT (sub_30183( uParam0 )))
        {
            sub_886( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH: Player exited Passos warning box, passos in danger", "***" );
            sub_47079();
            l_U217 = 3;
        };;;
        break;
        case 3:
        if (((NOT (sub_30183( uParam21 ))) AND (NOT bParam42)) || ((sub_30183( uParam21 )) AND (bParam42)))
        {
            sub_886( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH: Player entered Passos death box", "***" );
            l_U217 = 4;
        }
        else if (((sub_30183( uParam0 )) AND (NOT bParam42)) || ((NOT (sub_30183( uParam0 ))) AND (bParam42)))
        {
            sub_886( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH: Player returned from warning box, Passos out of danger", "***" );
            l_U217 = 2;
        }
        break;
        case 4:
        sub_886( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH: returning TRUE - going to ePWDS_Idle", "***" );
        l_U217 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_63671(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_PLACEMENT_EXIST( (uParam0^)[I] ))
        {
            sub_886( "RJM", "DO_ANY_PAINKILLERS_STILL_EXIST - Found a pill in there, we can still play some V.O.", 0 );
            (uParam1^)[I] = 1;
        }
        else
        {
            (uParam1^)[I] = 0;
        }
    }
    return;
}

void sub_63943()
{
    int I;

    for ( I = 0; I <= (l_U1789 - 1); I++ )
    {
        if (l_U1794[I])
        {
            if ((HAS_PLACEMENT_BEEN_COLLECTED( l_U1789[I] )) || (NOT (DOES_PLACEMENT_EXIST( l_U1789[I] ))))
            {
                l_U1794[I] = 0;
                sub_64034();
            }
        }
    }
    return;
}

void sub_64034()
{
    sub_886( "RJM", "P_DIAL_MAX_PILL_MORGUE_VO", 0 );
    if ((NOT sub_64090()) AND (NOT l_U1965))
    {
        sub_37751( ref g_U1239 );
        sub_37831( 0, sub_13032(), "MAX", ref g_U1239, 2, 0 );
        sub_37831( 1, sub_13032(), "MAX", ref g_U1239, 2, 0 );
        sub_38056( "SCMT_MFSFKNPL", ref g_U1239, 8, 1 );
        l_U1965 = 1;
    }
    return;
}

void sub_64090()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_64273()
{
    switch (l_U2065)
    {
        case 0:
        sub_8364( 557479586, 1 );
        if (ISEQ_QUERY_ENTITY_STATE( 250466825, "passos", 6 ))
        {
            sub_41298();
            if (sub_45512())
            {
                if (sub_20310())
                {
                    SET_PED_DEFAULT_AIM_AT_PED( g_U824, sub_13032() );
                    if (NOT (HAS_PED_GOT_WEAPON( g_U824, -691403429 )))
                    {
                        sub_886( "SBA", " Passos needs a gun, giving him one.", "***" );
                        sub_12590( g_U824, -691403429, 25000, 0, 0 );
                    }
                }
            }
            sub_886( "SBA", "UPDATE_PASSOS_VIG20D - Setup done: Going to State eCIS_WAITING_TO_PLAY", 0 );
            l_U2065 = 1;
        }
        break;
        case 1:
        if (sub_20325( g_U824 ))
        {
            sub_22350( g_U824, l_U603, l_U606 );
            sub_22496( ref g_U824, g_U1180 );
            ISEQ_REGISTER_ENTITY( 557479586, "passos", g_U824, 0 );
            ISEQ_START( 557479586 );
            sub_886( "SBA", "UPDATE_PASSOS_VIG20D - Going to State eCIS_PLAYING", 0 );
            l_U2065 = 2;
        }
        break;
        case 2:
        if (sub_44085())
        {
            sub_886( "SBA", "UPDATE_PASSOS_VIG20D - Max Shot near Passos", 0 );
            sub_44195( g_U824 );
            PED_SET_ACTION_INTENTION( g_U824, 58, 1500, 0, 0, 0 );
        }
        if ((sub_20310()) AND (sub_45512()))
        {
            if (NOT l_U608)
            {
                if (NOT ((PED_GET_ACTION_INTENTION_STATUS( g_U824, 52 )) == 3))
                {
                    if ((IS_PLAYER_GUN_RAISED( sub_13054() )) AND (IS_PED_IN_CROSSHAIR_CYLINDER_OFFSET( g_U824, 0.40000000, 1.00000000, 0.00000000, 0.00000000, -0.20000000, 12.00000000, 1 )))
                    {
                        sub_886( "SBA", "UPDATE_PASSOS_VIG20D - Max is aiming at Passos", 0 );
                        sub_46133( g_U824 );
                        PED_SET_ACTION_INTENTION( g_U824, 52, 1000, 0, 0, 0 );
                        l_U608 = 1;
                    }
                }
            }
            else if (NOT (IS_PED_IN_CROSSHAIR_CYLINDER_OFFSET( g_U824, 0.40000000, 1.00000000, 0.00000000, 0.00000000, -0.20000000, 12.00000000, 1 )))
            {
                sub_886( "SBA", "UPDATE_PASSOS_VIG20D - Max is NOT aiming at Passos", 0 );
                l_U608 = 0;
            }
        }
        break;
    }
    return;
}

void sub_65473(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_30201( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_65701()
{
    sub_886( "SBA", "P_UNLOAD_ASSETS_MORGUE", "***" );
    sub_40680( g_U1332 );
    sub_40680( -109087371 );
    sub_40680( -1504197122 );
    sub_40680( 1728917300 );
    sub_40680( 1419741785 );
    sub_40680( -1746005771 );
    sub_40680( -1852489064 );
    sub_40680( g_U1346 );
    sub_40680( -488097608 );
    sub_40680( g_U758 );
    sub_40680( 1887965138 );
    sub_26633( g_U1780 );
    sub_40680( -161147555 );
    sub_40680( -2073192064 );
    sub_40680( -2015623084 );
    sub_26995( "EXPL_CAM" );
    sub_40680( -1612743506 );
    sub_26995( "FACE_PASNYB" );
    sub_65990( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act" );
    return;
}

void sub_65990(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}

void sub_66027(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        case 1: break;
        case 2: break;
        case 3: break;
        case 4:
        case 5: break;
        case 6: break;
        case 7:
        sub_66164( 1224272620 );
        break;
        case 8: break;
        case 9:
        sub_8853( 434544317, 1 );
        sub_8853( -691403429, 1 );
        break;
        case 10:
        sub_66164( -184942895 );
        break;
    }
    return;
}

void sub_66164(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}


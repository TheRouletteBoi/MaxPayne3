void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 1;
    l_U38 = 144;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    l_U52 = {0, 0, 0};
    StrCopy( ref l_U55, "DUMMY", 32 );
    l_U63 = 1;
    l_U68 = 0;
    l_U69 = 0;
    l_U70 = 0;
    l_U73 = 0;
    l_U118 = -1;
    l_U119 = {64536, 64536, 64536};
    l_U122 = "PED_DEF";
    l_U164 = 1.00000000;
    l_U176 = 0;
    l_U217 = 0;
    l_U258 = 0;
    l_U260 = 1;
    l_U261 = 0;
    l_U262 = 1;
    l_U263 = 0;
    StrCopy( ref l_U264, "08_05_CEMETERY_concat", 32 );
    l_U291 = 1;
    l_U337 = "mid_08_cem_concat";
    l_U352 = 0;
    l_U366 = {60.10000000, -110.65000000, 5.38000000};
    l_U369 = 196.00000000;
    l_U482 = 0;
    l_U649 = {64.00000000, -112.35000000, 4.99000000};
    l_U652 = {63.50000000, -107.85000000, 4.99000000};
    l_U655 = {63.50000000, -103.50000000, 4.99000000};
    l_U721 = {74.00000000, -101.72000000, 4.99079600};
    l_U724 = {74.00000000, -113.72000000, 4.99079600};
    l_U1298 = {90.46000000, -111.19000000, 5.77000000};
    l_U1301 = {89.98800000, -110.67600000, 4.99900000};
    l_U1304 = -120.61500000;
    l_U1334 = {74.11000000, -108.30000000, 4.99070400};
    l_U1337 = {71.05000000, -104.14000000, 7.70000000};
    l_U1340 = {-16.04000000, 0.00000000, -140.06000000};
    l_U1343 = {64.20000000, -112.58000000, 7.69000000};
    l_U1346 = {-26.02000000, 0.00000000, 58.52000000};
    l_U1561 = 0;
    sub_802( "SBA", "s_cemet_chapel script started.", "***" );
    l_U258 = 0;
    sub_857();
    sub_2183();
    sub_6097();
    sub_6829();
    sub_6949( 10 );
    sub_7376();
    if (g_U825 == 10)
    {
        sub_802( "SBA", "s_cemet_chapel is starting from dev menu", "***" );
        sub_7683();
        l_U1568 = 1;
        g_U826 = 10;
        l_U260 = 1;
        sub_12152( ref l_U752, g_U826, g_U1178, g_U971[10]._fU0, g_U971[10]._fU12, g_U971[10]._fU16, g_U971[10]._fU20, 0 );
    }
    else
    {
        sub_802( "SBA", "s_cemet_chapel is starting in flow", "***" );
        sub_15834( ref l_U264, 0 );
        l_U1568 = 0;
    }
    while (NOT IS_EXITFLAG_SET())
    {
        if (g_U826 == 10)
        {
            sub_16113();
        }
        sub_16815();
        if (l_U1567 == 0)
        {
            sub_25892();
        }
        WAIT( 0 );
    }
    sub_24172( 0 );
    sub_64402();
    sub_64650( 10 );
    if (g_U826 == 10)
    {
        if (IS_ARCADE_MODE_ACTIVE() == 0)
        {
            SWITCH_TO_LEVEL_NAME( "s_fav2" );
        }
    }
    sub_802( "SBA", "s_cemet_chapel script ended", "***" );
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_cemet_chapel" );
    SET_EXITFLAG_RESPONSE();
    return;
}

void sub_802(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_857()
{
    int I;

    sub_802( "SBA", "P_INITIALIZE_SCRIPT_DATA", "***" );
    l_U1568 = 1;
    l_U1513 = -1;
    l_U1565 = 0;
    l_U1514 = -1;
    l_U1566 = 1;
    l_U1515 = 0;
    l_U788 = 0;
    l_U482 = 0;
    l_U789 = 0;
    l_U790 = 0;
    l_U791 = 0;
    l_U792 = 0;
    l_U793 = 0;
    l_U794 = 0;
    l_U795 = 0;
    l_U796 = 0;
    l_U797 = 0;
    l_U798 = 0;
    l_U799 = 0;
    l_U800 = 0;
    l_U801 = 0;
    l_U1521 = 0;
    l_U1522 = 0;
    l_U1523 = 0;
    l_U1519 = 0;
    l_U1518 = 0;
    l_U1520 = 0;
    l_U1561 = 0;
    l_U647 = 1;
    l_U648 = 0;
    l_U803 = 0;
    l_U802 = 0;
    l_U804 = 0;
    l_U805[0] = 0;
    l_U805[1] = 0;
    l_U805[2] = 0;
    l_U805[3] = 0;
    l_U805[4] = 0;
    l_U811 = 0;
    l_U1210 = 8000;
    l_U1211 = 0;
    l_U1563 = 0;
    l_U1564 = 0;
    l_U733 = 0;
    sub_1201( ref l_U1174, 1500, 1, 0 );
    sub_1337( ref l_U464 );
    sub_1337( ref l_U473 );
    sub_1337( ref l_U1183 );
    sub_1337( ref l_U1192 );
    sub_1337( ref l_U1201 );
    sub_1337( ref l_U1524 );
    sub_1337( ref l_U1533 );
    sub_1337( ref l_U1542 );
    for ( I = 0; I <= (l_U532 - 1); I++ )
    {
        sub_1337( ref l_U532[I] );
    }
    for ( I = 0; I <= (l_U587 - 1); I++ )
    {
        sub_1337( ref l_U587[I] );
    }
    for ( I = 0; I <= (l_U635 - 1); I++ )
    {
        sub_1337( ref l_U635[I] );
    }
    l_U1323 = 0;
    l_U1324 = 0;
    sub_1659( "SCMTAUD" );
    sub_1771();
    return;
}

void sub_1201(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1337(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_1659(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_1679();
    return;
}

void sub_1679()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_1771()
{
    sub_802( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1569 = 0;
    l_U1570 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1701971384 )))
    {
        sub_802( "CCB", "Creating the OldPainless script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1701971384 );
        if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
        {
            sub_802( "CCB", "The OldPainless script variable was successfully created...", 0 );
        }
        else
        {
            sub_802( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_802( "CCB", "The OldPainless script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1701971384, 0 );
    }
    return;
}

void sub_2183()
{
    sub_802( "SBA", "P_SET_STATIC_GAMEPLAY_DATA", "***" );
    sub_2274( ref l_U353, g_U779[10]._fU0, g_U779[10]._fU12, 1862331818, 26, 6, 0, 0, 0 );
    sub_2274( ref l_U376[0], 88.00000000, -115.75000000, 5.00000000, -2.35999000, -68091699, 7, 3, 2, 0, 0 );
    sub_2274( ref l_U376[1], 87.45000000, -117.50000000, 5.01000000, -2.35999000, -38377016, 7, 3, 2, 0, 0 );
    sub_2274( ref l_U376[2], 90.00000000, -118.00000000, 5.01000000, -2.35999000, -1453944767, 7, 3, 2, 0, 0 );
    sub_2274( ref l_U376[3], 85.34801000, -102.53230000, 4.99093900, 180.00000000, 1401204614, 7, 3, 2, 0, 0 );
    sub_2274( ref l_U376[4], 87.20600000, -102.53230000, 5.01000000, 180.00000000, 1717130700, 7, 3, 2, 0, 0 );
    sub_2274( ref l_U492, 80.61954000, -107.65610000, 8.58793100, 91.60791000, 593978584, 7, 3, 2, 0, 0 );
    sub_2274( ref l_U508[0], 80.50000000, -110.85000000, 4.99000000, 90.00000000, -1753740406, 7, 3, 2, 0, 0 );
    sub_2274( ref l_U547[0], 80.50000000, -107.90000000, 4.99000000, 90.00000000, 1678996005, 7, 3, 2, 0, 0 );
    sub_2274( ref l_U547[1], 85.03655000, -103.97460000, 4.99090200, 104.00000000, 280979325, 7, 3, 2, 0, 0 );
    sub_2274( ref l_U611[0], 80.50000000, -104.85000000, 4.99000000, 90.00000000, -1785258920, 7, 3, 2, 0, 0 );
    sub_2274( ref l_U663[0], 85.00000000, 65428, 4.99081800, 125, 1035856716, 7, 3, 2, 0, 0 );
    sub_2274( ref l_U663[1], 85.00000000, -107.00000000, 4.99086000, 65, 1269362446, 7, 3, 2, 0, 0 );
    sub_2274( ref l_U663[2], 85.60000000, 65427, 4.99081800, 125, 703965785, 7, 3, 2, 0, 0 );
    sub_2274( ref l_U663[3], 85.60000000, -106.35000000, 4.99081800, 65, -1277385465, 7, 3, 2, 0, 0 );
    sub_3042( ref l_U1158, "ChapelTetherA", 70.75000000, -107.92000000, 4.56000000, 7.00000000, 13.50000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3042( ref l_U1159, "ChapelTetherB", 75.01900000, -107.85000000, 4.56000000, 5.25000000, 16.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3042( ref l_U1160, "TETH_MAIN_CHAPEL_C", 69.81000000, -107.94000000, 4.56000000, 15.46000000, 13.76000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3042( ref l_U1163, "TETH_CHAPEL_BACK", 83.40000000, -107.94000000, 4.56000000, 12.50000000, 11.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3042( ref l_U1164, "TETH_CHAP_BALCONY", 82.73000000, -107.42000000, 8.50000000, 6.12000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3042( ref l_U1162, "TETH_REINFORCEMENTS_RIGHT", 72.13500000, -102.52000000, 4.56000000, 6.25000000, 7.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3042( ref l_U1161, "TETH_REINFORCEMENTS_LEFT", 72.13500000, -113.26000000, 4.56000000, 6.25000000, 7.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3631( ref l_U821, "TRIG_MAX_START", 59.82000000, -104.16000000, 4.56000000, 4.84000000, 3.75000000, 2.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3631( ref l_U842, "TRIGGER_LOBBY", 82.73000000, -107.92000000, 4.56000000, 3.25000000, 11.49000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3631( ref l_U863, "TRIGGER_UPSTAIRS", 93.16000000, -108.18000000, 8.75000000, 1.83000000, 15.50000000, 3.38000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3631( ref l_U884, "CEM_CHAPEL_UPSTAIRS_R", 90.70000000, -112.41000000, 8.60000000, 3.50000000, 3.00000000, 2.31000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3631( ref l_U905, "CEM_CHAPEL_UPSTAIRS_L", 90.70000000, -103.43000000, 8.60000000, 3.50000000, 3.00000000, 2.31000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3631( ref l_U926, "TRIGGER_OFFICESTAIRS", 87.72000000, -111.57000000, 8.63000000, 1.37000000, 1.24000000, 3.38000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3631( ref l_U947, "TRIG_CHAPEL_GAMEPLAY", 90.41000000, -94.51000000, 1.18000000, 7.35000000, 6.15000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3631( ref l_U968, "TRIG_CHAPEL_BALCONY", 81.92000000, -107.90000000, 8.33000000, 4.00000000, 11.10000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3631( ref l_U989, "TRIG_PASSOS_SHOOT1", 71.15000000, -109.19000000, 4.56000000, 15.25000000, 8.20000000, 3.00000000, 0.00000000, 0.00000000, 30.00000000, 1 );
    sub_3631( ref l_U1010, "TRIG_PASSOS_SHOOT2", 75.94500000, -108.40000000, 4.56000000, 6.30000000, 11.00000000, 6.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3631( ref l_U1031, "TRIG_FINAL_WAVE_VACATE", 83.80000000, -107.76000000, 4.56000000, 12.00000000, 13.12000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3631( ref l_U1073, "TRIG_FRONT_ROW_CHAPEL", 61.01000000, -107.96000000, 4.56000000, 7.30000000, 12.00000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3631( ref l_U1052, "TRIG_DUMMY", 19.60000000, 68.57000000, 0.00000000, 2.00000000, 2.00000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_4713( ref l_U1094, "TRIG_LAST_CHAPEL_THUG", 74.11000000, -108.30000000, 4.56000000, 3.25000000, 3.25000000, 2.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3631( ref l_U1095, "TRIG_PASSOS_CHAPEL_WARN", 88.90000000, -107.97000000, 4.79000000, 13.00000000, 13.00000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3631( ref l_U1116, "TRIG_PASSOS_CHAPEL_WARN_UPSTAIRS", 90.27000000, -107.97000000, 8.36000000, 10.00000000, 13.00000000, 3.50000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_3631( ref l_U1137, "TRIGGER_DOWNSTAIRS", 91.56000000, -108.39000000, 5.04000000, 7.00000000, 13.00000000, 3.70000000, 0.00000000, 0.00000000, -13.00000000, 1 );
    sub_5053( ref l_U1212, 2, l_U1298, l_U1298, l_U1298, 1.50000000, 3.00000000, 0, 0 );
    sub_5901( ref l_U1212, 30, "POI_RP_PIANO" );
    sub_6062( ref l_U1212, 0 );
    return;
}

void sub_2274(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_3042(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_3631(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_4713(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 4, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_5053(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_5068( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_5436( iParam0 );
    return;
}

void sub_5068(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_5436(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_5515( iParam0 );
    return;
}

void sub_5515(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_5574( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_5574( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_5574( iParam0, 1 );
            }
            else
            {
                sub_5574( iParam0, 0 );
            };;;
        }
        else
        {
            sub_5574( iParam0, 0 );
        }
    }
    else
    {
        sub_5574( iParam0, 0 );
    }
    return;
}

void sub_5574(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_5901(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_5932( iParam0 );
    return;
}

void sub_5932(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_6062(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_6097()
{
    sub_802( "SBA", "P_LOAD_ASSETS_CHAPEL", "***" );
    sub_6153( g_U762, 1 );
    sub_6153( -1504197122, 1 );
    sub_6153( g_U1349, 1 );
    sub_6153( 164359972, 1 );
    sub_6153( g_U1332, 1 );
    sub_6397( "LEVEL_S_CEM_CP_10", 0, 1 );
    sub_6474( 457935336, 0 );
    sub_6474( 1381054646, 0 );
    sub_6474( 1219989804, 0 );
    sub_6397( "FACE_PASNYB", 0, 1 );
    sub_6755( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", 1 );
    return;
}

void sub_6153(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_6258( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_6258(unknown uParam0)
{
    return;
}

void sub_6397(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_6474(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_6755(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_6829()
{
    STOP_SCRIPT_STREAM( 0 );
    sub_6865( "S_CEMET_PIANO", 0, 1 );
    return;
}

void sub_6865(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_6949(unknown uParam0)
{
    sub_6965( -862236369, 1 );
    switch (uParam0)
    {
        case 0:
        case 1:
        sub_6965( 434544317, 1 );
        sub_6965( -691403429, 1 );
        break;
        case 2: break;
        case 3:
        sub_6965( -691403429, 1 );
        sub_6965( 930042831, 1 );
        break;
        case 4:
        case 5:
        sub_6965( 434544317, 1 );
        sub_6965( -691403429, 1 );
        break;
        case 6:
        sub_6965( 434544317, 1 );
        sub_6965( -691403429, 1 );
        break;
        case 7:
        sub_6965( 434544317, 1 );
        sub_6965( -691403429, 1 );
        sub_6965( 1224272620, 1 );
        break;
        case 8:
        sub_6965( 434544317, 1 );
        sub_6965( -691403429, 1 );
        break;
        case 9:
        sub_6965( 434544317, 1 );
        sub_6965( -691403429, 1 );
        break;
        case 10:
        sub_6965( 434544317, 1 );
        sub_6965( -184942895, 1 );
        sub_6965( -691403429, 1 );
        break;
    }
    return;
}

void sub_6965(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_7376()
{
    sub_802( "SBA", "P_CREATE_CHAPEL_PILLS", "***" );
    sub_7432( l_U751 );
    l_U751 = sub_7510( -4072149, 59.57000000, -107.38000000, 6.35900000, 0, 0, 0, 0, 0, 0, 1119092736 );
    return;
}

void sub_7432(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_7510(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_7683()
{
    sub_802( "SBA", "P_SETUP_MAX_FROM_CHECKPOINT", "***" );
    if (NOT (sub_7744( ref l_U752 )))
    {
        if (NOT (IS_PED_DEAD( g_U1178 )))
        {
            sub_10126( g_U1178, sub_12036( 10 ), 100, 0, 1 );
        }
    }
    return;
}

int sub_7744(unknown uParam0)
{
    sub_802( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U37 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U38 );
            sub_7939( uParam0, sub_7873() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_7873()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_7895() );
    }
    return 0;
}

void sub_7895()
{
    return GET_PLAYER_ID();
}

void sub_7939(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_802( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U37)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_8125( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_9202( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_9494( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_9841( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_9494( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_9841( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_9494( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_9841( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_10126( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_9841( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_10126( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_9841( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U37 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_10621( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_10782( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_7873(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U37)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U37 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_802( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_8125(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_8157( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_8157(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_9202(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_9494(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_6258( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_9841(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_10126(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_6258( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_10621(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_10782(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_8157( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_10854( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_10854(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

int sub_12036(unknown uParam0)
{
    return -862236369;
}

void sub_12152(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_802( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_802( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_10782( iParam1 );
        sub_12411( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_12862( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_12862( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_13094( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_12862( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_13094( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_13094( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_12862( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_13094( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_13094( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_13094( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_12862( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_13094( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_13094( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_13094( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_13094( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_14652( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U38, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_802( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_12411(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_8157( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_802( "TEH", "Ending context", 0 );
        sub_802( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_12862(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_13094(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_14652(int iParam0)
{
    sub_6258( "CHECKPOINT DATA" );
    sub_14691( iParam0->_fU4 );
    sub_14714( iParam0->_fU16 );
    sub_14714( iParam0->_fU20 );
    sub_14714( iParam0->_fU24 );
    sub_14757( iParam0->_fU28 );
    sub_14757( iParam0->_fU56 );
    sub_14757( iParam0->_fU60 );
    sub_14757( iParam0->_fU64 );
    sub_14757( iParam0->_fU68 );
    sub_14757( iParam0->_fU72 );
    sub_14757( iParam0->_fU76 );
    sub_14757( iParam0->_fU80 );
    sub_14757( iParam0->_fU84 );
    sub_14757( iParam0->_fU88 );
    sub_14757( iParam0->_fU92 );
    sub_14714( iParam0->_fU32 );
    sub_14757( iParam0->_fU36 );
    sub_14757( iParam0->_fU40 );
    sub_14757( iParam0->_fU44 );
    sub_14714( iParam0->_fU136 );
    sub_14962( iParam0->_fU140 );
    sub_14757( iParam0->_fU52 );
    sub_6258( "---nRightHolsterAttachmentEnabled: " );
    sub_14757( iParam0->_fU96 );
    sub_6258( "---nRightHolsterAttachmentToggled: " );
    sub_14757( iParam0->_fU100 );
    sub_6258( "---nLeftHolsterAttachmentEnabled: " );
    sub_14757( iParam0->_fU104 );
    sub_6258( "---nLeftHolsterAttachmentToggled: " );
    sub_14757( iParam0->_fU108 );
    sub_6258( "---nRifleHolsterAttachmentEnabled: " );
    sub_14757( iParam0->_fU112 );
    sub_6258( "---nRifleHolsterAttachmentToggled: " );
    sub_14757( iParam0->_fU116 );
    sub_6258( "---nRightHandAttachmentEnabled: " );
    sub_14757( iParam0->_fU120 );
    sub_6258( "---nRightHandAttachmentToggled: " );
    sub_14757( iParam0->_fU124 );
    sub_6258( "---nLeftHandAttachmentEnabled: " );
    sub_14757( iParam0->_fU128 );
    sub_6258( "---nLeftHandAttachmentToggled: " );
    sub_14757( iParam0->_fU132 );
    sub_14757( l_U38 );
    sub_14757( 144 );
    return;
}

void sub_14691(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_14714(unknown uParam0)
{
    return;
}

void sub_14757(unknown uParam0)
{
    return;
}

void sub_14962(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_15834(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_16113()
{
    if (l_U262 != l_U260)
    {
        sub_802( "TEH", "playing music:changed CUR FLAG", 0 );
        sub_14757( l_U260 );
        sub_14757( l_U261 );
        l_U262 = l_U260;
    }
    else if (l_U263 != l_U261)
    {
        sub_802( "TEH", "playing music:changed NEW FLAG", 0 );
        sub_14757( l_U260 );
        sub_14757( l_U261 );
        l_U263 = l_U261;
    }
    switch (l_U260)
    {
        case 1:
        AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_1_3_4_6", "", 0, 10000, 2000, -1082130432, 0 );
        l_U260 = 3;
        break;
        case 2:
        sub_802( "TEH", "playing music: CEMETERY_SONG_03 CEMETERY_SONG_03_1_3_4_6 ", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_1_3_4_6", "", 0, 10000, 2000, -1082130432, 0 );
        l_U260 = 3;
        break;
        case 3:
        if (l_U261 == 3)
        {
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_4_5_6", "", 0, 2000, 8000, -1082130432, 0 );
            l_U260 = 4;
        }
        break;
        case 4:
        if (l_U261 == 4)
        {
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_3", "", 0, 5000, 5000, -1082130432, 0 );
            l_U260 = 5;
        }
        break;
        case 5:
        if (l_U261 == 5)
        {
            AUDIO_MUSIC_SUSPEND( 5000 );
            l_U260 = 6;
        }
        break;
    }
    return;
}

void sub_16815()
{
    if (g_U826 == 10)
    {
        if (l_U1567 == 0)
        {
            if ((IS_PED_DEAD( sub_7873() )) == 1)
            {
                sub_802( "SBA", "P_HANDLE_CHECKPOINTS: player is dead, setting eFailure = STATE_FAIL_WAITING", "***" );
                l_U1567 = 2;
            }
            else if (sub_16974())
            {
                sub_802( "SBA", "HANDLE_CHECKPOINTS - Restart, setting eFailure = STATE_FAIL_WAITING", 0 );
                l_U1567 = 2;
            }
            else if (l_U1520 == 1)
            {
                if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (IS_PED_DEAD( g_U824 )))
                {
                    sub_802( "SBA", "P_HANDLE_CHECKPOINTS: Passos killed, setting eFailure = STATE_FAIL_DEATH_CAM_PASSOS", "***" );
                    l_U1567 = 1;
                }
                else if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (l_U1518))
                {
                    sub_802( "SBA", "P_HANDLE_CHECKPOINTS: Passos shot by thugs, setting eFailure = STATE_FAIL_DEATH_CAM_PASSOS", "***" );
                    l_U1566 = 0;
                    l_U1567 = 1;
                }
            };;;
        }
        sub_17794();
    }
    return;
}

int sub_16974()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U37 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_7873() )))
        {
            SET_PED_FORCED_TO_WALK( sub_7873(), 0 );
            SET_PLAYER_FORCED_AIM( sub_7895(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_7895(), 1 );
            if ((IS_PED_VISIBLE( sub_7873() )) == 0)
            {
                SET_PED_VISIBLE( sub_7873(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_17794()
{
    switch (l_U1567)
    {
        case 0: break;
        case 1:
        if (sub_17877())
        {
            SET_PED_INVINCIBLE( sub_7873(), 1 );
        }
        if (l_U1566 == 1)
        {
            l_U1567 = 2;
            sub_802( "SBA", "Disabling ALLOW_BULLET_CAMERA_TO_GAMEPLAY...", 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            sub_802( "CCB", "ePassosDeathState = PE_MOVING; eFailure - STATE_FAIL_WAITING", 0 );
        }
        else if (sub_18142())
        {
            l_U1567 = 2;
            sub_802( "CCB", "eFailure - STATE_FAIL_WAITING", 0 );
        }
        break;
        case 2:
        if (sub_22732())
        {
            l_U1567 = 3;
        }
        else if ((sub_22772( 0 )) == 1)
        {
            l_U1567 = 3;
        }
        break;
        case 3:
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            if (NOT IS_LAST_MAN_STANDING_ACTIVE())
            {
                if (NOT (IS_PED_DEAD( sub_7873() )))
                {
                    sub_802( "CCB", "Deactivating bullettime...", 0 );
                    DEACTIVATE_BULLET_TIME( 1, 0 );
                    END_POSTFX_BLENDER( 3, 0 );
                    l_U1567 = 4;
                    sub_802( "CCB", "eFailure - STATE_FAIL_CLEANUP", 0 );
                }
            }
            else
            {
                sub_802( "CCB", "Waiting for the last man standing...", 0 );
            }
        }
        else
        {
            sub_802( "CCB", "Waiting for bullet death cam...", 0 );
        }
        break;
        case 4:
        if (NOT (IS_PLAYER_DEAD( sub_7895() )))
        {
            if (NOT (IS_PED_DEAD( sub_7873() )))
            {
                SET_PLAYER_CONTROL( sub_7895(), 0, 0 );
            }
        }
        DO_SCREEN_FADE_OUT( 0 );
        sub_23961( "CEM_PASSOS4_SCRIPTED_FAIL_FX" );
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        END_CONTEXT( "CEMETERY_CHAPEL_BALCONY" );
        sub_802( "CCB", "Destroying Passos...", 0 );
        sub_20746( g_U824 );
        sub_24172( 1 );
        l_U1567 = 5;
        sub_802( "CCB", "eFailure - STATE_FAIL_RESTORE", 0 );
        break;
        case 5:
        sub_857();
        sub_2183();
        if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
        sub_6397( "FACE_PASNYB", 0, 1 );
        sub_6755( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", 1 );
        sub_25443();
        l_U1518 = 0;
        l_U1567 = 6;
        sub_802( "CCB", "eFailure - STATE_FAIL_RESTART", 0 );
        break;
        case 6:
        if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
        {
            sub_802( "CCB", "eFailure - STATE_FAIL_IDLE", 0 );
            sub_7939( ref l_U752, g_U1178 );
            sub_6829();
            if (sub_17877())
            {
                SET_PED_INVINCIBLE( sub_7873(), 0 );
            }
            l_U1568 = 1;
            l_U260 = 2;
            l_U1567 = 0;
            sub_802( "CCB", "eCheckpoint - STATE_CHECKPOINT_INIT", 0 );
        }
        else
        {
            sub_802( "CCB", "Waiting for stream requests...", 0 );
        }
        break;
    }
    return;
}

int sub_17877()
{
    if (sub_17892( sub_7873() ))
    {
        return 1;
    }
    return 0;
}

int sub_17892(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

int sub_18142()
{
    unknown uVar2;

    switch (l_U1515)
    {
        case 0:
        sub_802( "RJM", "F_HANDLE_DEATH_CAM_PASSOS: ePassosDeathMidsceneState - STATE_DEATHCAM_INIT", 0 );
        sub_18297( 1, 0, 0, 1 );
        sub_18461( l_U505 );
        sub_18562( ref l_U370 );
        sub_18562( ref l_U506 );
        sub_18562( ref l_U544 );
        sub_18562( ref l_U609 );
        sub_18562( ref l_U658 );
        uVar2 = sub_18653();
        sub_19519( ref l_U1652, 62.06467000, -113.21480000, 8.02932100, -35.94379000, -1.19396200, 39.21636000, 45, 1500 );
        sub_19758( "CEM_PASSOS4_SCRIPTED_FAIL_FX", 0 );
        sub_6474( 1219989804, 1 );
        if (ISEQ_QUERY_ENTITY_STATE( 457935336, "passos", 3 ))
        {
            sub_802( "RJM", "S_CEM_VIG_23_24 was playing, kill it.", 0 );
            ISEQ_UNREGISTER_ENTITY( 457935336, "passos" );
            sub_20143( 457935336, 0 );
        }
        if (sub_17892( g_U824 ))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( g_U824 );
            sub_20373( ref g_U824 );
            ISEQ_REGISTER_ENTITY( 1219989804, "PASSOS", g_U824, 0 );
            ISEQ_START( 1219989804 );
        }
        sub_2274( ref l_U736, 66.04000000, -112.63000000, 4.99000000, 75, uVar2, 7, 3, 2, 0, 0 );
        sub_20746( l_U735 );
        l_U735 = sub_20824( ref l_U736 );
        if (sub_17892( l_U735 ))
        {
            sub_21499( ref l_U735 );
            sub_10126( l_U735, -862236369, 25000, 0, 0 );
            REGISTER_TARGET( l_U735, g_U824 );
            SET_PED_DEFAULT_AIM_AT_PED( l_U735, g_U824 );
            TASK_AIM_GUN_AT_PED( l_U735, g_U824, -1, 0 );
        }
        sub_1201( ref l_U1683, 10, 1, 0 );
        sub_21652( ref l_U1683 );
        l_U1515 = 3;
        sub_21778( ref l_U1652 );
        SHAKE_CAM( l_U1652._fU0, sub_21869(), 0.25000000 );
        sub_802( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_START", 0 );
        break;
        case 3:
        if (sub_21986( ref l_U1683 ))
        {
            sub_1201( ref l_U1683, 750, 1, 0 );
            sub_21652( ref l_U1683 );
            l_U1515 = 1;
            sub_802( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_WAITING", 0 );
        }
        break;
        case 1:
        if (sub_21986( ref l_U1683 ))
        {
            if ((sub_17892( g_U824 )) AND (sub_17892( l_U735 )))
            {
                SET_PED_SHOOTS_AT_COORD( l_U735, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U824, 65488, 0, 0, 0 ) );
                SHAKE_CAM( l_U1652._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
                SET_PED_DEFAULT_AIM_AT_COORD( l_U735, -10.06000000, 108.19000000, 5.24000000 );
                sub_22399( g_U824 );
                sub_1201( ref l_U1683, 50, 1, 0 );
                sub_21652( ref l_U1683 );
                l_U1515 = 5;
                sub_802( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_PLAYING", 0 );
            }
        }
        break;
        case 5:
        if (sub_21986( ref l_U1683 ))
        {
            l_U1515 = 6;
            sub_802( "CCB", "ePassosDeathMidsceneState - STATE_DEATHCAM_FINISHED", 0 );
        }
        break;
        case 6:
        return 1;
        break;
    }
    return 0;
}

void sub_18297(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_7873() )))
        {
            SET_PLAYER_CONTROL( sub_7895(), 0, uParam2 );
            SET_PED_DUCKING( sub_7873(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_7873() );
            }
            SET_PED_INVINCIBLE( sub_7873(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_18461(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_18562(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_18461( (uParam0^)[I] );
    }
    return;
}

int sub_18653()
{
    int I;

    for ( I = 0; I <= (l_U370 - 1); I++ )
    {
        if (sub_17892( l_U370[I] ))
        {
            sub_802( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Confront", 0 );
            return l_U376[I]._fU20;
        }
    }
    for ( I = 0; I <= (l_U506 - 1); I++ )
    {
        if (sub_17892( l_U506[I] ))
        {
            sub_802( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Car", 0 );
            return l_U508[I]._fU20;
        }
    }
    for ( I = 0; I <= (l_U544 - 1); I++ )
    {
        if (sub_17892( l_U544[I] ))
        {
            sub_802( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Middle Wave", 0 );
            return l_U547[I]._fU20;
        }
    }
    for ( I = 0; I <= (l_U609 - 1); I++ )
    {
        if (sub_17892( l_U609[I] ))
        {
            sub_802( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Middle Wave", 0 );
            return l_U611[I]._fU20;
        }
    }
    for ( I = 0; I <= (l_U658 - 1); I++ )
    {
        if (sub_17892( l_U658[I] ))
        {
            sub_802( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Found a guy from the Middle Wave", 0 );
            return l_U663[I]._fU20;
        }
    }
    sub_802( "RJM", "GET_SCENEPED_FOR_PASSOS_DEATH - Couldn't find anyone alive...that's weird, use a default", 0 );
    return 1678996005;
}

void sub_19519(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_1201( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U763, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_19758(unknown uParam0, boolean bParam1)
{
    sub_19772( ref l_U259 );
    l_U259 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U259, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

void sub_19772(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_20143(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_20373(unknown uParam0)
{
    sub_802( "RJM", "P_SETUP_PASSOS_FOR_FAILURE_SCENE", "***" );
    if (sub_17892( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 0 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 1 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 0 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 0 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 1 );
    }
    return;
}

void sub_20746(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_20824(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_6153( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_21303( iParam0->_fU40 );
    sub_21383( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_21303(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_21383(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_21499(unknown uParam0)
{
    if (sub_17892( (uParam0^) ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_COMBAT_MOVEMENT( (uParam0^), 0 );
    }
    return;
}

void sub_21652(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

void sub_21778(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_21652( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

string sub_21869()
{
    return "WOBBLY_SHAKE";
}

int sub_21986(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_22399(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_22732()
{
    return g_U648;
}

int sub_22772(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT (sub_22833( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_7873() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1201( ref l_U43, l_U42, 1, 1 );
            sub_21652( ref l_U43 );
        }
        if (sub_21986( ref l_U43 ))
        {
            sub_802( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_7873() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_7895() )))
            {
                SET_PLAYER_CONTROL( sub_7895(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
        sub_802( "NS", "Player will QUIT", 0 );
        sub_23292();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_802( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_23292();
        return 1;
        break;
    }
    return 0;
}

int sub_22833(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_23292()
{
    sub_802( "NS", "P_PostFailRetryCleanup", 0 );
    sub_1337( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_7895() )))
    {
        SET_PLAYER_CONTROL( sub_7895(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

void sub_23961(unknown uParam0)
{
    sub_802( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_19772( ref l_U259 );
    l_U258 = 1;
    return;
}

void sub_24172(unknown uParam0)
{
    sub_802( "SBA", "P_CLEANUP_ALL", "***" );
    ISEQ_UNREGISTER_ENTITY( 457935336, "passos" );
    sub_20143( 457935336, 0 );
    sub_20143( 1381054646, 0 );
    ISEQ_UNREGISTER_ENTITY( 1219989804, "PASSOS" );
    sub_20143( 1219989804, 0 );
    sub_24295( ref l_U1212, 0 );
    sub_20746( l_U735 );
    sub_25016( ref l_U370 );
    sub_25016( ref l_U506 );
    sub_25016( ref l_U544 );
    sub_25016( ref l_U609 );
    sub_25016( ref l_U658 );
    ISEQ_UNREGISTER_ENTITY( 1100244310, "stad_sniper" );
    sub_20143( 1100244310, 0 );
    sub_20746( l_U505 );
    sub_20746( g_U824 );
    sub_7432( g_U739._fU0 );
    sub_7432( l_U749 );
    sub_7432( l_U750 );
    sub_7432( l_U751 );
    STOP_SCRIPT_STREAM( 0 );
    sub_25219( uParam0 );
    return;
}

void sub_24295(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_5574( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_5574( iParam0, 0 );
        sub_24366( iParam0, 0 );
        if ((IS_PED_DEAD( sub_7873() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_7873() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_7873(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_24366(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_24517( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_24517(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_24578( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_24578( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_24578(int iParam0)
{
    if (((IS_PED_DEAD( sub_7873() )) == 0) AND ((IS_PLAYER_DEAD( sub_7895() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_7873() )) == 1) || (((IS_PED_GETTING_UP( sub_7873() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_7873() )) == 1) || (((IS_PED_IN_COVER( sub_7873() )) == 1) || (((IS_PED_DUCKING( sub_7873() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_7873() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_25016(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_20746( (uParam0^)[I] );
    }
    return;
}

void sub_25219(boolean bParam0)
{
    sub_802( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_25443()
{
    sub_802( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", "###" );
    if ((IS_PED_DEAD( sub_7873() )) == 0)
    {
        SET_PED_RELATIONSHIP( sub_7873(), 0, 1 );
        SET_PED_RELATIONSHIP( sub_7873(), 0, 2 );
        SET_PED_RELATIONSHIP( sub_7873(), 0, 6 );
        SET_PED_RELATIONSHIP( sub_7873(), 0, 7 );
    }
    return;
}

void sub_25892()
{
    unknown uVar2;
    int iVar3;
    int iVar4;
    unknown uVar5;

    if (l_U1568 > 1)
    {
        sub_25923( ref l_U370, -1054867456 );
        sub_25923( ref l_U506, -1054867456 );
        sub_25923( ref l_U544, -1054867456 );
        sub_25923( ref l_U609, -1054867456 );
    }
    sub_26214();
    switch (l_U1568)
    {
        case 0:
        if (g_U1991[8])
        {
            if (sub_26588( 1 ))
            {
                l_U789 = 1;
                sub_29701( ref l_U1165, 500 );
                sub_802( "SBA", "P_HANDLE_EVENTS: advancing to eCS_Start", "** **" );
                l_U1568 = 1;
            }
        }
        break;
        case 1:
        sub_29814( l_U789 );
        if (NOT (DOES_PLACEMENT_EXIST( l_U751 )))
        {
            sub_7376();
        }
        sub_15834( "mid_08_cem_sh01", 0 );
        sub_6474( 457935336, 1 );
        l_U1513 = 0;
        sub_34440( 5 );
        if (sub_17877())
        {
            if (NOT (IS_PED_USING_MP3_COVER_TASK( sub_7873() )))
            {
                SNAP_PLAYER_TO_COVERPOINT( sub_7895(), "GenCover", "847B4949_CA4D949F_Corner1", 1 );
            }
            SET_PLAYER_CONTROL( sub_7895(), 1, 0 );
        }
        if (g_U826 != 10)
        {
            g_U826 = 10;
            sub_12152( ref l_U752, g_U826, g_U1178, g_U971[10]._fU0, g_U971[10]._fU12, g_U971[10]._fU16, g_U971[10]._fU20, 1 );
        }
        sub_42066();
        sub_802( "SBA", "P_HANDLE_EVENTS: advancing to eCS_WaitForMax", "** **" );
        l_U1568 = 2;
        break;
        case 2:
        if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || (sub_17877()))
        {
            if (NOT sub_42215())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
            if (IS_PED_USING_MP3_COVER_TASK( sub_7873() ))
            {
                sub_802( "SBA", "P_HANDLE_EVENTS: advancing to eCS_FirstWave", "** **" );
                l_U1568 = 3;
            }
        }
        break;
        case 3:
        if (sub_21986( ref l_U1165 ))
        {
            sub_41220( 750, 1, 0, -69.43520000, -8.77144500, 0 );
            sub_41319( 1, 1 );
        }
        if (NOT l_U790)
        {
            sub_42592();
            l_U790 = 1;
            sub_43043();
        }
        else if (NOT l_U791)
        {
            sub_43130();
        }
        if (NOT l_U793)
        {
            if ((sub_45509( ref l_U370 )) >= 5)
            {
                sub_802( "SBA", "P_HANDLE_EVENTS: eCS_FirstWave: 1st floor enemies are DEAD!", "***" );
                sub_45693();
                l_U804 = 1;
                sub_1201( ref l_U1183, 1500, 1, 0 );
                sub_21652( ref l_U1183 );
                sub_24295( ref l_U1212, 1 );
                sub_6474( 1381054646, 0 );
                l_U793 = 1;
            }
            else if (sub_45965( ref l_U1031, 0 ))
            {
                sub_802( "SBA", "P_HANDLE_EVENTS: eCS_FirstWave: Player is in tbFinalWaveVacate, new tether for piFrontDoorWave!", "***" );
                sub_45309( ref l_U1163, ref l_U370, 1 );
                uVar5 = sub_46199( ref l_U370 );
                sub_46279( ref uVar5 );
            }
        }
        if ((NOT l_U793) AND (l_U790))
        {
            if (sub_46404( l_U1095, l_U1137, 1 ))
            {
                l_U1518 = 1;
            }
        }
        if ((NOT l_U798) AND (l_U793))
        {
            sub_47556();
        }
        if (sub_47973( ref l_U1212 ))
        {
            l_U1323 = 1;
        }
        sub_49751();
        if (sub_44826( l_U863 ))
        {
            sub_51655();
            l_U798 = 1;
            START_CONTEXT( "CEMETERY_CHAPEL_BALCONY" );
            sub_802( "SBA", "P_HANDLE_EVENTS: advancing to eCS_FinalWave", "** **" );
            l_U1568 = 4;
        }
        if (sub_21986( ref l_U1183 ))
        {
            l_U805[l_U811] = 1;
            l_U811++;
        }
        sub_34440( sub_44863( ref l_U370 ) );
        break;
        case 4:
        sub_49751();
        if (l_U260 == 3)
        {
            if (IS_PED_DEAD( l_U505 ))
            {
                l_U261 = 3;
            }
        }
        if ((NOT l_U794) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
        {
            if ((sub_44826( l_U968 )) || ((IS_PED_DEAD( l_U505 )) || ((sub_44826( l_U905 )) || (sub_44826( l_U884 )))))
            {
                if (sub_52229())
                {
                    l_U811 = 4;
                    if (sub_17892( l_U505 ))
                    {
                        RESET_PED_TETHERING( l_U505 );
                        SET_PED_FLAG_BLOCK_LEANFIRE_IN_COVER( l_U505, 0 );
                    }
                    sub_29701( ref l_U1524, 10000 );
                    l_U794 = 1;
                }
            }
        }
        if (l_U794)
        {
            if (NOT l_U801)
            {
                if (sub_44826( l_U1010 ))
                {
                    sub_54077( ref l_U506 );
                    sub_54077( ref l_U544 );
                    sub_54077( ref l_U609 );
                    sub_54077( ref l_U658 );
                    sub_54428();
                    l_U647 = 0;
                    l_U801 = 1;
                }
                else
                {
                    sub_54827();
                    sub_56198();
                }
            }
            iVar3 = ((sub_44863( ref l_U506 )) + (sub_44863( ref l_U544 ))) + (sub_44863( ref l_U609 ));
            if (iVar3 > 0)
            {
                if (NOT l_U801)
                {
                    if (sub_46404( l_U1116, l_U1137, 1 ))
                    {
                        l_U1518 = 1;
                    }
                }
                else if (sub_46404( l_U1095, l_U1137, 1 ))
                {
                    l_U1518 = 1;
                }
            }
            sub_56822( iVar3 );
            iVar4 = ((sub_44863( ref l_U370 )) + (sub_44863( ref l_U658 ))) + iVar3;
            if (NOT (IS_PED_DEAD( l_U505 )))
            {
                iVar4++;
            }
            if (NOT l_U800)
            {
                if (sub_61028( iVar4 ))
                {
                    sub_1337( ref l_U812 );
                    l_U804 = 1;
                    l_U800 = 1;
                }
            }
            if ((sub_17877()) AND (iVar4 == 0))
            {
                if ((IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED()) AND (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    sub_802( "bsw", "ALLOW_BULLET_CAMERA_TO_GAMEPLAY set to false for mid_08", 0 );
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                    BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                }
                l_U1570 = 1;
                END_CONTEXT( "CEMETERY_CHAPEL_BALCONY" );
                END_CONTEXT( "CEMETERY_FUNERAL_TO_END" );
                sub_8125( l_U752._fU52 );
                l_U261 = 4;
                if ((NOT (IS_PLAYER_DOING_MELEE_GRAPPLE( sub_7895() ))) AND ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))))
                {
                    sub_16113();
                    ISEQ_UNREGISTER_ENTITY( 457935336, "passos" );
                    sub_20143( 457935336, 1 );
                    SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 11 );
                    if (IS_ARCADE_MODE_ACTIVE() == 1)
                    {
                        DISPLAY_ARCADE_MODE_LEVEL_END( "s_fav2" );
                        DO_SCREEN_FADE_IN( 0 );
                        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
                        sub_802( "TEH", "P_HANDLE_EVENTS: printing arcade after action", "** **" );
                    }
                    else
                    {
                        DISABLE_FADE_BETWEEN_SP_LEVELS();
                        sub_15834( "mid_08_cem_sh01", 1 );
                        l_U1568 = 5;
                        sub_802( "SBA", "P_HANDLE_EVENTS: advancing to eCS_Done", "** **" );
                    }
                }
            }
        }
        sub_34440( iVar4 );
        break;
        case 5:
        if (sub_62538( 1, 0, "mid_08_cem_sh01" ))
        {
            sub_802( "bsw", "ALLOW_BULLET_CAMERA_TO_GAMEPLAY set to TRUE after mid_08", 0 );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U1568 = 6;
        }
        break;
        case 6: break;
    }
    return;
}

void sub_25923(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_25955( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_25955(unknown uParam0, float fParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^) )};
        if (uVar4._fU8 < fParam1)
        {
            sub_26061( "A ped has been killed by P_PED_HEIGHT_SAFETY_CHECK", 0, 0 );
            SET_PED_HEALTH( (uParam0^), 0, 0 );
        }
    }
    return;
}

void sub_26061(unknown uParam0, string sParam1, string sParam2)
{
    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "ML";
    }
    if (IS_STRING_NULL( sParam1 ))
    {
        sParam1 = "---";
    }
    sub_802( sParam2, uParam0, sParam1 );
    return;
}

void sub_26214()
{
    switch (l_U1569)
    {
        case 0:
        sub_802( "CCB", "eOldPainless - STATE_CHALLENGE_IDLE", 0 );
        l_U1569 = 1;
        break;
        case 1:
        if (l_U1570)
        {
            if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
            {
                SCRIPT_VAR_HASH_SET_INT( 1701971384, 1 );
            }
            else
            {
                sub_802( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
            }
            sub_802( "CCB", "eOldPainless - STATE_CHALLENGE_COMPLETE", 0 );
            l_U1569 = 2;
        }
        break;
        case 2: break;
    }
    return;
}

void sub_26588(boolean bParam0)
{
    int Result;

    Result = 0;
    switch (l_U291)
    {
        case 1:
        sub_802( "RJM", "PLAY_CUTSCENE_08_05 start", 0 );
        sub_15834( ref l_U264, 1 );
        sub_18297( 1, 0, 0, 1 );
        if (bParam0)
        {
            if (sub_17877())
            {
                sub_26727( ref l_U272, 0, 1 );
                sub_27987( 1 );
                l_U290 = sub_28092();
            }
        }
        if (NOT bParam0)
        {
            sub_28351();
        }
        sub_28557();
        sub_28721();
        l_U291 = 2;
        break;
        case 2:
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        l_U291 = 3;
        break;
        case 3:
        sub_19519( ref l_U292, 57.29076000, -104.27290000, 6.79730400, -8.79861900, 0.00000000, -94.59394000, 45, 500 );
        sub_21778( ref l_U292 );
        l_U291 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
            sub_29397();
            if (NOT bParam0)
            {
                sub_29433();
            }
            Result = 1;
            sub_802( "RJM", "PLAY_CUTSCENE_08_05 end", 0 );
            l_U291 = 5;
        }
        else if (GET_CUTSCENE_TIME_MS() > 27500)
        {
            CUTSCENE_ENABLE_SKIP( 1 );
        }
        break;
    }
    return Result;
}

void sub_26727(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_26739( iParam0 );
    if ((IS_PED_DEAD( sub_7873() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_7873(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_26918( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_27146( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_7873(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_7873(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_7873(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_7873(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_7873() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_7873(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_7873(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_7873(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_7873(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_7873() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_7873(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_27146( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_7873(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_7873(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_7873(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_26739(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_26918(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_27146(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_27987(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_7873() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_7873(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_26918( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_28092();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_7873(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_28092()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_7873() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_7873(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_26918( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_7873(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_7873(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_7873(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_28351()
{
    sub_28366( g_U1332 );
    return;
}

void sub_28366(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_6258( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        WAIT( 0 );
    }
    return;
}

void sub_28557()
{
    sub_802( "RJM", "CREATE_08_05_PEDS_AND_OBJECTS - start", 0 );
    sub_2274( ref l_U324, 0, 0, 0, 0.00000000, 1862331818, 26, 6, 0, 0, 0 );
    l_U323 = sub_20824( ref l_U324 );
    sub_802( "RJM", "CREATE_08_05_PEDS_AND_OBJECTS - end", 0 );
    return;
}

void sub_28721()
{
    sub_802( "RJM", "REGISTER_PEDS_CUT_08_05 - start", 0 );
    if (sub_17877())
    {
        sub_802( "RJM", "Registering player with 08_05", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U290, "W_SB_Uzi_Aa_H", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_7873(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_7873(), g_U971[10]._fU0, g_U971[10]._fU12 );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "847B4949_CA4D949F_Corner1", 1, 1 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( -69.80328000, -8.75923800 );
    }
    if (sub_17892( l_U323 ))
    {
        sub_802( "RJM", "Registering piCut08_05Passos with 08_05_nybar_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U323, "PASS_NY_H", 1 );
    }
    sub_802( "SBA", "REGISTER_PEDS_CUT_08_05 - hiding doors", 0 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1690._fU0, g_U1690._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1697._fU0, g_U1697._fU4 );
    sub_802( "RJM", "REGISTER_PEDS_CUT_08_05 - end", 0 );
    return;
}

void sub_29397()
{
    sub_20746( l_U323 );
    return;
}

void sub_29433()
{
    sub_29448( g_U1332 );
    return;
}

void sub_29448(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_6258( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_29701(unknown uParam0, unknown uParam1)
{
    sub_1201( uParam0, uParam1, 1, 0 );
    sub_21652( uParam0 );
    return;
}

void sub_29814(boolean bParam0)
{
    sub_802( "SBA", "P_SETUP_GAMEPLAY", "***" );
    if (NOT bParam0)
    {
        sub_29868();
    }
    sub_30134();
    sub_30658();
    sub_32820();
    sub_34098( ref g_U1718, -85.00000000, 0.00000000 );
    sub_34098( ref g_U1725, 0.00000000, 85.00000000 );
    sub_34289( ref g_U1718, 1 );
    sub_34289( ref g_U1725, 1 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    return;
}

void sub_29868()
{
    unknown uVar2;

    sub_802( "ML", "P_SETUP_MAX", "---" );
    if (sub_17877())
    {
        CLEAR_PED_TASKS_IMMEDIATELY( sub_7873() );
        uVar2 = GET_INTERIOR_AT_COORDS( g_U971[10]._fU0 );
        SET_INTERIOR_ACTIVE( uVar2, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar2, GET_HASH_KEY( ref g_U1188 ) );
        sub_30007( sub_7873(), g_U971[10]._fU0, g_U971[10]._fU12 );
        SET_ROOM_FOR_PED_BY_NAME( sub_7873(), ref g_U1188 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[10]._fU16, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[10]._fU20, 1065353216, 0 );
    }
    return;
}

void sub_30007(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_30134()
{
    sub_802( "SBA", "P_CREATE_CHAPEL_PASSOS", "***" );
    sub_20746( g_U824 );
    g_U824 = sub_20824( ref l_U353 );
    if (sub_17892( g_U824 ))
    {
        SET_ROOM_FOR_PED_BY_NAME( g_U824, ref g_U1188 );
        sub_30245( ref g_U824 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U824, 1 );
        sub_10126( g_U824, -691403429, 25000, 0, 0 );
        SET_PED_GORE( g_U824, 1 );
        SET_PED_GORE_FROM_PLAYER( g_U824, 1 );
        SET_PED_GORE_FROM_NPC( g_U824, 0 );
    }
    l_U1520 = 1;
    return;
}

void sub_30245(unknown uParam0)
{
    sub_802( "SBA", "P_SETUP_PASSOS_GENERAL_ATTRIBUTES", "***" );
    if (sub_17892( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 0 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 1 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 1 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 0 );
        SET_PED_CONSUMING_AMMO( (uParam0^), 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^), 1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^), 1 );
    }
    return;
}

void sub_30658()
{
    unknown uVar2;
    int I;

    sub_802( "ML", "P_SETUP_CHAPEL_PEDS", "---" );
    sub_30716( ref l_U442, 1.00000000, 0 );
    l_U448[0] = {86.00000000, -107.46000000, 5.00000000};
    l_U448[1] = {84.50000000, -109.45000000, 5.00000000};
    l_U448[2] = {85.50000000, -111.00000000, 5.00000000};
    l_U448[3] = {83.71011000, -104.96840000, 5.00000000};
    l_U448[4] = {85.69196000, -104.58540000, 5.00000000};
    for ( I = 0; I < 5; I++ )
    {
        sub_20746( l_U370[I] );
        l_U370[I] = sub_20824( ref l_U376[I] );
        sub_31074( l_U370[I], ref l_U442 );
        if ((NOT (IS_PED_DEAD( g_U1178 ))) AND (NOT (IS_PED_DEAD( l_U370[I] ))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U370[I], 1 );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U370[I], 1 );
            TASK_STAND_STILL( l_U370[I], -1 );
            if (I == 0)
            {
                SET_PED_AI_TEMPLATE( l_U370[I], ref g_U1220 );
                SET_PED_ALERTNESS( l_U370[I], 1 );
                sub_10126( l_U370[I], -691403429, 25000, 0, 0 );
            }
            else if (I == 1)
            {
                SET_PED_AI_TEMPLATE( l_U370[I], ref g_U1220 );
                SET_PED_ALERTNESS( l_U370[I], 2 );
                sub_10126( l_U370[I], 434544317, 25000, 0, 0 );
                sub_9494( l_U370[I], -862236369, 1, 25000, 1 );
            }
            else if (I == 2)
            {
                SET_PED_AI_TEMPLATE( l_U370[I], ref g_U1220 );
                SET_PED_ALERTNESS( l_U370[I], 1 );
                sub_10126( l_U370[I], -862236369, 25000, 0, 0 );
            }
            else if (I == 3)
            {
                SET_PED_AI_TEMPLATE( l_U370[I], ref g_U1220 );
                SET_PED_ALERTNESS( l_U370[I], 2 );
                sub_10126( l_U370[I], -691403429, 25000, 0, 0 );
            }
            else
            {
                SET_PED_AI_TEMPLATE( l_U370[I], ref g_U1220 );
                SET_PED_ALERTNESS( l_U370[I], 3 );
                sub_10126( l_U370[I], -691403429, 25000, 0, 0 );
            };;;;
        }
    }
    sub_18461( l_U370[3] );
    sub_18461( l_U370[4] );
    sub_31863( ref l_U370, "WAVE1-" );
    sub_31957();
    return;
}

void sub_30716(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_31074(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_6258( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_30716( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_30716( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_31863(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_31957()
{
    sub_802( "SBA", "P_CREATE_BALCONY_SNIPER", "***" );
    sub_6474( 1100244310, 1 );
    sub_32021();
    if (sub_17892( l_U505 ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U505, 1 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U505, 1 );
        SET_PED_INVINCIBLE( l_U505, 1 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U505, 1 );
        SET_PED_GORE( l_U505, 0 );
        SET_PED_IGNORE_LOS_CHECKS( l_U505, 1 );
        SET_PED_COMBAT_MOVEMENT( l_U505, 0 );
        SET_PED_CAN_BE_TARGETTED( l_U505, 0 );
        ISEQ_REGISTER_ENTITY( 1100244310, "stad_sniper", l_U505, 0 );
        ISEQ_START( 1100244310 );
        sub_32554( l_U505, l_U492._fU0, l_U492._fU12 );
        PED_ACTION_TREE_PLAY_NODE( l_U505, "/Global/SNIPER_BEHAVIOR/SNIPER3SET_SEQ/STATES/DUCK_TO_PEEK" );
        if (sub_17892( g_U824 ))
        {
            sub_802( "SBA", "sniper registered Passos as target", "***" );
            REGISTER_TARGET( l_U505, g_U824 );
        }
        PED_SET_ACTION_INTENTION( l_U505, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    return;
}

void sub_32021()
{
    unknown uVar2;

    sub_802( "SBA", "Setting up sniper", "***" );
    sub_32098( ref l_U492, ref l_U505, -184942895, ref g_U1220, 0, 25000, 3, -862236369, 25000 );
    uVar2 = GET_WEAPON_FROM_HAND( l_U505, 0, 0 );
    return;
}

void sub_32098(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, int iParam7, unknown uParam8)
{
    unknown uVar11;

    sub_20746( (uParam1^) );
    (uParam1^) = sub_20824( uParam0 );
    if (sub_17892( (uParam1^) ))
    {
        uVar11 = sub_10126( (uParam1^), uParam2, uParam5, 0, 1 );
        if (iParam7 != 0)
        {
            sub_9494( (uParam1^), iParam7, 0, uParam8, 0 );
        }
        SET_PED_AI_TEMPLATE( (uParam1^), uParam3 );
        SET_PED_ALERTNESS( (uParam1^), uParam6 );
        switch (uParam4)
        {
            case 0: break;
            case 1:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            break;
            case 2:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            break;
            case 3:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            break;
        }
    }
    return;
}

void sub_32554(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_32820()
{
    sub_802( "SBA", "P_CREATE_CHAPEL_PLACEMENTS", "***" );
    sub_32876();
    sub_7432( l_U749 );
    l_U749 = CREATE_AMMOBAG_PLACEMENT_ROTATE( 80.61000000, -109.30000000, 8.58000000, 0.00000000, 0.00000000, 0.23000000, 0, -1.00000000, 0, 1119092736 );
    sub_33654( l_U749 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U749, ref g_U1188 );
    sub_7432( l_U750 );
    l_U750 = sub_7510( -2117698134, 81.00000000, -108.75000000, 8.75300000, -1.57000000, -0.39500000, 3.25000000, 0, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U750, ref g_U1188 );
    return;
}

void sub_32876()
{
    sub_802( "CO", "P_CREATE_S_NYC_GG_6M_03", 0 );
    sub_32988( ref g_U739, g_U762, -957306817, 1020613872, 59.40000000, -107.92000000, 5.43000000, 0.00000000, 0.00000000, 0.00000000, "gtaMloRoom02" );
    sub_33117( ref g_U739 );
    return;
}

void sub_32988(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_802( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_33117(int iParam0)
{
    sub_802( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_33178( iParam0->_fU12 )) == 1)
        {
            sub_802( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_802( "CO", "has never been collected.", 0 );
        }
        if ((sub_33178( iParam0->_fU12 )) == 0)
        {
            sub_7432( iParam0->_fU0 );
            iParam0->_fU0 = sub_7510( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_802( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_802( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_33178(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_33654(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        SET_AMMOBAG_REGEN_TIME( uParam0, 10.00000000 );
        SET_AMMOBAG_REGEN_RANGE( uParam0, 3.00000000 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1088031219, 45 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 954369040, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1138793073, 95 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1087746638, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1295933220, 30 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1383321053, 85 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1481241171, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1889644301, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -790090695, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1742569970, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1575030772, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1622373246, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 558118158, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, -1701914198, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 1126469201, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 936600426, 0 );
        SET_AMMOBAG_AMMO_AMOUNT( uParam0, 205668857, 0 );
    }
    return;
}

void sub_34098(int iParam0, float fParam1, float fParam2)
{
    if ((sub_34110( iParam0 )) == 0)
    {
        sub_34176( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

int sub_34110(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_34176(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_34289(int iParam0, unknown uParam1)
{
    if ((sub_34110( iParam0 )) == 0)
    {
        sub_34176( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_34440(int iParam0)
{
    if (l_U1513 > 0)
    {
        if (sub_34462())
        {
            sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Max Shot near Passos", 0 );
            sub_34630();
            PED_SET_ACTION_INTENTION( g_U824, 58, 1000, 0, 0, 0 );
        }
    }
    switch (l_U1513)
    {
        case -1: break;
        case 0:
        if (sub_17892( g_U824 ))
        {
            if (NOT (ISEQ_QUERY_STATE( 457935336, 3 )))
            {
                sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS: CHapel VIG not running - starting now", 0 );
                sub_32554( g_U824, l_U366, l_U369 );
                CLEAR_PED_TASKS_IMMEDIATELY( g_U824 );
                ISEQ_REGISTER_ENTITY( 457935336, "passos", g_U824, 0 );
                ISEQ_START( 457935336 );
            }
        }
        sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Setup done: Going to State eCIS_PLAYING", 0 );
        l_U1513 = 2;
        break;
        case 2:
        if (l_U804)
        {
            if (sub_17892( g_U824 ))
            {
                PED_FINISH_ACTION_INTENTION( g_U824, 56 );
                sub_36235( g_U824 );
                sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - VIG24: Going to State eCIS_CHECKS", 0 );
                l_U1513 = 3;
                return;
            }
        }
        if ((l_U1211 < 2) AND (iParam0 == 1))
        {
            sub_36235( g_U824 );
            sub_36395();
            if (sub_17892( g_U824 ))
            {
                PED_SET_ACTION_INTENTION( g_U824, 56, -1, 0, 0, 0 );
                PED_SET_ACTION_INTENTION( g_U824, 55, -1, 0, 0, 0 );
            }
            sub_1201( ref l_U1201, l_U1210, 1, 0 );
            sub_21652( ref l_U1201 );
            l_U1514 = 0;
            sub_802( "SBA", "Last enemy!  Advancing to eCIS_FINISHED!", "***" );
            l_U1513 = 5;
            return;
        }
        if (NOT l_U803)
        {
            if (sub_37117())
            {
                sub_802( "SBA", "Chapel: Passos can fire!", "***" );
                if (sub_17892( g_U824 ))
                {
                    if (NOT l_U1523)
                    {
                        PED_SET_ACTION_INTENTION( g_U824, 56, -1, 0, 0, 0 );
                        PED_SET_ACTION_INTENTION( g_U824, 55, 4000, 0, 0, 0 );
                        sub_37671( "SCMT_PCDFS", ref l_U1571 );
                        l_U1523 = 1;
                    }
                    else
                    {
                        PED_SET_ACTION_INTENTION( g_U824, 56, -1, 0, 0, 0 );
                    }
                }
                l_U803 = 1;
            }
        }
        else if (NOT sub_37117())
        {
            sub_802( "SBA", "Chapel: Passos stops firing!", "***" );
            if (sub_17892( g_U824 ))
            {
                PED_FINISH_ACTION_INTENTION( g_U824, 56 );
            }
            sub_36235( g_U824 );
            l_U803 = 0;
        }
        if (l_U1211 < 2)
        {
            if (sub_21986( ref l_U1201 ))
            {
                if (NOT l_U802)
                {
                    sub_802( "SBA", "Chapel: Passos is deadly!", "***" );
                    l_U802 = 1;
                    if (sub_17892( g_U824 ))
                    {
                        PED_SET_ACTION_INTENTION( g_U824, 55, -1, 0, 0, 0 );
                    }
                }
                sub_1201( ref l_U1201, l_U1210, 1, 0 );
                sub_21652( ref l_U1201 );
            }
        }
        if (l_U802)
        {
            if (sub_17892( g_U824 ))
            {
                if (PED_ANIM_EVENT( g_U824, -1531652494 ))
                {
                    if (sub_17892( l_U734 ))
                    {
                        sub_802( "SBA", "Passos KILLING TARGET, resetting to not deadly", "***" );
                        sub_38256( l_U734 );
                        l_U1211++;
                        sub_802( "SBA", "Passos has killed this many:", "" );
                        sub_14757( l_U1211 );
                        if (sub_17892( g_U824 ))
                        {
                            PED_FINISH_ACTION_INTENTION( g_U824, 55 );
                        }
                        l_U802 = 0;
                    }
                }
            }
        }
        break;
        case 3:
        if (NOT l_U804)
        {
            if (sub_17892( g_U824 ))
            {
                sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - VIG23: Returning to State eCIS_PLAYING", 0 );
                l_U1513 = 2;
            }
        }
        else if (l_U647)
        {
            if (l_U812._fU20 == 0)
            {
                sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Starting speech timer", 0 );
                if (NOT l_U794)
                {
                    sub_29701( ref l_U812, GET_RANDOM_INT_IN_RANGE( 12000, 15000 ) );
                }
                else if (iParam0 > 1)
                {
                    sub_29701( ref l_U812, GET_RANDOM_INT_IN_RANGE( 15000, 20000 ) );
                }
                else
                {
                    sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Speech timer is OFF", 0 );
                    l_U812._fU20 = 1;
                }
            }
            if (sub_21986( ref l_U812 ))
            {
                sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Speech timer is done!", 0 );
                sub_14757( l_U811 );
                l_U805[l_U811] = 1;
                l_U811++;
                if (NOT l_U794)
                {
                    if (l_U811 > 3)
                    {
                        l_U811 = 0;
                    }
                }
                else if (l_U811 > 4)
                {
                    l_U811 = 2;
                }
            }
            if (l_U805[0])
            {
                sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Playing speech 0", 0 );
                sub_39063( "SCMT_VIG24A", ref l_U1591[0] );
                l_U805[0] = 0;
            }
            if (l_U805[1])
            {
                sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Playing speech 1", 0 );
                sub_39063( "SCMT_VIG24B", ref l_U1591[1] );
                l_U805[1] = 0;
            }
            if (l_U805[2])
            {
                sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Playing speech 2", 0 );
                if (NOT l_U796)
                {
                    sub_39063( "SCMT_VIG24C", ref l_U1591[2] );
                }
                else
                {
                    sub_37671( "SCMT_CPBA", ref l_U1591[2] );
                }
                l_U805[2] = 0;
            }
            if (l_U805[3])
            {
                sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Playing speech 3", 0 );
                sub_39063( "SCMT_VIG24D", ref l_U1591[3] );
                l_U805[3] = 0;
            }
            if (l_U805[4])
            {
                sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - Playing speech 4", 0 );
                sub_39063( "SCMT_VIG24E", ref l_U1591[4] );
                l_U805[4] = 0;
            }
        }
        break;
        case 5:
        if (l_U1568 < 4)
        {
            if (l_U1514 != -1)
            {
                sub_39889();
            }
            else
            {
                sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS: Passos bulletcam done - returning to gamecam", 0 );
                sub_41220( 0, 0, 0, -859915232, -859915232, 0 );
                sub_41319( 1, 1 );
                DESTROY_ALL_CAMS();
                l_U1513 = 2;
            }
        }
        else if (NOT l_U804)
        {
            sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS: Going from eCIS_FINISHED to eCIS_PLAYING", 0 );
            l_U1513 = 2;
        }
        if (((l_U1514 == 1) || (l_U1514 == 0)) AND (l_U804))
        {
            if (sub_17892( g_U824 ))
            {
                PED_FINISH_ACTION_INTENTION( g_U824, 56 );
                sub_36235( g_U824 );
                if (l_U1514 != -1)
                {
                    l_U1514 = -1;
                }
                sub_802( "SBA", "UPDATE_PASSOS_CHAPEL_VIGS - VIG24: Going from eCIS_FINISHED to eCIS_CHECKS", 0 );
                l_U1513 = 3;
            }
        }
        break;
    }
    return;
}

int sub_34462()
{
    int iVar2;

    if (((IS_PED_DEAD( g_U824 )) == 0) AND ((DOES_PED_EXIST( g_U824 )) == 1))
    {
        if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U824 ), 4.00000000, ref iVar2 ))
        {
            if (iVar2 == sub_7873())
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_34630()
{
    sub_802( "SBA", "P_DIAL_PASSOS_FLINCH", "---" );
    if ((NOT (IS_PED_DEAD( g_U824 ))) AND (NOT (IS_PED_DEAD( g_U1178 ))))
    {
        sub_34716( ref l_U1581 );
        sub_34798( 0, g_U1178, "MAX", ref l_U1581, 2, 0 );
        sub_34798( 1, g_U824, "PASSOS", ref l_U1581, 2, 0 );
        sub_35042( "SCMT_VIG24F", ref l_U1581, 8, 1 );
    }
    return;
}

void sub_34716(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_34798(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_35042(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_35066( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_35066(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_35121( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_35121(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_35156( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_35650( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_35156(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_35650(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_36235(unknown uParam0)
{
    if (sub_17892( uParam0 ))
    {
        CLEAR_LOCKED_TARGET( uParam0 );
        CLEAR_PED_DEFAULT_AIM( uParam0 );
    }
    return;
}

void sub_36395()
{
    int I;
    unknown uVar3;

    sub_802( "SBA", "P_MOVE_LAST_CHAPEL_THUG_FOR_DEATH", "***" );
    l_U734 = nil;
    for ( I = 0; I <= 4; I++ )
    {
        if (sub_17892( l_U370[I] ))
        {
            sub_802( "SBA", "P_MOVE_LAST_CHAPEL_THUG_FOR_DEATH: last enemy from first wave:", "***" );
            sub_14757( I );
            l_U734 = l_U370[I];
        }
    }
    if (sub_17892( l_U734 ))
    {
        if (sub_17877())
        {
            RESET_PED_TETHERING( l_U734 );
            SET_PED_COMBAT_MOVEMENT( l_U734, 0 );
            REGISTER_TARGET( l_U734, sub_7873() );
            SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U734, 1 );
            OPEN_SEQUENCE_TASK( ref uVar3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, l_U1334, sub_7873(), 3, 1, 0.25000000, 0, 1, 0 );
            CLOSE_SEQUENCE_TASK( uVar3 );
            CLEAR_PED_TASKS( l_U734 );
            TASK_PERFORM_SEQUENCE( l_U734, uVar3 );
            CLEAR_SEQUENCE_TASK( uVar3 );
        }
        sub_36790( g_U824, l_U734 );
    }
    else
    {
        SCRIPT_ASSERT( "P_MOVE_LAST_CHAPEL_THUG_FOR_DEATH: No valid target!", 0 );
    }
    return;
}

void sub_36790(unknown uParam0, unknown uParam1)
{
    if (sub_17892( uParam0 ))
    {
        if (sub_17892( uParam1 ))
        {
            sub_36235( uParam0 );
            REGISTER_TARGET( uParam0, uParam1 );
            SET_LOCKED_TARGET( uParam0, uParam1 );
            SET_PED_DEFAULT_AIM_AT_PED( uParam0, uParam1 );
        }
    }
    return;
}

int sub_37117()
{
    int I;

    if (sub_17892( l_U734 ))
    {
        if ((NOT (sub_37153( l_U734, l_U1010 ))) AND (NOT (sub_37153( l_U734, l_U989 ))))
        {
            sub_802( "SBA", "Passos' curent target is not in shoot boxes.", "***" );
            sub_36235( g_U824 );
            l_U734 = nil;
            return 0;
        }
    }
    for ( I = 0; I <= 4; I++ )
    {
        if (sub_17892( l_U370[I] ))
        {
            if (sub_17892( g_U824 ))
            {
                if ((sub_37153( l_U370[I], l_U1010 )) || (sub_37153( l_U370[I], l_U989 )))
                {
                    if (NOT (sub_17892( l_U734 )))
                    {
                        sub_802( "SBA", "Selecting first wave target: ", "***" );
                        sub_14757( I );
                        sub_36790( g_U824, l_U370[I] );
                        l_U734 = l_U370[I];
                    }
                    return 1;
                }
            }
        }
    }
    return 0;
}

int sub_37153(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_37671(unknown uParam0, unknown uParam1)
{
    sub_802( "SBA", "P_PLAY_DIAL_PASSOS", "***" );
    if (sub_17892( g_U824 ))
    {
        if (NOT (IS_PED_DEAD( sub_7873() )))
        {
            sub_34716( uParam1 );
            sub_34798( 1, g_U824, "PASSOS", uParam1, 2, 0 );
            sub_34798( 0, sub_7873(), "MAX", uParam1, 2, 0 );
            sub_35042( uParam0, uParam1, 8, 1 );
        }
    }
    return;
}

void sub_38256(unknown uParam0)
{
    if (sub_17892( uParam0 ))
    {
        START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "Blood_headsoup_S_01", uParam0, 0.25000000, 0, 0, 0, 0, 0, 57704, 2 );
        sub_22399( uParam0 );
    }
    return;
}

void sub_39063(unknown uParam0, unknown uParam1)
{
    sub_802( "SBA", "P_DIAL_PAS_PINNED_DOWN", "---" );
    if ((NOT (sub_39148( l_U1551 ))) AND ((NOT (IS_PED_DEAD( g_U824 ))) AND (NOT (IS_PED_DEAD( g_U1178 )))))
    {
        sub_34716( uParam1 );
        sub_34798( 0, g_U1178, "MAX", uParam1, 2, 0 );
        sub_34798( 1, g_U824, "PASSOS", uParam1, 2, 0 );
        sub_35042( uParam0, uParam1, 8, 1 );
    }
    return;
}

int sub_39148(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_39161( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_39161(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_39889()
{
    switch (l_U1514)
    {
        case 0:
        if (sub_39961( l_U734, l_U1094 ))
        {
            if (sub_21986( ref l_U1201 ))
            {
                sub_40041( ref l_U1094, l_U734, 1 );
                sub_802( "SBA", "P_PASSOS_CHAPEL_BULLETCAM: Last enemy is in position, going to eCPBC_Start!", "***" );
                l_U1514 = 1;
            }
        }
        break;
        case 1:
        if ((NOT (IS_PLAYER_DOING_MELEE_GRAPPLE( sub_7895() ))) AND ((NOT (IS_PED_DEAD( g_U824 ))) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))))
        {
            if (PED_ANIM_EVENT( g_U824, 1477325977 ))
            {
                sub_802( "SBA", "P_PASSOS_CHAPEL_BULLETCAM: Passos has shot!", "***" );
                l_U1514 = 2;
            }
        }
        break;
        case 2:
        sub_802( "SBA", "P_PASSOS_CHAPEL_BULLETCAM: State = eCPBC_ShowPassos", "***" );
        sub_1201( ref l_U1192, 400, 1, 0 );
        sub_21652( ref l_U1192 );
        l_U1514 = 3;
        break;
        case 3:
        if (sub_21986( ref l_U1192 ))
        {
            sub_802( "SBA", "P_PASSOS_CHAPEL_BULLETCAM: Passos cam shot done", "***" );
            if (sub_17892( g_U824 ))
            {
                PED_FINISH_ACTION_INTENTION( g_U824, 56 );
                PED_FINISH_ACTION_INTENTION( g_U824, 55 );
            }
            sub_1201( ref l_U1192, 5, 1, 0 );
            sub_21652( ref l_U1192 );
            l_U1514 = 4;
        }
        break;
        case 4:
        if (sub_21986( ref l_U1192 ))
        {
            if (sub_17892( l_U734 ))
            {
                sub_802( "SBA", "P_PASSOS_CHAPEL_BULLETCAM: killing last thug!", "***" );
                START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "blood_headshot", l_U734, 0, 0, 0, 0, 0, 0, 65488, 2.00000000 );
                START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "blood_headshot_exit", l_U734, 0, 0, 0, 0, 0, 0, 65488, 2.00000000 );
                sub_40832( l_U734, g_U824 );
                l_U1514 = -1;
            }
            else
            {
                l_U1514 = -1;
            }
        }
        break;
    }
    return;
}

int sub_39961(unknown uParam0, unknown uParam1)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, uParam1._fU0 );
    }
    return 0;
}

void sub_40041(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_40832(unknown uParam0, unknown uParam1)
{
    if (NOT (sub_17892( uParam0 )))
    {
        SCRIPT_ASSERT( "PED_KILL_HEADSOUP_WITH_IMPACT was passed in invalid target", 0 );
        return;
    }
    if (NOT (sub_17892( uParam1 )))
    {
        SCRIPT_ASSERT( "PED_KILL_HEADSOUP_WITH_IMPACT was passed in invalid shooter", 0 );
        return;
    }
    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( uParam1, 55060, 0, 0, 0 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( uParam0, 65488, 0, 0, 0 ), 100, 1, -1074756423, 0 );
    sub_38256( uParam0 );
    return;
}

void sub_41220(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_41319(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_7873() )))
    {
        SET_PLAYER_CONTROL( sub_7895(), 1, 0 );
        SET_PED_INVINCIBLE( sub_7873(), 0 );
        if (bParam0)
        {
            sub_41400();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_41400()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_7873() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_7873(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_7873(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_7873(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_7873(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_42066()
{
    sub_802( "CCB", "P_START_SP_CHALLENGES", 0 );
    return;
}

int sub_42215()
{
    if (l_U258)
    {
        sub_802( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U258 = 0;
        return 1;
        break;
    }
    sub_802( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

void sub_42592()
{
    sub_802( "SBA", "P_DEPLOY_WAVE1", "***" );
    sub_42693( l_U370[0], 0, l_U448[0], "GenCover", "847B4949_3D2786E4_Corner2" );
    sub_42693( l_U370[1], 1000, l_U448[1], "GenCover", "847B4949_3D2786E4_Corner1" );
    sub_42693( l_U370[2], 1750, l_U448[2], "GenCover", "847B4949_FFEF8D71_Corner1" );
    return;
}

void sub_42693(unknown uParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    unknown uVar9;

    sub_802( "SBA", "P_TASK_WAVE1", "***" );
    if ((sub_17877()) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        OPEN_SEQUENCE_TASK( ref uVar9 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (iParam1 != 0)
        {
            TASK_AIM_GUN_AT_COORD( 0, 87.43000000, -106.67000000, 5.99000000, iParam1, 1 );
        }
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uParam2, 3, -1, 1048576000, 0, 0 );
        TASK_SEARCH_FOR_PED_AT_COVER_POINT( 0, uParam5, uParam6, 1 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar9 );
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        TASK_PERFORM_SEQUENCE( uParam0, uVar9 );
        CLEAR_SEQUENCE_TASK( uVar9 );
    }
    return;
}

void sub_43043()
{
    sub_802( "SBA", "P_INIT_PASSOS_WARNING_DEATH", "***" );
    l_U217 = 1;
    return;
}

void sub_43130()
{
    switch (l_U482)
    {
        case 0:
        if (sub_43192())
        {
            sub_802( "SBA", "P_HAVE_WAVE1_ATTACK: 0 reacting", "***" );
            sub_44043( ref l_U370[l_U482], 0 );
            sub_44103( ref l_U370[l_U482], l_U1159, 1 );
            sub_29701( ref l_U483, 300 );
            l_U482++;
        }
        break;
        case 1:
        if (sub_21986( ref l_U483 ))
        {
            sub_802( "SBA", "P_HAVE_WAVE1_ATTACK: 1 reacting", "***" );
            if (sub_17892( l_U370[l_U482] ))
            {
                SET_PED_SUGGESTED_COVER_POINT( l_U370[l_U482], "GenCover", "847B4949_3D2786E4_Corner2" );
            }
            sub_44043( ref l_U370[l_U482], 0 );
            sub_44428( ref l_U370[l_U482], g_U824 );
            sub_44103( ref l_U370[l_U482], l_U1159, 1 );
            TASK_COMBAT_PED( l_U370[l_U482], g_U824 );
            sub_29701( ref l_U483, 200 );
            l_U482++;
        }
        break;
        case 2:
        if (sub_21986( ref l_U483 ))
        {
            sub_802( "SBA", "P_HAVE_WAVE1_ATTACK: 2 reacting", "***" );
            sub_44043( ref l_U370[l_U482], 0 );
            sub_44428( ref l_U370[l_U482], g_U824 );
            sub_44103( ref l_U370[l_U482], l_U1159, 1 );
            TASK_COMBAT_PED( l_U370[l_U482], g_U824 );
            sub_802( "SBA", "Starting first Passos' deadly timer!", "***" );
            sub_1201( ref l_U1201, 6000, 1, 0 );
            sub_21652( ref l_U1201 );
            sub_29701( ref l_U483, 5000 );
            l_U482++;
        }
        break;
        case 3:
        if (((sub_44863( ref l_U370 )) < 4) || ((NOT (sub_44826( l_U821 ))) || (sub_21986( ref l_U483 ))))
        {
            sub_802( "SBA", "P_HAVE_WAVE1_ATTACK: and the rest are active", "***" );
            sub_45023( l_U370[3] );
            sub_45023( l_U370[4] );
            sub_45138( ref l_U370, 0 );
            sub_44428( ref l_U370[3], sub_7873() );
            sub_44428( ref l_U370[4], sub_7873() );
            sub_45240( ref l_U370, l_U1158, 1 );
            sub_45309( ref l_U1159, ref l_U370, 1 );
            sub_802( "SBA", "P_HAVE_WAVE1_ATTACK: Setting bWave1InCombat = TRUE", "***" );
            l_U791 = 1;
            l_U482++;
        }
        break;
        case 4: break;
    }
    return;
}

int sub_43192()
{
    int I;
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    if (sub_43207( ref l_U370, ref iVar3 ))
    {
        sub_802( "SBA", "F_SHOULD_WAVE1_REACT...", "***" );
        return 1;
    }
    if (sub_17877())
    {
        if (NOT (IS_PED_USING_MP3_COVER_TASK( sub_7873() )))
        {
            sub_802( "SBA", "F_SHOULD_WAVE1_REACT: Max out of cover!", "***" );
            return 1;
        }
    }
    for ( I = 0; I <= 4; I++ )
    {
        if (sub_17892( l_U370[I] ))
        {
            uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U370[I] )};
            if (HAS_SHOT_BEEN_FIRED_IN_AREA( uVar4, 30, 0, ref iVar3 ))
            {
                if ((iVar3 == g_U824) || (iVar3 == sub_7873()))
                {
                    sub_802( "SBA", "F_SHOULD_WAVE1_REACT: Max or Passos shot!", "***" );
                    return 1;
                }
            }
            if (uVar4._fU0 < 76.00000000)
            {
                sub_802( "SBA", "F_SHOULD_WAVE1_REACT: Enemy got too close!", "***" );
                return 1;
            }
        }
    }
    return 0;
}

int sub_43207(unknown uParam0, unknown uParam1)
{
    int I;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    int iVar8;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (NOT (sub_37153( (uParam0^)[I], l_U1031 )))
            {
                if (HAS_PED_BEEN_DAMAGED_BY_PED( (uParam0^)[I], sub_7873(), 0 ))
                {
                    CLEAR_PED_LAST_DAMAGE_ENTITY( (uParam0^)[I] );
                    sub_802( "SBA", "F_HAS_PED_ARRAY_BEEN_ATTACKED_BY_PLAYER: YES! Ped was Shot!", "***" );
                    (uParam1^) = (uParam0^)[I];
                    return 1;
                }
                uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I] )};
                if (HAS_BULLET_IMPACTED_IN_AREA( uVar5, 4.00000000, ref iVar8 ))
                {
                    if (iVar8 == sub_7873())
                    {
                        sub_802( "SBA", "F_HAS_PED_ARRAY_BEEN_ATTACKED_BY_PLAYER: YES! Bullet Impact!", "***" );
                        (uParam1^) = (uParam0^)[I];
                        return 1;
                    }
                }
            }
        }
    }
    return 0;
}

void sub_44043(unknown uParam0, unknown uParam1)
{
    if (sub_17892( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

void sub_44103(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (sub_17892( (uParam0^) ))
    {
        RESET_PED_TETHERING( (uParam0^) );
        sub_44142( ref uParam1, (uParam0^), uParam2 );
    }
    return;
}

void sub_44142(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_44428(unknown uParam0, unknown uParam1)
{
    if ((sub_17892( uParam1 )) AND (sub_17892( (uParam0^) )))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_44826(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_37153( sub_7873(), uParam0 );
}

void sub_44863(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_45023(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_45138(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_44043( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_45240(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_44103( ref (uParam0^)[I], uParam1, uParam2 );
    }
    return;
}

void sub_45309(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < (uParam1^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam1^)[I] )))
        {
            sub_44142( uParam0, (uParam1^)[I], uParam2 );
        }
    }
    return;
}

void sub_45509(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_45693()
{
    unknown uVar2;

    sub_802( "SBA", "P_BALCONY_ATTACK", "***" );
    if ((NOT (IS_PED_DEAD( g_U824 ))) AND (NOT (IS_PED_DEAD( l_U505 ))))
    {
        CLEAR_PED_TASKS( l_U505 );
        PED_SET_ACTION_INTENTION( l_U505, 48, 1200, 0.00000000, 0.00000000, 0.00000000 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_AIM_GUN_AT_PED( 0, g_U824, 500, 0 );
        TASK_SHOOT_AT_PED( 0, g_U824, -1, 0, 0, 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U505, uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    return;
}

void sub_45965(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_37153( sub_7873(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_46199(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            return (uParam0^)[I];
        }
    }
    return nil;
}

void sub_46279(unknown uParam0)
{
    if ((sub_17877()) AND (sub_17892( (uParam0^) )))
    {
        sub_46315( uParam0, sub_7873() );
    }
    return;
}

void sub_46315(unknown uParam0, unknown uParam1)
{
    if ((sub_17892( uParam1 )) AND (sub_17892( (uParam0^) )))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

int sub_46404(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, boolean bParam42)
{
    switch (l_U217)
    {
        case 0: break;
        case 1: l_U217 = 2;
        case 2:
        if (bParam42)
        {
            if (sub_44826( uParam21 ))
            {
                SCRIPT_ASSERT( "F_HANDLE_PASSOS_WARNING_DEATH: How did player hit death box before warning box?", 0 );
                l_U217 = 4;
            }
            else if (sub_44826( uParam0 ))
            {
                sub_802( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH: Player entered Passos warning box, passos in danger", "***" );
                sub_46717();
                l_U217 = 3;
            }
        }
        else if (NOT (sub_44826( uParam21 )))
        {
            SCRIPT_ASSERT( "F_HANDLE_PASSOS_WARNING_DEATH: How did player hit death box before warning box?", 0 );
            l_U217 = 4;
        }
        else if (NOT (sub_44826( uParam0 )))
        {
            sub_802( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH: Player exited Passos warning box, passos in danger", "***" );
            sub_46717();
            l_U217 = 3;
        };;;
        break;
        case 3:
        if (((NOT (sub_44826( uParam21 ))) AND (NOT bParam42)) || ((sub_44826( uParam21 )) AND (bParam42)))
        {
            sub_802( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH: Player entered Passos death box", "***" );
            l_U217 = 4;
        }
        else if (((sub_44826( uParam0 )) AND (NOT bParam42)) || ((NOT (sub_44826( uParam0 ))) AND (bParam42)))
        {
            sub_802( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH: Player returned from warning box, Passos out of danger", "***" );
            l_U217 = 2;
        }
        break;
        case 4:
        sub_802( "SBA", "F_HANDLE_PASSOS_WARNING_DEATH: returning TRUE - going to ePWDS_Idle", "***" );
        l_U217 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_46717()
{
    sub_802( "SBA", "P_DIAL_PASSOS_WARNING", "***" );
    if (NOT (IS_PED_DEAD( sub_7873() )))
    {
        sub_34716( ref l_U166 );
        sub_34798( 1, sub_7873(), "PASSOS", ref l_U166, 2, 0 );
        sub_34798( 0, sub_7873(), "MAX", ref l_U166, 2, 0 );
        sub_35042( "SNYC_HBPH", ref l_U166, 8, 1 );
    }
    return;
}

void sub_47556()
{
    if ((NOT (IS_PED_DEAD( sub_7873() ))) AND ((NOT (IS_PED_DEAD( g_U824 ))) AND (NOT (IS_PED_DEAD( l_U505 )))))
    {
        if ((l_U648) || (IS_PED_IN_CROSSHAIR_CYLINDER( l_U505, 1.75000000, 200, 0, -1082130432 )))
        {
            if (NOT l_U796)
            {
                sub_802( "ML", "P_HANDLE_BALCONY_PED_COVER  STARTS COVER", "---" );
                sub_47720();
                l_U796 = 1;
                sub_1337( ref l_U1174 );
                sub_21652( ref l_U1174 );
            }
        }
        else if (sub_21986( ref l_U1174 ))
        {
            if (NOT l_U648)
            {
                sub_802( "ML", "P_HANDLE_BALCONY_PED_COVER  ENDS COVER", "---" );
                sub_45693();
                l_U796 = 0;
            }
        }
    }
    return;
}

void sub_47720()
{
    sub_802( "SBA", "P_STOP_BALCONY_ATTACK", "***" );
    if (sub_17892( l_U505 ))
    {
        CLEAR_PED_TASKS( l_U505 );
        PED_SET_ACTION_INTENTION( l_U505, 47, 1200, 0.00000000, 0.00000000, 0.00000000 );
    }
    return;
}

int sub_47973(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_7873() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_7873() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_37153( sub_7873(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_37153( sub_7873(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_24517( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_24578( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_48855() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_24295( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_5574( iParam0, 0 );
                            sub_24366( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_5574( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_7873() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_7873(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_5574( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_24366( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_7873() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_7873(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_7873() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_7873(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_7873() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_7873(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_5574( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_24366( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_7873() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_7873() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_7873() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_7873(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_24366( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_48855()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_49751()
{
    int I;

    switch (l_U1323)
    {
        case 1:
        sub_802( "GA", "e_Chapel_PianoNIS = eNIS_STATE_SETUP", 0 );
        sub_18297( 1, 0, 0, 1 );
        sub_6474( 1381054646, 1 );
        PLAY_SCRIPT_STREAM_FROM_COORD( 90.51000000, -111.16000000, 5.77000000, 0 );
        l_U647 = 0;
        for ( I = 0; I <= (l_U1591 - 1); I++ )
        {
            if (sub_39148( l_U1591[I] ))
            {
                sub_49952( ref l_U1591[I], 1 );
            }
        }
        l_U648 = 1;
        if (NOT (IS_PED_DEAD( sub_7873() )))
        {
            sub_26727( ref l_U1305, 1, 1 );
            sub_50097( l_U1305, 0 );
            sub_27987( 1 );
            CLEAR_PED_TASKS_IMMEDIATELY( sub_7873() );
            RESET_PLAYER_INPUT_GAIT( 0 );
            PED_ACTION_TREE_PLAY_NODE( sub_7873(), "/Global/Player" );
            sub_32554( sub_7873(), l_U1301, l_U1304 );
            sub_50277( sub_7873() );
            SET_PED_DEFAULT_AIM_AHEAD( sub_7873() );
        }
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_10", "VIG_25_CEM_MAX_PLAY_PIANO_FWD_CAM", 1, 88.75148000, -110.74680000, 6.66706300, 65446, 0, 0 );
        ISEQ_REGISTER_ENTITY( 1381054646, "Max", sub_7873(), 0 );
        ISEQ_START( 1381054646 );
        AUDIO_MUSIC_ADJUST_VOLUME( -24.00000000 );
        sub_24295( ref l_U1212, 0 );
        sub_802( "GA", "e_Chapel_PianoNIS = eNIS_STATE_PLAYING", 0 );
        l_U1323 = 2;
        break;
        case 2:
        sub_50672();
        if ((PED_GET_ACTION_INTENTION_STATUS( sub_7873(), 47 )) == 3)
        {
            sub_50097( l_U1305, 1 );
            SIMULATE_PLAYER_INPUT_GAIT( sub_7895(), 2, 500, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( -1.01848400, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -6.90496900, 1065353216, 0 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            sub_802( "GA", "e_Chapel_PianoNIS = eNIS_STATE_RETURNING_TO_PLAYER", 0 );
            l_U1323 = 4;
        }
        break;
        case 4:
        sub_50672();
        AUDIO_MUSIC_ADJUST_VOLUME( 0.00000000 );
        STOP_SCRIPT_STREAM( 0 );
        l_U648 = 0;
        CLEAR_PED_DEFAULT_AIM( sub_7873() );
        sub_41319( 1, 1 );
        sub_802( "GA", "e_Chapel_PianoNIS = eNIS_STATE_COMPLETE", 0 );
        l_U1323 = 5;
        break;
        case 5:
        sub_50672();
        if (l_U1324 == 4)
        {
            l_U647 = 1;
            sub_1337( ref l_U812 );
            sub_802( "GA", "e_Chapel_PianoNIS = eNIS_STATE_INACTIVE", 0 );
            l_U1323 = 0;
        }
        break;
    }
    return;
}

void sub_49952(int iParam0, unknown uParam1)
{
    if (NOT (sub_39161( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

void sub_50097(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

void sub_50277(unknown uParam0)
{
    if (sub_17892( uParam0 ))
    {
        PED_FINISH_ACTION_INTENTION( uParam0, 47 );
        PED_FINISH_ACTION_INTENTION( uParam0, 48 );
        PED_FINISH_ACTION_INTENTION( uParam0, 49 );
        PED_FINISH_ACTION_INTENTION( uParam0, 50 );
        PED_FINISH_ACTION_INTENTION( uParam0, 51 );
        PED_FINISH_ACTION_INTENTION( uParam0, 52 );
        PED_FINISH_ACTION_INTENTION( uParam0, 53 );
        PED_FINISH_ACTION_INTENTION( uParam0, 54 );
        PED_FINISH_ACTION_INTENTION( uParam0, 55 );
        PED_FINISH_ACTION_INTENTION( uParam0, 56 );
        PED_FINISH_ACTION_INTENTION( uParam0, 57 );
        PED_FINISH_ACTION_INTENTION( uParam0, 58 );
    }
    return;
}

void sub_50672()
{
    switch (l_U1324)
    {
        case 0:
        sub_29701( ref l_U1325, 3150 );
        l_U1324++;
        break;
        case 1:
        if (sub_21986( ref l_U1325 ))
        {
            sub_34716( ref l_U1551 );
            sub_34798( 0, sub_7873(), "MAX", ref l_U1551, 2, 0 );
            sub_34798( 1, sub_7873(), "MAX", ref l_U1551, 2, 0 );
            sub_50855( "SCMT_EXPLTMA", 0, 1, ref l_U1551, 8, 1 );
            sub_29701( ref l_U1325, 7200 );
            l_U1324++;
        }
        break;
        case 2:
        if (sub_21986( ref l_U1325 ))
        {
            sub_34716( ref l_U1551 );
            sub_34798( 0, sub_7873(), "MAX", ref l_U1551, 2, 0 );
            sub_34798( 1, sub_7873(), "MAX", ref l_U1551, 2, 0 );
            sub_50855( "SCMT_EXPLTMA", 1, 1, ref l_U1551, 8, 1 );
            sub_29701( ref l_U1325, 6900 );
            l_U1324++;
        }
        break;
        case 3:
        if (sub_21986( ref l_U1325 ))
        {
            sub_34716( ref l_U1551 );
            sub_34798( 0, sub_7873(), "MAX", ref l_U1551, 2, 0 );
            sub_34798( 1, sub_7873(), "MAX", ref l_U1551, 2, 0 );
            sub_50855( "SCMT_EXPLTMA", 2, 1, ref l_U1551, 8, 1 );
            l_U1324++;
        }
        break;
        case 4: break;
    }
    return;
}

void sub_50855(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    return sub_50883( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3, uParam4, uParam5 );
}

void sub_50883(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    char[16] cVar9;
    char[12] cVar13;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;

    StrCopy( ref cVar9, uParam1, 16 );
    array(ref cVar13, 2);
    StrCopy( ref cVar13[0], uParam0, 16 );
    StrCopy( ref cVar13[1], "END", 16 );
    return sub_35121( ref cVar13, uParam4, uParam5, 0, 1, uParam3, uParam2, ref cVar9, uParam6 );
}

void sub_51655()
{
    sub_802( "ML", "P_BALCONY_ATTACKS_MAX", "---" );
    ISEQ_UNREGISTER_ENTITY( 1100244310, "stad_sniper" );
    sub_20143( 1100244310, 1 );
    sub_32021();
    if ((NOT (IS_PED_DEAD( l_U505 ))) AND (NOT (IS_PED_DEAD( sub_7873() ))))
    {
        SET_PED_HEADING( l_U505, 0 );
        sub_51802( ref l_U505, sub_7873() );
        sub_44142( ref l_U1164, l_U505, 1 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U505, 1 );
        TASK_COMBAT_PED( l_U505, sub_7873() );
        SET_PED_FLAG_BLOCK_LEANFIRE_IN_COVER( l_U505, 1 );
    }
    return;
}

void sub_51802(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( (uParam0^) ))) AND (NOT (IS_PED_DEAD( uParam1 ))))
    {
        CLEAR_LOCKED_TARGET( (uParam0^) );
        REGISTER_TARGET( (uParam0^), uParam1 );
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_52229()
{
    int I;
    int Result;

    Result = 0;
    switch (l_U1563)
    {
        case 0:
        sub_52294();
        sub_30716( ref l_U526, 1.00000000, 0 );
        sub_30716( ref l_U581, 1.00000000, 0 );
        sub_30716( ref l_U629, 1.00000000, 0 );
        sub_30716( ref l_U727, 1.00000000, 0 );
        for ( I = 0; I <= 0; I++ )
        {
            sub_32098( ref l_U508[I], ref l_U506[I], -691403429, ref g_U1212, 0, 25000, 2, 0, 25000 );
            sub_31074( l_U506[I], ref l_U526 );
            if (I == 0)
            {
                REMOVE_ALL_PED_WEAPONS( l_U506[I] );
                sub_10126( l_U506[I], 434544317, 25000, 0, 0 );
                sub_9494( l_U506[I], -862236369, 1, 25000, 0 );
            }
            sub_52669( l_U506[I] );
            if (I != 0)
            {
                sub_18461( l_U506[I] );
            }
            l_U542[I] = 0;
        }
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U526._fU0, 0 );
        sub_31863( ref l_U506, "FinalWaveA-" );
        sub_802( "SBA", "F_SETUP_FINAL_WAVES: Wave A done, going to Wave B", "***" );
        l_U1563 = 1;
        break;
        case 1:
        if (l_U1564 < 2)
        {
            sub_32098( ref l_U547[l_U1564], ref l_U544[l_U1564], -691403429, ref g_U1212, 0, 25000, 2, 0, 25000 );
            sub_31074( l_U544[l_U1564], ref l_U581 );
            if (l_U1564 == 1)
            {
                REMOVE_ALL_PED_WEAPONS( l_U544[l_U1564] );
                sub_10126( l_U544[l_U1564], 434544317, 25000, 0, 0 );
                sub_9494( l_U544[l_U1564], -862236369, 1, 25000, 0 );
            }
            sub_52669( l_U544[l_U1564] );
            if (l_U1564 != 0)
            {
                sub_18461( l_U544[l_U1564] );
            }
            l_U606[l_U1564] = 0;
            l_U1564++;
        }
        else
        {
            sub_31863( ref l_U544, "FinalWaveB-" );
            SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U581._fU0, 0 );
            l_U1564 = 0;
            sub_802( "SBA", "F_SETUP_FINAL_WAVES: Wave B done, going to Wave C", "***" );
            l_U1563 = 2;
        }
        break;
        case 2:
        for ( I = 0; I <= 0; I++ )
        {
            sub_32098( ref l_U611[I], ref l_U609[I], -691403429, ref g_U1212, 0, 25000, 2, 0, 25000 );
            sub_31074( l_U609[I], ref l_U629 );
            if (I == 0)
            {
                REMOVE_ALL_PED_WEAPONS( l_U609[I] );
                sub_10126( l_U609[I], 434544317, 25000, 0, 0 );
                sub_9494( l_U609[I], -862236369, 1, 25000, 0 );
            }
            sub_52669( l_U609[I] );
            if (I != 0)
            {
                sub_18461( l_U609[I] );
            }
            l_U645[I] = 0;
        }
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U629._fU0, 0 );
        sub_31863( ref l_U609, "FinalWaveC-" );
        sub_802( "SBA", "F_SETUP_FINAL_WAVES: Wave C done, going to Reinforcements", "***" );
        l_U1563 = 3;
        break;
        case 3:
        if (l_U1564 < 4)
        {
            sub_32098( ref l_U663[l_U1564], ref l_U658[l_U1564], -691403429, ref g_U1212, 0, 25000, 2, 0, 25000 );
            sub_53689( ref l_U658[l_U1564], g_U1188 );
            if (sub_17892( l_U658[l_U1564] ))
            {
                SET_PED_CAN_AVOID_DEATH_ZONES( l_U658[l_U1564], 0 );
                SET_PED_COMBAT_ATTRIBUTES( l_U658[l_U1564], 1, 0 );
            }
            l_U716[l_U1564] = 0;
            l_U1564++;
        }
        else
        {
            sub_31863( ref l_U658, "FinalReinforce" );
            sub_18562( ref l_U658 );
            sub_802( "SBA", "F_SETUP_FINAL_WAVES: Reinforcements done, going to Finished", "***" );
            l_U1563 = 4;
            Result = 1;
        }
        break;
        case 4: break;
    }
    return Result;
}

void sub_52294()
{
    sub_802( "SBA", "P_SET_FINAL_WAVE_VECTORS", "***" );
    l_U522[0] = {72.00000000, -112.75000000, 4.99000000};
    l_U574[0] = {73.00000000, -108.50000000, 4.99000000};
    l_U574[1] = {72.50000000, -107.50000000, 4.99000000};
    l_U625[0] = {72.75000000, -104.00000000, 4.99000000};
    return;
}

void sub_52669(unknown uParam0)
{
    if (sub_17892( uParam0 ))
    {
        SET_ROOM_FOR_PED_BY_NAME( uParam0, ref g_U1188 );
        SET_PED_COMBAT_MOVEMENT( uParam0, 0 );
        SET_PED_IGNORE_LOS_CHECKS( uParam0, 1 );
        sub_44043( ref uParam0, 1 );
        SET_PED_CAN_AVOID_DEATH_ZONES( uParam0, 0 );
        SET_PED_COMBAT_ATTRIBUTES( uParam0, 1, 0 );
    }
    return;
}

void sub_53689(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    if (sub_17892( (uParam0^) ))
    {
        SET_ROOM_FOR_PED_BY_NAME( (uParam0^), ref uParam1 );
    }
    return;
}

void sub_54077(unknown uParam0)
{
    int I;

    sub_802( "SBA", "P_RESET_FINAL_WAVE_COMBAT", "***" );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((sub_17877()) AND (sub_17892( (uParam0^)[I] )))
        {
            if (IS_PED_PROCESSING_FROZEN( (uParam0^)[I] ))
            {
                sub_45023( (uParam0^)[I] );
            }
            RESET_PED_TETHERING( (uParam0^)[I] );
            sub_44142( ref l_U1160, (uParam0^)[I], 1 );
            sub_44142( ref l_U1163, (uParam0^)[I], 1 );
            CLEAR_PED_TASKS( (uParam0^)[I] );
            CLEAR_LOCKED_TARGET( (uParam0^)[I] );
            CLEAR_PED_DEFAULT_AIM( (uParam0^)[I] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^)[I], 0 );
            SET_PED_COMBAT_MOVEMENT( (uParam0^)[I], 2 );
            SET_PED_COMBAT_ATTRIBUTES( (uParam0^)[I], 1, 1 );
            REGISTER_TARGET( (uParam0^)[I], sub_7873() );
            TASK_COMBAT_PED( (uParam0^)[I], sub_7873() );
            l_U1565 = 6;
        }
    }
    return;
}

void sub_54428()
{
    int I;
    vector[4] vVar3;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;

    sub_802( "SBA", "P_TELEPORT_REINFORCEMENTS", "***" );
    array(ref vVar3, 4);
    vVar3[0] = {87.46000000, -103.78700000, 4.99100000};
    vVar3[1] = {86.66300000, -112.23000000, 4.99100000};
    vVar3[2] = {86.06000000, -104.78700000, 4.99100000};
    vVar3[3] = {87.26300000, -111.57900000, 4.99100000};
    for ( I = 0; I <= 3; I++ )
    {
        if ((sub_37153( l_U658[I], l_U1095 )) AND (sub_17892( l_U658[I] )))
        {
            sub_32554( l_U658[I], vVar3[I], l_U663[I]._fU12 );
            SET_ROOM_FOR_PED_BY_NAME( l_U658[I], ref g_U1188 );
            sub_54732( l_U658[I], 74.19436000, -108.12830000, 4.99069400, GET_RANDOM_FLOAT_IN_RANGE( 3.00000000, 5.00000000 ), 1101004800, -1082130432, 3 );
        }
    }
    return;
}

void sub_54732(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (sub_17892( uParam0 ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        TASK_ATTACK_MOVE( uParam0, uParam1, uParam4, uParam5, uParam6, uParam7 );
    }
    return;
}

void sub_54827()
{
    unknown uVar2;
    unknown uVar3;

    if (sub_43207( ref l_U506, ref uVar3 ))
    {
        sub_54862( uVar3, ref l_U506, ref l_U532 );
        sub_54862( uVar3, ref l_U544, ref l_U587 );
        sub_54862( uVar3, ref l_U609, ref l_U635 );
    }
    else if (sub_43207( ref l_U544, ref uVar3 ))
    {
        sub_54862( uVar3, ref l_U506, ref l_U532 );
        sub_54862( uVar3, ref l_U544, ref l_U587 );
        sub_54862( uVar3, ref l_U609, ref l_U635 );
    }
    else if (sub_43207( ref l_U609, ref uVar3 ))
    {
        sub_54862( uVar3, ref l_U506, ref l_U532 );
        sub_54862( uVar3, ref l_U544, ref l_U587 );
        sub_54862( uVar3, ref l_U609, ref l_U635 );
    };;;
    sub_55634( ref l_U506, l_U649, ref l_U532 );
    sub_55634( ref l_U544, l_U652, ref l_U587 );
    sub_55634( ref l_U609, l_U655, ref l_U635 );
    return;
}

void sub_54862(int iParam0, unknown uParam1, unknown uParam2)
{
    int I;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (DOES_PED_EXIST( iParam0 ))
    {
        sub_802( "SBA", "P_SET_PEDS_ATTACK_MAX: Ped exists - getting coords", "***" );
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0 )};
    }
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((sub_17877()) AND (sub_17892( (uParam1^)[I] )))
        {
            if ((sub_55017( (uParam1^)[I], uVar6 )) < 5.00000000)
            {
                if (sub_17877())
                {
                    sub_802( "SBA", "P_SET_PEDS_ATTACK_MAX: Target Player, (re)starting ReturnToPassos timer:", "***" );
                    sub_14757( I );
                    CLEAR_PED_DEFAULT_AIM( (uParam1^)[I] );
                    CLEAR_PED_TASKS( (uParam1^)[I] );
                    sub_51802( ref (uParam1^)[I], sub_7873() );
                    REGISTER_TARGET( (uParam1^)[I], sub_7873() );
                    TASK_COMBAT_PED( (uParam1^)[I], sub_7873() );
                    if ((uParam1^)[I] == iParam0)
                    {
                        sub_802( "SBA", "P_SET_PEDS_ATTACK_MAX: Setting a longer timer for enemy who was attacked", "***" );
                        sub_29701( ref (uParam2^)[I], 4000 );
                    }
                    else
                    {
                        sub_29701( ref (uParam2^)[I], GET_RANDOM_INT_IN_RANGE( 2000, 3500 ) );
                    }
                }
            }
        }
    }
    return;
}

void sub_55017(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

void sub_55634(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (sub_21986( ref (uParam4^)[I] ))
        {
            sub_802( "SBA", "P_CHECK_TIMERS_TO_REFOCUS_ON_PASSOS: ReturnToPassos timer DONE...", "***" );
            sub_14757( I );
            sub_55780( (uParam0^)[I], uParam1, 3, 0 );
        }
    }
    return;
}

void sub_55780(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    if (sub_17892( uParam0 ))
    {
        sub_802( "SBA", "P_THREATEN_PASSOS", "***" );
        CLEAR_PED_DEFAULT_AIM( uParam0 );
        sub_51802( ref uParam0, g_U824 );
        sub_55868( uParam0, uParam1, uParam4, uParam5 );
    }
    return;
}

void sub_55868(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, boolean bParam5)
{
    unknown uVar8;

    sub_802( "SBA", "P_MOVE_AND_SHOOT_AT_PASSOS", "***" );
    if ((sub_55931()) AND (sub_17892( uParam0 )))
    {
        OPEN_SEQUENCE_TASK( ref uVar8 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (bParam5)
        {
            TASK_PAUSE( 0, 2000 );
        }
        TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, uParam1, g_U824, uParam4, 1, 1.00000000, 0.50000000, 1, 0 );
        TASK_SHOOT_AT_PED( 0, g_U824, -1, 0, 0, 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar8 );
        CLEAR_PED_TASKS( uParam0 );
        TASK_PERFORM_SEQUENCE( uParam0, uVar8 );
        CLEAR_SEQUENCE_TASK( uVar8 );
    }
    return;
}

int sub_55931()
{
    if ((NOT (IS_PED_DEAD( g_U824 ))) AND (DOES_PED_EXIST( g_U824 )))
    {
        return 1;
    }
    return 0;
}

void sub_56198()
{
    int I;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    for ( I = 0; I <= 3; I++ )
    {
        if (NOT l_U716[I])
        {
            if (sub_17892( l_U658[I] ))
            {
                if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U658[I], "TETH_REINFORCEMENTS_RIGHT" ))
                {
                    sub_802( "SBA", "P_HANDLE_TETHERING_REINFORCEMENTS: Tethering a ped RIGHT!", 0 );
                    CLEAR_PED_TASKS( l_U658[I] );
                    sub_44043( ref l_U658[I], 0 );
                    sub_56413( ref l_U658[I] );
                    sub_44142( ref l_U1162, l_U658[I], 1 );
                    l_U716[I] = 1;
                }
                else if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U658[I], "TETH_REINFORCEMENTS_LEFT" ))
                {
                    sub_802( "SBA", "P_HANDLE_TETHERING_REINFORCEMENTS: Tethering a ped LEFT!", 0 );
                    CLEAR_PED_TASKS( l_U658[I] );
                    sub_44043( ref l_U658[I], 0 );
                    sub_56413( ref l_U658[I] );
                    sub_44142( ref l_U1161, l_U658[I], 1 );
                    l_U716[I] = 1;
                }
            }
        }
    }
    return;
}

void sub_56413(unknown uParam0)
{
    if ((sub_17877()) AND (sub_17892( (uParam0^) )))
    {
        sub_44428( uParam0, sub_7873() );
    }
    return;
}

void sub_56822(int iParam0)
{
    unknown uVar3;

    switch (l_U1565)
    {
        case 0:
        if ((IS_PED_DEAD( l_U505 )) || (sub_21986( ref l_U1524 )))
        {
            l_U1562 = iParam0;
            sub_55780( l_U544[0], l_U652, 2, 0 );
            sub_55780( l_U609[0], l_U655, 2, 1 );
            sub_29701( ref l_U1524, 8000 );
            sub_56988();
            l_U1522 = 1;
            sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: Starting first wave, going to eFW_SecondWave.", "***" );
            l_U1565 = 1;
        }
        break;
        case 1:
        if (iParam0 < l_U1562)
        {
            if ((l_U1524._fU4 - l_U1524._fU0) < (l_U1524._fU12 - 1500))
            {
                sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: eFW_SecondWave: Final Wave guy dead, resetting timer.", "***" );
                sub_29701( ref l_U1524, 1500 );
            }
            sub_57454( 2 );
            l_U1562 = iParam0;
            l_U1561 = 1;
        }
        if (sub_21986( ref l_U1524 ))
        {
            sub_29701( ref l_U1524, 8000 );
            if (l_U1561)
            {
                sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: send runner.  Going to eFW_ThirdWave.", "***" );
                sub_55780( l_U506[0], l_U649, 3, 0 );
            }
            else
            {
                sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: send walker.  Going to eFW_ThirdWave.", "***" );
                sub_55780( l_U506[0], l_U649, 2, 0 );
            }
            l_U1561 = 0;
            l_U1565 = 2;
        }
        break;
        case 2:
        if (iParam0 < l_U1562)
        {
            if ((l_U1524._fU4 - l_U1524._fU0) < (l_U1524._fU12 - 1500))
            {
                sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: eFW_ThirdWave: Final Wave guy dead, resetting timer.", "***" );
                sub_29701( ref l_U1524, 1500 );
            }
            sub_57454( 2 );
            l_U1562 = iParam0;
            l_U1561 = 1;
        }
        if (sub_21986( ref l_U1524 ))
        {
            sub_58719( l_U544[1], 80.50000000, -107.90000000, 4.99000000 );
            if (l_U1561)
            {
                sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: send runner.  Going to eFW_FourthWave.", "***" );
                sub_55780( l_U544[1], l_U652, 3, 0 );
            }
            else
            {
                sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: send walker.  Going to eFW_FourthWave.", "***" );
                sub_55780( l_U544[1], l_U652, 2, 0 );
            }
            sub_29701( ref l_U1524, 8000 );
            l_U1561 = 0;
            l_U1565 = 3;
        }
        break;
        case 3:
        if (iParam0 < l_U1562)
        {
            if ((l_U1524._fU4 - l_U1524._fU0) < (l_U1524._fU12 - 1500))
            {
                sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: eFW_ThirdWave: Final Wave guy dead, resetting timer.", "***" );
                sub_29701( ref l_U1524, 1500 );
            }
            sub_57454( 2 );
            l_U1562 = iParam0;
            l_U1561 = 1;
        }
        if (sub_21986( ref l_U1524 ))
        {
            sub_57454( 2 );
            sub_29701( ref l_U1524, 1500 );
            l_U1561 = 0;
            sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS:  Going to eFW_FifthWave.", "***" );
            l_U1565 = 4;
        }
        break;
        case 4:
        if (sub_21986( ref l_U1524 ))
        {
            uVar3 = sub_59443( ref l_U658 );
            sub_58719( uVar3, 80.50000000, -104.85000000, 4.99000000 );
            sub_55780( uVar3, l_U655, 3, 0 );
            sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: going to eFW_RepurposeReinforcement.", "***" );
            l_U1565 = 5;
        }
        break;
        case 5:
        if (iParam0 <= 1)
        {
            uVar3 = sub_59443( ref l_U658 );
            sub_58719( uVar3, 80.50000000, -110.85000000, 4.99000000 );
            sub_55780( uVar3, l_U649, 3, 0 );
            sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: going to eFW_Done.", "***" );
            l_U1565 = 6;
        }
        break;
        case 6: break;
    }
    if (NOT l_U801)
    {
        sub_59966( ref l_U506, ref l_U542 );
        sub_59966( ref l_U544, ref l_U606 );
        sub_59966( ref l_U609, ref l_U645 );
        if (l_U1522)
        {
            if (((((sub_60232( ref l_U506, l_U1073 )) + (sub_60232( ref l_U544, l_U1073 ))) + (sub_60232( ref l_U609, l_U1073 ))) + (sub_60232( ref l_U658, l_U1073 ))) != 0)
            {
                if ((NOT l_U1542._fU20) AND (NOT l_U1533._fU20))
                {
                    sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: STARTING tmrThreatDuration.", "***" );
                    sub_29701( ref l_U1533, 2000 );
                }
            }
            else if (l_U1533._fU20)
            {
                sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: RESETING tmrThreatDuration.", "***" );
                sub_1337( ref l_U1533 );
            }
            if (l_U1542._fU20)
            {
                sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: RESETING tmrPassosIsShot.", "***" );
                sub_1337( ref l_U1542 );
            }
            if (sub_21986( ref l_U1533 ))
            {
                sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: tmrThreatDuration DONE. STARTING tmrPassosIsShot.", "***" );
                sub_29701( ref l_U1542, 2000 );
            }
            if (sub_21986( ref l_U1542 ))
            {
                sub_802( "SBA", "P_HANDLE_FINAL_WAVE_THREAT_TO_PASSOS: tmrPassosIsShot DONE.", "***" );
                sub_1337( ref l_U1524 );
                l_U1518 = 1;
                l_U1522 = 0;
                l_U1565 = 6;
            }
        }
    }
    return;
}

void sub_56988()
{
    sub_802( "SBA", "P_DIAL_PASSOS_FINAL_WAVE", "---" );
    if ((NOT (IS_PED_DEAD( g_U824 ))) AND (NOT (IS_PED_DEAD( g_U1178 ))))
    {
        sub_34716( ref l_U1642 );
        sub_34798( 0, g_U1178, "MAX", ref l_U1642, 2, 0 );
        sub_34798( 1, g_U824, "PASSOS", ref l_U1642, 2, 0 );
        sub_35042( "SCMT_PSHBA", ref l_U1642, 8, 1 );
    }
    return;
}

void sub_57454(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;

    sub_802( "SBA", "P_SEND_IN_FINAL_WAVE_REINFORCEMENT", "***" );
    if (l_U733 < 4)
    {
        if ((sub_57534( ref l_U658 )) < iParam0)
        {
            uVar4 = l_U658[l_U733];
            sub_802( "SBA", "P_SEND_IN_FINAL_WAVE_REINFORCEMENT: sending in #:", 0 );
            sub_14757( l_U733 );
            if ((l_U733 == 2) || (l_U733 == 0))
            {
                uVar5 = {l_U721};
            }
            else
            {
                uVar5 = {l_U724};
            }
            l_U733++;
            if (sub_17892( uVar4 ))
            {
                sub_802( "SBA", "P_SEND_IN_FINAL_WAVE_REINFORCEMENT: Ped is Valid!", 0 );
                sub_45023( uVar4 );
                OPEN_SEQUENCE_TASK( ref uVar3 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uVar5, 3, -1, 1.00000000, 0, 0.50000000 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                CLOSE_SEQUENCE_TASK( uVar3 );
                CLEAR_PED_TASKS( uVar4 );
                TASK_PERFORM_SEQUENCE( uVar4, uVar3 );
                CLEAR_SEQUENCE_TASK( uVar3 );
            }
            else
            {
                sub_802( "SBA", "P_SEND_IN_FINAL_WAVE_REINFORCEMENT: Ped is NOT Valid!", 0 );
            }
        }
        else
        {
            sub_802( "SBA", "P_SEND_IN_FINAL_WAVE_REINFORCEMENT: Two already deployed!", 0 );
        }
    }
    else
    {
        sub_802( "SBA", "P_SEND_IN_FINAL_WAVE_REINFORCEMENT: Out of reinforcements!", 0 );
    }
    return;
}

void sub_57534(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            if (NOT (IS_PED_PROCESSING_FROZEN( (uParam0^)[I] )))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_58719(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if (sub_17892( uParam0 ))
    {
        sub_802( "SBA", "P_TELEPORT_PED_TO_START_LOC", "***" );
        sub_45023( uParam0 );
        sub_32554( uParam0, uParam1, 90 );
        SET_ROOM_FOR_PED_BY_NAME( uParam0, ref g_U1188 );
    }
    return;
}

void sub_59443(unknown uParam0)
{
    int I;
    unknown Result;

    Result = nil;
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            if (IS_PED_PROCESSING_FROZEN( (uParam0^)[I] ))
            {
                sub_802( "SBA", "F_GET_UNDEPLOYED_REINFORCEMENT: Found undeployed reinforcement!", "***" );
                l_U716[I] = 1;
                sub_44142( ref l_U1160, (uParam0^)[I], 1 );
                Result = (uParam0^)[I];
            }
        }
    }
    return Result;
}

void sub_59966(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (uParam1^)[I])
        {
            if (sub_17892( (uParam0^)[I] ))
            {
                if (IS_PED_IN_GAMEPLAY_HELPER_BOX( (uParam0^)[I], "TETH_MAIN_CHAPEL_C" ))
                {
                    sub_802( "SBA", "P_SET_FINAL_WAVE_TETHER: Setting tether for final wave enemy", "***" );
                    sub_44142( ref l_U1160, (uParam0^)[I], 1 );
                    (uParam1^)[I] = 1;
                }
            }
        }
    }
    return;
}

void sub_60232(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (sub_37153( (uParam0^)[I], uParam1 ))
        {
            Result++;
        }
    }
    return Result;
}

int sub_61028(int iParam0)
{
    boolean bVar3;
    int iVar4;

    bVar3 = true;
    if (iParam0 == 1)
    {
        sub_802( "SBA", "P_ASSIGN_CHAPEL_BULLET_CAM: Assigning bullet cam...", "***" );
        iVar4 = sub_61125( ref l_U370 );
        if (iVar4 == nil)
        {
            iVar4 = sub_61125( ref l_U506 );
            bVar3 = false;
        }
        if (iVar4 == nil)
        {
            iVar4 = sub_61125( ref l_U544 );
            bVar3 = false;
        }
        if (iVar4 == nil)
        {
            iVar4 = sub_61125( ref l_U609 );
            bVar3 = false;
        }
        if (iVar4 == nil)
        {
            if (NOT (IS_PED_DEAD( l_U505 )))
            {
                iVar4 = l_U505;
                SET_PED_CAN_TRIGGER_BULLET_CAM( iVar4, 1 );
            }
        }
        if (iVar4 == nil)
        {
            iVar4 = sub_61125( ref l_U658 );
        }
        if (iVar4 == nil)
        {
            SCRIPT_ASSERT( "F_ASSIGN_CHAPEL_BULLET_CAM: Can't find ped to assign bullet cam!", 0 );
        }
        else if (sub_17892( iVar4 ))
        {
            if (bVar3)
            {
                sub_802( "SBA", "P_ASSIGN_CHAPEL_BULLET_CAM: setting lone wolf.", "***" );
                sub_61567( ref iVar4 );
                CLEAR_LOCKED_TARGET( iVar4 );
                sub_44428( ref iVar4, sub_7873() );
                SET_PED_COMBAT_ATTRIBUTES( iVar4, 8192, 1 );
            }
            else
            {
                sub_802( "SBA", "P_ASSIGN_CHAPEL_BULLET_CAM: NOT setting lone wolf.", "***" );
                SET_PED_COMBAT_ATTRIBUTES( iVar4, 8192, 0 );
                SET_PED_COMBAT_ATTRIBUTES( iVar4, 1024, 0 );
            }
        }
        return 1;
    }
    return 0;
}

void sub_61125(unknown uParam0)
{
    int I;

    if ((sub_44863( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_61567(unknown uParam0)
{
    sub_802( "MSWW", "P_REMOVE_PED_FROM_GROUP", "###" );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        if ((GET_PED_GROUP_INDEX( (uParam0^) )) != -1)
        {
            sub_802( "MSWW", "P_REMOVE_PED_FROM_GROUP: Removing ped from group.", "###" );
            REMOVE_PED_FROM_GROUP( (uParam0^) );
        }
        else
        {
            sub_802( "MSWW", "P_REMOVE_PED_FROM_GROUP: Ped is not in a group!", "###" );
        }
    }
    return;
}

void sub_62538(boolean bParam0, boolean bParam1, unknown uParam2)
{
    int Result;
    unknown uVar6;

    Result = 0;
    if (IS_STRING_NULL( uParam2 ))
    {
        uParam2 = l_U337;
    }
    switch (l_U352)
    {
        case 0:
        sub_802( "RJM", "PLAY_CUTSCENE_MID_08_CEM start", 0 );
        if (NOT bParam0)
        {
            sub_32554( sub_7873(), 68.80901000, -107.72000000, 4.99079600, 0 );
            SET_ROOM_FOR_PED_BY_NAME( sub_7873(), ref g_U1188 );
            FREEZE_PED_POSITION( sub_7873(), 1 );
            uVar6 = GET_INTERIOR_AT_COORDS( 68.80901000, -107.72000000, 4.99079600 );
            SET_INTERIOR_ACTIVE( uVar6, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar6, GET_HASH_KEY( ref g_U1188 ) );
            FREEZE_PED_POSITION( sub_7873(), 0 );
        }
        sub_18297( 1, 0, 0, 1 );
        if (NOT bParam0)
        {
            sub_62803();
            sub_15834( uParam2, 1 );
            sub_62839();
        }
        sub_63015( bParam0 );
        if (bParam0)
        {
            AUD_ENABLE_PRE_BINK_SHUTDOWN( 1 );
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        if (bParam1)
        {
            START_CUTSCENE_CAPTURE( uParam2 );
        }
        START_SEAMLESS_CUTSCENE();
        l_U352 = 1;
        break;
        case 1:
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        l_U352 = 2;
        break;
        case 2:
        if (HAS_CUTSCENE_FINISHED())
        {
            STOP_CUTSCENE_CAPTURE();
            sub_64146();
            sub_64174();
            Result = 1;
            l_U352 = 0;
            sub_802( "RJM", "PLAY_CUTSCENE_MID_08_CEM end", 0 );
        }
        break;
    }
    return Result;
}

void sub_62803()
{
    sub_28366( g_U1332 );
    return;
}

void sub_62839()
{
    sub_802( "RJM", "CREATE_MID_08_CEM_PEDS_AND_OBJECTS - start", 0 );
    sub_2274( ref l_U339, 0, 0, 0, 0.00000000, 1862331818, 26, 6, 0, 0, 0 );
    l_U338 = sub_20824( ref l_U339 );
    sub_802( "RJM", "CREATE_MID_08_CEM_PEDS_AND_OBJECTS - end", 0 );
    return;
}

void sub_63015(boolean bParam0)
{
    unknown uVar3;

    sub_802( "RJM", "REGISTER_PEDS_MID_08_CEM - start", 0 );
    if (sub_17877())
    {
        sub_802( "RJM", "Registering player with MID_08", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_7873(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
    }
    if (bParam0)
    {
        uVar3 = g_U824;
    }
    else
    {
        uVar3 = l_U338;
    }
    if (sub_17892( uVar3 ))
    {
        sub_802( "RJM", "Registering Passos with MID_08_CEM_concat", 0 );
        sub_63287( uVar3, 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( uVar3, "PASS_NY_H", 0 );
    }
    sub_802( "RJM", "REGISTER_PEDS_MID_08_CEM - end", 0 );
    return;
}

void sub_63287(unknown uParam0, unknown uParam1)
{
    sub_802( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY", 0 );
    sub_14962( uParam1 );
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        sub_802( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHAND_LEFT", 0 );
        sub_14757( GET_WEAPON_FROM_HAND( uParam0, 1, 0 ) );
        if ((GET_WEAPON_FROM_HAND( uParam0, 1, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HAND( uParam0, 1, 0 ), uParam1 );
        }
        sub_802( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHAND_RIGHT", 0 );
        sub_14757( GET_WEAPON_FROM_HAND( uParam0, 0, 0 ) );
        if ((GET_WEAPON_FROM_HAND( uParam0, 0, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HAND( uParam0, 0, 0 ), uParam1 );
        }
        sub_802( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHOLSTER_PISTOL_LEFT", 0 );
        sub_14757( GET_WEAPON_FROM_HOLSTER( uParam0, 1 ) );
        if ((GET_WEAPON_FROM_HOLSTER( uParam0, 1 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( uParam0, 1 ), uParam1 );
        }
        sub_802( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHOLSTER_PISTOL_RIGHT", 0 );
        sub_14757( GET_WEAPON_FROM_HOLSTER( uParam0, 0 ) );
        if ((GET_WEAPON_FROM_HOLSTER( uParam0, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( uParam0, 0 ), uParam1 );
        }
        sub_802( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHOLSTER_RIFLE", 0 );
        sub_14757( GET_WEAPON_FROM_HOLSTER( uParam0, 2 ) );
        if ((GET_WEAPON_FROM_HOLSTER( uParam0, 2 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( uParam0, 2 ), uParam1 );
        }
    }
    return;
}

void sub_64146()
{
    sub_20746( l_U338 );
    return;
}

void sub_64174()
{
    sub_29448( g_U1332 );
    return;
}

void sub_64402()
{
    sub_802( "SBA", "P_UNLOAD_ASSETS_CHAPEL", "***" );
    sub_29448( g_U762 );
    sub_29448( -1504197122 );
    sub_29448( g_U1349 );
    sub_29448( 164359972 );
    sub_29448( g_U1332 );
    sub_64524( "LEVEL_S_CEM_CP_10" );
    sub_64524( "FACE_PASNYB" );
    sub_64613( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act" );
    return;
}

void sub_64524(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_64613(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}

void sub_64650(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        case 1: break;
        case 2: break;
        case 3: break;
        case 4:
        case 5: break;
        case 6: break;
        case 7:
        sub_64787( 1224272620 );
        break;
        case 8: break;
        case 9:
        sub_6965( 434544317, 1 );
        sub_6965( -691403429, 1 );
        break;
        case 10:
        sub_64787( -184942895 );
        break;
    }
    return;
}

void sub_64787(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}


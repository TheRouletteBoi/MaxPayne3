void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 1;
    l_U38 = 144;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U43 = "PED_DEF";
    l_U85 = 1.00000000;
    l_U97 = 0;
    l_U138 = 0;
    l_U178 = {0, 0, 0};
    StrCopy( ref l_U181, "DUMMY", 32 );
    l_U189 = 1;
    l_U194 = 0;
    l_U195 = 0;
    l_U196 = 0;
    l_U199 = 0;
    l_U245 = 0;
    l_U246 = 0;
    l_U247 = 1500;
    l_U258 = 0;
    l_U260 = 1;
    l_U261 = 0;
    l_U262 = 1;
    l_U263 = 0;
    l_U264 = 0;
    StrCopy( ref l_U283, "MID_04_CEM_concat", 32 );
    l_U651 = -1;
    l_U767 = {58.68000000, 51.73000000, 2.99000000};
    l_U770 = 0;
    l_U772 = 0;
    l_U773 = 0;
    l_U774 = 0;
    l_U775 = 0;
    l_U776 = 0;
    l_U777 = 0;
    l_U778 = 0;
    l_U793 = {38.76738000, 52.45488000, 2.64080000};
    l_U796 = {-1.62000000, 0.00000000, 2.45000000};
    l_U1015 = -1;
    l_U1016 = nil;
    l_U1091 = 0;
    l_U1092 = 0;
    l_U1093 = 0;
    l_U1127 = {39.86000000, 54.45000000, 3.07000000};
    l_U1130 = {5.45000000, 0.00000000, 161.92000000};
    l_U1133 = 1500;
    l_U1134 = 45.00000000;
    l_U1166 = {40.75000000, 55.36000000, 4.11000000};
    l_U1169 = {-24.89000000, 0.14000000, 149.07000000};
    l_U1172 = 1500;
    l_U1173 = 45.00000000;
    l_U1174 = {40.00000000, 50.21000000, 3.55000000};
    l_U1177 = 0;
    l_U1209 = {40.69000000, 53.66000000, 3.55000000};
    l_U1212 = {5.19461700, 0.00002200, -177.10450000};
    l_U1215 = 1000;
    l_U1247 = {36.28000000, 50.78000000, 5.56000000};
    l_U1250 = {-18.31448000, 0.00000700, -104.65470000};
    l_U1253 = 5000;
    l_U1263 = 5100;
    l_U1264 = 0;
    l_U1265 = 0;
    l_U1266 = 0;
    l_U1267 = 0;
    l_U1268 = 0;
    sub_879( "[GA] s_cemet_rotunda script started." );
    l_U258 = 0;
    sub_904( 0 );
    sub_1658( 6 );
    sub_2085();
    sub_4198();
    if (g_U825 == 6)
    {
        sub_4951();
        sub_904( 1 );
        g_U826 = 6;
        sub_9393( ref l_U979, g_U826, g_U1178, g_U971[6]._fU0, g_U971[6]._fU12, g_U971[6]._fU16, g_U971[6]._fU20, 0 );
        l_U1093 = 1;
        l_U260 = 1;
    }
    else
    {
        sub_13033( ref l_U283, 0 );
    }
    while (NOT IS_EXITFLAG_SET())
    {
        if (g_U826 == 6)
        {
            sub_13306();
        }
        sub_13886();
        sub_20762();
        WAIT( 0 );
    }
    sub_17133();
    sub_47058();
    sub_47360( 6 );
    sub_879( "[GA] s_cemet_rotunda script ended." );
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_cemet_rotunda" );
    SET_EXITFLAG_RESPONSE();
    return;
}

void sub_879(unknown uParam0)
{
    return;
}

void sub_904(unknown uParam0)
{
    sub_879( "[GA] P_LOAD_ASSETS_LARGE_ROTUNDA start" );
    sub_967( g_U1341, uParam0 );
    sub_967( g_U1342, uParam0 );
    sub_967( g_U1332, uParam0 );
    sub_967( g_U761, uParam0 );
    sub_1175( 358192565, uParam0 );
    sub_1390( "LEVEL_S_CEM_ROT", 0, 1 );
    sub_1390( "FACE_PASNYB", 0, uParam0 );
    sub_1527( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act", uParam0 );
    sub_1175( -52418046, uParam0 );
    sub_879( "[GA] P_LOAD_ASSETS_LARGE_ROTUNDA end" );
    return;
}

void sub_967(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_879( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1175(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_1390(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1527(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1658(unknown uParam0)
{
    sub_1674( -862236369, 1 );
    switch (uParam0)
    {
        case 0:
        case 1:
        sub_1674( 434544317, 1 );
        sub_1674( -691403429, 1 );
        break;
        case 2: break;
        case 3:
        sub_1674( -691403429, 1 );
        sub_1674( 930042831, 1 );
        break;
        case 4:
        case 5:
        sub_1674( 434544317, 1 );
        sub_1674( -691403429, 1 );
        break;
        case 6:
        sub_1674( 434544317, 1 );
        sub_1674( -691403429, 1 );
        break;
        case 7:
        sub_1674( 434544317, 1 );
        sub_1674( -691403429, 1 );
        sub_1674( 1224272620, 1 );
        break;
        case 8:
        sub_1674( 434544317, 1 );
        sub_1674( -691403429, 1 );
        break;
        case 9:
        sub_1674( 434544317, 1 );
        sub_1674( -691403429, 1 );
        break;
        case 10:
        sub_1674( 434544317, 1 );
        sub_1674( -184942895, 1 );
        sub_1674( -691403429, 1 );
        break;
    }
    return;
}

void sub_1674(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_2085()
{
    sub_879( "MF]] s_cemet_rotunda - START: P_SET_STATIC_GAMEPLAY_DATA" );
    sub_2238( ref l_U853, "tbROT_KidnapperOpensFire01", 48.59000000, 66.59000000, 3.42000000, 21.34000000, 3.91000000, 4.21000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2238( ref l_U874, "tbROT_KidnapperOpensFire02", 33.70000000, 56.97000000, 3.42000000, 19.94000000, 3.91000000, 4.21000000, 0.00000000, 0.00000000, 45.00000000, 1 );
    sub_2238( ref l_U895, "tbROT_KidnapperOpensFire03", 23.77000000, 42.77000000, 3.42000000, 19.94000000, 3.91000000, 4.21000000, 0.00000000, 0.00000000, 90.00000000, 1 );
    sub_2238( ref l_U916, "tb_endRotunda", 57.90108000, 34.49012000, 4.01759000, 5.00000000, 5.00000000, 8.00000000, 0.00000000, 0.00000000, 45.00000000, 1 );
    sub_2238( ref l_U937, "tb_centerRotunda", 43.20851000, 47.21259000, 3.11588600, 18.00000000, 18.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2238( ref l_U958, "RIGHT_SIDE_ATTACK", 30.46621000, 39.72340000, 2.60985900, 40.00000000, 10.00000000, 8.21000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2238( ref l_U436, "TRIG_A_ATTACK", 47.98000000, 66.61000000, 3.96000000, 30.00000000, 15.00000000, 8.21000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2841( ref l_U435, "TETH_GRP_A", 47.98000000, 66.61000000, 3.96000000, 19.40000000, 8.00000000, 6.21000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2238( ref l_U496, "TRIG_B_ATTACK", 60.98555000, 56.61581000, 3.95991500, 40.00000000, 20.00000000, 8.21000000, 0.00000000, 0.00000000, -45.00000000, 1 );
    sub_2841( ref l_U494, "TETH_GRP_B", 60.72857000, 55.32512000, 3.95991400, 16.40000000, 7.00000000, 6.21000000, 0.00000000, 0.00000000, -45.00000000, 1 );
    sub_2841( ref l_U495, "TETH_GRP_B1", 58.74000000, 62.24000000, 3.96000000, 16.40000000, 6.00000000, 6.21000000, 0.00000000, 0.00000000, -45.00000000, 1 );
    sub_2238( ref l_U569, "TRIG_C_ATTACK", 63.77115000, 45.35564000, 3.95991400, 40.00000000, 20.00000000, 8.21000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_2841( ref l_U568, "TETH_GRP_C", 63.77115000, 45.35564000, 3.95991400, 16.40000000, 7.00000000, 6.66000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_2238( ref l_U630, "TRIG_D_ATTACK", 57.97010000, 33.46354000, 3.95991400, 40.00000000, 20.00000000, 8.21000000, 0.00000000, 0.00000000, -135.00000000, 1 );
    sub_2841( ref l_U627, "TETH_GRP_D", 57.97010000, 33.46354000, 3.95991400, 16.40000000, 7.00000000, 6.66000000, 0.00000000, 0.00000000, -135.00000000, 1 );
    sub_2841( ref l_U628, "TETH_GRP_D1", 44.78000000, 27.73000000, 3.96000000, 19.40000000, 6.00000000, 6.21000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2841( ref l_U629, "TETH_GRP_D2", 30.64000000, 30.18000000, 3.96000000, 16.40000000, 6.00000000, 6.21000000, 0.00000000, 0.00000000, -45.00000000, 1 );
    sub_3562( ref l_U779, g_U779[6]._fU0, g_U779[6]._fU12, 1265654828, 26, 6, 0, 0, 0 );
    sub_3562( ref l_U371, 39.68000000, 51.00000000, 2.61000000, 375.00000000, -1127141388, 7, 3, 2, 0, 0 );
    sub_3562( ref l_U388[0], 52.73000000, 63.38000000, 3.96000000, 122.80000000, -81919768, 7, 3, 2, 0, 0 );
    sub_3562( ref l_U388[1], 53.61000000, 64.22000000, 3.96000000, 31.80000000, 614167834, 7, 3, 2, 0, 0 );
    sub_3562( ref l_U388[2], 52.21000000, 67.39000000, 3.96000000, 122.80000000, -431433218, 7, 3, 2, 0, 0 );
    sub_3562( ref l_U460[0], 63.12915000, 57.89789000, 3.95991400, 27.80000000, -959961494, 7, 3, 2, 0, 0 );
    sub_3562( ref l_U460[1], 69.06887000, 55.23754000, 5.30981100, 26.30000000, -936165994, 7, 3, 2, 0, 0 );
    sub_3562( ref l_U521[0], 62.23000000, 40.89000000, 3.96000000, 45.80000000, 299705500, 7, 3, 2, 0, 0 );
    sub_3562( ref l_U521[1], 65.00000000, 42.77000000, 3.96000000, 47.80000000, 443058015, 7, 3, 2, 0, 0 );
    sub_3562( ref l_U521[2], 62.83000000, 48.76000000, 3.96000000, 47.80000000, -377470357, 7, 3, 2, 0, 0 );
    sub_3562( ref l_U593[0], 52.22957000, 24.36838000, 4.56387200, 237.20000000, -954926356, 7, 3, 2, 0, 0 );
    sub_3562( ref l_U593[1], 47.91663000, 30.50239000, 3.38100400, 289.80000000, 241944382, 7, 3, 2, 0, 0 );
    sub_879( "MF]] s_cemet_rotunda - END: P_SET_STATIC_GAMEPLAY_DATA" );
    return;
}

void sub_2238(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_2841(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_3562(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_4198()
{
    sub_879( "MF]] s_cemet_rotunda - START: P_INITIALIZE_SCRIPT_DATA" );
    l_U770 = 0;
    l_U771 = 0;
    l_U774 = 0;
    l_U772 = 0;
    l_U365[0] = 0;
    l_U365[1] = 0;
    l_U365[2] = 0;
    l_U365[3] = 0;
    l_U775 = 0;
    l_U776 = 0;
    l_U777 = 0;
    l_U778 = 0;
    l_U1091 = 1;
    sub_4370( "SCMTAUD" );
    sub_4487( ref g_U1522, 1 );
    sub_4487( ref g_U1529, 1 );
    sub_4487( ref g_U1536, 1 );
    sub_4487( ref g_U1543, 1 );
    sub_4727( ref l_U844, 2000, 1, 0 );
    l_U1177 = 0;
    l_U651 = -1;
    sub_879( "MF]] s_cemet_rotunda - END: P_INITIALIZE_SCRIPT_DATA" );
    return;
}

void sub_4370(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_4390();
    return;
}

void sub_4390()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_4487(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_4499( iParam0 )) == 0)
    {
        sub_4565( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_4499(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_4565(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_4727(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_4951()
{
    if (NOT (sub_4965( ref l_U979 )))
    {
        sub_7391( g_U1178, sub_9283( 6 ), 100, 0, 1 );
    }
    return;
}

int sub_4965(unknown uParam0)
{
    sub_5005( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U37 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U38 );
            sub_5204( uParam0, sub_5138() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_5005(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

int sub_5138()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_5160() );
    }
    return 0;
}

void sub_5160()
{
    return GET_PLAYER_ID();
}

void sub_5204(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_5005( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U37)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_5390( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_6467( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_6759( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_7106( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_6759( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_7106( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_6759( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_7106( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_7391( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_7106( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_7391( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_7106( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U37 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_7886( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_8047( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_5138(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U37)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U37 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_5005( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_5390(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_5422( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_5422(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_6467(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_6759(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_879( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_7106(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_7391(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_879( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_7886(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_8047(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_5422( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_8119( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_8119(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

int sub_9283(unknown uParam0)
{
    return -862236369;
}

void sub_9393(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_5005( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_5005( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_8047( iParam1 );
        sub_9652( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_10103( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_10103( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_10335( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_10103( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_10335( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_10335( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_10103( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_10335( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_10335( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_10335( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_10103( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_10335( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_10335( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_10335( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_10335( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_11893( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U38, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_5005( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_9652(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_5422( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_5005( "TEH", "Ending context", 0 );
        sub_5005( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_10103(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_10335(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_11893(int iParam0)
{
    sub_879( "CHECKPOINT DATA" );
    sub_11932( iParam0->_fU4 );
    sub_11955( iParam0->_fU16 );
    sub_11955( iParam0->_fU20 );
    sub_11955( iParam0->_fU24 );
    sub_11998( iParam0->_fU28 );
    sub_11998( iParam0->_fU56 );
    sub_11998( iParam0->_fU60 );
    sub_11998( iParam0->_fU64 );
    sub_11998( iParam0->_fU68 );
    sub_11998( iParam0->_fU72 );
    sub_11998( iParam0->_fU76 );
    sub_11998( iParam0->_fU80 );
    sub_11998( iParam0->_fU84 );
    sub_11998( iParam0->_fU88 );
    sub_11998( iParam0->_fU92 );
    sub_11955( iParam0->_fU32 );
    sub_11998( iParam0->_fU36 );
    sub_11998( iParam0->_fU40 );
    sub_11998( iParam0->_fU44 );
    sub_11955( iParam0->_fU136 );
    sub_12203( iParam0->_fU140 );
    sub_11998( iParam0->_fU52 );
    sub_879( "---nRightHolsterAttachmentEnabled: " );
    sub_11998( iParam0->_fU96 );
    sub_879( "---nRightHolsterAttachmentToggled: " );
    sub_11998( iParam0->_fU100 );
    sub_879( "---nLeftHolsterAttachmentEnabled: " );
    sub_11998( iParam0->_fU104 );
    sub_879( "---nLeftHolsterAttachmentToggled: " );
    sub_11998( iParam0->_fU108 );
    sub_879( "---nRifleHolsterAttachmentEnabled: " );
    sub_11998( iParam0->_fU112 );
    sub_879( "---nRifleHolsterAttachmentToggled: " );
    sub_11998( iParam0->_fU116 );
    sub_879( "---nRightHandAttachmentEnabled: " );
    sub_11998( iParam0->_fU120 );
    sub_879( "---nRightHandAttachmentToggled: " );
    sub_11998( iParam0->_fU124 );
    sub_879( "---nLeftHandAttachmentEnabled: " );
    sub_11998( iParam0->_fU128 );
    sub_879( "---nLeftHandAttachmentToggled: " );
    sub_11998( iParam0->_fU132 );
    sub_11998( l_U38 );
    sub_11998( 144 );
    return;
}

void sub_11932(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_11955(unknown uParam0)
{
    return;
}

void sub_11998(unknown uParam0)
{
    return;
}

void sub_12203(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_13033(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_13306()
{
    if (l_U262 != l_U260)
    {
        sub_5005( "TEH", "playing music:changed CUR FLAG", 0 );
        sub_11998( l_U260 );
        sub_11998( l_U261 );
        l_U262 = l_U260;
    }
    else if (l_U263 != l_U261)
    {
        sub_5005( "TEH", "playing music:changed NEW FLAG", 0 );
        sub_11998( l_U260 );
        sub_11998( l_U261 );
        l_U263 = l_U261;
    }
    switch (l_U260)
    {
        case 1:
        l_U264 = 0;
        l_U260 = 3;
        break;
        case 2:
        AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_1_3_4_5", "", 0, 8000, 5000, -1082130432, 0 );
        l_U264 = 0;
        l_U260 = 4;
        break;
        case 3:
        if (l_U261 == 3)
        {
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_1_3_4_5", "", 0, 8000, 5000, -1082130432, 0 );
            l_U260 = 4;
        }
        break;
        case 4:
        if (l_U261 == 4)
        {
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_3_4_5_6", "", 0, 5000, 5000, -1082130432, 0 );
            l_U260 = 5;
        }
        break;
        case 5:
        if (l_U261 == 5)
        {
            AUDIO_MUSIC_SUSPEND( 7000 );
            l_U260 = 6;
        }
        break;
    }
    return;
}

void sub_13886()
{
    unknown uVar2;

    if (g_U826 == 6)
    {
        if (l_U1094 == 0)
        {
            if ((IS_PED_DEAD( sub_5138() )) == 1)
            {
                sub_5005( "SBA", "P_HANDLE_CHECKPOINTS: player is dead, setting eFailure = STATE_FAIL_WAITING", "***" );
                l_U1094 = 2;
            }
            else if (sub_14045())
            {
                sub_5005( "SBA", "HANDLE_CHECKPOINTS - Restart, setting eFailure = STATE_FAIL_WAITING", 0 );
                l_U1094 = 2;
            }
            else if ((l_U1093 > 2) AND ((l_U1177 == 0) AND ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (IS_PED_DEAD( g_U824 )))))
            {
                SET_PED_GORE_FROM_PLAYER( g_U824, 1 );
                SET_PED_GORE_FROM_NPC( g_U824, 0 );
                sub_5005( "SBA", "P_HANDLE_CHECKPOINTS: Passos killed, setting eFailure = STATE_FAIL_DEATH_CAM_PASSOS", "***" );
                uVar2 = GET_WEAPON_FROM_HAND( sub_5138(), 0, 0 );
                if ((GET_WEAPON_TYPE( uVar2 )) == -1659006841)
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( g_U824, 0 );
                    l_U1094 = 2;
                }
                else
                {
                    l_U1094 = 1;
                }
            };;;
        }
        sub_14809();
    }
    return;
}

int sub_14045()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U37 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_5138() )))
        {
            SET_PED_FORCED_TO_WALK( sub_5138(), 0 );
            SET_PLAYER_FORCED_AIM( sub_5160(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_5160(), 1 );
            if ((IS_PED_VISIBLE( sub_5138() )) == 0)
            {
                SET_PED_VISIBLE( sub_5138(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_14809()
{
    switch (l_U1094)
    {
        case 0: break;
        case 1:
        if (sub_14892())
        {
            SET_PED_INVINCIBLE( sub_5138(), 1 );
        }
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
        l_U1094 = 2;
        sub_5005( "CCB", "eFailure - STATE_FAIL_WAITING", 0 );
        break;
        case 2:
        if (sub_15055())
        {
            if ((g_U1800[7]._fU40 != 4) AND (g_U1800[7]._fU40 != 0))
            {
                sub_5005( "GA", "Shutting down script for Mausoleum Sniper.", 0 );
                g_U1232 = 0;
                sub_15186( ref g_U1800[7] );
                SET_EXITFLAG_FOR_SCRIPT( g_U1800[7]._fU32 );
            }
            l_U1094 = 3;
        }
        else if ((sub_15251( 0 )) == 1)
        {
            if ((g_U1800[7]._fU40 != 4) AND (g_U1800[7]._fU40 != 0))
            {
                sub_5005( "GA", "Shutting down script for Mausoleum Sniper.", 0 );
                g_U1232 = 0;
                sub_15186( ref g_U1800[7] );
                SET_EXITFLAG_FOR_SCRIPT( g_U1800[7]._fU32 );
            }
            l_U1094 = 3;
        }
        break;
        case 3:
        if (NOT (IS_PED_DEAD( sub_5138() )))
        {
            sub_5005( "CCB", "Deactivating bullettime...", 0 );
            DO_SCREEN_FADE_OUT( 0 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            END_POSTFX_BLENDER( 3, 0 );
            l_U1094 = 4;
            sub_5005( "CCB", "eFailure - STATE_FAIL_CLEANUP", 0 );
        }
        break;
        case 4:
        if (NOT (IS_PLAYER_DEAD( sub_5160() )))
        {
            if (NOT (IS_PED_DEAD( sub_5138() )))
            {
                SET_PLAYER_CONTROL( sub_5160(), 0, 0 );
            }
        }
        DO_SCREEN_FADE_OUT( 0 );
        sub_16814( "CEM_PASSOS3_SCRIPTED_FAIL_FX" );
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        sub_5005( "CCB", "Destroying Passos...", 0 );
        sub_17059( g_U824 );
        sub_17133();
        l_U1094 = 5;
        sub_5005( "CCB", "eFailure - STATE_FAIL_RESTORE", 0 );
        break;
        case 5:
        if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
        l_U1094 = 6;
        sub_5005( "CCB", "eFailure - STATE_FAIL_RESTART", 0 );
        break;
        case 6:
        if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
        {
            sub_5005( "CCB", "eFailure - STATE_FAIL_IDLE", 0 );
            sub_904( 1 );
            sub_2085();
            sub_17920();
            sub_4198();
            sub_5204( ref l_U979, g_U1178 );
            if (NOT (IS_PED_DEAD( g_U1178 )))
            {
                sub_20384( g_U1178, g_U971[6]._fU0, g_U971[6]._fU12 );
                sub_20441();
            }
            if ((NOT (IS_PLAYER_DEAD( sub_5160() ))) AND (sub_14892()))
            {
                SET_PED_INVINCIBLE( sub_5138(), 0 );
                SET_PLAYER_CONTROL( sub_5160(), 1, 0 );
                SET_PLAYER_FORCED_AIM( sub_5160(), 0, 0 );
                RESET_FORCED_AIM_INTENTION_DIRECTION();
            }
            l_U260 = 2;
            l_U260 = 1;
            l_U1093 = 1;
            l_U1094 = 0;
            sub_5005( "CCB", "eCheckpoint - STATE_CHECKPOINT_INIT", 0 );
        }
        else
        {
            sub_5005( "CCB", "Waiting for stream requests...", 0 );
        }
        break;
    }
    return;
}

int sub_14892()
{
    if (sub_14907( sub_5138() ))
    {
        return 1;
    }
    return 0;
}

int sub_14907(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

void sub_15055()
{
    return g_U648;
}

void sub_15186(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_15251(int iParam0)
{
    iParam0 = 1;
    switch (l_U246)
    {
        case 0:
        if (NOT (sub_15312( ref l_U248 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_5138() )))
            {
                l_U247 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_4727( ref l_U248, l_U247, 1, 1 );
            sub_15431( ref l_U248 );
        }
        if (sub_15551( ref l_U248 ))
        {
            sub_5005( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_5138() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_5160() )))
            {
                SET_PLAYER_CONTROL( sub_5160(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U246 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U246 = 2;
            }
            else
            {
                l_U246 = 3;
            }
        }
        break;
        case 2:
        sub_5005( "NS", "Player will QUIT", 0 );
        sub_16038();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_5005( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_16038();
        return 1;
        break;
    }
    return 0;
}

int sub_15312(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_15431(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_15551(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_16038()
{
    sub_5005( "NS", "P_PostFailRetryCleanup", 0 );
    sub_16088( ref l_U248 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_5160() )))
    {
        SET_PLAYER_CONTROL( sub_5160(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U245 = 0;
    l_U245 = l_U245;
    l_U246 = 0;
    return;
}

void sub_16088(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_16814(unknown uParam0)
{
    sub_5005( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_16897( ref l_U259 );
    l_U258 = 1;
    return;
}

void sub_16897(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_17059(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_17133()
{
    sub_879( "MF]] s_cemet_rotunda - P_CLEANUP_ALL start" );
    ISEQ_UNREGISTER_ENTITY( 358192565, "hostagetaker" );
    ISEQ_UNREGISTER_ENTITY( 358192565, "passos" );
    ISEQ_UNREGISTER_ENTITY( -52418046, "passos" );
    sub_17268( 358192565, 0 );
    sub_17268( -52418046, 0 );
    sub_17482( ref l_U384 );
    sub_17482( ref l_U457 );
    sub_17482( ref l_U517 );
    sub_17482( ref l_U590 );
    sub_17574( g_U721._fU0 );
    sub_17059( l_U370 );
    if (sub_14907( g_U824 ))
    {
        RESET_PED_TETHERING( g_U824 );
    }
    RESET_PED_MODEL_LOD_DISTANCES( g_U1341 );
    sub_879( "MF]] s_cemet_rotunda - P_CLEANUP_ALL end" );
    return;
}

void sub_17268(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_17482(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_17059( (uParam0^)[I] );
    }
    return;
}

void sub_17574(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_17920()
{
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    sub_17939();
    sub_18778();
    return;
}

void sub_17939()
{
    sub_17949();
    sub_17574( l_U792 );
    l_U792 = sub_18473( -343443786, l_U793, l_U796, 1, 1, 0, 1119092736 );
    return;
}

void sub_17949()
{
    sub_5005( "CO", "P_CREATE_S_NYC_GG_6M_02", 0 );
    sub_18048( ref g_U721, g_U761, -602025319, 387778944, 45.81000000, 46.94000000, 3.15000000, 1.50000000, 0.00000000, 1.00000000, "" );
    sub_18177( ref g_U721 );
    return;
}

void sub_18048(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_5005( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_18177(int iParam0)
{
    sub_5005( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_18238( iParam0->_fU12 )) == 1)
        {
            sub_5005( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_5005( "CO", "has never been collected.", 0 );
        }
        if ((sub_18238( iParam0->_fU12 )) == 0)
        {
            sub_17574( iParam0->_fU0 );
            iParam0->_fU0 = sub_18473( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_5005( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_5005( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_18238(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_18473(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_18778()
{
    sub_5005( "SBA", "P_CREATE_N_HORNE_POI", 0 );
    sub_18858( ref l_U681, 2, l_U767, l_U767, l_U767, 1.50000000, 3.00000000, 1, 0 );
    sub_19706( ref l_U681, 30, "POI_N_HUNTER" );
    sub_19867( ref l_U681, 0 );
    sub_20246( ref l_U681, 0 );
    sub_20278( ref l_U681, 1 );
    return;
}

void sub_18858(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_18873( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_19241( iParam0 );
    return;
}

void sub_18873(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_19241(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_19320( iParam0 );
    return;
}

void sub_19320(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_19379( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_19379( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_19379( iParam0, 1 );
            }
            else
            {
                sub_19379( iParam0, 0 );
            };;;
        }
        else
        {
            sub_19379( iParam0, 0 );
        }
    }
    else
    {
        sub_19379( iParam0, 0 );
    }
    return;
}

void sub_19379(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_19706(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_19737( iParam0 );
    return;
}

void sub_19737(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_19867(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_19909( iParam0 );
    return;
}

void sub_19909(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_19970( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_19970( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_19970(int iParam0)
{
    if (((IS_PED_DEAD( sub_5138() )) == 0) AND ((IS_PLAYER_DEAD( sub_5160() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_5138() )) == 1) || (((IS_PED_GETTING_UP( sub_5138() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_5138() )) == 1) || (((IS_PED_IN_COVER( sub_5138() )) == 1) || (((IS_PED_DUCKING( sub_5138() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_5138() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_20246(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_20278(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_20384(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_20441()
{
    if (NOT (IS_PLAYER_DEAD( sub_5160() )))
    {
        SET_PLAYER_FORCED_AIM( sub_5160(), 1, 0 );
    }
    SET_CAM_SIDE_LEFT( 1 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[6]._fU16, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[6]._fU20, 1065353216, 0 );
    return;
}

void sub_20762()
{
    unknown uVar2;
    unknown uVar3;
    int iVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (sub_14892())
    {
        uVar9 = sub_5138();
    }
    if (l_U1094 == 0)
    {
        switch (l_U1093)
        {
            case 0:
            if (g_U1236)
            {
                sub_904( 1 );
                l_U260 = 1;
                sub_879( "[GA] s_cemet_rotunda activated." );
                g_U1991[4] = 1;
                g_U1991[3] = 1;
                l_U1093 = 1;
            }
            break;
            case 1:
            sub_20984();
            sub_22172();
            sub_22654();
            sub_17920();
            l_U1093 = 2;
            break;
            case 2:
            if (g_U826 < 6)
            {
                sub_1175( 358192565, 1 );
                sub_13033( ref l_U283, 1 );
                sub_26160( ref l_U457 );
                sub_26315( ref l_U370, ref l_U457 );
                sub_29101( 1 );
            }
            else
            {
                sub_20384( sub_5138(), g_U971[6]._fU0, g_U971[6]._fU12 );
                sub_20441();
                sub_31656();
            }
            sub_25112( ref l_U384, 2, 0 );
            sub_25112( ref l_U457, 2, 0 );
            sub_25112( ref l_U517, 2, 0 );
            sub_25112( ref l_U590, 2, 0 );
            if (sub_14907( l_U370 ))
            {
                SET_PED_RELATIONSHIP( l_U370, 2, 0 );
            }
            g_U826 = 6;
            if (NOT l_U979._fU0)
            {
                sub_9393( ref l_U979, g_U826, g_U1178, g_U971[6]._fU0, g_U971[6]._fU12, g_U971[6]._fU16, g_U971[6]._fU20, 1 );
            }
            l_U1093 = 3;
            break;
            case 3:
            STOP_ALL_IMAGEFX( 0 );
            if (NOT sub_32123())
            {
                if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || ((IS_SCREEN_FADING_OUT()) || (IS_SCREEN_FADED_OUT())))
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
            }
            sub_32380();
            sub_33580();
            SET_PED_FORCED_TO_WALK( sub_5138(), 0 );
            sub_4727( ref l_U799, 6000, 1, 0 );
            sub_4727( ref l_U817, 1500, 1, 0 );
            sub_4727( ref l_U808, 3000, 1, 0 );
            sub_15431( ref l_U799 );
            sub_15431( ref l_U808 );
            l_U1093 = 4;
            break;
            case 4:
            if (NOT (IS_PED_DEAD( l_U370 )))
            {
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    sub_33831();
                    if (l_U1177 != 0)
                    {
                        sub_34205();
                    }
                    else if ((sub_15551( ref l_U817 )) || (sub_15551( ref l_U799 )))
                    {
                        sub_5005( "TEH", "tPassosExecuted times up jkill Passos", "---" );
                        l_U1177 = 1;
                        sub_34205();
                    }
                    else if ((sub_36498( g_U1178, g_U971[6]._fU0 )) > 5.50000000)
                    {
                        sub_5005( "TEH", "too close! kill passos", "---" );
                        l_U1177 = 1;
                        sub_34205();
                    }
                    else if (sub_15551( ref l_U808 ))
                    {
                        sub_36653();
                    }
                    else if (HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_5138() ), 2.00000000, 1, ref uVar9 ))
                    {
                        if ((GET_WEAPON_TYPE( GET_WEAPON_FROM_HAND( sub_5138(), 0, 0 ) )) == 930042831)
                        {
                            sub_5005( "TEH", "pLAYER fIRED A GRENADE LAUNCHER", "---" );
                            SET_PED_CORPSE( g_U824, 1 );
                        }
                        else
                        {
                            sub_36964();
                            sub_16088( ref l_U808 );
                            sub_15431( ref l_U817 );
                        }
                    };;;;;
                }
                else
                {
                    sub_5005( "SBA", "Bullet cam running, waiting for hostage taker to die", "---" );
                }
                if (sub_15312( ref l_U817 ))
                {
                    ;
                }
            }
            else if (sub_37276( l_U1017 ))
            {
                sub_37442( ref l_U1017, 0 );
            }
            if (sub_37276( l_U1037 ))
            {
                sub_37442( ref l_U1037, 0 );
            }
            if (sub_37276( l_U1027 ))
            {
                sub_37442( ref l_U1027, 0 );
            }
            l_U1092 = 1;
            sub_5005( "TEH", "Hostage taker dead", "---" );
            l_U260 = 3;
            l_U261 = 3;
            l_U1093 = 7;;
            break;
            case 7:
            sub_37653();
            if (l_U1092 == 0)
            {
                sub_39413();
                sub_33872( ref l_U844, 2000 );
                g_U1232 = 1;
                l_U1091 = 1;
                l_U1093 = 8;
                SET_AI_SHOULD_ALWAYS_MISS_PED( g_U824, 1 );
                iVar4 = (((sub_39602( ref l_U384 )) + (sub_39602( ref l_U457 ))) + (sub_39602( ref l_U517 ))) + (sub_39602( ref l_U590 ));
                sub_39716( iVar4 );
            }
            break;
            case 8:
            if ((NOT (IS_PLAYER_DEAD( sub_5160() ))) AND (sub_15551( ref l_U844 )))
            {
                SET_PLAYER_FORCED_AIM( sub_5160(), 0, 0 );
            }
            sub_41660( ref l_U384, -1054867456 );
            sub_41660( ref l_U457, -1054867456 );
            sub_41660( ref l_U517, -1054867456 );
            sub_41660( ref l_U590, -1054867456 );
            if (NOT sub_41884())
            {
                if (NOT l_U777)
                {
                    sub_41961();
                    l_U777 = 1;
                }
            }
            sub_42050();
            sub_42869();
            iVar4 = (((sub_39602( ref l_U384 )) + (sub_39602( ref l_U457 ))) + (sub_39602( ref l_U517 ))) + (sub_39602( ref l_U590 ));
            sub_39716( iVar4 );
            if (iVar4 == 0)
            {
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    sub_5005( "TEH", "BAD GUYS ALL DEAD", "---" );
                    l_U261 = 5;
                    sub_41961();
                    sub_19867( ref l_U681, 1 );
                    l_U1093 = 9;
                }
            }
            else if (l_U770 == 0)
            {
                if (iVar4 == 1)
                {
                    sub_5005( "TEH", "one left so bullettime!", "---" );
                    uVar2 = sub_46522( ref l_U384 );
                    if ((sub_14907( uVar2 )) == 0)
                    {
                        uVar2 = sub_46522( ref l_U457 );
                        if ((sub_14907( uVar2 )) == 0)
                        {
                            uVar2 = sub_46522( ref l_U517 );
                            if ((sub_14907( uVar2 )) == 0)
                            {
                                uVar2 = sub_46522( ref l_U590 );
                            }
                        }
                    }
                    if (sub_14907( uVar2 ))
                    {
                        SET_PED_ONLY_DAMAGED_BY_PLAYER( uVar2, 1 );
                        sub_5005( "bsw", "setting ALLOW_BULLET_CAMERA_TO_GAMEPLAY to FALSE for the last rotund man", 0 );
                        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
                    }
                    l_U770 = 1;
                }
            }
            if ((l_U260 == 4) AND (iVar4 <= 5))
            {
                l_U261 = 4;
            }
            break;
            case 9:
            sub_39716( 0 );
            sub_42869();
            if (l_U1091 == 5)
            {
                if ((sub_14907( sub_5138() )) AND (sub_14907( g_U824 )))
                {
                    SET_PED_PRIMARY_LOOKAT( g_U824, sub_5138() );
                }
                l_U1093 = 10;
            }
            break;
            case 10:
            sub_39716( 0 );
            sub_42869();
            if (sub_42066( l_U916 ))
            {
                g_U1231 = 1;
                l_U1093 = 11;
            }
            break;
            case 11:
            if (g_U1991[5] == 1)
            {
                SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            }
            break;
        }
    }
    return;
}

void sub_20984()
{
    sub_21029( ref l_U371, ref l_U370, -862236369, "AIT_EXPERT", 0, 25000, 2, 0, 25000 );
    if (sub_14907( l_U370 ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U370, 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( l_U370, 0 );
        SET_BULLET_CAM_PREF( l_U370, "PIST_CUSTOM_CEMET_01", "PIST_CUSTOM_CEMET_01", "PIST_CUSTOM_CEMET_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U370, 1 );
        SET_PED_RELATIONSHIP( l_U370, 0, 0 );
        SET_PED_HEALTH( l_U370, 101, 0 );
        if (sub_14907( g_U824 ))
        {
            sub_5005( "TEH", "Aim at Passos", "&&&&&" );
            SET_LOCKED_TARGET( l_U370, g_U824 );
        }
    }
    return;
}

void sub_21029(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, int iParam7, unknown uParam8)
{
    unknown uVar11;

    sub_17059( (uParam1^) );
    (uParam1^) = sub_21049( uParam0 );
    if (sub_14907( (uParam1^) ))
    {
        uVar11 = sub_7391( (uParam1^), uParam2, uParam5, 0, 1 );
        if (iParam7 != 0)
        {
            sub_6759( (uParam1^), iParam7, 0, uParam8, 0 );
        }
        SET_PED_AI_TEMPLATE( (uParam1^), uParam3 );
        SET_PED_ALERTNESS( (uParam1^), uParam6 );
        switch (uParam4)
        {
            case 0: break;
            case 1:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 13, 1 );
            break;
            case 2:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 14, 1 );
            break;
            case 3:
            ENABLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar11, 12, 1 );
            break;
        }
    }
    return;
}

void sub_21049(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_967( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_21528( iParam0->_fU40 );
    sub_21608( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_21528(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_21608(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_22172()
{
    sub_5005( "SBA", "CREATE_ROTUNDA_PASSOS", "***" );
    sub_17059( g_U824 );
    g_U824 = sub_21049( ref l_U779 );
    sub_22251( ref g_U824 );
    SET_PED_PROOFS( g_U824, 0, 0, 0, 1, 1 );
    SET_AI_SHOULD_ALWAYS_MISS_PED( g_U824, 0 );
    SET_PED_GORE( g_U824, 1 );
    SET_PED_GORE_FROM_PLAYER( g_U824, 1 );
    SET_PED_GORE_FROM_NPC( g_U824, 0 );
    return;
}

void sub_22251(unknown uParam0)
{
    sub_5005( "SBA", "P_SETUP_PASSOS_GENERAL_ATTRIBUTES", "***" );
    if (sub_14907( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 0 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 1 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 1 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 0 );
        SET_PED_CONSUMING_AMMO( (uParam0^), 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^), 1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^), 1 );
    }
    return;
}

void sub_22654()
{
    int I;

    sub_879( "MF]] s_cemet_rotunda - START: P_ROT_KPG_GOONS_SPAWN" );
    SET_PED_MODEL_LOD_DISTANCES( g_U1341, 25.00000000, 100.00000000 );
    sub_22745();
    sub_22850( -862236369, 0, 25000, 25000 );
    sub_22956( 1, -691403429, 0, 25000, 25000 );
    sub_22956( 2, 434544317, -862236369, 25000, 25000 );
    sub_23122( ref l_U388, ref l_U384, ref l_U429, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 3, 0, 25000, "Rotunda forceA" );
    for ( I = 0; I <= (l_U384 - 1); I++ )
    {
        if (sub_14907( l_U384[I] ))
        {
            sub_24885( ref l_U435, l_U384[I], 1 );
            sub_24885( ref l_U494, l_U384[I], 1 );
            sub_24885( ref l_U495, l_U384[I], 1 );
        }
    }
    sub_25010( ref l_U384, 1 );
    sub_25112( ref l_U384, 0, 0 );
    sub_22745();
    sub_22850( -862236369, 0, 25000, 25000 );
    sub_22956( 0, -691403429, 0, 25000, 25000 );
    sub_22956( 2, -691403429, 0, 25000, 25000 );
    sub_23122( ref l_U460, ref l_U457, ref l_U488, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 3, 0, 25000, "Rotunda forceB" );
    for ( I = 0; I <= (l_U457 - 1); I++ )
    {
        if (sub_14907( l_U457[I] ))
        {
            sub_24885( ref l_U435, l_U457[I], 1 );
            sub_24885( ref l_U494, l_U457[I], 1 );
            sub_24885( ref l_U495, l_U457[I], 1 );
            sub_24885( ref l_U568, l_U457[I], 1 );
        }
    }
    sub_25010( ref l_U457, 1 );
    sub_25112( ref l_U457, 0, 0 );
    sub_22745();
    sub_22850( -862236369, 0, 25000, 25000 );
    sub_22956( 1, 434544317, -862236369, 25000, 25000 );
    sub_23122( ref l_U521, ref l_U517, ref l_U562, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 3, 0, 25000, "Rotunda forceC" );
    for ( I = 0; I <= (l_U517 - 1); I++ )
    {
        if (sub_14907( l_U517[I] ))
        {
            sub_24885( ref l_U494, l_U517[I], 1 );
            sub_24885( ref l_U495, l_U517[I], 1 );
            sub_24885( ref l_U568, l_U517[I], 1 );
            sub_24885( ref l_U627, l_U517[I], 1 );
            sub_24885( ref l_U628, l_U517[I], 1 );
            sub_24885( ref l_U629, l_U517[I], 1 );
        }
    }
    sub_25010( ref l_U517, 1 );
    sub_25112( ref l_U517, 0, 0 );
    sub_22745();
    sub_22850( -862236369, 0, 25000, 25000 );
    sub_22956( 0, -691403429, 0, 25000, 25000 );
    sub_22956( 1, -691403429, 0, 25000, 25000 );
    sub_22956( 2, 434544317, -862236369, 25000, 25000 );
    sub_23122( ref l_U593, ref l_U590, ref l_U621, 0, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 3, 0, 25000, "Rotunda forceD" );
    for ( I = 0; I <= (l_U590 - 1); I++ )
    {
        if (sub_14907( l_U590[I] ))
        {
            sub_24885( ref l_U568, l_U590[I], 1 );
            sub_24885( ref l_U627, l_U590[I], 1 );
            sub_24885( ref l_U628, l_U590[I], 1 );
            sub_24885( ref l_U629, l_U590[I], 1 );
        }
    }
    sub_25010( ref l_U590, 1 );
    sub_25112( ref l_U590, 0, 0 );
    sub_879( "MF]] s_cemet_rotunda - END: P_ROT_KPG_GOONS_SPAWN" );
    return;
}

void sub_22745()
{
    int I;

    for ( I = 0; I < 10; I++ )
    {
        l_U44[I]._fU0 = 0;
        l_U44[I]._fU4 = 25000;
        l_U44[I]._fU8 = 0;
        l_U44[I]._fU12 = 25000;
    }
    return;
}

void sub_22850(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < 10; I++ )
    {
        l_U44[I]._fU0 = uParam0;
        l_U44[I]._fU4 = uParam2;
        l_U44[I]._fU8 = uParam1;
        l_U44[I]._fU12 = uParam3;
    }
    return;
}

int sub_22956(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (iParam0 < 10)
    {
        l_U44[iParam0]._fU0 = uParam1;
        l_U44[iParam0]._fU4 = uParam3;
        l_U44[iParam0]._fU8 = uParam2;
        l_U44[iParam0]._fU12 = uParam4;
        return 1;
    }
    return 0;
}

void sub_23122(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5, boolean bParam6, unknown uParam7, unknown uParam8, unknown uParam9, int iParam10, unknown uParam11, unknown uParam12)
{
    int I;
    unknown uVar16;
    int iVar17;

    if ((uParam0^) != (uParam1^))
    {
        SCRIPT_ASSERT( "PED_ARRAY_INITIALIZE - Array sizes don't match!!", 0 );
        return;
    }
    sub_23211( uParam2, uParam4, 0 );
    if (IS_STRING_NULL( uParam12 ))
    {
        uParam12 = l_U43;
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_17059( (uParam1^)[I] );
        (uParam1^)[I] = sub_21049( ref (uParam0^)[I] );
        if (sub_14907( (uParam1^)[I] ))
        {
            sub_23483( (uParam1^)[I] );
            SET_PED_AI_TEMPLATE( (uParam1^)[I], uParam5 );
            SET_PED_ALERTNESS( (uParam1^)[I], uParam9 );
            SET_PED_ALLOWED_TO_SURRENDER( (uParam1^)[I], 0 );
            sub_23641( (uParam1^)[I], uParam2 );
            if (iParam3 != 0)
            {
                if (iParam3 != -1569615261)
                {
                    uVar16 = sub_7391( (uParam1^)[I], iParam3, uParam8, 0, 0 );
                }
                if (iParam10 != 0)
                {
                    sub_6759( (uParam1^)[I], iParam10, 0, uParam11, 0 );
                }
            }
            else if (I < 10)
            {
                iVar17 = l_U44[I]._fU0;
                if ((iVar17 != -1569615261) AND (iVar17 != 0))
                {
                    sub_7391( (uParam1^)[I], iVar17, l_U44[I]._fU4, 0, 0 );
                }
                if (l_U44[I]._fU8 != 0)
                {
                    sub_6759( (uParam1^)[I], l_U44[I]._fU8, 0, l_U44[I]._fU12, 0 );
                }
            }
            if (bParam6)
            {
                sub_24136( (uParam1^)[I], iParam3 );
            }
            switch (uParam7)
            {
                case 0: break;
                case 1:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                break;
                case 2:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                break;
                case 3:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                break;
            }
        }
        WAIT( 1 );
    }
    sub_24732( uParam1, uParam12 );
    return;
}

void sub_23211(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_23483(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_23641(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_879( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_23211( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_23211( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_24136(unknown uParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case -1569615261:
        case 406496141:
        case -862236369:
        case 456708483:
        case -1464892298:
        case 68019059:
        case -612753081:
        case -820634585:
        SET_PED_COMBAT_RANGE_MAX( uParam0, 10.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 434544317:
        case 1845102363:
        case -168327769:
        case -184942895:
        case 514118749:
        case 1964270085:
        case -691403429:
        case 1478009203:
        case -1404433099:
        case 1194438308:
        SET_PED_COMBAT_RANGE( uParam0, 1 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 20.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case -1013714740:
        case -1074756423:
        case 1308526797:
        case 840671040:
        case 57534114:
        case 724901397:
        case 1992962408:
        SET_PED_COMBAT_RANGE( uParam0, 2 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 30.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 1224272620:
        case 10648147:
        case 377623895:
        case 319712764:
        case -110877124:
        case -1659006841:
        SET_PED_COMBAT_RANGE( uParam0, 3 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 50.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 5.00000000 );
        break;
    }
    return;
}

void sub_24732(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_24885(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_25010(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_25044( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_25044(unknown uParam0, unknown uParam1)
{
    if (sub_14907( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

void sub_25112(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (sub_14907( (uParam0^)[I] ))
        {
            SET_PED_RELATIONSHIP( (uParam0^)[I], uParam1, uParam2 );
        }
    }
    return;
}

void sub_26160(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_26191( (uParam0^)[I] );
    }
    return;
}

void sub_26191(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_26315(unknown uParam0, unknown uParam1)
{
    sub_5005( "RJM", "REGISTER_PEDS_MID_04_CEM_GAMEPLAY - start", 0 );
    if (sub_14892())
    {
        sub_5005( "RJM", "Registering player with 04_01_pt01", 0 );
        sub_26446( ref l_U291, 1, 1 );
        sub_27712( l_U291, 0 );
        sub_27770( 1 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_5138(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE_ZERO_BLEND" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( sub_5138(), 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_5138(), g_U971[6]._fU0, g_U971[6]._fU12 );
    }
    if (sub_14907( g_U824 ))
    {
        sub_5005( "RJM", "Registering piPassos with MID_04_CEM_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U824, "Pass_NY_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( g_U824, g_U779[6]._fU0, g_U779[6]._fU12 );
        ISEQ_REGISTER_ENTITY( 358192565, "passos", g_U824, 0 );
    }
    if (sub_14907( (uParam0^) ))
    {
        sub_5005( "RJM", "Registering piGunGuy with MID_04_CEM_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam0^), "G_NY_C_GUNP_C", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( (uParam0^), 39.68000000, 51.00000000, 2.61000000, 375.00000000 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 ), "W_PI_Clt1911_Aa_H^1", 0 );
        ISEQ_REGISTER_ENTITY( 358192565, "hostagetaker", (uParam0^), 0 );
    }
    if (sub_14907( (uParam1^)[0] ))
    {
        sub_5005( "RJM", "Registering piCEMGuys[0] with MID_04_CEM_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam1^)[0], "G_NY_C_Sold_D", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( (uParam1^)[0], ref g_U1249 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( (uParam1^)[0], 0, 0 ), "W_SB_M10_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( (uParam1^)[0], 63.12915000, 57.89789000, 3.95991400, 27.80000000 );
    }
    if (sub_14907( (uParam1^)[1] ))
    {
        sub_5005( "RJM", "Registering piCEMGuys[1] with MID_04_CEM_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam1^)[1], "G_NY_C_Sold_D^1", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( (uParam1^)[1], ref g_U1249 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( (uParam1^)[1], 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( (uParam1^)[1], 69.06887000, 55.23754000, 5.30981100, 26.30000000 );
    }
    CUTSCENE_REGISTER_ISEQ( 358192565 );
    sub_5005( "RJM", "REGISTER_PEDS_MID_04_CEM_GAMEPLAY - end", 0 );
    return;
}

void sub_26446(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_26458( iParam0 );
    if ((IS_PED_DEAD( sub_5138() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_5138(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_26637( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_26865( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_5138(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_5138(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_5138(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_5138(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_5138() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_5138(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_5138(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_5138(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_5138(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_5138() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_5138(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_26865( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_5138(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_5138(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_5138(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_26458(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_26637(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_26865(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_27712(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;

    uVar21 = uParam0._fU12._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    return;
}

void sub_27770(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_5138() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_5138(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_26637( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_27875();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_5138(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_27875()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_5138() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_5138(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_26637( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_5138(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_5138(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_5138(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

int sub_29101(boolean bParam0)
{
    unknown uVar3;
    unknown uVar4;

    sub_5005( "RJM", "PLAY_CUTSCENE_MID_04_CEM start", 0 );
    sub_29160( 1, 0, 0, 1 );
    sub_13033( ref l_U283, 1 );
    if (NOT bParam0)
    {
        sub_29337();
        sub_29563();
        sub_29869();
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1508._fU0, g_U1508._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1515._fU0, g_U1515._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1522._fU0, g_U1522._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1529._fU0, g_U1529._fU4 );
    START_SEAMLESS_CUTSCENE();
    SET_CAM_SIDE_LEFT( 1 );
    while (NOT HAS_CUTSCENE_FINISHED())
    {
        WAIT( 0 );
    }
    sub_30707( l_U291, 1 );
    sub_27712( l_U291, 1 );
    if (bParam0)
    {
        SET_CAM_SIDE_LEFT( 1 );
        if (NOT (IS_PLAYER_DEAD( sub_5160() )))
        {
            SET_PLAYER_FORCED_AIM( sub_5160(), 1, 0 );
            SET_FORCED_AIM_INTENTION_DIRECTION( sub_30892( (vector( 40.07000000, 50.70000000, 2.61000000)) - (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_5138() ))) ) );
            CAMERA_SNAP_POINT_AT_COORD( 40.07000000, 50.70000000, 2.61000000 );
        }
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[6]._fU16, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[6]._fU20, 1065353216, 0 );
    sub_31059();
    sub_31117();
    sub_31298( 1, 1 );
    sub_5005( "RJM", "PLAY_CUTSCENE_MID_04_CEM end", 0 );
    return 1;
}

void sub_29160(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_5138() )))
        {
            SET_PLAYER_CONTROL( sub_5160(), 0, uParam2 );
            SET_PED_DUCKING( sub_5138(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_5138() );
            }
            SET_PED_INVINCIBLE( sub_5138(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_29337()
{
    sub_29352( g_U1332 );
    sub_29352( g_U1341 );
    sub_29352( g_U1342 );
    return;
}

void sub_29352(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_879( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        WAIT( 0 );
    }
    return;
}

void sub_29563()
{
    sub_5005( "RJM", "CREATE_MID_04_CEM_PEDS_AND_OBJECTS - start", 0 );
    sub_3562( ref l_U310, 0, 0, 0, 0.00000000, 1265654828, 26, 6, 0, 0, 0 );
    sub_3562( ref l_U324, 0, 0, 0, 0.00000000, -1127141388, 26, 6, 0, 0, 0 );
    sub_3562( ref l_U338, 0, 0, 0, 0.00000000, -81919768, 26, 6, 0, 0, 0 );
    sub_3562( ref l_U352, 0, 0, 0, 0.00000000, 614167834, 26, 6, 0, 0, 0 );
    l_U309 = sub_21049( ref l_U310 );
    l_U323 = sub_21049( ref l_U324 );
    l_U337 = sub_21049( ref l_U338 );
    l_U351 = sub_21049( ref l_U352 );
    sub_5005( "RJM", "CREATE_MID_04_CEM_PEDS_AND_OBJECTS - end", 0 );
    return;
}

void sub_29869()
{
    sub_5005( "RJM", "REGISTER_PEDS_MID_04_CEM_CUTSCENE_ONLY - start", 0 );
    if (sub_14892())
    {
        sub_5005( "RJM", "Registering player with 04_01_pt01", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_5138(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
    }
    if (sub_14907( l_U309 ))
    {
        sub_5005( "RJM", "Registering piMID_04_CEMPassos with MID_04_CEM_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U309, "Pass_NY_H", 0 );
    }
    if (sub_14907( l_U323 ))
    {
        sub_5005( "RJM", "Registering piMID_04_CEMGunGuy with MID_04_CEM_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U323, "G_NY_C_GUNP_C", 0 );
    }
    if (sub_14907( l_U337 ))
    {
        sub_5005( "RJM", "Registering piMID_04_CEMGuy2 with MID_04_CEM_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U337, "G_NY_C_Sold_D", 0 );
    }
    if (sub_14907( l_U351 ))
    {
        sub_5005( "RJM", "Registering piMID_04_CEMGuy3 with MID_04_CEM_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U351, "G_NY_C_Sold_D^1", 0 );
    }
    sub_5005( "RJM", "REGISTER_PEDS_MID_04_CEM_CUTSCENE_ONLY - end", 0 );
    return;
}

void sub_30707(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

void sub_30892(unknown uParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown Result;
    unknown uVar7;
    unknown uVar8;

    uVar5 = SQRT( ((uParam0._fU0 * uParam0._fU0) + (uParam0._fU4 * uParam0._fU4)) + (uParam0._fU8 * uParam0._fU8) );
    Result._fU0 = uParam0._fU0 / uVar5;
    Result._fU4 = uParam0._fU4 / uVar5;
    Result._fU8 = uParam0._fU8 / uVar5;
    return Result;
}

void sub_31059()
{
    sub_17059( l_U309 );
    sub_17059( l_U323 );
    sub_17059( l_U337 );
    sub_17059( l_U351 );
    return;
}

void sub_31117()
{
    sub_31132( g_U1332 );
    sub_31132( g_U1341 );
    sub_31132( g_U1342 );
    return;
}

void sub_31132(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_879( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_31298(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_5138() )))
    {
        SET_PLAYER_CONTROL( sub_5160(), 1, 0 );
        SET_PED_INVINCIBLE( sub_5138(), 0 );
        if (bParam0)
        {
            sub_31379();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_31379()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_5138() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_5138(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_5138(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_5138(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_5138(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_31656()
{
    sub_31666();
    return;
}

void sub_31666()
{
    if (NOT (IS_PED_DEAD( g_U824 )))
    {
        CLEAR_PED_TASKS( g_U824 );
        sub_31732( g_U824, g_U779[6]._fU0, g_U779[6]._fU12 );
        ISEQ_REGISTER_ENTITY( 358192565, "passos", g_U824, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U370 )))
    {
        CLEAR_PED_TASKS( l_U370 );
        sub_31732( l_U370, l_U371._fU0, l_U371._fU12 );
        ISEQ_REGISTER_ENTITY( 358192565, "hostagetaker", l_U370, 0 );
    }
    SET_PED_PRIMARY_LOOKAT( l_U370, sub_5138() );
    ISEQ_START( 358192565 );
    return;
}

void sub_31732(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

int sub_32123()
{
    if (l_U258)
    {
        sub_5005( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U258 = 0;
        return 1;
        break;
    }
    sub_5005( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

void sub_32380()
{
    sub_5005( "TEH", "P_DIAL_ROTUNDA_OPEN_NIS", "---" );
    if ((NOT (IS_PED_DEAD( l_U370 ))) AND (sub_14892()))
    {
        sub_32461( ref l_U1017 );
        sub_32543( 0, g_U1178, "MAX", ref l_U1017, 2, 0 );
        sub_32543( 1, l_U370, "M8_NY_31_AVG", ref l_U1017, 2, 0 );
        sub_32792( "SCMT_VIG12", ref l_U1017, 8, 1 );
    }
    return;
}

void sub_32461(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_32543(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_32792(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_32816( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_32816(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_32871( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_32871(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_32906( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_33400( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_32906(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_33400(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_33580()
{
    sub_26160( ref l_U384 );
    sub_26160( ref l_U457 );
    sub_26160( ref l_U517 );
    sub_26160( ref l_U590 );
    sub_33626();
    return;
}

void sub_33626()
{
    int I;

    for ( I = 0; I <= (l_U384 - 1); I++ )
    {
        SET_PED_INVINCIBLE( l_U384[I], 0 );
        SET_PED_GORE( l_U384[I], 1 );
    }
    return;
}

void sub_33831()
{
    if (l_U835._fU20 == 0)
    {
        sub_33872( ref l_U835, GET_RANDOM_INT_IN_RANGE( 1000, 1200 ) );
    }
    else if (sub_15551( ref l_U835 ))
    {
        sub_33958( "HANDLE_PASSOS_WORRIED_DIAG", 0, 0 );
        sub_34061( "SCMT_PSWG", ref l_U1047, g_U824, "PASSOS", 1 );
        sub_33872( ref l_U835, GET_RANDOM_INT_IN_RANGE( 2000, 2500 ) );
    }
    return;
}

void sub_33872(unknown uParam0, unknown uParam1)
{
    sub_4727( uParam0, uParam1, 1, 0 );
    sub_15431( uParam0 );
    return;
}

void sub_33958(unknown uParam0, string sParam1, string sParam2)
{
    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "ML";
    }
    if (IS_STRING_NULL( sParam1 ))
    {
        sParam1 = "---";
    }
    sub_5005( sParam2, uParam0, sParam1 );
    return;
}

void sub_34061(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if ((NOT (IS_PED_DEAD( uParam2 ))) AND (NOT (IS_PED_DEAD( sub_5138() ))))
    {
        sub_32461( uParam1 );
        sub_32543( 0, sub_5138(), "MAX", uParam1, 2, 0 );
        sub_32543( uParam4, uParam2, uParam3, uParam1, 2, 0 );
        sub_32792( uParam0, uParam1, 8, 1 );
    }
    return;
}

void sub_34205()
{
    switch (l_U1177)
    {
        case 1:
        sub_5005( "TEH", "P_HOSTAGE_TAKER_KILLS_EDISON", 0 );
        sub_29160( 1, 0, 0, 0 );
        SET_PED_PRIMARY_LOOKAT( l_U370, g_U824 );
        PED_SET_ACTION_INTENTION( l_U370, 56, -1, 0, 0, 0 );
        sub_34376( ref l_U1096, l_U1127, l_U1130, l_U1134, l_U1133 );
        sub_34376( ref l_U1135, l_U1166, l_U1169, l_U1173, l_U1172 );
        sub_34618( ref l_U1096 );
        sub_34734( "CEM_PASSOS3_SCRIPTED_FAIL_FX", 0 );
        SET_PED_CAN_RAGDOLL( l_U370, 0 );
        SET_PED_INVINCIBLE( l_U370, 1 );
        if (sub_14907( g_U824 ))
        {
            sub_34974( ref g_U824 );
        }
        SHAKE_CAM( l_U1096._fU0, sub_35273(), 0.25000000 );
        l_U1177 = 4;
        break;
        case 4:
        if (sub_14907( g_U824 ))
        {
            if (sub_14907( l_U370 ))
            {
                if (PED_ANIM_EVENT( l_U370, -1531652494 ))
                {
                    sub_5005( "TEH", "dddddddddddddddddddddd First shot", 0 );
                    sub_31732( g_U1178, g_U971[6]._fU0, g_U971[6]._fU12 );
                    SHAKE_CAM( l_U1096._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
                    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U370, 55060, 0.50000000, 0, -0.50000000 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U824, 65488, 0, 0, 0 ), 100, 1, -862236369, 0 );
                    sub_35585( ref l_U1096, ref l_U1135, l_U1172, 1, 1 );
                    START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "Blood_headsoup_S_01", g_U824, 0.25000000, 0, 0, 0, 0, 0, 57704, 2 );
                    PED_SET_ACTION_INTENTION( g_U824, 48, -1, 0, 0, 0 );
                    l_U1177 = 5;
                }
            }
        }
        break;
        case 5:
        if (sub_14907( l_U370 ))
        {
            if (PED_ANIM_EVENT( l_U370, -1531652494 ))
            {
                sub_5005( "TEH", "cccccccccccccccccccccc    Second shot", 0 );
                SHAKE_CAM( l_U1096._fU0, "SMALL_EXPLOSION_SHAKE", 1 );
                START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "Blood_headsoup_S_01", g_U824, 0.25000000, 0, 0, 0, 0, 0, 57704, 2 );
                sub_35960( g_U824 );
                l_U1177 = 6;
            }
        }
        break;
        case 6:
        if (sub_36127( ref l_U1096, 1 ))
        {
            sub_5005( "TEH", "*******   Unregistering hostagetaker", 0 );
            ISEQ_UNREGISTER_ENTITY( 358192565, "hostagetaker" );
            END_POSTFX_BLENDER( 3, 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            l_U1177 = 0;
        }
        break;
    }
    return;
}

void sub_34376(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_4727( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U763, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_34618(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_15431( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_34734(unknown uParam0, boolean bParam1)
{
    sub_16897( ref l_U259 );
    l_U259 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U259, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

void sub_34974(unknown uParam0)
{
    sub_5005( "RJM", "P_SETUP_PASSOS_FOR_FAILURE_SCENE", "***" );
    if (sub_14907( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 0 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 1 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 0 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 0 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 1 );
    }
    return;
}

string sub_35273()
{
    return "WOBBLY_SHAKE";
}

void sub_35585(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE_WITH_INTERP( iParam1->_fU0, iParam0->_fU0, uParam2, uParam3, uParam4 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_15431( iParam1 + 48 );
    iParam1->_fU32 = 1;
    iParam1->_fU40 = 1;
    return;
}

void sub_35960(unknown uParam0)
{
    if (sub_14907( uParam0 ))
    {
        START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "Blood_headsoup_S_01", uParam0, 0.25000000, 0, 0, 0, 0, 0, 57704, 2 );
        sub_36038( uParam0 );
    }
    return;
}

void sub_36038(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

int sub_36127(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_15551( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_15551( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_36498(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

void sub_36653()
{
    sub_5005( "TEH", "P_DIAL_HOSTAGE_WARNING", "---" );
    if ((NOT (IS_PED_DEAD( l_U370 ))) AND (sub_14892()))
    {
        sub_32461( ref l_U1027 );
        sub_32543( 0, g_U1178, "MAX", ref l_U1017, 2, 0 );
        sub_32543( 1, l_U370, "M8_NY_31_AVG", ref l_U1017, 2, 0 );
        sub_32792( "SCMT_VIG12", ref l_U1027, 8, 1 );
    }
    return;
}

void sub_36964()
{
    sub_5005( "TEH", "P_DIAL_HOSTAGE_WARNING_AFTER_SHOT", "---" );
    if ((NOT (IS_PED_DEAD( l_U370 ))) AND (NOT (IS_PED_DEAD( g_U1178 ))))
    {
        sub_32461( ref l_U1037 );
        sub_32543( 0, g_U1178, "MAX", ref l_U1037, 2, 0 );
        sub_32543( 1, l_U370, "M8_NY_31_AVG", ref l_U1037, 2, 0 );
        sub_32792( "SCMT_VIGTW", ref l_U1037, 8, 1 );
    }
    return;
}

int sub_37276(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_37289( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_37289(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_37442(int iParam0, unknown uParam1)
{
    if (NOT (sub_37289( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

void sub_37653()
{
    if (NOT (IS_PED_DEAD( g_U824 )))
    {
        switch (l_U1092)
        {
            case 1:
            sub_5005( "TEH", "P_EDISON_JOINS_FIGHT SETUP", "---" );
            if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
            {
                sub_29160( 1, 0, 0, 1 );
                SET_FORCED_AIM_INTENTION_DIRECTION( sub_30892( (vector( 40.07000000, 50.70000000, 2.61000000)) - (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_5138() ))) ) );
                CAMERA_SNAP_POINT_AT_COORD( 40.07000000, 50.70000000, 2.61000000 );
                CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_ROT", "LCEM09_EDI_HOSTAGE_10_GMED_DIES_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
                sub_37934();
                PED_SET_ACTION_INTENTION( g_U824, 49, -1, 0, 0, 0 );
                sub_4727( ref l_U826, 1200, 1, 0 );
                sub_15431( ref l_U826 );
                sub_5005( "RJM", "P_EDISON_JOINS_FIGHT - Going to ROTPAS_REARM_GRABBING_GUN", 0 );
                l_U1092 = 2;
            }
            break;
            case 2:
            if (sub_15551( ref l_U826 ))
            {
                sub_5005( "BSW", "ROTPAS_REARM_GRABBING_GUN grabbing...gun...", 0 );
                sub_38492();
                sub_7391( g_U824, -862236369, 25000, 0, 0 );
            }
            if ((PED_GET_ACTION_INTENTION_STATUS( g_U824, 51 )) == 1)
            {
                REMOVE_PLACEMENT( l_U792 );
                sub_5005( "RJM", "P_EDISON_JOINS_FIGHT - Going to ROTPAS_CLEANUP", 0 );
                l_U1092 = 4;
            }
            break;
            case 4:
            if ((NOT IS_ANIMATED_CAMERA_PLAYING()) || ((CAMERA_ANIMATED_CURRENT_TIME() + 1) >= (CAMERA_ANIMATED_LENGTH( "LEVEL_S_CEM_ROT", "LCEM09_EDI_HOSTAGE_10_GMED_DIES_CAM" ))))
            {
                sub_31732( g_U824, 40.79000000, 49.24000000, 2.61000000, 299.62190000 );
                sub_5005( "TEH", "*******   Camera is done", 0 );
                sub_33958( "Ending Passos Gets Up Sequence", 0, 0 );
                if (sub_14907( g_U824 ))
                {
                    CLEAR_PED_TASKS( g_U824 );
                    SET_PED_INVINCIBLE( g_U824, 0 );
                    SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U824, 1 );
                }
                ISEQ_UNREGISTER_ENTITY( 358192565, "hostagetaker" );
                ISEQ_UNREGISTER_ENTITY( 358192565, "passos" );
                ISEQ_TERMINATE( 358192565 );
                CAMERA_CLEAR_POINT_AT_TARGET();
                RESET_FORCED_AIM_INTENTION_DIRECTION();
                CAMERA_ANIMATED_STOP( 0, 0 );
                sub_31298( 1, 1 );
                sub_39097();
                sub_5005( "RJM", "P_EDISON_JOINS_FIGHT - Going to ROTPAS_REARM_INACTIVE", 0 );
                l_U1092 = 0;
            }
            break;
        }
    }
    return;
}

void sub_37934()
{
    sub_37954( ref l_U384, g_U824, 1 );
    if (NOT (IS_PED_DEAD( l_U384[0] )))
    {
        CLEAR_PED_TASKS( l_U384[0] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U384[0], 0 );
    }
    sub_37954( ref l_U457, g_U824, 1 );
    if (NOT (IS_PED_DEAD( l_U384[0] )))
    {
        CLEAR_PED_TASKS( l_U384[0] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U457[0], 0 );
    }
    sub_37954( ref l_U517, g_U824, 1 );
    if (NOT (IS_PED_DEAD( l_U384[0] )))
    {
        CLEAR_PED_TASKS( l_U384[0] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U517[0], 0 );
    }
    sub_37954( ref l_U590, g_U824, 1 );
    return;
}

void sub_37954(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^)[I] ))))
        {
            REGISTER_TARGET( (uParam0^)[I], uParam1 );
            if (iParam2 == 1)
            {
                CLEAR_LOCKED_TARGET( (uParam0^)[I] );
                SET_LOCKED_TARGET( (uParam0^)[I], uParam1 );
            }
        }
    }
    return;
}

void sub_38492()
{
    PLAY_IMAGEFX( "DOUBLE_TINT_BLUE_FLASH", 4, 0 );
    PLAY_IMAGEFX( "DISTORT_INTERLACE_MIDDLE_INVRT", 4, 0 );
    PLAY_IMAGEFX( "TRIPLE_MOVE_RIGHT_COLOR_SPLIT6", 4, 0 );
    return;
}

void sub_39097()
{
    sub_37954( ref l_U384, g_U824, 1 );
    sub_39128( ref l_U384, 0, 1 );
    sub_37954( ref l_U457, g_U824, 1 );
    sub_39128( ref l_U457, 0, 1 );
    sub_37954( ref l_U517, g_U824, 1 );
    sub_39128( ref l_U517, 0, 1 );
    sub_37954( ref l_U590, g_U824, 1 );
    sub_39128( ref l_U590, 0, 1 );
    return;
}

void sub_39128(unknown uParam0, unknown uParam1, boolean bParam2)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            if (bParam2)
            {
                CLEAR_PED_TASKS( (uParam0^)[I] );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^)[I], uParam1 );
        }
    }
    return;
}

void sub_39413()
{
    sub_33958( "DIAG_MAX_ASKS_PASSOS_OK", 0, 0 );
    if (sub_14892())
    {
        sub_32461( ref l_U1067 );
        sub_32543( 0, sub_5138(), "MAX", ref l_U1067, 2, 0 );
        sub_32543( 1, sub_5138(), "MAX", ref l_U1067, 2, 0 );
        sub_32792( "SCMT_MJSPSS", ref l_U1067, 8, 1 );
    }
    return;
}

void sub_39602(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_39716(int iParam0)
{
    if (NOT (IS_PED_DEAD( g_U824 )))
    {
        switch (l_U1091)
        {
            case 1:
            if (sub_14907( g_U824 ))
            {
                CLEAR_PED_TASKS( g_U824 );
                sub_5005( "TEH", " ROTPAS_SETUP", "***" );
                ISEQ_REGISTER_ENTITY( -52418046, "passos", g_U824, 0 );
                sub_39889( g_U824 );
            }
            ISEQ_START( -52418046 );
            l_U1091 = 2;
            break;
            case 2:
            if ((PED_GET_ACTION_INTENTION_STATUS( g_U824, 52 )) == 1)
            {
                sub_5005( "TEH", "PASSOS in Position", "***" );
                l_U1091 = 3;
            }
            break;
            case 3:
            if (((IS_PED_ON_SCREEN( g_U824, 0 )) == 0) AND ((sub_14907( g_U824 )) AND (iParam0 == 0)))
            {
                sub_5005( "TEH", " ROTPAS_MOVING_TO_GATE", "***" );
                sub_31732( g_U824, 50.03858000, 42.00000000, 2.58000000, 210.00000000 );
                PED_FINISH_ACTION_INTENTION( g_U824, 55 );
                PED_SET_ACTION_INTENTION( g_U824, 56, -1, 0, 0, 0 );
                l_U1091 = 4;
            }
            else if (l_U776 == 0)
            {
                if ((IS_PED_ON_SCREEN( g_U824, 0 )) == 0)
                {
                    l_U776 = 1;
                    SET_PED_HEADING( g_U824, -80.00000000 );
                }
            }
            else if (sub_40374())
            {
                PED_SET_ACTION_INTENTION( g_U824, 55, -1, 0, 0, 0 );
            }
            else
            {
                PED_FINISH_ACTION_INTENTION( g_U824, 55 );
            };;;
            break;
            case 4:
            if ((PED_GET_ACTION_INTENTION_STATUS( g_U824, 57 )) == 1)
            {
                sub_5005( "TEH", " ROTPAS_IDLE_AT_GATE", "***" );
                l_U1091 = 5;
            }
            break;
            case 5:
            if (sub_40762())
            {
                sub_40872( g_U824 );
                sub_5005( "SBA", "UPDATE_PASSOS_VIG20D - Max Shot near Passos", 0 );
                PED_SET_ACTION_INTENTION( g_U824, 58, 1500, 0, 0, 0 );
            }
            if ((sub_14892()) AND (sub_41081()))
            {
                if (NOT l_U775)
                {
                    if (NOT ((PED_GET_ACTION_INTENTION_STATUS( g_U824, 52 )) == 3))
                    {
                        if ((IS_PLAYER_GUN_RAISED( sub_5160() )) AND (IS_PED_IN_CROSSHAIR_CYLINDER_OFFSET( g_U824, 0.40000000, 1.00000000, 0.00000000, 0.00000000, -0.20000000, 12.00000000, 1 )))
                        {
                            sub_41247( g_U824 );
                            sub_5005( "SBA", "UPDATE_PASSOS_VIG20D - Max is aiming at Passos", 0 );
                            PED_SET_ACTION_INTENTION( g_U824, 52, 1000, 0, 0, 0 );
                            l_U775 = 1;
                        }
                    }
                }
                else if (NOT (IS_PED_IN_CROSSHAIR_CYLINDER_OFFSET( g_U824, 0.40000000, 1.00000000, 0.00000000, 0.00000000, -0.20000000, 12.00000000, 1 )))
                {
                    sub_5005( "SBA", "UPDATE_PASSOS_VIG20D - Max is NOT aiming at Passos", 0 );
                    l_U775 = 0;
                }
            }
            break;
        }
    }
    return;
}

void sub_39889(unknown uParam0)
{
    if (sub_14907( uParam0 ))
    {
        PED_FINISH_ACTION_INTENTION( uParam0, 47 );
        PED_FINISH_ACTION_INTENTION( uParam0, 48 );
        PED_FINISH_ACTION_INTENTION( uParam0, 49 );
        PED_FINISH_ACTION_INTENTION( uParam0, 50 );
        PED_FINISH_ACTION_INTENTION( uParam0, 51 );
        PED_FINISH_ACTION_INTENTION( uParam0, 52 );
        PED_FINISH_ACTION_INTENTION( uParam0, 53 );
        PED_FINISH_ACTION_INTENTION( uParam0, 54 );
        PED_FINISH_ACTION_INTENTION( uParam0, 55 );
        PED_FINISH_ACTION_INTENTION( uParam0, 56 );
        PED_FINISH_ACTION_INTENTION( uParam0, 57 );
        PED_FINISH_ACTION_INTENTION( uParam0, 58 );
    }
    return;
}

int sub_40374()
{
    int iVar2;
    int iVar3;

    iVar2 = 0;
    iVar3 = 0;
    if (sub_14907( g_U824 ))
    {
        while (iVar3 < 3)
        {
            if (sub_14907( l_U384[iVar3] ))
            {
                iVar2 = iVar3;
                if (iVar2 != l_U1015)
                {
                    sub_40464( g_U824, l_U384[iVar3] );
                    l_U1016 = l_U384[iVar3];
                    l_U1015 = iVar3;
                }
                return 1;
            }
            iVar3++;
        }
        iVar3 = 0;
    }
    return 0;
}

void sub_40464(unknown uParam0, unknown uParam1)
{
    if (sub_14907( uParam0 ))
    {
        if (sub_14907( uParam1 ))
        {
            sub_40500( uParam0 );
            REGISTER_TARGET( uParam0, uParam1 );
            SET_LOCKED_TARGET( uParam0, uParam1 );
            SET_PED_DEFAULT_AIM_AT_PED( uParam0, uParam1 );
        }
    }
    return;
}

void sub_40500(unknown uParam0)
{
    if (sub_14907( uParam0 ))
    {
        CLEAR_LOCKED_TARGET( uParam0 );
        CLEAR_PED_DEFAULT_AIM( uParam0 );
    }
    return;
}

int sub_40762()
{
    int iVar2;

    if (((IS_PED_DEAD( g_U824 )) == 0) AND ((DOES_PED_EXIST( g_U824 )) == 1))
    {
        if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U824 ), 4.00000000, ref iVar2 ))
        {
            if (iVar2 == sub_5138())
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_40872(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (NOT (IS_PED_DEAD( sub_5138() ))))
    {
        sub_32461( ref l_U168 );
        sub_32543( 1, uParam0, "PASSOS", ref l_U168, 2, 0 );
        sub_32543( 0, sub_5138(), "MAX", ref l_U168, 2, 0 );
        sub_32792( "SCMT_LPPSH", ref l_U168, 8, 1 );
    }
    return;
}

int sub_41081()
{
    if ((NOT (IS_PED_DEAD( g_U824 ))) AND (DOES_PED_EXIST( g_U824 )))
    {
        return 1;
    }
    return 0;
}

void sub_41247(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (NOT (IS_PED_DEAD( sub_5138() ))))
    {
        sub_32461( ref l_U158 );
        sub_32543( 1, uParam0, "PASSOS", ref l_U158, 2, 0 );
        sub_32543( 0, sub_5138(), "MAX", ref l_U158, 2, 0 );
        sub_32792( "SCMT_LPPAH", ref l_U158, 8, 1 );
    }
    return;
}

void sub_41660(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_41692( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_41692(unknown uParam0, float fParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^) )};
        if (uVar4._fU8 < fParam1)
        {
            sub_33958( "A ped has been killed by P_PED_HEIGHT_SAFETY_CHECK", 0, 0 );
            SET_PED_HEALTH( (uParam0^), 0, 0 );
        }
    }
    return;
}

void sub_41884()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_41961()
{
    sub_33958( "DIAL_PAS_NICE_WORK", 0, 0 );
    sub_34061( "SCMT_PSTFS", ref l_U1057, g_U824, "PASSOS", 1 );
    return;
}

void sub_42050()
{
    if ((sub_42066( l_U958 )) || (sub_42066( l_U937 )))
    {
        sub_42163( ref l_U384 );
        l_U365[0] = 1;
        sub_42163( ref l_U457 );
        l_U365[1] = 1;
        sub_42163( ref l_U517 );
        l_U365[2] = 1;
        sub_42163( ref l_U590 );
        l_U365[3] = 1;
    }
    else if (l_U365[0] == 0)
    {
        if ((sub_42297( ref l_U384, 1077936128 )) || (sub_42066( l_U436 )))
        {
            sub_5005( "TEH", "Activating A group to player ", 0 );
            sub_42163( ref l_U384 );
            l_U365[0] = 1;
        }
    }
    if (l_U365[1] == 0)
    {
        if ((sub_42297( ref l_U457, 1077936128 )) || (sub_42066( l_U496 )))
        {
            sub_5005( "TEH", "Switching B group to player ", 0 );
            sub_42163( ref l_U457 );
            l_U365[1] = 1;
        }
    }
    if (l_U365[2] == 0)
    {
        if ((sub_42297( ref l_U517, 1077936128 )) || (sub_42066( l_U569 )))
        {
            sub_5005( "TEH", "Switching C group to player ", 0 );
            sub_42163( ref l_U517 );
            l_U365[2] = 1;
        }
    }
    if (l_U365[3] == 0)
    {
        if ((sub_42297( ref l_U517, 1077936128 )) || (sub_42066( l_U630 )))
        {
            sub_5005( "TEH", "Switching D group to player ", 0 );
            sub_42163( ref l_U590 );
            l_U365[3] = 1;
        }
    }
    return;
}

void sub_42066(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_42084( sub_5138(), uParam0 );
}

int sub_42084(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_42163(unknown uParam0)
{
    sub_37954( uParam0, sub_5138(), 1 );
    return;
}

int sub_42297(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (sub_14907( (uParam0^)[I] ))
        {
            if (sub_42347( (uParam0^)[I], uParam1 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_42347(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (sub_14907( uParam0 ))
    {
        if (HAS_PED_BEEN_DAMAGED_BY_PED( uParam0, sub_5138(), 0 ))
        {
            return 1;
        }
        if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 ), uParam1, ref iVar4 ))
        {
            if (iVar4 == sub_5138())
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_42869()
{
    if (sub_42883( ref l_U681 ))
    {
        l_U651 = 0;
    }
    if (sub_45044())
    {
        sub_43842( ref l_U681, 1 );
        sub_5005( "TEH", "P_HANDLE_N_HORNE_POI: POI has been used, re-enabling", 0 );
    }
    if ((sub_45934( ref l_U681 )) == 1)
    {
        sub_46170( "EXPLORE_ITEM", ref l_U671 );
    }
    return;
}

int sub_42883(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_5138() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_5138() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_42084( sub_5138(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_42084( sub_5138(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_19909( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_19970( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_43765() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_43842( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_19379( iParam0, 0 );
                            sub_43913( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_19379( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_5138() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_5138(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_19379( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_43913( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_5138() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_5138(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_5138() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_5138(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_5138() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_5138(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_19379( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_43913( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_5138() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_5138() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_5138() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_5138(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_43913( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_43765()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_43842(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_19379( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_19379( iParam0, 0 );
        sub_43913( iParam0, 0 );
        if ((IS_PED_DEAD( sub_5138() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_5138() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_5138(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_43913(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_19909( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_45044()
{
    int Result;

    Result = 0;
    switch (l_U651)
    {
        case 0:
        sub_5005( "SBA", "HANDLE_N_HORNE_CAM: eVG_N_HORNE = ASS_SETUP", 0 );
        sub_29160( 1, 0, 0, 1 );
        l_U651 = 3;
        break;
        case 3:
        sub_5005( "SBA", "HANDLE_N_HORNE_CAM: eVG_N_HORNE = ASS_WAITING_TO_PLAY", 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_06", "HORNE_EXPLORATION_ITEM_CEM", 0, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "scem_Mausoleum" )))
        {
            sub_45354( 0 );
            sub_45465( "SCMT_EXTMNCL", ref l_U661 );
            FOUND_EXPLORATION_ITEM( "scem_Mausoleum" );
        }
        else
        {
            sub_33872( ref l_U652, 4000 );
        }
        if (sub_14892())
        {
            SET_PED_VISIBLE( sub_5138(), 0 );
        }
        l_U651 = 4;
        break;
        case 4:
        if (((NOT (sub_37276( l_U661 ))) AND (NOT l_U652._fU20)) || (sub_15551( ref l_U652 )))
        {
            sub_5005( "SBA", "HANDLE_N_HORNE_CAM: eVG_N_HORNE Cam cut done, going to eVG_TombStone = ASS_FINISHED", 0 );
            l_U651 = 5;
        }
        break;
        case 5:
        sub_31298( 1, 1 );
        CAMERA_ANIMATED_STOP( 0, 0 );
        if (sub_14892())
        {
            SET_PED_VISIBLE( sub_5138(), 1 );
        }
        Result = 1;
        sub_5005( "SBA", "HANDLE_N_HORNE_CAM: eVG_N_HORNE = ASS_INACTIVE", 0 );
        l_U651 = -1;
        break;
    }
    return Result;
}

void sub_45354(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_45465(unknown uParam0, unknown uParam1)
{
    sub_34061( uParam0, uParam1, sub_5138(), "MAX", 1 );
    return;
}

int sub_45934(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_45946( iParam0 )) == 0)))
    {
        if ((sub_43765() == 1) AND (((IS_PED_RELOADING( sub_5138() )) == 0) AND (((IS_PED_GETTING_UP( sub_5138() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_5138() )) == 0) AND (((IS_PED_IN_COVER( sub_5138() )) == 0) AND (((IS_PED_DUCKING( sub_5138() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_45946(int iParam0)
{
    return iParam0->_fU56;
}

void sub_46170(unknown uParam0, unknown uParam1)
{
    sub_5005( "SBA", "P_SPEECH_PLAY_MAX_MONOLOGUE", "***" );
    if (sub_14892())
    {
        sub_32461( uParam1 );
        sub_32543( 0, sub_5138(), "MAX", uParam1, 2, 0 );
        sub_32543( 1, sub_5138(), "MAX", uParam1, 2, 0 );
        sub_32792( uParam0, uParam1, 8, 1 );
    }
    return;
}

void sub_46522(unknown uParam0)
{
    int I;

    if ((sub_39602( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_47058()
{
    sub_879( "MF]] s_cemet_rotunda - P_UNLOAD_ASSETS_ROTUNDA start" );
    sub_31132( g_U761 );
    sub_31132( g_U1341 );
    sub_31132( g_U1342 );
    sub_47176( "LEVEL_S_CEM_ROT" );
    sub_47176( "FACE_PASNYB" );
    sub_47265( "LEVEL/S_NYBAR/S_NYBAR_PASSOS_FACIAL.act" );
    sub_879( "MF]] s_cemet_rotunda - P_UNLOAD_ASSETS_ROTUNDA end" );
    return;
}

void sub_47176(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_47265(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}

void sub_47360(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        case 1: break;
        case 2: break;
        case 3: break;
        case 4:
        case 5: break;
        case 6: break;
        case 7:
        sub_47497( 1224272620 );
        break;
        case 8: break;
        case 9:
        sub_1674( 434544317, 1 );
        sub_1674( -691403429, 1 );
        break;
        case 10:
        sub_47497( -184942895 );
        break;
    }
    return;
}

void sub_47497(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}


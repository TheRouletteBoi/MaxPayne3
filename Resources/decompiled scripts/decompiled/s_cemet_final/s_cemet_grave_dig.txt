void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 1;
    l_U38 = 144;
    l_U39 = -1;
    l_U40 = {64536, 64536, 64536};
    l_U43 = "PED_DEF";
    l_U85 = 1.00000000;
    l_U97 = 0;
    l_U138 = 0;
    l_U179 = 0;
    l_U181 = 1;
    l_U182 = 0;
    l_U183 = 1;
    l_U202 = "08_04_A_CEM_concat";
    l_U306 = 0;
    l_U307 = 0;
    l_U308 = 0;
    l_U309 = "08_04_b_cem_concat";
    l_U341 = 1;
    l_U428 = 0;
    l_U429 = 0;
    l_U430 = 1500;
    l_U440 = 0;
    l_U450 = 6500;
    l_U520 = "LEVEL_S_CEM_DIG";
    l_U709 = {57.08882000, -52.34842000, 10.96908000};
    l_U712 = {-10.22092000, -3.09962000, -166.02660000};
    l_U715 = 45.00000000;
    l_U716 = 2100;
    l_U850 = {63.24000000, -57.27000000, 10.65000000};
    l_U853 = {-8.05000000, 0.00000000, 86.40000000};
    l_U856 = 1000;
    l_U857 = {0.30000000, -0.19000000, -0.68000000};
    l_U860 = {0.45000000, -0.37000000, -0.75000000};
    l_U863 = {0.32000000, -0.12000000, -0.70000000};
    sub_647( "[GA] s_cemet_grave_dig script started." );
    l_U179 = 0;
    sub_672( 1 );
    if (g_U825 != 8)
    {
        sub_978( 0 );
        while (NOT g_U1991[7])
        {
            WAIT( 0 );
        }
    }
    sub_1854();
    sub_2527();
    sub_978( 1 );
    sub_3079( 8 );
    sub_3506();
    if (g_U825 == 8)
    {
        sub_715( "SBA", "s_cemet_grave_dig is starting from dev menu", "***" );
        g_U826 = 8;
        sub_4954( ref l_U484, g_U826, g_U1178, g_U971[8]._fU0, g_U971[8]._fU12, g_U971[8]._fU16, g_U971[8]._fU20, 0 );
        sub_10133( 8 );
        sub_10698();
        l_U728 = 2;
    }
    else
    {
        l_U728 = 0;
    }
    while (NOT IS_EXITFLAG_SET())
    {
        if (g_U1778)
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        else
        {
            sub_11141();
            sub_11406();
            sub_16455();
        }
        WAIT( 0 );
    }
    sub_13593( 1 );
    sub_35467();
    sub_35584( 8 );
    sub_715( "SBA", "s_cemet_grave_dig script ended", "***" );
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_cemet_grave_dig" );
    SET_EXITFLAG_RESPONSE();
    return;
}

void sub_647(unknown uParam0)
{
    return;
}

void sub_672(unknown uParam0)
{
    sub_715( "SBA", "P_LOAD_ISEQ_ASSETS", "***" );
    STOP_SCRIPT_STREAM( 0 );
    sub_801( "S_CEMET_GRAVE_DIG_INTRO", 0, uParam0 );
    STOP_SCRIPT_STREAM( 1 );
    sub_801( "S_CEMET_GRAVE_DIG_03", 1, uParam0 );
    STOP_SCRIPT_STREAM( 2 );
    sub_801( "S_CEMET_GRAVE_DIG_FIGHT", 2, uParam0 );
    return;
}

void sub_715(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_801(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_978(unknown uParam0)
{
    sub_715( "SBA", "P_LOAD_ASSETS_GRAVE_DIG", "***" );
    if (g_U825 == 8)
    {
        sub_715( "SBA", "P_LOAD_ASSETS_GRAVE_DIG: MCE_GRAVE_DIG", "***" );
        sub_1108( l_U309, uParam0 );
    }
    else
    {
        sub_1108( l_U202, uParam0 );
    }
    sub_1380( g_U1346, uParam0 );
    sub_1380( -488097608, uParam0 );
    sub_1380( g_U1332, uParam0 );
    sub_1380( 1887965138, uParam0 );
    sub_1380( -161147555, uParam0 );
    sub_1380( -2073192064, uParam0 );
    sub_1380( -2015623084, uParam0 );
    sub_1624( 389525665, uParam0 );
    return;
}

void sub_1108(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_1380(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_647( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1624(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_1854()
{
    sub_715( "SBA", "P_SET_STATIC_GAMEPLAY_DATA", "***" );
    sub_1983( ref l_U521, "TRIG_GDIG_RAMP_EXIT", 62.44000000, -106.30000000, 0.99000000, 6.02000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1983( ref l_U542, "TRIG_END_GRAVEDIG", 77.02000000, -80.92000000, 3.80000000, 2.68000000, 6.22000000, 7.01000000, 0.00000000, 0.00000000, -49.50000000, 1 );
    sub_1983( ref l_U584, "TRIG_GD_TELEPORT_PASSOS", 68.77000000, -68.58000000, 5.10000000, 3.50000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1983( ref l_U563, "TRIG_DUMMY", 19.60000000, 68.57000000, 0.00000000, 2.00000000, 2.00000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2328( ref l_U610[0], 57.41937000, -55.30724000, 9.23000000, 240, 2141917892, 7, 3, 2, 0, 0 );
    sub_2328( ref l_U610[1], 60.81651000, -57.10637000, 9.17000000, 90, 1622707886, 7, 3, 2, 0, 0 );
    sub_2328( ref l_U610[2], 57.06000000, -60.11800000, 9.20000000, 330, -1121642072, 7, 3, 2, 0, 0 );
    return;
}

void sub_1983(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_2328(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_2527()
{
    sub_715( "SBA", "P_INITIALIZE_SCRIPT_DATA", "***" );
    l_U451 = 0;
    l_U452 = 0;
    l_U453 = 0;
    l_U454 = 0;
    l_U455 = 0;
    l_U440 = 0;
    l_U456 = 0;
    l_U457 = 0;
    l_U458 = 0;
    l_U459 = 0;
    l_U460 = 0;
    l_U461 = 0;
    sub_2662( ref l_U462, 2000, 1, 0 );
    sub_2798( ref l_U651 );
    sub_2798( ref l_U660 );
    l_U605 = 0;
    l_U727 = 0;
    l_U728 = 2;
    l_U717 = 0;
    sub_2952( "SCMTAUD" );
    return;
}

void sub_2662(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2798(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_2952(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_2972();
    return;
}

void sub_2972()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_3079(unknown uParam0)
{
    sub_3095( -862236369, 1 );
    switch (uParam0)
    {
        case 0:
        case 1:
        sub_3095( 434544317, 1 );
        sub_3095( -691403429, 1 );
        break;
        case 2: break;
        case 3:
        sub_3095( -691403429, 1 );
        sub_3095( 930042831, 1 );
        break;
        case 4:
        case 5:
        sub_3095( 434544317, 1 );
        sub_3095( -691403429, 1 );
        break;
        case 6:
        sub_3095( 434544317, 1 );
        sub_3095( -691403429, 1 );
        break;
        case 7:
        sub_3095( 434544317, 1 );
        sub_3095( -691403429, 1 );
        sub_3095( 1224272620, 1 );
        break;
        case 8:
        sub_3095( 434544317, 1 );
        sub_3095( -691403429, 1 );
        break;
        case 9:
        sub_3095( 434544317, 1 );
        sub_3095( -691403429, 1 );
        break;
        case 10:
        sub_3095( 434544317, 1 );
        sub_3095( -184942895, 1 );
        sub_3095( -691403429, 1 );
        break;
    }
    return;
}

void sub_3095(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3506()
{
    int I;

    sub_715( "ML", "P_SETUP_GD_THUGS", "---" );
    for ( I = 0; I < 3; I++ )
    {
        sub_3572( l_U606[I] );
        l_U606[I] = sub_3654( ref l_U610[I] );
        if (NOT (IS_PED_DEAD( l_U606[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U606[I], 1 );
            if (I == 1)
            {
                sub_4381( l_U606[I], -691403429, 25000, 0, 1 );
                SET_PED_CAN_RAGDOLL( l_U606[I], 0 );
            }
            else if (I == 0)
            {
                sub_4381( l_U606[I], -691403429, 25000, 0, 1 );
            }
            else if (I == 2)
            {
                sub_4381( l_U606[I], 434544317, 25000, 0, 1 );
            };;;
        }
    }
    return;
}

void sub_3572(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_3654(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_1380( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_4133( iParam0->_fU40 );
    sub_4213( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_4133(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_4213(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_4381(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_647( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_4954(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_715( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_715( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_5206( iParam1 );
        sub_6773( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_7224( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_7224( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_7456( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_7224( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_7456( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_7456( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_7224( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_7456( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_7456( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_7456( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_7224( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_7456( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_7456( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_7456( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_7456( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_9014( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U38, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_715( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_5206(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_5235( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_6016( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

int sub_5235(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_6016(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_6773(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_5235( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_715( "TEH", "Ending context", 0 );
        sub_715( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_7224(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_7456(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_9014(int iParam0)
{
    sub_647( "CHECKPOINT DATA" );
    sub_9053( iParam0->_fU4 );
    sub_9076( iParam0->_fU16 );
    sub_9076( iParam0->_fU20 );
    sub_9076( iParam0->_fU24 );
    sub_9119( iParam0->_fU28 );
    sub_9119( iParam0->_fU56 );
    sub_9119( iParam0->_fU60 );
    sub_9119( iParam0->_fU64 );
    sub_9119( iParam0->_fU68 );
    sub_9119( iParam0->_fU72 );
    sub_9119( iParam0->_fU76 );
    sub_9119( iParam0->_fU80 );
    sub_9119( iParam0->_fU84 );
    sub_9119( iParam0->_fU88 );
    sub_9119( iParam0->_fU92 );
    sub_9076( iParam0->_fU32 );
    sub_9119( iParam0->_fU36 );
    sub_9119( iParam0->_fU40 );
    sub_9119( iParam0->_fU44 );
    sub_9076( iParam0->_fU136 );
    sub_9324( iParam0->_fU140 );
    sub_9119( iParam0->_fU52 );
    sub_647( "---nRightHolsterAttachmentEnabled: " );
    sub_9119( iParam0->_fU96 );
    sub_647( "---nRightHolsterAttachmentToggled: " );
    sub_9119( iParam0->_fU100 );
    sub_647( "---nLeftHolsterAttachmentEnabled: " );
    sub_9119( iParam0->_fU104 );
    sub_647( "---nLeftHolsterAttachmentToggled: " );
    sub_9119( iParam0->_fU108 );
    sub_647( "---nRifleHolsterAttachmentEnabled: " );
    sub_9119( iParam0->_fU112 );
    sub_647( "---nRifleHolsterAttachmentToggled: " );
    sub_9119( iParam0->_fU116 );
    sub_647( "---nRightHandAttachmentEnabled: " );
    sub_9119( iParam0->_fU120 );
    sub_647( "---nRightHandAttachmentToggled: " );
    sub_9119( iParam0->_fU124 );
    sub_647( "---nLeftHandAttachmentEnabled: " );
    sub_9119( iParam0->_fU128 );
    sub_647( "---nLeftHandAttachmentToggled: " );
    sub_9119( iParam0->_fU132 );
    sub_9119( l_U38 );
    sub_9119( 144 );
    return;
}

void sub_9053(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_9076(unknown uParam0)
{
    return;
}

void sub_9119(unknown uParam0)
{
    return;
}

void sub_9324(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_10133(int iParam0)
{
    int iVar3;

    sub_715( "SBA", "P_CREATE_GRAVE_DIG_PASSOS", "***" );
    if (iParam0 < 8)
    {
        iVar3 = 1265654828;
    }
    else
    {
        iVar3 = 1862331818;
    }
    sub_2328( ref l_U471, g_U779[8]._fU0, g_U779[8]._fU12, iVar3, 26, 6, 0, 0, 0 );
    sub_3572( g_U824 );
    g_U824 = sub_3654( ref l_U471 );
    sub_10281( ref g_U824 );
    if (sub_10347( g_U824 ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U824, 1 );
        CLEAR_PED_TASKS_IMMEDIATELY( g_U824 );
    }
    return;
}

void sub_10281(unknown uParam0)
{
    sub_715( "SBA", "P_SETUP_PASSOS_GENERAL_ATTRIBUTES", "***" );
    if (sub_10347( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^), 1 );
        SET_PED_VALIDATE_BULLET_CAM_HIT( (uParam0^), 0 );
        SET_AI_SHOULD_ALWAYS_MISS_PED( (uParam0^), 1 );
        SET_CAN_AI_KICK_THROUGH_CORPSES( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_AI_TEMPLATE( (uParam0^), "AIT_NORMAL" );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( (uParam0^), 1 );
        SET_PED_AS_ONE_SHOT_KILL( (uParam0^), 1 );
        SET_PED_GORE( (uParam0^), 0 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( (uParam0^), 0 );
        SET_PED_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_PED_ALLOWED_TO_SURRENDER( (uParam0^), 0 );
        SET_PED_CAN_AVOID_DEATH_ZONES( (uParam0^), 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( (uParam0^), 1 );
        SET_PED_CAN_PUSH_PLAYER( (uParam0^), 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( (uParam0^), 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        SET_PED_CAN_BE_TARGETTED( (uParam0^), 0 );
        SET_PED_CONSUMING_AMMO( (uParam0^), 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( (uParam0^), 1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( (uParam0^), 1 );
    }
    return;
}

int sub_10347(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

void sub_10698()
{
    sub_715( "SBA", "P_SETUP_FRESH_GRAVE", "***" );
    sub_10752( g_U1780 );
    g_U1780 = sub_10822( -161147555, 58.18300000, -57.48900000, 9.34000000, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U1780 ))
    {
        FREEZE_OBJECT_POSITION( g_U1780, 1 );
    }
    return;
}

void sub_10752(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_10822(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_1380( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_11141()
{
    switch (l_U181)
    {
        case 1:
        l_U181 = 3;
        break;
        case 2:
        sub_715( "TEH", "playing music: AUDIO_MUSIC_SUSPEND ", 0 );
        l_U181 = 3;
        break;
        case 3:
        if (l_U182 == 3)
        {
            sub_715( "TEH", "playing music: CEMETERY_SONG_03_1_2", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "CEMETERY_SONG_03", "CEMETERY_SONG_03_1_2", "", 0, 6000, 5000, -1082130432, 0 );
            l_U181 = 4;
        }
        break;
    }
    return;
}

void sub_11406()
{
    if (g_U826 == 8)
    {
        if (l_U440 == 0)
        {
            if (((IS_PED_DEAD( g_U824 )) == 1) AND ((DOES_PED_EXIST( g_U824 )) == 1))
            {
                l_U440 = 1;
            }
        }
        if ((sub_11500()) || ((l_U440 == 1) || (IS_PED_DEAD( g_U1178 ))))
        {
            if (sub_11996())
            {
                sub_715( "SBA", "Restart Grave Digging", "***" );
            }
            else
            {
                sub_715( "SBA", "Player died or mission failed in the Grave Digging", "***" );
                while ((sub_12141( 0 )) == 0)
                {
                    WAIT( 0 );
                }
                while ((IS_PED_DEAD( g_U1178 )) == 1)
                {
                    WAIT( 0 );
                }
            }
            sub_13277( 0 );
            if (IS_ANIMATED_CAMERA_PLAYING())
            {
                CAMERA_ANIMATED_STOP( 0, 0 );
            }
            RENDER_SCRIPT_CAMS( 0, 0, 0, 0 );
            sub_13417( "CEM_SHOVEL_SCRIPTED_FAIL_FX" );
            sub_13593( 1 );
            sub_14241( ref l_U484, g_U1178 );
            sub_1854();
            sub_2527();
            sub_672( 1 );
            sub_3506();
            sub_1624( 389525665, 1 );
            sub_10133( 8 );
            sub_10698();
            l_U728 = 2;
            l_U181 = 2;
        }
    }
    return;
}

int sub_11500()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U37 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_11774() )))
        {
            SET_PED_FORCED_TO_WALK( sub_11774(), 0 );
            SET_PLAYER_FORCED_AIM( sub_11796(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_11796(), 1 );
            if ((IS_PED_VISIBLE( sub_11774() )) == 0)
            {
                SET_PED_VISIBLE( sub_11774(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

int sub_11774()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_11796() );
    }
    return 0;
}

void sub_11796()
{
    return GET_PLAYER_ID();
}

void sub_11996()
{
    return g_U648;
}

int sub_12141(int iParam0)
{
    iParam0 = 1;
    switch (l_U429)
    {
        case 0:
        if (NOT (sub_12202( ref l_U431 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_11774() )))
            {
                l_U430 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_2662( ref l_U431, l_U430, 1, 1 );
            sub_12321( ref l_U431 );
        }
        if (sub_12441( ref l_U431 ))
        {
            sub_715( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_11774() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_11796() )))
            {
                SET_PLAYER_CONTROL( sub_11796(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U429 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U429 = 2;
            }
            else
            {
                l_U429 = 3;
            }
        }
        break;
        case 2:
        sub_715( "NS", "Player will QUIT", 0 );
        sub_12928();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_715( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_12928();
        return 1;
        break;
    }
    return 0;
}

int sub_12202(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_12321(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_12441(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_12928()
{
    sub_715( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2798( ref l_U431 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_11796() )))
    {
        SET_PLAYER_CONTROL( sub_11796(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U428 = 0;
    l_U428 = l_U428;
    l_U429 = 0;
    return;
}

void sub_13277(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_13417(unknown uParam0)
{
    sub_715( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_13500( ref l_U180 );
    l_U179 = 1;
    return;
}

void sub_13500(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_13593(boolean bParam0)
{
    sub_715( "ML", "P_CLEANUP_ALL", "--" );
    if (sub_13634())
    {
        sub_715( "SBA", "P_HANDLE_EVENTS: Stop forced aim, clear shovel prop", "***" );
        SET_PLAYER_FORCED_AIM( sub_11796(), 0, 0 );
        CLEAR_PED_PROP( sub_11774(), 13 );
        SET_FORCE_PLAYER_GORE( 0 );
    }
    sub_10752( l_U650 );
    ISEQ_UNREGISTER_ENTITY( 389525665, "max" );
    ISEQ_UNREGISTER_ENTITY( 389525665, "passos" );
    ISEQ_UNREGISTER_ENTITY( 389525665, "thug1" );
    ISEQ_UNREGISTER_ENTITY( 389525665, "thug2" );
    ISEQ_UNREGISTER_ENTITY( 389525665, "thug3" );
    sub_13898( 389525665, 1 );
    STOP_SCRIPT_STREAM( 0 );
    STOP_SCRIPT_STREAM( 1 );
    STOP_SCRIPT_STREAM( 2 );
    UI_SET( 25, 2, 1537, "SPSlotLoader", 1537, "" );
    if (bParam0)
    {
        sub_14166( ref l_U606 );
    }
    return;
}

int sub_13634()
{
    if (sub_10347( sub_11774() ))
    {
        return 1;
    }
    return 0;
}

void sub_13898(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_14166(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_3572( (uParam0^)[I] );
    }
    return;
}

void sub_14241(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_715( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U37)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_14427( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_14766( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_15058( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_15405( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_15058( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_15405( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_15058( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_15405( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_4381( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_15405( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_4381( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_15405( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U37 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_15869( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_5206( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_11774(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U37)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U37 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_715( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_14427(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_5235( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

void sub_14766(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_15058(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_647( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_15405(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

int sub_15869(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_16455()
{
    unknown uVar2;

    switch (l_U728)
    {
        case 0:
        sub_10133( 7 );
        sub_10698();
        sub_16536();
        sub_715( "SBA", "P_HANDLE_GAMEPLAY_EVENTS: advancing to eGDS_NIS", 0 );
        sub_16789( 1, ref l_U610 );
        if (NOT sub_20772())
        {
            if ((IS_SCREEN_FADING_OUT()) || (IS_SCREEN_FADED_OUT()))
            {
                DO_SCREEN_FADE_IN( 250 );
            }
        }
        l_U728 = 1;
        break;
        case 1:
        if (sub_21035( 1 ))
        {
            sub_19078( l_U606[0], 1 );
            sub_19078( l_U606[1], 1 );
            sub_19078( l_U606[2], 1 );
            sub_715( "SBA", "P_HANDLE_GAMEPLAY_EVENTS: advancing to eGDS_Start", 0 );
            l_U728 = 2;
        }
        break;
        case 2:
        sub_23670();
        sub_23986();
        sub_24230( ref l_U606 );
        if ((ISEQ_QUERY_STATE( 389525665, 3 )) == 0)
        {
            sub_715( "bsw", "registering for S_CEM_VIG_19_GDIG via script, no cutscene?", 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_08", "B_OUT_08_04a_CEM_CAM1", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            sub_24544();
            ISEQ_START( 389525665 );
        }
        PLAY_SCRIPT_STREAM_FRONTEND( 0 );
        DISPLAY_HUD( 0 );
        sub_24736( 500 );
        sub_24814();
        if (g_U826 != 8)
        {
            sub_647( "[GA] s_cemet_grave_dig activated." );
            g_U826 = 8;
            sub_4954( ref l_U484, g_U826, g_U1178, g_U971[8]._fU0, g_U971[8]._fU12, g_U971[8]._fU16, g_U971[8]._fU20, 1 );
        }
        if (CUTSCENE_IS_LOADED( l_U202 ))
        {
            while (NOT HAS_CUTSCENE_UNLOADED())
            {
                sub_715( "SBA", "P_HANDLE_GAMEPLAY_EVENTS: Why the fuck is Cut08_04a still loaded ?!  Waiting...", 0 );
                WAIT( 0 );
            }
        }
        sub_715( "SBA", "P_HANDLE_GAMEPLAY_EVENTS: Loading Cut08_04b", 0 );
        sub_1108( l_U309, 0 );
        sub_26351( 0 );
        sub_715( "SBA", "P_HANDLE_GAMEPLAY_EVENTS: going to... eGDS_Digging", 0 );
        l_U728 = 3;
        break;
        case 3:
        sub_26641();
        sub_11141();
        if (l_U605 != 0)
        {
            sub_31801();
        }
        if (l_U461)
        {
            sub_35177();
            g_U1774 = 1;
            sub_715( "SBA", "P_HANDLE_GAMEPLAY_EVENTS: going to... eGDS_ToMorgue", 0 );
            l_U728 = 4;
        }
        break;
        case 4: break;
        case 5: break;
    }
    return;
}

void sub_16536()
{
    sub_715( "bsw", "CREATE_08_04A_CUTSCENE_ONLY_GUYS creating fools", 0 );
    sub_2328( ref l_U278[0], 0, 0, 0, 0.00000000, -668953082, 26, 6, 0, 0, 0 );
    sub_2328( ref l_U278[1], 0, 0, 0, 0.00000000, -124028970, 26, 6, 0, 0, 0 );
    l_U275[0] = sub_3654( ref l_U278[0] );
    l_U275[1] = sub_3654( ref l_U278[1] );
    return;
}

void sub_16789(boolean bParam0, unknown uParam1)
{
    sub_715( "RJM", "REGISTER_PEDS_CUT_08_04a - start", 0 );
    if (sub_13634())
    {
        sub_715( "RJM", "Registering player with 04_01_pt01", 0 );
        sub_16911( ref l_U184, 1, 1 );
        sub_18177( l_U184, 0 );
        sub_18282( l_U184, 0 );
        sub_18340( 1 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_11774(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        ISEQ_REGISTER_ENTITY( 389525665, "max", sub_11774(), 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_11774(), g_U971[8]._fU0, g_U971[8]._fU12 );
    }
    if (bParam0)
    {
        l_U305 = g_U824;
    }
    else
    {
        l_U305 = l_U203;
    }
    if (sub_10347( l_U305 ))
    {
        sub_715( "RJM", "Registering Passos with 08_04a_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U305, "PASS_NY_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U305, g_U779[8]._fU0, g_U779[8]._fU12 );
        ISEQ_REGISTER_ENTITY( 389525665, "passos", g_U824, 0 );
    }
    if (sub_10347( (uParam1^)[0]._fU40 ))
    {
        sub_715( "RJM", "Registering piCut08_04aGuy1 with 08_04a_cem", 0 );
        sub_19078( (uParam1^)[0]._fU40, 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam1^)[0]._fU40, "G_NY_C_Sold_F", 0 );
        ISEQ_REGISTER_ENTITY( 389525665, "thug1", (uParam1^)[0]._fU40, 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( (uParam1^)[0]._fU40, (uParam1^)[0]._fU0, (uParam1^)[0]._fU12 );
    }
    if (sub_10347( (uParam1^)[1]._fU40 ))
    {
        sub_715( "RJM", "Registering piCut08_04aGuy2 with 08_04a_cem", 0 );
        sub_19078( (uParam1^)[1]._fU40, 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam1^)[1]._fU40, "G_NY_C_GDIG_A", 0 );
        ISEQ_REGISTER_ENTITY( 389525665, "thug2", (uParam1^)[1]._fU40, 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( (uParam1^)[1]._fU40, (uParam1^)[1]._fU0, (uParam1^)[1]._fU12 );
    }
    if (sub_10347( (uParam1^)[2]._fU40 ))
    {
        sub_715( "RJM", "Registering piCut08_04aGuy3 with 08_04a_cem", 0 );
        sub_19078( (uParam1^)[2]._fU40, 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( (uParam1^)[2]._fU40, "G_NY_C_Sold_F^2", 0 );
        ISEQ_REGISTER_ENTITY( 389525665, "thug3", (uParam1^)[2]._fU40, 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( (uParam1^)[2]._fU40, (uParam1^)[2]._fU0, (uParam1^)[2]._fU12 );
    }
    if (sub_10347( l_U275[0] ))
    {
        sub_715( "RJM", "Registering piCut08_04aGuy4 with 08_04a_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U275[0], "G_NY_C_Sold_F^1", 0 );
    }
    if (sub_10347( l_U275[1] ))
    {
        sub_715( "RJM", "Registering piCut08_04aGuy4 with 08_04a_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U275[1], "G_NY_C_Sold_F^3", 0 );
    }
    if (sub_10347( l_U217 ))
    {
        sub_715( "RJM", "Registering piCut08_04aDeMarco with 08_04a_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U217, "FB_De_Marc", 0 );
    }
    sub_715( "SBA", "REGISTER_PEDS_CUT_08_05 - hiding doors", 0 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1536._fU0, g_U1536._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1543._fU0, g_U1543._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1550._fU0, g_U1550._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1557._fU0, g_U1557._fU4 );
    sub_715( "RJM", "REGISTER_PEDS_CUT_08_04a - end", 0 );
    return;
}

void sub_16911(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_16923( iParam0 );
    if ((IS_PED_DEAD( sub_11774() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_11774(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_17102( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_17330( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_11774(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_11774(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_11774(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_11774(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_11774() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_11774(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_11774(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_11774(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_11774(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_11774() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_11774(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_17330( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_11774(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_11774(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_11774(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_16923(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_17102(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_17330(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_18177(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

void sub_18282(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;

    uVar21 = uParam0._fU12._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    return;
}

void sub_18340(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_11774() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_11774(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_17102( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_18445();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_11774(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_18445()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_11774() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_11774(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_17102( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_11774(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_11774(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_11774(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_19078(unknown uParam0, unknown uParam1)
{
    sub_715( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY", 0 );
    sub_9324( uParam1 );
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        sub_715( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHAND_LEFT", 0 );
        sub_9119( GET_WEAPON_FROM_HAND( uParam0, 1, 0 ) );
        if ((GET_WEAPON_FROM_HAND( uParam0, 1, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HAND( uParam0, 1, 0 ), uParam1 );
        }
        sub_715( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHAND_RIGHT", 0 );
        sub_9119( GET_WEAPON_FROM_HAND( uParam0, 0, 0 ) );
        if ((GET_WEAPON_FROM_HAND( uParam0, 0, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HAND( uParam0, 0, 0 ), uParam1 );
        }
        sub_715( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHOLSTER_PISTOL_LEFT", 0 );
        sub_9119( GET_WEAPON_FROM_HOLSTER( uParam0, 1 ) );
        if ((GET_WEAPON_FROM_HOLSTER( uParam0, 1 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( uParam0, 1 ), uParam1 );
        }
        sub_715( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHOLSTER_PISTOL_RIGHT", 0 );
        sub_9119( GET_WEAPON_FROM_HOLSTER( uParam0, 0 ) );
        if ((GET_WEAPON_FROM_HOLSTER( uParam0, 0 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( uParam0, 0 ), uParam1 );
        }
        sub_715( "SBA", "P_SET_PED_ALL_WEAPON_VISIBILITY: WEAPONHOLSTER_RIFLE", 0 );
        sub_9119( GET_WEAPON_FROM_HOLSTER( uParam0, 2 ) );
        if ((GET_WEAPON_FROM_HOLSTER( uParam0, 2 )) != 0)
        {
            SET_WEAPON_VISIBLE( GET_WEAPON_FROM_HOLSTER( uParam0, 2 ), uParam1 );
        }
    }
    return;
}

int sub_20772()
{
    if (l_U179)
    {
        sub_715( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U179 = 0;
        return 1;
        break;
    }
    sub_715( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

void sub_21035(boolean bParam0)
{
    int Result;

    Result = 0;
    switch (l_U183)
    {
        case 1:
        sub_715( "BSW", "PLAY_CUTSCENE_08_04a start", 0 );
        sub_21129( 1, 0, 0, 1 );
        if (NOT bParam0)
        {
            sub_21296();
            sub_1108( l_U202, 1 );
            sub_21543();
            sub_16789( 0, ref l_U235 );
        }
        else
        {
            sub_715( "bsw", "registering S_CEM_VIG_19_GDIG with cutscene", 0 );
            CUTSCENE_REGISTER_ISEQ( 389525665 );
        }
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        l_U306 = 0;
        l_U307 = 0;
        l_U308 = 0;
        l_U183 = 3;
        break;
        case 3:
        if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
            sub_715( "bsw", "setting ALLOW_BULLET_CAMERA_TO_GAMEPLAY to TRUE in 08_04A", 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
        l_U183 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
            g_U1777 = 1;
            if (NOT l_U308)
            {
                CLEAR_PED_PROP( l_U305, 0 );
                SET_PERSISTENT_PED_VARIATION_ENUM( l_U305, 1862331818 );
            }
            if (bParam0)
            {
                sub_715( "SBA", "PLAY_CUTSCENE_08_04a: Starting Animated Camera for blendout", 0 );
                CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_08", "B_OUT_08_04a_CEM_CAM1", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            }
            sub_22365();
            sub_22421();
            Result = 1;
            sub_18177( l_U184, 1 );
            sub_18282( l_U184, 1 );
            l_U183 = 5;
            sub_22645( 1, 1 );
            sub_715( "RJM", "PLAY_CUTSCENE_08_04a end", 0 );
        }
        else if ((NOT l_U306) AND (GET_CUTSCENE_TIME_MS() > 30000))
        {
            if (sub_13634())
            {
                l_U306 = 1;
                sub_22993( 8 );
                REMOVE_ALL_PED_WEAPONS( sub_11774() );
                g_U1777 = 1;
            }
        }
        if ((NOT l_U308) AND (GET_CUTSCENE_TIME_MS() > 107528))
        {
            CLEAR_PED_PROP( l_U305, 0 );
            SET_PERSISTENT_PED_VARIATION_ENUM( l_U305, 1862331818 );
            l_U308 = 1;
        }
        if ((NOT l_U307) AND (GET_CUTSCENE_TIME_MS() > 85000))
        {
            CUTSCENE_ENABLE_SKIP( 1 );
            l_U307 = 1;
        }
        break;
    }
    return Result;
}

void sub_21129(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_11774() )))
        {
            SET_PLAYER_CONTROL( sub_11796(), 0, uParam2 );
            SET_PED_DUCKING( sub_11774(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_11774() );
            }
            SET_PED_INVINCIBLE( sub_11774(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_21296()
{
    sub_21311( g_U1332 );
    sub_21311( g_U1346 );
    sub_21311( g_U1347 );
    sub_21311( g_U1333 );
    return;
}

void sub_21311(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_647( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        WAIT( 0 );
    }
    return;
}

void sub_21543()
{
    sub_715( "RJM", "CREATE_08_04a_PEDS_AND_OBJECTS - start", 0 );
    sub_2328( ref l_U204, 0, 0, 0, 0.00000000, 1265654828, 26, 6, 0, 0, 0 );
    sub_2328( ref l_U218, 0, 0, 0, 0.00000000, -1917120315, 26, 6, 0, 0, 0 );
    sub_2328( ref l_U235[0], 0, 0, 0, 0.00000000, 2141917892, 26, 6, 0, 0, 0 );
    sub_2328( ref l_U235[1], 0, 0, 0, 0.00000000, 1622707886, 26, 6, 0, 0, 0 );
    sub_2328( ref l_U235[2], 0, 0, 0, 0.00000000, -1121642072, 26, 6, 0, 0, 0 );
    l_U203 = sub_3654( ref l_U204 );
    l_U217 = sub_3654( ref l_U218 );
    l_U231[0] = sub_3654( ref l_U235[0] );
    l_U231[1] = sub_3654( ref l_U235[1] );
    l_U231[2] = sub_3654( ref l_U235[2] );
    sub_16536();
    sub_715( "RJM", "CREATE_08_04a_PEDS_AND_OBJECTS - end", 0 );
    return;
}

void sub_22365()
{
    sub_3572( l_U203 );
    sub_3572( l_U217 );
    sub_14166( ref l_U231 );
    sub_14166( ref l_U275 );
    return;
}

void sub_22421()
{
    sub_22436( g_U1332 );
    sub_22436( g_U1346 );
    sub_22436( g_U1347 );
    sub_22436( g_U1333 );
    return;
}

void sub_22436(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_647( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_22645(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_11774() )))
    {
        SET_PLAYER_CONTROL( sub_11796(), 1, 0 );
        SET_PED_INVINCIBLE( sub_11774(), 0 );
        if (bParam0)
        {
            sub_22726();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_22726()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_11774() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_11774(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_11774(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_11774(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_11774(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_22993(unknown uParam0)
{
    sub_647( "[SP]### P_SETUP_WEATHER_TIMEOFDAY ###" );
    SET_WEATHER_TYPE_NOW_PERSIST( "SNOW_LIGHT" );
    switch (uParam0)
    {
        case 0:
        case 1:
        case 2:
        case 20:
        case 21:
        FREEZE_TIME_OF_DAY( 18, 0 );
        break;
        case 3:
        case 22:
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
        case 4:
        case 5:
        case 6:
        case 23:
        case 24:
        case 25:
        FREEZE_TIME_OF_DAY( 20, 0 );
        break;
        case 7:
        case 26:
        FREEZE_TIME_OF_DAY( 21, 0 );
        break;
        case 8:
        case 9:
        case 10:
        case 27:
        case 28:
        case 29:
        FREEZE_TIME_OF_DAY( 22, 0 );
        break;
        default:
        sub_715( "RJM", "Setting Weather/TOD for a checkpoint that doesn't really matter", 0 );
        FREEZE_TIME_OF_DAY( 18, 0 );
        break;
    }
    return;
}

void sub_23670()
{
    sub_23680();
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    sub_22993( 8 );
    return;
}

void sub_23680()
{
    sub_715( "SBA", "P_SETUP_PLAYER - start", "***" );
    if (sub_13634())
    {
        CLEAR_PED_TASKS_IMMEDIATELY( sub_11774() );
        REMOVE_ALL_PED_WEAPONS( sub_11774() );
        SET_PED_PROP_INDEX( sub_11774(), 13, 1, -1, 255 );
        SET_PLAYER_CONTROL( sub_11796(), 0, 0 );
        SET_PED_COORDS( sub_11774(), g_U971[8]._fU0, 0 );
        SET_PED_HEADING( sub_11774(), g_U971[8]._fU12 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[8]._fU16, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[8]._fU20, 1065353216, 0 );
        SET_PED_HEALTH( sub_11774(), GET_PED_MAX_HEALTH( sub_11774() ), 0 );
    }
    sub_715( "SBA", "P_SETUP_PLAYER - end", "***" );
    return;
}

void sub_23986()
{
    sub_715( "SBA", "P_MAKE_DISTURBED_GRAVE", "***" );
    sub_10752( g_U1780 );
    sub_22436( -161147555 );
    sub_10752( g_U1781 );
    g_U1781 = sub_10822( -2073192064, 58.18300000, -57.48900000, 9.34000000, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U1781 ))
    {
        FREEZE_OBJECT_POSITION( g_U1781, 1 );
    }
    sub_10752( g_U1782 );
    g_U1782 = sub_10822( -2015623084, 58.18300000, -57.48900000, 9.34000000, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U1782 ))
    {
        FREEZE_OBJECT_POSITION( g_U1782, 1 );
    }
    return;
}

void sub_24230(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_24261( (uParam0^)[I] );
    }
    return;
}

void sub_24261(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_24544()
{
    ISEQ_REGISTER_ENTITY( 389525665, "max", sub_11774(), 0 );
    ISEQ_REGISTER_ENTITY( 389525665, "passos", g_U824, 0 );
    ISEQ_REGISTER_ENTITY( 389525665, "thug2", l_U606[1], 0 );
    ISEQ_REGISTER_ENTITY( 389525665, "thug1", l_U606[0], 0 );
    ISEQ_REGISTER_ENTITY( 389525665, "thug3", l_U606[2], 0 );
    return;
}

void sub_24736(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_24814()
{
    sub_715( "SBA", "P_DIAL_EXEC_TAUNT1", "---" );
    if ((NOT (IS_PED_DEAD( l_U606[1] ))) AND (NOT (IS_PED_DEAD( g_U1178 ))))
    {
        sub_24901( ref l_U749 );
        sub_24983( 0, g_U1178, "MAX", ref l_U749, 2, 0 );
        sub_24983( 1, l_U606[1], "M8_NY_47_AVG", ref l_U749, 2, 0 );
        sub_25236( "SCMT_VIG19A", ref l_U749, 7, 1 );
    }
    return;
}

void sub_24901(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_24983(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_25236(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_25260( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_25260(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_25315( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_25315(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_25350( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_25844( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_25350(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_25844(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_26351(boolean bParam0)
{
    if (bParam0)
    {
        sub_715( "SBA", "PLAY_CUTSCENE_08_04b start: bBlockLoad = TRUE", 0 );
        sub_21311( g_U1332 );
        sub_21311( g_U1346 );
        sub_21311( g_U1347 );
    }
    else
    {
        sub_715( "SBA", "PLAY_CUTSCENE_08_04b start: bBlockLoad = FALSE", 0 );
        sub_1380( g_U1332, 0 );
        sub_1380( g_U1346, 0 );
        sub_1380( g_U1347, 0 );
    }
    return;
}

void sub_26641()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    switch (l_U727)
    {
        case 0:
        sub_26752( 51, l_U857 );
        if (sub_13634())
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( sub_11774(), 50 )) == 1)
            {
                PED_FINISH_ACTION_INTENTION( sub_11774(), 50 );
                CAMERA_ANIMATED_STOP( 0, 0 );
                CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_08", "VIG_19_CEM_IDLE_1_CAM2", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
                if (sub_10347( l_U606[1] ))
                {
                    SET_PED_CAN_RAGDOLL( l_U606[1], 1 );
                    SET_PED_DEFAULT_AIM_AT_PED( l_U606[1], sub_11774() );
                }
                STOP_SCRIPT_STREAM( 0 );
                sub_801( "S_CEMET_GRAVE_DIG_01", 0, 0 );
                sub_27143();
                sub_715( "SBA", "P_PROCESS_DIG_SEQUENCE: Blend Out Done, going to eGDSEQ_Idle1", "***" );
                l_U727 = 1;
            }
        }
        break;
        case 1:
        if (sub_27405())
        {
            l_U727 = 8;
        }
        if (sub_27742())
        {
            if (sub_13634())
            {
                PED_SET_ACTION_INTENTION( sub_11774(), 47, 2000, 0, 0, 0 );
            }
            sub_27432( 0 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_08", "VIG_19_CEM_DIG_1_CAM3", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            PLAY_SCRIPT_STREAM_FRONTEND( 0 );
            sub_12321( ref l_U462 );
            sub_28019();
            sub_715( "SBA", "P_PROCESS_DIG_SEQUENCE: input pushed, going to eGDSEQ_Dig1", "***" );
            l_U727 = 2;
        }
        break;
        case 2:
        sub_26752( 51, l_U857 );
        sub_26752( 52, l_U857 );
        sub_26752( 53, l_U857 );
        if (sub_28314( sub_11774(), 47, 1 ))
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_08", "VIG_19_CEM_IDLE_2_CAM4", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            sub_27432( 1 );
            sub_2798( ref l_U462 );
            STOP_SCRIPT_STREAM( 0 );
            sub_28563();
            sub_715( "SBA", "P_PROCESS_DIG_SEQUENCE: Done digging, going to eGDSEQ_Idle2", "***" );
            l_U727 = 3;
        }
        break;
        case 3:
        if (sub_27405())
        {
            l_U727 = 8;
        }
        if (sub_27742())
        {
            if (sub_13634())
            {
                PED_SET_ACTION_INTENTION( sub_11774(), 48, 2000, 0, 0, 0 );
            }
            sub_27432( 0 );
            PLAY_SCRIPT_STREAM_FRONTEND( 1 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_08", "VIG_19_CEM_DIG_3_CAM5", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            sub_12321( ref l_U462 );
            sub_29004();
            sub_715( "SBA", "P_PROCESS_DIG_SEQUENCE: input pushed, going to eGDSEQ_Dig2", "***" );
            l_U727 = 4;
        }
        break;
        case 4:
        sub_26752( 51, l_U863 );
        sub_26752( 52, l_U863 );
        sub_26752( 53, l_U863 );
        if (sub_28314( sub_11774(), 48, 1 ))
        {
            sub_27432( 1 );
            STOP_SCRIPT_STREAM( 1 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_08", "VIG_19_CEM_IDLE_1_CAM2", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            sub_2798( ref l_U462 );
            sub_29417();
            sub_715( "SBA", "P_PROCESS_DIG_SEQUENCE: Done digging, going to eGDSEQ_Idle3", "***" );
            l_U727 = 5;
        }
        break;
        case 5:
        if (sub_27405())
        {
            l_U727 = 8;
        }
        else if (sub_27742())
        {
            if (sub_13634())
            {
                PED_SET_ACTION_INTENTION( sub_11774(), 55, 2000, 0, 0, 0 );
            }
            sub_29756();
            sub_21129( 1, 0, 0, 0 );
            sub_27432( 0 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_08", "VIG_19_CEM_FAIL_CAM_FAIL", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            sub_30078( "CEM_SHOVEL_SCRIPTED_FAIL_FX", 0 );
            sub_715( "SBA", "P_PROCESS_DIG_SEQUENCE: Times up, going to eGDSEQ_MaxShot", "***" );
            l_U727 = 6;
        }
        break;
        case 6:
        if (sub_10347( l_U606[1] ))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( l_U606[1], 54 )) == 3)
            {
                sub_715( "SBA", "P_PROCESS_DIG_SEQUENCE: Leader shoots Max", "***" );
                SET_FORCE_PLAYER_GORE( 1 );
                PED_FINISH_ACTION_INTENTION( l_U606[1], 54 );
                PLAY_SOUND_FROM_PED( -1, "S_CEMET_GRAVE_DIG_FAIL", l_U606[1] );
                sub_30532();
                sub_30651( ref l_U651, 1550 );
            }
            if (NOT l_U458)
            {
                if (HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U606[1] ), 3.00000000, 1, ref iVar2 ))
                {
                    if ((sub_13634()) AND (iVar2 == l_U606[1]))
                    {
                        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( 60.25000000, -56.81000000, 10.65000000, 59.54000000, -56.65000000, 10.65000000, 100, 1, -691403429, 0 );
                        START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "CS_Blood_ImpactSplash_S", sub_11774(), 0, 0, -0.15000000, 0, 0, 0, 57704, 0.75000000 );
                        if (sub_13634())
                        {
                            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_PROP_POSITION( sub_11774(), 13 )};
                            uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PEP_PROP_ROTATION( sub_11774(), 13 )};
                            l_U650 = sub_10822( 1887965138, uVar3, uVar6, 0, 0, 0 );
                            CLEAR_PED_PROP( sub_11774(), 13 );
                            sub_30651( ref l_U660, 25 );
                        }
                        l_U458 = 1;
                    }
                }
            }
        }
        if (sub_12441( ref l_U660 ))
        {
            if (DOES_OBJECT_EXIST( l_U650 ))
            {
                SET_OBJECT_DYNAMIC( l_U650, 1 );
            }
        }
        if (sub_13634())
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( sub_11774(), 58 )) == 3)
            {
                sub_715( "SBA", "P_PROCESS_DIG_SEQUENCE: Killing Max and going to eGDSEQ_Inactive", "***" );
                PED_FINISH_ACTION_INTENTION( sub_11774(), 58 );
                l_U440 = 1;
                if (NOT IS_SCREEN_FADING_OUT())
                {
                    sub_715( "SBA", "P_PROCESS_DIG_SEQUENCE: FAILSAFE to fade screen", "***" );
                    DO_SCREEN_FADE_OUT( 250 );
                }
                l_U727 = 9;
            }
        }
        if (sub_12441( ref l_U651 ))
        {
            sub_715( "SBA", "P_PROCESS_DIG_SEQUENCE: tmrMaxDeathDelay is Done - fading out screen", "***" );
            CAMERA_FREEZE_FRAME( 1, 500, 0, 0 );
            DO_SCREEN_FADE_OUT( 500 );
        }
        break;
        case 7:
        if (sub_13634())
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( sub_11774(), 58 )) == 3)
            {
                l_U182 = 3;
                PED_FINISH_ACTION_INTENTION( sub_11774(), 58 );
                sub_715( "SBA", "P_PROCESS_DIG_SEQUENCE: Blend in to 08_04b DONE, starting midscene...", "***" );
                l_U605 = 1;
                sub_715( "SBA", "P_PROCESS_DIG_SEQUENCE: Going to eGDSEQ_Inactive", "***" );
                l_U727 = 9;
            }
        }
        break;
        case 8:
        l_U182 = 3;
        sub_715( "SBA", "P_PROCESS_DIG_SEQUENCE: skipping blend in, starting midscene...", "***" );
        l_U605 = 1;
        sub_715( "SBA", "P_PROCESS_DIG_SEQUENCE: Going to eGDSEQ_Inactive", "***" );
        l_U727 = 9;
        break;
        case 9: break;
    }
    return;
}

void sub_26752(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if (sub_13634())
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( sub_11774(), uParam0 )) == 3)
        {
            PED_FINISH_ACTION_INTENTION( sub_11774(), uParam0 );
            sub_715( "SBA", "P_PLAY_DIG_EFFECT: Playing Dig FX", "***" );
            START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "CEM_CS_ShovelDirt_S", sub_11774(), uParam1, 0, 0, 0, 25310, 2.00000000 );
        }
    }
    return;
}

void sub_27143()
{
    sub_715( "SBA", "P_DISPLAY_SHOVEL_SWING_TEXT: Displaying hit Prompt", "***" );
    UI_SET( 25, 2, 1537, "SPSlotLoader", 1537, "" );
    UI_SET( 25, 2, 1537, "SPSlotLoader", 1537, "TUT_CEM_SHOVEL" );
    return;
}

int sub_27405()
{
    if ((IS_CONTROL_JUST_PRESSED( 2, 4 )) == 1)
    {
        sub_27432( 0 );
        sub_27568( 1 );
        sub_715( "SBA", "F_HAS_MAX_SWUNG_SHOVEL: Returning TRUE", "***" );
        return 1;
    }
    return 0;
}

void sub_27432(boolean bParam0)
{
    if (bParam0)
    {
        sub_27143();
    }
    else
    {
        sub_715( "SBA", "P_DISPLAY_SHOVEL_SWING_TEXT: Removing hit Prompt", "***" );
        UI_SET( 15, 2, 1537, "animMainText", 257, 1 );
    }
    return;
}

void sub_27568(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

int sub_27742()
{
    if (sub_13634())
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( sub_11774(), 57 )) == 3)
        {
            PED_FINISH_ACTION_INTENTION( sub_11774(), 57 );
            sub_715( "SBA", "F_HAS_TIME_RUN_OUT_FOR_MAX: Returning TRUE", "***" );
            return 1;
        }
    }
    return 0;
}

void sub_28019()
{
    sub_715( "ML", "P_DIAL_MAX_DIG_MONO", "---" );
    if (NOT (IS_PED_DEAD( g_U1178 )))
    {
        sub_24901( ref l_U779 );
        sub_24983( 0, g_U1178, "MAX", ref l_U779, 2, 0 );
        sub_24983( 1, g_U1178, "MAX", ref l_U779, 2, 0 );
        sub_25236( "SCMT_VIG19B", ref l_U779, 8, 1 );
    }
    return;
}

int sub_28314(unknown uParam0, unknown uParam1, int iParam2)
{
    if (sub_10347( uParam0 ))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( uParam0, uParam1 )) == iParam2)
        {
            PED_FINISH_ACTION_INTENTION( uParam0, uParam1 );
            sub_715( "SBA", "F_IS_ACTION_INTENTION_STATUS_REACHED: Returning TRUE", "***" );
            return 1;
        }
    }
    return 0;
}

void sub_28563()
{
    sub_715( "SBA", "P_DIAL_EXEC_TAUNT2", "---" );
    if ((NOT (IS_PED_DEAD( l_U606[1] ))) AND (NOT (IS_PED_DEAD( g_U1178 ))))
    {
        sub_24901( ref l_U759 );
        sub_24983( 0, g_U1178, "MAX", ref l_U759, 2, 0 );
        sub_24983( 1, l_U606[1], "M8_NY_47_AVG", ref l_U759, 2, 0 );
        sub_25236( "SCMT_VIG19FA", ref l_U759, 7, 1 );
    }
    return;
}

void sub_29004()
{
    sub_715( "ML", "P_DIAL_MAX_DIG_MONO2", "---" );
    if (NOT (IS_PED_DEAD( g_U1178 )))
    {
        sub_24901( ref l_U789 );
        sub_24983( 0, g_U1178, "MAX", ref l_U789, 2, 0 );
        sub_24983( 1, g_U1178, "MAX", ref l_U789, 2, 0 );
        sub_25236( "SCMT_VIG19G", ref l_U789, 8, 1 );
    }
    return;
}

void sub_29417()
{
    sub_715( "SBA", "P_DIAL_EXEC_TAUNT3", "---" );
    if ((NOT (IS_PED_DEAD( l_U606[1] ))) AND (NOT (IS_PED_DEAD( g_U1178 ))))
    {
        sub_24901( ref l_U769 );
        sub_24983( 0, g_U1178, "MAX", ref l_U769, 2, 0 );
        sub_24983( 1, l_U606[1], "M8_NY_47_AVG", ref l_U769, 2, 0 );
        sub_25236( "SCMT_VIG19i", ref l_U769, 7, 1 );
    }
    return;
}

void sub_29756()
{
    sub_715( "ML", "P_DIAL_THUG_SHOOTS_MAX ", "---" );
    if ((NOT (IS_PED_DEAD( l_U606[1] ))) AND (NOT (IS_PED_DEAD( g_U1178 ))))
    {
        sub_24901( ref l_U799 );
        sub_24983( 1, l_U606[1], "M8_NY_47_AVG", ref l_U799, 2, 0 );
        sub_24983( 0, g_U1178, "MaxID", ref l_U799, 2, 0 );
        sub_25236( "SCMT_VIG19J", ref l_U799, 8, 1 );
    }
    return;
}

void sub_30078(unknown uParam0, boolean bParam1)
{
    sub_13500( ref l_U180 );
    l_U180 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U180, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

void sub_30532()
{
    unknown uVar2;

    sub_715( "SBA", "P_LEADER_SHOOTS_MAX", "***" );
    if ((sub_13634()) AND (sub_10347( l_U606[1] )))
    {
        TASK_SHOOT_AT_PED( l_U606[1], sub_11774(), 850, -256437761, 0, 0, 0 );
    }
    return;
}

void sub_30651(unknown uParam0, unknown uParam1)
{
    sub_2662( uParam0, uParam1, 1, 0 );
    sub_12321( uParam0 );
    return;
}

void sub_31801()
{
    switch (l_U605)
    {
        case 1:
        sub_715( "SBA", "P_HANDLE_SHOVEL_HIT_IS: eNIS_STATE_SETUP", "***" );
        STOP_SCRIPT_STREAM( 2 );
        ISEQ_UNREGISTER_ENTITY( 389525665, "max" );
        ISEQ_UNREGISTER_ENTITY( 389525665, "passos" );
        ISEQ_UNREGISTER_ENTITY( 389525665, "thug1" );
        ISEQ_UNREGISTER_ENTITY( 389525665, "thug2" );
        ISEQ_UNREGISTER_ENTITY( 389525665, "thug3" );
        sub_13898( 389525665, 1 );
        sub_32054( g_U824, l_U606[0], l_U606[1], l_U606[2] );
        CAMERA_ANIMATED_STOP( 0, 1 );
        UI_SET( 25, 2, 1537, "SPSlotLoader", 1537, "" );
        if (NOT g_U1779)
        {
            g_U1779 = 1;
        }
        l_U605 = 2;
        case 2:
        if (sub_32994( 1, g_U824 ))
        {
            l_U461 = 1;
            l_U605 = 5;
        }
        break;
        case 5:
        sub_715( "SBA", "P_HANDLE_SHOVEL_HIT_IS: eNIS_STATE_COMPLETE", "***" );
        l_U605 = 0;
        break;
    }
    return;
}

void sub_32054(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;

    sub_715( "SBA", "REGISTER_FLOW_PEDS_CUT_08_04b - start", 0 );
    sub_1624( -1101879058, 1 );
    if (sub_13634())
    {
        sub_715( "RJM", "Registering player with 08_04b", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_11774(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_11774(), g_U971[9]._fU0, g_U971[9]._fU12 );
        ISEQ_REGISTER_ENTITY( -1101879058, "max", sub_11774(), 0 );
    }
    if (sub_10347( uParam0 ))
    {
        sub_715( "RJM", "Registering Passos with 08_04b_cem", 0 );
        uVar6 = sub_4381( uParam0, -691403429, 25000, 0, 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( uParam0, "PASS_NY_H", 0 );
        ISEQ_REGISTER_ENTITY( -1101879058, "passos", uParam0, 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( uParam0, g_U779[9]._fU0, g_U779[9]._fU12 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar6, "W_SB_M10_Aa_H^2", 0 );
    }
    if (sub_10347( uParam1 ))
    {
        sub_715( "RJM", "Registering piCut08_04bGuy1 with 08_04b_cem", 0 );
        sub_19078( uParam1, 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( uParam1, "G_NY_C_Sold_F", 1 );
    }
    if (sub_10347( uParam2 ))
    {
        sub_715( "RJM", "Registering piCut08_04bGuy2 with 08_04b_cem", 0 );
        sub_19078( uParam2, 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( uParam2, "G_NY_C_GDIG_A", 1 );
        CUTSCENE_REGISTER_PED_TELEPORT( uParam2, 54.85000000, -56.15000000, 9.19000000, -125.00000000 );
    }
    if (sub_10347( uParam3 ))
    {
        sub_715( "RJM", "Registering piCut08_04bGuy3 with 08_04b_cem", 0 );
        sub_19078( uParam3, 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( uParam3, "G_NY_C_Sold_F^2", 1 );
        CUTSCENE_REGISTER_PED_TELEPORT( uParam3, 54.38000000, -55.03000000, 9.17000000, -125.00000000 );
    }
    sub_715( "RJM", "REGISTER_FLOW_PEDS_CUT_08_04b - end", 0 );
    return;
}

void sub_32994(boolean bParam0, unknown uParam1)
{
    int Result;
    int iVar5;

    Result = 0;
    switch (l_U341)
    {
        case 1:
        sub_715( "BSW", "PLAY_CUTSCENE_08_04b start", 0 );
        l_U426 = 0;
        sub_21129( 1, 0, 0, 1 );
        sub_1108( l_U309, 1 );
        if (NOT bParam0)
        {
            sub_26351( 1 );
            sub_33116();
            sub_33502();
        }
        else
        {
            CUTSCENE_REGISTER_ISEQ( -1101879058 );
        }
        START_SEAMLESS_CUTSCENE();
        l_U341 = 4;
        break;
        case 4:
        if (HAS_CUTSCENE_FINISHED())
        {
            CAMERA_PLAY_ANIMATED( "LEVEL_S_CEM_CP_08", "B_OUT_08_04B_CEM_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if (sub_13634())
            {
                if (NOT (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_11774(), 0, 0 ) )))
                {
                    sub_715( "SBA", "PLAY_CUTSCENE_08_04b is DONE: No weapon - giving player one", 0 );
                    sub_4381( sub_11774(), -691403429, 100, 0, 0 );
                }
                if (NOT l_U426)
                {
                    CLEAR_PED_PROP( sub_11774(), 13 );
                }
                if (NOT g_U1776)
                {
                    g_U1776 = 1;
                }
                if (NOT g_U1775)
                {
                    g_U1775 = 1;
                }
            }
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U971[9]._fU16, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U971[9]._fU20, 1065353216, 0 );
            sub_34628();
            if (NOT bParam0)
            {
                sub_34714();
            }
            Result = 1;
            l_U341 = 5;
            sub_715( "RJM", "PLAY_CUTSCENE_08_04b end", 0 );
        }
        else
        {
            iVar5 = GET_CUTSCENE_TIME_MS();
            if (NOT l_U426)
            {
                if (iVar5 > 50)
                {
                    if (NOT (IS_PED_DEAD( sub_11774() )))
                    {
                        CLEAR_PED_PROP( sub_11774(), 13 );
                    }
                    l_U426 = 1;
                }
            }
            if ((NOT g_U1776) AND (iVar5 >= 2350))
            {
                g_U1776 = 1;
            }
            if (iVar5 > 15000)
            {
                if (sub_13634())
                {
                    if (NOT (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_11774(), 0, 0 ) )))
                    {
                        sub_715( "SBA", "PLAY_CUTSCENE_08_04b: No weapon - giving player one", 0 );
                        sub_4381( sub_11774(), -691403429, 100, 0, 0 );
                    }
                }
                g_U1775 = 1;
            }
        }
        break;
    }
    return Result;
}

void sub_33116()
{
    sub_715( "RJM", "CREATE_08_04b_PEDS_AND_OBJECTS - start", 0 );
    sub_2328( ref l_U343, 0, 0, 0, 0.00000000, -1492315292, 26, 6, 0, 0, 0 );
    sub_2328( ref l_U357, 0, 0, 0, 0.00000000, 2141917892, 26, 6, 0, 0, 0 );
    sub_2328( ref l_U371, 0, 0, 0, 0.00000000, 1622707886, 26, 6, 0, 0, 0 );
    sub_2328( ref l_U385, 0, 0, 0, 0.00000000, -1121642072, 26, 6, 0, 0, 0 );
    sub_2328( ref l_U399, 0, 0, 0, 0.00000000, -668953082, 26, 6, 0, 0, 0 );
    sub_2328( ref l_U413, 0, 0, 0, 0.00000000, -124028970, 26, 6, 0, 0, 0 );
    l_U342 = sub_3654( ref l_U343 );
    l_U356 = sub_3654( ref l_U357 );
    l_U370 = sub_3654( ref l_U371 );
    l_U384 = sub_3654( ref l_U385 );
    l_U398 = sub_3654( ref l_U399 );
    l_U412 = sub_3654( ref l_U413 );
    sub_715( "RJM", "CREATE_08_04b_PEDS_AND_OBJECTS - end", 0 );
    return;
}

void sub_33502()
{
    sub_715( "RJM", "REGISTER_PEDS_CUT_08_04b - start", 0 );
    if (sub_13634())
    {
        sub_715( "RJM", "Registering player with 08_04b", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_11774(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_11774(), g_U971[9]._fU0, g_U971[9]._fU12 );
    }
    if (sub_10347( l_U342 ))
    {
        sub_715( "RJM", "Registering piCut08_04bPassos with 08_04b_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U342, "PASS_NY_H", 0 );
    }
    if (sub_10347( l_U356 ))
    {
        sub_715( "RJM", "Registering piCut08_04bGuy1 with 08_04b_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U356, "G_NY_C_Sold_F", 0 );
    }
    if (sub_10347( l_U370 ))
    {
        sub_715( "RJM", "Registering piCut08_04bGuy2 with 08_04b_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U370, "G_NY_C_GDIG_A", 0 );
    }
    if (sub_10347( l_U384 ))
    {
        sub_715( "RJM", "Registering piCut08_04bGuy3 with 08_04b_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U384, "G_NY_C_Sold_F^2", 0 );
    }
    if (sub_10347( l_U398 ))
    {
        sub_715( "RJM", "Registering piCut08_04bGuy4 with 08_04b_cem", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U398, "G_NY_C_Sold_F^1", 0 );
    }
    sub_715( "RJM", "REGISTER_PEDS_CUT_08_04b - end", 0 );
    return;
}

void sub_34628()
{
    sub_3572( l_U342 );
    sub_3572( l_U356 );
    sub_3572( l_U370 );
    sub_3572( l_U384 );
    sub_3572( l_U398 );
    sub_3572( l_U412 );
    return;
}

void sub_34714()
{
    sub_22436( g_U1332 );
    sub_22436( g_U1346 );
    sub_22436( g_U1347 );
    return;
}

void sub_35177()
{
    sub_715( "ML", "P_DIAL_POST_FIGHT ", "---" );
    if ((NOT (IS_PED_DEAD( g_U824 ))) AND (NOT (IS_PED_DEAD( g_U1178 ))))
    {
        sub_24901( ref l_U729 );
        sub_24983( 0, g_U1178, "MAX", ref l_U729, 2, 0 );
        sub_24983( 1, g_U824, "PASSOS", ref l_U729, 2, 0 );
        sub_25236( "SCMT_GDMCA", ref l_U729, 8, 1 );
    }
    return;
}

void sub_35467()
{
    sub_715( "SBA", "P_UNLOAD_ASSETS_GRAVE_DIG", "***" );
    sub_35527( l_U520 );
    sub_22436( g_U1346 );
    sub_22436( -488097608 );
    return;
}

void sub_35527(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_35584(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        case 1: break;
        case 2: break;
        case 3: break;
        case 4:
        case 5: break;
        case 6: break;
        case 7:
        sub_35721( 1224272620 );
        break;
        case 8: break;
        case 9:
        sub_3095( 434544317, 1 );
        sub_3095( -691403429, 1 );
        break;
        case 10:
        sub_35721( -184942895 );
        break;
    }
    return;
}

void sub_35721(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}


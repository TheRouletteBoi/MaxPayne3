void main()
{
    l_U0 = 1;
    l_U1 = 144;
    StrCopy( ref l_U2, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U10, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U18 = 0;
    l_U19 = 1;
    l_U20 = 0;
    l_U21 = 1.00000000;
    l_U22 = -5.00000000;
    l_U23 = 0;
    l_U24 = 0;
    l_U25 = 0;
    l_U29 = 42;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = 0;
    l_U33 = 0;
    l_U34 = 0;
    l_U35 = 90.00000000;
    l_U36 = {0.00000000, 0.00000000, 0.00000000};
    l_U39 = {0.00000000, 0.00000000, 0.00000000};
    l_U42 = 0;
    l_U43 = 0;
    l_U44 = 0;
    l_U45 = 0;
    l_U46 = 0;
    l_U47 = 0;
    l_U48 = nil;
    l_U49 = {0.00000000, 0.00000000, 0.00000000};
    l_U52 = 0;
    l_U53 = 0;
    l_U54 = 0;
    l_U330 = -1;
    l_U331 = {64536, 64536, 64536};
    l_U334 = {0, 0, 0};
    StrCopy( ref l_U337, "DUMMY", 32 );
    l_U345 = 1;
    l_U350 = 0;
    l_U351 = 0;
    l_U352 = 0;
    l_U355 = 0;
    l_U401 = 0;
    l_U402 = 0;
    l_U403 = 1500;
    l_U414 = 0;
    l_U848 = 0;
    l_U849 = 0;
    l_U851 = 0;
    l_U867 = 47;
    l_U868 = 48;
    l_U869 = 49;
    l_U870 = 52;
    l_U871 = {42.83000000, -1334.48000000, 0.09700000};
    l_U874 = 90.00000000;
    l_U875 = {21.27000000, -1487.01000000, 0.40000000};
    l_U878 = 174.00000000;
    l_U879 = {45.52000000, -2336.72000000, 0.40000000};
    l_U882 = 225.00000000;
    l_U883 = {83.56000000, -2984.54000000, 0.40000000};
    l_U886 = 100.00000000;
    l_U971 = 30000;
    l_U972 = 60000;
    l_U973 = 10000;
    l_U974 = 20000;
    l_U984 = 0;
    l_U985 = 0;
    l_U986 = 0;
    l_U987 = 0.20000000;
    l_U991 = 65;
    l_U993 = 10.00000000;
    l_U994 = 15.00000000;
    l_U995 = 20.00000000;
    l_U996 = 8.00000000;
    l_U997 = 5.00000000;
    l_U998 = 12.00000000;
    l_U1000 = 0;
    l_U1001 = 0;
    l_U1002 = 11.70000000;
    l_U1004 = 0.06500000;
    l_U1005 = 0.10000000;
    l_U1069 = {8.40000000, 12.92000000, 0.25000000};
    l_U1072 = {0.00000000, 0.18000000, 1.70000000};
    l_U1075 = {5.66000000, 4.40000000, 0.25000000};
    l_U1078 = {0.00000000, 0.18000000, 2.20000000};
    l_U1081 = {-5.16000000, 12.44000000, 0.40000000};
    l_U1084 = {0.00000000, 0.18000000, 1.70000000};
    l_U1087 = {-6.90000000, -6.92000000, 0.25000000};
    l_U1090 = {0.00000000, 0.18000000, 1.90000000};
    l_U1093 = {1.00000000, 13.44000000, 0.50000000};
    l_U1096 = {0.00000000, 0.18000000, 1.70000000};
    l_U1099 = {-1.00000000, 6.92000000, 0.00000000};
    l_U1102 = {-1.00000000, 0.18000000, 2.00000000};
    l_U1105 = {4.00000000, -10.44000000, 4.50000000};
    l_U1108 = {0.00000000, -0.18000000, 1.70000000};
    l_U1111 = {-8.00000000, -15.44000000, 0.50000000};
    l_U1114 = {0.00000000, -0.18000000, 1.70000000};
    l_U1117 = 10000;
    l_U1127 = 10;
    l_U1146 = 60;
    l_U1147 = 0.60000000;
    l_U1157 = 2000;
    l_U1167 = 500;
    l_U1193 = 1;
    l_U1194 = 1500;
    l_U1195 = 500;
    l_U1197 = 2500;
    l_U1198 = 1500;
    l_U1199 = 1000;
    l_U1200 = 750;
    l_U1201 = 750;
    l_U1202 = 3000;
    l_U1214 = 500;
    l_U1215 = 0.00000000;
    l_U1216 = 0;
    l_U1217 = 0;
    l_U1218 = 0.10000000;
    l_U1219 = 0.50000000;
    l_U1220 = 100;
    l_U1221 = 250;
    l_U1222 = 0;
    l_U1223 = {0.50000000, 0.50000000, 0.95000000};
    l_U1226 = 0;
    l_U1227 = 500;
    l_U1228 = "Smk_VehBoatMini_Eng_S";
    l_U1229 = {0.00000000, -2.80000000, 0.35000000};
    l_U1232 = "Smk_VehBoatDrug_Eng_S";
    l_U1233 = {0.00000000, -5.30000000, 0.50000000};
    l_U1236 = "Smk_VehBoatChase_Eng_S";
    l_U1237 = {-0.50000000, -4.50000000, 1.00000000};
    l_U1240 = "Smk_VehFelino_Eng_S";
    l_U1241 = {-1.35000000, -1.30000000, -0.15000000};
    l_U1244 = 0;
    l_U1245 = 0;
    l_U1246 = 0;
    l_U1247 = 0;
    l_U1248 = 1;
    l_U1249 = 1;
    l_U1250 = 1;
    l_U1251 = 1.00000000;
    l_U1397 = {0.00000000, -1.50000000, 1.30000000};
    l_U1400 = {0.00000000, -1.50000000, 1.30000000};
    l_U1403 = {-0.35000000, -0.93000000, 1.05000000};
    l_U1406 = {0.00000000, -1.50000000, 1.30000000};
    l_U1409 = {0.00000000, -1.50000000, 1.30000000};
    l_U1412 = {0.00000000, -2.00000000, 1.00000000};
    l_U1415 = {-0.58000000, -1.60000000, 1.00000000};
    l_U1418 = {0.76000000, -1.30000000, 1.00000000};
    l_U1479 = "/Global/s_marina_drv/MAXBOAT/MAXBOAT_IDLE";
    l_U1481 = {0.00000000, -3.25000000, 0.85000000};
    l_U1484 = 0;
    l_U1485 = 1.00000000;
    l_U1486 = "Veh_Boat_Smoke_White_S";
    l_U1487 = "Veh_Boat_Smoke_Grey_S";
    l_U1488 = "Veh_Boat_Smoke_Black_S";
    l_U1489 = 1;
    l_U1490 = "S_MAR_MID_12_BLEND";
    l_U1498 = "MID_10_DOCKS_concat";
    l_U1499 = "SMAR_RS_01_Start_to_Mid_08d";
    l_U1500 = "SMAR_RS_03_Mid_09B_to_Mid_10";
    l_U1501 = "Mid_10_Docks_Blendout_A";
    l_U1502 = "SMAR_SHACK_PROPANE_EXPLOSION";
    l_U1503 = "Mid_10_Docks_Blendout_B";
    l_U1504 = "SMAR_VILLAGE_FUEL_DEPOT_EXPLOSION";
    l_U1505 = "SMAR_RS_04_Mid_11_to_Mid_12";
    l_U1506 = "SMAR_RS_Mangrove_Troll";
    l_U1507 = "Mid_12B_Docks_Blend_In";
    l_U1508 = "SMAR_RS_05_Mid_12B_to_Mid_13";
    l_U1649 = "DOCKS_RS_1_3_4";
    l_U1650 = "DOCKS_RS_1_3";
    l_U1651 = "DOCKS_RS_1_3";
    l_U1652 = "DOCKS_RS_2_3_4";
    l_U1653 = "DOCKS_RS_2_3_4";
    l_U1654 = "DOCKS_RS_2_4";
    l_U1655 = "DOCKS_RS_ALL";
    l_U1656 = "DOCKS_RS_2_3";
    l_U1657 = "DOCKS_RS_2_3";
    l_U1658 = "DOCKS_RS_01";
    l_U1659 = 0;
    l_U1660 = 1.00000000;
    l_U1661 = 2000.00000000;
    l_U1662 = 134361.00000000;
    l_U1663 = 6104.00000000;
    l_U1664 = 267;
    l_U1684 = {0.75000000, -2.00000000, 1.50000000};
    l_U1687 = 0.00000000;
    l_U1688 = 1770;
    l_U1689 = 1000;
    l_U4031 = 1;
    l_U4032 = 100.00000000;
    l_U4033 = 15;
    l_U4034 = 20;
    l_U4035 = 10.00000000;
    l_U4038 = 50.00000000;
    l_U4039 = 6;
    l_U4071 = 218;
    l_U4857 = 3000;
    l_U4876 = 2000;
    l_U4877 = 5000;
    l_U4878 = 0.35000000;
    l_U4909 = -1;
    l_U4922 = 47726.00000000;
    l_U4924 = 71715.00000000;
    l_U4925 = 0;
    l_U4926 = 1.50000000;
    l_U4927 = 10700;
    l_U4928 = 44200.00000000;
    l_U4929 = 23;
    l_U5575 = 50;
    l_U5598 = 10000;
    l_U5599 = 0;
    l_U5600 = {18.00000000, -5.00000000, 4.50000000};
    l_U5603 = {18.00000000, 5.00000000, 1.50000000};
    l_U5606 = {0.00000000, 0.00000000, 0.00000000};
    l_U5609 = {0.00000000, 0.00000000, 3.00000000};
    l_U5612 = 14000.00000000;
    l_U5614 = 16000.00000000;
    l_U5616 = 0;
    l_U5617 = "S_MAR_MID_13_BLEND_IN";
    l_U5618 = l_U4928 - 4000;
    l_U5619 = 0;
    l_U5620 = {2.00000000, -0.50000000, 0.30000000};
    l_U5623 = {2.10660400, 0.00000200, 91.24854000};
    l_U5626 = 1300;
    l_U5685 = 3000;
    l_U5686 = 2.50000000;
    l_U5687 = {0.00000000, -3.00000000, 0.00000000};
    l_U5690 = 500;
    l_U5691 = 1250;
    l_U5692 = 0.15000000;
    l_U5742 = 1.00000000;
    l_U5805 = 0.20000000;
    l_U5806 = 0.10000000;
    l_U5807 = {-190.93000000, -3020.65000000, 10.67000000};
    l_U5810 = 500;
    l_U5811 = 14560.00000000;
    l_U5812 = 24;
    l_U5813 = 205;
    l_U5814 = {-206.45000000, -3005.96000000, 0.40000000};
    l_U5817 = 100.00000000;
    l_U5818 = 11410.00000000;
    l_U5819 = 13350.00000000;
    l_U5820 = 4;
    l_U5821 = l_U5820 - 1;
    l_U6110 = 15;
    l_U6128 = 0.40000000;
    l_U6129 = 0.40000000;
    l_U6130 = 0.16000000;
    l_U6136 = {13.44000000, 0.03000000, -57.95000000};
    l_U6139 = 45.00000000;
    l_U6140 = {13.44000000, 0.03000000, -57.95000000};
    l_U6143 = 45.00000000;
    l_U6144 = 700;
    l_U6145 = 3000;
    l_U6146 = 10;
    l_U6147 = 1;
    l_U6148 = 0.75000000;
    l_U6150 = {-207.00000000, -3023.00000000, -2.00000000};
    l_U6170 = 0;
    l_U6171 = 0;
    l_U6172 = 0;
    l_U6209 = "SCRIPT_MISSION\S_MARINA_RAIL_SHOOTER";
    sub_3524( "GA", "Script s_boat_BoatRailB.sc is starting...", 0 );
    sub_3573();
    sub_16137();
    sub_22224();
    sub_23474();
    sub_26755();
    sub_27034();
    sub_27827();
    sub_28342();
    sub_29681();
    l_U414 = 0;
    sub_30702();
    sub_32547( "SMA2AUD" );
    if (l_U851 == 0)
    {
        if (g_U652 < 5)
        {
            l_U1495 = 1;
            while (NOT g_U971)
            {
                WAIT( 0 );
            }
        }
        else
        {
            sub_32723( g_U652 );
            sub_37125();
            sub_38106( g_U652 );
        }
        sub_42101();
        sub_42155();
    }
    while ((NOT IS_EXITFLAG_SET()) AND (NOT l_U848))
    {
        if (l_U851 == 0)
        {
            sub_74305();
            sub_77890();
        }
        else if (l_U851 == 1)
        {
            ;
        }
        WAIT( 0 );
    }
    if (l_U848)
    {
        SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 7 );
        if (IS_ARCADE_MODE_ACTIVE())
        {
            DISPLAY_ARCADE_MODE_LEVEL_END( "s_office" );
            DO_SCREEN_FADE_IN( 0 );
        }
        else
        {
            sub_112137();
            sub_76965();
            sub_113490();
            sub_113882();
            SWITCH_TO_LEVEL_NAME( "s_office" );
            SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_boat_BoatRailB" );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        sub_76965();
        sub_113490();
        sub_113882();
        SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_boat_BoatRailB" );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
    }
    sub_3524( "GA", "Script s_boat_BoatRailB.sc is terminating...", 0 );
    return;
}

void sub_3524(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_3573()
{
    sub_3583();
    sub_13560();
    return;
}

void sub_3583()
{
    sub_3524( "AT", "P_SETUP_MANGROVE_BOAT_ARRAYS start", 0 );
    sub_3641();
    l_U1690[0]._fU88 = {-1.22000000, -2365.97000000, 0.00000000};
    l_U1690[0]._fU100 = -160.00000000;
    l_U1690[0]._fU104 = 5550.00000000;
    l_U1690[0]._fU108 = 59;
    l_U1690[0]._fU120 = 0.00000000;
    l_U1690[0]._fU124 = 0.00000000;
    l_U1690[0]._fU112 = 0;
    l_U1690[0]._fU116 = 0;
    l_U1690[0]._fU144 = "eMBR_StartFar1";
    l_U2413[0] = 1500.00000000;
    l_U4011[0] = 1;
    l_U2433[0][0]._fU60 = -1074756423;
    l_U2433[0][0]._fU64 = 0;
    l_U2433[0][0]._fU68 = "RSG_Mangrove_Gunners[eMB_StartFar1][0]";
    l_U1690[10]._fU88 = {-1.22000000, -2365.97000000, 0.00000000};
    l_U1690[10]._fU100 = -160.00000000;
    l_U1690[10]._fU104 = 6500.00000000;
    l_U1690[10]._fU108 = 59;
    l_U1690[10]._fU120 = 0.00000000;
    l_U1690[10]._fU124 = 0.00000000;
    l_U1690[10]._fU112 = 0;
    l_U1690[10]._fU116 = 0;
    l_U1690[10]._fU144 = "eMB_StartFar2";
    l_U2413[10] = 54500.00000000;
    l_U4011[10] = 2;
    l_U2433[10][0]._fU60 = -1074756423;
    l_U2433[10][0]._fU64 = 1;
    l_U2433[10][0]._fU68 = "RSG_Mangrove_Gunners[eMB_StartFar2][0]";
    l_U2433[10][1]._fU60 = 68019059;
    l_U2433[10][1]._fU64 = 2;
    l_U2433[10][1]._fU68 = "RSG_Mangrove_Gunners[eMB_StartFar2][1]";
    l_U1690[18]._fU88 = {-1.22000000, -2365.97000000, 0.00000000};
    l_U1690[18]._fU100 = -160.00000000;
    l_U1690[18]._fU104 = 1000.00000000;
    l_U1690[18]._fU108 = 59;
    l_U1690[18]._fU120 = 0.00000000;
    l_U1690[18]._fU124 = 0.00000000;
    l_U1690[18]._fU112 = 0;
    l_U1690[18]._fU116 = 0;
    l_U1690[18]._fU144 = "eMB_StartFar3";
    l_U2413[18] = 123200.00000000;
    l_U4011[18] = 2;
    l_U2433[18][0]._fU60 = -168327769;
    l_U2433[18][0]._fU64 = 0;
    l_U2433[18][0]._fU68 = "RSG_Mangrove_Gunners[eMB_StartFar3][0]";
    l_U2433[18][1]._fU60 = 1194438308;
    l_U2433[18][1]._fU64 = 2;
    l_U2433[18][1]._fU68 = "RSG_Mangrove_Gunners[eMB_StartFar3][1]";
    l_U1690[1]._fU88 = {21.99815000, -2437.27000000, 0.00000000};
    l_U1690[1]._fU100 = 105.00000000;
    l_U1690[1]._fU104 = 2850.00000000;
    l_U1690[1]._fU108 = 60;
    l_U1690[1]._fU120 = 0.00000000;
    l_U1690[1]._fU124 = 0.00000000;
    l_U1690[1]._fU112 = 0;
    l_U1690[1]._fU116 = 0;
    l_U1690[1]._fU144 = "eMB_StartNear1";
    l_U2413[1] = 1500.00000000;
    l_U4011[1] = 2;
    l_U2433[1][0]._fU60 = -1074756423;
    l_U2433[1][0]._fU64 = 0;
    l_U2433[1][0]._fU68 = "RSG_Mangrove_Gunners[eMB_StartNear1][0]";
    l_U2433[1][1]._fU60 = 1194438308;
    l_U2433[1][1]._fU64 = 2;
    l_U2433[1][1]._fU68 = "RSG_Mangrove_Gunners[eMB_StartNear1][1]";
    l_U1690[2]._fU88 = {46.13000000, -2480.89000000, 0.00000000};
    l_U1690[2]._fU100 = 105.00000000;
    l_U1690[2]._fU104 = 2000.00000000;
    l_U1690[2]._fU108 = 61;
    l_U1690[2]._fU120 = 0.00000000;
    l_U1690[2]._fU124 = 0.00000000;
    l_U1690[2]._fU112 = 0;
    l_U1690[2]._fU116 = 0;
    l_U1690[2]._fU144 = "eMB_CulDeSacA1";
    l_U2413[2] = 7300.00000000;
    l_U4011[2] = 1;
    l_U2433[2][0]._fU60 = -1074756423;
    l_U2433[2][0]._fU64 = 1;
    l_U2433[2][0]._fU68 = "RSG_Mangrove_Gunners[eMB_CulDeSacA1][0]";
    l_U1690[11]._fU88 = {46.13000000, -2480.89000000, 0.00000000};
    l_U1690[11]._fU100 = 105.00000000;
    l_U1690[11]._fU104 = 3000.00000000;
    l_U1690[11]._fU108 = 61;
    l_U1690[11]._fU120 = 0.00000000;
    l_U1690[11]._fU124 = 0.00000000;
    l_U1690[11]._fU112 = 0;
    l_U1690[11]._fU116 = 0;
    l_U1690[11]._fU144 = "eMB_CulDeSacA2";
    l_U2413[11] = 64500.00000000;
    l_U4011[11] = 2;
    l_U2433[11][0]._fU60 = -1074756423;
    l_U2433[11][0]._fU64 = 1;
    l_U2433[11][0]._fU68 = "RSG_Mangrove_Gunners[eMB_CulDeSacA2][0]";
    l_U2433[11][1]._fU60 = -168327769;
    l_U2433[11][1]._fU64 = 0;
    l_U2433[11][1]._fU68 = "RSG_Mangrove_Gunners[eMB_CulDeSacA2][1]";
    l_U1690[4]._fU88 = {103.76000000, -2600.57000000, 0.00000000};
    l_U1690[4]._fU100 = 90.00000000;
    l_U1690[4]._fU104 = 4000.00000000;
    l_U1690[4]._fU108 = 158;
    l_U1690[4]._fU120 = 0.00000000;
    l_U1690[4]._fU124 = 0.00000000;
    l_U1690[4]._fU112 = 0;
    l_U1690[4]._fU116 = 0;
    l_U1690[4]._fU144 = "eMB_ExitPathRight1";
    l_U2413[4] = 17500.00000000;
    l_U4011[4] = 1;
    l_U2433[4][0]._fU60 = 68019059;
    l_U2433[4][0]._fU64 = 2;
    l_U2433[4][0]._fU68 = "RSG_Mangrove_Gunners[8]";
    l_U1690[13]._fU88 = {103.76000000, -2600.57000000, 0.00000000};
    l_U1690[13]._fU100 = 90.00000000;
    l_U1690[13]._fU104 = 1000.00000000;
    l_U1690[13]._fU108 = 158;
    l_U1690[13]._fU120 = 0.00000000;
    l_U1690[13]._fU124 = 0.00000000;
    l_U1690[13]._fU112 = 0;
    l_U1690[13]._fU116 = 0;
    l_U1690[13]._fU144 = "eMB_ExitPathRight2";
    l_U2413[13] = 74250.00000000;
    l_U4011[13] = 1;
    l_U2433[13][0]._fU60 = -1074756423;
    l_U2433[13][0]._fU64 = 1;
    l_U2433[13][0]._fU68 = "RSG_Mangrove_Gunners[eMB_ExitPathRight2][0]";
    l_U1690[12]._fU88 = {123.19000000, -2618.02000000, 0.00000000};
    l_U1690[12]._fU100 = 90.00000000;
    l_U1690[12]._fU104 = 0.00000000;
    l_U1690[12]._fU108 = 166;
    l_U1690[12]._fU120 = 0.00000000;
    l_U1690[12]._fU124 = 0.00000000;
    l_U1690[12]._fU112 = 0;
    l_U1690[12]._fU116 = 0;
    l_U1690[12]._fU144 = "eMB_ExitPathLeft2";
    l_U2413[12] = 73500.00000000;
    l_U4011[12] = 2;
    l_U2433[12][0]._fU60 = 68019059;
    l_U2433[12][0]._fU64 = 2;
    l_U2433[12][0]._fU68 = "RSG_Mangrove_Gunners[eMB_ExitPathLeft2][0]";
    l_U2433[12][1]._fU60 = -1074756423;
    l_U2433[12][1]._fU64 = 0;
    l_U2433[12][1]._fU68 = "RSG_Mangrove_Gunners[eMB_ExitPathLeft2][1]";
    l_U1690[5]._fU88 = {0.50000000, -2556.00000000, 0.00000000};
    l_U1690[5]._fU100 = 165.00000000;
    l_U1690[5]._fU104 = 5000.00000000;
    l_U1690[5]._fU108 = 62;
    l_U1690[5]._fU120 = 0.00000000;
    l_U1690[5]._fU124 = 0.00000000;
    l_U1690[5]._fU112 = 0;
    l_U1690[5]._fU116 = 0;
    l_U1690[5]._fU144 = "eMB_FromCentreA1";
    l_U2413[5] = 28500.00000000;
    l_U4011[5] = 2;
    l_U2433[5][0]._fU60 = 1194438308;
    l_U2433[5][0]._fU64 = 2;
    l_U2433[5][0]._fU68 = "RSG_Mangrove_Gunners[eMB_FromCentreA1][0]";
    l_U2433[5][1]._fU60 = -1074756423;
    l_U2433[5][1]._fU64 = 1;
    l_U2433[5][1]._fU68 = "RSG_Mangrove_Gunners[eMB_FromCentreA1][1]";
    l_U1690[14]._fU88 = {0.50000000, -2556.00000000, 0.00000000};
    l_U1690[14]._fU100 = 165.00000000;
    l_U1690[14]._fU104 = 1000.00000000;
    l_U1690[14]._fU108 = 62;
    l_U1690[14]._fU120 = 0.00000000;
    l_U1690[14]._fU124 = 0.00000000;
    l_U1690[14]._fU112 = 0;
    l_U1690[14]._fU116 = 0;
    l_U1690[14]._fU144 = "eMB_FromCentreA2";
    l_U2413[14] = 83900.00000000;
    l_U4011[14] = 2;
    l_U2433[14][0]._fU60 = -1074756423;
    l_U2433[14][0]._fU64 = 0;
    l_U2433[14][0]._fU68 = "RSG_Mangrove_Gunners[eMB_FromCentreA2][0]";
    l_U2433[14][1]._fU60 = 1194438308;
    l_U2433[14][1]._fU64 = 2;
    l_U2433[14][1]._fU68 = "RSG_Mangrove_Gunners[eMB_FromCentreA2][1]";
    l_U1690[6]._fU88 = {-16.88000000, -2575.64000000, 0.00000000};
    l_U1690[6]._fU100 = 100.00000000;
    l_U1690[6]._fU104 = 3000.00000000;
    l_U1690[6]._fU108 = 63;
    l_U1690[6]._fU120 = 0.00000000;
    l_U1690[6]._fU124 = 0.00000000;
    l_U1690[6]._fU112 = 0;
    l_U1690[6]._fU116 = 0;
    l_U1690[6]._fU144 = "eMB_FromCentreB1";
    l_U2413[6] = 37000.00000000;
    l_U4011[6] = 1;
    l_U2433[6][0]._fU60 = 68019059;
    l_U2433[6][0]._fU64 = 2;
    l_U2433[6][0]._fU68 = "RSG_Mangrove_Gunners[eMB_FromCentreB1][0]";
    l_U1690[15]._fU88 = {-16.88000000, -2575.64000000, 0.00000000};
    l_U1690[15]._fU100 = 100.00000000;
    l_U1690[15]._fU104 = 3000.00000000;
    l_U1690[15]._fU108 = 63;
    l_U1690[15]._fU120 = 0.00000000;
    l_U1690[15]._fU124 = 0.00000000;
    l_U1690[15]._fU112 = 0;
    l_U1690[15]._fU116 = 0;
    l_U1690[15]._fU144 = "eMB_FromCentreB2";
    l_U2413[15] = 97500.00000000;
    l_U4011[15] = 2;
    l_U2433[15][0]._fU60 = -168327769;
    l_U2433[15][0]._fU64 = 0;
    l_U2433[15][0]._fU68 = "RSG_Mangrove_Gunners[eMB_FromCentreB2][0]";
    l_U2433[15][1]._fU60 = -1074756423;
    l_U2433[15][1]._fU64 = 1;
    l_U2433[15][1]._fU68 = "RSG_Mangrove_Gunners[eMB_FromCentreB2][1]";
    l_U1690[7]._fU88 = {-46.55000000, -2541.01000000, 0.00000000};
    l_U1690[7]._fU100 = 100.00000000;
    l_U1690[7]._fU104 = 2500.00000000;
    l_U1690[7]._fU108 = 64;
    l_U1690[7]._fU120 = 0.00000000;
    l_U1690[7]._fU124 = 0.00000000;
    l_U1690[7]._fU112 = 0;
    l_U1690[7]._fU116 = 0;
    l_U1690[7]._fU144 = "eMB_FromCentreC1";
    l_U2413[7] = 45400.00000000;
    l_U4011[7] = 1;
    l_U2433[7][0]._fU60 = -1074756423;
    l_U2433[7][0]._fU64 = 1;
    l_U2433[7][0]._fU68 = "RSG_Mangrove_Gunners[eMB_FromCentreC1][0]";
    l_U1690[16]._fU88 = {-46.55000000, -2541.01000000, 0.00000000};
    l_U1690[16]._fU100 = 100.00000000;
    l_U1690[16]._fU104 = 2500.00000000;
    l_U1690[16]._fU108 = 64;
    l_U1690[16]._fU120 = 0.00000000;
    l_U1690[16]._fU124 = 0.00000000;
    l_U1690[16]._fU112 = 0;
    l_U1690[16]._fU116 = 0;
    l_U1690[16]._fU144 = "eMB_FromCentreC2";
    l_U2413[16] = 104700.00000000;
    l_U4011[16] = 1;
    l_U2433[16][0]._fU60 = -1074756423;
    l_U2433[16][0]._fU64 = 1;
    l_U2433[16][0]._fU68 = "RSG_Mangrove_Gunners[eMB_FromCentreC2][0]";
    l_U1690[8]._fU88 = {-41.26000000, -2524.19000000, 0.00000000};
    l_U1690[8]._fU100 = -15.00000000;
    l_U1690[8]._fU104 = 2000.00000000;
    l_U1690[8]._fU108 = 103;
    l_U1690[8]._fU120 = 0.00000000;
    l_U1690[8]._fU124 = 0.00000000;
    l_U1690[8]._fU112 = 0;
    l_U1690[8]._fU116 = 0;
    l_U1690[8]._fU144 = "eMB_FromCentreD1";
    l_U2413[8] = 52000.00000000;
    l_U4011[8] = 2;
    l_U2433[8][0]._fU60 = -168327769;
    l_U2433[8][0]._fU64 = 0;
    l_U2433[8][0]._fU68 = "RSG_Mangrove_Gunners[eMB_FromCentreD1][0]";
    l_U2433[8][1]._fU60 = -1074756423;
    l_U2433[8][1]._fU64 = 1;
    l_U2433[8][1]._fU68 = "RSG_Mangrove_Gunners[eMB_FromCentreD1][1]";
    l_U1690[3]._fU88 = {-5.51000000, -2545.46000000, 0.00000000};
    l_U1690[3]._fU100 = -70.00000000;
    l_U1690[3]._fU104 = 3500.00000000;
    l_U1690[3]._fU108 = 125;
    l_U1690[3]._fU120 = 0.00000000;
    l_U1690[3]._fU124 = 0.00000000;
    l_U1690[3]._fU112 = 0;
    l_U1690[3]._fU116 = 0;
    l_U1690[3]._fU144 = "eMB_FromCentreE1";
    l_U2413[3] = 10300.00000000;
    l_U4011[3] = 1;
    l_U2433[3][0]._fU60 = 1194438308;
    l_U2433[3][0]._fU64 = 2;
    l_U2433[3][0]._fU68 = "RSG_Mangrove_Gunners[eMB_FromCentreE1][0]";
    l_U1690[9]._fU88 = {-78.78000000, -2438.87000000, 0.00000000};
    l_U1690[9]._fU100 = -95.00000000;
    l_U1690[9]._fU104 = 2000.00000000;
    l_U1690[9]._fU108 = 167;
    l_U1690[9]._fU120 = 0.00000000;
    l_U1690[9]._fU124 = 0.00000000;
    l_U1690[9]._fU112 = 0;
    l_U1690[9]._fU116 = 0;
    l_U1690[9]._fU144 = "eMB_TributaryA1";
    l_U2413[9] = 50000.00000000;
    l_U4011[9] = 1;
    l_U2433[9][0]._fU60 = -1074756423;
    l_U2433[9][0]._fU64 = 0;
    l_U2433[9][0]._fU68 = "RSG_Mangrove_Gunners[eMB_TributaryA1][0]";
    l_U1690[17]._fU88 = {-78.78000000, -2438.87000000, 0.00000000};
    l_U1690[17]._fU100 = -95.00000000;
    l_U1690[17]._fU104 = 2000.00000000;
    l_U1690[17]._fU108 = 167;
    l_U1690[17]._fU120 = 0.00000000;
    l_U1690[17]._fU124 = 0.00000000;
    l_U1690[17]._fU112 = 0;
    l_U1690[17]._fU116 = 0;
    l_U1690[17]._fU144 = "eMB_TributaryA2";
    l_U2413[17] = 115700.00000000;
    l_U4011[17] = 2;
    l_U2433[17][0]._fU60 = -1074756423;
    l_U2433[17][0]._fU64 = 0;
    l_U2433[17][0]._fU68 = "RSG_Mangrove_Gunners[eMB_TributaryA2][0]";
    l_U2433[17][1]._fU60 = -1074756423;
    l_U2433[17][1]._fU64 = 1;
    l_U2433[17][1]._fU68 = "RSG_Mangrove_Gunners[eMB_TributaryA2][1]";
    sub_3524( "AT", "P_SETUP_MANGROVE_BOAT_ARRAYS end", 0 );
    return;
}

void sub_3641()
{
    l_U4082[0]._fU0._fU88 = {-32.78000000, -2426.71000000, 0.00000000};
    l_U4082[0]._fU0._fU100 = -90.00000000;
    l_U4082[0]._fU0._fU104 = 0.00000000;
    l_U4082[0]._fU0._fU108 = 251;
    l_U4082[0]._fU0._fU120 = 0.00000000;
    l_U4082[0]._fU0._fU124 = 0.00000000;
    l_U4082[0]._fU0._fU112 = 0;
    l_U4082[0]._fU0._fU116 = 0;
    l_U4082[0]._fU0._fU144 = "Mangrove_Flavour_Boat_1";
    l_U4082[0]._fU0._fU84 = "M5A_CS_119_Avg";
    l_U4082[0]._fU152 = 53000.00000000;
    l_U4082[0]._fU156 = 0;
    l_U4082[0]._fU160 = 0;
    l_U4082[0]._fU164 = 0;
    l_U4082[0]._fU172 = 0;
    l_U4082[0]._fU176 = 1;
    l_U4082[0]._fU180[0]._fU56 = "M5A_CS_122_Avg";
    l_U4082[0]._fU180[0]._fU60 = 1194438308;
    l_U4082[0]._fU180[0]._fU64 = 5;
    l_U4082[0]._fU168 = 1;
    l_U4082[0]._fU512 = 0.80000000;
    l_U4082[1]._fU0._fU88 = {23.69000000, -2624.01000000, 0.00000000};
    l_U4082[1]._fU0._fU100 = -90.00000000;
    l_U4082[1]._fU0._fU104 = 4000.00000000;
    l_U4082[1]._fU0._fU108 = 252;
    l_U4082[1]._fU0._fU120 = 0.00000000;
    l_U4082[1]._fU0._fU124 = 0.00000000;
    l_U4082[1]._fU0._fU112 = 0;
    l_U4082[1]._fU0._fU116 = 0;
    l_U4082[1]._fU0._fU144 = "Mangrove_Flavour_Boat_2";
    l_U4082[1]._fU0._fU84 = "M5A_CS_119_Avg";
    l_U4082[1]._fU152 = 69000.00000000;
    l_U4082[1]._fU156 = 0;
    l_U4082[1]._fU160 = 0;
    l_U4082[1]._fU164 = 0;
    l_U4082[1]._fU172 = 1;
    l_U4082[1]._fU176 = 2;
    l_U4082[1]._fU180[0]._fU56 = "M5A_CS_123_Mus";
    l_U4082[1]._fU180[0]._fU60 = -1074756423;
    l_U4082[1]._fU180[0]._fU64 = 47;
    l_U4082[1]._fU180[1]._fU56 = "M5A_CS_124_Avg";
    l_U4082[1]._fU180[1]._fU60 = -1074756423;
    l_U4082[1]._fU180[1]._fU64 = 46;
    l_U4082[1]._fU168 = 1;
    l_U4082[1]._fU512 = 1.10000000;
    l_U4082[2]._fU0._fU88 = {-80.42000000, -2559.51000000, 0.00000000};
    l_U4082[2]._fU0._fU100 = -90.00000000;
    l_U4082[2]._fU0._fU104 = 0.00000000;
    l_U4082[2]._fU0._fU108 = 253;
    l_U4082[2]._fU0._fU120 = 0.00000000;
    l_U4082[2]._fU0._fU124 = 0.00000000;
    l_U4082[2]._fU0._fU112 = 0;
    l_U4082[2]._fU0._fU116 = 0;
    l_U4082[2]._fU0._fU144 = "Mangrove_Flavour_Boat_3";
    l_U4082[2]._fU0._fU84 = "M5A_CS_119_Avg";
    l_U4082[2]._fU152 = 27500.00000000;
    l_U4082[2]._fU156 = 0;
    l_U4082[2]._fU160 = 1;
    l_U4082[2]._fU164 = 0;
    l_U4082[2]._fU172 = 1;
    l_U4082[2]._fU176 = 0;
    l_U4082[2]._fU168 = 0;
    l_U4082[2]._fU512 = l_U1660;
    l_U4082[3]._fU0._fU88 = {-52.16000000, -2575.29000000, 0.00000000};
    l_U4082[3]._fU0._fU100 = -90.00000000;
    l_U4082[3]._fU0._fU104 = 0.00000000;
    l_U4082[3]._fU0._fU108 = 254;
    l_U4082[3]._fU0._fU120 = 0.00000000;
    l_U4082[3]._fU0._fU124 = 0.00000000;
    l_U4082[3]._fU0._fU112 = 0;
    l_U4082[3]._fU0._fU116 = 0;
    l_U4082[3]._fU0._fU144 = "Mangrove_Flavour_Boat_4";
    l_U4082[3]._fU0._fU84 = "M5A_CS_120_Avg";
    l_U4082[3]._fU152 = 74000.00000000;
    l_U4082[3]._fU156 = 0;
    l_U4082[3]._fU160 = 0;
    l_U4082[3]._fU164 = 0;
    l_U4082[3]._fU172 = 0;
    l_U4082[3]._fU176 = 1;
    l_U4082[3]._fU180[0]._fU56 = "M5A_CS_125_Mus";
    l_U4082[3]._fU180[0]._fU60 = 1194438308;
    l_U4082[3]._fU180[0]._fU64 = 5;
    l_U4082[3]._fU168 = 0;
    l_U4082[3]._fU512 = 0.70000000;
    l_U4082[4]._fU0._fU88 = {-17.51000000, -2460.00000000, 0.00000000};
    l_U4082[4]._fU0._fU100 = -90.00000000;
    l_U4082[4]._fU0._fU104 = 3000.00000000;
    l_U4082[4]._fU0._fU108 = 258;
    l_U4082[4]._fU0._fU120 = 0.00000000;
    l_U4082[4]._fU0._fU124 = 0.00000000;
    l_U4082[4]._fU0._fU112 = 0;
    l_U4082[4]._fU0._fU116 = 0;
    l_U4082[4]._fU0._fU144 = "Mangrove_Flavour_Boat_5";
    l_U4082[4]._fU0._fU84 = "M5A_CS_119_Avg";
    l_U4082[4]._fU152 = 107500.00000000;
    l_U4082[4]._fU156 = 0;
    l_U4082[4]._fU160 = 0;
    l_U4082[4]._fU164 = 0;
    l_U4082[4]._fU172 = 1;
    l_U4082[4]._fU176 = 1;
    l_U4082[4]._fU180[0]._fU56 = "M5A_CS_124_Avg";
    l_U4082[4]._fU180[0]._fU60 = -1074756423;
    l_U4082[4]._fU180[0]._fU64 = 47;
    l_U4082[4]._fU168 = 1;
    l_U4082[4]._fU512 = l_U1660;
    l_U4082[5]._fU0._fU88 = {14.64000000, -2641.11000000, 0.00000000};
    l_U4082[5]._fU0._fU100 = -90.00000000;
    l_U4082[5]._fU0._fU104 = 0.00000000;
    l_U4082[5]._fU0._fU108 = 256;
    l_U4082[5]._fU0._fU120 = 0.00000000;
    l_U4082[5]._fU0._fU124 = 0.00000000;
    l_U4082[5]._fU0._fU112 = 0;
    l_U4082[5]._fU0._fU116 = 0;
    l_U4082[5]._fU0._fU144 = "Mangrove_Flavour_Boat_6";
    l_U4082[5]._fU0._fU84 = "M5A_CS_052_AVG";
    l_U4082[5]._fU152 = 18500.00000000;
    l_U4082[5]._fU156 = 0;
    l_U4082[5]._fU160 = 0;
    l_U4082[5]._fU164 = 0;
    l_U4082[5]._fU172 = 1;
    l_U4082[5]._fU176 = 1;
    l_U4082[5]._fU180[0]._fU56 = "M5A_CS_081_MUS";
    l_U4082[5]._fU180[0]._fU60 = 1194438308;
    l_U4082[5]._fU180[0]._fU64 = 46;
    l_U4082[5]._fU168 = 0;
    l_U4082[5]._fU512 = l_U1660;
    return;
}

void sub_13560()
{
    sub_3524( "AT", "P_SETUP_UNDERPIER_BOAT_ARRAYS start", 0 );
    l_U4930[0]._fU88 = {318.32000000, -2817.35000000, 0.00000000};
    l_U4930[0]._fU100 = 160.00000000;
    l_U4930[0]._fU104 = l_U4927 - 9850;
    l_U4930[0]._fU108 = 201;
    l_U4930[0]._fU120 = 0.00000000;
    l_U4930[0]._fU124 = 0.00000000;
    l_U4930[0]._fU112 = 0;
    l_U4930[0]._fU116 = 0;
    l_U4930[0]._fU144 = "ePB_SideA";
    l_U4930[0]._fU148 = 20;
    l_U4930[1]._fU88 = {329.72000000, -2799.22000000, 0.00000000};
    l_U4930[1]._fU100 = 160.00000000;
    l_U4930[1]._fU104 = l_U4927 - 4350;
    l_U4930[1]._fU108 = 203;
    l_U4930[1]._fU120 = 0.00000000;
    l_U4930[1]._fU124 = 0.00000000;
    l_U4930[1]._fU112 = 0;
    l_U4930[1]._fU116 = 0;
    l_U4930[1]._fU144 = "ePB_SideB";
    l_U4930[1]._fU148 = 21;
    l_U4930[2]._fU88 = {329.72000000, -2799.22000000, 0.00000000};
    l_U4930[2]._fU100 = 160.00000000;
    l_U4930[2]._fU104 = 1000.00000000;
    l_U4930[2]._fU108 = 305;
    l_U4930[2]._fU120 = 0.00000000;
    l_U4930[2]._fU124 = 0.00000000;
    l_U4930[2]._fU112 = 0;
    l_U4930[2]._fU116 = 0;
    l_U4930[2]._fU144 = "ePB_SideC";
    l_U4930[2]._fU148 = 22;
    l_U5045[0]._fU88 = {309.00000000, -2881.00000000, 0.00000000};
    l_U5045[0]._fU100 = 125.00000000;
    l_U5045[0]._fU104 = 9800.00000000;
    l_U5045[0]._fU108 = 168;
    l_U5045[0]._fU120 = 0.00000000;
    l_U5045[0]._fU124 = 0.00000000;
    l_U5045[0]._fU112 = 0;
    l_U5045[0]._fU116 = 0;
    l_U5045[0]._fU144 = "ePLB_Escort";
    l_U5045[0]._fU148 = 2;
    l_U5045[1]._fU88 = {216.06000000, -2952.21000000, -0.37000000};
    l_U5045[1]._fU100 = 100.00000000;
    l_U5045[1]._fU104 = 9500.00000000;
    l_U5045[1]._fU108 = 206;
    l_U5045[1]._fU120 = 0.00000000;
    l_U5045[1]._fU124 = 0.00000000;
    l_U5045[1]._fU112 = 0;
    l_U5045[1]._fU116 = 0;
    l_U5045[1]._fU144 = "ePLB_Serrano";
    l_U5045[1]._fU148 = 1;
    l_U5703[0]._fU88 = {l_U5814};
    l_U5703[0]._fU100 = l_U5817;
    l_U5703[0]._fU104 = l_U5818;
    l_U5703[0]._fU108 = l_U5813;
    l_U5703[0]._fU120 = 0.00000000;
    l_U5703[0]._fU124 = 0.00000000;
    l_U5703[0]._fU112 = 0;
    l_U5703[0]._fU116 = 0;
    l_U5703[0]._fU144 = "eMPM_Serrano";
    l_U5703[0]._fU148 = 1;
    l_U5123[0]._fU60 = -1074756423;
    l_U5123[0]._fU64 = 2;
    l_U5123[0]._fU68 = "RSG_UP_Gunners[0]";
    l_U5123[1]._fU60 = 1194438308;
    l_U5123[1]._fU64 = 1;
    l_U5123[1]._fU68 = "RSG_UP_Gunners[1]";
    l_U5123[2]._fU60 = 1194438308;
    l_U5123[2]._fU64 = 2;
    l_U5123[2]._fU68 = "RSG_UP_Gunners[2]";
    l_U5123[3]._fU60 = -1074756423;
    l_U5123[3]._fU64 = 1;
    l_U5123[3]._fU68 = "RSG_UP_Gunners[3]";
    l_U5123[4]._fU60 = -168327769;
    l_U5123[4]._fU64 = 1;
    l_U5123[4]._fU68 = "RSG_UP_Gunners[4]";
    l_U5123[5]._fU60 = 1194438308;
    l_U5123[5]._fU64 = 30;
    l_U5123[5]._fU68 = "RSG_UP_Gunners[5]";
    l_U5123[6]._fU60 = 68019059;
    l_U5123[6]._fU64 = 28;
    l_U5123[6]._fU68 = "RSG_UP_Gunners[6]";
    l_U5123[7]._fU60 = -168327769;
    l_U5123[7]._fU64 = 29;
    l_U5123[7]._fU68 = "RSG_UP_Gunners[7]";
    l_U5123[8]._fU60 = 1194438308;
    l_U5123[8]._fU64 = 31;
    l_U5123[8]._fU68 = "RSG_UP_Gunners[8]";
    l_U5123[9]._fU60 = 1194438308;
    l_U5123[9]._fU64 = 31;
    l_U5123[9]._fU68 = "RSG_UP_Gunners[9]";
    l_U5123[10]._fU60 = 1194438308;
    l_U5123[10]._fU64 = 28;
    l_U5123[10]._fU68 = "RSG_UP_Gunners[10]";
    l_U5822[0]._fU60 = 68019059;
    l_U5822[0]._fU64 = 38;
    l_U5822[0]._fU68 = "RSG_Serrano_Gunners[0]";
    l_U5822[1]._fU60 = 1194438308;
    l_U5822[1]._fU64 = 37;
    l_U5822[1]._fU68 = "RSG_Serrano_Gunners[1]";
    l_U5822[2]._fU60 = -1074756423;
    l_U5822[2]._fU64 = 40;
    l_U5822[2]._fU68 = "RSG_Serrano_Gunners[2]";
    l_U5822[3]._fU60 = -1074756423;
    l_U5822[3]._fU64 = 39;
    l_U5822[3]._fU68 = "RSG_Serrano_Gunners[3]";
    l_U5822[4]._fU60 = 1194438308;
    l_U5822[4]._fU64 = 41;
    l_U5822[4]._fU68 = "RSG_Serrano_Gunners[4]";
    l_U5822[5]._fU60 = 1194438308;
    l_U5822[5]._fU64 = 42;
    l_U5822[5]._fU68 = "RSG_Serrano_Gunners[5]";
    l_U5822[6]._fU60 = 1194438308;
    l_U5822[6]._fU64 = 43;
    l_U5822[6]._fU68 = "RSG_Serrano_Gunners[6]";
    sub_3524( "AT", "P_SETUP_UNDERPIER_BOAT_ARRAYS end", 0 );
    return;
}

void sub_16137()
{
    sub_3524( "GA", "P_SETUP_STATIC_DATA start", 0 );
    sub_16220( ref l_U854, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U880, 26, 6, 0, 0, 0 );
    sub_16313();
    sub_19065();
    sub_20020();
    sub_21335();
    sub_3524( "GA", "P_SETUP_STATIC_DATA end", 0 );
    return;
}

void sub_16220(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_16313()
{
    l_U1252[0] = {-0.20000000, 0.06000000, 1.05000000};
    l_U1252[1] = {-0.46200000, -1.36300000, 0.96000000};
    l_U1252[2] = {0.57900000, -1.12600000, 1.07000000};
    l_U1252[3] = {-0.37300000, 0.06000000, 1.09100000};
    l_U1252[4] = {-0.57300000, -0.97100000, 1.05000000};
    l_U1252[5] = {0.63000000, -1.31000000, 1.05000000};
    l_U1252[6] = {-1.20000000, 0.30000000, 3.95000000};
    l_U1252[7] = {0.70000000, 0.50000000, 3.95000000};
    l_U1252[8] = {-0.50000000, -3.00000000, 1.80000000};
    l_U1252[9] = {-0.50000000, -1.30000000, 1.80000000};
    l_U1252[10] = {-1.70000000, -2.00000000, 1.80000000};
    l_U1252[11] = {-0.90000000, -5.00000000, 1.80000000};
    l_U1252[12] = {-1.00000000, -4.00000000, 1.80000000};
    l_U1252[13] = {-1.00000000, -4.00000000, 1.80000000};
    l_U1252[14] = {1.70000000, -2.00000000, 1.80000000};
    l_U1252[15] = {0.00000000, -4.50000000, 1.80000000};
    l_U1252[16] = {0.50000000, -3.00000000, 1.80000000};
    l_U1252[17] = {1.00000000, -4.00000000, 1.80000000};
    l_U1252[18] = {1.50000000, -5.20000000, 1.80000000};
    l_U1252[19] = {0.90000000, -5.00000000, 1.80000000};
    l_U1252[33] = {-0.50000000, -0.75000000, 1.07000000};
    l_U1252[34] = {0.20000000, -1.90000000, 1.07000000};
    l_U1252[35] = {-0.20000000, -1.10000000, 1.07000000};
    l_U1252[36] = {0.50000000, -1.60000000, 1.07000000};
    l_U1252[20] = {-0.50000000, -2.00000000, 1.70000000};
    l_U1252[21] = {0.50000000, -2.00000000, 1.70000000};
    l_U1252[22] = {-1.50000000, -3.00000000, 2.10000000};
    l_U1252[23] = {1.50000000, -4.00000000, 2.10000000};
    l_U1252[24] = {-1.50000000, -2.00000000, 2.10000000};
    l_U1252[25] = {1.50000000, -2.00000000, 2.10000000};
    l_U1252[26] = {-0.50000000, 1.60000000, 1.50000000};
    l_U1252[27] = {0.00000000, -3.50000000, 1.67000000};
    l_U1252[31] = {1.50000000, -3.70000000, 1.95000000};
    l_U1252[30] = {-1.50000000, -3.30000000, 1.95000000};
    l_U1252[28] = {-1.30000000, -2.10000000, 1.95000000};
    l_U1252[29] = {1.00000000, -0.50000000, 1.70000000};
    l_U1252[32] = {0.00000000, 0.00000000, 1.70000000};
    l_U1252[37] = {-1.34000000, -0.60000000, 1.80000000};
    l_U1252[39] = {0.80000000, -4.20000000, 1.65400000};
    l_U1252[41] = {-0.50000000, -4.25000000, 1.65400000};
    l_U1252[40] = {-1.50000000, -3.55000000, 1.90000000};
    l_U1252[38] = {0.20000000, -0.60000000, 1.66000000};
    l_U1252[42] = {-1.50000000, -2.30000000, 1.90000000};
    l_U1252[43] = {0.80000000, -3.20000000, 1.65400000};
    l_U1252[44] = {1.10000000, -2.20000000, 1.36000000};
    l_U1252[45] = {0.60000000, -0.55000000, 1.00000000};
    l_U1252[46] = {0.50000000, -2.00000000, 1.10000000};
    l_U1252[47] = {-0.60000000, -1.80000000, 1.10000000};
    l_U1455[0] = 135.00000000;
    l_U1455[1] = 0.00000000;
    l_U1455[2] = 90.00000000;
    l_U1455[3] = 270.00000000;
    l_U1455[4] = 180.00000000;
    l_U1455[5] = -90.00000000;
    l_U1455[6] = -90.00000000;
    l_U1463[0] = 175.00000000;
    l_U1463[1] = -1.87346600;
    l_U1463[2] = 75.00000000;
    l_U1463[3] = -90.00000000;
    l_U1463[4] = 0.00000000;
    l_U1463[5] = 21.48000000;
    l_U1463[6] = 24.00000000;
    l_U1471[0] = -5.00000000;
    l_U1471[1] = 8.82083400;
    l_U1471[2] = 0.00000000;
    l_U1471[3] = -6.00000000;
    l_U1471[4] = 0.00000000;
    l_U1471[5] = 8.00000000;
    l_U1471[6] = -10.77542000;
    l_U1421[0] = "/Global/s_marina_drv/MAXBOAT/MAXBOAT_IDLE/STANCE_BACK_LEFT";
    l_U1421[1] = "/Global/s_marina_drv/MAXBOAT/MAXBOAT_IDLE/STANCE_BACK_RIGHT";
    l_U1421[2] = "/Global/s_marina_drv/MAXBOAT/MAXBOAT_IDLE/STANCE_FRONT";
    l_U1421[3] = "/Global/s_marina_drv/MAXBOAT/MAXBOAT_IDLE/STANCE_BACK";
    l_U1421[4] = "/Global/s_marina_drv/MAXBOAT/MAXBOAT_IDLE/STANCE_LEFT";
    l_U1421[5] = "/Global/s_marina_drv/MAXBOAT/MAXBOAT_IDLE/STANCE_RIGHT";
    l_U1421[6] = "/Global/s_marina_drv/MAXBOAT/MAXBOAT_IDLE/STANCE_BACK_RIGHT_TO_LEFT";
    l_U1421[7] = "/Global/s_marina_drv/MAXBOAT/MAXBOAT_IDLE/STANCE_MPM/COMBAT/STANCE_MPM_COMBAT";
    l_U1430[0][0] = "RIFLE_AIM_CAMERA_BOAT_BACK_LEFT";
    l_U1430[0][1] = "RIFLE_AIM_CAMERA_BOAT_BACK_LEFT";
    l_U1430[1][0] = "RIFLE_AIM_CAMERA_BOAT_BACK_RIGHT";
    l_U1430[1][1] = "RIFLE_AIM_CAMERA_BOAT_BACK_RIGHT";
    l_U1430[2][0] = "RIFLE_AIM_CAMERA_BOAT_FRONT";
    l_U1430[2][1] = "RIFLE_AIM_CAMERA_BOAT_FRONT";
    l_U1430[3][0] = "RIFLE_AIM_CAMERA_BOAT";
    l_U1430[3][1] = "RIFLE_AIM_CAMERA_BOAT";
    l_U1430[4][0] = "RIFLE_AIM_CAMERA_BOAT_LEFT";
    l_U1430[4][1] = "RIFLE_AIM_CAMERA_BOAT_LEFT";
    l_U1430[5][0] = "RIFLE_AIM_CAMERA_BOAT_RIGHT";
    l_U1430[5][1] = "RIFLE_AIM_CAMERA_BOAT_RIGHT";
    l_U1430[6][0] = "RIFLE_AIM_CAMERA_BOAT_BACK_RIGHT";
    l_U1430[6][1] = "RIFLE_AIM_CAMERA_BOAT_BACK_RIGHT";
    l_U1430[7][0] = "RIFLE_AIM_CAMERA_BOAT_MPM";
    l_U1430[7][1] = "";
    return;
}

void sub_19065()
{
    int J;
    int I;

    sub_3524( "AT", "P_SETUP_MANGROVE_STATIC_DATA start", 0 );
    for ( J = 0; J < 19; J++ )
    {
        for ( I = 0; I < l_U4011[J]; I++ )
        {
            sub_16220( ref l_U2433[J][I]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
        }
    }
    for ( J = 0; J < 19; J++ )
    {
        sub_16220( ref l_U1690[J]._fU4, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    }
    for ( J = 0; J < 6; J++ )
    {
        sub_16220( ref l_U4082[J]._fU0._fU4, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
        for ( I = 0; I < l_U4082[J]._fU176; I++ )
        {
            sub_16220( ref l_U4082[J]._fU180[I]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
        }
    }
    l_U4049[0] = "M5A_CS_107_Avg";
    l_U4049[1] = "M5A_CS_109_Avg";
    l_U4049[2] = "M5A_CS_111_Avg";
    l_U4049[3] = "M5A_CS_113_Mus";
    l_U4049[4] = "M5A_CS_115_Mus";
    l_U4049[5] = "M5A_CS_117_Avg";
    l_U4056[0] = "M5A_CS_108_Mus";
    l_U4056[1] = "M5A_CS_110_Mus";
    l_U4056[2] = "M5A_CS_112_Avg";
    l_U4056[3] = "M5A_CS_114_Avg";
    l_U4056[4] = "M5A_CS_116_Avg";
    l_U4056[5] = "M5A_CS_118_Mus";
    l_U4056[6] = "M5A_CS_108_Mus";
    l_U4056[7] = "M5A_CS_110_Mus";
    l_U4056[8] = "M5A_CS_112_Avg";
    l_U4056[9] = "M5A_CS_114_Avg";
    l_U4056[10] = "M5A_CS_116_Avg";
    l_U4056[11] = "M5A_CS_121_Mus";
    l_U4056[12] = "M5A_CS_108_Mus";
    l_U4056[13] = "M5A_CS_110_Mus";
    sub_3524( "AT", "P_SETUP_MANGROVE_STATIC_DATA end", 0 );
    return;
}

void sub_20020()
{
    sub_3524( "AT", "P_SETUP_UNDERPIER_STATIC_DATA start", 0 );
    sub_16220( ref l_U4930[0]._fU4, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U4930[0]._fU84 = "M5A_CS_130_Avg";
    sub_16220( ref l_U4930[1]._fU4, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U4930[1]._fU84 = "M5A_CS_133_Mus";
    sub_16220( ref l_U4930[2]._fU4, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U4930[2]._fU84 = "M5A_CS_033_Mus";
    sub_16220( ref l_U5123[0]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5123[0]._fU56 = "M5A_CS_127_Avg";
    sub_16220( ref l_U5123[1]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5123[1]._fU56 = "M5A_CS_128_Mus";
    sub_16220( ref l_U5123[2]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5123[2]._fU56 = "M5A_CS_135_Avg";
    sub_16220( ref l_U5123[3]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5123[3]._fU56 = "M5A_CS_132_Avg";
    sub_16220( ref l_U5123[4]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5123[4]._fU56 = "M5A_CS_135_Avg";
    sub_16220( ref l_U5045[1]._fU4, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U881, 7, 3, 2, 0, 0 );
    sub_16220( ref l_U5045[0]._fU4, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5045[0]._fU84 = "M5A_CS_126_Avg";
    sub_16220( ref l_U5123[5]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5123[5]._fU56 = "M5A_CS_131_Avg";
    sub_16220( ref l_U5123[6]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5123[6]._fU56 = "M5A_CS_123_Mus";
    sub_16220( ref l_U5123[7]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5123[7]._fU56 = "M5A_CS_124_Avg";
    sub_16220( ref l_U5123[8]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5123[8]._fU56 = "M5A_CS_125_Mus";
    sub_16220( ref l_U5123[9]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5123[9]._fU56 = "M5A_CS_031_Mus";
    sub_16220( ref l_U5123[10]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5123[10]._fU56 = "M5A_CS_032_Avg";
    sub_3524( "AT", "P_SETUP_UNDERPIER_STATIC_DATA end", 0 );
    return;
}

void sub_21335()
{
    sub_3524( "AT", "P_SETUP_PIERJUMPMPM_STATIC_DATA start", 0 );
    sub_16220( ref l_U5703[0]._fU4, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U881, 4, 1, 1, 0, 0 );
    sub_21476( ref l_U6111, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 516057477, 26, 6, 0, 0, 0 );
    sub_16220( ref l_U5822[0]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5822[0]._fU56 = "M5A_CS_136_Avg";
    sub_16220( ref l_U5822[1]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5822[1]._fU56 = "M5A_CS_137_Mus";
    sub_16220( ref l_U5822[2]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5822[2]._fU56 = "M5A_CS_138_Avg";
    sub_16220( ref l_U5822[3]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5822[3]._fU56 = "M5A_CS_139_Mus";
    sub_16220( ref l_U5822[4]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5822[4]._fU56 = "M5A_CS_140_Avg";
    sub_16220( ref l_U5822[5]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5822[5]._fU56 = "M5A_CS_141_Avg";
    sub_16220( ref l_U5822[6]._fU0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, g_U883, 7, 3, 2, 0, 0 );
    l_U5822[6]._fU56 = "M5A_CS_142_Mus";
    sub_3524( "AT", "P_SETUP_PIERJUMPMPM_STATIC_DATA end", 0 );
    return;
}

void sub_21476(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_22224()
{
    sub_3524( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    if (g_U653 == 5)
    {
        l_U852 = 4;
    }
    else if (g_U653 == 6)
    {
        l_U852 = 5;
    }
    else if (g_U653 == 7)
    {
        l_U852 = 6;
    };;;
    l_U6182._fU4 = 0;
    l_U850 = 0;
    l_U1480 = 0;
    l_U1196 = 5;
    sub_22377( ref l_U926, 2000, 1, 0 );
    sub_22377( ref l_U917, 2000, 1, 0 );
    sub_22377( ref l_U944, 2000, 1, 0 );
    sub_22377( ref l_U935, 2000, 1, 0 );
    l_U990 = 0;
    l_U992 = 0;
    if (g_U652 >= 5)
    {
        g_U973 = g_U972;
    }
    l_U999 = 0;
    l_U1003 = l_U1002;
    l_U1006 = 0;
    sub_22377( ref l_U1128, l_U1127, 1, 0 );
    sub_22377( ref l_U1178, l_U1194, 1, 0 );
    sub_22377( ref l_U1168, l_U1195, 1, 0 );
    sub_22377( ref l_U1137, l_U1146, 1, 0 );
    sub_22377( ref l_U1158, l_U1194 - l_U1167, 1, 0 );
    sub_22697( ref l_U953 );
    sub_22727();
    sub_22970();
    sub_23250();
    sub_3524( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_22377(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_22697(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

void sub_22727()
{
    int I;

    sub_3524( "AT", "P_INITIALIZE_MANGROVE_DATA start", 0 );
    l_U1495 = 0;
    for ( I = 0; I < 19; I++ )
    {
        l_U1690[I]._fU112 = 0;
        l_U1690[I]._fU116 = 0;
    }
    sub_22377( ref l_U4040, 2000, 1, 0 );
    l_U4036 = 0;
    l_U4037 = 0;
    l_U4072 = 0;
    l_U1683 = -1;
    l_U4910 = 0;
    l_U4908 = 0;
    l_U4907 = 0;
    l_U1666 = 1;
    l_U4921 = 0;
    l_U4923 = 0;
    sub_3524( "AT", "P_INITIALIZE_MANGROVE_DATA end", 0 );
    return;
}

void sub_22970()
{
    int I;

    sub_3524( "AT", "P_INITIALIZE_UNDERPIER_DATA start", 0 );
    l_U1496 = 0;
    l_U5587 = 0;
    l_U5588 = 0;
    for ( I = 0; I < 3; I++ )
    {
        l_U4930[I]._fU112 = 0;
        l_U4930[I]._fU116 = 0;
    }
    for ( I = 0; I < 2; I++ )
    {
        l_U5045[I]._fU112 = 0;
        l_U5045[I]._fU116 = 0;
    }
    l_U5586 = 0;
    l_U5122 = 0;
    l_U5576 = 0;
    l_U5616 = 0;
    l_U5619 = 0;
    l_U5613 = 0;
    l_U5615 = 0;
    sub_3524( "AT", "P_INITIALIZE_UNDERPIER_DATA end", 0 );
    return;
}

void sub_23250()
{
    sub_3524( "AT", "P_INITIALIZE_PIERJUMPMPM_DATA start", 0 );
    l_U5702 = 0;
    l_U6125 = 0;
    l_U6126 = 0;
    l_U6127 = 0;
    l_U6168 = 0;
    l_U6169 = 0;
    l_U6170 = 0;
    l_U6171 = 0;
    l_U1497 = 0;
    l_U6172 = 0;
    sub_3524( "AT", "P_INITIALIZE_PIERJUMPMPM_DATA end", 0 );
    return;
}

void sub_23474()
{
    sub_3524( "SA", "P_RAIL_INIT_WATER_FX_SETTING_ARRAYS", 0 );
    l_U55[0] = "DRIVING BY THE DOCKS";
    l_U71[0]._fU0 = 1;
    l_U71[0]._fU4 = 0;
    l_U71[0]._fU8 = 1;
    l_U71[0]._fU12 = 0;
    l_U71[0]._fU16 = 1;
    l_U71[0]._fU20 = 0;
    l_U71[0]._fU24 = 1;
    l_U71[0]._fU28 = 0;
    l_U71[0]._fU32 = 0;
    l_U71[0]._fU36 = 1;
    l_U71[0]._fU40 = 0;
    l_U71[0]._fU44 = 0;
    l_U71[0]._fU48 = 0;
    l_U71[0]._fU52 = 0;
    l_U71[0]._fU56 = 0;
    l_U71[0]._fU60 = 1;
    l_U55[1] = "MID_09_DOCKS";
    l_U71[1]._fU0 = 1;
    l_U71[1]._fU4 = 0;
    l_U71[1]._fU8 = 1;
    l_U71[1]._fU12 = 1;
    l_U71[1]._fU16 = 1;
    l_U71[1]._fU20 = 0;
    l_U71[1]._fU24 = 1;
    l_U71[1]._fU28 = 0;
    l_U71[1]._fU32 = 0;
    l_U71[1]._fU36 = 1;
    l_U71[1]._fU40 = 1;
    l_U71[1]._fU44 = 1;
    l_U71[1]._fU48 = 0;
    l_U71[1]._fU52 = 0;
    l_U71[1]._fU56 = 0;
    l_U71[1]._fU60 = 2;
    l_U55[2] = "MOLOTOV";
    l_U71[2]._fU0 = 1;
    l_U71[2]._fU4 = 0;
    l_U71[2]._fU8 = 1;
    l_U71[2]._fU12 = 0;
    l_U71[2]._fU16 = 1;
    l_U71[2]._fU20 = 0;
    l_U71[2]._fU24 = 1;
    l_U71[2]._fU28 = 0;
    l_U71[2]._fU32 = 0;
    l_U71[2]._fU36 = 0;
    l_U71[2]._fU40 = 0;
    l_U71[2]._fU44 = 0;
    l_U71[2]._fU48 = 0;
    l_U71[2]._fU52 = 0;
    l_U71[2]._fU56 = 0;
    l_U71[2]._fU60 = 3;
    l_U55[3] = "MID_10_DOCKS";
    l_U71[3]._fU0 = 0;
    l_U71[3]._fU4 = 0;
    l_U71[3]._fU8 = 0;
    l_U71[3]._fU12 = 0;
    l_U71[3]._fU16 = 0;
    l_U71[3]._fU20 = 0;
    l_U71[3]._fU24 = 0;
    l_U71[3]._fU28 = 0;
    l_U71[3]._fU32 = 0;
    l_U71[3]._fU36 = 0;
    l_U71[3]._fU40 = 0;
    l_U71[3]._fU44 = 0;
    l_U71[3]._fU48 = 0;
    l_U71[3]._fU52 = 0;
    l_U71[3]._fU56 = 0;
    l_U71[3]._fU60 = 3;
    l_U55[4] = "VILLAGE";
    l_U71[4]._fU0 = 0;
    l_U71[4]._fU4 = 0;
    l_U71[4]._fU8 = 0;
    l_U71[4]._fU12 = 0;
    l_U71[4]._fU16 = 0;
    l_U71[4]._fU20 = 0;
    l_U71[4]._fU24 = 0;
    l_U71[4]._fU28 = 0;
    l_U71[4]._fU32 = 1;
    l_U71[4]._fU36 = 0;
    l_U71[4]._fU40 = 0;
    l_U71[4]._fU44 = 0;
    l_U71[4]._fU48 = 0;
    l_U71[4]._fU52 = 0;
    l_U71[4]._fU56 = 0;
    l_U71[4]._fU60 = 4;
    l_U55[5] = "MID_11_DOCKS";
    l_U71[5]._fU0 = 0;
    l_U71[5]._fU4 = 0;
    l_U71[5]._fU8 = 0;
    l_U71[5]._fU12 = 0;
    l_U71[5]._fU16 = 0;
    l_U71[5]._fU20 = 0;
    l_U71[5]._fU24 = 0;
    l_U71[5]._fU28 = 0;
    l_U71[5]._fU32 = 0;
    l_U71[5]._fU36 = 0;
    l_U71[5]._fU40 = 1;
    l_U71[5]._fU44 = 0;
    l_U71[5]._fU48 = 0;
    l_U71[5]._fU52 = 0;
    l_U71[5]._fU56 = 0;
    l_U71[5]._fU60 = 4;
    l_U55[6] = "TRUCK CHASE";
    l_U71[6]._fU0 = 0;
    l_U71[6]._fU4 = 0;
    l_U71[6]._fU8 = 1;
    l_U71[6]._fU12 = 0;
    l_U71[6]._fU16 = 0;
    l_U71[6]._fU20 = 0;
    l_U71[6]._fU24 = 1;
    l_U71[6]._fU28 = 0;
    l_U71[6]._fU32 = 0;
    l_U71[6]._fU36 = 1;
    l_U71[6]._fU40 = 0;
    l_U71[6]._fU44 = 0;
    l_U71[6]._fU48 = 0;
    l_U71[6]._fU52 = 0;
    l_U71[6]._fU56 = 0;
    l_U71[6]._fU60 = 5;
    l_U55[7] = "MID_12_DOCKS";
    l_U71[7]._fU0 = 1;
    l_U71[7]._fU4 = 0;
    l_U71[7]._fU8 = 1;
    l_U71[7]._fU12 = 0;
    l_U71[7]._fU16 = 0;
    l_U71[7]._fU20 = 0;
    l_U71[7]._fU24 = 1;
    l_U71[7]._fU28 = 0;
    l_U71[7]._fU32 = 0;
    l_U71[7]._fU36 = 1;
    l_U71[7]._fU40 = 1;
    l_U71[7]._fU44 = 1;
    l_U71[7]._fU48 = 0;
    l_U71[7]._fU52 = 0;
    l_U71[7]._fU56 = 0;
    l_U71[7]._fU60 = 6;
    l_U55[8] = "MANGROVE";
    l_U71[8]._fU0 = 1;
    l_U71[8]._fU4 = 0;
    l_U71[8]._fU8 = 1;
    l_U71[8]._fU12 = 0;
    l_U71[8]._fU16 = 1;
    l_U71[8]._fU20 = 0;
    l_U71[8]._fU24 = 1;
    l_U71[8]._fU28 = 0;
    l_U71[8]._fU32 = 0;
    l_U71[8]._fU36 = 1;
    l_U71[8]._fU40 = 0;
    l_U71[8]._fU44 = 0;
    l_U71[8]._fU48 = 0;
    l_U71[8]._fU52 = 0;
    l_U71[8]._fU56 = 0;
    l_U71[8]._fU60 = 7;
    l_U55[9] = "MID_12B_BLENDIN";
    l_U71[9]._fU0 = 0;
    l_U71[9]._fU4 = 0;
    l_U71[9]._fU8 = 1;
    l_U71[9]._fU12 = 0;
    l_U71[9]._fU16 = 0;
    l_U71[9]._fU20 = 0;
    l_U71[9]._fU24 = 0;
    l_U71[9]._fU28 = 0;
    l_U71[9]._fU32 = 0;
    l_U71[9]._fU36 = 1;
    l_U71[9]._fU40 = 1;
    l_U71[9]._fU44 = 0;
    l_U71[9]._fU48 = 0;
    l_U71[9]._fU52 = 0;
    l_U71[9]._fU56 = 0;
    l_U71[9]._fU60 = 7;
    l_U55[10] = "MID_12B_DOCKS";
    l_U71[10]._fU0 = 0;
    l_U71[10]._fU4 = 0;
    l_U71[10]._fU8 = 1;
    l_U71[10]._fU12 = 1;
    l_U71[10]._fU16 = 0;
    l_U71[10]._fU20 = 0;
    l_U71[10]._fU24 = 1;
    l_U71[10]._fU28 = 1;
    l_U71[10]._fU32 = 0;
    l_U71[10]._fU36 = 1;
    l_U71[10]._fU40 = 1;
    l_U71[10]._fU44 = 0;
    l_U71[10]._fU48 = 0;
    l_U71[10]._fU52 = 0;
    l_U71[10]._fU56 = 0;
    l_U71[10]._fU60 = 8;
    l_U55[11] = "UNDER THE PIER";
    l_U71[11]._fU0 = 1;
    l_U71[11]._fU4 = 0;
    l_U71[11]._fU8 = 1;
    l_U71[11]._fU12 = 0;
    l_U71[11]._fU16 = 1;
    l_U71[11]._fU20 = 0;
    l_U71[11]._fU24 = 1;
    l_U71[11]._fU28 = 0;
    l_U71[11]._fU32 = 0;
    l_U71[11]._fU36 = 1;
    l_U71[11]._fU40 = 0;
    l_U71[11]._fU44 = 0;
    l_U71[11]._fU48 = 0;
    l_U71[11]._fU52 = 0;
    l_U71[11]._fU56 = 0;
    l_U71[11]._fU60 = 9;
    l_U55[12] = "MID_13_DOCKS";
    l_U71[12]._fU0 = 0;
    l_U71[12]._fU4 = 0;
    l_U71[12]._fU8 = 0;
    l_U71[12]._fU12 = 0;
    l_U71[12]._fU16 = 0;
    l_U71[12]._fU20 = 0;
    l_U71[12]._fU24 = 0;
    l_U71[12]._fU28 = 0;
    l_U71[12]._fU32 = 0;
    l_U71[12]._fU36 = 0;
    l_U71[12]._fU40 = 1;
    l_U71[12]._fU44 = 0;
    l_U71[12]._fU48 = 0;
    l_U71[12]._fU52 = 0;
    l_U71[12]._fU56 = 0;
    l_U71[12]._fU60 = 9;
    l_U55[13] = "MPM";
    l_U71[13]._fU0 = 0;
    l_U71[13]._fU4 = 0;
    l_U71[13]._fU8 = 0;
    l_U71[13]._fU12 = 1;
    l_U71[13]._fU16 = 0;
    l_U71[13]._fU20 = 0;
    l_U71[13]._fU24 = 0;
    l_U71[13]._fU28 = 1;
    l_U71[13]._fU32 = 1;
    l_U71[13]._fU36 = 0;
    l_U71[13]._fU40 = 0;
    l_U71[13]._fU44 = 0;
    l_U71[13]._fU48 = 0;
    l_U71[13]._fU52 = 0;
    l_U71[13]._fU56 = 0;
    l_U71[13]._fU60 = 10;
    l_U55[14] = "05_04_DOCKS";
    l_U71[14]._fU0 = 0;
    l_U71[14]._fU4 = 0;
    l_U71[14]._fU8 = 0;
    l_U71[14]._fU12 = 1;
    l_U71[14]._fU16 = 0;
    l_U71[14]._fU20 = 0;
    l_U71[14]._fU24 = 0;
    l_U71[14]._fU28 = 1;
    l_U71[14]._fU32 = 1;
    l_U71[14]._fU36 = 0;
    l_U71[14]._fU40 = 0;
    l_U71[14]._fU44 = 0;
    l_U71[14]._fU48 = 0;
    l_U71[14]._fU52 = 0;
    l_U71[14]._fU56 = 0;
    l_U71[14]._fU60 = 11;
    return;
}

void sub_26755()
{
    sub_3524( "AT", "P_SETUP_ASSET_REQUEST_ARRAY start", 0 );
    l_U416[0] = g_U883;
    l_U416[1] = g_U880;
    l_U416[2] = g_U886;
    l_U416[3] = g_U892;
    l_U416[4] = g_U891;
    l_U416[5] = g_U895;
    l_U416[6] = g_U896;
    l_U416[7] = g_U962;
    l_U416[8] = g_U963;
    l_U416[9] = g_U954;
    l_U416[10] = g_U955;
    l_U416[11] = g_U956;
    l_U416[12] = g_U957;
    sub_3524( "AT", "P_SETUP_ASSET_REQUEST_ARRAY end", 0 );
    return;
}

void sub_27034()
{
    sub_3524( "GA", "P_SETUP_ASSETS_MANGROVE start", 0 );
    l_U539[0] = 1452847618;
    l_U541[0] = l_U1664;
    l_U541[1] = l_U1690[0]._fU108;
    l_U541[2] = l_U1690[1]._fU108;
    l_U541[3] = l_U1690[2]._fU108;
    l_U541[4] = l_U1690[3]._fU108;
    l_U541[5] = l_U1690[4]._fU108;
    l_U541[6] = l_U1690[5]._fU108;
    l_U541[7] = l_U1690[6]._fU108;
    l_U541[8] = l_U1690[7]._fU108;
    l_U541[9] = l_U1690[8]._fU108;
    l_U541[10] = l_U1690[9]._fU108;
    l_U541[11] = l_U1690[10]._fU108;
    l_U541[12] = l_U1690[11]._fU108;
    l_U541[13] = l_U1690[12]._fU108;
    l_U541[14] = l_U1690[13]._fU108;
    l_U541[15] = l_U1690[14]._fU108;
    l_U541[16] = l_U1690[15]._fU108;
    l_U541[17] = l_U1690[16]._fU108;
    l_U541[18] = l_U1690[17]._fU108;
    l_U541[19] = l_U1690[18]._fU108;
    l_U541[20] = l_U4071;
    l_U4888[0] = 15371.00000000;
    l_U4888[1] = 23603.00000000;
    l_U4888[2] = 35634.00000000;
    l_U4888[3] = 43966.00000000;
    l_U4888[4] = 52735.00000000;
    l_U4888[5] = 60403.00000000;
    l_U4888[6] = 72464.00000000;
    l_U4888[7] = 82691.00000000;
    l_U4888[8] = 96845.00000000;
    l_U4888[9] = 100760.00000000;
    l_U4888[10] = 106380.00000000;
    l_U4888[11] = 110985.00000000;
    l_U4888[12] = 111965.00000000;
    l_U4888[13] = 114979.00000000;
    l_U4888[14] = 117049.00000000;
    l_U4888[15] = 119773.00000000;
    l_U4888[16] = 124413.00000000;
    l_U4888[17] = 127267.00000000;
    sub_3524( "GA", "P_SETUP_ASSETS_MANGROVE end", 0 );
    return;
}

void sub_27827()
{
    sub_3524( "MF", "P_SETUP_ASSETS_PIER_MPM - START", 0 );
    l_U563[0] = g_U958;
    l_U563[1] = g_U959;
    l_U563[2] = g_U960;
    l_U563[3] = g_U961;
    l_U563[4] = g_U940;
    l_U563[5] = g_U941;
    l_U563[6] = g_U942;
    l_U563[7] = g_U943;
    l_U563[8] = g_U944;
    l_U563[9] = g_U945;
    l_U563[10] = g_U946;
    l_U563[11] = g_U947;
    l_U563[12] = g_U948;
    l_U563[13] = g_U949;
    l_U563[14] = g_U950;
    l_U563[15] = g_U951;
    l_U563[16] = g_U952;
    l_U563[17] = g_U953;
    l_U563[18] = g_U881;
    l_U563[19] = g_U882;
    l_U586[0] = l_U4929;
    l_U586[1] = l_U5045[1]._fU108;
    l_U586[2] = l_U5045[0]._fU108;
    l_U586[3] = l_U4930[0]._fU108;
    l_U586[4] = l_U4930[1]._fU108;
    l_U586[5] = l_U4930[2]._fU108;
    l_U593[0] = l_U5812;
    l_U593[1] = l_U5813;
    sub_3524( "MF", "P_SETUP_ASSETS_PIER_MPM - END", 0 );
    return;
}

void sub_28342()
{
    sub_3524( "SP", "P_REQUEST_ASSETS", 0 );
    sub_28382();
    sub_28854();
    return;
}

void sub_28382()
{
    sub_3524( "SP", "P_REQUEST_PERSISTENT_ASSETS", 0 );
    sub_28439( 427207702, 0 );
    sub_28439( 68019059, 0 );
    sub_28439( 1194438308, 0 );
    sub_28439( -168327769, 0 );
    sub_28439( -1074756423, 0 );
    sub_28568( "level_s_marina_rs", 0, 0 );
    sub_28674( "LEVEL/S_MARINA/s_marina_drv.act", 0 );
    sub_28674( "Vehicle/Vehicle_Boat.act", 0 );
    sub_28779( l_U6209, 0 );
    return;
}

void sub_28439(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_28568(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_28674(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_28779(unknown uParam0, int iParam1)
{
    LOAD_SCRIPT_AUDIO_BANK( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_28854()
{
    sub_3524( "SP", "P_REQUEST_CHECKPOINT_SPECIFIC_ASSETS", 0 );
    if (g_U652 >= 5)
    {
        sub_28930( ref l_U416 );
        if (g_U652 == 4)
        {
            sub_28930( ref l_U506 );
        }
        if (g_U652 == 5)
        {
            sub_28930( ref l_U539 );
        }
        if (g_U652 == 6)
        {
            sub_28930( ref l_U563 );
        }
        if (g_U652 == 7)
        {
            sub_28930( ref l_U563 );
        }
    }
    else
    {
        sub_28930( ref l_U416 );
    }
    if (g_U652 <= 5)
    {
        sub_29307( ref l_U541 );
        sub_28779( "SCRIPT_MISSION\S_MARINA_RAIL_SHOOTER_2", 0 );
    }
    else if (g_U652 == 6)
    {
        sub_28568( "LEVEL_S_MARINA_RS_CP_05", 0, 0 );
        sub_29307( ref l_U586 );
    }
    else if (g_U652 == 7)
    {
        sub_29307( ref l_U593 );
        sub_28568( "LEVEL_S_MARINA_RS_CP_05", 0, 0 );
        sub_28568( "level_s_marina_rs_cp_10", 0, 0 );
    };;;
    return;
}

void sub_28930(unknown uParam0)
{
    int I;

    sub_3524( "SP", "P_REQUST_MODEL_ARRAY", 0 );
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_28996( (uParam0^)[I], 0 );
    }
    return;
}

void sub_28996(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_29101( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_29101(unknown uParam0)
{
    return;
}

void sub_29307(unknown uParam0)
{
    int I;

    sub_3524( "SP", "P_LOAD_VEHICLE_RECORDING_ARRAY", 0 );
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_29383( (uParam0^)[I], 0 );
    }
    return;
}

void sub_29383(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_29681()
{
    sub_3524( "SP", "P_LOAD_ASSETS", 0 );
    sub_29718();
    sub_29940();
    return;
}

void sub_29718()
{
    sub_3524( "SP", "P_LOAD_PERSISTENT_ASSETS", 0 );
    sub_28439( 427207702, 1 );
    sub_28439( 68019059, 1 );
    sub_28439( 1194438308, 1 );
    sub_28439( -168327769, 1 );
    sub_28439( -1074756423, 1 );
    sub_28568( "level_s_marina_rs", 0, 1 );
    sub_28674( "LEVEL/S_MARINA/s_marina_drv.act", 1 );
    sub_28674( "Vehicle/Vehicle_Boat.act", 1 );
    sub_28779( l_U6209, 1 );
    return;
}

void sub_29940()
{
    sub_3524( "SP", "P_LOAD_CHECKPOINT_SPECIFIC_ASSETS", 0 );
    if (g_U652 >= 5)
    {
        sub_30013( ref l_U416 );
        if (g_U652 == 4)
        {
            sub_30013( ref l_U506 );
        }
        if (g_U652 == 5)
        {
            sub_30013( ref l_U539 );
        }
        if (g_U652 == 6)
        {
            sub_30013( ref l_U563 );
        }
        if (g_U652 == 7)
        {
            sub_30013( ref l_U563 );
        }
    }
    else
    {
        sub_30013( ref l_U416 );
    }
    if (g_U652 <= 5)
    {
        sub_30222( ref l_U541, 1 );
        sub_28779( "SCRIPT_MISSION\S_MARINA_RAIL_SHOOTER_2", 1 );
    }
    else if (g_U652 == 6)
    {
        sub_28568( "LEVEL_S_MARINA_RS_CP_05", 0, 1 );
        sub_30222( ref l_U586, 1 );
    }
    else if (g_U652 == 7)
    {
        sub_28568( "LEVEL_S_MARINA_RS_CP_05", 0, 1 );
        sub_30222( ref l_U593, 1 );
        sub_28568( "level_s_marina_rs_cp_10", 0, 1 );
    };;;
    return;
}

void sub_30013(unknown uParam0)
{
    int I;

    sub_3524( "SP", "P_LOAD_MODEL_ARRAY start", 0 );
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_28996( (uParam0^)[I], 1 );
    }
    return;
}

void sub_30222(unknown uParam0, int iParam1)
{
    int I;

    sub_3524( "AT", "P_LOAD_VEHICLE_RECORDING_ARRAY start", 0 );
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (((uParam0^)[I] < 4000) AND ((uParam0^)[I] > 0))
        {
            if (iParam1 == 1)
            {
                sub_29383( (uParam0^)[I], 1 );
            }
            else
            {
                REQUEST_VEHICLE_RECORDING( (uParam0^)[I] );
            }
        }
        else
        {
            SCRIPT_ASSERT( "INVALID RECORDING INDEX REQUESTED!", 0 );
        }
    }
    sub_3524( "AT", "P_LOAD_VEHICLE_RECORDING_ARRAY end", 0 );
    return;
}

void sub_30702()
{
    sub_3524( "SA", "P_RAIL_INIT_MUSIC_CUE_ARRAYS", 0 );
    l_U1509._fU0 = "DOCKS_RS_01";
    l_U1509._fU4 = "DOCKS_RS_1_3_4_5";
    l_U1509._fU8 = 2000;
    l_U1509._fU12 = -1;
    l_U1509._fU16 = 0;
    l_U1514._fU0 = "DOCKS_RS_01";
    l_U1514._fU4 = "DOCKS_RS_1_3_4_5";
    l_U1514._fU8 = -1;
    l_U1514._fU12 = -1;
    l_U1514._fU16 = 0;
    l_U1519._fU0 = "DOCKS_RS_01";
    l_U1519._fU4 = "DOCKS_RS_1_3_4_5";
    l_U1519._fU8 = -1;
    l_U1519._fU12 = -1;
    l_U1519._fU16 = 0;
    l_U1524._fU0 = "DOCKS_RS_01";
    l_U1524._fU4 = "DOCKS_RS_1_3_4_5";
    l_U1524._fU8 = -1;
    l_U1524._fU12 = -1;
    l_U1524._fU16 = 0;
    l_U1529._fU0 = "HOTEL_ONESHOT_08";
    l_U1529._fU16 = 1;
    l_U1534._fU0 = "DOCKS_RS_01";
    l_U1534._fU4 = "DOCKS_RS_1_2_4_5";
    l_U1534._fU8 = 5000;
    l_U1534._fU12 = 5000;
    l_U1534._fU16 = 0;
    l_U1539._fU0 = "DOCKS_RS_01";
    l_U1539._fU4 = "DOCKS_RS_1_3_4_5";
    l_U1539._fU8 = 5000;
    l_U1539._fU12 = 4000;
    l_U1539._fU16 = 0;
    l_U1544._fU0 = "DOCKS_RS_01";
    l_U1544._fU4 = "DOCKS_RS_1_3_4_5";
    l_U1544._fU8 = -1;
    l_U1544._fU12 = -1;
    l_U1544._fU16 = 0;
    l_U1549._fU0 = "DOCKS_RS_01";
    l_U1549._fU4 = "DOCKS_RS_1_3_4_5";
    l_U1549._fU8 = -1;
    l_U1549._fU12 = -1;
    l_U1549._fU16 = 0;
    l_U1554._fU0 = "DOCKS_RS_01";
    l_U1554._fU4 = "DOCKS_RS_1_3_4_5";
    l_U1554._fU8 = -1;
    l_U1554._fU12 = -1;
    l_U1554._fU16 = 0;
    l_U1559._fU0 = "DOCKS_RS_OS_1";
    l_U1559._fU16 = 1;
    l_U1564._fU0 = "DOCKS_RS_OS_1";
    l_U1564._fU4 = "DOCKS_RS_1_4_5";
    l_U1564._fU8 = -1;
    l_U1564._fU12 = 1000;
    l_U1564._fU16 = 0;
    l_U1569._fU0 = "DOCKS_RS_01";
    l_U1569._fU4 = "DOCKS_RS_1_2_3_4_5";
    l_U1569._fU8 = 1000;
    l_U1569._fU12 = -1;
    l_U1569._fU16 = 0;
    l_U1574._fU0 = "DOCKS_RS_01";
    l_U1574._fU4 = "DOCKS_RS_1_2_3_4_5";
    l_U1574._fU8 = -1;
    l_U1574._fU12 = -1;
    l_U1574._fU16 = 0;
    l_U1579._fU0 = "DOCKS_RS_01";
    l_U1579._fU4 = "DOCKS_RS_1_2_3_4_5";
    l_U1579._fU8 = -1;
    l_U1579._fU12 = -1;
    l_U1579._fU16 = 0;
    l_U1584._fU0 = "DOCKS_RS_01";
    l_U1584._fU4 = "DOCKS_RS_1_2_3_4_5";
    l_U1584._fU8 = -1;
    l_U1584._fU12 = -1;
    l_U1584._fU16 = 0;
    l_U1589._fU0 = "HOTEL_ONESHOT_08";
    l_U1589._fU16 = 1;
    l_U1594._fU0 = "DOCKS_RS_01";
    l_U1594._fU4 = "DOCKS_RS_1_4_5";
    l_U1594._fU8 = -1;
    l_U1594._fU12 = 1000;
    l_U1594._fU16 = 0;
    l_U1599._fU0 = "DOCKS_RS_01";
    l_U1599._fU4 = "DOCKS_RS_1_2_3_4_5";
    l_U1599._fU8 = 1000;
    l_U1599._fU12 = -1;
    l_U1599._fU16 = 0;
    l_U1604._fU0 = "DOCKS_RS_01";
    l_U1604._fU4 = "DOCKS_RS_1_4";
    l_U1604._fU8 = -1;
    l_U1604._fU12 = 6000;
    l_U1604._fU16 = 0;
    l_U1609._fU0 = "DOCKS_RS_01";
    l_U1609._fU4 = "DOCKS_RS_1_2_3_4";
    l_U1609._fU8 = 6000;
    l_U1609._fU12 = -1;
    l_U1609._fU16 = 0;
    l_U1614._fU0 = "DOCKS_RS_01";
    l_U1614._fU4 = "DOCKS_RS_1_2_3_4_5";
    l_U1614._fU8 = 1000;
    l_U1614._fU12 = -1;
    l_U1614._fU16 = 0;
    l_U1619._fU0 = "HOTEL_ONESHOT_08";
    l_U1619._fU16 = 1;
    l_U1624._fU0 = "HOTEL_ONESHOT_01";
    l_U1624._fU16 = 1;
    l_U1629._fU0 = "DOCKS_RS_01";
    l_U1629._fU4 = "DOCKS_RS_1_5";
    l_U1629._fU8 = -1;
    l_U1629._fU12 = 1000;
    l_U1629._fU16 = 0;
    l_U1634._fU0 = "DOCKS_RS_01";
    l_U1634._fU4 = "DOCKS_RS_1_2_3_4_5";
    l_U1634._fU8 = 1000;
    l_U1634._fU12 = -1;
    l_U1634._fU16 = 0;
    l_U1639._fU0 = "DOCKS_RS_01";
    l_U1639._fU4 = "DOCKS_RS_4";
    l_U1639._fU8 = -1;
    l_U1639._fU12 = 6000;
    l_U1639._fU16 = 0;
    l_U1644._fU12 = 8000;
    l_U1644._fU16 = 2;
    return;
}

void sub_32547(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_32567();
    return;
}

void sub_32567()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_32723(int iParam0)
{
    sub_3524( "SA", "P_LOAD_CHECKPOINT start", 0 );
    if (iParam0 == 5)
    {
        sub_32783( ref l_U740 );
    }
    else if (iParam0 == 6)
    {
        sub_32783( ref l_U776 );
    }
    else if (iParam0 == 7)
    {
        sub_32783( ref l_U812 );
    };;;
    sub_3524( "SA", "P_LOAD_CHECKPOINT end", 0 );
    return;
}

int sub_32783(unknown uParam0)
{
    sub_3524( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_32974( uParam0, sub_32908() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_32908()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_32930() );
    }
    return 0;
}

void sub_32930()
{
    return GET_PLAYER_ID();
}

void sub_32974(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_3524( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_33158( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_34235( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_34527( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_34874( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_34527( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_34874( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_34527( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_34874( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_35159( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_34874( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_35159( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_34874( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_35652( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_35813( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_32908(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_3524( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_33158(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_33190( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_33190(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_34235(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_34527(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_29101( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_34874(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_35159(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_29101( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_35652(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_35813(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_33190( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_35885( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_35885(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_37125()
{
    float fVar2;

    sub_3524( "GA", "P_RAIL_RESTORE_BOAT_HEALTH start", 0 );
    sub_37181();
    fVar2 = 0.00000000;
    if (g_U653 <= 1)
    {
        sub_3524( "GA", "Min boat health 100%", 0 );
        fVar2 = g_U972 * 1.00000000;
    }
    else if (g_U653 == 2)
    {
        sub_3524( "GA", "Min boat health 50%", 0 );
        fVar2 = g_U972 * 0.50000000;
    }
    else if (g_U653 == 3)
    {
        sub_3524( "GA", "Min boat health 20%", 0 );
        fVar2 = g_U972 * 0.20000000;
    }
    else if (g_U653 == 4)
    {
        sub_3524( "GA", "Min boat health 70%", 0 );
        fVar2 = g_U972 * 0.70000000;
    }
    else if (g_U653 == 5)
    {
        sub_3524( "GA", "Min boat health 60%", 0 );
        fVar2 = g_U972 * 0.60000000;
    }
    else if (g_U653 == 6)
    {
        sub_3524( "GA", "Min boat health 40%", 0 );
        fVar2 = g_U972 * 0.40000000;
    };;;;;;
    if (g_U974 < fVar2)
    {
        g_U974 = fVar2;
    }
    if (g_U974 > g_U972)
    {
        g_U974 = g_U972;
    }
    g_U973 = g_U974;
    for ( l_U988 = g_U972; l_U988 > fVar2; l_U988 -= l_U987 * g_U972 )
    {
        ;
    }
    if (l_U988 <= (g_U972 / 2.00000000))
    {
        l_U989 = 1;
    }
    else
    {
        l_U989 = 0;
    }
    SET_PAYNEKILLER_AMT( 0 );
    sub_3524( "GA", "P_RAIL_RESTORE_BOAT_HEALTH end", 0 );
    return;
}

void sub_37181()
{
    unknown uVar2;

    sub_3524( "SA", "P_RAIL_SET_MAX_BOAT_HEALTH", 0 );
    uVar2 = GET_GAME_DIFFICULTY();
    switch (uVar2)
    {
        case 0:
        g_U972 = 6500.00000000;
        l_U998 = 15.00000000;
        l_U997 = 5.00000000;
        break;
        case 1:
        g_U972 = 4500.00000000;
        l_U998 = 15.00000000;
        l_U997 = 5.00000000;
        break;
        case 2:
        g_U972 = 3500.00000000;
        l_U998 = 12.00000000;
        l_U997 = 5.00000000;
        break;
        case 3:
        g_U972 = 2500.00000000;
        l_U998 = 12.00000000;
        l_U997 = 5.00000000;
        break;
        case 5:
        g_U972 = 2500.00000000;
        l_U998 = 8.00000000;
        l_U997 = 5.00000000;
        break;
        case 4:
        g_U972 = 2000.00000000;
        l_U998 = 8.00000000;
        l_U997 = 3.00000000;
        break;
    }
    return;
}

void sub_38106(int iParam0)
{
    sub_3524( "SA", "P_SAVE_CHECKPOINT start", 0 );
    if (iParam0 == 5)
    {
        sub_38206( ref l_U740, 5, sub_32908(), g_U654[5], g_U766[5], g_U804[5], g_U842[5], 0 );
    }
    else if (iParam0 == 6)
    {
        sub_38206( ref l_U776, 6, sub_32908(), g_U654[6], g_U766[6], g_U804[6], g_U842[6], 0 );
    }
    else if (iParam0 == 7)
    {
        sub_38206( ref l_U812, 7, sub_32908(), g_U654[7], g_U766[7], g_U804[7], g_U842[7], 0 );
    };;;
    sub_41946();
    sub_3524( "SA", "P_SAVE_CHECKPOINT end", 0 );
    return;
}

void sub_38206(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_3524( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_3524( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_35813( iParam1 );
        sub_38465( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_38916( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_38916( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_39148( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_38916( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_39148( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_39148( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_38916( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_39148( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_39148( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_39148( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_38916( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_39148( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_39148( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_39148( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_39148( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_40706( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_3524( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_38465(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_33190( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_3524( "TEH", "Ending context", 0 );
        sub_3524( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_38916(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_39148(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_40706(int iParam0)
{
    sub_29101( "CHECKPOINT DATA" );
    sub_40745( iParam0->_fU4 );
    sub_40768( iParam0->_fU16 );
    sub_40768( iParam0->_fU20 );
    sub_40768( iParam0->_fU24 );
    sub_40811( iParam0->_fU28 );
    sub_40811( iParam0->_fU56 );
    sub_40811( iParam0->_fU60 );
    sub_40811( iParam0->_fU64 );
    sub_40811( iParam0->_fU68 );
    sub_40811( iParam0->_fU72 );
    sub_40811( iParam0->_fU76 );
    sub_40811( iParam0->_fU80 );
    sub_40811( iParam0->_fU84 );
    sub_40811( iParam0->_fU88 );
    sub_40811( iParam0->_fU92 );
    sub_40768( iParam0->_fU32 );
    sub_40811( iParam0->_fU36 );
    sub_40811( iParam0->_fU40 );
    sub_40811( iParam0->_fU44 );
    sub_40768( iParam0->_fU136 );
    sub_41016( iParam0->_fU140 );
    sub_40811( iParam0->_fU52 );
    sub_29101( "---nRightHolsterAttachmentEnabled: " );
    sub_40811( iParam0->_fU96 );
    sub_29101( "---nRightHolsterAttachmentToggled: " );
    sub_40811( iParam0->_fU100 );
    sub_29101( "---nLeftHolsterAttachmentEnabled: " );
    sub_40811( iParam0->_fU104 );
    sub_29101( "---nLeftHolsterAttachmentToggled: " );
    sub_40811( iParam0->_fU108 );
    sub_29101( "---nRifleHolsterAttachmentEnabled: " );
    sub_40811( iParam0->_fU112 );
    sub_29101( "---nRifleHolsterAttachmentToggled: " );
    sub_40811( iParam0->_fU116 );
    sub_29101( "---nRightHandAttachmentEnabled: " );
    sub_40811( iParam0->_fU120 );
    sub_29101( "---nRightHandAttachmentToggled: " );
    sub_40811( iParam0->_fU124 );
    sub_29101( "---nLeftHandAttachmentEnabled: " );
    sub_40811( iParam0->_fU128 );
    sub_29101( "---nLeftHandAttachmentToggled: " );
    sub_40811( iParam0->_fU132 );
    sub_40811( l_U1 );
    sub_40811( 144 );
    return;
}

void sub_40745(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_40768(unknown uParam0)
{
    return;
}

void sub_40811(unknown uParam0)
{
    return;
}

void sub_41016(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_41946()
{
    sub_3524( "GA", "P_RAIL_SAVE_BOAT_HEALTH start", 0 );
    g_U974 = g_U973;
    sub_3524( "GA", "P_RAIL_SAVE_BOAT_HEALTH end", 0 );
    return;
}

void sub_42101()
{
    SET_PUDDLES( -1.00000000, 0.00000000, -1.00000000, 2.00000000 );
    FREEZE_TIME_OF_DAY( 22, 0 );
    return;
}

void sub_42155()
{
    sub_3524( "GA", "P_START_GAMEPLAY start", 0 );
    ENABLE_AUDIO_MIX_LAYER( 10, 1, 1.00000000, 0 );
    ENABLE_AUDIO_MISSION_FLAG( 0, 1 );
    AUDIO_ENABLE_HEALTH_MIX( 0 );
    if (NOT (DOES_VEHICLE_EXIST( g_U977 )))
    {
        sub_42251();
    }
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        REMOVE_ALL_PED_WEAPONS( sub_32908() );
        sub_35159( sub_32908(), 427207702, 25000, 0, 1 );
    }
    ALLOW_BULLET_CAMERA_CHEAT( 0 );
    if (IS_IN_NYMINUTE_MODE())
    {
        SET_SAFE_TO_KILL_PLAYER( 0 );
    }
    if (g_U653 <= 5)
    {
        sub_45992();
        sub_48784();
        sub_48909( 0 );
        sub_49005( 0 );
    }
    else if (g_U653 == 6)
    {
        sub_49213();
    }
    else if (g_U653 == 7)
    {
        sub_62572();
    };;;
    SET_PLAYER_COMBAT_TIMER_MODE( 1 );
    SET_PED_ENABLE_HEADLOOK_CONTROLLER( sub_32908(), 0 );
    SET_DEAD_FORCE_WATER_DEPTH( 2.00000000 );
    SET_SILHOUETTE_ACTIVE( 0 );
    SET_PED_MODEL_LOD_DISTANCES( g_U883, 0.00000000, 1000.00000000 );
    sub_3524( "GA", "P_START_GAMEPLAY end", 0 );
    return;
}

void sub_42251()
{
    vector vVar2;
    vector vVar5;

    sub_3524( "GA", "P_RAIL_CREATE_PASSOS_BOAT start", 0 );
    if (l_U852 == 0)
    {
        g_U977 = sub_42343( g_U886, g_U654[1], g_U766[1], 1, 0, 0 );
    }
    else if (l_U852 == 1)
    {
        g_U977 = sub_42343( g_U886, g_U654[3], g_U766[3], 1, 0, 0 );
    }
    else if (l_U852 == 2)
    {
        g_U977 = sub_42343( g_U886, l_U871, l_U874, 1, 0, 0 );
    }
    else if (l_U852 == 3)
    {
        g_U977 = sub_42343( g_U886, l_U875, l_U878, 1, 0, 0 );
    }
    else if (l_U852 == 4)
    {
        g_U977 = sub_42343( g_U886, g_U654[5], g_U766[5], 1, 0, 0 );
    }
    else if (l_U852 == 5)
    {
        g_U977 = sub_42343( g_U886, g_U654[6], g_U766[6], 1, 0, 0 );
    }
    else if (l_U852 == 6)
    {
        g_U977 = sub_42343( g_U886, l_U883, l_U886, 1, 0, 0 );
    };;;;;;;
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        SET_VEHICLE_PROOFS( g_U977, 0, 0, 1, 1, 0 );
        SET_BOAT_WILL_SINK( g_U977, 0 );
        SET_VEHICLE_ENGINE_ON( g_U977, 1, 1 );
        SET_VEHICLE_NAME_DEBUG( g_U977, "vi_Rail_PlayerBoat" );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        if (l_U852 < 2)
        {
            vVar2 = {-0.60000000, -4.00000000, 0.80000000};
            vVar5 = {0.60000000, -4.00000000, 0.80000000};
            g_U979 = sub_43062( g_U962, (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( g_U977 ))) + vVar2, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
            g_U980 = sub_43062( g_U963, (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( g_U977 ))) + vVar5, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
            if (NOT (IS_VEHICLE_DEAD( g_U977 )))
            {
                ATTACH_OBJECT_TO_VEHICLE( g_U979, g_U977, 0, vVar2, 0.00000000, 0.00000000, 0.00000000 );
                ATTACH_OBJECT_TO_VEHICLE( g_U980, g_U977, 0, vVar5, 0.00000000, 0.00000000, 0.00000000 );
            }
            if (NOT (IS_VEHICLE_DEAD( g_U977 )))
            {
                SET_VEHICLE_EXTRA( g_U977, 1, 0 );
                SET_VEHICLE_EXTRA( g_U977, 2, 1 );
            }
            g_U978 = sub_43062( g_U895, 1.00000000, 1.00000000, 1.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
        }
        else if (NOT (IS_VEHICLE_DEAD( g_U977 )))
        {
            SET_VEHICLE_EXTRA( g_U977, 1, 1 );
            SET_VEHICLE_EXTRA( g_U977, 2, 0 );
        }
        g_U978 = sub_43062( g_U896, 1.00000000, 1.00000000, 1.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );;
        if ((DOES_OBJECT_EXIST( g_U978 )) AND (NOT (IS_VEHICLE_DEAD( g_U977 ))))
        {
            ATTACH_OBJECT_TO_VEHICLE( g_U978, g_U977, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            SET_OBJECT_COLLISION( g_U978, 1 );
            SET_OBJECT_USE_WATER_PARTICLES( g_U978, 0 );
        }
        SET_VEHICLE_EXTRA( g_U977, 3, 1 );
        SET_VEHICLE_EXTRA( g_U977, 4, 1 );
        sub_43749();
    }
    if (l_U852 == 6)
    {
        g_U976 = sub_44208( ref l_U854 );
        if (NOT (IS_PED_DEAD( g_U976 )))
        {
            ATTACH_PED_TO_VEHICLE( g_U976, g_U977, 0, l_U1252[45], 0.00000000, 360.00000000, 0, 0, 0, 1 );
        }
    }
    else
    {
        g_U976 = sub_44942( ref l_U854, g_U977, -1, 1, 0 );
    }
    if (NOT (IS_PED_DEAD( g_U976 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U976, 1 );
        SET_PED_GORE( g_U976, 0 );
        SET_PED_INVINCIBLE( g_U976, 1 );
        sub_35159( g_U976, 68019059, 25000, 0, 0 );
        SET_PED_CONSUMING_AMMO( g_U976, 0 );
    }
    if ((NOT (IS_PED_DEAD( sub_32908() ))) AND (NOT (IS_VEHICLE_DEAD( g_U977 ))))
    {
        sub_3524( "AT", "Attaching player to boat...", 0 );
        ATTACH_PED_TO_VEHICLE( sub_32908(), g_U977, 0, l_U1412, l_U1455[l_U852], 360.00000000, 1, 0, 0, 1 );
        sub_3524( "AT", "Attaching Max at heading ", 0 );
        sub_40768( l_U1455[l_U852] );
        sub_3524( "AT", "Current gamestate is: ", 0 );
        sub_40811( l_U852 );
    }
    while ((NOT (IS_PED_ATTACHED_TO_ANY_VEHICLE( sub_32908() ))) AND (NOT (IS_PED_DEAD( sub_32908() ))))
    {
        sub_3524( "GA", "Waiting for player to be attached to boat.", 0 );
        WAIT( 0 );
    }
    sub_35159( sub_32908(), 427207702, 25000, 0, 0 );
    sub_3524( "GA", "P_RAIL_CREATE_PASSOS_BOAT end", 0 );
    return;
}

void sub_42343(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_28996( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_43062(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_28996( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_43749()
{
    if (l_U852 > 0)
    {
        sub_43771();
    }
    if (l_U852 > 1)
    {
        sub_43872();
    }
    if (l_U852 > 5)
    {
        sub_43973();
    }
    else
    {
        sub_44081();
    }
    return;
}

void sub_43771()
{
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        sub_3524( "MF", "Enabling Vehicle Extra: 3", 0 );
        SET_VEHICLE_EXTRA( g_U977, 3, 0 );
    }
    return;
}

void sub_43872()
{
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        sub_3524( "MF", "Enabling Vehicle Extra: 4", 0 );
        SET_VEHICLE_EXTRA( g_U977, 4, 0 );
    }
    return;
}

void sub_43973()
{
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        sub_3524( "SA", "Enabling Vehicle Extra: 6", 0 );
        SET_VEHICLE_EXTRA( g_U977, 5, 1 );
        SET_VEHICLE_EXTRA( g_U977, 6, 0 );
    }
    return;
}

void sub_44081()
{
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        sub_3524( "SA", "Enabling Vehicle Extra: 5", 0 );
        SET_VEHICLE_EXTRA( g_U977, 5, 0 );
        SET_VEHICLE_EXTRA( g_U977, 6, 1 );
    }
    return;
}

void sub_44208(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_28996( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_44687( iParam0->_fU40 );
    sub_44767( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_44687(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_44767(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_44942(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4)
{
    if ((HAS_MODEL_LOADED( iParam0->_fU16 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_28996( iParam0->_fU16, 1 );
    }
    if (((IS_VEHICLE_DEAD( uParam1 )) == 0) AND ((DOES_VEHICLE_EXIST( uParam1 )) == 1))
    {
        iParam0->_fU40 = CREATE_PED_INSIDE_VEHICLE( uParam1, iParam0->_fU24, iParam0->_fU16, uParam2, uParam4, iParam0->_fU48 );
    }
    else
    {
        SCRIPT_ASSERT( "The vehicle your trying to create a ped inside of is not valid!!!", 0 );
    }
    if (iParam3 == 1)
    {
        while ((DOES_PED_EXIST( iParam0->_fU40 )) == 0)
        {
            WAIT( 0 );
        }
    }
    sub_44687( iParam0->_fU40 );
    sub_44767( iParam0->_fU40 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        iParam0->_fU44 = 1;
    }
    return iParam0->_fU40;
}

void sub_45992()
{
    sub_3524( "GA", "P_RAIL_START_MANGROVE_SECTION start", 0 );
    l_U852 = 4;
    sub_46058( 8 );
    if (NOT (sub_46384( ref l_U541 )))
    {
        SCRIPT_ASSERT( "Not all assets for Mangrove checkpoint loaded.", 0 );
        sub_46572( "WAITING FOR MANGROVE CHECKPOINT ASSETS TO LOAD", 100000 );
        sub_30222( ref l_U541, 1 );
        CLEAR_PRINTS();
    }
    SET_BOAT_OUT_OF_CONTROL_AND_BLOW_UP_WHEN_DRIVER_DEAD( 0 );
    if (NOT l_U1495)
    {
        sub_46647();
        sub_47622( l_U1490, "LEVEL_S_MARINA_RS_CP_08", "/LEVEL/S_MARINA/S_MAR_MID_12_BLEND.act", "/Global/S_MAR_MID_12_BLEND/SEQ_START", 1 );
        sub_47717( l_U1506, 1, 1 );
        sub_47717( l_U1507, 2, 1 );
        sub_48361( l_U1490, "pas_mid_12", g_U976 );
        sub_48361( l_U1490, "max_mid_12", sub_32908() );
        I_SEQUENCE_START( l_U1490 );
        WAIT( 0 );
    }
    sub_48463( l_U1506, 1 );
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        if (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( g_U977 )))
        {
            sub_47272( g_U977, l_U1664, l_U1660, l_U1661, 0 );
        }
    }
    sub_28930( ref l_U563 );
    sub_29307( ref l_U586 );
    sub_28568( "LEVEL_S_MARINA_RS_CP_05", 0, 0 );
    sub_28568( "LEVEL_S_MARINA_CP_05", 0, 0 );
    g_U981 = l_U1660;
    l_U1665 = 0;
    sub_3524( "GA", "P_RAIL_START_MANGROVE_SECTION end", 0 );
    return;
}

void sub_46058(unknown uParam0)
{
    SET_SMALL_BOATS_PTFX_MAX_SPEED_EVO( l_U71[uParam0]._fU0 );
    SET_MEDIUM_BOATS_PTFX_MAX_SPEED_EVO( l_U71[uParam0]._fU4 );
    SET_PAYNE_BOAT_PTFX_MAX_SPEED_EVO( l_U71[uParam0]._fU8 );
    SET_BIG_BOATS_PTFX_MAX_SPEED_EVO( l_U71[uParam0]._fU12 );
    SET_SMALL_BOATS_PROPELLOR_PTFX_MAX_SPEED_EVO( l_U71[uParam0]._fU16 );
    SET_MEDIUM_BOATS_PROPELLOR_PTFX_MAX_SPEED_EVO( l_U71[uParam0]._fU20 );
    SET_PAYNE_BOAT_PROPELLOR_PTFX_MAX_SPEED_EVO( l_U71[uParam0]._fU24 );
    SET_BIG_BOATS_PROPELLOR_PTFX_MAX_SPEED_EVO( l_U71[uParam0]._fU28 );
    SET_PAYNE_BOAT_PTFX_SKIP( l_U71[uParam0]._fU32 );
    SET_ALL_BOATS_WAKES_MAX_SPEED_EVO( l_U71[uParam0]._fU36 );
    SET_PAYNE_BOAT_PTFX_CUTSCENE_EFFECT( l_U71[uParam0]._fU40 );
    SET_SMALL_BOAT_PTFX_CUTSCENE_EFFECT( l_U71[uParam0]._fU44 );
    SET_PAYNE_BOAT_PTFX_CUTSCENE_PROPELLOR_EFFECT( l_U71[uParam0]._fU48 );
    SET_SMALL_BOAT_PTFX_CUTSCENE_PROPELLOR_EFFECT( l_U71[uParam0]._fU52 );
    SET_PED_PTFX_SPLASH_OUT_SPECIAL_EFFECT( l_U71[uParam0]._fU56 );
    SET_WAKES_SECTION( l_U71[uParam0]._fU60 );
    return;
}

void sub_46384(unknown uParam0)
{
    int Result;
    int I;

    Result = 1;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (HAS_VEHICLE_RECORDING_BEEN_LOADED( (uParam0^)[I] )))
        {
            Result = 0;
        }
    }
    return Result;
}

void sub_46572(unknown uParam0, unknown uParam1)
{
    PRINT_STRING_WITH_LITERAL_STRING( "STRING", uParam0, uParam1, 1 );
    return;
}

void sub_46647()
{
    sub_46685( l_U1412, 180.00000000, l_U1463[4], l_U1471[4], 1 );
    SET_RAIL_RELATIVE_DIR( 5, l_U1455[l_U852] );
    SET_CAMERA_OVERRIDE( l_U1430[3][0], l_U1430[3][1], 0, 1, 1 );
    sub_47272( g_U977, l_U1664, l_U1660, l_U1661, 0 );
    return;
}

void sub_46685(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, boolean bParam6)
{
    sub_3524( "GA", "P_SETUP_PLAYER_IN_BOAT start", 0 );
    switch (l_U852)
    {
        case 0:
        l_U1479 = l_U1421[0];
        break;
        case 1:
        l_U1479 = l_U1421[2];
        break;
        case 2:
        l_U1479 = l_U1421[4];
        break;
        case 3:
        l_U1479 = l_U1421[5];
        break;
        case 4:
        l_U1479 = l_U1421[3];
        break;
        case 5:
        l_U1479 = l_U1421[6];
        break;
        case 6:
        l_U1479 = l_U1421[7];
        break;
    }
    if ((NOT (IS_PED_DEAD( sub_32908() ))) AND (NOT (IS_VEHICLE_DEAD( g_U977 ))))
    {
        ATTACH_PED_TO_VEHICLE( sub_32908(), g_U977, 0, uParam0, uParam3, 360.00000000, 1, 0, 0, 1 );
    }
    while ((NOT (IS_PED_ATTACHED_TO_ANY_VEHICLE( sub_32908() ))) AND (NOT (IS_PED_DEAD( sub_32908() ))))
    {
        sub_3524( "GA", "Waiting for player to be attached to boat.", 0 );
        WAIT( 0 );
    }
    if (bParam6)
    {
        PED_ACTION_TREE_PLAY_NODE( sub_32908(), l_U1479 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam4, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( uParam5, 1065353216, 0 );
    sub_3524( "GA", "P_SETUP_PLAYER_IN_BOAT end", 0 );
    return;
}

void sub_47272(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3, boolean bParam4)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
        }
    }
    sub_29383( uParam1, 1 );
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( uParam0, uParam1 );
        SET_PLAYBACK_SPEED( uParam0, uParam2 );
        if (fParam3 > 0.00000000)
        {
            SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( uParam0, fParam3 );
        }
    }
    if (bParam4)
    {
        while ((NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 ))))
        {
            sub_29101( "Waiting for vehicle to start playing recorded path." );
            WAIT( 0 );
        }
    }
    return;
}

void sub_47622(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    if ((I_SEQUENCE_IS_LOADED( uParam0 )) == 0)
    {
        I_SEQUENCE_SETUP( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            while ((I_SEQUENCE_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_47717(unknown uParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;

    uVar5 = GET_SCRIPT_STREAM_STATE( uParam0, uParam1 );
    switch (uVar5)
    {
        case 4:
        sub_3524( "SA", "P_LOAD_AUDIO_SCRIPT_STREAM - Detected a different stream in the slot. Stopping it and loading the new stream.", 0 );
        STOP_SCRIPT_STREAM( uParam1 );
        sub_47927( uParam0, uParam1, uParam2 );
        break;
        case 3:
        sub_3524( "SA", "P_LOAD_AUDIO_SCRIPT_STREAM - Script stream is already playing. Stopping it and reloading.", 0 );
        STOP_SCRIPT_STREAM( uParam1 );
        sub_47927( uParam0, uParam1, uParam2 );
        break;
        case 0:
        sub_3524( "SA", "P_LOAD_AUDIO_SCRIPT_STREAM - Slot is free, loading new stream", 0 );
        sub_47927( uParam0, uParam1, uParam2 );
        break;
        case 1:
        case 2:
        sub_3524( "SA", "P_LOAD_AUDIO_SCRIPT_STREAM - Stream is already loading, ignoring request.", 0 );
        break;
    }
    return;
}

void sub_47927(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_48361(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( uParam2 )))
    {
        I_SEQUENCE_REGISTER_ENTITY( uParam0, uParam1, uParam2, 0 );
    }
    return;
}

void sub_48463(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    if (NOT (LOAD_SCRIPT_STREAM( uParam0, uParam1 )))
    {
        ConcatString(ref uVar4, "Audio stream ", 64);
        ConcatString(ref uVar4, uParam0, 64);
        ConcatString(ref uVar4, " is not loaded", 64);
        SCRIPT_ASSERT( ref uVar4, 0 );
        sub_47927( uParam0, uParam1, 1 );
    }
    PLAY_SCRIPT_STREAM_FRONTEND( uParam1 );
    return;
}

void sub_48784()
{
    sub_3524( "SA", "P_RAIL_PIER_PRELOAD_AUDIO - Start", 0 );
    REQUEST_SCRIPT_STREAM( l_U1508, 0 );
    sub_3524( "SA", "P_RAIL_PIER_PRELOAD_AUDIO - End", 0 );
    return;
}

void sub_48909(unknown uParam0)
{
    sub_3524( "SA", "P_RAIL_LOAD_PERSISTENT_ASSETS", 0 );
    sub_28568( "LEVEL_S_MARINA_RS_CP_09", 0, uParam0 );
    return;
}

void sub_49005(unknown uParam0)
{
    sub_3524( "SA", "P_RAIL_LOAD_NON_PERSISTENT_ASSETS", 0 );
    sub_47622( "S_MAR_VIG_27", "LEVEL_S_MARINA_RS_CP_10", "/LEVEL/S_MARINA/S_MAR_VIG_27.act", "/Global/S_MAR_VIG_27/SEQ_START", 0 );
    sub_28439( 456708483, 0 );
    return;
}

void sub_49213()
{
    sub_3524( "GA", "P_RAIL_START_UNDER_PIER_SECTION start", 0 );
    l_U852 = 5;
    sub_46058( 11 );
    if ((NOT (HAS_ANIM_DICT_LOADED( "LEVEL_S_MARINA_RS_CP_05", 0 ))) || ((NOT (sub_46384( ref l_U586 ))) || (NOT (sub_49290( ref l_U563 )))))
    {
        SCRIPT_ASSERT( "Not all assets for UNDER PIER checkpoint loaded.", 0 );
        sub_30013( ref l_U563 );
        sub_30222( ref l_U586, 1 );
        sub_28568( "LEVEL_S_MARINA_RS_CP_05", 0, 1 );
    }
    if (NOT l_U1496)
    {
        AUDIO_MUSIC_REQUEST_ONESHOT( l_U1619._fU0, 0 );
        l_U5586 = 1;
        while (NOT sub_49653())
        {
            sub_3524( "GA", "Waiting for under pier peds to spawn.", 0 );
            WAIT( 0 );
        }
        sub_47717( l_U1508, 0, 1 );
        sub_48909( 1 );
        sub_49005( 1 );
        sub_46685( l_U1415, l_U1455[5], l_U1463[5], l_U1471[5], 1 );
        sub_47272( g_U977, l_U4929, l_U4926, l_U4927 - 300, 0 );
        WAIT( 0 );
        sub_57017();
        while (NOT (AUDIO_MUSIC_IS_ONESHOT_PREPARED( l_U1619._fU0 )))
        {
            sub_3524( "SA", "Waiting for one-shot cue_6_3 to load.", 0 );
            WAIT( 0 );
        }
        WAIT( 10 );
    }
    if (NOT sub_59229())
    {
        DO_SCREEN_FADE_IN( 0 );
    }
    SET_BOAT_OUT_OF_CONTROL_AND_BLOW_UP_WHEN_DRIVER_DEAD( 1 );
    sub_59466();
    sub_61037();
    l_U6168 = 1;
    sub_62138( "level_s_marina_rs_cp_10", 0 );
    sub_62138( "LEVEL_S_MARINA_RS_CP_05", 0 );
    sub_30222( ref l_U593, 0 );
    g_U981 = l_U4926;
    sub_62241( l_U1614 );
    sub_62241( l_U1619 );
    sub_58933( ref l_U5589, l_U5598 );
    sub_3524( "GA", "P_RAIL_START_UNDER_PIER_SECTION end", 0 );
    return;
}

void sub_49290(unknown uParam0)
{
    int Result;
    int I;

    Result = 1;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (IS_MODEL_IN_CDIMAGE( (uParam0^)[I] ))
        {
            if (NOT (HAS_MODEL_LOADED( (uParam0^)[I] )))
            {
                Result = 0;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if a model has loaded that is not in the img", 0 );
        }
    }
    return Result;
}

int sub_49653()
{
    int I;

    switch (l_U5586)
    {
        case 1:
        sub_3524( "GA", "Initializing spawning Under Pier boats and enemies.", 0 );
        l_U5122 = 0;
        l_U5576 = 0;
        l_U5586 = 2;
        break;
        case 2:
        if (l_U5122 < 5)
        {
            if (l_U5122 == 0)
            {
                sub_3524( "GA", "Starting to create under pier peds.", 0 );
                sub_49872( ref l_U4930[0], 0.00000000, 0.50000000, 0 );
            }
            else if (l_U5122 == 1)
            {
                sub_49872( ref l_U4930[1], 0.00000000, 0.50000000, 0 );
            }
            else if (l_U5122 == 2)
            {
                sub_49872( ref l_U4930[2], 0.00000000, 0.50000000, 0 );
            }
            else if (l_U5122 == 3)
            {
                sub_53301( ref l_U5045[0], 0.00000000, 1, 1056964608 );
            }
            else if (l_U5122 == 4)
            {
                sub_53301( ref l_U5045[1], 0.00000000, 1, 1056964608 );
            };;;;;
            l_U5122++;
        }
        else if (l_U5576 <= 1)
        {
            sub_53883( ref l_U4930[0], ref l_U5123[l_U5576], 1, 0, 1, 0, l_U5575, 0, 0 );
        }
        else if (l_U5576 <= 3)
        {
            sub_53883( ref l_U4930[1], ref l_U5123[l_U5576], 1, 0, 1, 0, l_U5575, 0, 0 );
        }
        else if (l_U5576 <= 4)
        {
            sub_53883( ref l_U4930[2], ref l_U5123[l_U5576], 1, 0, 1, 0, l_U5575, 0, 0 );
        }
        else if (l_U5576 <= 8)
        {
            sub_53883( ref l_U5045[0], ref l_U5123[l_U5576], 1, 0, 1, 0, l_U5575, 0, 0 );
        }
        else if (l_U5576 <= 10)
        {
            sub_53883( ref l_U5045[1], ref l_U5123[l_U5576], 1, 0, 1, 0, l_U5575, 0, 0 );
        };;;;;
        l_U5576++;
        if (l_U5576 >= 11)
        {
            sub_3524( "GA", "Complete spawning Under Pier peds.", 0 );
            l_U5586 = 4;
        }
        break;
    }
    if (l_U5586 == 4)
    {
        for ( I = 0; I < 2; I++ )
        {
            if (NOT (IS_VEHICLE_DEAD( l_U4930[I]._fU0 )))
            {
                SET_VEHICLE_VISIBLE( l_U4930[I]._fU0, 0 );
            }
            sub_56679( l_U4930[I]._fU56 );
        }
        for ( I = 0; I < 11; I++ )
        {
            sub_56679( l_U5123[I]._fU52 );
        }
        return 1;
        break;
    }
    return 0;
}

void sub_49872(int iParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    vector vVar6;
    float fVar9;

    sub_3524( "AT", "P_RAIL_CREATE_MINIBOAT start", 0 );
    iParam0->_fU0 = sub_42343( -838056405, iParam0->_fU88, iParam0->_fU100, 0, 0, 0 );
    iParam0->_fU56 = sub_44942( iParam0 + 4, iParam0->_fU0, -1, 0, 0 );
    if (NOT (IS_PED_DEAD( iParam0->_fU56 )))
    {
        sub_35159( iParam0->_fU56, 68019059, 25000, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( iParam0->_fU56, 1 );
        SET_PED_DIES_IN_SINKING_VEHICLE( iParam0->_fU56, 1 );
        SET_PED_DIES_IN_WATER( iParam0->_fU56, 1 );
        SET_PED_DIES_INSTANTLY_IN_WATER( iParam0->_fU56, 1 );
        SET_PED_DIES_IN_VEHICLE( iParam0->_fU56, 1 );
        SET_PERSISTENT_PED_VARIATION( iParam0->_fU56, iParam0->_fU84 );
        SET_PED_NAME_DEBUG( iParam0->_fU56, iParam0->_fU144 );
        if (bParam3)
        {
            if ((NOT (IS_VEHICLE_DEAD( g_U977 ))) AND (NOT (IS_PED_DEAD( iParam0->_fU56 ))))
            {
                vVar6 = {0.00000000, 0.00000000, 1.00000000};
                TASK_DRIVER_COMBAT( iParam0->_fU56, 0, g_U977, vVar6, -1.00000000, 1, 1500, 5000, 100 );
            }
        }
    }
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU0 )))
    {
        SET_VEHICLE_ENGINE_ON( iParam0->_fU0, 1, 1 );
        SET_VEHICLE_LIGHTS( iParam0->_fU0, 2 );
        SET_BOAT_WILL_SINK( iParam0->_fU0, 1 );
        SET_VEHICLE_HEALTH( iParam0->_fU0, 800 );
        fVar9 = (GET_RANDOM_FLOAT_IN_RANGE( 0.15000000, 0.30000000 )) * 1000.00000000;
        SET_PETROLTANK_BURN_RATE( iParam0->_fU0, fVar9 );
    }
    sub_50362( iParam0 + 60, uParam2, 0 );
    sub_47272( iParam0->_fU0, iParam0->_fU108, uParam1, iParam0->_fU104, 0 );
    iParam0->_fU112 = 1;
    iParam0->_fU128 = 0;
    iParam0->_fU132 = 0;
    iParam0->_fU136 = 0;
    sub_50604( iParam0 + 0, iParam0->_fU148 );
    sub_3524( "AT", "P_RAIL_CREATE_MINIBOAT end", 0 );
    return;
}

void sub_50362(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_50604(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_3524( "SA", "P_SETUP_VEHICLE_ART", 0 );
    array(ref uVar4._fU4, 8);
    ref uVar4;
    sub_50656( ref uVar4 );
    switch (uParam1)
    {
        case 1:
        sub_50944( ref uVar4 );
        break;
        case 2:
        sub_51041( ref uVar4 );
        break;
        case 3:
        sub_51138( ref uVar4 );
        break;
        case 4:
        sub_51280( ref uVar4 );
        break;
        case 5:
        sub_51422( ref uVar4 );
        break;
        case 6:
        sub_51564( ref uVar4 );
        break;
        case 7:
        sub_51710( ref uVar4 );
        break;
        case 8:
        sub_51778( ref uVar4 );
        break;
        case 9:
        sub_51838( ref uVar4 );
        break;
        case 10:
        sub_51898( ref uVar4 );
        break;
        case 11:
        sub_51958( ref uVar4 );
        break;
        case 12:
        sub_52089( ref uVar4 );
        break;
        case 14:
        sub_52220( ref uVar4 );
        break;
        case 15:
        sub_52282( ref uVar4 );
        break;
        case 16:
        sub_52344( ref uVar4 );
        break;
        case 17:
        sub_52406( ref uVar4 );
        break;
        case 18:
        sub_52468( ref uVar4 );
        break;
        case 19:
        sub_52530( ref uVar4 );
        break;
        case 13:
        sub_52592( ref uVar4 );
        break;
        case 20:
        sub_52658( ref uVar4 );
        break;
        case 21:
        sub_52725( ref uVar4 );
        break;
        case 22:
        sub_52792( ref uVar4 );
        break;
    }
    sub_52861( uParam0, ref uVar4 );
    return;
}

void sub_50656(int iParam0)
{
    int I;

    sub_3524( "SA", "P_INIT_VEHICLE_ART_TEMPLATE", 0 );
    iParam0->_fU0 = -1;
    for ( I = 0; I < iParam0->_fU4; I++ )
    {
        iParam0->_fU4[I] = 0;
    }
    return;
}

void sub_50944(int iParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MINIBOAT_CHASESTART_A", 0 );
    iParam0->_fU0 = 0;
    iParam0->_fU4[3] = 1;
    iParam0->_fU4[2] = 2;
    return;
}

void sub_51041(int iParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MINIBOAT_CHASESTART_A", 0 );
    iParam0->_fU0 = 1;
    iParam0->_fU4[3] = 2;
    iParam0->_fU4[2] = 1;
    return;
}

void sub_51138(int iParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MINIBOAT_CHASESTART_A", 0 );
    iParam0->_fU0 = 4;
    iParam0->_fU4[1] = 1;
    iParam0->_fU4[2] = 1;
    iParam0->_fU4[3] = 2;
    iParam0->_fU4[4] = 2;
    iParam0->_fU4[5] = 1;
    iParam0->_fU4[6] = 2;
    iParam0->_fU4[7] = 2;
    return;
}

void sub_51280(int iParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MINIBOAT_CHASESTART_B", 0 );
    iParam0->_fU0 = 5;
    iParam0->_fU4[1] = 2;
    iParam0->_fU4[2] = 2;
    iParam0->_fU4[3] = 1;
    iParam0->_fU4[4] = 2;
    iParam0->_fU4[5] = 1;
    iParam0->_fU4[6] = 2;
    iParam0->_fU4[7] = 2;
    return;
}

void sub_51422(int iParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MINIBOAT_CHASESTART_C", 0 );
    iParam0->_fU0 = 6;
    iParam0->_fU4[1] = 2;
    iParam0->_fU4[2] = 2;
    iParam0->_fU4[3] = 1;
    iParam0->_fU4[4] = 1;
    iParam0->_fU4[5] = 2;
    iParam0->_fU4[6] = 2;
    iParam0->_fU4[7] = 2;
    return;
}

void sub_51564(int iParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MINIBOAT_CHASESTART_MID09", 0 );
    iParam0->_fU0 = 2;
    iParam0->_fU4[1] = 2;
    iParam0->_fU4[2] = 2;
    iParam0->_fU4[3] = 2;
    iParam0->_fU4[4] = 1;
    iParam0->_fU4[5] = 2;
    iParam0->_fU4[6] = 1;
    iParam0->_fU4[7] = 1;
    return;
}

void sub_51710(unknown uParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MINIBOAT_MOLOTOV", 0 );
    return;
}

void sub_51778(unknown uParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_FELINO_A", 0 );
    return;
}

void sub_51838(unknown uParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_FELINO_B", 0 );
    return;
}

void sub_51898(unknown uParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_FELINO_C", 0 );
    return;
}

void sub_51958(int iParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_JASRE_A", 0 );
    iParam0->_fU4[0] = 2;
    iParam0->_fU4[1] = 2;
    iParam0->_fU4[2] = 2;
    iParam0->_fU4[3] = 1;
    iParam0->_fU4[4] = 2;
    iParam0->_fU4[5] = 2;
    iParam0->_fU4[6] = 2;
    iParam0->_fU4[7] = 2;
    return;
}

void sub_52089(int iParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_JASRE_B", 0 );
    iParam0->_fU4[0] = 2;
    iParam0->_fU4[1] = 2;
    iParam0->_fU4[2] = 2;
    iParam0->_fU4[3] = 1;
    iParam0->_fU4[4] = 2;
    iParam0->_fU4[5] = 2;
    iParam0->_fU4[6] = 2;
    iParam0->_fU4[7] = 2;
    return;
}

void sub_52220(unknown uParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MANGROVE_A", 0 );
    return;
}

void sub_52282(unknown uParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MANGROVE_B", 0 );
    return;
}

void sub_52344(unknown uParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MANGROVE_C", 0 );
    return;
}

void sub_52406(unknown uParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MANGROVE_D", 0 );
    return;
}

void sub_52468(unknown uParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MANGROVE_E", 0 );
    return;
}

void sub_52530(unknown uParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MANGROVE_F", 0 );
    return;
}

void sub_52592(unknown uParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MINIBOAT_MID12", 0 );
    return;
}

void sub_52658(unknown uParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MINIBOAT_PIER_A", 0 );
    return;
}

void sub_52725(unknown uParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MINIBOAT_PIER_B", 0 );
    return;
}

void sub_52792(unknown uParam0)
{
    sub_3524( "SA", "P_VEHICLE_ART_MINIBOAT_PIER_C", 0 );
    return;
}

void sub_52861(unknown uParam0, int iParam1)
{
    int I;

    sub_3524( "SA", "P_APPLY_VEHICLE_ART_TEMPLATE start", 0 );
    if (NOT (IS_VEHICLE_DEAD( (uParam0^) )))
    {
        if (iParam1->_fU0 > -1)
        {
            SET_VEHICLE_COLOUR_COMBINATION( (uParam0^), iParam1->_fU0 );
        }
        for ( I = 0; I < iParam1->_fU4; I++ )
        {
            switch (iParam1->_fU4[I])
            {
                case 1:
                SET_VEHICLE_EXTRA( (uParam0^), I, 0 );
                break;
                case 2:
                SET_VEHICLE_EXTRA( (uParam0^), I, 1 );
                break;
                case 0: break;
            }
        }
    }
    sub_3524( "SA", "P_APPLY_VEHICLE_ART_TEMPLATE end", 0 );
    return;
}

void sub_53301(int iParam0, unknown uParam1, boolean bParam2, unknown uParam3)
{
    sub_3524( "AT", "P_RAIL_CREATE_BOSSBOAT start", 0 );
    iParam0->_fU0 = sub_42343( g_U891, iParam0->_fU88, iParam0->_fU100, 0, 0, 0 );
    iParam0->_fU56 = sub_44942( iParam0 + 4, iParam0->_fU0, -1, 0, 0 );
    if (NOT (IS_PED_DEAD( iParam0->_fU56 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( iParam0->_fU56, 1 );
        SET_PED_CAN_BE_TARGETTED( iParam0->_fU56, 0 );
        SET_PED_AIM_LOCKONABLE( iParam0->_fU56, 0 );
        if (bParam2)
        {
            SET_PED_INVINCIBLE( iParam0->_fU56, 1 );
            SET_PED_GORE( iParam0->_fU56, 0 );
        }
        if ((ref iParam0->_fU4->_fU16) != g_U881)
        {
            SET_PERSISTENT_PED_VARIATION( iParam0->_fU56, iParam0->_fU84 );
        }
    }
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU0 )))
    {
        if (bParam2)
        {
            SET_VEHICLE_ENGINE_CAN_BE_DAMAGED( iParam0->_fU0, 0 );
            SET_VEHICLE_CAN_BE_DAMAGED( iParam0->_fU0, 0 );
            SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( iParam0->_fU0, 0 );
        }
        SET_VEHICLE_LIGHTS( iParam0->_fU0, 2 );
        SET_VEHICLE_ENGINE_ON( iParam0->_fU0, 1, 1 );
    }
    sub_50362( iParam0 + 60, uParam3, 0 );
    sub_47272( iParam0->_fU0, iParam0->_fU108, uParam1, iParam0->_fU104, 0 );
    iParam0->_fU112 = 1;
    iParam0->_fU128 = 0;
    iParam0->_fU132 = 0;
    iParam0->_fU136 = 0;
    sub_50604( iParam0 + 0, iParam0->_fU148 );
    sub_3524( "AT", "P_RAIL_CREATE_BOSSBOAT end", 0 );
    return;
}

void sub_53883(int iParam0, int iParam1, boolean bParam2, boolean bParam3, boolean bParam4, boolean bParam5, unknown uParam6, boolean bParam7, unknown uParam8)
{
    float fVar11;
    int iVar12;
    unknown uVar13;

    sub_3524( "AT", "F_RAIL_CREATE_VEHICLE_GUNNER start", 0 );
    iParam1->_fU52 = sub_44208( iParam1 + 0 );
    if ((NOT (IS_VEHICLE_DEAD( iParam0->_fU0 ))) AND (NOT (IS_PED_DEAD( iParam1->_fU52 ))))
    {
        if (bParam2)
        {
            fVar11 = 0.00000000;
        }
        else
        {
            fVar11 = 180.00000000;
        }
        iVar12 = GET_VEHICLE_MODEL( iParam0->_fU0 );
        if (iVar12 == 1751023925)
        {
            fVar11 = 180.00000000;
        }
        else if (iVar12 == 170939170)
        {
            fVar11 = 90.00000000;
        }
        else if (iVar12 == -1425703854)
        {
            fVar11 = 90.00000000;
        };;;
        if (bParam7)
        {
            fVar11 = uParam8;
        }
        if (bParam5)
        {
            ATTACH_PED_TO_VEHICLE( iParam1->_fU52, iParam0->_fU0, 0, l_U1252[iParam1->_fU64], fVar11, 360.00000000, 0, 0, 1, 1 );
        }
        else
        {
            ATTACH_PED_TO_VEHICLE( iParam1->_fU52, iParam0->_fU0, 0, l_U1252[iParam1->_fU64], fVar11, 360.00000000, 1, 0, 0, 1 );
        }
        iParam1->_fU160 = iParam0->_fU0;
        while ((NOT (IS_PED_ATTACHED_TO_ANY_VEHICLE( iParam1->_fU52 ))) AND (NOT (IS_PED_DEAD( iParam1->_fU52 ))))
        {
            sub_3524( "AT", "Waiting for gunner to be attached to boat.", 0 );
            WAIT( 0 );
        }
        SET_PERSISTENT_PED_VARIATION( iParam1->_fU52, iParam1->_fU56 );
        SET_PED_NAME_DEBUG( iParam1->_fU52, iParam1->_fU68 );
        uVar13 = sub_35159( iParam1->_fU52, iParam1->_fU60, 25000, 0, 0 );
        sub_54432( iParam1 + 52, iParam0 + 0, iParam1->_fU64 );
        if (bParam3)
        {
            sub_55467( iParam1->_fU52 );
        }
        if (bParam4)
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( iParam1->_fU52, 1 );
        }
        SET_PED_DIES_INSTANTLY_IN_WATER( iParam1->_fU52, 1 );
        OVERRIDE_PED_FIRING_PATTERN( iParam1->_fU52, -256437761 );
        SET_PED_ACCURACY( iParam1->_fU52, -1467320974 );
        SET_WEAPON_CHANCE_TO_FIRE_BLANKS( uVar13, uParam6 );
        SET_PED_FORCE_USE_RAGDOLL( iParam1->_fU52, 1, 0 );
        sub_55850( iParam1->_fU52, iParam0 + 60 );
    }
    iParam1->_fU72 = 0;
    sub_56125( iParam1 + 76 );
    sub_3524( "GA", "F_RAIL_CREATE_VEHICLE_GUNNER end", 0 );
    return;
}

void sub_54432(unknown uParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    string sVar6;
    string sVar7;
    string sVar8;
    string sVar9;
    string sVar10;
    string sVar11;

    uVar5 = GET_VEHICLE_MODEL( (uParam1^) );
    sVar6 = "/Global/s_marina_drv/CS_AIM_BACK/CS_1/COMBAT";
    sVar7 = "/Global/s_marina_drv/CS_AIM_BACK/CS_2/COMBAT";
    sVar8 = "/Global/s_marina_drv/CS_AIM_BACK/CS_3/COMBAT";
    sVar9 = "/Global/s_marina_drv/CS_AIM_FWD/CS_1/COMBAT";
    sVar10 = "/Global/s_marina_drv/CS_AIM_FWD/CS_2/COMBAT";
    sVar11 = "/Global/s_marina_drv/CS_AIM_FWD/CS_3/COMBAT";
    switch (uVar5)
    {
        case -838056405:
        switch (uParam2)
        {
            case 4:
            sub_3524( "AT", "Playing /Global/s_marina_drv/CS_AIM_BACK/CS_1/ on mini boat gunner.", 0 );
            PED_ACTION_TREE_PLAY_NODE( (uParam0^), sVar6 );
            break;
            case 1:
            sub_3524( "AT", "Playing /Global/s_marina_drv/CS_AIM_FWD/CS_2 on mini boat gunner.", 0 );
            PED_ACTION_TREE_PLAY_NODE( (uParam0^), sVar10 );
            break;
            case 5:
            sub_3524( "AT", "Playing /Global/s_marina_drv/CS_AIM_BACK/CS_2 on mini boat gunner.", 0 );
            PED_ACTION_TREE_PLAY_NODE( (uParam0^), sVar7 );
            break;
            case 2:
            sub_3524( "AT", "Playing /Global/s_marina_drv/CS_AIM_FWD/CS_3/ on mini boat gunner.", 0 );
            PED_ACTION_TREE_PLAY_NODE( (uParam0^), sVar11 );
            break;
            case 3:
            sub_3524( "AT", "Playing /Global/s_marina_drv/CS_AIM_BACK/CS_3 on mini boat gunner.", 0 );
            PED_ACTION_TREE_PLAY_NODE( (uParam0^), sVar8 );
            break;
            case 0:
            sub_3524( "AT", "Playing /Global/s_marina_drv/CS_AIM_FWD/CS_1 on mini boat gunner.", 0 );
            PED_ACTION_TREE_PLAY_NODE( (uParam0^), sVar9 );
            break;
        }
        break;
        case 1751023925: break;
        case -1425703854: break;
    }
    return;
}

void sub_55467(unknown uParam0)
{
    sub_3524( "GA", "P_RAIL_ATTACK_PLAYER_BOAT start", 0 );
    if ((NOT (IS_VEHICLE_DEAD( g_U977 ))) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        SET_PED_SEEING_RANGE( uParam0, 200.00000000, 75 );
        SET_PED_HEARING_RANGE( uParam0, 200.00000000 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 200.00000000 );
        SET_PED_EMOTION_STATE( uParam0, 1 );
        SET_PED_ALERTNESS( uParam0, 3 );
        SET_PED_COMBAT_MOVEMENT( uParam0, 0 );
        if (NOT (IS_PED_DEAD( sub_32908() )))
        {
            REGISTER_TARGET( uParam0, sub_32908() );
        }
        TASK_SHOOT_AT_VEHICLE( uParam0, g_U977, 0, l_U1223, -1, 0, 0, 0 );
    }
    sub_3524( "GA", "P_RAIL_ATTACK_PLAYER_BOAT end", 0 );
    return;
}

void sub_55850(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_29101( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_50362( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_50362( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_56125(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_56679(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_57017()
{
    sub_3524( "GA", "P_PIER_MID_12B_PREPARE_BLENDOUT start", 0 );
    SET_RAIL_RELATIVE_DIR( 5, l_U1455[5] );
    SET_CAMERA_OVERRIDE( l_U1430[6][0], l_U1430[6][1], 0, 1, 1 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U1463[5], 1.00000000, 1 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U1471[5], 1.00000000, 1 );
    if ((NOT (IS_VEHICLE_DEAD( l_U5045[0]._fU0 ))) AND (NOT (IS_PED_DEAD( l_U5045[0]._fU56 ))))
    {
        if (IS_VEHICLE_SEAT_FREE( l_U5045[0]._fU0, -1 ))
        {
            SET_PED_INTO_VEHICLE( l_U5045[0]._fU56, l_U5045[0]._fU0, -1 );
        }
    }
    sub_47272( l_U5045[0]._fU0, l_U5045[0]._fU108, l_U4926, l_U5045[0]._fU104, 0 );
    sub_47272( l_U5045[1]._fU0, l_U5045[1]._fU108, l_U4926, l_U5045[1]._fU104, 0 );
    sub_47272( l_U4930[0]._fU0, l_U4930[0]._fU108, l_U4926, l_U4930[0]._fU104, 0 );
    sub_47272( l_U4930[1]._fU0, l_U4930[1]._fU108, l_U4926, l_U4930[1]._fU104, 0 );
    sub_47272( l_U4930[2]._fU0, l_U4930[2]._fU108, l_U4926, l_U4930[2]._fU104, 0 );
    if ((NOT (IS_VEHICLE_DEAD( g_U977 ))) AND (NOT (IS_PED_DEAD( g_U976 ))))
    {
        SET_PED_INTO_VEHICLE( g_U976, g_U977, -1 );
        if (NOT (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( g_U976, 0, 0 ) )))
        {
            if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( g_U976, 1 ) ))
            {
                SELECT_WEAPON_TO_HAND( g_U976, GET_WEAPON_FROM_HOLSTER( g_U976, 1 ), 0, 1 );
            }
            else if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( g_U976, 0 ) ))
            {
                SELECT_WEAPON_TO_HAND( g_U976, GET_WEAPON_FROM_HOLSTER( g_U976, 0 ), 0, 1 );
            }
        }
    }
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        SET_PLAYBACK_SPEED( g_U977, l_U4926 );
    }
    sub_48463( l_U1508, 0 );
    sub_57764( 1, 1 );
    sub_58028();
    sub_58284();
    l_U990 = 0;
    sub_58438();
    sub_58933( ref l_U5577, 1500 );
    sub_3524( "GA", "P_PIER_MID_12B_PREPARE_BLENDOUT end", 0 );
    return;
}

void sub_57764(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        SET_PLAYER_CONTROL( sub_32930(), 1, 0 );
        SET_PED_INVINCIBLE( sub_32908(), 0 );
        if (bParam0)
        {
            sub_57845();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_57845()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_32908() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_32908(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_32908(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_32908(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_32908(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_58028()
{
    sub_3524( "GA", "P_RAIL_BOAT_DAMAGE_METER_ON start", 0 );
    TOGGLE_DISPLAY_AMMO( 0 );
    HUD_SET_PLAYER_HEALTH_TEXTURE( "mp3_hud_health_boat" );
    ENABLE_PLAYERHEALTH( 1 );
    ENABLE_BULLETTIMEMETER( 1 );
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        SET_PED_INVINCIBLE( sub_32908(), 1 );
        SET_PED_PROOFS( sub_32908(), 1, 1, 1, 1, 1 );
        SET_PED_GORE( sub_32908(), 0 );
        sub_57845();
        SET_PED_CONSUMING_AMMO( sub_32908(), 0 );
    }
    SET_GENERATE_BULLET_SHELLS( 0 );
    l_U990 = 1;
    sub_3524( "GA", "P_RAIL_BOAT_DAMAGE_METER_ON end", 0 );
    return;
}

void sub_58284()
{
    sub_3524( "GA", "P_RAIL_GUN_HEAT_ON start", 0 );
    l_U1196 = 0;
    l_U1212 = 0;
    l_U1215 = 0.00000000;
    l_U1216 = TIMERA();
    ENABLE_OVERHEAT_ICON( 1, "weap_hk_21e" );
    sub_3524( "GA", "P_RAIL_GUN_HEAT_ON end", 0 );
    return;
}

void sub_58438()
{
    int I;

    sub_3524( "MF", "P_MAKE_PIER_BOATS_ATTACK - START", 0 );
    l_U1223 = {l_U5687};
    for ( I = 0; I < 11; I++ )
    {
        sub_58533( l_U5123[I]._fU52 );
        sub_55467( l_U5123[I]._fU52 );
    }
    for ( I = 0; I < l_U4930; I++ )
    {
        sub_58533( l_U4930[I]._fU56 );
        if (NOT (IS_VEHICLE_DEAD( l_U4930[I]._fU0 )))
        {
            SET_VEHICLE_VISIBLE( l_U4930[I]._fU0, 1 );
        }
        sub_58754( ref l_U4930[I] );
    }
    sub_3524( "MF", "P_MAKE_PIER_BOATS_ATTACK - END", 0 );
    return;
}

void sub_58533(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_58754(int iParam0)
{
    vector vVar3;

    if ((NOT (IS_PED_DEAD( sub_32908() ))) AND (NOT (IS_PED_DEAD( iParam0->_fU56 ))))
    {
        vVar3 = {0.00000000, 0.00000000, 0.00000000};
        TASK_DRIVER_COMBAT( iParam0->_fU56, sub_32908(), 0, vVar3, -1.00000000, 1, 1500, 5000, 100 );
    }
    return;
}

void sub_58933(unknown uParam0, unknown uParam1)
{
    sub_22377( uParam0, uParam1, 1, 0 );
    sub_58956( uParam0 );
    return;
}

void sub_58956(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_59229()
{
    if (l_U414)
    {
        sub_3524( "CO", "F_IMAGEFX_FADE_IN: IMAGEFX START", 0 );
        START_PANEL_WIPE( 0, 6 );
        PLAY_IMAGEFX( "BULLETCAM_IMPACT", 3, 1 );
        PLAY_IMAGEFX( "BLACK_FADE_UP_FAST_01", 3, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U414 = 0;
        return 1;
        break;
    }
    sub_3524( "CO", "F_IMAGEFX_FADE_IN: NORMAL START", 0 );
    return 0;
}

void sub_59466()
{
    int I;

    sub_3524( "GA", "P_CLEANUP_MANGROVE_SECTION start", 0 );
    sub_59522();
    sub_59694( ref l_U1690, 0 );
    sub_59909( ref l_U539 );
    sub_60177( ref l_U541 );
    for ( I = 0; I < 6; I++ )
    {
        sub_60356( ref l_U4082[I] );
    }
    sub_60462();
    sub_60596( l_U4909, 0 );
    sub_60759( ref l_U4909 );
    RELEASE_NAMED_SCRIPT_AUDIO_BANK( "SCRIPT_MISSION\S_MARINA_RAIL_SHOOTER_2" );
    sub_3524( "GA", "P_CLEANUP_MANGROVE_SECTION end", 0 );
    return;
}

void sub_59522()
{
    int J;
    int I;

    for ( J = 0; J < 19; J++ )
    {
        for ( I = 0; I < l_U4011[J]; I++ )
        {
            sub_59585( l_U2433[J][I]._fU52 );
        }
    }
    return;
}

void sub_59585(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_59694(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_59728( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_59728(int iParam0, boolean bParam1)
{
    if (iParam0->_fU128 != 0)
    {
        STOP_PARTICLE_FX_LOOPED( iParam0->_fU128 );
    }
    sub_59585( iParam0->_fU56 );
    sub_59783( iParam0->_fU0 );
    if (bParam1)
    {
        sub_59851( iParam0->_fU108 );
    }
    return;
}

void sub_59783(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_59851(unknown uParam0)
{
    REMOVE_VEHICLE_RECORDING( uParam0 );
    return;
}

void sub_59909(unknown uParam0)
{
    int I;

    sub_3524( "AT", "P_UNLOAD_MODEL_ARRAY start", 0 );
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_59980( (uParam0^)[I] );
    }
    sub_3524( "AT", "P_UNLOAD_MODEL_ARRAY end", 0 );
    return;
}

void sub_59980(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_29101( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_60177(unknown uParam0)
{
    int I;

    sub_3524( "AT", "P_UNLOAD_VEHICLE_RECORDING_ARRAY start", 0 );
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_59851( (uParam0^)[I] );
    }
    sub_3524( "AT", "P_UNLOAD_VEHICLE_RECORDING_ARRAY end", 0 );
    return;
}

void sub_60356(int iParam0)
{
    int I;

    sub_59783( ref iParam0->_fU0->_fU0 );
    sub_59585( ref iParam0->_fU0->_fU56 );
    for ( I = 0; I < iParam0->_fU176; I++ )
    {
        sub_59585( iParam0->_fU180[I]._fU52 );
    }
    return;
}

void sub_60462()
{
    sub_3524( "SA", "P_RAIL_MANGROVE_STOP_AUDIO - Start", 0 );
    STOP_SCRIPT_STREAM( 1 );
    STOP_SCRIPT_STREAM( 2 );
    sub_3524( "SA", "P_RAIL_MANGROVE_STOP_AUDIO - End", 0 );
    return;
}

void sub_60596(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
        sub_3524( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
        sub_3524( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

void sub_60759(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
        sub_3524( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
        sub_3524( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

void sub_61037()
{
    sub_3524( "GA", "P_RAIL_PIER_JUMP_CREATE_SHACK start", 0 );
    l_U6153[0] = sub_61136( g_U940, -183.89000000, -3015.89200000, 4.78000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6153[1] = sub_61136( g_U941, -183.90000000, -3016.18500000, 4.78000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6153[2] = sub_61136( g_U942, -183.90000000, -3016.45300000, 4.78000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6153[3] = sub_61136( g_U943, -183.90000000, -3016.71500000, 4.78000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6153[4] = sub_61136( g_U944, -183.90000000, -3016.98600000, 4.78000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6153[5] = sub_61136( g_U945, -183.90000000, -3017.27000000, 4.78000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6153[6] = sub_61136( g_U946, -183.90000000, -3017.55500000, 4.78000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6153[7] = sub_61136( g_U947, -183.90000000, -3017.84800000, 4.78000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6153[8] = sub_61136( g_U948, -183.90000000, -3018.16900000, 4.78000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6153[9] = sub_61136( g_U949, -183.90000000, -3018.47800000, 4.78000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6153[10] = sub_61136( g_U950, -183.90000000, -3018.81000000, 4.78000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6153[11] = sub_61136( g_U951, -183.90000000, -3019.10500000, 4.78000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6153[12] = sub_61136( g_U952, -183.90000000, -3019.40900000, 4.78000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6153[13] = sub_61136( g_U953, -183.90000000, -3019.73700000, 4.78000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    sub_3524( "GA", "P_RAIL_PIER_JUMP_CREATE_SHACK end", 0 );
    return;
}

void sub_61136(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_28996( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_62138(unknown uParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        ;
    }
    REQUEST_ANIM_DICT( uParam0, iParam1 );
    "[doubled result, dropped if not asigned]";
    return;
}

void sub_62241(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    sub_3524( "SA", "P_RAIL_PLAY_MUSIC_CUE", 0 );
    switch (uParam0._fU16)
    {
        case 0:
        AUDIO_MUSIC_FORCE_TRACK( uParam0._fU0, uParam0._fU4, "", 0, uParam0._fU8, uParam0._fU12, -1082130432, 0 );
        break;
        case 1:
        if (NOT (AUDIO_MUSIC_IS_ONESHOT_PREPARED( uParam0._fU0 )))
        {
            SCRIPT_ASSERT( "!!! ONESHOT {0} HAS NOT BEEN PRELOADED !!!", 1, 1537, uParam0._fU0 );
        }
        AUDIO_MUSIC_PLAY_ONESHOT();
        break;
        case 2:
        AUDIO_MUSIC_SUSPEND( uParam0._fU12 );
        break;
    }
    return;
}

void sub_62572()
{
    sub_3524( "GA", "P_RAIL_START_PIER_JUMP_SECTION start", 0 );
    l_U852 = 6;
    if ((NOT (HAS_ANIM_DICT_LOADED( "LEVEL_S_MARINA_RS_CP_05", 0 ))) || ((NOT (HAS_ANIM_DICT_LOADED( "level_s_marina_rs_cp_10", 0 ))) || ((NOT (sub_46384( ref l_U593 ))) || (NOT (sub_49290( ref l_U563 ))))))
    {
        SCRIPT_ASSERT( "Not all assets for PIER_MPM checkpoint loaded.", 0 );
        sub_46572( "WAITING FOR PIER_MPM CHECKPOINT ASSETS TO LOAD", 100000 );
        sub_30013( ref l_U563 );
        sub_30222( ref l_U593, 1 );
        sub_28568( "level_s_marina_rs_cp_10", 0, 1 );
        sub_28568( "LEVEL_S_MARINA_RS_CP_05", 0, 1 );
        CLEAR_PRINTS();
    }
    if (NOT l_U6168)
    {
        sub_61037();
        l_U6168 = 1;
    }
    sub_62966();
    sub_63075();
    if (NOT l_U1497)
    {
        sub_63220( "S_MAR_VIG_27", 1 );
        sub_47622( "S_MAR_VIG_27", "LEVEL_S_MARINA_RS_CP_10", "/LEVEL/S_MARINA/S_MAR_VIG_27.act", "/Global/S_MAR_VIG_27/SEQ_START", 1 );
        sub_28439( 456708483, 1 );
        l_U6125 = 1;
        while (l_U6125 != 4)
        {
            sub_3524( "GA", "Spawning MPM peds.", 0 );
            sub_63477();
            WAIT( 0 );
        }
    }
    if (l_U1497)
    {
        sub_64909();
        sub_72214();
    }
    sub_72541();
    sub_65274();
    sub_73766( l_U1488, l_U1481, l_U1485 );
    SET_BOAT_OUT_OF_CONTROL_AND_BLOW_UP_WHEN_DRIVER_DEAD( 0 );
    sub_73943();
    l_U5702 = 1;
    sub_3524( "GA", "P_RAIL_START_PIER_JUMP_SECTION end", 0 );
    return;
}

void sub_62966()
{
    sub_3524( "GA", "P_RAIL_GUN_HEAT_OFF start", 0 );
    l_U1196 = 5;
    ENABLE_OVERHEAT_ICON( 0, 0 );
    sub_3524( "GA", "P_RAIL_GUN_HEAT_OFF end", 0 );
    return;
}

void sub_63075()
{
    sub_3524( "GA", "P_RAIL_BOAT_DAMAGE_METER_OFF start", 0 );
    l_U990 = 0;
    sub_3524( "GA", "P_RAIL_BOAT_DAMAGE_METER_OFF end", 0 );
    return;
}

void sub_63220(unknown uParam0, int iParam1)
{
    if ((I_SEQUENCE_IS_LOADED( uParam0 )) == 1)
    {
        I_SEQUENCE_TERMINATE( uParam0 );
    }
    if (iParam1 == 1)
    {
        while ((I_SEQUENCE_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_63477()
{
    switch (l_U6125)
    {
        case 1:
        sub_3524( "GA", "Initialising spawning of MPM peds.", 0 );
        l_U6126 = 0;
        l_U6127 = 0;
        l_U6125 = 2;
        break;
        case 2:
        if (l_U6126 < 2)
        {
            if (l_U6126 == 0)
            {
                sub_3524( "GA", "Starting spawning MPM peds.", 0 );
                l_U5703[0]._fU0 = sub_42343( g_U891, l_U5814, l_U5817, 1, 0, 0 );
                l_U5703[0]._fU56 = sub_44942( ref l_U5703[0]._fU4, l_U5703[0]._fU0, -1, 1, 0 );
                sub_50604( ref l_U5703[0]._fU0, 1 );
                if (NOT (IS_PED_DEAD( l_U5703[0]._fU56 )))
                {
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U5703[0]._fU56, 1 );
                    SET_PED_INVINCIBLE( l_U5703[0]._fU56, 1 );
                    SET_PED_GORE( l_U5703[0]._fU56, 0 );
                    SET_PED_CAN_BE_TARGETTED( l_U5703[0]._fU56, 0 );
                }
                if (NOT (IS_VEHICLE_DEAD( l_U5703[0]._fU0 )))
                {
                    SET_VEHICLE_ENGINE_ON( l_U5703[0]._fU0, 1, 1 );
                    SET_VEHICLE_LIGHTS( l_U5703[0]._fU0, 2 );
                }
            }
            else if (l_U6126 == 1)
            {
                l_U6124 = sub_44208( ref l_U6111 );
                if ((NOT (IS_VEHICLE_DEAD( l_U5703[0]._fU0 ))) AND (NOT (IS_PED_DEAD( l_U6124 ))))
                {
                    ATTACH_PED_TO_VEHICLE( l_U6124, l_U5703[0]._fU0, 0, l_U1252[44], 90.00000000, 360.00000000, 1, 0, 0, 1 );
                    sub_3524( "AT", "Registering FABIANA with S_MAR_VIG_27", 0 );
                    SET_CUFF_HANDS( l_U6124, 1 );
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U6124, 1 );
                    SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U6124, 1 );
                    SET_PED_CAN_TRIGGER_BULLET_CAM( l_U6124, 1 );
                    SET_BULLET_CAM_PREF( l_U6124, "DOCKS_JUMP_GIO_KILL", "DOCKS_JUMP_GIO_KILL", "DOCKS_JUMP_GIO_KILL", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                    SET_PED_VALIDATE_BULLET_CAM_HIT( l_U6124, 0 );
                    SET_PED_AS_ONE_SHOT_KILL( l_U6124, 1 );
                }
            }
            l_U6126++;
        }
        else
        {
            sub_53883( ref l_U5703[0], ref l_U5822[l_U6127], 1, 0, 1, 1, l_U6110, 0, 0 );
            if (NOT (IS_PED_DEAD( l_U5822[l_U6127]._fU52 )))
            {
                SET_PED_AS_ONE_SHOT_KILL( l_U5822[l_U6127]._fU52, 1 );
                SET_PED_ACCURACY( l_U5822[l_U6127]._fU52, -1467320974 );
            }
            l_U6127++;
            if (l_U6127 >= 7)
            {
                sub_3524( "GA", "Spawned all MPM peds.", 0 );
                l_U6125 = 3;
            }
        }
        break;
        case 3:
        sub_64486();
        sub_3524( "GA", "MPM ped spawning complete.", 0 );
        l_U6125 = 4;
        break;
    }
    sub_3524( "MF", "P_RAIL_PIER_JUMP_SPAWN_PEDS - END", 0 );
    return;
}

void sub_64486()
{
    unknown uVar2;
    int I;

    sub_3524( "MF", "P_RAIL_PIER_JUMP_OPEN_FIRE - START", 0 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        TASK_AIM_GUN_AT_COORD( 0, -196.63000000, -3019.10000000, 9.00000000, -1, 1 );
    }
    CLOSE_SEQUENCE_TASK( uVar2 );
    for ( I = 0; I < 7; I++ )
    {
        if ((NOT (IS_PED_DEAD( sub_32908() ))) AND (NOT (IS_PED_DEAD( l_U5822[I]._fU52 ))))
        {
            CLEAR_PED_TASKS( l_U5822[I]._fU52 );
            TASK_PERFORM_SEQUENCE( l_U5822[I]._fU52, uVar2 );
        }
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    sub_3524( "MF", "P_RAIL_PIER_JUMP_OPEN_FIRE - END", 0 );
    return;
}

void sub_64909()
{
    boolean bVar2;
    unknown uVar3;
    boolean bVar4;
    int iVar5;
    int I;

    sub_3524( "MF", "P_PIER_MID_13_DOCKS - START", 0 );
    if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( l_U1624._fU0 ))
    {
        AUDIO_MUSIC_STOP_ONESHOT();
    }
    sub_62241( l_U1629 );
    sub_46058( 12 );
    sub_65026( "MID_13_DOCKS_concat", 1 );
    sub_65274();
    CUTSCENE_ENABLE_SKIP( 0 );
    bVar2 = false;
    if (NOT (IS_PED_DEAD( g_U976 )))
    {
        sub_3524( "MF", "Registering Passos script ped with midscene MID_13_DOCKS_concat", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U976, "Pass_Dock", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U976, "/Global/s_marina_drv/PASSOS_AIM/MPM/STANCE_MPM_COMBAT" );
        SET_PED_OUT_OF_VEHICLE( g_U976 );
        uVar3 = GET_WEAPON_FROM_HAND( g_U976, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            sub_3524( "GA", "Registering Passos weapon with cutscene.", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar3, "W_PI_PT92_Aa_H", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_32908(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            sub_3524( "GA", "Registering Max's weapon with cutscene.", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar3, "W_MG_21E_Aa_H", 0 );
        }
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_32908(), "/Global/s_marina_drv/MAXBOAT/MAXBOAT_IDLE/STANCE_MPM/COMBAT/STANCE_MPM_COMBAT" );
        DETACH_PED( sub_32908(), 1 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U977, "boat_rs", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( sub_32908(), g_U977, 0, 0.85000000, -1.70000000, 1.40000000, l_U1455[3], 360.00000000, 1, 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( l_U5703[0]._fU0 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U5703[0]._fU0, "boat_chase", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U5703[0]._fU56 )))
    {
        SET_PED_OUT_OF_VEHICLE( l_U5703[0]._fU56 );
        DETACH_PED( l_U5703[0]._fU56, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5703[0]._fU56, "Sero_Unif_1", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( l_U5703[0]._fU56, l_U5703[0]._fU0, 0, l_U1252[26], 0.00000000, 360.00000000, 0, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U5703[0]._fU56, "/Global/VehicleBoat/Driver/CHASE_BOAT/DRIVER_ANIMS/DRIVER" );
    }
    if (NOT (IS_PED_DEAD( l_U6124 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U6124, "Fabi_Docks", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( l_U6124, l_U5703[0]._fU0, 0, l_U1252[44], 90.00000000, 360.00000000, 1, 0 );
        DETACH_PED( l_U6124, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U5822[0]._fU52 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5822[0]._fU52, "G_CS_RAIL_A", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U5822[0]._fU52, "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U5822[0]._fU52, 0, 0 ), "W_PI_PT92_Aa_H^6", 0 );
        DETACH_PED( l_U5822[0]._fU52, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U5822[1]._fU52 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5822[1]._fU52, "G_CS_RAIL_A^6", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U5822[1]._fU52, "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U5822[1]._fU52, 0, 0 ), "W_PI_PT92_Aa_H^3", 0 );
        DETACH_PED( l_U5822[1]._fU52, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U5822[2]._fU52 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5822[2]._fU52, "G_CS_RAIL_A^2", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U5822[2]._fU52, "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U5822[2]._fU52, 0, 0 ), "W_AR_AK47_Aa_H", 0 );
        DETACH_PED( l_U5822[2]._fU52, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U5822[3]._fU52 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5822[3]._fU52, "G_CS_RAIL_A^1", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U5822[3]._fU52, "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U5822[3]._fU52, 0, 0 ), "W_AR_AK47_Aa_H^1", 0 );
        DETACH_PED( l_U5822[3]._fU52, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U5822[4]._fU52 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5822[4]._fU52, "G_CS_RAIL_A^4", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U5822[4]._fU52, "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U5822[4]._fU52, 0, 0 ), "W_PI_PT92_Aa_H^5", 0 );
        DETACH_PED( l_U5822[4]._fU52, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U5822[5]._fU52 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5822[5]._fU52, "G_CS_RAIL_A^5", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U5822[5]._fU52, "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U5822[5]._fU52, 0, 0 ), "W_PI_PT92_Aa_H^4", 0 );
        DETACH_PED( l_U5822[5]._fU52, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U5822[6]._fU52 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5822[6]._fU52, "G_CS_RAIL_A^3", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U5822[6]._fU52, "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U5822[6]._fU52, 0, 0 ), "W_SB_Uzi_Aa_H", 0 );
        DETACH_PED( l_U5822[6]._fU52, 1 );
    }
    sub_68241( 1, 0, 0, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U1463[6], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U1471[6], 1065353216, 0 );
    sub_65442();
    START_SEAMLESS_CUTSCENE();
    sub_47272( g_U977, l_U5812, 0.00000000, l_U5811, 0 );
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( g_U977 ))
        {
            PAUSE_PLAYBACK_RECORDED_VEHICLE( g_U977 );
        }
    }
    STOP_SCRIPT_STREAM( 0 );
    DO_SCREEN_FADE_IN( 0 );
    bVar4 = false;
    iVar5 = 0;
    while (NOT HAS_CUTSCENE_FINISHED())
    {
        WAIT( 0 );
        if (NOT bVar2)
        {
            if (GET_CUTSCENE_TIME_MS() > 5109)
            {
                sub_68595( 0 );
                bVar2 = true;
            }
        }
        if ((GET_CUTSCENE_TIME_MS() > 5836) AND (NOT bVar4))
        {
            sub_43973();
        }
    }
    for ( I = 0; I < 7; I++ )
    {
        if ((NOT (IS_VEHICLE_DEAD( l_U5703[0]._fU0 ))) AND (NOT (IS_PED_DEAD( l_U5822[I]._fU52 ))))
        {
            ATTACH_PED_TO_VEHICLE( l_U5822[I]._fU52, l_U5703[0]._fU0, 0, l_U1252[l_U5822[I]._fU64], 90.00000000, 360.00000000, 0, 0, 1, 1 );
        }
    }
    if ((NOT (IS_VEHICLE_DEAD( g_U977 ))) AND (NOT (IS_PED_DEAD( g_U976 ))))
    {
        ATTACH_PED_TO_VEHICLE( g_U976, g_U977, 0, l_U1252[45], 0.00000000, 360.00000000, 0, 0, 0, 1 );
    }
    sub_3524( "MF", "P_PIER_MID_13_DOCKS - START", 0 );
    return;
}

void sub_65026(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_65274()
{
    sub_3524( "GA", "P_CLEANUP_UNDERPIER_SECTION start", 0 );
    sub_59466();
    sub_65340( ref l_U5123 );
    sub_59694( ref l_U4930, 1 );
    sub_59694( ref l_U5045, 1 );
    sub_59851( l_U4929 );
    sub_63220( l_U5617, 0 );
    sub_65442();
    sub_65559( ref l_U5627, 0 );
    sub_3524( "GA", "P_CLEANUP_UNDERPIER_SECTION end", 0 );
    return;
}

void sub_65340(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_59585( (uParam0^)[I]._fU52 );
    }
    return;
}

void sub_65442()
{
    sub_3524( "SA", "P_RAIL_PIER_STOP_AUDIO - Start", 0 );
    STOP_SCRIPT_STREAM( 0 );
    sub_3524( "SA", "P_RAIL_PIER_STOP_AUDIO - End", 0 );
    return;
}

void sub_65559(int iParam0, int iParam1)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam1 == 1)
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam1 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam1 );
        }
        else
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
        }
        sub_56125( iParam0 + 40 );
        sub_56125( iParam0 + 76 );
        sub_56125( iParam0 + 112 );
        iParam0->_fU172 = 0;
    }
    return;
}

void sub_68241(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_32908() )))
        {
            SET_PLAYER_CONTROL( sub_32930(), 0, uParam2 );
            SET_PED_DUCKING( sub_32908(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_32908() );
            }
            SET_PED_INVINCIBLE( sub_32908(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_68595(int iParam0)
{
    float fVar3;

    sub_3524( "GA", "P_RAIL_PIER_JUMP_ANIM_SHACK start", 0 );
    if (DOES_OBJECT_EXIST( l_U6153[0] ))
    {
        PLAY_OBJECT_ANIM( l_U6153[0], "bt_sm_01_root_01", "ma_animobj", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U6153[0], "bt_sm_01_root_01", "ma_animobj", l_U6128 );
    }
    if (DOES_OBJECT_EXIST( l_U6153[1] ))
    {
        PLAY_OBJECT_ANIM( l_U6153[1], "bt_sm_01_root_02", "ma_animobj", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U6153[1], "bt_sm_01_root_02", "ma_animobj", l_U6128 );
    }
    if (DOES_OBJECT_EXIST( l_U6153[2] ))
    {
        PLAY_OBJECT_ANIM( l_U6153[2], "bt_sm_01_root_03", "ma_animobj", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U6153[2], "bt_sm_01_root_03", "ma_animobj", l_U6128 );
    }
    if (DOES_OBJECT_EXIST( l_U6153[3] ))
    {
        PLAY_OBJECT_ANIM( l_U6153[3], "bt_sm_01_root_04", "ma_animobj", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U6153[3], "bt_sm_01_root_04", "ma_animobj", l_U6128 );
    }
    if (DOES_OBJECT_EXIST( l_U6153[4] ))
    {
        PLAY_OBJECT_ANIM( l_U6153[4], "bt_sm_01_root_05", "ma_animobj", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U6153[4], "bt_sm_01_root_05", "ma_animobj", l_U6128 );
    }
    if (DOES_OBJECT_EXIST( l_U6153[5] ))
    {
        PLAY_OBJECT_ANIM( l_U6153[5], "bt_sm_01_root_06", "ma_animobj", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U6153[5], "bt_sm_01_root_06", "ma_animobj", l_U6128 );
    }
    if (DOES_OBJECT_EXIST( l_U6153[6] ))
    {
        PLAY_OBJECT_ANIM( l_U6153[6], "bt_sm_01_root_07", "ma_animobj", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U6153[6], "bt_sm_01_root_07", "ma_animobj", l_U6128 );
    }
    if (DOES_OBJECT_EXIST( l_U6153[7] ))
    {
        PLAY_OBJECT_ANIM( l_U6153[7], "bt_sm_01_root_08", "ma_animobj", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U6153[7], "bt_sm_01_root_08", "ma_animobj", l_U6128 );
    }
    if (DOES_OBJECT_EXIST( l_U6153[8] ))
    {
        PLAY_OBJECT_ANIM( l_U6153[8], "bt_sm_01_root_09", "ma_animobj", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U6153[8], "bt_sm_01_root_09", "ma_animobj", l_U6128 );
    }
    if (DOES_OBJECT_EXIST( l_U6153[9] ))
    {
        PLAY_OBJECT_ANIM( l_U6153[9], "bt_sm_01_root_10", "ma_animobj", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U6153[9], "bt_sm_01_root_10", "ma_animobj", l_U6128 );
    }
    if (DOES_OBJECT_EXIST( l_U6153[10] ))
    {
        PLAY_OBJECT_ANIM( l_U6153[10], "bt_sm_01_root_11", "ma_animobj", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U6153[10], "bt_sm_01_root_11", "ma_animobj", l_U6128 );
    }
    if (DOES_OBJECT_EXIST( l_U6153[11] ))
    {
        PLAY_OBJECT_ANIM( l_U6153[11], "bt_sm_01_root_12", "ma_animobj", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U6153[11], "bt_sm_01_root_12", "ma_animobj", l_U6128 );
    }
    if (DOES_OBJECT_EXIST( l_U6153[12] ))
    {
        PLAY_OBJECT_ANIM( l_U6153[12], "bt_sm_01_root_13", "ma_animobj", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U6153[12], "bt_sm_01_root_13", "ma_animobj", l_U6128 );
    }
    if (DOES_OBJECT_EXIST( l_U6153[13] ))
    {
        PLAY_OBJECT_ANIM( l_U6153[13], "bt_sm_01_root_14", "ma_animobj", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_SPEED( l_U6153[13], "bt_sm_01_root_14", "ma_animobj", l_U6128 );
    }
    fVar3 = 0.37127800;
    if (iParam0 == 1)
    {
        SET_OBJECT_ANIM_CURRENT_TIME( l_U6153[0], "bt_sm_01_root_01", "ma_animobj", fVar3 );
        SET_OBJECT_ANIM_SPEED( l_U6153[0], "bt_sm_01_root_01", "ma_animobj", l_U6129 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U6153[1], "bt_sm_01_root_02", "ma_animobj", fVar3 );
        SET_OBJECT_ANIM_SPEED( l_U6153[1], "bt_sm_01_root_02", "ma_animobj", l_U6129 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U6153[2], "bt_sm_01_root_03", "ma_animobj", fVar3 );
        SET_OBJECT_ANIM_SPEED( l_U6153[2], "bt_sm_01_root_03", "ma_animobj", l_U6129 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U6153[3], "bt_sm_01_root_04", "ma_animobj", fVar3 );
        SET_OBJECT_ANIM_SPEED( l_U6153[3], "bt_sm_01_root_04", "ma_animobj", l_U6129 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U6153[4], "bt_sm_01_root_05", "ma_animobj", fVar3 );
        SET_OBJECT_ANIM_SPEED( l_U6153[4], "bt_sm_01_root_05", "ma_animobj", l_U6129 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U6153[5], "bt_sm_01_root_06", "ma_animobj", fVar3 );
        SET_OBJECT_ANIM_SPEED( l_U6153[5], "bt_sm_01_root_06", "ma_animobj", l_U6129 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U6153[6], "bt_sm_01_root_07", "ma_animobj", fVar3 );
        SET_OBJECT_ANIM_SPEED( l_U6153[6], "bt_sm_01_root_07", "ma_animobj", l_U6129 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U6153[7], "bt_sm_01_root_08", "ma_animobj", fVar3 );
        SET_OBJECT_ANIM_SPEED( l_U6153[7], "bt_sm_01_root_08", "ma_animobj", l_U6129 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U6153[8], "bt_sm_01_root_09", "ma_animobj", fVar3 );
        SET_OBJECT_ANIM_SPEED( l_U6153[8], "bt_sm_01_root_09", "ma_animobj", l_U6129 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U6153[9], "bt_sm_01_root_10", "ma_animobj", fVar3 );
        SET_OBJECT_ANIM_SPEED( l_U6153[9], "bt_sm_01_root_10", "ma_animobj", l_U6129 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U6153[10], "bt_sm_01_root_11", "ma_animobj", fVar3 );
        SET_OBJECT_ANIM_SPEED( l_U6153[10], "bt_sm_01_root_11", "ma_animobj", l_U6129 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U6153[11], "bt_sm_01_root_12", "ma_animobj", fVar3 );
        SET_OBJECT_ANIM_SPEED( l_U6153[11], "bt_sm_01_root_12", "ma_animobj", l_U6129 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U6153[12], "bt_sm_01_root_13", "ma_animobj", fVar3 );
        SET_OBJECT_ANIM_SPEED( l_U6153[12], "bt_sm_01_root_13", "ma_animobj", l_U6129 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U6153[13], "bt_sm_01_root_14", "ma_animobj", fVar3 );
        SET_OBJECT_ANIM_SPEED( l_U6153[13], "bt_sm_01_root_14", "ma_animobj", l_U6129 );
    }
    sub_3524( "GA", "P_RAIL_PIER_JUMP_ANIM_SHACK end", 0 );
    return;
}

void sub_72214()
{
    unknown uVar2;

    sub_3524( "SA", "P_RAIL_PASSOS_UNHOLSTER_POST_CUTSCENE() start", 0 );
    if ((NOT (sub_72306( g_U976, 68019059 ))) AND (NOT (IS_PED_DEAD( g_U976 ))))
    {
        uVar2 = GET_WEAPON_FROM_HOLSTER( g_U976, 0 );
        SELECT_WEAPON_TO_HAND( g_U976, uVar2, 0, 1 );
    }
    sub_3524( "SA", "P_RAIL_PASSOS_UNHOLSTER_POST_CUTSCENE() end", 0 );
    return;
}

void sub_72306(unknown uParam0, int iParam1)
{
    int Result;
    unknown uVar5;

    Result = 0;
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = GET_WEAPON_FROM_HAND( uParam0, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar5 ))
        {
            if ((GET_WEAPON_TYPE( uVar5 )) == iParam1)
            {
                Result = 1;
            }
        }
        uVar5 = GET_WEAPON_FROM_HAND( uParam0, 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar5 ))
        {
            if ((GET_WEAPON_TYPE( uVar5 )) == iParam1)
            {
                Result = 1;
            }
        }
    }
    return Result;
}

void sub_72541()
{
    int I;
    unknown uVar3;

    sub_3524( "SA", "P_PIER_MID_13_SETUP_BLENDOUT start", 0 );
    sub_68241( 1, 0, 0, 1 );
    sub_62241( l_U1634 );
    sub_46685( l_U1418, l_U1455[6], l_U1463[6], l_U1471[6], 1 );
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        REMOVE_PED_WEAPON( sub_32908(), GET_WEAPON_FROM_HAND( sub_32908(), 0, 0 ) );
        sub_35159( sub_32908(), 456708483, 25000, 0, 0 );
        sub_34527( sub_32908(), 427207702, 2, 25000, 0 );
        if (NOT (IS_PED_DEAD( l_U5822[4]._fU52 )))
        {
            SET_PED_DEFAULT_AIM_AT_PED( sub_32908(), l_U5822[4]._fU52 );
        }
    }
    sub_68595( 1 );
    sub_47272( l_U5703[0]._fU0, l_U5813, l_U6130, l_U5818, 0 );
    sub_47272( g_U977, l_U5812, l_U6130, l_U5811, 0 );
    if (NOT (IS_PED_DEAD( g_U976 )))
    {
        PED_ACTION_TREE_PLAY_NODE( g_U976, "/Global/s_marina_drv/PASSOS_AIM/MPM/STANCE_MPM_COMBAT" );
    }
    if (GET_ADRENALINE_AMT() < 0.10000000)
    {
        SET_ADRENALINE_AMT( 0.10000000 );
    }
    ENABLE_MPM( 1 );
    ENABLE_ALL_ADRENALINE( 0 );
    ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
    if ((NOT (IS_PED_DEAD( sub_32908() ))) AND (NOT (IS_PED_DEAD( l_U6124 ))))
    {
        sub_47622( "S_MAR_VIG_27", "LEVEL_S_MARINA_RS_CP_10", "/LEVEL/S_MARINA/S_MAR_VIG_27.act", "/Global/S_MAR_VIG_27/SEQ_START", 1 );
        I_SEQUENCE_REGISTER_ENTITY( "S_MAR_VIG_27", "VIG27_FAB", l_U6124, 0 );
        I_SEQUENCE_START( "S_MAR_VIG_27" );
        SET_PED_PRIMARY_LOOKAT( l_U6124, sub_32908() );
    }
    SET_RANDOM_SEED( GET_GAME_TIMER() );
    for ( I = 0; I < 7; I++ )
    {
        if ((NOT (IS_VEHICLE_DEAD( g_U977 ))) AND ((NOT (IS_PED_DEAD( sub_32908() ))) AND (NOT (IS_PED_DEAD( l_U5822[I]._fU52 )))))
        {
            SET_PED_SEEING_RANGE( l_U5822[I]._fU52, 200.00000000, 75 );
            SET_PED_HEARING_RANGE( l_U5822[I]._fU52, 200.00000000 );
            SET_PED_COMBAT_RANGE_MAX( l_U5822[I]._fU52, 200.00000000 );
            SET_PED_ALERTNESS( l_U5822[I]._fU52, 3 );
            SET_PED_COMBAT_MOVEMENT( l_U5822[I]._fU52, 0 );
            REGISTER_TARGET( l_U5822[I]._fU52, sub_32908() );
            SET_PED_PRIMARY_LOOKAT( l_U5822[I]._fU52, sub_32908() );
            OPEN_SEQUENCE_TASK( ref uVar3 );
            TASK_PAUSE( 0, GET_RANDOM_INT_IN_RANGE( 1000, 2000 ) );
            TASK_SHOOT_AT_VEHICLE( 0, g_U977, 0, 2.50000000, 0.10000000, -1.04000000, -1, 0, 0, 0 );
            CLOSE_SEQUENCE_TASK( uVar3 );
            TASK_PERFORM_SEQUENCE( l_U5822[I]._fU52, uVar3 );
            CLEAR_SEQUENCE_TASK( uVar3 );
        }
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_MARINA_RS_CP_10", "BLEND_OUT_MID_13_DOCKS_CAM", 1, l_U5807, 0.00000000, 0, 0 );
    sub_3524( "SA", "P_PIER_MID_13_SETUP_BLENDOUT end", 0 );
    return;
}

void sub_73766(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        if (l_U1484 != 0)
        {
            sub_3524( "GA", "Stopping previous smoke to start next smoke.", 0 );
            STOP_PARTICLE_FX_LOOPED( l_U1484 );
        }
        l_U1484 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( uParam0, g_U977, uParam1, 0.00000000, 0.00000000, 0.00000000, uParam4 );
        if (l_U1484 == 0)
        {
            ;
        }
    }
    return;
}

void sub_73943()
{
    SET_RAIL_RELATIVE_DIR( 5, l_U1455[5] );
    SET_CAMERA_OVERRIDE( l_U1430[7][0], l_U1430[7][1], 0, 1, 1 );
    if (NOT l_U1497)
    {
        CLEAR_PED_TASKS( sub_32908() );
        sub_46685( l_U1418, l_U1455[l_U852], l_U1463[l_U852], l_U1471[l_U852], 1 );
    }
    sub_47272( g_U977, l_U5812, l_U5805, l_U5811, 0 );
    return;
}

void sub_74305()
{
    if (g_U653 >= 1)
    {
        if ((IS_PED_DEAD( sub_32908() )) AND (DOES_PED_EXIST( sub_32908() )))
        {
            l_U850 = 1;
        }
        if ((sub_74796()) || ((sub_74368()) || (l_U850)))
        {
            if (sub_74852())
            {
                ;
            }
            else
            {
                sub_3524( "MF", "Starting respawn logic...", 0 );
                while ((IS_PED_DEAD( sub_32908() )) == 1)
                {
                    WAIT( 0 );
                }
            }
            if ((IS_PLAYER_DEAD( sub_32930() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_32930(), 0, 0 );
            }
            if (sub_74796())
            {
                sub_74999();
            }
            DO_SCREEN_FADE_OUT( 0 );
            sub_76738( "DOCKS_RS_BOATSPLOSION_SCRIPTED_FAIL_FX" );
            sub_76965();
            if (NOT IS_IN_NYMINUTE_MODE())
            {
                sub_77617( g_U653 );
                sub_16137();
                sub_22224();
                sub_37125();
                sub_42155();
                if ((IS_PLAYER_DEAD( sub_32930() )) == 0)
                {
                    SET_PLAYER_CONTROL( sub_32930(), 1, 0 );
                }
                if (NOT (IS_PED_VISIBLE( sub_32908() )))
                {
                    SET_PED_VISIBLE( sub_32908(), 1 );
                }
                l_U1489 = 1;
            }
        }
    }
    return;
}

int sub_74368()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_32908() )))
        {
            SET_PED_FORCED_TO_WALK( sub_32908(), 0 );
            SET_PLAYER_FORCED_AIM( sub_32930(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_32930(), 1 );
            if ((IS_PED_VISIBLE( sub_32908() )) == 0)
            {
                SET_PED_VISIBLE( sub_32908(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

int sub_74796()
{
    if (IS_IN_NYMINUTE_MODE())
    {
        if (GET_TIME_REMAINING() <= 0)
        {
            return 1;
        }
    }
    return 0;
}

void sub_74852()
{
    return g_U648;
}

void sub_74999()
{
    boolean bVar2;

    sub_3524( "SA", "P_NEW_YORK_MINUTE_OUT_OF_TIME start", 0 );
    sub_62966();
    sub_63075();
    sub_75068();
    DISPLAY_HUD( 0 );
    sub_75446( "MISS_NY_MINUTE_PANEL_01_FAILSAFE", 0 );
    bVar2 = false;
    while (NOT bVar2)
    {
        if (sub_75726( 1 ))
        {
            sub_76738( "MISS_NY_MINUTE_PANEL_01_FAILSAFE" );
            bVar2 = true;
        }
        WAIT( 0 );
    }
    sub_3524( "SA", "P_NEW_YORK_MINUTE_OUT_OF_TIME end", 0 );
    return;
}

void sub_75068()
{
    if (sub_75084( l_U887 ))
    {
        sub_75250( ref l_U887, 0 );
    }
    if (sub_75084( l_U897 ))
    {
        sub_75250( ref l_U897, 0 );
    }
    if (sub_75084( l_U907 ))
    {
        sub_75250( ref l_U907, 0 );
    }
    return;
}

int sub_75084(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_75097( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_75097(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_75250(int iParam0, unknown uParam1)
{
    if (NOT (sub_75097( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

void sub_75446(unknown uParam0, boolean bParam1)
{
    sub_75460( ref l_U415 );
    l_U415 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
    SETUP_BULLET_CAMERA_SCENE( l_U415, uParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
    if (bParam1)
    {
        RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    }
    return;
}

void sub_75460(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

int sub_75726(int iParam0)
{
    iParam0 = 1;
    switch (l_U402)
    {
        case 0:
        if (NOT (sub_75787( ref l_U404 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_32908() )))
            {
                l_U403 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_22377( ref l_U404, l_U403, 1, 1 );
            sub_58956( ref l_U404 );
        }
        if (sub_75915( ref l_U404 ))
        {
            sub_3524( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_32908() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_32930() )))
            {
                SET_PLAYER_CONTROL( sub_32930(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U402 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U402 = 2;
            }
            else
            {
                l_U402 = 3;
            }
        }
        break;
        case 2:
        sub_3524( "NS", "Player will QUIT", 0 );
        sub_76402();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_3524( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_76402();
        return 1;
        break;
    }
    return 0;
}

int sub_75787(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

int sub_75915(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_76402()
{
    sub_3524( "NS", "P_PostFailRetryCleanup", 0 );
    sub_56125( ref l_U404 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_32930() )))
    {
        SET_PLAYER_CONTROL( sub_32930(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U401 = 0;
    l_U401 = l_U401;
    l_U402 = 0;
    return;
}

void sub_76738(unknown uParam0)
{
    sub_3524( "CO", "P_IMAGEFX_STOP_BULLETCAM:  Cameras Deleted", 0 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    sub_75460( ref l_U415 );
    l_U414 = 1;
    return;
}

void sub_76965()
{
    int I;

    sub_3524( "GA", "P_CLEANUP_ALL start", 0 );
    ENABLE_AUDIO_MIX_LAYER( 10, 0, 0.00000000, 0 );
    ENABLE_AUDIO_MISSION_FLAG( 0, 0 );
    AUDIO_MUSIC_STOP_ONESHOT();
    RESERVE_BULLETS( 0 );
    SET_PED_ENABLE_HEADLOOK_CONTROLLER( sub_32908(), 1 );
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        DETACH_PED( sub_32908(), 1 );
    }
    SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
    sub_60596( l_U4909, 0 );
    sub_60759( ref l_U4909 );
    sub_63220( l_U1490, 0 );
    sub_63220( l_U5617, 0 );
    sub_63220( "S_MAR_VIG_27", 0 );
    sub_59585( g_U976 );
    sub_59522();
    sub_65340( ref l_U5123 );
    sub_65340( ref l_U5822 );
    sub_59585( l_U6124 );
    sub_59783( g_U977 );
    sub_59694( ref l_U1690, 0 );
    for ( I = 0; I < 6; I++ )
    {
        sub_60356( ref l_U4082[I] );
    }
    sub_59694( ref l_U4930, 0 );
    sub_59694( ref l_U5045, 0 );
    sub_59694( ref l_U5703, 0 );
    sub_77306( g_U978 );
    sub_77306( g_U979 );
    sub_77306( g_U980 );
    sub_77370( ref l_U6153 );
    sub_77370( ref l_U6131 );
    sub_77370( ref l_U1187 );
    l_U1489 = 1;
    if (l_U1484 != 0)
    {
        REMOVE_PARTICLE_FX( l_U1484 );
        l_U1484 = 0;
    }
    SET_BOAT_OUT_OF_CONTROL_AND_BLOW_UP_WHEN_DRIVER_DEAD( 0 );
    SET_DEAD_FORCE_WATER_DEPTH_TO_DEFAULT();
    SET_PLAYER_COMBAT_TIMER_MODE( 0 );
    SET_CAM_FORCE_LEFT_SIDE( 0 );
    SET_CAM_VIEW_MODE( 1 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    SET_SILHOUETTE_ACTIVE( 1 );
    sub_22697( ref l_U975 );
    g_U975 = 0;
    ALLOW_BULLET_CAMERA_CHEAT( 1 );
    sub_3524( "GA", "P_CLEANUP_ALL end", 0 );
    return;
}

void sub_77306(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_77370(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_77306( (uParam0^)[I] );
    }
    return;
}

void sub_77617(int iParam0)
{
    sub_3524( "SA", "P_RESTORE_CHECKPOINT start", 0 );
    if (iParam0 == 5)
    {
        sub_32974( ref l_U740, sub_32908() );
    }
    else if (iParam0 == 6)
    {
        sub_32974( ref l_U776, sub_32908() );
    }
    else if (iParam0 == 7)
    {
        sub_32974( ref l_U812, sub_32908() );
    };;;
    sub_3524( "SA", "P_RESTORE_CHECKPOINT end", 0 );
    return;
}

void sub_77890()
{
    sub_77900();
    sub_78269( l_U852 );
    sub_83740();
    sub_84106();
    sub_87652();
    if (NOT l_U999)
    {
        sub_87775( g_U977 );
    }
    if (l_U1196 != 5)
    {
        sub_87924();
    }
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        if ((GET_AMMO_IN_PED_WEAPON( sub_32908(), 427207702 )) <= 500)
        {
            ADD_AMMO_TO_PED( sub_32908(), 427207702, 25000, 0 );
        }
    }
    switch (l_U852)
    {
        case 4:
        if (g_U653 < 5)
        {
            sub_38106( 5 );
            g_U653 = 5;
        }
        sub_89237();
        if (NOT sub_84246())
        {
            if (sub_75915( ref l_U4040 ))
            {
                sub_101489( ref l_U6182, "MID_12B_DOCKS_concat", 97631, 97711, 100615, 100751, 57017, 100817, 100836, 100854, 250, 0 );
                l_U6182._fU4 = 2;
                l_U4072 = 1;
                l_U5586 = 1;
                sub_60596( l_U4909, 0 );
                sub_60759( ref l_U4909 );
            }
        }
        if (l_U6182._fU4 != 0)
        {
            sub_101917( ref l_U6182 );
        }
        if (l_U6182._fU4 >= 8)
        {
            CLEAR_NAMED_CUTSCENE( "MID_12B_DOCKS_concat" );
            l_U1496 = 1;
            sub_49213();
        }
        break;
        case 5:
        if (g_U653 < 6)
        {
            sub_38106( 6 );
            g_U653 = 6;
        }
        sub_103676();
        if (sub_91086( g_U977, l_U4929, l_U4928 ))
        {
            l_U1497 = 1;
            sub_62572();
        }
        break;
        case 6:
        if (g_U653 < 7)
        {
            sub_38106( 7 );
            l_U414 = 0;
            g_U653 = 7;
        }
        sub_106882();
        if (l_U6170 == 1)
        {
            if ((NOT l_U850) AND (NOT l_U849))
            {
                l_U848 = 1;
                END_CONTEXT( "BOATCHASE_TO_END" );
                sub_3524( "GA", "RAIL SCRIPT COMPLETE", 0 );
            }
        }
        break;
    }
    return;
}

void sub_77900()
{
    switch (l_U6210)
    {
        case 0:
        sub_3524( "CCB", "ePartI - STATE_CHALLENGE_IDLE", 0 );
        l_U6210 = 1;
        break;
        case 1:
        if (l_U5702 >= 2)
        {
            if (l_U6171)
            {
                if (NOT (HAS_ACHIEVEMENT_BEEN_PASSED( 12 )))
                {
                    sub_3524( "CCB", "Giving the player the SP_PART_I_COMPLETE achievement.", 0 );
                    GIVE_ACHIEVEMENT_TO_PLAYER( 12 );
                }
                else
                {
                    sub_3524( "CCB", "The player already has the SP_PART_I_COMPLETE achievement.", 0 );
                }
                sub_3524( "CCB", "ePartI - STATE_CHALLENGE_COMPLETE", 0 );
                l_U6210 = 2;
            }
        }
        break;
        case 2: break;
    }
    return;
}

void sub_78269(unknown uParam0)
{
    unknown uVar3;
    float fVar4;
    float fVar5;

    SET_PED_MAX_HEALTH( sub_32908(), 200 );
    if ((NOT l_U1000) AND (l_U990))
    {
        switch (uParam0)
        {
            case 4:
            case 5:
            if ((TIMERA() - l_U992) > l_U991)
            {
                uVar3 = g_U973;
                g_U973 -= (sub_78385( 35.00000000 )) * l_U993;
                g_U973 -= (sub_78933( ref l_U1690, 35.00000000 )) * l_U993;
                g_U973 -= (sub_79107( ref l_U5123, 50.00000000 )) * l_U997;
                g_U973 -= (sub_78933( ref l_U4930, 50.00000000 )) * l_U997;
                fVar4 = (0.03300000 / GET_FRAME_TIME()) - 1.00000000;
                fVar5 = uVar3 - g_U973;
                g_U973 -= fVar5 * fVar4;
                if (g_U973 < 0.00000000)
                {
                    g_U973 = 0.00000000;
                }
                sub_79383( g_U973 / g_U972 );
                l_U992 = TIMERA();
            }
            if ((g_U973 <= 0.00000000) AND (NOT l_U999))
            {
                sub_79510( ref l_U1007, ref l_U1038 );
                sub_80840();
                l_U1006 = 2;
                l_U1001 = 0;
                while (NOT l_U1001)
                {
                    l_U1001 = sub_81185();
                    WAIT( 0 );
                }
                sub_83162();
                sub_3524( "GA", "NIS BLOW UP completed.", 0 );
                l_U850 = 1;
            }
            break;
            case 6:
            if (((TIMERA() - l_U992) > 15) AND (l_U1480))
            {
                if ((sub_83559( ref l_U5822 )) > 0)
                {
                    l_U1003 -= l_U1004;
                    if ((l_U1003 - l_U1004) < 0.00000000)
                    {
                        sub_79383( 0.00000000 );
                    }
                    else
                    {
                        sub_79383( l_U1003 / 100.00000000 );
                    }
                }
                l_U992 = TIMERA();
            }
            break;
        }
    }
    return;
}

void sub_78385(float fParam0)
{
    int J;
    int I;
    int Result;

    Result = 0;
    for ( J = 0; J < 19; J++ )
    {
        for ( I = 0; I < l_U4011[J]; I++ )
        {
            if ((NOT (IS_PED_DEAD( sub_32908() ))) AND (NOT (IS_PED_DEAD( l_U2433[J][I]._fU52 ))))
            {
                if (((sub_78533( sub_32908(), l_U2433[J][I]._fU52, 0 )) < fParam0) AND (IS_PED_SHOOTING( l_U2433[J][I]._fU52 )))
                {
                    Result++;
                }
            }
        }
    }
    for ( J = 0; J < 6; J++ )
    {
        for ( I = 0; I < l_U4082[J]._fU176; I++ )
        {
            if ((NOT (IS_PED_DEAD( sub_32908() ))) AND (NOT (IS_PED_DEAD( l_U4082[J]._fU180[I]._fU52 ))))
            {
                if (((sub_78533( sub_32908(), l_U4082[J]._fU180[I]._fU52, 0 )) < fParam0) AND (IS_PED_SHOOTING( l_U4082[J]._fU180[I]._fU52 )))
                {
                    Result++;
                }
            }
        }
    }
    return Result;
}

void sub_78533(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_78933(unknown uParam0, float fParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((NOT (IS_PED_DEAD( sub_32908() ))) AND (NOT (IS_PED_DEAD( (uParam0^)[I]._fU56 ))))
        {
            if (((sub_78533( sub_32908(), (uParam0^)[I]._fU56, 0 )) < fParam1) AND (IS_PED_SHOOTING( (uParam0^)[I]._fU56 )))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_79107(unknown uParam0, float fParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((NOT (IS_PED_DEAD( sub_32908() ))) AND (NOT (IS_PED_DEAD( (uParam0^)[I]._fU52 ))))
        {
            if (((sub_78533( sub_32908(), (uParam0^)[I]._fU52, 0 )) < fParam1) AND (IS_PED_SHOOTING( (uParam0^)[I]._fU52 )))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_79383(unknown uParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        iVar3 = (ROUND( ((GET_PED_MAX_HEALTH( sub_32908() )) - 100) * uParam0 )) + 100;
        SET_PED_HEALTH( sub_32908(), iVar3, 0 );
    }
    return;
}

void sub_79510(unknown uParam0, unknown uParam1)
{
    switch (l_U852)
    {
        case 4:
        sub_79552( uParam0, uParam1 );
        break;
        case 5:
        sub_80262( uParam0, uParam1 );
        break;
        default:
        sub_79642( uParam0, uParam1 );
        break;
    }
    return;
}

void sub_79552(unknown uParam0, unknown uParam1)
{
    sub_3524( "SA", "P_MANGROVE_SETUP_DEATH_CAM() start", 0 );
    switch (l_U4925)
    {
        case 0:
        sub_79642( uParam0, uParam1 );
        break;
        case 1:
        sub_80113( uParam0, uParam1 );
        break;
    }
    l_U4925++;
    if (l_U4925 >= 2)
    {
        l_U4925 = 0;
    }
    sub_3524( "SA", "P_MANGROVE_SETUP_DEATH_CAM() end", 0 );
    return;
}

void sub_79642(unknown uParam0, unknown uParam1)
{
    sub_79680( uParam0, uParam1, l_U1093, l_U1099, l_U1096, l_U1102 );
    return;
}

void sub_79680(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    sub_79732( iParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 40.00000000, l_U1194 );
    sub_79732( iParam1, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 40.00000000, l_U1194 );
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        ATTACH_CAM_TO_VEHICLE( iParam0->_fU0, g_U977, uParam2, 1 );
        ATTACH_CAM_TO_VEHICLE( iParam1->_fU0, g_U977, uParam5, 1 );
        POINT_CAM_AT_VEHICLE( iParam0->_fU0, g_U977, uParam8, 1 );
        POINT_CAM_AT_VEHICLE( iParam1->_fU0, g_U977, uParam11, 1 );
    }
    return;
}

void sub_79732(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_22377( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U2, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_80113(unknown uParam0, unknown uParam1)
{
    sub_79680( uParam0, uParam1, l_U1105, l_U1111, l_U1108, l_U1114 );
    return;
}

void sub_80262(unknown uParam0, unknown uParam1)
{
    sub_3524( "SA", "P_PIER_SETUP_DEATH_CAM() start", 0 );
    switch (l_U5599)
    {
        case 0:
        sub_80356( uParam0, uParam1 );
        break;
        case 1:
        sub_79642( uParam0, uParam1 );
        break;
        case 2:
        sub_80113( uParam0, uParam1 );
        break;
    }
    l_U5599++;
    if (l_U5599 >= 3)
    {
        l_U5599 = 0;
    }
    sub_3524( "SA", "P_PIER_SETUP_DEATH_CAM() end", 0 );
    return;
}

void sub_80356(int iParam0, int iParam1)
{
    sub_3524( "SA", "P_PIER_SETUP_DEATH_CAM() start", 0 );
    sub_79732( iParam0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 35.00000000, l_U1194 );
    sub_79732( iParam1, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 35.00000000, l_U1194 );
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        ATTACH_CAM_TO_VEHICLE( iParam0->_fU0, g_U977, l_U5600, 1 );
        ATTACH_CAM_TO_VEHICLE( iParam1->_fU0, g_U977, l_U5603, 1 );
        POINT_CAM_AT_VEHICLE( iParam0->_fU0, g_U977, l_U5606, 1 );
        POINT_CAM_AT_VEHICLE( iParam1->_fU0, g_U977, l_U5609, 1 );
        WAIT( 0 );
        DETACH_CAM( iParam0->_fU0 );
        DETACH_CAM( iParam1->_fU0 );
    }
    sub_3524( "SA", "P_PIER_SETUP_DEATH_CAM() end", 0 );
    return;
}

void sub_80840()
{
    sub_3524( "MF", "P_RAIL_HANDLE_NIS_BLOW_UP_PRE - START", 0 );
    sub_62966();
    sub_63075();
    sub_75250( ref l_U887, 0 );
    if (IS_VEHICLE_DEAD( g_U977 ))
    {
        SCRIPT_ASSERT( "Passos' boat is dead when trying to play the fail NIS.", 0 );
    }
    sub_58956( ref l_U1128 );
    sub_58956( ref l_U1137 );
    sub_58956( ref l_U1178 );
    sub_58956( ref l_U1168 );
    sub_58956( ref l_U1148 );
    sub_58956( ref l_U1158 );
    sub_58933( ref l_U1118, 1500 );
    l_U1177 = 0;
    sub_68241( 1, 0, 0, 0 );
    SET_PLAYER_INVINCIBLE( sub_32930(), 1 );
    DISPLAY_HUD( 0 );
    sub_3524( "MF", "P_RAIL_HANDLE_NIS_BLOW_UP_PRE - END", 0 );
    return;
}

void sub_81185()
{
    int Result;
    unknown uVar3;

    Result = 0;
    if ((sub_75915( ref l_U1137 )) == 1)
    {
        ACTIVATE_BULLET_TIME( 0, l_U1147, 1 );
    }
    if (sub_75915( ref l_U1128 ))
    {
        sub_3524( "GA", "Blow Up NIS explode boat.", 0 );
        sub_81285( ref l_U1007 );
        sub_81384( ref l_U1007, ref l_U1038, l_U1117, 1, 1 );
        sub_81479( 1 );
        l_U999 = 1;
    }
    uVar3 = sub_82859( g_U981, 0.25000000 * g_U981, sub_82713( ref l_U1118 ) );
    sub_82044( g_U977, uVar3 );
    if ((sub_75915( ref l_U1168 )) == 1)
    {
        sub_75446( "DOCKS_RS_BOATSPLOSION_SCRIPTED_FAIL_FX", 0 );
        l_U1177 = 1;
    }
    if ((sub_75915( ref l_U1158 )) == 1)
    {
        DEACTIVATE_BULLET_TIME( 0, 0 );
        l_U1177 = 1;
    }
    if (sub_75915( ref l_U1178 ))
    {
        STOP_SOUND( l_U1192, 0 );
        RELEASE_SOUND_ID( l_U1192 );
    }
    if (l_U1177)
    {
        if ((sub_75726( 1 )) == 1)
        {
            sub_76738( "DOCKS_RS_BOATSPLOSION_SCRIPTED_FAIL_FX" );
            DESTROY_ALL_CAMS();
            Result = 1;
        }
        DISPLAY_HUD( 0 );
    }
    return Result;
}

void sub_81285(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_58956( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_81384(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE_WITH_INTERP( iParam1->_fU0, iParam0->_fU0, uParam2, uParam3, uParam4 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_58956( iParam1 + 48 );
    iParam1->_fU32 = 1;
    iParam1->_fU40 = 1;
    return;
}

void sub_81479(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    int I;

    sub_3524( "GA", "P_RAIL_EXPLODE_PASSOS_BOAT start", 0 );
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( g_U977 )};
        uVar6 = GET_VEHICLE_HEADING( g_U977 );
    }
    l_U1187[0] = sub_61136( g_U954, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( g_U977 ), 0.00000000, 0.00000000, GET_VEHICLE_HEADING( g_U977 ), 0, 0, 0 );
    l_U1187[1] = sub_61136( g_U955, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( g_U977 ), 0.00000000, 0.00000000, GET_VEHICLE_HEADING( g_U977 ), 0, 0, 0 );
    l_U1187[2] = sub_61136( g_U956, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( g_U977 ), 0.00000000, 0.00000000, GET_VEHICLE_HEADING( g_U977 ), 0, 0, 0 );
    l_U1187[3] = sub_61136( g_U957, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( g_U977 ), 0.00000000, 0.00000000, GET_VEHICLE_HEADING( g_U977 ), 0, 0, 0 );
    for ( I = 0; I < l_U1187; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U1187[I] ))
        {
            ATTACH_OBJECT_TO_VEHICLE( l_U1187[I], g_U977, 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000 );
            FREEZE_OBJECT_POSITION( l_U1187[I], 1 );
        }
    }
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        DETACH_PED( sub_32908(), 0 );
        SET_PED_VISIBLE( sub_32908(), 0 );
    }
    sub_59585( g_U976 );
    sub_77306( g_U978 );
    sub_77306( g_U979 );
    sub_77306( g_U980 );
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        SET_VEHICLE_VISIBLE( g_U977, 0 );
        sub_82044( g_U977, g_U981 );
    }
    if (iParam0 == 1)
    {
        ADD_EXPLOSION( uVar3, 12, 1.00000000, 0, 0, 1065353216 );
    }
    if (DOES_OBJECT_EXIST( l_U1187[0] ))
    {
        PLAY_OBJECT_ANIM( l_U1187[0], "p_ma_botexp_xa_h", "ma_anim_rsboat", 0.10000000, 0, 1 );
    }
    if (DOES_OBJECT_EXIST( l_U1187[1] ))
    {
        PLAY_OBJECT_ANIM( l_U1187[1], "p_ma_botexp_xb_h", "ma_anim_rsboat", 0.10000000, 0, 1 );
    }
    if (DOES_OBJECT_EXIST( l_U1187[2] ))
    {
        PLAY_OBJECT_ANIM( l_U1187[2], "p_ma_botexp_xc_h", "ma_anim_rsboat", 0.10000000, 0, 1 );
    }
    if (DOES_OBJECT_EXIST( l_U1187[3] ))
    {
        PLAY_OBJECT_ANIM( l_U1187[3], "p_ma_botexp_xd_h", "ma_anim_rsboat", 0.10000000, 0, 1 );
    }
    if (iParam0 == 1)
    {
        sub_82507( sub_82459(), 0.40000000 );
    }
    STOP_SCRIPT_STREAM( 0 );
    STOP_SCRIPT_STREAM( 1 );
    STOP_SCRIPT_STREAM( 2 );
    AUDIO_MUSIC_SUSPEND( 4000 );
    sub_75068();
    l_U1192 = GET_SOUND_ID();
    PLAY_SOUND_FRONTEND( l_U1192, "P_RAIL_EXPLODE_PASSOS_BOAT" );
    sub_3524( "GA", "P_RAIL_EXPLODE_PASSOS_BOAT end", 0 );
    return;
}

void sub_82044(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            SET_PLAYBACK_SPEED( uParam0, uParam1 );
        }
    }
    return;
}

string sub_82459()
{
    return "MEDIUM_EXPLOSION_SHAKE";
}

void sub_82507(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    return;
}

void sub_82713(int iParam0)
{
    int iVar3;

    if (iParam0->_fU28)
    {
        iVar3 = TIMERA();
    }
    else
    {
        iVar3 = TIMERB();
    }
    return sub_82794( (TO_FLOAT( iVar3 - iParam0->_fU0 )) / (TO_FLOAT( iParam0->_fU12 )), 0.00000000, 1.00000000 );
}

void sub_82794(float fParam0, float fParam1, float fParam2)
{
    float Result;

    Result = fParam0;
    if (fParam0 < fParam1)
    {
        Result = fParam1;
    }
    else if (fParam0 > fParam2)
    {
        Result = fParam2;
    }
    return Result;
}

float sub_82859(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return ((1.00000000 - uParam2) * uParam0) + (uParam1 * uParam2);
}

void sub_83162()
{
    sub_3524( "MF", "P_RAIL_HANDLE_NIS_BLOW_UP_POST - START", 0 );
    DO_SCREEN_FADE_OUT( 500 );
    WAIT( 500 );
    CLEAR_PRINTS();
    CLEAR_HELP();
    STOP_SCRIPT_STREAM( 1 );
    sub_83280( 0, 0, 0, -859915232, -859915232, 0 );
    sub_57764( 1, 1 );
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        SET_PED_VISIBLE( sub_32908(), 1 );
    }
    sub_77370( ref l_U1187 );
    sub_3524( "MF", "P_RAIL_HANDLE_NIS_BLOW_UP_POST - END", 0 );
    return;
}

void sub_83280(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_83559(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU52 )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_83740()
{
    if (l_U1489 != 0)
    {
        if (l_U1489 != 2)
        {
            if ((g_U973 > (g_U972 * 0.40000000)) AND (((IS_VEHICLE_EXTRA_TURNED_ON( g_U977, 2 )) == 1) || (g_U973 < (g_U972 * 0.50000000))))
            {
                sub_3524( "MF", "Enabling White Smoke", 0 );
                sub_73766( l_U1486, l_U1481, l_U1485 );
                l_U1489 = 2;
            }
        }
        if (l_U1489 != 3)
        {
            if ((g_U973 > (g_U972 * 0.20000000)) AND (g_U973 < (g_U972 * 0.40000000)))
            {
                sub_3524( "MF", "Enabling Grey Smoke", 0 );
                sub_73766( l_U1487, l_U1481, l_U1485 );
                l_U1489 = 3;
            }
        }
        if (l_U1489 != 4)
        {
            if (g_U973 < (g_U972 * 0.20000000))
            {
                sub_3524( "MF", "Enabling Black Smoke", 0 );
                sub_73766( l_U1488, l_U1481, l_U1485 );
                l_U1489 = 4;
            }
        }
    }
    return;
}

void sub_84106()
{
    string[4] sVar2;
    string[3] sVar7;

    if (sub_75915( ref l_U975 ))
    {
        sub_22697( ref l_U975 );
    }
    if (NOT HAS_CUTSCENE_FINISHED())
    {
        if (sub_75915( ref l_U953 ))
        {
            sub_58933( ref l_U953, GET_RANDOM_INT_IN_RANGE( l_U971, l_U972 ) );
        }
    }
    if (l_U975._fU20)
    {
        return;
    }
    if ((NOT HAS_CUTSCENE_FINISHED()) || (IS_BULLET_TIME_ACTIVE( 1 )))
    {
        return;
    }
    if (sub_75915( ref l_U917 ))
    {
        if (NOT sub_84246())
        {
            sub_84343( "SMA2_RSPBA", l_U870, 1, 0 );
            l_U984 = 1;
        }
    }
    if (sub_75915( ref l_U926 ))
    {
        if (NOT sub_84246())
        {
            sub_84343( "SMA2_RSPAA", l_U867, 1, 0 );
            l_U984 = 1;
        }
    }
    if (sub_75915( ref l_U944 ))
    {
        if (NOT sub_84246())
        {
            sub_84343( "SMA2_RSPCA", l_U868, 1, 0 );
            l_U984 = 1;
        }
    }
    if (sub_75915( ref l_U935 ))
    {
        if (NOT sub_84246())
        {
            sub_84343( "SMA2_RSPCA", l_U869, 1, 0 );
            l_U984 = 1;
        }
    }
    if ((NOT sub_84246()) AND (l_U984))
    {
        l_U984 = 0;
        sub_86330( "SMA2_RSMAA", 0, 1 );
    }
    if (NOT l_U953._fU20)
    {
        if ((g_U653 == 4) || (g_U653 == 3))
        {
            sub_58933( ref l_U953, GET_RANDOM_INT_IN_RANGE( l_U973, l_U974 ) );
        }
        else
        {
            sub_58933( ref l_U953, GET_RANDOM_INT_IN_RANGE( l_U971, l_U972 ) );
        }
    }
    if (NOT sub_84246())
    {
        if (sub_75915( ref l_U953 ))
        {
            if (g_U653 == 3)
            {
                sub_86330( "SMA2_RVMFA", 0, 1 );
                l_U985 = 1;
                sub_58933( ref l_U953, GET_RANDOM_INT_IN_RANGE( l_U973, l_U974 ) );
            }
            else if (g_U653 == 4)
            {
                array(ref sVar2, 4);
                sVar2[0] = "SMA2_RVMSTA";
                sVar2[1] = "SMA2_RVMSTB";
                sVar2[2] = "SMA2_RVMSTC";
                sVar2[3] = "SMA2_RVMSTD";
                sub_86841( ref sVar2, 1, 1, 0 );
                l_U985 = 0;
                sub_58933( ref l_U953, GET_RANDOM_INT_IN_RANGE( l_U973, l_U974 ) );
            }
            else
            {
                sub_86330( "SMA2_RSMBA", 0, 1 );
                l_U985 = (GET_RANDOM_INT_IN_RANGE( 0, 3 )) == 1;
                sub_58933( ref l_U953, GET_RANDOM_INT_IN_RANGE( l_U971, l_U972 ) );
            }
        }
    }
    if ((l_U985) AND (NOT sub_84246()))
    {
        if (g_U653 == 3)
        {
            sub_86942( "SMA2_RVPFA", 0, 1, 0 );
        }
        else
        {
            sub_86942( "SMA2_RSPBB", 0, 1, 0 );
        }
        l_U985 = 0;
    }
    if ((NOT sub_84246()) AND (NOT (IS_PED_DEAD( g_U976 ))))
    {
        if (IS_EXPLOSION_IN_SPHERE( -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U976 ), 30.00000000 ))
        {
            sub_86942( "SMA2_RSPNA", 0, 1, 0 );
        }
    }
    if (g_U973 < l_U988)
    {
        if (NOT sub_84246())
        {
            if ((g_U973 <= (g_U972 / 2)) AND (NOT l_U989))
            {
                array(ref sVar7, 3);
                sVar7[0] = "SMA2_RSPGA";
                sVar7[1] = "SMA2_RSPGB";
                sVar7[2] = "SMA2_RSPGC";
                sub_86841( ref sVar7, 1, 1, 0 );
                l_U989 = 1;
            }
            else
            {
                sub_86942( "SMA2_RSPFA", 0, 1, 0 );
            }
            while (l_U988 > g_U973)
            {
                l_U988 -= l_U987 * g_U972;
            }
        }
    }
    return;
}

int sub_84246()
{
    if ((l_U962._fU20) || ((sub_75084( l_U907 )) || ((sub_75084( l_U897 )) || (sub_75084( l_U887 )))))
    {
        return 1;
    }
    return 0;
}

void sub_84343(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    sub_3524( "GA", "P_RAIL_PASSOS_POINT_AND_SPEAK start", 0 );
    if ((NOT (IS_PED_DEAD( sub_32908() ))) AND (NOT (IS_PED_DEAD( g_U976 ))))
    {
        sub_84434();
        PED_SET_ACTION_INTENTION( g_U976, uParam1, 1000, 0.00000000, 0.00000000, 0.00000000 );
        sub_84967( ref l_U887 );
        sub_85053( uParam2, g_U976, "PASSOS", ref l_U887, 2, 0 );
        sub_85053( uParam3, sub_32908(), "MAX", ref l_U887, 2, 0 );
        sub_85283( uParam0, ref l_U887, 8, 1 );
    }
    sub_3524( "GA", "P_RAIL_PASSOS_POINT_AND_SPEAK end", 0 );
    return;
}

void sub_84434()
{
    if (sub_75084( l_U887 ))
    {
        sub_3524( "GA", "Trying to play over an already playing Passos dialogue.", 0 );
        SCRIPT_ASSERT( "Trying to play over an already playing Passos dialogue.", 0 );
        sub_75250( ref l_U887, 0 );
    }
    if (sub_75084( l_U897 ))
    {
        sub_3524( "GA", "Trying to play over an already playing Max dialogue.", 0 );
        SCRIPT_ASSERT( "Trying to play over an already playing Max dialogue.", 0 );
        sub_75250( ref l_U897, 0 );
    }
    if (sub_75084( l_U907 ))
    {
        sub_3524( "GA", "Trying to play over an already playing Fabiana dialogue.", 0 );
        SCRIPT_ASSERT( "Trying to play over an already playing Fabiana dialogue.", 0 );
        sub_75250( ref l_U907, 0 );
    }
    return;
}

void sub_84967(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_85053(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_85283(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_85307( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_85307(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_85362( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_85362(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_85397( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_85891( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_85397(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_85891(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_86330(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_3524( "SA", "P_RAIL_MAX_SPEAKS start", 0 );
    if ((NOT (IS_PED_DEAD( sub_32908() ))) AND (NOT (IS_PED_DEAD( g_U976 ))))
    {
        sub_84434();
        sub_84967( ref l_U897 );
        sub_85053( uParam1, sub_32908(), "MAX", ref l_U897, 2, 0 );
        sub_85053( uParam2, g_U976, "PASSOS", ref l_U897, 2, 0 );
        sub_85283( uParam0, ref l_U897, 8, 1 );
        PED_SET_ACTION_INTENTION( sub_32908(), 47, 1000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U976 ) );
    }
    sub_3524( "SA", "P_RAIL_MAX_SPEAKS end", 0 );
    return;
}

void sub_86841(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;

    sub_3524( "SA", "P_RAIL_PASSOS_MAX_RANDOM_DIALOGUE", 0 );
    uVar6 = (uParam0^);
    SET_RANDOM_SEED( GET_REAL_GAME_TIMER() );
    uVar7 = GET_RANDOM_INT_IN_RANGE( 0, uVar6 );
    sub_86942( (uParam0^)[uVar7], uParam1, uParam2, uParam3 );
    return;
}

void sub_86942(unknown uParam0, boolean bParam1, unknown uParam2, unknown uParam3)
{
    sub_3524( "GA", "P_RAIL_PASSOS_SPEAK start", 0 );
    if ((NOT (IS_PED_DEAD( sub_32908() ))) AND (NOT (IS_PED_DEAD( g_U976 ))))
    {
        sub_84434();
        sub_84967( ref l_U887 );
        sub_85053( uParam2, g_U976, "PASSOS", ref l_U887, 2, 0 );
        sub_85053( uParam3, sub_32908(), "MAX", ref l_U887, 2, 0 );
        sub_85283( uParam0, ref l_U887, 8, 1 );
        if (bParam1)
        {
            PED_SET_ACTION_INTENTION( sub_32908(), 48, 1000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U976 ) );
        }
    }
    sub_3524( "GA", "P_RAIL_PASSOS_SPEAK end", 0 );
    return;
}

void sub_87652()
{
    if ((sub_75084( l_U907 )) || ((sub_75084( l_U897 )) || (sub_75084( l_U887 ))))
    {
        l_U986 = 1;
    }
    else if (l_U986)
    {
        sub_58933( ref l_U962, 3000 );
        l_U986 = 0;
    }
    sub_75915( ref l_U962 );
    return;
}

void sub_87775(unknown uParam0)
{
    if ((NOT (IS_VEHICLE_DEAD( uParam0 ))) || (DOES_VEHICLE_EXIST( uParam0 )))
    {
        if ((GET_VEHICLE_HEALTH( uParam0 )) < 5000)
        {
            SET_VEHICLE_HEALTH( uParam0, 10000 );
        }
        if ((GET_VEHICLE_ENGINE_HEALTH( uParam0 )) < 5000)
        {
            SET_VEHICLE_ENGINE_HEALTH( uParam0, 10000 );
        }
        if ((GET_VEHICLE_PETROL_TANK_HEALTH( uParam0 )) < 5000)
        {
            SET_VEHICLE_PETROL_TANK_HEALTH( uParam0, 10000 );
        }
    }
    return;
}

void sub_87924()
{
    boolean bVar2;
    int iVar3;
    int iVar4;
    float fVar5;
    float fVar6;
    float fVar7;
    int iVar8;

    bVar2 = false;
    iVar3 = TIMERA();
    iVar4 = iVar3 - l_U1216;
    fVar5 = 1.00000000 / ((l_U1197 + l_U1198) + l_U1199);
    fVar6 = 1.00000000 / ((l_U1201 + l_U1200) + l_U1214);
    fVar7 = 0.00000000;
    iVar8 = 0;
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        if ((NOT (IS_PED_RELOADING( sub_32908() ))) AND (IS_CONTROL_PRESSED( 0, 4 )))
        {
            bVar2 = true;
        }
    }
    if (l_U1196 < 3)
    {
        if (bVar2)
        {
            l_U1215 += iVar4 * fVar5;
        }
        else
        {
            l_U1215 -= iVar4 * fVar6;
        }
        if (l_U1215 > (fVar5 * ((l_U1197 + l_U1198) + l_U1199)))
        {
            l_U1196 = 3;
            sub_88164();
            sub_58933( ref l_U1203, l_U1202 );
        }
        else if (l_U1215 > (fVar5 * (l_U1197 + l_U1198)))
        {
            l_U1196 = 2;
        }
        else if (l_U1215 > (fVar5 * l_U1197))
        {
            l_U1196 = 1;
        }
        else
        {
            l_U1196 = 0;
        };;;
    }
    fVar7 = sub_82859( l_U1218, l_U1219, l_U1215 );
    iVar8 = sub_88662( l_U1221, l_U1220, l_U1215 );
    l_U1217 += iVar4;
    switch (l_U1196)
    {
        case 0: break;
        case 1:
        if ((l_U1217 > iVar8) AND (bVar2))
        {
            SHAKE_GAMEPLAY_CAM( sub_88804(), fVar7 );
            l_U1217 = 0;
        }
        break;
        case 2:
        if ((l_U1217 > iVar8) AND (bVar2))
        {
            SHAKE_GAMEPLAY_CAM( sub_88804(), fVar7 );
            l_U1217 = 0;
        }
        break;
        case 3:
        if (sub_75915( ref l_U1203 ))
        {
            if (NOT (IS_PLAYER_DEAD( sub_32930() )))
            {
                SET_PLAYER_CONTROL( sub_32930(), 1, 0 );
            }
            sub_57845();
            l_U1196 = 0;
            ENABLE_CROSSHAIR( 1 );
            ENABLE_OVERHEAT_ICON( 1, "weap_hk_21e" );
            l_U1215 = 0.00000000;
            SET_OVERHEAT_AMOUNT( l_U1215 );
        }
        break;
        case 4:
        l_U1215 -= iVar4 * fVar6;
        if (l_U1215 <= 0.00000000)
        {
            l_U1196 = 0;
        }
        break;
        case 5: break;
    }
    l_U1215 = sub_82794( l_U1215, 0.00000000, 1.00000000 );
    l_U1216 = iVar3;
    SET_OVERHEAT_AMOUNT( l_U1215 );
    return;
}

void sub_88164()
{
    int iVar2;

    sub_3524( "GA", "P_RAIL_GUN_OVERHEATED start", 0 );
    if (NOT (IS_PLAYER_DEAD( sub_32930() )))
    {
        SET_PLAYER_CONTROL( sub_32930(), 0, 0 );
        REENABLE_PLAYER_INPUT( 14 );
        REENABLE_PLAYER_INPUT( 15 );
        REENABLE_PLAYER_INPUT( 16 );
        REENABLE_PLAYER_INPUT( 17 );
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ENABLE_CROSSHAIR( 0 );
    switch (l_U852)
    {
        case 1:
        iVar2 = 49;
        break;
        case 5:
        iVar2 = 50;
        break;
        case 0:
        iVar2 = 51;
        break;
        case 2:
        if (l_U853 == 0)
        {
            iVar2 = 52;
        }
        else
        {
            iVar2 = 53;
        }
        break;
        case 3:
        iVar2 = 53;
        break;
        case 4:
        iVar2 = 54;
        break;
    }
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        PED_SET_ACTION_INTENTION( sub_32908(), iVar2, 1000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_32908() ) );
    }
    sub_3524( "GA", "P_RAIL_GUN_OVERHEATED end", 0 );
    return;
}

void sub_88662(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return ROUND( ((1.00000000 - uParam2) * uParam0) + (uParam1 * uParam2) );
}

string sub_88804()
{
    return "JOLT_SHAKE";
}

void sub_89237()
{
    int iVar2;
    int iVar3;
    unknown uVar4;
    int I;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int J;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;

    iVar2 = l_U1665;
    switch (l_U1665)
    {
        case 0:
        if (l_U1666)
        {
            sub_3524( "SA", "e_Mangrove_CP_State = eMG_CP_MID_12_BLENDOUT", 0 );
            sub_89351( 1 );
            sub_90112();
            sub_62241( l_U1599 );
        }
        if (NOT sub_90358())
        {
            sub_90404();
        }
        if (sub_90865())
        {
            l_U1665 = 1;
        }
        break;
        case 1:
        if (l_U1666)
        {
            sub_3524( "SA", "e_Mangrove_CP_State = eMG_CP_GAMEPLAY", 0 );
        }
        sub_91055();
        if (NOT sub_90358())
        {
            sub_90404();
        }
        for ( iVar3 = 0; iVar3 < 19; iVar3++ )
        {
            if ((l_U4072 == 0) AND ((NOT l_U4040._fU20) AND ((sub_91086( g_U977, l_U1664, l_U2413[iVar3] )) AND (NOT l_U1690[iVar3]._fU112))))
            {
                if ((NOT (DOES_VEHICLE_EXIST( l_U1690[iVar3]._fU0 ))) AND ((l_U4036 < l_U4039) AND ((sub_91185( ref l_U1690 )) < l_U4031)))
                {
                    sub_89351( iVar3 );
                    sub_58933( ref l_U4911, 1000 );
                    l_U4920 = iVar3;
                    sub_58933( ref l_U4867, l_U4857 );
                }
                l_U1690[iVar3]._fU112 = 1;
            }
            if (sub_75915( ref l_U4911 ))
            {
                sub_91822( ref l_U1690[l_U4920] );
            }
            sub_92301();
            sub_92485( l_U1690[iVar3]._fU0 );
            sub_92571( l_U1690[iVar3]._fU0, l_U1690[iVar3]._fU56 );
            sub_92671( ref l_U1690[iVar3] );
            if ((NOT l_U1690[iVar3]._fU116) AND (l_U1690[iVar3]._fU112))
            {
                if ((NOT (IS_PED_DEAD( l_U1690[iVar3]._fU56 ))) AND (NOT (IS_VEHICLE_DEAD( l_U1690[iVar3]._fU0 ))))
                {
                    if (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U1690[iVar3]._fU0 )))
                    {
                        sub_40811( iVar3 );
                        sub_93453( l_U1690[iVar3]._fU0, l_U1690[iVar3]._fU56, g_U977, l_U4032, l_U4033, l_U4034, l_U4035 );
                        l_U1690[iVar3]._fU116 = 1;
                    }
                }
            }
            if (NOT (IS_VEHICLE_DEAD( l_U1690[iVar3]._fU0 )))
            {
                if (((GET_VEHICLE_PETROL_TANK_HEALTH( l_U1690[iVar3]._fU0 )) > -1.00000000) AND (NOT (IS_VEHICLE_IN_WATER( l_U1690[iVar3]._fU0 ))))
                {
                    SET_VEHICLE_PETROL_TANK_HEALTH( l_U1690[iVar3]._fU0, (GET_VEHICLE_PETROL_TANK_HEALTH( l_U1690[iVar3]._fU0 )) - 10.00000000 );
                }
                if (((GET_VEHICLE_PETROL_TANK_HEALTH( l_U1690[iVar3]._fU0 )) > -1.00000000) AND (IS_VEHICLE_UPSIDEDOWN( l_U1690[iVar3]._fU0 )))
                {
                    SET_VEHICLE_PETROL_TANK_HEALTH( l_U1690[iVar3]._fU0, (GET_VEHICLE_PETROL_TANK_HEALTH( l_U1690[iVar3]._fU0 )) - 10.00000000 );
                }
            }
            for ( I = 0; I <= 1; I++ )
            {
                sub_93895( ref l_U1690[iVar3], ref l_U2433[iVar3][I], 0, 1 );
                if ((IS_PED_DEAD( l_U2433[iVar3][I]._fU52 )) AND (DOES_PED_EXIST( l_U2433[iVar3][I]._fU52 )))
                {
                    if (NOT (IS_PED_ON_SCREEN( l_U2433[iVar3][I]._fU52, 0 )))
                    {
                        sub_40811( iVar3 );
                        sub_59585( l_U2433[iVar3][I]._fU52 );
                    }
                }
            }
            if ((IS_PED_DEAD( l_U1690[iVar3]._fU56 )) AND (DOES_PED_EXIST( l_U1690[iVar3]._fU56 )))
            {
                if (NOT (IS_PED_ON_SCREEN( l_U1690[iVar3]._fU56, 0 )))
                {
                    sub_40811( iVar3 );
                    sub_59585( l_U1690[iVar3]._fU56 );
                }
            }
            if ((IS_PED_DEAD( l_U1690[iVar3]._fU56 )) AND (DOES_VEHICLE_EXIST( l_U1690[iVar3]._fU0 )))
            {
                if (NOT (IS_VEHICLE_ON_SCREEN( l_U1690[iVar3]._fU0 )))
                {
                    uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U1690[iVar3]._fU0 )};
                    if ((sub_95399( sub_32908(), uVar6 )) > l_U4038)
                    {
                        sub_59783( l_U1690[iVar3]._fU0 );
                        for ( J = 0; J < l_U4011[iVar3]; J++ )
                        {
                            if ((NOT (IS_PED_DEAD( l_U2433[iVar3][J]._fU52 ))) AND (DOES_PED_EXIST( l_U2433[iVar3][J]._fU52 )))
                            {
                                sub_59585( l_U2433[iVar3][J]._fU52 );
                            }
                        }
                    }
                }
            }
        }
        sub_95638();
        if ((NOT l_U4040._fU20) AND (sub_91086( g_U977, l_U1664, l_U1662 )))
        {
            sub_3524( "GA", "Looping Passos' boat path.", 0 );
            sub_47272( g_U977, l_U1664, l_U1660, l_U1663, 0 );
            for ( iVar3 = 0; iVar3 < 19; iVar3++ )
            {
                l_U1690[iVar3]._fU112 = 0;
                l_U1690[iVar3]._fU116 = 0;
            }
            for ( iVar3 = 0; iVar3 < 6; iVar3++ )
            {
                l_U4082[iVar3]._fU164 = 0;
            }
            l_U4907 = 0;
        }
        for ( iVar3 = 0; iVar3 < 6; iVar3++ )
        {
            if (sub_75915( ref l_U4858 ))
            {
                sub_22697( ref l_U4858 );
            }
            if (sub_75915( ref l_U4867 ))
            {
                sub_22697( ref l_U4867 );
            }
            if ((l_U4072 == 0) AND ((NOT l_U4040._fU20) AND ((l_U4036 < (l_U4039 - 1)) AND ((sub_91086( g_U977, l_U1664, l_U4082[iVar3]._fU152 )) AND (NOT l_U4082[iVar3]._fU164)))))
            {
                if (sub_96237( ref l_U4082[iVar3] ))
                {
                    sub_96321( ref l_U4082[iVar3], iVar3 );
                    sub_58933( ref l_U4858, l_U4857 );
                }
                else
                {
                    l_U4082[iVar3]._fU164 = 1;
                }
            }
            if (DOES_VEHICLE_EXIST( l_U4082[iVar3]._fU0._fU0 ))
            {
                if ((NOT (IS_VEHICLE_ON_SCREEN( l_U4082[iVar3]._fU0._fU0 ))) AND (NOT (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U4082[iVar3]._fU0._fU0 ))))
                {
                    uVar10 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U4082[iVar3]._fU0._fU0 )};
                    if ((sub_95399( sub_32908(), uVar10 )) > l_U4038)
                    {
                        sub_60356( ref l_U4082[iVar3] );
                    }
                }
            }
            sub_92485( l_U4082[iVar3]._fU0._fU0 );
            sub_92571( l_U4082[iVar3]._fU0._fU0, l_U4082[iVar3]._fU0._fU56 );
            sub_92671( ref l_U4082[iVar3]._fU0 );
        }
        if ((l_U4072 == 0) AND ((NOT l_U4040._fU20) AND (l_U4036 >= l_U4039)))
        {
            if ((sub_91267() == 0) AND ((sub_91185( ref l_U1690 )) == 0))
            {
                sub_3524( "GA", "Player has destroyed enough boats to progress to the next checkpoint.", 0 );
                sub_58956( ref l_U4040 );
            }
        }
        if ((HAS_CUTSCENE_UNLOADED()) AND (NOT l_U4910))
        {
            sub_3524( "SA", "Requesting MID_12B_DOCKS_concat", 0 );
            l_U4910 = 1;
            sub_65026( "MID_12B_DOCKS_concat", 0 );
        }
        break;
    }
    if (iVar2 != l_U1665)
    {
        l_U1666 = 1;
    }
    else
    {
        l_U1666 = 0;
    }
    return;
}

void sub_89351(unknown uParam0)
{
    char[24] cVar3;
    int I;
    char[64] cVar10;

    StrCopy( ref cVar3, "Creating boat ", 24 );
    ConcatString(ref cVar3, uParam0, 24);
    sub_3524( "AT", ref cVar3, "[BOAT DEBUG]" );
    l_U1690[uParam0]._fU84 = l_U4049[l_U4036];
    switch (l_U4036)
    {
        case 0:
        l_U1690[uParam0]._fU148 = 14;
        break;
        case 1:
        l_U1690[uParam0]._fU148 = 15;
        break;
        case 2:
        l_U1690[uParam0]._fU148 = 16;
        break;
        case 3:
        l_U1690[uParam0]._fU148 = 17;
        break;
        case 4:
        l_U1690[uParam0]._fU148 = 18;
        break;
        case 5:
        l_U1690[uParam0]._fU148 = 19;
        break;
    }
    l_U4036++;
    sub_49872( ref l_U1690[uParam0], l_U1660, 1056964608, 1 );
    for ( I = 0; I < l_U4011[uParam0]; I++ )
    {
        StrCopy( ref cVar10, "Making RSG_Mangrove_Gunners[", 64 );
        ConcatString(ref cVar10, uParam0, 64);
        ConcatString(ref cVar10, "][", 64);
        ConcatString(ref cVar10, I, 64);
        ConcatString(ref cVar10, "]", 64);
        sub_3524( "AT", ref cVar10, 0 );
        l_U2433[uParam0][I]._fU56 = l_U4056[l_U4037];
        l_U4037++;
        sub_89815( uParam0, I, 0 );
    }
    return;
}

void sub_89815(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (l_U1683 < (l_U1667 - 1))
    {
        l_U1683++;
        l_U1667[l_U1683]._fU0 = uParam0;
        l_U1667[l_U1683]._fU4 = uParam1;
        l_U1667[l_U1683]._fU8 = uParam2;
        sub_3524( "GA", "Gunner added to mangrove boat stack.", 0 );
    }
    else
    {
        SCRIPT_ASSERT( "Failed to add a gunner to the Mangrove Boat Stack!", 0 );
        sub_3524( "GA", "Failed to add a gunner to the Mangrove Boat Stack!", 0 );
    }
    return;
}

void sub_90112()
{
    sub_3524( "GA", "P_MANGROVE_MID_12_BLENDOUT start", 0 );
    sub_68241( 1, 0, 0, 1 );
    SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
    CAMERA_PLAY_ANIMATED_ATTACHED_VEHICLE( "LEVEL_S_MARINA_RS_CP_08", "BLEND_OUT_MID_12_DOCKS_CAM_CAM", l_U1684, l_U1687, g_U977, 0, 0 );
    if (NOT sub_59229())
    {
        DO_SCREEN_FADE_IN( 0 );
    }
    sub_3524( "GA", "P_MANGROVE_MID_12_BLENDOUT end", 0 );
    return;
}

int sub_90358()
{
    if (l_U1683 > -1)
    {
        return 0;
        break;
    }
    return 1;
}

void sub_90404()
{
    unknown uVar2;
    unknown uVar3;
    char[64] cVar4;

    if (l_U1683 > -1)
    {
        uVar2 = l_U1667[l_U1683]._fU0;
        uVar3 = l_U1667[l_U1683]._fU4;
        StrCopy( ref cVar4, "Making RSG_Mangrove_Gunners[", 64 );
        ConcatString(ref cVar4, uVar2, 64);
        ConcatString(ref cVar4, "][", 64);
        ConcatString(ref cVar4, uVar3, 64);
        ConcatString(ref cVar4, "]", 64);
        sub_3524( "AT", ref cVar4, 0 );
        if (NOT l_U1667[l_U1683]._fU8)
        {
            sub_53883( ref l_U1690[uVar2], ref l_U2433[uVar2][uVar3], 1, 1, 1, 0, 0, 0, 0 );
            sub_90617( ref l_U2433[uVar2][uVar3]._fU52, 3.00000000, 100.00000000 );
            SET_PED_IGNORE_LOS_CHECKS( l_U2433[uVar2][uVar3]._fU52, 1 );
        }
        else
        {
            sub_53883( ref l_U4082[uVar2]._fU0, ref l_U4082[uVar2]._fU180[uVar3], 0, 1, 1, 0, 0, 0, 0 );
            sub_90617( ref l_U4082[uVar2]._fU180[uVar3]._fU52, 3.00000000, 100.00000000 );
            SET_PED_IGNORE_LOS_CHECKS( l_U4082[uVar2]._fU180[uVar3]._fU52, 0 );
        }
        l_U1683--;
    }
    return;
}

void sub_90617(unknown uParam0, float fParam1, float fParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        if (fParam1 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam1 );
        }
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam2 );
        }
    }
    return;
}

int sub_90865()
{
    if (CAMERA_ANIMATED_CURRENT_TIME() >= l_U1688)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U1463[4], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U1471[4], 1065353216, 0 );
        CAMERA_ANIMATED_STOP( l_U1689, 1 );
        sub_57764( 1, 1 );
        sub_58028();
        sub_58284();
        return 1;
    }
    return 0;
}

void sub_91055()
{
    if ((sub_91086( g_U977, l_U1664, l_U4922 )) AND (NOT l_U4921))
    {
        if ((NOT sub_84246()) AND ((sub_91267() == 0) AND ((sub_91185( ref l_U1690 )) == 0)))
        {
            sub_86330( "SMA2_GCMPE", 1, 2 );
            l_U4921 = 1;
        }
    }
    if ((l_U4036 >= 5) AND (NOT l_U4923))
    {
        if (NOT sub_84246())
        {
            sub_86330( "SMA2_BGBQK3", 1, 0 );
            l_U4923 = 1;
        }
    }
    return;
}

void sub_91086(unknown uParam0, int iParam1, float fParam2)
{
    int Result;

    Result = 0;
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            if ((GET_CURRENT_PLAYBACK_NUMBER_FOR_VEHICLE( uParam0 )) == iParam1)
            {
                if ((GET_TIME_POSITION_IN_RECORDING( uParam0 )) >= fParam2)
                {
                    Result = 1;
                }
            }
        }
    }
    return Result;
}

void sub_91185(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU56 )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_91267()
{
    int J;
    int I;
    int Result;

    Result = 0;
    for ( J = 0; J < 19; J++ )
    {
        for ( I = 0; I < l_U4011[J]; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U2433[J][I]._fU52 )))
            {
                Result++;
            }
        }
    }
    for ( J = 0; J < 6; J++ )
    {
        for ( I = 0; I < l_U4082[J]._fU176; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U4082[J]._fU180[I]._fU52 )))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_91822(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    float fVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;

    sub_3524( "SA", "P_RAIL_MANGROVE_PASSOS_POINT_AT_BOAT start", 0 );
    if ((NOT (IS_VEHICLE_DEAD( iParam0->_fU0 ))) AND (NOT (IS_VEHICLE_DEAD( g_U977 ))))
    {
        if (NOT (IS_SPHERE_VISIBLE( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( iParam0->_fU0 ), 0.10000000, 0 )))
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_FORWARD_VECTOR( g_U977 )};
            uVar6 = {sub_91991( (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( g_U977 ))) - (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( iParam0->_fU0 ))) )};
            fVar9 = GET_ANGLE_BETWEEN_2D_VECTORS( uVar3._fU0, uVar3._fU4, uVar6._fU0, uVar6._fU4 );
            if (fVar9 < 100.00000000)
            {
                uVar10 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", VECTOR_ROTATE_AXIS( uVar3, 90.00000000, "z" )};
                if ((GET_ANGLE_BETWEEN_2D_VECTORS( uVar10._fU0, uVar10._fU4, uVar6._fU0, uVar6._fU4 )) < 60.00000000)
                {
                    sub_58933( ref l_U935, 10 );
                }
                else
                {
                    sub_58933( ref l_U944, 10 );
                }
            }
            else if (fVar9 >= 100.00000000)
            {
                sub_58933( ref l_U926, 10 );
            }
        }
    }
    sub_3524( "SA", "P_RAIL_MANGROVE_PASSOS_POINT_AT_BOAT end", 0 );
    return;
}

void sub_91991(unknown uParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown Result;
    unknown uVar7;
    unknown uVar8;

    uVar5 = SQRT( ((uParam0._fU0 * uParam0._fU0) + (uParam0._fU4 * uParam0._fU4)) + (uParam0._fU8 * uParam0._fU8) );
    Result._fU0 = uParam0._fU0 / uVar5;
    Result._fU4 = uParam0._fU4 / uVar5;
    Result._fU8 = uParam0._fU8 / uVar5;
    return Result;
}

void sub_92301()
{
    if ((NOT (IS_VEHICLE_DEAD( l_U1690[l_U4920]._fU0 ))) AND (NOT (IS_PED_DEAD( g_U976 ))))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( g_U976, 56 )) == 3)
        {
            SET_PED_SHOOTS_AT_COORD( g_U976, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U1690[l_U4920]._fU0 ) );
            sub_92418( ref g_U976, 56 );
        }
    }
    return;
}

void sub_92418(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        PED_FINISH_ACTION_INTENTION( (uParam0^), uParam1 );
    }
    return;
}

void sub_92485(unknown uParam0)
{
    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        SET_VEHICLE_ENGINE_HEALTH( uParam0, TO_FLOAT( GET_VEHICLE_HEALTH( uParam0 ) ) );
    }
    return;
}

void sub_92571(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_VEHICLE_DEAD( uParam0 ))) || (DOES_VEHICLE_EXIST( uParam0 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( uParam0 ))
        {
            if ((IS_PED_DEAD( uParam1 )) || (IS_VEHICLE_DEAD( uParam0 )))
            {
                STOP_PLAYBACK_RECORDED_VEHICLE( uParam0 );
            }
        }
    }
    return;
}

void sub_92671(int iParam0)
{
    int iVar3;

    if ((NOT (IS_VEHICLE_DEAD( iParam0->_fU0 ))) || (DOES_VEHICLE_EXIST( iParam0->_fU0 )))
    {
        if (((GET_VEHICLE_PETROL_TANK_HEALTH( iParam0->_fU0 )) <= 0.00000000) AND (NOT iParam0->_fU132))
        {
            sub_3524( "GA", "Starting vehicle on fire particle effects.", 0 );
            iVar3 = GET_VEHICLE_MODEL( iParam0->_fU0 );
            if (iVar3 == g_U892)
            {
                iParam0->_fU128 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( l_U1228, iParam0->_fU0, l_U1229, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            }
            else if (iVar3 == g_U893)
            {
                iParam0->_fU128 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( l_U1232, iParam0->_fU0, l_U1233, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            }
            else if (iVar3 == g_U891)
            {
                iParam0->_fU128 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( l_U1236, iParam0->_fU0, l_U1237, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            }
            else if (iVar3 == g_U889)
            {
                iParam0->_fU128 = START_PARTICLE_FX_LOOPED_ON_VEHICLE( l_U1240, iParam0->_fU0, l_U1241, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            };;;;
            iParam0->_fU132 = 1;
        }
        if (((GET_VEHICLE_PETROL_TANK_HEALTH( iParam0->_fU0 )) <= -450.00000000) AND ((NOT iParam0->_fU136) AND (iParam0->_fU132)))
        {
            sub_3524( "GA", "On fire vehicle has exploded.", 0 );
            if (iParam0->_fU128 != 0)
            {
                sub_3524( "GA", "Stopping vehicle on fire particle effect.", 0 );
                STOP_PARTICLE_FX_LOOPED( iParam0->_fU128 );
                iParam0->_fU128 = 0;
            }
            iParam0->_fU136 = 1;
        }
    }
    return;
}

void sub_93453(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    sub_3524( "AT", "P_RAIL_AI_PILOT_BOAT start", 0 );
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND ((NOT (IS_VEHICLE_DEAD( uParam2 ))) AND (NOT (IS_VEHICLE_DEAD( uParam0 )))))
    {
        TASK_VEHICLE_MISSION( uParam1, uParam0, uParam2, 12, uParam3, 2, uParam4, uParam5, uParam6, 1127481344 );
    }
    sub_3524( "AT", "P_RAIL_AI_PILOT_BOAT end", 0 );
    return;
}

void sub_93895(int iParam0, int iParam1, boolean bParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if (((NOT (IS_VEHICLE_DEAD( iParam0->_fU0 ))) || (DOES_VEHICLE_EXIST( iParam0->_fU0 ))) AND (NOT (IS_PED_DEAD( iParam1->_fU52 ))))
    {
        if (NOT iParam1->_fU72)
        {
            if (bParam2)
            {
                if ((IS_PED_DEAD( iParam0->_fU56 )) AND (DOES_PED_EXIST( iParam0->_fU56 )))
                {
                    sub_3524( "GA", "Detected jump out event driver killed.", 0 );
                    iParam1->_fU72 = 1;
                }
            }
            if (bParam3)
            {
                if (((GET_VEHICLE_ENGINE_HEALTH( iParam0->_fU0 )) < 0.00000000) || ((GET_VEHICLE_PETROL_TANK_HEALTH( iParam0->_fU0 )) < 0.00000000))
                {
                    sub_3524( "GA", "Detected jump out event boat going to explode.", 0 );
                    iParam1->_fU72 = 1;
                }
            }
            if (iParam1->_fU72)
            {
                sub_58933( iParam1 + 76, GET_RANDOM_INT_IN_RANGE( l_U1226, l_U1227 ) );
            }
        }
        if (iParam1->_fU72)
        {
            if (sub_75915( iParam1 + 76 ))
            {
                sub_3524( "GA", "Starting gunner jump out of boat animation", 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( iParam1->_fU52, 1 );
                CLEAR_PED_TASKS( iParam1->_fU52 );
                PED_SET_ACTION_INTENTION( iParam1->_fU52, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            }
            if ((PED_GET_ACTION_INTENTION_STATUS( iParam1->_fU52, 55 )) == 3)
            {
                sub_3524( "GA", "Detaching gunner from boat during jump out.", 0 );
                SET_USE_ANIMATED_VELOCITY( iParam1->_fU52, 0 );
                "[doubled result, dropped if not asigned]";
                "[doubled result, dropped if not asigned]";
                SET_APPLY_WATER_PHYSICS_TO_RAGDOLL( iParam1->_fU52, 0 );
                SET_PED_FREEZE_ORIENTATION( iParam1->_fU52, 1 );
                DETACH_PED( iParam1->_fU52, 1 );
                SET_PED_COLLISION( iParam1->_fU52, 0 );
                uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_SPEED_VECTOR( iParam0->_fU0, 0 )};
                sub_40745( uVar6 );
                SET_PED_VELOCITY( iParam1->_fU52, uVar6 );
                PED_FINISH_ACTION_INTENTION( iParam1->_fU52, 55 );
            }
            if ((PED_GET_ACTION_INTENTION_STATUS( iParam1->_fU52, 56 )) == 3)
            {
                sub_3524( "GA", "Ragdoll gunner as they have cleared the boat.", 0 );
                uVar9 = {((vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( iParam1->_fU52, 49176, 0.00000000, 0.00000000, 0.00000000 ))) - iParam1->_fU148) / GET_FRAME_TIME()};
                SET_PED_VELOCITY( iParam1->_fU52, uVar9 );
                SET_PED_TO_RAGDOLL( iParam1->_fU52, 1000, 1000, 0, 0, 0, 1, -1056964608 );
                sub_58933( iParam1 + 112, 2000 );
                PED_FINISH_ACTION_INTENTION( iParam1->_fU52, 56 );
            }
            if (sub_75915( iParam1 + 112 ))
            {
                sub_3524( "GA", "Killing ped that jumped out of boat delayed after they hit the water.", 0 );
                sub_94912( iParam1->_fU52 );
            }
            if (NOT (IS_PED_DEAD( iParam1->_fU52 )))
            {
                iParam1->_fU148 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( iParam1->_fU52, 49176, 0.00000000, 0.00000000, 0.00000000 )};
            }
        }
    }
    return;
}

void sub_94912(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_95399(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

void sub_95638()
{
    if (l_U4907 < 18)
    {
        if (sub_91086( g_U977, l_U1664, l_U4888[l_U4907] ))
        {
            if (l_U4908)
            {
                sub_3524( "GA", "Stoping engine turning sound.", 0 );
                sub_60596( l_U4909, 0 );
                sub_60759( ref l_U4909 );
                l_U4908 = 0;
            }
            else
            {
                sub_3524( "GA", "Starting engine turning sound.", 0 );
                l_U4909 = GET_SOUND_ID();
                PLAY_SOUND_FRONTEND( l_U4909, "SMAR_BOAT_REV" );
                l_U4908 = 1;
            }
            l_U4907++;
        }
    }
    return;
}

int sub_96237(int iParam0)
{
    if ((NOT l_U4858._fU20) AND (NOT iParam0->_fU160))
    {
        if ((NOT iParam0->_fU168) || (NOT l_U4867._fU20))
        {
            return 1;
        }
    }
    return 0;
}

void sub_96321(int iParam0, unknown uParam1)
{
    int I;

    iParam0->_fU160 = 1;
    if (iParam0->_fU172 == 0)
    {
        sub_49872( iParam0 + 0, iParam0->_fU512, 1056964608, 1 );
    }
    else if (iParam0->_fU172 == 1)
    {
        sub_96410( iParam0 + 0, iParam0->_fU512, 1056964608 );
    }
    for ( I = 0; I < iParam0->_fU176; I++ )
    {
        sub_89815( uParam1, I, 1 );
    }
    if ((NOT (IS_VEHICLE_DEAD( ref iParam0->_fU0->_fU0 ))) AND (iParam0->_fU156))
    {
        SET_PED_VISIBLE( ref iParam0->_fU0->_fU56, 0 );
        SET_VEHICLE_ENGINE_ON( ref iParam0->_fU0->_fU0, 0, 1 );
        SET_VEHICLE_LIGHTS( ref iParam0->_fU0->_fU0, 1 );
        if (iParam0->_fU172 == 0)
        {
            SET_VEHICLE_ENGINE_HEALTH( ref iParam0->_fU0->_fU0, 200.00000000 );
        }
    }
    return;
}

void sub_96410(int iParam0, unknown uParam1, unknown uParam2)
{
    sub_3524( "AT", "P_RAIL_CREATE_MINIBOAT start", 0 );
    iParam0->_fU0 = sub_42343( 1452847618, iParam0->_fU88, iParam0->_fU100, 0, 0, 0 );
    iParam0->_fU56 = sub_44942( iParam0 + 4, iParam0->_fU0, -1, 0, 0 );
    if (NOT (IS_PED_DEAD( iParam0->_fU56 )))
    {
        sub_35159( iParam0->_fU56, 68019059, 25000, 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( iParam0->_fU56, 1 );
        SET_PED_DIES_IN_SINKING_VEHICLE( iParam0->_fU56, 1 );
        SET_PED_DIES_IN_WATER( iParam0->_fU56, 1 );
        SET_PED_DIES_INSTANTLY_IN_WATER( iParam0->_fU56, 1 );
        SET_PED_DIES_IN_VEHICLE( iParam0->_fU56, 1 );
        SET_PERSISTENT_PED_VARIATION( iParam0->_fU56, iParam0->_fU84 );
    }
    if (NOT (IS_VEHICLE_DEAD( iParam0->_fU0 )))
    {
        SET_VEHICLE_ENGINE_ON( iParam0->_fU0, 1, 1 );
        SET_VEHICLE_LIGHTS( iParam0->_fU0, 2 );
        SET_BOAT_WILL_SINK( iParam0->_fU0, 0 );
        SET_VEHICLE_STRONG( iParam0->_fU0, 1 );
        SET_VEHICLE_PROOFS( iParam0->_fU0, 1, 1, 1, 1, 1 );
    }
    sub_50362( iParam0 + 60, uParam2, 0 );
    sub_47272( iParam0->_fU0, iParam0->_fU108, uParam1, iParam0->_fU104, 0 );
    iParam0->_fU112 = 1;
    iParam0->_fU128 = 0;
    iParam0->_fU132 = 0;
    iParam0->_fU136 = 0;
    sub_3524( "AT", "P_RAIL_CREATE_MINIBOAT end", 0 );
    return;
}

int sub_97631()
{
    sub_3524( "SA", "F_PIER_MID_12B_PRE_CUTSCENE", 0 );
    if (sub_49653())
    {
        sub_46058( 10 );
        return 1;
    }
    return 0;
}

void sub_97711()
{
    unknown uVar2;

    sub_3524( "GA", "P_PIER_MID_12B_REGISTRATION start", 0 );
    SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY_WINDY" );
    CUTSCENE_ENABLE_SKIP( 0 );
    if (NOT (IS_PED_DEAD( g_U976 )))
    {
        sub_3524( "MF", "Registering Passos script ped with midscene MID_08D_DOCKS", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U976, "Pass_Dock", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U976, "/Global/VehicleBoat/Driver/MAX_BOAT/DRIVER_ANIMS" );
        uVar2 = GET_WEAPON_FROM_HAND( g_U976, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            sub_3524( "GA", "Registering Passos pistol with cutscene.", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_PT92_Aa_H^1", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_32908(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            sub_3524( "GA", "Registering Max's weapon with cutscene.", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_MG_21E_Aa_H", 0 );
        }
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_32908(), "/Global/s_marina_drv/MAX_VIGNETTE_EXIT/MAX_VIGNETTE_EXIT_TO_BACK_RIGHT_TO_LEFT" );
        DETACH_PED( sub_32908(), 1 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U977, "boat_rs", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( sub_32908(), g_U977, 0, l_U1415, l_U1455[5], 360.00000000, 1, 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( l_U5045[1]._fU0 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U5045[1]._fU0, "boat_chase", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U5045[1]._fU56 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5045[1]._fU56, "Sero_Unif_1", 0 );
    }
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "G_CS_RAIL_A^2", 364999639 );
    if (NOT (IS_PED_DEAD( l_U5123[9]._fU52 )))
    {
        sub_58533( l_U5123[9]._fU52 );
        DETACH_PED( l_U5123[9]._fU52, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5123[9]._fU52, "G_CS_RAIL_A^1", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U5123[9]._fU52, 0, 0 ), "W_AR_AK47_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( l_U5123[9]._fU52, l_U5045[1]._fU0, 0, l_U1252[l_U5123[9]._fU64], 90.00000000, 360.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U5123[9]._fU52, "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
    }
    if (NOT (IS_PED_DEAD( l_U5123[10]._fU52 )))
    {
        sub_58533( l_U5123[10]._fU52 );
        DETACH_PED( l_U5123[10]._fU52, 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5123[10]._fU52, "G_CS_RAIL_A^3", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U5123[10]._fU52, 0, 0 ), "W_SB_Uzi_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( l_U5123[10]._fU52, l_U5045[1]._fU0, 0, l_U1252[l_U5123[10]._fU64], 90.00000000, 360.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U5123[10]._fU52, "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
    }
    if (NOT (IS_VEHICLE_DEAD( l_U5045[0]._fU0 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U5045[0]._fU0, "boat_chase^1", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U5045[0]._fU56 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5045[0]._fU56, "G_CS_RAIL_A", 0 );
        SET_PED_COORDS( l_U5045[0]._fU56, (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U5045[0]._fU56 ))) - (vector( 0.00000000, 0.00000000, 1.00000000)), 0 );
    }
    if (NOT (IS_PED_DEAD( l_U5123[5]._fU52 )))
    {
        sub_58533( l_U5123[5]._fU52 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5123[5]._fU52, "G_CS_RAIL_A^8", 0 );
        DETACH_PED( l_U5123[5]._fU52, 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( l_U5123[5]._fU52, l_U5045[0]._fU0, 0, l_U1252[l_U5123[5]._fU64], 90, 360.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U5123[5]._fU52, "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U5123[5]._fU52, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_SB_Uzi_Aa_H^1", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U5123[6]._fU52 )))
    {
        sub_58533( l_U5123[6]._fU52 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5123[6]._fU52, "G_CS_RAIL_A^9", 0 );
        DETACH_PED( l_U5123[6]._fU52, 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( l_U5123[6]._fU52, l_U5045[0]._fU0, 0, l_U1252[l_U5123[6]._fU64], 90, 360.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U5123[6]._fU52, "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U5123[6]._fU52, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_PT92_Aa_H^2", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U5123[7]._fU52 )))
    {
        sub_58533( l_U5123[7]._fU52 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5123[7]._fU52, "G_CS_RAIL_A^7", 0 );
        DETACH_PED( l_U5123[7]._fU52, 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( l_U5123[7]._fU52, l_U5045[0]._fU0, 0, l_U1252[l_U5123[7]._fU64], 90, 360.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U5123[7]._fU52, "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U5123[7]._fU52, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_AR_AK47_Aa_H^2", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U5123[8]._fU52 )))
    {
        sub_58533( l_U5123[8]._fU52 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5123[8]._fU52, "G_CS_RAIL_A^6", 0 );
        DETACH_PED( l_U5123[8]._fU52, 0 );
        CUTSCENE_REGISTER_PED_ATTACH_TO_VEHICLE( l_U5123[8]._fU52, l_U5045[0]._fU0, 0, l_U1252[l_U5123[8]._fU64], 90, 360.00000000, 1, 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U5123[8]._fU52, "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE" );
        uVar2 = GET_WEAPON_FROM_HAND( l_U5123[8]._fU52, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_AR_AK47_Aa_H^3", 0 );
        }
    }
    if (IS_ANIMATED_CAMERA_PLAYING())
    {
        CAMERA_ANIMATED_STOP( 3000, 0 );
    }
    sub_3524( "GA", "P_PIER_MID_12B_REGISTRATION end", 0 );
    return;
}

void sub_100615()
{
    if (NOT l_U5587)
    {
        sub_62241( l_U1604 );
        sub_47272( g_U977, l_U4929, 0.00000000, l_U4927, 0 );
        sub_60462();
        sub_83280( 0, 0, 0, -859915232, -859915232, 0 );
        l_U5587 = 1;
    }
    if ((GET_CUTSCENE_TIME_MS() > 5259) AND (NOT l_U5588))
    {
        sub_62241( l_U1609 );
        l_U5588 = 1;
    }
    return;
}

int sub_100751()
{
    sub_3524( "SA", "F_PIER_MID_12B_POST_CUTSCENE", 0 );
    return 1;
}

int sub_100817()
{
    return 1;
}

void sub_100836()
{
    return;
}

int sub_100854()
{
    switch (l_U4072)
    {
        case 1:
        sub_3524( "GA", "Start MID_12B_DOCKS blend in.", 0 );
        STOP_SCRIPT_STREAM( 1 );
        sub_48463( l_U1507, 2 );
        AUDIO_MUSIC_REQUEST_ONESHOT( l_U1619._fU0, 0 );
        sub_58933( ref l_U4073, 2000 );
        sub_100993( 10000 );
        l_U4072 = 2;
        break;
        case 2:
        sub_82044( g_U977, sub_82859( l_U1660, 1.75000000, sub_82713( ref l_U4073 ) ) );
        if (sub_75915( ref l_U4073 ))
        {
            sub_3524( "GA", "Showing Passos' boat exit the Mangrove - Driveby.", 0 );
            sub_47272( g_U977, l_U4071, 1.25000000, 4500.00000000, 0 );
            sub_46058( 9 );
            sub_62966();
            sub_63075();
            sub_68241( 1, 0, 0, 1 );
            WAIT( 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_MARINA_RS_CP_09", "B_IN_MID_12B_DOCKS_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            sub_86330( "SMA2_GCMPB", 1, 2 );
            l_U4072 = 3;
        }
        break;
        case 3:
        if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_MARINA_RS_CP_09", "B_IN_MID_12B_DOCKS_CAM" )) - 50))
        {
            l_U4072 = 4;
        }
        break;
    }
    if (l_U4072 == 4)
    {
        return 1;
        break;
    }
    return 0;
}

void sub_100993(unknown uParam0)
{
    sub_3524( "[SA]", "P_SUPPRESS_AMBIENT_DIALOG()", 0 );
    sub_22377( ref l_U975, uParam0, 1, 0 );
    sub_58956( ref l_U975 );
    return;
}

void sub_101489(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    sub_3524( "MSWW", "CutSys_CreateCutsceneWithBlendOutAndBlendIn", "###" );
    return sub_101593( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam11, 1, uParam6, uParam7, 1, uParam8, uParam9, uParam10 );
}

void sub_101593(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_101917(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_3524( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_3524( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_3524( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_3524( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_3524( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_3524( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_65026( iParam0->_fU0, 0 );
            sub_3524( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_68241( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_68241( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_3524( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_103158( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_68241( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_57764( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_57764( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_103158(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_32908(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_32908(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_32908(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_32908(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_32908(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_103676()
{
    int I;

    sub_103705( ref l_U5693, l_U5690, l_U5691, l_U5692 );
    sub_87775( l_U5045[1]._fU0 );
    if (sub_75915( ref l_U5577 ))
    {
        l_U990 = 1;
    }
    if (NOT l_U5616)
    {
        if (HAS_CUTSCENE_UNLOADED())
        {
            sub_65026( "MID_13_DOCKS_concat", 0 );
            l_U5616 = 1;
        }
    }
    if ((sub_91086( g_U977, l_U4929, l_U5612 )) AND ((NOT sub_84246()) AND (NOT l_U5613)))
    {
        sub_86330( "SMA2_GCMPF", 1, 2 );
        l_U5613 = 1;
    }
    if ((sub_91086( g_U977, l_U4929, l_U5614 )) AND ((NOT sub_84246()) AND (NOT l_U5615)))
    {
        sub_86330( "SMA2_MXSGCL", 1, 0 );
        l_U5615 = 1;
    }
    if (sub_75915( ref l_U5589 ))
    {
        if (AUDIO_MUSIC_IS_ONESHOT_PREPARED( l_U1619._fU0 ))
        {
            AUDIO_MUSIC_STOP_ONESHOT();
        }
        AUDIO_MUSIC_PRELOAD_ONESHOT( l_U1624._fU0, 0 );
    }
    sub_87775( l_U5045[0]._fU0 );
    sub_92571( l_U5045[0]._fU0, l_U5045[0]._fU56 );
    for ( I = 0; I <= (3 - 1); I++ )
    {
        sub_92485( l_U4930[I]._fU0 );
        sub_92571( l_U4930[I]._fU0, l_U4930[I]._fU56 );
        sub_92671( ref l_U4930[I] );
    }
    sub_93895( ref l_U4930[0], ref l_U5123[0], 1, 1 );
    sub_93895( ref l_U4930[0], ref l_U5123[1], 1, 1 );
    sub_93895( ref l_U4930[1], ref l_U5123[2], 1, 1 );
    sub_93895( ref l_U4930[1], ref l_U5123[3], 1, 1 );
    sub_93895( ref l_U4930[2], ref l_U5123[4], 1, 1 );
    if ((sub_91086( g_U977, l_U4929, l_U5618 )) AND (NOT l_U5619))
    {
        sub_3524( "MF", "Enabling Blend In", 0 );
        l_U990 = 0;
        sub_86942( "SMA2_MID13DKS", 0, 1, 0 );
        sub_104444();
        l_U5619 = 1;
        sub_22377( ref l_U6173, 200, 1, 0 );
        sub_58956( ref l_U6173 );
        l_U6125 = 1;
    }
    if (l_U5619)
    {
        if (l_U6125 != 4)
        {
            sub_63477();
        }
        sub_105754();
    }
    if (sub_75915( ref l_U6173 ))
    {
        sub_3524( "CO", "PLAYING IMAGEFX", 0 );
        PLAY_IMAGEFX( "GAMMA_SATURATION_COLOR_ZOOM", 4, 1 );
        PLAY_IMAGEFX( "FLICKER_VIBRATE_01", 4, 1 );
        PLAY_IMAGEFX( "FLICKER_VIBRATE_01", 4, 1 );
    }
    sub_106468( ref l_U4930 );
    sub_106675( ref l_U5123 );
    return;
}

void sub_103705(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    if (l_U1659)
    {
        if (NOT iParam0->_fU20)
        {
            sub_58933( iParam0, GET_RANDOM_INT_IN_RANGE( uParam1, uParam2 ) );
        }
        if (sub_75915( iParam0 ))
        {
            SHAKE_GAMEPLAY_CAM( sub_88804(), uParam3 );
            sub_58933( iParam0, GET_RANDOM_INT_IN_RANGE( uParam1, uParam2 ) );
        }
    }
    return;
}

void sub_104444()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;
    unknown uVar51;
    unknown uVar52;
    unknown uVar53;
    unknown uVar54;
    unknown uVar55;
    unknown uVar56;
    unknown uVar57;
    unknown uVar58;
    unknown uVar59;
    unknown uVar60;
    unknown uVar61;
    unknown uVar62;
    unknown uVar63;
    unknown uVar64;
    unknown uVar65;
    unknown uVar66;

    sub_3524( "SA", "P_PIER_MID_13_DOCKS - START", 0 );
    sub_47622( l_U5617, "LEVEL_S_MARINA_RS_CP_09", "/LEVEL/S_MARINA/S_MAR_MID_13_BLEND_IN.act", "/Global/S_MAR_MID_13_BLEND_IN/SEQ_START", 1 );
    sub_62241( l_U1624 );
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        sub_68241( 1, 0, 0, 1 );
        sub_48361( l_U5617, "pas_mid_13_blendin", g_U976 );
        sub_48361( l_U5617, "max_mid_13_blendin", sub_32908() );
        I_SEQUENCE_START( l_U5617 );
        sub_104742( ref uVar2, 1 );
        uVar33 = {(vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD())) - (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_32908() )))};
        ATTACH_CAM_TO_PED( uVar2._fU0, sub_32908(), uVar33, 0 );
        sub_79732( ref uVar36, l_U5620, l_U5623, GET_GAMEPLAY_CAM_FOV(), 10000 );
        ATTACH_CAM_TO_PED( uVar36._fU0, sub_32908(), l_U5620, 1 );
        sub_81384( ref uVar2, ref uVar36, l_U5626, 1, 1 );
        sub_105080( ref l_U5627, 4, 5.00000000, 10, -1, -1, 0, 0 );
        sub_105564( ref l_U5627 );
        sub_58933( ref l_U5676, l_U5685 );
    }
    sub_3524( "SA", "P_PIER_MID_13_DOCKS - END", 0 );
    return;
}

void sub_104742(int iParam0, unknown uParam1)
{
    iParam0->_fU4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
    iParam0->_fU16 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD()};
    iParam0->_fU28 = GET_GAMEPLAY_CAM_FOV();
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam1;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU96 = 0;
    sub_22377( iParam0 + 48, uParam1, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U2, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_105080(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (iParam0->_fU168 == 0)
    {
        sub_105108( iParam0, uParam1 );
        iParam0->_fU192 = uParam1;
        iParam0->_fU36 = uParam2;
        iParam0->_fU148 = uParam3;
        iParam0->_fU152 = uParam4;
        iParam0->_fU156 = uParam5;
        iParam0->_fU160 = uParam7;
        iParam0->_fU176 = uParam6;
    }
    sub_56125( iParam0 + 40 );
    sub_56125( iParam0 + 76 );
    sub_56125( iParam0 + 112 );
    iParam0->_fU172 = iParam0->_fU176;
    iParam0->_fU164 = 0;
    iParam0->_fU168 = 1;
    iParam0->_fU184 = 0;
    iParam0->_fU188 = 0;
    return;
}

void sub_105108(int iParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case 1:
        StrCopy( ref iParam0->_fU4, "SMALL_EXPLOSION_SHAKE", 32 );
        break;
        case 2:
        StrCopy( ref iParam0->_fU4, "MEDIUM_EXPLOSION_SHAKE", 32 );
        break;
        case 3:
        StrCopy( ref iParam0->_fU4, "LARGE_EXPLOSION_SHAKE", 32 );
        break;
        case 4:
        StrCopy( ref iParam0->_fU4, "HAND_SHAKE", 32 );
        break;
        case 5:
        StrCopy( ref iParam0->_fU4, "JOLT_SHAKE", 32 );
        break;
        case 6:
        StrCopy( ref iParam0->_fU4, "VIBRATE_SHAKE", 32 );
        break;
        case 7:
        StrCopy( ref iParam0->_fU4, "WOBBLY_SHAKE", 32 );
        break;
    }
    iParam0->_fU0 = iParam0->_fU192;
    return;
}

void sub_105564(int iParam0)
{
    sub_56125( iParam0 + 40 );
    sub_56125( iParam0 + 76 );
    sub_56125( iParam0 + 112 );
    iParam0->_fU172 = 1;
    iParam0->_fU164 = 0;
    return;
}

void sub_105754()
{
    sub_105768( ref l_U5627 );
    sub_82044( g_U977, sub_82859( l_U4926, l_U5686, sub_82713( ref l_U5676 ) ) );
    return;
}

void sub_105768(int iParam0)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam0->_fU164 == 0)
        {
            sub_22377( iParam0 + 40, iParam0->_fU148, 1, 0 );
            sub_58956( iParam0 + 40 );
            if (iParam0->_fU152 > 0)
            {
                sub_22377( iParam0 + 76, iParam0->_fU152, 1, 0 );
                sub_58956( iParam0 + 76 );
            }
            iParam0->_fU164 = 1;
        }
        if (sub_75915( iParam0 + 40 ))
        {
            sub_3524( "ML", "P_HANDLE_CAM_SHAKE is shaking the camera", "---" );
            sub_105976( iParam0 + 4, iParam0->_fU36 );
            if (iParam0->_fU156 > 0)
            {
                sub_22377( iParam0 + 112, iParam0->_fU156, 1, 0 );
                sub_58956( iParam0 + 112 );
            }
        }
        if (sub_75915( iParam0 + 112 ))
        {
            sub_105976( iParam0 + 4, iParam0->_fU36 );
            sub_22377( iParam0 + 112, iParam0->_fU156, 1, 0 );
            sub_58956( iParam0 + 112 );
        }
        if (sub_75915( iParam0 + 76 ))
        {
            sub_3524( "ML", "P_HANDLE_CAM_SHAKE is done shaking the camera", "---" );
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
            sub_56125( iParam0 + 112 );
            iParam0->_fU172 = 0;
        }
    }
    return;
}

void sub_105976(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    SHAKE_GAMEPLAY_CAM( uParam0, uParam1 );
    return;
}

void sub_106468(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    int I;

    iVar3 = (uParam0^);
    for ( I = 0; I < iVar3; I++ )
    {
        if (DOES_VEHICLE_EXIST( (uParam0^)[I]._fU0 ))
        {
            uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( (uParam0^)[I]._fU0 )};
            if (uVar4._fU8 < -10.00000000)
            {
                sub_59783( (uParam0^)[I]._fU0 );
            }
        }
        if (DOES_PED_EXIST( (uParam0^)[I]._fU56 ))
        {
            uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I]._fU56 )};
            if (uVar4._fU8 < -10.00000000)
            {
                sub_59585( (uParam0^)[I]._fU56 );
            }
        }
    }
    return;
}

void sub_106675(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    int I;

    iVar3 = (uParam0^);
    for ( I = 0; I < iVar3; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I]._fU52 ))
        {
            uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( (uParam0^)[I]._fU52 )};
            if (uVar4._fU8 < -10.00000000)
            {
                sub_59585( (uParam0^)[I]._fU52 );
            }
        }
    }
    return;
}

void sub_106882()
{
    switch (l_U5702)
    {
        case 1:
        if (sub_106944())
        {
            sub_3524( "SA", "MID_13_DOCKS blendout ending.", 0 );
            sub_107334();
            sub_58028();
            l_U5702 = 2;
        }
        break;
        case 2:
        sub_107687();
        if ((sub_83559( ref l_U5822 )) < l_U5820)
        {
            sub_107801( ref l_U5822 );
        }
        if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND (l_U1003 < 0.00000000))
        {
            sub_3524( "GA", "Player has failed MPM by not killing enough enemies in time.", 0 );
            sub_108501();
            l_U5702 = 3;
            break;
        }
        if ((IS_PED_DEAD( l_U6124 )) AND (DOES_PED_EXIST( l_U6124 )))
        {
            sub_3524( "GA", "The player has shot Fabiana.", 0 );
            if (NOT (IS_VEHICLE_DEAD( l_U5703[0]._fU0 )))
            {
                if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( l_U5703[0]._fU0 ))
                {
                    STOP_PLAYBACK_RECORDED_VEHICLE( l_U5703[0]._fU0 );
                }
                FREEZE_VEHICLE_POSITION( l_U5703[0]._fU0, 1 );
            }
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            sub_108938();
            l_U990 = 0;
            l_U5702 = 4;
            break;
        }
        if (((sub_83559( ref l_U5822 )) < l_U5821) AND (NOT (IS_PED_DEAD( l_U6124 ))))
        {
            sub_3524( "GA", "Player has successfully killed the required number of enemies.", 0 );
            l_U990 = 0;
            if (IS_BULLET_CAMERA_ACTIVE())
            {
                if (IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED() == 1)
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                }
            }
            sub_108938();
            sub_65026( "05_04_DOCKS_concat", 0 );
            l_U6171 = 1;
            END_CONTEXT( "BOATCHASE_MPM" );
            if (NOT (IS_PED_DEAD( l_U6124 )))
            {
                SET_PED_PROOFS( l_U6124, 0, 0, 0, 0, 0 );
                SET_PED_GORE( l_U6124, 0 );
            }
            l_U5702 = 5;
            break;
        }
        break;
        case 4:
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            sub_3524( "GA", "Fabiana shot bullet cam complete.", 0 );
            DO_SCREEN_FADE_OUT( 0 );
            WAIT( 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            while ((sub_75726( 1 )) == 0)
            {
                WAIT( 0 );
            }
            sub_109797();
            l_U850 = 1;
            l_U5702 = 6;
        }
        break;
        case 3:
        sub_110215();
        sub_109797();
        l_U5702 = 6;
        break;
        case 5:
        if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
        {
            sub_3524( "MF", "MPM HAS BEEN COMPLETED SUCCESSFULLY", 0 );
            sub_65026( "05_04_DOCKS_concat", 1 );
            sub_109797();
            l_U5702 = 6;
            l_U6170 = 1;
        }
        break;
    }
    return;
}

int sub_106944()
{
    if (NOT l_U6172)
    {
        sub_46058( 13 );
        WAIT( 0 );
        if (NOT sub_59229())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        l_U6172 = 1;
    }
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( sub_32908(), 49 )) == 3)
        {
            sub_3524( "SA", "Telling Max to drop his machine gun.", 0 );
            REMOVE_PED_WEAPON( sub_32908(), GET_WEAPON_FROM_HOLSTER( sub_32908(), 2 ) );
            PED_FINISH_ACTION_INTENTION( sub_32908(), 49 );
        }
    }
    if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_MARINA_RS_CP_10", "BLEND_OUT_MID_13_DOCKS_CAM" )) - 1))
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U1463[6], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U1471[6], 1065353216, 0 );
        CAMERA_ANIMATED_STOP( l_U5810, 1 );
        sub_57764( 1, 1 );
        return 1;
    }
    return 0;
}

void sub_107334()
{
    sub_3524( "GA", "P_RAIL_MPM_START start", 0 );
    sub_58028();
    SET_SECONDARY_LIFE_BAR_PERCENT( l_U1002 / 100 );
    if (NOT (IS_VEHICLE_DEAD( l_U5045[1]._fU0 )))
    {
        SET_PLAYBACK_SPEED( l_U5045[1]._fU0, l_U6130 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        SET_PLAYBACK_SPEED( g_U977, l_U6130 );
    }
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        PLAYER_SET_AIM_MODE( 1 );
        SET_PED_REACT_TO_CAR_COLLISION( sub_32908(), 0 );
        SET_PED_INVINCIBLE( sub_32908(), 1 );
    }
    if (GET_ADRENALINE_AMT() < 1.00000000)
    {
        SET_ADRENALINE_AMT( 1.00000000 );
    }
    ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
    DO_SCREEN_FADE_IN( 0 );
    sub_100993( 60000 );
    l_U1480 = 1;
    START_CONTEXT( "BOATCHASE_MPM" );
    sub_3524( "GA", "P_RAIL_MPM_START end", 0 );
    return;
}

void sub_107687()
{
    int I;

    for ( I = 0; I < 7; I++ )
    {
        if (IS_PED_DEAD( l_U5822[I]._fU52 ))
        {
            CLEAR_PED_TASKS( l_U5822[I]._fU52 );
        }
    }
    return;
}

void sub_107801(unknown uParam0)
{
    int Result;
    int I;

    Result = 0;
    if ((sub_83559( uParam0 )) > 0)
    {
        for ( I = 0; I < (uParam0^); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I]._fU52 )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I]._fU52 )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I]._fU52, 1 );
                    if ((I == 1) || (I == 0))
                    {
                        SET_BULLET_CAM_PREF( (uParam0^)[I]._fU52, "DOCKS_JUMP_CUSTOM_01C", "DOCKS_JUMP_CUSTOM_01C", "DOCKS_JUMP_CUSTOM_01C", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                    }
                    else if ((I == 5) || (I == 2))
                    {
                        SET_BULLET_CAM_PREF( (uParam0^)[I]._fU52, "DOCKS_JUMP_CUSTOM_01D", "DOCKS_JUMP_CUSTOM_01D", "DOCKS_JUMP_CUSTOM_01D", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                    }
                    else if ((I == 4) || (I == 3))
                    {
                        SET_BULLET_CAM_PREF( (uParam0^)[I]._fU52, "DOCKS_JUMP_CUSTOM_01E", "DOCKS_JUMP_CUSTOM_01E", "DOCKS_JUMP_CUSTOM_01E", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                    }
                    else
                    {
                        SET_BULLET_CAM_PREF( (uParam0^)[I]._fU52, "DOCKS_JUMP_CUSTOM_01", "DOCKS_JUMP_CUSTOM_01", "DOCKS_JUMP_CUSTOM_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                    };;;
                    Result++;
                }
            }
        }
    }
    return Result;
}

void sub_108501()
{
    int I;

    sub_3524( "GA", "P_MPM_PREVENT_BULLET_CAM start", 0 );
    for ( I = 0; I < l_U5822; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U5822[I]._fU52 )))
        {
            SET_PED_CAN_TRIGGER_BULLET_CAM( l_U5822[I]._fU52, 0 );
            SET_PED_PROOFS( l_U5822[I]._fU52, 1, 1, 1, 1, 1 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U6124 )))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U6124, 0 );
        SET_PED_PROOFS( l_U6124, 1, 1, 1, 1, 1 );
    }
    sub_3524( "GA", "P_MPM_PREVENT_BULLET_CAM end", 0 );
    return;
}

void sub_108938()
{
    int I;

    sub_3524( "MF", "P_MPM_STOP_CS_SHOOTING - START", 0 );
    for ( I = 0; I < l_U5822; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U5822[I]._fU52 )))
        {
            sub_109051( l_U5822[I]._fU52 );
        }
    }
    sub_3524( "MF", "P_MPM_STOP_CS_SHOOTING - END", 0 );
    return;
}

void sub_109051(unknown uParam0)
{
    sub_3524( "GA", "P_RAIL_WAIT_TO_ATTACK_PLAYER_BOAT start", 0 );
    if ((NOT (IS_VEHICLE_DEAD( g_U977 ))) AND (NOT (IS_PED_DEAD( uParam0 ))))
    {
        SET_PED_SEEING_RANGE( uParam0, 200.00000000, 75 );
        SET_PED_HEARING_RANGE( uParam0, 200.00000000 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 200.00000000 );
        SET_PED_EMOTION_STATE( uParam0, 1 );
        SET_PED_COMBAT_MOVEMENT( uParam0, 0 );
        if (NOT (IS_PED_DEAD( sub_32908() )))
        {
            REGISTER_TARGET( uParam0, sub_32908() );
        }
        TASK_AIM_GUN_AT_VEHICLE( uParam0, g_U977, 0, 0.00000000, 0.00000000, 0.75000000, -1, 1 );
    }
    sub_3524( "GA", "P_RAIL_WAIT_TO_ATTACK_PLAYER_BOAT end", 0 );
    return;
}

void sub_109797()
{
    sub_3524( "GA", "P_RAIL_MPM_TERMINATE start", 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U5045[1]._fU0 )))
    {
        SET_PLAYBACK_SPEED( l_U5045[1]._fU0, l_U5742 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        SET_PLAYBACK_SPEED( g_U977, l_U5742 );
    }
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        PLAYER_SET_AIM_MODE( 2 );
        SET_PED_REACT_TO_CAR_COLLISION( sub_32908(), 1 );
    }
    if ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (NOT (IS_PED_DEAD( l_U6124 ))))
    {
        SET_PED_CAN_TRIGGER_BULLET_CAM( l_U6124, 0 );
        SET_PED_AS_ONE_SHOT_KILL( l_U6124, 0 );
    }
    DEACTIVATE_BULLET_TIME( 0, 0 );
    ENABLE_CROSSHAIR( 0 );
    DISPLAY_HUD( 0 );
    SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        SET_PED_VISIBLE( sub_32908(), 1 );
    }
    if (NOT (IS_PED_DEAD( g_U976 )))
    {
        SET_PED_VISIBLE( g_U976, 1 );
    }
    STOP_SCRIPT_STREAM( 0 );
    REMOVE_PARTICLE_FX_FROM_VEHICLE( g_U977 );
    l_U1480 = 0;
    sub_3524( "GA", "P_RAIL_MPM_TERMINATE end", 0 );
    return;
}

void sub_110215()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;
    unknown uVar51;
    unknown uVar52;
    unknown uVar53;
    unknown uVar54;
    unknown uVar55;
    unknown uVar56;
    unknown uVar57;
    unknown uVar58;
    unknown uVar59;
    unknown uVar60;
    unknown uVar61;
    unknown uVar62;
    unknown uVar63;
    unknown uVar64;
    unknown uVar65;
    unknown uVar66;
    unknown uVar67;
    unknown uVar68;
    unknown uVar69;
    unknown uVar70;
    unknown uVar71;
    unknown uVar72;

    sub_68241( 1, 0, 0, 0 );
    if (l_U6147)
    {
        ACTIVATE_BULLET_TIME( 0, 0.15000000, 1 );
    }
    sub_79732( ref uVar2, -219.74000000, -3025.03000000, 1.60000000, l_U6136, l_U6139, 0 );
    sub_79732( ref uVar33, -219.74000000, -3025.03000000, 1.60000000, l_U6140, l_U6143, l_U6144 );
    sub_110335();
    l_U6149 = GET_SOUND_ID();
    PLAY_SOUND_FRONTEND( l_U6149, "P_RAIL_EXPLODE_PASSOS_BOAT" );
    if (l_U6147)
    {
        ACTIVATE_BULLET_TIME( 0, l_U6148, 1 );
    }
    sub_81384( ref uVar2, ref uVar33, l_U6145, 1, 1 );
    sub_75446( "DOCKS_RS_MPM_SCRIPTED_FAIL_FX", 0 );
    DO_SCREEN_FADE_IN( 0 );
    WAIT( l_U6146 );
    ADD_EXPLOSION( -203.70000000, -3021.80000000, 5.54900000, 12, 1.00000000, 0, 0, 1065353216 );
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        SET_PED_VISIBLE( sub_32908(), 0 );
    }
    if (NOT (IS_PED_DEAD( g_U976 )))
    {
        SET_PED_VISIBLE( g_U976, 0 );
    }
    sub_82507( sub_111306(), 1.00000000 );
    while (NOT (sub_111363( ref uVar33, 0 )))
    {
        WAIT( 0 );
    }
    while ((sub_75726( 1 )) == 0)
    {
        WAIT( 0 );
    }
    sub_58933( ref uVar64, 3000 );
    while (NOT (HAS_SOUND_FINISHED( l_U6149 )))
    {
        WAIT( 0 );
        if (sub_75915( ref uVar64 ))
        {
            SCRIPT_ASSERT( "P_MPM_HANDLE_FAIL_EXPL() - P_RAIL_EXPLODE_PASSOS_BOAT played for too long.", 0 );
            return;
        }
    }
    STOP_SOUND( l_U6149, 0 );
    RELEASE_SOUND_ID( l_U6149 );
    if (l_U6147)
    {
        DEACTIVATE_BULLET_TIME( 0, 0 );
    }
    sub_76738( "DOCKS_RS_MPM_SCRIPTED_FAIL_FX" );
    sub_83280( 0, 0, 0, -859915232, -859915232, 0 );
    sub_57764( 1, 1 );
    return;
}

void sub_110335()
{
    sub_3524( "GA", "P_MPM_BOAT_EXPLODE start", 0 );
    sub_59783( g_U977 );
    sub_77306( g_U978 );
    sub_77306( g_U979 );
    sub_77306( g_U980 );
    l_U6131[0] = sub_61136( g_U958, l_U6150, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6131[1] = sub_61136( g_U959, l_U6150, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6131[2] = sub_61136( g_U960, l_U6150, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    l_U6131[3] = sub_61136( g_U961, l_U6150, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    FREEZE_OBJECT_POSITION( l_U6131[0], 1 );
    FREEZE_OBJECT_POSITION( l_U6131[1], 1 );
    FREEZE_OBJECT_POSITION( l_U6131[2], 1 );
    FREEZE_OBJECT_POSITION( l_U6131[3], 1 );
    PLAY_OBJECT_ANIM( l_U6131[0], "p_ma_botexp_aa_h", "ma_anim_rsboat", 0.10000000, 0, 1 );
    PLAY_OBJECT_ANIM( l_U6131[1], "p_ma_botexp_ab_h", "ma_anim_rsboat", 0.10000000, 0, 1 );
    PLAY_OBJECT_ANIM( l_U6131[2], "p_ma_botexp_ac_h", "ma_anim_rsboat", 0.10000000, 0, 1 );
    PLAY_OBJECT_ANIM( l_U6131[3], "p_ma_botexp_ad_h", "ma_anim_rsboat", 0.10000000, 0, 1 );
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        SET_PED_TO_RAGDOLL_WITH_EXPLOSION( sub_32908(), 6000, 6000, -203.70000000, -3021.80000000, 5.54900000 );
    }
    if (NOT (IS_PED_DEAD( g_U976 )))
    {
        SET_PED_TO_RAGDOLL_WITH_EXPLOSION( g_U976, 6000, 6000, -203.70000000, -3021.80000000, 5.54900000 );
    }
    l_U999 = 1;
    l_U850 = 1;
    sub_3524( "GA", "P_MPM_BOAT_EXPLODE end", 0 );
    return;
}

string sub_111306()
{
    return "LARGE_EXPLOSION_SHAKE";
}

int sub_111363(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_75915( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_75915( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_112137()
{
    unknown uVar2;
    int iVar3;
    int I;
    boolean bVar5;

    sub_3524( "MF", "P_PIER_5_04 - START", 0 );
    sub_65026( "05_04_DOCKS_concat", 1 );
    sub_46058( 14 );
    sub_62241( l_U1639 );
    if (NOT (IS_PED_DEAD( g_U976 )))
    {
        sub_3524( "MF", "Registering Passos script ped with midscene 05_04_DOCKS_concat", 0 );
        SET_PED_COORDS( g_U976, (vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U976 ))) - (vector( 0.00000000, 0.00000000, 1.00000000)), 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U976, "Pass_Dock", 0 );
        DETACH_PED( g_U976, 1 );
        uVar2 = GET_WEAPON_FROM_HAND( g_U976, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            sub_3524( "GA", "Registering Passos weapon with cutscene.", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_PT92_Aa_H", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_32908(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            sub_3524( "GA", "Registering Max's weapon with cutscene.", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_MG_21E_Aa_H", 0 );
        }
        DETACH_PED( sub_32908(), 1 );
    }
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        SET_VEHICLE_ENGINE_ON( g_U977, 0, 1 );
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( g_U977, "boat_rs", 0 );
    }
    if (NOT (IS_VEHICLE_DEAD( l_U5703[0]._fU0 )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U5703[0]._fU0, "boat_chase", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U6124 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U6124, "Fabi_Docks", 0 );
        DETACH_PED( l_U6124, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U5703[0]._fU56 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5703[0]._fU56, "Sero_Unif_1", 0 );
        DETACH_PED( l_U5703[0]._fU56, 1 );
    }
    iVar3 = 0;
    for ( I = 0; I < 7; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U5822[I]._fU52 )))
        {
            if (iVar3 == 0)
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5822[I]._fU52, "G_CS_RAIL_A", 0 );
                DETACH_PED( l_U5822[I]._fU52, 1 );
                iVar3++;
            }
            else if (iVar3 == 1)
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U5822[I]._fU52, "G_CS_RAIL_A^1", 0 );
                DETACH_PED( l_U5822[I]._fU52, 1 );
                iVar3++;
            }
        }
    }
    if (NOT (IS_PED_DEAD( sub_32908() )))
    {
        TASK_CLEAR_LOOK_AT( sub_32908() );
    }
    sub_68241( 1, 0, 0, 1 );
    CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
    CUTSCENE_ENABLE_SKIP( 0 );
    CUTSCENE_REGISTER_SWITCH_TO_LEVEL_NAME( "s_office" );
    DISABLE_FADE_BETWEEN_SP_LEVELS();
    AUD_ENABLE_PRE_BINK_SHUTDOWN( 1 );
    START_SEAMLESS_CUTSCENE();
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    WAIT( 0 );
    sub_113230( ref l_U1484 );
    if (NOT (IS_VEHICLE_DEAD( g_U977 )))
    {
        if (IS_PLAYBACK_GOING_ON_FOR_VEHICLE( g_U977 ))
        {
            STOP_PLAYBACK_RECORDED_VEHICLE( g_U977 );
        }
    }
    bVar5 = false;
    while (NOT HAS_CUTSCENE_FINISHED())
    {
        if ((GET_CUTSCENE_TIME_MS() > 21401) AND (NOT bVar5))
        {
            sub_62241( l_U1644 );
            bVar5 = true;
        }
        WAIT( 0 );
    }
    sub_3524( "MF", "P_PIER_5_04 - END", 0 );
    return;
}

void sub_113230(unknown uParam0)
{
    if ((uParam0^) == 0)
    {
        sub_3524( "GA", "Trying to stop an invalid particle effect ID.", 0 );
    }
    else
    {
        STOP_PARTICLE_FX_LOOPED( (uParam0^) );
        (uParam0^) = 0;
    }
    return;
}

void sub_113490()
{
    sub_3524( "GA", "P_UNLOAD_ASSETS start", 0 );
    sub_59909( ref l_U416 );
    sub_59909( ref l_U563 );
    sub_60177( ref l_U541 );
    sub_60177( ref l_U586 );
    sub_60177( ref l_U593 );
    sub_113600( "level_s_marina_rs" );
    sub_113600( "level_s_marina_rs_cp_10" );
    sub_113693( "LEVEL/S_MARINA/s_marina_drv.act" );
    sub_113693( "Vehicle/Vehicle_Boat" );
    RELEASE_NAMED_SCRIPT_AUDIO_BANK( l_U6209 );
    RELEASE_NAMED_SCRIPT_AUDIO_BANK( "SCRIPT_MISSION\S_MARINA_RAIL_SHOOTER_2" );
    sub_113814( 427207702 );
    sub_3524( "GA", "P_UNLOAD_ASSETS end", 0 );
    return;
}

void sub_113600(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_113693(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}

void sub_113814(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}

void sub_113882()
{
    sub_3524( "SA", "P_UNLOAD_PERSISTENT_MODELS", "###" );
    sub_113814( 68019059 );
    sub_113814( 1194438308 );
    sub_113814( -168327769 );
    sub_113814( -1074756423 );
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U3 = 0;
    l_U4 = 0;
    l_U5 = 1500;
    StrCopy( ref l_U15, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U23, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U67 = 0;
    l_U68 = 0;
    l_U69 = 0;
    l_U70 = 0;
    l_U89 = 0;
    l_U90 = 0;
    l_U91 = 0;
    l_U92 = 0;
    l_U93 = 0;
    l_U129 = {18.96000000, 14.19000000, 6.11000000};
    l_U132 = {-90.00000000, 0.00000000, 15.00000000};
    l_U136 = {19.15000000, 15.40000000, 5.33000000};
    l_U139 = {0.00000000, 0.00000000, 0.00000000};
    l_U142 = {0.00000000, 0.00000000, 1.00000000};
    l_U145 = 180.00000000;
    l_U180 = 0;
    l_U181 = 0;
    l_U182 = 0;
     /* WRITESCRIPTLOG */ sub_341( "SP", "Script s_office_rodsDead.sc is starting...", 0 );
    l_U68 = 1;
    while (IS_EXITFLAG_SET() == 0)
    {
         /* P_HANDLE_FAILURE */ sub_479();
        if (l_U69 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_8559();
        }
        WAIT( 0 );
    }
     /* P_CLEANUP_ALL */ sub_3435();
     /* P_UNLOAD_ASSETS */ sub_13929();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_office_rodsDead" );
     /* WRITESCRIPTLOG */ sub_341( "SP", "Script s_office_rodsDead.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_341(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_HANDLE_FAILURE */ void sub_479()
{
    switch (l_U69)
    {
        case 0:
        if (g_U706 == 8)
        {
            if (( /* RESTARTING_CHECKPOINT */ sub_580()) == 1)
            {
                DO_SCREEN_FADE_OUT( 0 );
                l_U69 = 3;
                 /* WRITESCRIPTLOG */ sub_341( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_876() )) == 1)
            {
                 /* WRITESCRIPTLOG */ sub_341( "SP", "Mission Failed: Player died.", 0 );
                l_U69 = 1;
                 /* WRITESCRIPTLOG */ sub_341( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
        }
        else if ((( /* IS_RESTART_ACTIVE */ sub_1320()) == 1) || ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_876() )) == 1))
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "06_04_office_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "06_04_office_concat" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "06_04_office_concat" );
            }
             /* P_RESET_CHECKPOINT_THREAD */ sub_1475( ref g_U708[8] );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        break;
        case 1:
        if (( /* F_CHECK_QUIT_RETRY */ sub_1557( 0 )) == 1)
        {
            l_U69 = 2;
             /* WRITESCRIPTLOG */ sub_341( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        }
        break;
        case 2:
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_876() )) == 0))
        {
            if ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_914() )) == 0)
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_914(), 0, 0 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            l_U69 = 3;
             /* WRITESCRIPTLOG */ sub_341( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_341( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
         /* NIS_PRE_SETUP */ sub_3207( 1, 0, 0, 1 );
        CLEAR_HELP();
        CLEAR_PRINTS();
        DESTROY_ALL_CAMS();
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        AUDIO_MUSIC_SUSPEND( 500 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
         /* P_CLEANUP_ALL */ sub_3435();
        l_U69 = 4;
         /* WRITESCRIPTLOG */ sub_341( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_341( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
         /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_3869( ref l_U31,  /* PLAYER_PED_ID */ sub_876() );
        l_U69 = 5;
         /* WRITESCRIPTLOG */ sub_341( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_341( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        l_U68 = 1;
        l_U69 = 0;
         /* WRITESCRIPTLOG */ sub_341( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        break;
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_580()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_876() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_876(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_914(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_914(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_876() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_876(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* PLAYER_PED_ID */ int sub_876()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_914() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_914()
{
    return GET_PLAYER_ID();
}

/* IS_RESTART_ACTIVE */ void sub_1320()
{
    return g_U648;
}

/* P_RESET_CHECKPOINT_THREAD */ void sub_1475(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

/* F_CHECK_QUIT_RETRY */ int sub_1557(int iParam0)
{
    iParam0 = 1;
    switch (l_U4)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1635( ref l_U6 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_876() )))
            {
                l_U5 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_1763( ref l_U6, l_U5, 1, 1 );
             /* STARTTIMER */ sub_1911( ref l_U6 );
        }
        if ( /* ISTIMERDONE */ sub_2042( ref l_U6 ))
        {
             /* WRITESCRIPTLOG */ sub_341( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_876() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_914() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_914(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U4 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U4 = 2;
            }
            else
            {
                l_U4 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_341( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_2537();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_341( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_2537();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_1635(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_1763(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_1911(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* ISTIMERDONE */ int sub_2042(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_2537()
{
     /* WRITESCRIPTLOG */ sub_341( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_2610( ref l_U6 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_914() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_914(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U3 = 0;
    l_U3 = l_U3;
    l_U4 = 0;
    return;
}

/* RESETTIMER */ void sub_2610(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* NIS_PRE_SETUP */ void sub_3207(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_876() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_914(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_876(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_876() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_876(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* P_CLEANUP_ALL */ void sub_3435()
{
     /* WRITESCRIPTLOG */ sub_341( "SP", "P_CLEANUP_ALL", 0 );
     /* CLEANPED */ sub_3493( l_U94 );
    if (((CUTSCENE_NAMED_IS_LOADING( "06_04_office_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "06_04_office_concat" )) == 1))
    {
        CLEAR_NAMED_CUTSCENE( "06_04_office_concat" );
    }
     /* P_STOP_SP_CHALLENGES */ sub_3675();
    return;
}

/* CLEANPED */ void sub_3493(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* P_STOP_SP_CHALLENGES */ void sub_3675()
{
     /* WRITESCRIPTLOG */ sub_341( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_3869(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_341( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_4088( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_5252( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5566( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6045( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5566( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6045( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_5566( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6045( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_6361( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6045( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_6361( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_6045( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_6933( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_7135( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_876(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_341( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_4088(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4150( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_4150(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_5252(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_5566(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_5970( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_5970(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_6045(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_6361(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_5970( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_6933(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_7135(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_4150( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_7233( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_7233(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_8559()
{
    unknown uVar2;
    unknown uVar3;

     /* P_HANDLE_SP_CHALLENGES */ sub_8587();
    switch (l_U68)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_341( "SP", "eCheckpointState = CHECKPOINT_INIT_SCRIPT_DATA", 0 );
         /* P_INIT_SCRIPT_VARIABLES */ sub_8739();
         /* P_INIT_GAMEPLAY_STRUCTS */ sub_8874();
         /* P_INITIALIZE_SP_CHALLENGES */ sub_9398();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U70 = 1;
        l_U68 = 2;
         /* WRITESCRIPTLOG */ sub_341( "SP", "eCheckpointState = CHECKPOINT_HANDLE_OPENING_CUTSCENE", 0 );
        break;
        case 2:
        if (( /* F_HANDLE_OPENING_CUTSCENE */ sub_9579()) == 1)
        {
            l_U68 = 3;
             /* WRITESCRIPTLOG */ sub_341( "SP", "eCheckpointState = CHECKPOINT_FINISHED", 0 );
            break;
        }
        return;
        case 3:
         /* WRITESCRIPTLOG */ sub_341( "SP", "eCheckpointState = CHECKPOINT_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U68 = 0;
         /* WRITESCRIPTLOG */ sub_341( "SP", "eCheckpointState = CHECKPOINT_IDLE", 0 );
        break;
    }
    return;
}

/* P_HANDLE_SP_CHALLENGES */ void sub_8587()
{
    return;
}

/* P_INIT_SCRIPT_VARIABLES */ void sub_8739()
{
     /* WRITESCRIPTLOG */ sub_341( "SP", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U89 = 0;
    l_U90 = 0;
    l_U91 = 0;
    l_U92 = 0;
    l_U93 = 0;
    l_U180 = 0;
    l_U181 = 0;
    l_U182 = 0;
    l_U70 = 0;
    return;
}

/* P_INIT_GAMEPLAY_STRUCTS */ void sub_8874()
{
     /* WRITESCRIPTLOG */ sub_341( "SP", "P_INIT_GAMEPLAY_STRUCTS", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_8981( ref l_U95, 11.85476000, 7.17364600, 4.92437900, 0.00000000, 1583403840, 26, 6, 0, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_8981( ref l_U109, 19.21000000, 14.93300000, 5.84400000, 180.00000000, 1825841743, 26, 6, 0, 0, 0 );
     /* P_CREATEDOORSTRUCT */ sub_9194( ref l_U152, -1487611659, 15.10000000, 6.28600000, 6.00100000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_CREATEDOORSTRUCT */ sub_9194( ref l_U159, -1487611659, 15.10000000, 8.71500000, 6.00100000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_CREATEDOORSTRUCT */ sub_9194( ref l_U166, -1420513879, 11.21300000, 15.32800000, 11.21300000, 0.00000000, 0.00000000, 0.00000000 );
     /* P_CREATEDOORSTRUCT */ sub_9194( ref l_U173, -1420513879, 11.21300000, 17.74900000, 11.21300000, 0.00000000, 0.00000000, 0.00000000 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_8981(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* P_CREATEDOORSTRUCT */ void sub_9194(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

/* P_INITIALIZE_SP_CHALLENGES */ void sub_9398()
{
     /* WRITESCRIPTLOG */ sub_341( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    return;
}

/* F_HANDLE_OPENING_CUTSCENE */ int sub_9579()
{
    unknown uVar2;
    unknown uVar3;
    int iVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;

    switch (l_U70)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_341( "SP", "eOpeningCutsceneState = CUTSCENE_REQUEST_ASSETS", 0 );
         /* P_REQUEST_PRE_CUTSCENE_ASSETS */ sub_9751();
        l_U70 = 2;
         /* WRITESCRIPTLOG */ sub_341( "SP", "eOpeningCutsceneState = CUTSCENE_LOAD_ASSETS", 0 );
        case 2:
        if (( /* F_HAVE_PRE_CUTSCENE_ASSETS_LOADED */ sub_10256()) == 1)
        {
            l_U70 = 3;
             /* WRITESCRIPTLOG */ sub_341( "SP", "eOpeningCutsceneState = CUTSCENE_WAIT_FOR_HANDOFF", 0 );
            break;
        }
        return 0;
        case 3:
        if (g_U1043 == 1)
        {
            l_U70 = 4;
             /* WRITESCRIPTLOG */ sub_341( "SP", "eOpeningCutsceneState = CUTSCENE_SETUP", 0 );
            break;
        }
        return 0;
        case 4:
         /* WRITESCRIPTLOG */ sub_341( "SP", "eOpeningCutsceneState = CUTSCENE_SETUP", 0 );
         /* CLEANPED */ sub_3493( l_U94 );
        l_U94 =  /* CREATEPED */ sub_10596( ref l_U95 );
        if (((IS_PED_DEAD( l_U94 )) == 0) AND ((DOES_PED_EXIST( l_U94 )) == 1))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U94, ref g_U1157 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U94, "Secr_F_Avg", 0 );
        }
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_11391( ref l_U71, 0, 1 );
        AUD_ENABLE_PRE_BINK_SHUTDOWN( 1 );
        CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        CUTSCENE_ENABLE_SKIP( 0 );
        CUTSCENE_REGISTER_SWITCH_TO_LEVEL_NAME( "s_fire" );
        DISABLE_FADE_BETWEEN_SP_LEVELS();
        START_SEAMLESS_CUTSCENE();
        l_U70 = 5;
         /* WRITESCRIPTLOG */ sub_341( "SP", "eOpeningCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_341( "SP", "eOpeningCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
         /* CLEANOBJECT */ sub_12934( g_U1446 );
         /* CLEANOBJECT */ sub_12934( g_U1448 );
        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
         /* NIS_PRE_SETUP */ sub_3207( 1, 0, 0, 1 );
        RELEASE_TIME_OF_DAY();
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 12, 0 );
        if (IS_SCREEN_FADED_OUT() == 1)
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        l_U70 = 6;
         /* WRITESCRIPTLOG */ sub_341( "SP", "eOpeningCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 6:
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            uVar2 = GET_CUTSCENE_SECTION_PLAYING();
            uVar3 = GET_CUTSCENE_TIME();
            iVar4 = GET_CUTSCENE_TIME_MS();
            PRINTSTRING( "[SP] SECTION: " );
            PRINTINT( uVar2 );
            PRINTSTRING( " Time: " );
            PRINTINT( uVar3 );
            PRINTSTRING( " Time MS: " );
            PRINTINT( iVar4 );
            PRINTNL();
        }
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            l_U70 = 0;
             /* WRITESCRIPTLOG */ sub_341( "SP", "eOpeningCutsceneState = CUTSCENE_IDLE", 0 );
            return 1;
        }
        else
        {
            uVar2 = GET_CUTSCENE_SECTION_PLAYING();
            uVar3 = GET_CUTSCENE_TIME();
            iVar4 = GET_CUTSCENE_TIME_MS();
            PRINTSTRING( "[SP] SECTION: " );
            PRINTINT( uVar2 );
            PRINTSTRING( " Time: " );
            PRINTINT( uVar3 );
            PRINTSTRING( " Time MS: " );
            PRINTINT( iVar4 );
            PRINTNL();
            if (l_U93 == 0)
            {
                if (iVar4 >= 12000)
                {
                     /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_13510( l_U71, 0 );
                    l_U93 = 0;
                }
            }
            if (l_U92 == 0)
            {
                if (l_U91 == 1)
                {
                    if (iVar4 >= 70000)
                    {
                        l_U92 = 1;
                    }
                }
            }
        }
        break;
    }
    return 0;
}

/* P_REQUEST_PRE_CUTSCENE_ASSETS */ void sub_9751()
{
     /* WRITESCRIPTLOG */ sub_341( "SP", "P_REQUEST_PRE_CUTSCENE_ASSETS", 0 );
    if (((CUTSCENE_NAMED_IS_LOADING( "06_04_office_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "06_04_office_concat" )) == 0))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( "06_04_office_concat" );
    }
     /* LOADMODEL */ sub_9939( 610197146, 0 );
    return;
}

/* LOADMODEL */ void sub_9939(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_5970( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* F_HAVE_PRE_CUTSCENE_ASSETS_LOADED */ int sub_10256()
{
    if (((HAS_MODEL_LOADED( 610197146 )) == 1) AND ((CUTSCENE_IS_LOADED( "06_04_office_concat" )) == 1))
    {
        return 1;
    }
    return 0;
}

/* CREATEPED */ void sub_10596(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_9939( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_11087( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_11188( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_11087(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_11188(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_11391(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_11430( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_876() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_876(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_11631( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_11885( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_876(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_876(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_876(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_876(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_876() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_876(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_876(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_876(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_876(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_876() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_876(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_11885( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_876(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_876(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_876(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_11430(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_11631(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* IS_WEAPON_TWO_HANDED */ int sub_11885(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* CLEANOBJECT */ void sub_12934(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* P_SET_TWO_HANDED_WEAPON_VISIBLE */ void sub_13510(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

/* P_UNLOAD_ASSETS */ void sub_13929()
{
     /* WRITESCRIPTLOG */ sub_341( "SP", "P_UNLOAD_ASSETS", 0 );
     /* UNLOADMODEL */ sub_13991( 610197146 );
    return;
}

/* UNLOADMODEL */ void sub_13991(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_5970( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}


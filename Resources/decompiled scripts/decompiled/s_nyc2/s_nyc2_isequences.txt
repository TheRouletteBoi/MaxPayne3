void main()
{
    unknown uVar2;

    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = "PED_DEF";
    l_U79 = 1.00000000;
    l_U91 = 0;
    l_U132 = 0;
    l_U152 = -452828882;
    l_U153 = 941367160;
    l_U154 = 1398588339;
    l_U155 = 1706800821;
    l_U165 = 520;
    l_U166 = 0.06000000;
    l_U167 = 1;
    l_U184 = {-217.95000000, -19.23000000, -11.77000000};
    l_U187 = {0, 0, 180};
    l_U190 = {-219.00000000, -20.00000000, -6.65000000};
    l_U193 = {-45.00000000, 0.00000000, 0.00000000};
    l_U196 = {-219.00000000, -20.00000000, -7.65000000};
    l_U199 = {0, 0, 0};
    l_U202 = {-212.22800000, -19.34800000, -7.34800000};
    l_U205 = {0.00000000, 0.00000000, 270.00000000};
    l_U208 = {-217.95000000, -19.25000000, -9.55000000};
    l_U211 = {0, 0, 180};
    l_U214 = {-214.25500000, -19.40000000, -9.50000000};
    l_U217 = {0, 0, 0};
    l_U524 = {-214.75600000, -19.28700000, -12.03000000};
    l_U527 = 0.00000000;
    l_U528 = {-214.75600000, -19.28700000, -12.03000000};
    l_U531 = 0.00000000;
    l_U532 = 0;
    StrCopy( ref l_U533, "ny_chopanim", 32 );
    l_U550 = 0;
    l_U551 = 0;
    l_U552 = 1;
    l_U554 = {-302.18600000, -5.44400000, 30.20300000};
    l_U557 = 0.25000000;
    l_U558 = 0;
    l_U568 = 3950;
    l_U569 = {-288.48500000, -14.00000000, 1.50000000};
    l_U572 = 0;
    l_U573 = 0;
    l_U574 = {-292.42250000, -18.06853000, 7.71731700};
    l_U577 = {-289.98710000, -18.09219000, 9.49769500};
    l_U580 = {-301.93070000, -20.09039000, 8.27926300};
    l_U583 = {6.56667600, -5.00000000, -72.39863000};
    l_U586 = {1, -3.10000000, -0.50000000};
    l_U589 = 50.00000000;
    l_U590 = 0;
    l_U591 = 0;
    l_U629 = 4;
    l_U630 = 7;
    l_U828 = 2000;
    l_U829 = 1000;
    l_U830 = 2000;
    l_U831 = 0;
    l_U832 = 7;
    l_U833 = 0.70000000;
    l_U1038 = 0;
    l_U1053 = {-3.48000000, -304.07700000, -0.32500000};
    l_U1056 = 65446;
    l_U1057 = 0;
    l_U1058 = 0;
    l_U1087 = {-4.74000000, -313.49800000, -0.30000000};
    l_U1090 = {-4.84600000, -312.80200000, -0.30000000};
    l_U1093 = "S_NYBAR_VIG_01B";
    l_U1094 = 0;
    l_U1095 = 0;
    l_U1096 = 0;
    l_U1111 = "S_NYBAR_VIG_03";
    l_U1112 = 0;
    l_U1113 = 0;
    l_U1186 = 0;
    l_U1200 = 0;
    l_U1201 = 0;
    l_U1202 = {-241.81530000, -2.44090000, 2.74409000};
    l_U1205 = 0;
    l_U1206 = {-236.25000000, -24.40000000, 1.71300000};
    l_U1209 = 0;
    l_U1210 = 0;
    l_U1211 = 0;
    l_U1212 = 0;
    l_U1213 = 0;
    l_U1214 = 0;
    l_U1215 = {-242.70000000, -24.70000000, 5.12300000};
    l_U1218 = 67.50000000;
    l_U1219 = 0;
    l_U1220 = 0;
    l_U1221 = 0;
    StrCopy( ref l_U1262, "mid_03c_nybar_concat", 32 );
    l_U1302 = 0;
    l_U1303 = 1;
    l_U1373 = 3400;
    l_U1374 = 2650;
    l_U1376 = 0;
    l_U1377 = 0;
    l_U1392 = {-13.00000000, -321.25000000, -0.90000000};
    l_U1395 = 2;
    l_U1396 = 0;
    l_U1397 = 0;
    l_U1398 = 2;
    l_U1399 = 0;
    l_U1400 = {-223.70000000, -19.00000000, -11.46177000};
    l_U1403 = 225.00000000;
    l_U1404 = {-198.36000000, -20.80300000, -11.45200000};
    l_U1407 = 270.00000000;
    l_U1408 = {-196.82100000, -21.46900000, -11.46177000};
    l_U1411 = 90.00000000;
    l_U1412 = {-190.60600000, -15.47500000, -11.45200000};
    l_U1415 = 65446;
    l_U1416 = "S_NYBAR_VIG_08B";
    l_U1417 = "S_NYBAR_VIG_08B_2";
    l_U1418 = 0;
    l_U1419 = 0;
    l_U1420 = 0.05000000;
    l_U1422 = {-72.80000000, -330.72000000, 0.66828200};
    l_U1425 = 235.61600000;
    l_U1427 = {-76.93280000, -326.41900000, 0.69412400};
    l_U1430 = 320.59000000;
    l_U1587 = 0;
    l_U1602 = {-60.52000000, -341.10000000, 3.59000000};
    l_U1605 = 90.00000000;
    l_U1606 = 0;
    l_U1607 = 0;
    l_U1617 = 1500;
    l_U1700 = {-363.61500000, -7.34700000, 2.64900000};
    l_U1703 = 90;
    l_U1704 = 0;
    l_U1705 = 0;
    l_U1720 = {-366.37000000, -12.96000000, 2.81800000};
    l_U1723 = 65446;
    l_U1724 = 0;
    l_U1725 = 0;
    l_U1726 = 0;
    l_U1727 = 0;
    l_U1728 = 0;
    l_U1729 = {-331.99000000, -10.50000000, 2.65000000};
    l_U1732 = 0;
    l_U1734 = {-333.78500000, -15.26600000, 4.17000000};
    l_U1737 = {0, 0, 90};
    l_U1740 = 0;
    l_U1741 = 0;
    l_U1742 = 0;
    l_U1743 = 0;
    l_U1744 = 0;
    l_U1745 = 0;
    l_U1746 = 0;
    l_U1761 = {-0.78600000, -307.34800000, -0.28000000};
    l_U1764 = 56.78000000;
    l_U1765 = {-0.78600000, -300.00000000, -0.28000000};
    l_U1768 = {-0.78600000, -312.00000000, -0.28000000};
    l_U1771 = 0.00000000;
    l_U1773 = 926579125;
    l_U1774 = {-0.78600000, -306.40000000, 3.77400000};
    l_U1777 = 0;
    l_U1778 = 0;
    l_U1779 = 0;
    l_U1780 = {19.21000000, 14.93300000, 5.84400000};
    l_U1783 = 180.00000000;
    l_U1784 = 1;
    l_U1785 = 0;
    l_U1786 = {-224.37200000, -20.45700000, -10.10500000};
    l_U1789 = 0.00000000;
    l_U1790 = 1800;
    l_U1800 = 750;
    l_U1801 = 0;
    l_U1802 = 0;
    l_U1803 = 90.55986000;
    l_U1804 = -4.20000000;
    l_U1805 = 0;
     /* WRITESCRIPTLOG */ sub_2257( "SP", "Script s_nyc2_iSequences is starting...", "###" );
     /* SETUP_SCRIPTED_SPEECH */ sub_2385( "SNYCAUD" );
    uVar2 =  /* F_GIVEPEDWEAPON */ sub_2652(  /* PLAYER_PED_ID */ sub_2548(), 456708483, 200, 0, 1 );
    l_U558 = 0;
    l_U572 = 0;
    l_U831 = 0;
    l_U573 = 0;
    l_U1057 = 0;
    l_U1094 = 0;
    l_U1201 = 0;
    l_U1213 = 0;
     /* LOADANIMDICT */ sub_3160( "ny_wtanim", 0, 1 );
     /* INIT_VIGNETTE_08B */ sub_3326();
     /* CREATE_RAG_WIDGETS */ sub_4003();
     /* P_FADE_IN_AND_WAIT */ sub_9191( 1000 );
    while (NOT IS_EXITFLAG_SET())
    {
         /* HANDLE_SIMPLE_MPM */ sub_9358();
         /* HANDLE_MPM */ sub_19502();
         /* HANDLE_TOWER_RAYFIRE */ sub_32973();
         /* HANDLE_AIRPLANE */ sub_33826();
         /* HANDLE_CHOPSHOP_RAYFIRE */ sub_34271();
         /* HANDLE_CAR_FALL */ sub_37963();
         /* HANDLE_FAN_TEST */ sub_39854();
         /* HANDLE_VIGNETTES */ sub_41393();
         /* HANDLE_NEWS_CLIPPING */ sub_60853();
         /* HANDLE_CHOP_SHOP_ANIMATED_CAMERA */ sub_61148();
        WAIT( 0 );
    }
     /* CLEANUPFANTEST */ sub_62752();
     /* UNLOADANIMDICT */ sub_34199( "ny_wtanim" );
    SET_EXITFLAG_RESPONSE();
     /* WRITESCRIPTLOG */ sub_2257( "SP", "Script s_nyc2_iSequences is terminating...", "###" );
    return;
}

/* WRITESCRIPTLOG */ void sub_2257(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_2385(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_2429();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_2429()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* PLAYER_PED_ID */ int sub_2548()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_2586() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_2586()
{
    return GET_PLAYER_ID();
}

/* F_GIVEPEDWEAPON */ void sub_2652(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_3037( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_3037(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* LOADANIMDICT */ void sub_3160(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* INIT_VIGNETTE_08B */ void sub_3326()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "INIT_VIGNETTE_08B", "***" );
     /* INIT_ENEMY_VIGNETTE_08B */ sub_3451( ref l_U1447[0], "GMED3", -73.24000000, -329.98000000, 0.50000000, -0.25000000, -0.10000000, 0.25000000, 240, -1305081679 );
     /* INIT_ENEMY_VIGNETTE_08B */ sub_3451( ref l_U1447[1], "GMED", -73.66000000, -330.74000000, 0.50000000, 0.25000000, -0.10000000, 0.25000000, 215, -584940451 );
     /* INIT_ENEMY_VIGNETTE_08B */ sub_3451( ref l_U1447[2], "GMED1", -74.52000000, -329.97000000, 0.50000000, 0.25000000, -1.00000000, 0.25000000, 215, -2014166497 );
    l_U1431[0] = -1;
    l_U1431[1] = 0;
    l_U1431[2] = 2;
     /* SET_BOOL_ARRAY */ sub_3701( ref l_U1439, 0 );
     /* INIT_ENEMY_VIGNETTE_08B */ sub_3451( ref l_U1517[0], "GMED7", -77.19000000, -326.27000000, 1.00000000, 0.00000000, 0.00000000, 0.00000000, 335.60000000, -101589531 );
     /* INIT_ENEMY_VIGNETTE_08B */ sub_3451( ref l_U1517[1], "GMED4", -76.77000000, -326.67000000, 1.00000000, 0.00000000, 0.00000000, 0.00000000, 335.60000000, 1709395105 );
     /* INIT_ENEMY_VIGNETTE_08B */ sub_3451( ref l_U1517[2], "GMED6", -77.83000000, -327.00000000, 1.00000000, 0.00000000, 0.00000000, 0.00000000, 335.60000000, -60018057 );
    l_U1435[0] = -1;
    l_U1435[1] = 0;
    l_U1435[2] = 1;
     /* SET_BOOL_ARRAY */ sub_3701( ref l_U1443, 0 );
    return;
}

/* INIT_ENEMY_VIGNETTE_08B */ void sub_3451(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    iParam0->_fU56 = uParam1;
    iParam0->_fU60 = {uParam2};
    iParam0->_fU72 = {uParam5};
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = uParam9;
    return;
}

/* SET_BOOL_ARRAY */ void sub_3701(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = uParam1;
    }
    return;
}

/* CREATE_RAG_WIDGETS */ void sub_4003()
{
    int I;

     /* WRITESCRIPTLOG */ sub_2257( "RJM", "CREATE_RAG_WIDGETS for S_NYC iSequences", 0 );
    START_WIDGET_GROUP( "Interactive Sequence Helper" );
    START_WIDGET_GROUP( "04_01A_BLENDOUT - New intro where Max kills Tony" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U350, g_U3141[0]._fU0, g_U3141[0]._fU12, 1 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "RAYFIRE - Water Tower Collapse" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U314, -292.99450000, -18.29832000, 7.73128900, 270.54540000, 1 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U569, "Particle FX position", 1036831949 );
    ADD_WIDGET_INT_SLIDER( "Time to start particle FX", ref l_U568, 0, 20000, 1 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "RAYFIRE - Chop Shop Breakable Glass" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U323, -220.18830000, -22.66809000, -7.40772000, 257.64110000, 1 );
    ADD_WIDGET_BOOL( "Create Final Static", ref l_U1376 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U184, "Cutscene Glass pos", 1036831949 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U187, "Animation Starting Rotation", 1036831949 );
    ADD_WIDGET_FLOAT_SLIDER( "Anim Start Phase", ref l_U166, 0, 1.00000000, 0.01000000 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U202, "Frame position", 1036831949 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U205, "Frame rotation", 1036831949 );
    START_WIDGET_GROUP( "Clean Plugs" );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U208, "First plug", 1036831949 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U214, "Second plug", 1036831949 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "Breakable Glass PFX" );
    ADD_WIDGET_FLOAT_SLIDER( "Glass POS X", ref l_U190._fU0, -5000.00000000, 5000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Glass POS Y", ref l_U190._fU4, -5000.00000000, 5000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Glass POS Z", ref l_U190._fU8, -5000.00000000, 5000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Glass ROT X", ref l_U193._fU0, -5000.00000000, 5000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Glass ROT Y", ref l_U193._fU4, -5000.00000000, 5000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Glass ROT Z", ref l_U193._fU8, -5000.00000000, 5000.00000000, 1.00000000 );
    ADD_WIDGET_STRING( " " );
    ADD_WIDGET_STRING( " " );
    ADD_WIDGET_FLOAT_SLIDER( "Dust POS X", ref l_U196._fU0, -5000.00000000, 5000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Dust POS Y", ref l_U196._fU4, -5000.00000000, 5000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Dust POS Z", ref l_U196._fU8, -5000.00000000, 5000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Dust ROT X", ref l_U199._fU0, -5000.00000000, 5000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Dust ROT Y", ref l_U199._fU4, -5000.00000000, 5000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Dust ROT Z", ref l_U199._fU8, -5000.00000000, 5000.00000000, 1.00000000 );
    ADD_WIDGET_INT_SLIDER( "Dust Timer", ref l_U165, 60536, 5000, 100 );
    STOP_WIDGET_GROUP();
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "Airplane" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U305, -332.55430000, -19.50162000, 6.22011800, 0, 1 );
    ADD_WIDGET_FLOAT_SLIDER( "Airplane Start Time", ref l_U557, 0.00000000, 1.00000000, 0.01000000 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U554, "Airplane Pos", 1036831949 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( " Car fall" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U503, -223.31170000, -21.46038000, -11.46486000, 0, 1 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U524, "Location of car", 1036831949 );
    ADD_WIDGET_FLOAT_SLIDER( "Car Rotation", ref l_U527, 65176, 360, 1 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U528, "Location of car", 1036831949 );
    ADD_WIDGET_FLOAT_SLIDER( "Car Rotation", ref l_U531, 65176, 360, 1 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "MAX PAYNE MOMENT" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U332, -299.97890000, -19.37933000, 7.65722100, 266.43140000, 0 );
    ADD_WIDGET_INT_SLIDER( "Time to end MPM", ref l_U1374, 0, 10000, 1 );
    ADD_WIDGET_INT_SLIDER( "Time to start rayfire", ref l_U1373, 0, 10000, 1 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U586, "Chase Camera offset", 1036831949 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "MAX PAYNE MOMENT - simple" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U341, -299.97890000, -19.37933000, 7.65722100, 266.43140000, 0 );
    ADD_WIDGET_INT_SLIDER( "Time to shootdodge", ref l_U828, 1000, 10000, 500 );
    ADD_WIDGET_INT_SLIDER( "Time to start rayfire", ref l_U829, 1000, 10000, 500 );
    ADD_WIDGET_INT_SLIDER( "Time to unblock baddies", ref l_U830, 1000, 10000, 500 );
    ADD_WIDGET_FLOAT_SLIDER( "Shootdodge angle", ref l_U833, 0.00000000, 100.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Shootdodge strength", ref l_U832, 0.00000000, 10.00000000, 0.50000000 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "VIGNETTE 08 - Passos in alley" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U413, -29.61805000, -327.10050000, 0.06031800, 36.74372000, 0 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "VIGNETTE 08B - Final Two Carloads of Enemies" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U422, -29.61805000, -327.10050000, 0.06031800, 89.40000000, 0 );
    ADD_WIDGET_BOOL( "Task Peds Leave Cars", ref l_U1419 );
    ADD_WIDGET_FLOAT_SLIDER( "Car Door Ratio", ref l_U1420, 0, 1, 0.01000000 );
     /* P_ADD_WIDGET_PED_POSITION */ sub_6927( "First Car", ref l_U1422, ref l_U1425 );
     /* P_ADD_WIDGET_PED_POSITION */ sub_6927( "Second Car", ref l_U1427, ref l_U1430 );
    for ( I = 0; I <= (l_U1447 - 1); I++ )
    {
         /* P_ADD_WIDGET_PED_POSITION */ sub_6927( l_U1447[I]._fU56, ref l_U1447[I]._fU60, ref l_U1447[I]._fU84 );
    }
    for ( I = 0; I <= (l_U1517 - 1); I++ )
    {
         /* P_ADD_WIDGET_PED_POSITION */ sub_6927( l_U1517[I]._fU56, ref l_U1517[I]._fU60, ref l_U1517[I]._fU84 );
    }
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "VIGNETTE 09 - Passos parkour" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U431, -29.61805000, -327.10050000, 0.06031800, 90, 0 );
     /* P_ADD_WIDGET_PED_POSITION */ sub_6927( "Passos", ref l_U1602, ref l_U1605 );
    ADD_WIDGET_BOOL( "Make Passos Shoot", ref l_U1606 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "VIGNETTE 11 - Crazy Guy Go BOOM" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U440, g_U3141[1]._fU0, g_U3141[1]._fU12, 0 );
    ADD_WIDGET_INT_SLIDER( "VO Timer", ref l_U1617, 0, 5000, 1 );
     /* P_ADD_WIDGET_PED_POSITION */ sub_6927( "Crazy Guy", ref l_U1700, ref l_U1703 );
     /* P_ADD_WIDGET_PED_POSITION */ sub_6927( "GMED Left", ref l_U1672[0], ref l_U1682[0] );
     /* P_ADD_WIDGET_PED_POSITION */ sub_6927( "GMED Center", ref l_U1672[1], ref l_U1682[1] );
     /* P_ADD_WIDGET_PED_POSITION */ sub_6927( "GMED Right", ref l_U1672[2], ref l_U1682[2] );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "VIGNETTE 12 - Passos at window" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U449, g_U3141[1]._fU0, g_U3141[1]._fU12, 0 );
     /* P_ADD_WIDGET_PED_POSITION */ sub_6927( "Passos", ref l_U1720, ref l_U1723 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "VIGNETTE 17, 18, and 19 - Passos in Abandoned Building" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U458, g_U3141[5]._fU0, g_U3141[5]._fU12, 0 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U1202, "VIG_18 teleport position", 0.00100000 );
    ADD_WIDGET_FLOAT_SLIDER( "VIG_18 teleport rotation", ref l_U1205, 65176, 360, 1 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U1206, "VIG_19 teleport position", 0.00100000 );
    ADD_WIDGET_FLOAT_SLIDER( "VIG_19 teleport rotation", ref l_U1209, 65176, 360, 1 );
    ADD_WIDGET_BOOL( "Move Passos into ABDN", ref l_U1210 );
    ADD_WIDGET_BOOL( "Move Passos to Stairs", ref l_U1211 );
    ADD_WIDGET_BOOL( "Move Passos up Stairs", ref l_U1212 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "VIGNETTE 21 - Passos to fire escape" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U467, -247.15760000, -24.09435000, 5.09673000, 290.40350000, 0 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U1215, "Passos position", 0.00100000 );
    ADD_WIDGET_FLOAT_SLIDER( "Passos rotation", ref l_U1218, 65176, 360, 1 );
    ADD_WIDGET_BOOL( "Make Passos Talk", ref l_U1214 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "VIGNETTE 22 - Passos in chopshop" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U476, 135.00000000, 223.62000000, -10.45000000, 135.00000000, 0 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "VIGNETTE 24 - Passos leaving chopshop" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U485, 135.00000000, 223.62000000, -10.45000000, 135.00000000, 0 );
     /* P_ADD_WIDGET_PED_POSITION */ sub_6927( "Passos", ref l_U1400, ref l_U1403 );
     /* P_ADD_WIDGET_PED_POSITION */ sub_6927( "Passos at gate", ref l_U1404, ref l_U1407 );
    ADD_WIDGET_BOOL( "trigger alert open gate 5", ref l_U592[4] );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "VIGNETTE 26 - Passos in Yard" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U494, -193.46860000, -26.21138000, -11.60008000, 356.70840000, 0 );
     /* P_ADD_WIDGET_PED_POSITION */ sub_6927( "Passos", ref l_U1408, ref l_U1411 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "Apartment - News Clipping Placement" );
     /* P_ADD_ISEQUENCE_WIDGETS */ sub_4211( ref l_U512, g_U3141[1]._fU0, g_U3141[1]._fU12, 0 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U1734, "News Clipping Position", 1036831949 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U1737, "News Clipping Rotation", 1036831949 );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( " TV - VIGNETTE" );
    ADD_WIDGET_BOOL( " Teleport to TV ", ref l_U1724 );
    ADD_WIDGET_BOOL( " Start TV Vignette ", ref l_U1725 );
    ADD_WIDGET_BOOL( " Change Channel ", ref l_U1727 );
    ADD_WIDGET_BOOL( " Shut Off TV ", ref l_U1728 );
    ADD_WIDGET_BOOL( " Kill TV Vignette ", ref l_U1726 );
    START_WIDGET_GROUP( " Player position " );
    ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U1729._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U1729._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U1729._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
    ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U1732, -360.00000000, 360.00000000, 0.10000000 );
    STOP_WIDGET_GROUP();
    STOP_WIDGET_GROUP();
    STOP_WIDGET_GROUP();
    return;
}

/* P_ADD_ISEQUENCE_WIDGETS */ void sub_4211(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, boolean bParam5)
{
    iParam0->_fU0 = 0;
    iParam0->_fU4 = 0;
    iParam0->_fU12 = 0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {uParam1};
    iParam0->_fU32 = uParam4;
    ADD_WIDGET_BOOL( "Teleport player", iParam0 + 0 );
    if (bParam5)
    {
        ADD_WIDGET_BOOL( "Create Object No Anim", iParam0 + 8 );
    }
    ADD_WIDGET_BOOL( "Loop Sequence", iParam0 + 16 );
    ADD_WIDGET_BOOL( "Start Sequence", iParam0 + 4 );
    ADD_WIDGET_BOOL( "Kill Sequence", iParam0 + 12 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( iParam0 + 20, "Player Teleport Position", 1036831949 );
    ADD_WIDGET_FLOAT_SLIDER( "Player Teleport Heading", iParam0 + 32, 65176, 360, 0.50000000 );
    return;
}

/* P_ADD_WIDGET_VECTOR_SLIDER */ void sub_4483(int iParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam1 );
    ADD_WIDGET_FLOAT_SLIDER( "x", iParam0 + 0, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "y", iParam0 + 4, 60536, 5000, uParam2 );
    ADD_WIDGET_FLOAT_SLIDER( "z", iParam0 + 8, 60536, 5000, uParam2 );
    STOP_WIDGET_GROUP();
    return;
}

/* P_ADD_WIDGET_PED_POSITION */ void sub_6927(unknown uParam0, unknown uParam1, unknown uParam2)
{
    START_WIDGET_GROUP( uParam0 );
     /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( uParam1, "Ped Position", 1036831949 );
    ADD_WIDGET_FLOAT_SLIDER( "Ped Heading", uParam2, -360.00000000, 360.00000000, 1.00000000 );
    STOP_WIDGET_GROUP();
    return;
}

/* P_FADE_IN_AND_WAIT */ void sub_9191(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            DISPLAYF( "[SP]### Waiting for screen to fade in... ###", 0 );
            WAIT( 0 );
        }
    }
    return;
}

/* HANDLE_SIMPLE_MPM */ void sub_9358()
{
    if (l_U341._fU0)
    {
         /* ISEQUENCE_TELEPORT_PLAYER */ sub_9404( ref l_U341 );
    }
    if (l_U341._fU4)
    {
         /* UPDATE_SIMPLE_MPM */ sub_9876();
    }
    if (l_U341._fU12)
    {
         /* DESTROY_TOWER */ sub_10044();
         /* DESTROY_MPM_ENEMIES */ sub_19163();
         /* DISABLETIMER */ sub_18833( ref l_U1011 );
         /* DISABLETIMER */ sub_18833( ref l_U1020 );
         /* DISABLETIMER */ sub_18833( ref l_U1029 );
        l_U1038 = 0;
         /* P_CAM_SHAKE_FORCE_DEACTIVATE */ sub_17913( ref l_U962, 0 );
        if ( /* IS_MAX_VALID */ sub_9601())
        {
            CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_2548() );
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2586(), 1, 0 );
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 0 );
             /* TELEPORTPED */ sub_9748(  /* PLAYER_PED_ID */ sub_2548(), l_U341._fU20, l_U341._fU32 );
        }
        l_U831 = 0;
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U341 );
    }
    return;
}

/* ISEQUENCE_TELEPORT_PLAYER */ void sub_9404(int iParam0)
{
     /* P_FADE_OUT_AND_WAIT */ sub_9445( 1000 );
    if ( /* IS_MAX_VALID */ sub_9601())
    {
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 1 );
    }
     /* TELEPORTPED */ sub_9748(  /* PLAYER_PED_ID */ sub_2548(), iParam0->_fU20, iParam0->_fU32 );
    if ( /* IS_MAX_VALID */ sub_9601())
    {
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 0 );
    }
     /* P_FADE_IN_AND_WAIT */ sub_9191( 1000 );
    iParam0->_fU0 = 0;
    return;
}

/* P_FADE_OUT_AND_WAIT */ void sub_9445(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            DISPLAYF( "[SP]### Waiting for screen to fade out... ###", 0 );
            WAIT( 0 );
        }
    }
    return;
}

/* IS_MAX_VALID */ int sub_9601()
{
    if ( /* IS_PED_VALID */ sub_9631(  /* PLAYER_PED_ID */ sub_2548() ))
    {
        return 1;
    }
    return 0;
}

/* IS_PED_VALID */ int sub_9631(unknown uParam0)
{
    if ((NOT (IS_PED_DEAD( uParam0 ))) AND (DOES_PED_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

/* TELEPORTPED */ void sub_9748(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* UPDATE_SIMPLE_MPM */ void sub_9876()
{
    switch (l_U831)
    {
        case 0:
         /* P_FADE_OUT_AND_WAIT */ sub_9445( 1000 );
        l_U1038 = 0;
         /* CREATE_TOWER */ sub_9989( 1 );
         /* P_CAM_SHAKE_CREATE_STRUCT */ sub_11196( ref l_U962, 1, 1065353216, 10, -1, -1, 0, 0 );
         /* CREATETIMER */ sub_11863( ref l_U1011, l_U829, 1, 0 );
         /* CREATETIMER */ sub_11863( ref l_U1020, l_U830, 1, 0 );
         /* CREATETIMER */ sub_11863( ref l_U1029, l_U828, 1, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( -14.03891000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -38.07076000, 1065353216, 0 );
        if ( /* IS_MAX_VALID */ sub_9601())
        {
             /* F_GIVEPEDWEAPON */ sub_2652(  /* PLAYER_PED_ID */ sub_2548(), -862236369, 25000, 0, 0 );
             /* TELEPORTPED */ sub_9748(  /* PLAYER_PED_ID */ sub_2548(), -288.79860000, -18.03741000, 8, 315.11550000 );
             /* P_LIMIT_PLAYER_ACTIONS */ sub_12139();
        }
         /* CREATE_MPM_ENEMIES */ sub_12343();
         /* P_FADE_IN_AND_WAIT */ sub_9191( 1000 );
         /* STARTTIMER */ sub_16220( ref l_U1029 );
         /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_16002( ref l_U952, 0 );
         /* PED_ARRAY_TASK_COMBAT_PLAYER */ sub_16363( ref l_U952 );
         /* TASK_ROOFTOP1_ENEMY_SHOOT_TOWER */ sub_16872();
        l_U831 = 1;
        break;
        case 1:
        if ( /* ISTIMERDONE */ sub_17124( ref l_U1029 ))
        {
            if ( /* IS_PED_VALID */ sub_9631( l_U952[2] ))
            {
                 /* PED_TASK_COMBAT_PLAYER */ sub_16428( l_U952[2], 1 );
            }
             /* P_CAM_SHAKE_ACTIVATE */ sub_17340( ref l_U962 );
            START_PLAYER_SHOOTDODGE( 0.00000000, 0.10000000, 0.00000000, 0, 0, l_U833, l_U832 );
            if ( /* IS_MAX_VALID */ sub_9601())
            {
                SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_2548(), 0 );
                SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_2548(), 1, 1, 1, 1, 1 );
            }
            DISPLAY_HUD( 0 );
             /* STARTTIMER */ sub_16220( ref l_U1011 );
            l_U831 = 9;
        }
        break;
        case 9:
        if (IS_PLAYER_SHOOTDODGING())
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "Player is now shootdodging", 0 );
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2586(), 1, 0 );
            l_U831 = 2;
        }
        break;
        case 2:
        if ( /* ISTIMERDONE */ sub_17124( ref l_U1011 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "Timer has expired, play the rayfire", 0 );
            PLAY_OBJECT_ANIM( g_U3112, "RF_WT_anm01", "ny_anim", 0.10000000, 0, 1 );
            PLAY_OBJECT_ANIM( g_U3113, "RF_WT_anm02", "ny_anim", 0.10000000, 0, 1 );
            PLAY_OBJECT_ANIM( g_U3114, "RF_WATERTOWER_ANM", "ny_anim", 0.10000000, 0, 1 );
            PLAY_OBJECT_ANIM( g_U3115, "RF_WT_anm03", "ny_anim", 0.10000000, 0, 1 );
            PLAY_OBJECT_ANIM( g_U3116, "RF_WIRE_AA", "ny_anim", 0.10000000, 0, 1 );
             /* STARTTIMER */ sub_16220( ref l_U1020 );
             /* P_CAM_SHAKE_FORCE_DEACTIVATE */ sub_17913( ref l_U962, 0 );
            l_U831 = 3;
        }
        else
        {
             /* P_CAM_SHAKE_HANDLE */ sub_18114( ref l_U962 );
        }
        break;
        case 3:
        if ( /* HASTIMERBEENACTIVATED */ sub_18667( ref l_U1020 ))
        {
            if ( /* ISTIMERDONE */ sub_17124( ref l_U1020 ))
            {
                 /* WRITESCRIPTLOG */ sub_2257( "RJM", "Timer has expired, unblock enemies", 0 );
                 /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_16002( ref l_U900, 0 );
                 /* PED_ARRAY_TASK_COMBAT_PLAYER */ sub_16363( ref l_U900 );
                 /* DISABLETIMER */ sub_18833( ref l_U1020 );
                l_U1038 = 1;
            }
        }
        if (l_U1038)
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "Both timers have expired, wait for player to stop shootdodging", 0 );
            l_U831 = 4;
        }
        break;
        case 4:
        if (NOT IS_PLAYER_SHOOTDODGING())
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "Max is no longer shootdodging, make him vulnerable again", 0 );
            DISPLAY_HUD( 1 );
            if ( /* IS_MAX_VALID */ sub_9601())
            {
                SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_2548(), 1 );
                SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_2548(), 0, 0, 0, 0, 0 );
            }
        }
        l_U831 = 5;
        break;
        case 5:
        l_U341._fU4 = 0;
        break;
    }
    return;
}

/* CREATE_TOWER */ void sub_9989(boolean bParam0)
{
     /* WRITESCRIPTLOG */ sub_2257( "RJM", "CREATE_TOWER", " " );
     /* DESTROY_TOWER */ sub_10044();
    g_U3112 =  /* CREATEOBJECTNOOFFSET */ sub_10217( -1522991054, g_U3119, g_U3122, 0, 1, 0 );
    g_U3113 =  /* CREATEOBJECTNOOFFSET */ sub_10217( -1193498759, g_U3119, g_U3122, 0, 1, 0 );
    g_U3114 =  /* CREATEOBJECTNOOFFSET */ sub_10217( -946946919, g_U3119, g_U3122, 0, 1, 0 );
    g_U3115 =  /* CREATEOBJECTNOOFFSET */ sub_10217( 588151771, g_U3119, g_U3122, 0, 1, 0 );
    g_U3116 =  /* CREATEOBJECTNOOFFSET */ sub_10217( 216303562, g_U3119, g_U3122, 0, 1, 0 );
    g_U3117 =  /* CREATEOBJECTNOOFFSET */ sub_10217( -1915312722, g_U3119, g_U3122, 0, 1, 0 );
    g_U3118 =  /* CREATEOBJECTNOOFFSET */ sub_10217( -1549971141, g_U3119, g_U3122, 0, 1, 0 );
    FREEZE_OBJECT_POSITION( g_U3112, 1 );
    FREEZE_OBJECT_POSITION( g_U3113, 1 );
    FREEZE_OBJECT_POSITION( g_U3114, 1 );
    FREEZE_OBJECT_POSITION( g_U3115, 1 );
    FREEZE_OBJECT_POSITION( g_U3116, 1 );
    FREEZE_OBJECT_POSITION( g_U3117, 1 );
    FREEZE_OBJECT_POSITION( g_U3118, 1 );
    SET_OBJECT_COLLISION( g_U3112, 0 );
    SET_OBJECT_COLLISION( g_U3113, 0 );
    SET_OBJECT_COLLISION( g_U3114, 0 );
    SET_OBJECT_COLLISION( g_U3115, 0 );
    SET_OBJECT_COLLISION( g_U3116, 0 );
    SET_OBJECT_COLLISION( g_U3117, 0 );
    SET_OBJECT_COLLISION( g_U3118, 0 );
    if (bParam0)
    {
        SET_OBJECT_VISIBLE( g_U3118, 0 );
    }
    else
    {
        SET_OBJECT_VISIBLE( g_U3117, 0 );
    }
    return;
}

/* DESTROY_TOWER */ void sub_10044()
{
     /* CLEANOBJECT */ sub_10075( g_U3112 );
     /* CLEANOBJECT */ sub_10075( g_U3113 );
     /* CLEANOBJECT */ sub_10075( g_U3114 );
     /* CLEANOBJECT */ sub_10075( g_U3115 );
     /* CLEANOBJECT */ sub_10075( g_U3116 );
     /* CLEANOBJECT */ sub_10075( g_U3117 );
     /* CLEANOBJECT */ sub_10075( g_U3118 );
    return;
}

/* CLEANOBJECT */ void sub_10075(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

/* CREATEOBJECTNOOFFSET */ void sub_10217(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_10350( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* LOADMODEL */ void sub_10350(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_3037( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_CAM_SHAKE_CREATE_STRUCT */ void sub_11196(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (iParam0->_fU168 == 0)
    {
         /* P_CAM_SHAKE_SET_SHAKE_TYPE */ sub_11252( iParam0, uParam1 );
        iParam0->_fU192 = uParam1;
        iParam0->_fU36 = uParam2;
        iParam0->_fU148 = uParam3;
        iParam0->_fU152 = uParam4;
        iParam0->_fU156 = uParam5;
        iParam0->_fU160 = uParam7;
        iParam0->_fU176 = uParam6;
    }
     /* RESETTIMER */ sub_11652( iParam0 + 40 );
     /* RESETTIMER */ sub_11652( iParam0 + 76 );
     /* RESETTIMER */ sub_11652( iParam0 + 112 );
    iParam0->_fU172 = iParam0->_fU176;
    iParam0->_fU164 = 0;
    iParam0->_fU168 = 1;
    iParam0->_fU184 = 0;
    iParam0->_fU188 = 0;
    return;
}

/* P_CAM_SHAKE_SET_SHAKE_TYPE */ void sub_11252(int iParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case 1:
        StrCopy( ref iParam0->_fU4, "SMALL_EXPLOSION_SHAKE", 32 );
        break;
        case 2:
        StrCopy( ref iParam0->_fU4, "MEDIUM_EXPLOSION_SHAKE", 32 );
        break;
        case 3:
        StrCopy( ref iParam0->_fU4, "LARGE_EXPLOSION_SHAKE", 32 );
        break;
        case 4:
        StrCopy( ref iParam0->_fU4, "HAND_SHAKE", 32 );
        break;
        case 5:
        StrCopy( ref iParam0->_fU4, "JOLT_SHAKE", 32 );
        break;
        case 6:
        StrCopy( ref iParam0->_fU4, "VIBRATE_SHAKE", 32 );
        break;
        case 7:
        StrCopy( ref iParam0->_fU4, "WOBBLY_SHAKE", 32 );
        break;
    }
    iParam0->_fU0 = iParam0->_fU192;
    return;
}

/* RESETTIMER */ void sub_11652(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* CREATETIMER */ void sub_11863(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* P_LIMIT_PLAYER_ACTIONS */ void sub_12139()
{
     /* WRITESCRIPTLOG */ sub_2257( "SA", "P_LIMIT_PLAYER_ACTIONS", "###" );
    if (((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )) == 0) AND ((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2586() )) == 0))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2586(), 0, 0 );
        REENABLE_PLAYER_INPUT( 7 );
        REENABLE_PLAYER_INPUT( 6 );
        REENABLE_PLAYER_INPUT( 4 );
        REENABLE_PLAYER_INPUT( 5 );
        REENABLE_PLAYER_INPUT( 14 );
        REENABLE_PLAYER_INPUT( 15 );
        REENABLE_PLAYER_INPUT( 16 );
        REENABLE_PLAYER_INPUT( 17 );
        REENABLE_PLAYER_INPUT( 19 );
    }
    return;
}

/* CREATE_MPM_ENEMIES */ void sub_12343()
{
     /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U834[0], -289.07000000, 1.40000000, 1.45000000, -149.41000000, g_U3097, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U834[1], -288.36000000, 3.48000000, 1.45000000, -168.23000000, g_U3097, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U834[2], -287.24000000, 3.48000000, 1.45000000, -178.57000000, g_U3097, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U834[3], -285.95000000, 3.04000000, 1.45000000, -175.12000000, g_U3097, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U834[4], -285.37000000, 1.15000000, 1.45000000, 141.57000000, g_U3097, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U912[0], -277.42280000, -23.64961000, 4.46003100, 117.29320000, g_U3097, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U912[1], -277.42280000, -21.64961000, 4.46003100, 117.29320000, g_U3097, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U912[2], -277.42280000, -19.64961000, 4.46003100, 117.29320000, g_U3097, 7, 3, 2, 0, 0 );
     /* PED_ARRAY_INITIALIZE */ sub_12879( ref l_U834, ref l_U900, ref l_U906, -862236369, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, 0 );
     /* PED_ARRAY_INITIALIZE */ sub_12879( ref l_U912, ref l_U952, ref l_U956, -862236369, 1.00000000, "AIT_EXPERT", 0, 0, 25000, 2, 0, 25000, 0 );
     /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_16002( ref l_U900, 1 );
     /* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_16002( ref l_U952, 1 );
    return;
}

/* P_CREATEPEDSTRUCT */ void sub_12413(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

/* PED_ARRAY_INITIALIZE */ void sub_12879(unknown uParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5, boolean bParam6, unknown uParam7, unknown uParam8, unknown uParam9, int iParam10, unknown uParam11, unknown uParam12)
{
    int I;
    unknown uVar16;

    if ((uParam0^) != (uParam1^))
    {
        SCRIPT_ASSERT( "PED_ARRAY_INITIALIZE - Array sizes don't match!!", 0 );
        return;
    }
     /* P_SETUP_AI_GROUP */ sub_12991( uParam2, uParam4, 0 );
    if (IS_STRING_NULL( uParam12 ))
    {
        uParam12 = l_U37;
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* CLEANPED */ sub_13425( (uParam1^)[I] );
        (uParam1^)[I] =  /* CREATEPED */ sub_13517( ref (uParam0^)[I] );
        if ( /* IS_PED_VALID */ sub_9631( (uParam1^)[I] ))
        {
            SET_PED_AI_TEMPLATE( (uParam1^)[I], uParam5 );
            SET_PED_ALERTNESS( (uParam1^)[I], uParam9 );
            SET_PED_ALLOWED_TO_SURRENDER( (uParam1^)[I], 0 );
             /* P_QUICK_ADD_PED_TO_GROUP */ sub_14312( (uParam1^)[I], uParam2 );
            if (iParam3 != -1569615261)
            {
                uVar16 =  /* F_GIVEPEDWEAPON */ sub_2652( (uParam1^)[I], iParam3, uParam8, 0, 0 );
            }
            if (iParam10 != 0)
            {
                 /* F_GIVEPEDWEAPONTOHOLSTER */ sub_14755( (uParam1^)[I], iParam10, 0, uParam11, 0 );
            }
            if (bParam6)
            {
                 /* PED_SET_ENGAGEMENT_RANGES */ sub_15192( (uParam1^)[I], iParam3 );
            }
            switch (uParam7)
            {
                case 0: break;
                case 1:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 13, 1 );
                break;
                case 2:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 14, 1 );
                break;
                case 3:
                ENABLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                TOGGLE_WEAPON_ATTACHMENT( uVar16, 12, 1 );
                break;
            }
        }
    }
     /* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ sub_15808( uParam1, uParam12 );
    return;
}

/* P_SETUP_AI_GROUP */ void sub_12991(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP TOLD TO WAIT FOR GROUP TO EXIST ###" );
        PRINTNL();
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
            PRINTSTRING( "[MSWW]### GROUP ###" );
            PRINTNL();
        }
        PRINTSTRING( "[MSWW]### P_SETUP_AI_GROUP created group with ID: " );
        PRINTINT( iParam0->_fU0 );
        PRINTNL();
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

/* CLEANPED */ void sub_13425(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* CREATEPED */ void sub_13517(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_10350( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_14008( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_14109( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_14008(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_14109(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_QUICK_ADD_PED_TO_GROUP */ void sub_14312(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
         /* WRITE_STRING */ sub_3037( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
             /* P_SETUP_AI_GROUP */ sub_12991( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
             /* P_SETUP_AI_GROUP */ sub_12991( iParam1, 1056964608, 0 );
        }
    }
    else
    {
        PRINTSTRING( "[MSWW]### P_QUICK_ADD_PED_TO_GROUP adding ped to group with ID: " );
        PRINTINT( iParam1->_fU0 );
        PRINTNL();
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_14755(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_3037( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* PED_SET_ENGAGEMENT_RANGES */ void sub_15192(unknown uParam0, unknown uParam1)
{
    switch (uParam1)
    {
        case -1569615261:
        case 406496141:
        case -862236369:
        case 456708483:
        case -1464892298:
        case 68019059:
        case -612753081:
        case -820634585:
        SET_PED_COMBAT_RANGE_MAX( uParam0, 10.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 434544317:
        case 1845102363:
        case -168327769:
        case -184942895:
        case 514118749:
        case 1964270085:
        case -691403429:
        case 1478009203:
        case -1404433099:
        case 1194438308:
        SET_PED_COMBAT_RANGE( uParam0, 1 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 20.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case -1013714740:
        case -1074756423:
        case 1308526797:
        case 840671040:
        case 57534114:
        case 724901397:
        case 1992962408:
        SET_PED_COMBAT_RANGE( uParam0, 2 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 30.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 1.00000000 );
        break;
        case 1224272620:
        case 10648147:
        case 377623895:
        case 319712764:
        case -110877124:
        case -1659006841:
        SET_PED_COMBAT_RANGE( uParam0, 3 );
        SET_PED_COMBAT_RANGE_MAX( uParam0, 50.00000000 );
        SET_PED_COMBAT_RANGE_MIN( uParam0, 5.00000000 );
        break;
    }
    return;
}

/* GIVE_DEBUG_NAMES_TO_PEDS_IN_ARRAY */ void sub_15808(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

/* PED_ARRAY_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ void sub_16002(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_16085( ref (uParam0^)[I], uParam1 );
    }
    return;
}

/* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ void sub_16085(unknown uParam0, unknown uParam1)
{
    if ( /* IS_PED_VALID */ sub_9631( (uParam0^) ))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^), uParam1 );
    }
    return;
}

/* STARTTIMER */ void sub_16220(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* PED_ARRAY_TASK_COMBAT_PLAYER */ void sub_16363(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* PED_TASK_COMBAT_PLAYER */ sub_16428( (uParam0^)[I], 1 );
    }
    return;
}

/* PED_TASK_COMBAT_PLAYER */ void sub_16428(unknown uParam0, boolean bParam1)
{
    if ((NOT (IS_PED_RAGDOLL( uParam0, 0 ))) AND ((NOT (IS_PED_INJURED( uParam0 ))) AND (( /* IS_MAX_VALID */ sub_9601()) AND ( /* IS_PED_VALID */ sub_9631( uParam0 )))))
    {
        if (bParam1)
        {
            CLEAR_PED_TASKS_IMMEDIATELY( uParam0 );
        }
        CLEAR_LOCKED_TARGET( uParam0 );
         /* PED_SET_REGISTER_TARGET_PLAYER */ sub_16530( ref uParam0 );
         /* PED_SET_LOCKED_ON_PLAYER */ sub_16685( ref uParam0 );
        TASK_COMBAT_PED( uParam0,  /* PLAYER_PED_ID */ sub_2548() );
    }
    return;
}

/* PED_SET_REGISTER_TARGET_PLAYER */ void sub_16530(unknown uParam0)
{
    if (( /* IS_MAX_VALID */ sub_9601()) AND ( /* IS_PED_VALID */ sub_9631( (uParam0^) )))
    {
         /* PED_SET_REGISTER_TARGET */ sub_16599( uParam0,  /* PLAYER_PED_ID */ sub_2548() );
    }
    return;
}

/* PED_SET_REGISTER_TARGET */ void sub_16599(unknown uParam0, unknown uParam1)
{
    if (( /* IS_PED_VALID */ sub_9631( uParam1 )) AND ( /* IS_PED_VALID */ sub_9631( (uParam0^) )))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* PED_SET_LOCKED_ON_PLAYER */ void sub_16685(unknown uParam0)
{
    if (( /* IS_MAX_VALID */ sub_9601()) AND ( /* IS_PED_VALID */ sub_9631( (uParam0^) )))
    {
         /* PED_SET_LOCKED_ON_PED */ sub_16748( uParam0,  /* PLAYER_PED_ID */ sub_2548() );
    }
    return;
}

/* PED_SET_LOCKED_ON_PED */ void sub_16748(unknown uParam0, unknown uParam1)
{
    if (( /* IS_PED_VALID */ sub_9631( uParam1 )) AND ( /* IS_PED_VALID */ sub_9631( (uParam0^) )))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

/* TASK_ROOFTOP1_ENEMY_SHOOT_TOWER */ void sub_16872()
{
    unknown uVar2;

    if ( /* IS_PED_VALID */ sub_9631( l_U952[2] ))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( l_U952[2] );
        REMOVE_PED_WEAPON( l_U952[2], GET_WEAPON_FROM_HAND( l_U952[2], 0, 0 ) );
         /* F_GIVEPEDWEAPON */ sub_2652( l_U952[2], -1074756423, 25000, 0, 0 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_SHOOT_AT_COORD( 0, -287.00000000, -16.51000000, 1.61000000, 5000, -256437761, 0, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U952[2], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    return;
}

/* ISTIMERDONE */ int sub_17124(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_CAM_SHAKE_ACTIVATE */ void sub_17340(int iParam0)
{
     /* RESETTIMER */ sub_11652( iParam0 + 40 );
     /* RESETTIMER */ sub_11652( iParam0 + 76 );
     /* RESETTIMER */ sub_11652( iParam0 + 112 );
    iParam0->_fU172 = 1;
    iParam0->_fU164 = 0;
    return;
}

/* P_CAM_SHAKE_FORCE_DEACTIVATE */ void sub_17913(int iParam0, int iParam1)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam1 == 1)
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam1 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam1 );
        }
        else
        {
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
        }
         /* RESETTIMER */ sub_11652( iParam0 + 40 );
         /* RESETTIMER */ sub_11652( iParam0 + 76 );
         /* RESETTIMER */ sub_11652( iParam0 + 112 );
        iParam0->_fU172 = 0;
    }
    return;
}

/* P_CAM_SHAKE_HANDLE */ void sub_18114(int iParam0)
{
    if (iParam0->_fU172 == 1)
    {
        if (iParam0->_fU164 == 0)
        {
             /* CREATETIMER */ sub_11863( iParam0 + 40, iParam0->_fU148, 1, 0 );
             /* STARTTIMER */ sub_16220( iParam0 + 40 );
            if (iParam0->_fU152 > 0)
            {
                 /* CREATETIMER */ sub_11863( iParam0 + 76, iParam0->_fU152, 1, 0 );
                 /* STARTTIMER */ sub_16220( iParam0 + 76 );
            }
            iParam0->_fU164 = 1;
        }
        if ( /* ISTIMERDONE */ sub_17124( iParam0 + 40 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "ML", "P_HANDLE_CAM_SHAKE is shaking the camera", "---" );
             /* P_SHAKE_CAM */ sub_18343( iParam0 + 4, iParam0->_fU36 );
            if (iParam0->_fU156 > 0)
            {
                 /* CREATETIMER */ sub_11863( iParam0 + 112, iParam0->_fU156, 1, 0 );
                 /* STARTTIMER */ sub_16220( iParam0 + 112 );
            }
        }
        if ( /* ISTIMERDONE */ sub_17124( iParam0 + 112 ))
        {
             /* P_SHAKE_CAM */ sub_18343( iParam0 + 4, iParam0->_fU36 );
             /* CREATETIMER */ sub_11863( iParam0 + 112, iParam0->_fU156, 1, 0 );
             /* STARTTIMER */ sub_16220( iParam0 + 112 );
        }
        if ( /* ISTIMERDONE */ sub_17124( iParam0 + 76 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "ML", "P_HANDLE_CAM_SHAKE is done shaking the camera", "---" );
            STOP_CAM_SHAKING( GET_RENDERING_CAM(), iParam0->_fU160 );
            STOP_GAMEPLAY_CAM_SHAKING( iParam0 + 4, iParam0->_fU160 );
             /* RESETTIMER */ sub_11652( iParam0 + 112 );
            iParam0->_fU172 = 0;
        }
    }
    return;
}

/* P_SHAKE_CAM */ void sub_18343(unknown uParam0, unknown uParam1)
{
    SHAKE_CAM( GET_RENDERING_CAM(), uParam0, uParam1 );
    SHAKE_GAMEPLAY_CAM( uParam0, uParam1 );
    return;
}

/* HASTIMERBEENACTIVATED */ int sub_18667(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* DISABLETIMER */ void sub_18833(int iParam0)
{
    iParam0->_fU20 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* DESTROY_MPM_ENEMIES */ void sub_19163()
{
     /* CLEANPEDARRAY */ sub_19199( ref l_U900 );
     /* CLEANPEDARRAY */ sub_19199( ref l_U952 );
    return;
}

/* CLEANPEDARRAY */ void sub_19199(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_13425( (uParam0^)[I] );
    }
    return;
}

/* P_RESET_ISEQUENCE_WIDGET_BOOLS */ void sub_19419(int iParam0)
{
    iParam0->_fU0 = 0;
    iParam0->_fU4 = 0;
    iParam0->_fU12 = 0;
    iParam0->_fU16 = 0;
    return;
}

/* HANDLE_MPM */ void sub_19502()
{
    if (l_U591)
    {
         /* UPDATE_JUST_NIS */ sub_19535();
    }
    if (l_U332._fU0)
    {
         /* ISEQUENCE_TELEPORT_PLAYER */ sub_9404( ref l_U332 );
    }
    if (l_U332._fU4)
    {
         /* HANDLE_ROOFTOP_MPM */ sub_23988();
    }
    if (l_U332._fU12)
    {
         /* DESTROY_TOWER */ sub_10044();
        l_U1303 = 1;
         /* DESTROY_NIS_CAMERAS */ sub_23854();
        if ( /* IS_MAX_VALID */ sub_9601())
        {
            CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_2548() );
        }
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2586(), 1, 0 );
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 0 );
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U332 );
    }
    return;
}

/* UPDATE_JUST_NIS */ void sub_19535()
{
    switch (l_U573)
    {
        case 0:
         /* CREATE_NIS_CAMERAS */ sub_19599();
        l_U680._fU88 = 1;
        l_U573 = 1;
        break;
        case 1:
        while (l_U680._fU88 != 0)
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "NIS is playing", 0 );
            WAIT( 0 );
             /* NIS_HANDLE_NIS */ sub_22071( ref l_U680, ref l_U703, 1, 1, 0, 1 );
        }
        l_U573 = 2;
        break;
        case 2:
         /* DESTROY_NIS_CAMERAS */ sub_23854();
        l_U591 = 0;
        l_U573 = 0;
        break;
    }
    return;
}

/* CREATE_NIS_CAMERAS */ void sub_19599()
{
    int iVar2;

    iVar2 = 5000;
     /* P_CAM_SHAKE_CREATE_STRUCT */ sub_11196( ref l_U631, l_U630, 0.20000000, 10, 2000, -1, 0, 0 );
     /* P_CAM_SHAKE_SET_SHAKE_TYPE */ sub_11252( ref l_U631, l_U630 );
     /* NIS_CREATE_STATIC_CAM */ sub_19698( ref l_U598, l_U580, l_U583, l_U589, iVar2 );
     /* NIS_CREATE_NIS */ sub_19953( ref l_U680, ref l_U703, 0, 1000, 0, -859915232, -859915232, 1 );
     /* NIS_CREATE_STATIC_CAM */ sub_19698( ref l_U703[0], -292.37620000, -22.30226000, 9.32459600, 0.05296600, 0.02827700, 0.02827700, l_U589, 2000 );
     /* NIS_CREATE_INTERP_CAM */ sub_20279( ref l_U703[1], ref l_U703[0]._fU0, -290.96910000, -18.89202000, 10.05814000, -15.92682000, -0.00000600, -87.76478000, l_U589, 1000, 1000, 1, 1 );
     /* NIS_CREATE_INTERP_CAM */ sub_20279( ref l_U703[2], ref l_U703[1]._fU0, -290.22540000, -17.54646000, 10.48699000, -19.59109000, 0.00001700, -59.83569000, l_U589, 1000, 1000, 1, 1 );
     /* NIS_CREATE_INTERP_CAM */ sub_20279( ref l_U703[3], ref l_U703[2]._fU0, -284.48260000, -13.10142000, 8.23958900, -31.47138000, 0.00003000, 12.81060000, l_U589, 1000, 1000, 1, 1 );
    if (NOT l_U590)
    {
         /* NIS_ADD_WIDGET_NIS_TUNER */ sub_21159( ref l_U680, ref l_U703, "MPM NIS widgets", ref l_U591 );
        l_U590 = 1;
    }
    return;
}

/* NIS_CREATE_STATIC_CAM */ void sub_19698(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
     /* CREATETIMER */ sub_11863( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U649, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

/* NIS_CREATE_NIS */ void sub_19953(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, float fParam5, float fParam6, unknown uParam7)
{
    iParam0->_fU0 = (uParam1^);
    iParam0->_fU4 = uParam7;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = 0;
    iParam0->_fU16 = 0;
    if (iParam3 > 0)
    {
        iParam0->_fU20 = 1;
    }
    else
    {
        iParam0->_fU20 = 0;
    }
    iParam0->_fU24 = iParam3;
    if (fParam5 == -1E8)
    {
        iParam0->_fU28 = 0;
    }
    else
    {
        iParam0->_fU28 = fParam5;
    }
    if (fParam6 == -1E8)
    {
        iParam0->_fU32 = 0;
    }
    else
    {
        iParam0->_fU32 = fParam6;
    }
    iParam0->_fU36 = uParam4;
    iParam0->_fU40 = uParam2;
     /* CREATETIMER */ sub_11863( iParam0 + 52, iParam3, 1, 0 );
    iParam0->_fU88 = 0;
    return;
}

/* NIS_CREATE_INTERP_CAM */ void sub_20279(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12)
{
    iParam0->_fU4 = {uParam5};
    iParam0->_fU16 = {uParam2};
    iParam0->_fU28 = uParam8;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam10;
    iParam0->_fU88 = uParam9;
    iParam0->_fU92 = 1;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU96 = 0;
    if (NOT ((uParam1^) == nil))
    {
        iParam0->_fU120 = (uParam1^);
    }
    else
    {
        SCRIPT_ASSERT( "Can Not Create Interpolated Camera - Source cam is not initialized.  Use NIS_CreateStaticCam to fix.", 0 );
    }
     /* CREATETIMER */ sub_11863( iParam0 + 48, uParam10, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref g_U649, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    iParam0->_fU100 = uParam11;
    iParam0->_fU104 = uParam12;
    if (iParam0->_fU108 == 1)
    {
        if (iParam0->_fU112 == 1)
        {
            iParam0->_fU104 = 2;
        }
        else if (iParam0->_fU112 == 2)
        {
            iParam0->_fU104 = 4;
        }
        else if (iParam0->_fU112 == 3)
        {
            iParam0->_fU104 = 3;
        }
        else if (iParam0->_fU112 == 4)
        {
            iParam0->_fU104 = 0;
        }
        else if (iParam0->_fU112 == 5)
        {
            iParam0->_fU104 = 5;
        }
        else if (iParam0->_fU112 == 6)
        {
            iParam0->_fU104 = 1;
        };;;;;;
        if (iParam0->_fU116 == 1)
        {
            iParam0->_fU100 = 2;
        }
        else if (iParam0->_fU116 == 2)
        {
            iParam0->_fU100 = 4;
        }
        else if (iParam0->_fU116 == 3)
        {
            iParam0->_fU100 = 3;
        }
        else if (iParam0->_fU116 == 4)
        {
            iParam0->_fU100 = 0;
        }
        else if (iParam0->_fU116 == 5)
        {
            iParam0->_fU100 = 5;
        }
        else if (iParam0->_fU116 == 6)
        {
            iParam0->_fU100 = 1;
        };;;;;;
    }
    return;
}

/* NIS_ADD_WIDGET_NIS_TUNER */ void sub_21159(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "Zero cams in passed NIS struct, this is a possibly invalid NIS sequence!", 0 );
    }
    START_WIDGET_GROUP( uParam2 );
    for ( I = 0; I < (uParam1^); I++ )
    {
        START_WIDGET_GROUP( "NIS CAMERA" );
        if ((uParam1^)[I]._fU92 == 1)
        {
            ADD_WIDGET_INT_SLIDER( "Interp Length", ref (uParam1^)[I]._fU88, 0, 999999999, 100 );
            START_NEW_WIDGET_COMBO();
            ADD_TO_WIDGET_COMBO( "DEFAULT SCRIPTED VALUE" );
            ADD_TO_WIDGET_COMBO( "GRAPH_TYPE_ACCEL" );
            ADD_TO_WIDGET_COMBO( "GRAPH_TYPE_CUSTOM" );
            ADD_TO_WIDGET_COMBO( "GRAPH_TYPE_DECEL" );
            ADD_TO_WIDGET_COMBO( "GRAPH_TYPE_LINEAR" );
            ADD_TO_WIDGET_COMBO( "GRAPH_TYPE_MAX" );
            ADD_TO_WIDGET_COMBO( "GRAPH_TYPE_SIN_ACCEL_DECEL" );
            STOP_WIDGET_COMBO( "Interp Pos", ref (uParam1^)[I]._fU116 );
            START_NEW_WIDGET_COMBO();
            ADD_TO_WIDGET_COMBO( "DEFAULT SCRIPTED VALUE" );
            ADD_TO_WIDGET_COMBO( "GRAPH_TYPE_ACCEL" );
            ADD_TO_WIDGET_COMBO( "GRAPH_TYPE_CUSTOM" );
            ADD_TO_WIDGET_COMBO( "GRAPH_TYPE_DECEL" );
            ADD_TO_WIDGET_COMBO( "GRAPH_TYPE_LINEAR" );
            ADD_TO_WIDGET_COMBO( "GRAPH_TYPE_MAX" );
            ADD_TO_WIDGET_COMBO( "GRAPH_TYPE_SIN_ACCEL_DECEL" );
            STOP_WIDGET_COMBO( "Interp Rot", ref (uParam1^)[I]._fU112 );
        }
        ADD_WIDGET_INT_SLIDER( "Length", ref (uParam1^)[I]._fU84, 0, 999999999, 50 );
        STOP_WIDGET_GROUP();
        (uParam1^)[I]._fU108 = 1;
    }
    ADD_WIDGET_BOOL( "Play NIS", uParam3 );
    STOP_WIDGET_GROUP();
    return;
}

/* NIS_HANDLE_NIS */ void sub_22071(int iParam0, unknown uParam1, int iParam2, int iParam3, boolean bParam4, unknown uParam5)
{
    int I;

    I = 0;
    switch (iParam0->_fU88)
    {
        case 1:
        for ( I = 0; I < (uParam1^); I++ )
        {
            if (NOT (uParam1^)[I]._fU92)
            {
                 /* NIS_CREATE_STATIC_CAM */ sub_19698( ref (uParam1^)[I], (uParam1^)[I]._fU16, (uParam1^)[I]._fU4, (uParam1^)[I]._fU28, (uParam1^)[I]._fU84 );
            }
            else
            {
                 /* NIS_CREATE_INTERP_CAM */ sub_20279( ref (uParam1^)[I], ref (uParam1^)[I]._fU120, (uParam1^)[I]._fU16, (uParam1^)[I]._fU4, (uParam1^)[I]._fU28, (uParam1^)[I]._fU88, (uParam1^)[I]._fU84, 1, 1 );
            }
        }
        if (iParam2 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* NIS_PRE_SETUP */ sub_22363( iParam0->_fU4, 0, 0, uParam5 );
        iParam0->_fU88 = 2;
        iParam0->_fU8 = 1;
        iParam0->_fU12 = 1;
        if (NOT bParam4)
        {
            break;
        }
        case 2:
        I = 0;
        for ( I = 0; I < (uParam1^); I++ )
        {
            if (I == 0)
            {
                if ((NOT (uParam1^)[I]._fU32) AND (NOT ( /* NIS_IS_SHOT_FINISHED */ sub_22609( ref (uParam1^)[I], 0 ))))
                {
                     /* NIS_PLAY_STATIC_CAMERA */ sub_22792( ref (uParam1^)[I] );
                    if (iParam3 == 1)
                    {
                        if (iParam0->_fU40 == 1)
                        {
                             /* P_FADE_IN_AND_WAIT */ sub_9191( 500 );
                        }
                        else
                        {
                            DO_SCREEN_FADE_IN( 0 );
                        }
                    }
                }
            }
            else if ((NOT (uParam1^)[I]._fU32) AND (( /* NIS_IS_SHOT_FINISHED */ sub_22609( ref (uParam1^)[I - 1], 0 )) == 1))
            {
                 /* NIS_PLAY_CAM */ sub_22993( ref (uParam1^)[I] );
            }
            if (I == ((uParam1^) - 1))
            {
                if (( /* NIS_IS_SHOT_FINISHED */ sub_22609( ref (uParam1^)[I], 0 )) == 1)
                {
                     /* STARTTIMER */ sub_16220( iParam0 + 52 );
                    if (iParam0->_fU20 == 1)
                    {
                         /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_23238( iParam0->_fU24, iParam0->_fU20, iParam0->_fU36, iParam0->_fU28, iParam0->_fU32, 0 );
                    }
                    else if (iParam0->_fU20 == 0)
                    {
                         /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_23238( 0, iParam0->_fU20, iParam0->_fU36, iParam0->_fU28, iParam0->_fU32, 0 );
                    }
                    iParam0->_fU88 = 4;
                }
            }
        }
        if ((NOT bParam4) || (iParam0->_fU88 != 4))
        {
            break;
        }
        case 4:
        if (( /* ISTIMERDONE */ sub_17124( iParam0 + 52 )) == 1)
        {
            iParam0->_fU88 = 5;
        }
        if ((NOT bParam4) || (iParam0->_fU88 != 5))
        {
            break;
        }
        case 5:
         /* NIS_POST_SETUP */ sub_23507( 1, 1 );
        iParam0->_fU8 = 0;
        iParam0->_fU88 = 0;
        break;
    }
    return;
}

/* NIS_PRE_SETUP */ void sub_22363(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )))
        {
            SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2586(), 0, uParam2 );
            SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_2548(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY(  /* PLAYER_PED_ID */ sub_2548() );
            }
            SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_2548(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

/* NIS_IS_SHOT_FINISHED */ int sub_22609(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_17124( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || ( /* ISTIMERDONE */ sub_17124( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

/* NIS_PLAY_STATIC_CAMERA */ void sub_22792(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_16220( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* NIS_PLAY_CAM */ void sub_22993(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    if (iParam0->_fU92 == 1)
    {
        SET_CAM_ACTIVE_WITH_INTERP( iParam0->_fU0, iParam0->_fU120, iParam0->_fU88, iParam0->_fU100, iParam0->_fU104 );
    }
    else
    {
        SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    }
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
     /* STARTTIMER */ sub_16220( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

/* NIS_RETURN_TO_GAMEPLAY_CAM */ void sub_23238(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

/* NIS_POST_SETUP */ void sub_23507(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_2586(), 1, 0 );
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_2548(), 0 );
        if (bParam0)
        {
             /* P_MAX_RELOAD_WEAPONS */ sub_23605();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

/* P_MAX_RELOAD_WEAPONS */ void sub_23605()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_2548(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP(  /* PLAYER_PED_ID */ sub_2548(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

/* DESTROY_NIS_CAMERAS */ void sub_23854()
{
     /* P_CAM_SHAKE_FORCE_DEACTIVATE */ sub_17913( ref l_U631, 1 );
     /* NIS_RETURN_TO_GAMEPLAY_CAM */ sub_23238( 0, 1, 0, -859915232, -859915232, 0 );
     /* NIS_POST_SETUP */ sub_23507( 1, 1 );
    return;
}

/* HANDLE_ROOFTOP_MPM */ void sub_23988()
{
    int Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

     /* START_ROOFTOP_MPM_RAYFIRE */ sub_24020( 0 );
    Result = 0;
    switch (l_U1303)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_2257( "bsw", "HANDLE_ROOFTOP_MPM - launching rooftop MPM", 0 );
         /* NIS_PRE_SETUP */ sub_22363( 1, 0, 0, 1 );
        DO_SCREEN_FADE_IN( 500 );
         /* CREATETIMER */ sub_11863( ref l_U1337, uVar3, 1, 0 );
         /* STARTTIMER */ sub_16220( ref l_U1337 );
         /* MAR_NY_HOLSTERRIFLEORDUALANDDRAWPISTOL */ sub_24758( ref uVar4, ref uVar5 );
         /* LOADISEQ */ sub_25650( 1419096468, 1 );
         /* LOADISEQ */ sub_25650( 1681130475, 0 );
         /* TELEPORTPED */ sub_9748(  /* PLAYER_PED_ID */ sub_2548(), g_U3101, g_U3104 );
        ISEQ_REGISTER_ENTITY( 1419096468, "ny_mpm_max",  /* PLAYER_PED_ID */ sub_2548(), 0 );
        ISEQ_START( 1419096468 );
        l_U1303 = 2;
        break;
        case 2:
        if ( /* ISTIMERDONE */ sub_17124( ref l_U1337 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "bsw", "HANDLE_ROOFTOP_MPM - activating bullet time...", 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( -0.47066700, 1, 1 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( -25.12596000, 1, 1 );
             /* CREATETIMER */ sub_11863( ref l_U1364, l_U1373, 1, 0 );
             /* STARTTIMER */ sub_16220( ref l_U1364 );
             /* NIS_POST_SETUP */ sub_23507( 1, 1 );
             /* TOGGLE_MPM_SETTINGS */ sub_26169( 1 );
             /* CREATETIMER */ sub_11863( ref l_U1355, l_U1374, 1, 0 );
             /* STARTTIMER */ sub_16220( ref l_U1355 );
             /* LOADSEAMLESSCUTSCENE */ sub_26388( ref l_U1262, 0 );
            l_U1303 = 3;
        }
        break;
        case 3:
        if ( /* ISTIMERDONE */ sub_17124( ref l_U1355 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "bsw", "HANDLE_ROOFTOP_MPM - times up, how did you do?", 0 );
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 1 );
            l_U1303 = 6;
            DO_SCREEN_FADE_OUT( 0 );
        }
        break;
        case 6:
        if (IS_SCREEN_FADED_OUT())
        {
             /* TOGGLE_MPM_SETTINGS */ sub_26169( 0 );
            if (( /* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ sub_26868( ref l_U900 )) == 0)
            {
                 /* WRITESCRIPTLOG */ sub_2257( "bsw", "HANDLE_ROOFTOP_MPM - 0 guys remaining, you WIN", 0 );
                FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 0 );
                 /* LOADSEAMLESSCUTSCENE */ sub_26388( ref l_U1262, 1 );
                l_U1303 = 4;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_2257( "bsw", "HANDLE_ROOFTOP_MPM - didnt kill everyone, you LOSE", 0 );
                l_U1303 = 5;
            }
        }
        break;
        case 4:
        if ( /* PLAY_MIDSCENE_03C */ sub_27161( 1, 0 ))
        {
            Result = 1;
        }
        break;
        case 5:
         /* HANDLE_ROOFTOP_MPM_FAIL_NIS */ sub_31466();
        break;
    }
    return Result;
}

/* START_ROOFTOP_MPM_RAYFIRE */ void sub_24020(boolean bParam0)
{
    if (DOES_OBJECT_EXIST( g_U3112 ))
    {
         /* WRITESCRIPTLOG */ sub_2257( "RJM", "Timer has expired, play the rayfire", 0 );
        PLAY_OBJECT_ANIM( g_U3112, "RF_WT_ANM01", "ny_wtanim", 0.10000000, 0, 1 );
        PLAY_OBJECT_ANIM( g_U3113, "RF_WT_ANM02", "ny_wtanim", 0.10000000, 0, 1 );
        PLAY_OBJECT_ANIM( g_U3114, "RF_WATERTOWER_ANM", "ny_wtanim", 0.10000000, 0, 1 );
        PLAY_OBJECT_ANIM( g_U3115, "RF_WT_ANM03", "ny_wtanim", 0.10000000, 0, 1 );
        PLAY_OBJECT_ANIM( g_U3116, "RF_WIRE_AA", "ny_wtanim", 0.10000000, 0, 1 );
        if (bParam0)
        {
            SET_OBJECT_ANIM_CURRENT_TIME( g_U3112, "RF_WT_anm01", "ny_wtanim", g_U3586 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U3113, "RF_WT_anm02", "ny_wtanim", g_U3586 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U3115, "RF_WT_anm03", "ny_wtanim", g_U3586 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U3116, "RF_WIRE_AA", "ny_wtanim", g_U3586 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U3114, "RF_WATERTOWER_ANM", "ny_wtanim", g_U3586 );
        }
    }
    return;
}

/* MAR_NY_HOLSTERRIFLEORDUALANDDRAWPISTOL */ void sub_24758(unknown uParam0, unknown uParam1)
{
    unknown uVar4;

     /* WRITESCRIPTLOG */ sub_2257( "TEH", "MAR_NY_HolsterRifleOrDualAndDrawPistol begun", 0 );
    uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar4 ))
    {
        if (((uParam0^) == 1) || (((GET_WEAPON_TYPE( uVar4 )) == 1992962408) || (((GET_WEAPON_TYPE( uVar4 )) == 724901397) || (((GET_WEAPON_TYPE( uVar4 )) == 57534114) || (((GET_WEAPON_TYPE( uVar4 )) == 1308526797) || (((GET_WEAPON_TYPE( uVar4 )) == -1074756423) || (((GET_WEAPON_TYPE( uVar4 )) == -1013714740) || (((GET_WEAPON_TYPE( uVar4 )) == -184942895) || (((GET_WEAPON_TYPE( uVar4 )) == -168327769) || (((GET_WEAPON_TYPE( uVar4 )) == 1845102363) || ((GET_WEAPON_TYPE( uVar4 )) == 434544317)))))))))))
        {
             /* WRITESCRIPTLOG */ sub_2257( "TEH", "Holster weapon and draw gun", 0 );
            SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0, 1 );
            uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0 );
            while (GET_DOES_WEAPON_EXIST( uVar4 ))
            {
                WAIT( 0 );
                uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0 );
                 /* WRITESCRIPTLOG */ sub_2257( "TEH", "Waiting for right hand to be empty", 0 );
            }
        }
    }
    uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 1, 0 );
    if (GET_DOES_WEAPON_EXIST( uVar4 ))
    {
        (uParam1^) = 1;
         /* WRITESCRIPTLOG */ sub_2257( "TEH", "Dual wielding is true", 0 );
        SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 1, 1 );
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 1, 0 );
        while (GET_DOES_WEAPON_EXIST( uVar4 ))
        {
            WAIT( 0 );
            uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 1, 0 );
        }
    }
    uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0 );
    if (NOT (GET_DOES_WEAPON_EXIST( uVar4 )))
    {
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2548(), 0 );
        if (NOT (GET_DOES_WEAPON_EXIST( uVar4 )))
        {
            uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2548(), 1 );
        }
        SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2548(), uVar4, 0, 1 );
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0 );
        while (NOT (GET_DOES_WEAPON_EXIST( uVar4 )))
        {
            WAIT( 0 );
            uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0 );
             /* WRITESCRIPTLOG */ sub_2257( "TEH", "Waiting for right hand to be full", 0 );
        }
    }
     /* WRITESCRIPTLOG */ sub_2257( "TEH", "MAR_NY_HolsterRifleOrDualAndDrawPistol ended", 0 );
    return;
}

/* LOADISEQ */ void sub_25650(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* TOGGLE_MPM_SETTINGS */ void sub_26169(boolean bParam0)
{
    if ( /* IS_MAX_VALID */ sub_9601())
    {
        SET_PED_INVINCIBLE(  /* PLAYER_PED_ID */ sub_2548(), bParam0 );
        SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_2548(), bParam0, bParam0, bParam0, bParam0, bParam0 );
        SET_PED_CONSUMING_AMMO(  /* PLAYER_PED_ID */ sub_2548(), NOT bParam0 );
        SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_2586(), NOT bParam0 );
        SET_PED_CAN_SWITCH_WEAPON(  /* PLAYER_PED_ID */ sub_2548(), NOT bParam0 );
    }
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( NOT bParam0, 0 );
    if (bParam0)
    {
        SET_ADRENALINE_AMT( 0.10000000 );
        ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
    }
    else
    {
        DEACTIVATE_BULLET_TIME( 0, 0 );
    }
    return;
}

/* LOADSEAMLESSCUTSCENE */ void sub_26388(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                DISPLAYF( "[SP]### Waiting for seamless cutscene to load: {} ###", 1, 1537, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* F_GET_NUM_LIVING_PEDS_IN_ARRAY */ void sub_26868(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

/* PLAY_MIDSCENE_03C */ void sub_27161(boolean bParam0, boolean bParam1)
{
    int Result;

    Result = 0;
    switch (l_U1302)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_2257( "RJM", "PLAY_MIDSCENE_03c start", 0 );
         /* NIS_PRE_SETUP */ sub_22363( 1, 0, 0, 1 );
        if (NOT bParam0)
        {
             /* BLOCKLOAD_MID_03C_ASSETS */ sub_27293();
             /* LOADSEAMLESSCUTSCENE */ sub_26388( ref l_U1262, 1 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_2257( "bsw", "PLAY_MIDSCENE_03c forcing fade in", 0 );
            DO_SCREEN_FADE_IN( 500 );
        }
        if (NOT bParam0)
        {
             /* CREATE_MID_03C_PEDS_AND_OBJECTS */ sub_27826();
        }
         /* REGISTER_PEDS_NYC2_MID_03C */ sub_28209( bParam0 );
        if (bParam0)
        {
            CUTSCENE_REGISTER_ISEQ( -1236175571 );
        }
        if (bParam1)
        {
            START_CUTSCENE_CAPTURE( ref l_U1262 );
        }
        START_SEAMLESS_CUTSCENE();
        l_U1302 = 1;
        break;
        case 1:
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U3141[4]._fU16, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U3141[4]._fU20, 1065353216, 0 );
        l_U1302 = 2;
        break;
        case 2:
        if (HAS_CUTSCENE_FINISHED())
        {
            CAMERA_PLAY_ANIMATED( "LEVEL_S_NYBAR_CP_05", "BLEND_OUT_MID_03C_NYBAR_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            if (bParam1)
            {
                STOP_CUTSCENE_CAPTURE();
            }
             /* CLEANUP_MID_03C_ASSETS */ sub_31099();
            if (NOT bParam0)
            {
                 /* UNLOAD_MID_03C_ASSETS */ sub_31160();
            }
             /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_30123( l_U1270, 1 );
             /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_30123( l_U1270, 1 );
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "PLAY_MIDSCENE_03c end", 0 );
             /* NIS_POST_SETUP */ sub_23507( 1, 1 );
            Result = 1;
            l_U1302 = 3;
        }
        break;
        case 3: break;
    }
    return Result;
}

/* BLOCKLOAD_MID_03C_ASSETS */ void sub_27293()
{
     /* BLOCKLOADMODEL */ sub_27335( 2024698471 );
    return;
}

/* BLOCKLOADMODEL */ void sub_27335(unknown uParam0)
{
    DISPLAYF( "[MSWW]### Trying to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_3037( "[SP]### ERROR! (BlockLoadModel) Trying to block load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    LOAD_ALL_OBJECTS_NOW();
    while ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        LOAD_ALL_OBJECTS_NOW();
        DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
        WAIT( 0 );
    }
    DISPLAYF( "[MSWW]### Has loaded model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
    return;
}

/* CREATE_MID_03C_PEDS_AND_OBJECTS */ void sub_27826()
{
     /* WRITESCRIPTLOG */ sub_2257( "RJM", "CREATE_mid_03c_PEDS_AND_OBJECTS - start", 0 );
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "P_SETUP_NYC_mid_03c", "***" );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_27988( ref l_U1289, 0, 0, 0, 0.00000000, -1756913695, 26, 6, 0, 0, 0 );
     /* CLEANPED */ sub_13425( l_U1288 );
    l_U1288 =  /* CREATEPED */ sub_13517( ref l_U1289 );
     /* WRITESCRIPTLOG */ sub_2257( "RJM", "CREATE_mid_03c_PEDS_AND_OBJECTS - end", 0 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_27988(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* REGISTER_PEDS_NYC2_MID_03C */ void sub_28209(boolean bParam0)
{
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_2257( "SBA", "REGISTER_PEDs_nyc2_mid_03c", "***" );
    if (bParam0)
    {
         /* LOADISEQ */ sub_25650( -1236175571, 1 );
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "FROM FLOW: Registering passos with NYC_mid_03c", "***" );
        uVar3 = g_U818;
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "FROM CUTSCENE SCRIPT: Registering passos with NYC_mid_03c", "***" );
        uVar3 = l_U1288;
    }
    if ( /* IS_PED_VALID */ sub_9631( uVar3 ))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( uVar3, "FB_Pass_NY", 0 );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( uVar3, 0, 0 ), "W_PI_Clt1911_Aa_H^1", 0 );
        ISEQ_REGISTER_ENTITY( -1236175571, "passos", uVar3, 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( uVar3, g_U781[3]._fU0, g_U781[3]._fU12 );
    }
    if ( /* IS_MAX_VALID */ sub_9601())
    {
         /* WRITESCRIPTLOG */ sub_2257( "bsw", "registering Max for mid03c", 0 );
         /* P_PLAYER_HOLSTER_WEAPONS */ sub_28662( ref l_U1270, 1, 1 );
         /* P_SET_LEFT_HAND_WEAPON_VISIBLE */ sub_30026( l_U1270, 0 );
         /* P_SET_TWO_HANDED_WEAPON_VISIBLE */ sub_30123( l_U1270, 0 );
         /* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ sub_30256( 1 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_2548(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0 ), "W_PI_Clt1911_Aa_H", 0 );
        ISEQ_REGISTER_ENTITY( -1236175571, "max",  /* PLAYER_PED_ID */ sub_2548(), 0 );
        CUTSCENE_REGISTER_PED_TELEPORT(  /* PLAYER_PED_ID */ sub_2548(), g_U3141[4]._fU0, g_U3141[4]._fU12 );
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U2895._fU0, g_U2895._fU4 );
    return;
}

/* P_PLAYER_HOLSTER_WEAPONS */ void sub_28662(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

     /* RESET_WEAPON_CONFIG */ sub_28701( iParam0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_28902( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if (( /* IS_WEAPON_TWO_HANDED */ sub_29156( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2548(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2548(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2548(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if (( /* IS_WEAPON_TWO_HANDED */ sub_29156( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

/* RESET_WEAPON_CONFIG */ void sub_28701(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

/* IS_WEAPON_SINGLE_HANDED */ int sub_28902(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* IS_WEAPON_TWO_HANDED */ int sub_29156(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

/* P_SET_LEFT_HAND_WEAPON_VISIBLE */ void sub_30026(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;

    uVar21 = uParam0._fU12._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    return;
}

/* P_SET_TWO_HANDED_WEAPON_VISIBLE */ void sub_30123(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

/* P_EQUIP_PLAYER_WITH_SINGLE_HANDED_WEAPON */ void sub_30256(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if ((( /* IS_WEAPON_SINGLE_HANDED */ sub_28902( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 =  /* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ sub_30404();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND(  /* PLAYER_PED_ID */ sub_2548(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

/* F_GET_SINGLE_HANDED_WEAPON_FROM_PLAYER */ int sub_30404()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if (( /* IS_WEAPON_SINGLE_HANDED */ sub_28902( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND(  /* PLAYER_PED_ID */ sub_2548(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2548(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER(  /* PLAYER_PED_ID */ sub_2548(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

/* CLEANUP_MID_03C_ASSETS */ void sub_31099()
{
     /* CLEANPED */ sub_13425( l_U1288 );
    return;
}

/* UNLOAD_MID_03C_ASSETS */ void sub_31160()
{
     /* UNLOADMODEL */ sub_31199( 2024698471 );
    return;
}

/* UNLOADMODEL */ void sub_31199(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_3037( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

/* HANDLE_ROOFTOP_MPM_FAIL_NIS */ void sub_31466()
{
    unknown uVar2;

    switch (l_U1335)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_2257( "bsw", "HANDLE_ROOFTOP_MPM_FAIL_NIS - fading out", 0 );
        l_U1335 = 3;
        break;
        case 3:
        if (IS_SCREEN_FADED_OUT())
        {
             /* WRITESCRIPTLOG */ sub_2257( "bsw", "HANDLE_ROOFTOP_MPM_FAIL_NIS - starting death cam", 0 );
             /* NIS_PRE_SETUP */ sub_22363( 1, 0, 0, 1 );
             /* LOADISEQ */ sub_25650( 1681130475, 1 );
             /* TELEPORTPED */ sub_9748(  /* PLAYER_PED_ID */ sub_2548(), g_U3105, g_U3111 );
            ISEQ_REGISTER_ENTITY( 1681130475, "max",  /* PLAYER_PED_ID */ sub_2548(), 0 );
            ISEQ_START( 1681130475 );
             /* NIS_CREATE_STATIC_CAM */ sub_19698( ref l_U1304, -287.66950000, -11.28557000, -0.31394500, 35.00264000, -0.00000100, 1.44353700, 45, 4000 );
             /* NIS_PLAY_STATIC_CAMERA */ sub_22792( ref l_U1304 );
             /* WRITESCRIPTLOG */ sub_2257( "bsw", "HANDLE_ROOFTOP_MPM_FAIL_NIS - fading in", 0 );
            DO_SCREEN_FADE_IN( 500 );
            l_U1375 =  /* PED_ARRAY_GET_LAST_LIVING_PED */ sub_31896( ref l_U900 );
            if ( /* IS_PED_VALID */ sub_9631( l_U1375 ))
            {
                 /* WRITESCRIPTLOG */ sub_2257( "bsw", "HANDLE_ROOFTOP_MPM_FAIL_NIS - found an enemy, teleporting him into position and tasking him", 0 );
                 /* TELEPORTPED */ sub_9748( l_U1375, -287.87010000, -4.66745500, 1.49563900, 180.00000000 );
                OPEN_SEQUENCE_TASK( ref uVar2 );
                TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
                TASK_GO_TO_COORD_WHILE_AIMING_AT_PED( 0, -287.83130000, -6.88858400, 1.50526000,  /* PLAYER_PED_ID */ sub_2548(), 2, 0, 0.10000000, 0, 1, 0 );
                TASK_SHOOT_AT_PED( 0,  /* PLAYER_PED_ID */ sub_2548(), 99999, 1566631136, 0, 0, 0 );
                CLOSE_SEQUENCE_TASK( uVar2 );
                CLEAR_PED_TASKS( l_U1375 );
                TASK_PERFORM_SEQUENCE( l_U1375, uVar2 );
                CLEAR_SEQUENCE_TASK( uVar2 );
            }
            l_U1335 = 5;
        }
        break;
        case 5:
        if ( /* IS_PED_VALID */ sub_9631( l_U1375 ))
        {
            if (( /* NIS_IS_SHOT_FINISHED */ sub_22609( ref l_U1304, 0 )) || (IS_PED_SHOOTING( l_U1375 )))
            {
                 /* WRITESCRIPTLOG */ sub_2257( "bsw", "HANDLE_ROOFTOP_MPM_FAIL_NIS - enemy fired at max, max dies now", 0 );
                ISEQ_UNREGISTER_ENTITY( 1681130475, "max" );
                 /* TERMINATEISEQ */ sub_32448( 1681130475, 1 );
                 /* NIS_POST_SETUP */ sub_23507( 1, 1 );
                 /* P_KILL_PED */ sub_32761(  /* PLAYER_PED_ID */ sub_2548() );
                l_U1335 = 6;
            }
        }
        break;
        case 6: break;
    }
    return;
}

/* PED_ARRAY_GET_LAST_LIVING_PED */ void sub_31896(unknown uParam0)
{
    unknown Result;
    int I;

    Result = nil;
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result = (uParam0^)[I];
        }
    }
    return Result;
}

/* TERMINATEISEQ */ void sub_32448(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_KILL_PED */ void sub_32761(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* HANDLE_TOWER_RAYFIRE */ void sub_32973()
{
    if (l_U314._fU0)
    {
         /* ISEQUENCE_TELEPORT_PLAYER */ sub_9404( ref l_U314 );
    }
    if (l_U314._fU8)
    {
         /* CREATE_TOWER */ sub_9989( 1 );
        l_U314._fU8 = 0;
    }
    if (l_U314._fU4)
    {
         /* UPDATE_TOWER_RAYFIRE */ sub_33065();
    }
    if (l_U314._fU12)
    {
         /* DESTROY_TOWER */ sub_10044();
        l_U558 = 0;
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U314 );
    }
    return;
}

/* UPDATE_TOWER_RAYFIRE */ void sub_33065()
{
    switch (l_U558)
    {
        case 0:
         /* CREATE_TOWER */ sub_9989( 1 );
        PLAY_OBJECT_ANIM( g_U3112, "RF_WT_anm01", "ny_wtanim", 0.10000000, 0, 1 );
        PLAY_OBJECT_ANIM( g_U3113, "RF_WT_anm02", "ny_wtanim", 0.10000000, 0, 1 );
        PLAY_OBJECT_ANIM( g_U3114, "RF_WATERTOWER_ANM", "ny_wtanim", 0.10000000, 0, 1 );
        PLAY_OBJECT_ANIM( g_U3115, "RF_WT_anm03", "ny_wtanim", 0.10000000, 0, 1 );
        PLAY_OBJECT_ANIM( g_U3116, "RF_Wire_Aa", "ny_wtanim", 0.10000000, 0, 1 );
         /* CREATETIMER */ sub_11863( ref l_U559, l_U568, 1, 0 );
         /* STARTTIMER */ sub_16220( ref l_U559 );
        l_U558 = 2;
        break;
        case 2:
        if ( /* ISTIMERDONE */ sub_17124( ref l_U559 ))
        {
            START_PARTICLE_FX_NON_LOOPED_AT_COORD( "NYC_WT_Blast_S", l_U569, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
             /* WRITESCRIPTLOG */ sub_2257( "bsw", "starting NYC_WT_Blast_S FX", 0 );
        }
        if ((NOT (IS_OBJECT_PLAYING_ANIM( g_U3116, "RF_Wire_Aa", "ny_wtanim" ))) AND ((NOT (IS_OBJECT_PLAYING_ANIM( g_U3115, "RF_WT_anm03", "ny_wtanim" ))) AND ((NOT (IS_OBJECT_PLAYING_ANIM( g_U3114, "RF_WATERTOWER_ANM", "ny_wtanim" ))) AND ((NOT (IS_OBJECT_PLAYING_ANIM( g_U3113, "RF_WT_anm02", "ny_wtanim" ))) AND (NOT (IS_OBJECT_PLAYING_ANIM( g_U3112, "RF_WT_anm01", "ny_wtanim" )))))))
        {
            if (l_U314._fU16)
            {
                 /* DESTROY_TOWER */ sub_10044();
                l_U558 = 0;
            }
            else
            {
                l_U558 = 3;
            }
        }
        break;
        case 3:
        l_U314._fU4 = 0;
        break;
    }
    return;
}

/* HANDLE_AIRPLANE */ void sub_33826()
{
    if (l_U305._fU0)
    {
         /* ISEQUENCE_TELEPORT_PLAYER */ sub_9404( ref l_U305 );
    }
    if (l_U305._fU4 == 1)
    {
        l_U305._fU4 = 0;
         /* CREATE_PLANE */ sub_33897();
    }
    if (l_U305._fU12)
    {
         /* CLEANOBJECT */ sub_10075( l_U553 );
         /* UNLOADANIMDICT */ sub_34199( "ny_anim" );
         /* UNLOADMODEL */ sub_31199( 1740663406 );
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U305 );
    }
    return;
}

/* CREATE_PLANE */ void sub_33897()
{
     /* WRITESCRIPTLOG */ sub_2257( "RJM", "CREATE_PLANE", 0 );
     /* CLEANOBJECT */ sub_10075( l_U553 );
     /* LOADANIMDICT */ sub_3160( "ny_anim", 0, 1 );
     /* BLOCKLOADMODEL */ sub_27335( 1740663406 );
    l_U553 = CREATE_OBJECT_NO_OFFSET( 1740663406, l_U554, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U553 ))
    {
         /* WRITESCRIPTLOG */ sub_2257( "RJM", "Setting up NYC_PLANE_ROOT", 0 );
        PLAY_OBJECT_ANIM( l_U553, "NYC_PLANE_ROOT", "ny_anim", 0.10000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( l_U553, "NYC_PLANE_ROOT", "ny_anim", l_U557 );
    }
    return;
}

/* UNLOADANIMDICT */ void sub_34199(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

/* HANDLE_CHOPSHOP_RAYFIRE */ void sub_34271()
{
    if (l_U323._fU0)
    {
         /* ISEQUENCE_TELEPORT_PLAYER */ sub_9404( ref l_U323 );
    }
    if (l_U323._fU8)
    {
         /* CREATE_BREAKABLE_ROOF */ sub_34340();
        l_U323._fU8 = 0;
    }
    if (l_U1376)
    {
        l_U1376 = 0;
         /* CREATE_BROKEN_SKYLIGHT_CUTSCENE */ sub_36734();
    }
    if (l_U323._fU4)
    {
         /* CREATE_BREAKABLE_ROOF */ sub_34340();
         /* CREATETIMER */ sub_11863( ref l_U156, l_U165, 1, 0 );
         /* STARTTIMER */ sub_16220( ref l_U156 );
         /* PLAY_CHOPSHOP_ANIM */ sub_37214();
        l_U323._fU4 = 0;
    }
    if ( /* ISTIMERDONE */ sub_17124( ref l_U156 ))
    {
         /* WRITESCRIPTLOG */ sub_2257( "RJM", "Firing effect 'NYC_RF_Dust_Up'", 0 );
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( "NYC_RF_Dust_Up_S", l_U196, l_U199, 1065353216 );
    }
    if (l_U323._fU12)
    {
         /* DESTROY_RAYFIRE_PIECES */ sub_34737();
         /* CLEAN_SKYLIGHT_PIECES */ sub_36778();
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U323 );
    }
    return;
}

/* CREATE_BREAKABLE_ROOF */ void sub_34340()
{
     /* WRITESCRIPTLOG */ sub_2257( "RJM", "CREATE_CHOPSHOP_ROOF", " " );
     /* CREATE_BROKEN_SKYLIGHT_FRAME */ sub_34412();
     /* CREATE_CLEAN_SKYLIGHT_PLUG */ sub_34543( 0 );
     /* CREATE_CLEAN_SKYLIGHT_PLUG */ sub_34543( 1 );
     /* DESTROY_RAYFIRE_PIECES */ sub_34737();
    l_U176 =  /* CREATEOBJECT */ sub_34880( -1513711447, l_U184, l_U187, 0, 1, 0 );
    l_U177 =  /* CREATEOBJECT */ sub_34880( -737544913, l_U184, l_U187, 0, 1, 0 );
    l_U178 =  /* CREATEOBJECT */ sub_34880( -1035251278, l_U184, l_U187, 0, 1, 0 );
    l_U179 =  /* CREATEOBJECT */ sub_34880( 1679037765, l_U184, l_U187, 0, 1, 0 );
    l_U180 =  /* CREATEOBJECT */ sub_34880( -1838550544, l_U184, l_U187, 0, 1, 0 );
    l_U181 =  /* CREATEOBJECT */ sub_34880( -1332728256, l_U184, l_U187, 0, 1, 0 );
    l_U182 =  /* CREATEOBJECT */ sub_34880( -1629582627, l_U184, l_U187, 0, 1, 0 );
    l_U183 =  /* CREATEOBJECT */ sub_34880( 493783035, l_U184, l_U187, 0, 1, 0 );
    SET_OBJECT_VISIBLE( l_U176, 0 );
    SET_OBJECT_VISIBLE( l_U177, 0 );
    SET_OBJECT_VISIBLE( l_U178, 0 );
    SET_OBJECT_VISIBLE( l_U179, 0 );
    SET_OBJECT_VISIBLE( l_U180, 0 );
    SET_OBJECT_VISIBLE( l_U181, 0 );
    SET_OBJECT_VISIBLE( l_U182, 0 );
    SET_OBJECT_VISIBLE( l_U183, 0 );
    PLAY_OBJECT_ANIM( l_U176, "CS_WIN_SMASH_01", "ny_chopanim", 0.10000000, 0, 1 );
    PLAY_OBJECT_ANIM( l_U177, "CS_WIN_SMASH_02", "ny_chopanim", 0.10000000, 0, 1 );
    PLAY_OBJECT_ANIM( l_U178, "CS_WIN_SMASH_03", "ny_chopanim", 0.10000000, 0, 1 );
    PLAY_OBJECT_ANIM( l_U179, "CS_WIN_SMASH_04", "ny_chopanim", 0.10000000, 0, 1 );
    PLAY_OBJECT_ANIM( l_U180, "CS_WIN_SMASH_05", "ny_chopanim", 0.10000000, 0, 1 );
    PLAY_OBJECT_ANIM( l_U181, "CS_WIN_SMASH_06", "ny_chopanim", 0.10000000, 0, 1 );
    PLAY_OBJECT_ANIM( l_U182, "CS_WIN_SMASH_07", "ny_chopanim", 0.10000000, 0, 1 );
    PLAY_OBJECT_ANIM( l_U183, "CS_WIN_SMASH_08", "ny_chopanim", 0.10000000, 0, 1 );
    SET_OBJECT_ANIM_SPEED( l_U176, "CS_WIN_SMASH_01", "ny_chopanim", 0.00000000 );
    SET_OBJECT_ANIM_SPEED( l_U177, "CS_WIN_SMASH_02", "ny_chopanim", 0.00000000 );
    SET_OBJECT_ANIM_SPEED( l_U178, "CS_WIN_SMASH_03", "ny_chopanim", 0.00000000 );
    SET_OBJECT_ANIM_SPEED( l_U179, "CS_WIN_SMASH_04", "ny_chopanim", 0.00000000 );
    SET_OBJECT_ANIM_SPEED( l_U180, "CS_WIN_SMASH_05", "ny_chopanim", 0.00000000 );
    SET_OBJECT_ANIM_SPEED( l_U181, "CS_WIN_SMASH_06", "ny_chopanim", 0.00000000 );
    SET_OBJECT_ANIM_SPEED( l_U182, "CS_WIN_SMASH_07", "ny_chopanim", 0.00000000 );
    SET_OBJECT_ANIM_SPEED( l_U183, "CS_WIN_SMASH_08", "ny_chopanim", 0.00000000 );
    SET_OBJECT_ANIM_CURRENT_TIME( l_U176, "CS_WIN_SMASH_01", "ny_chopanim", l_U166 );
    SET_OBJECT_ANIM_CURRENT_TIME( l_U177, "CS_WIN_SMASH_02", "ny_chopanim", l_U166 );
    SET_OBJECT_ANIM_CURRENT_TIME( l_U178, "CS_WIN_SMASH_03", "ny_chopanim", l_U166 );
    SET_OBJECT_ANIM_CURRENT_TIME( l_U179, "CS_WIN_SMASH_04", "ny_chopanim", l_U166 );
    SET_OBJECT_ANIM_CURRENT_TIME( l_U180, "CS_WIN_SMASH_05", "ny_chopanim", l_U166 );
    SET_OBJECT_ANIM_CURRENT_TIME( l_U181, "CS_WIN_SMASH_06", "ny_chopanim", l_U166 );
    SET_OBJECT_ANIM_CURRENT_TIME( l_U182, "CS_WIN_SMASH_07", "ny_chopanim", l_U166 );
    SET_OBJECT_ANIM_CURRENT_TIME( l_U183, "CS_WIN_SMASH_08", "ny_chopanim", l_U166 );
    return;
}

/* CREATE_BROKEN_SKYLIGHT_FRAME */ void sub_34412()
{
     /* LOADMODEL */ sub_10350( l_U154, 1 );
     /* CLEANOBJECT */ sub_10075( l_U168 );
    l_U168 =  /* CREATEOBJECTNOOFFSET */ sub_10217( l_U154, l_U202, l_U205, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U168 ))
    {
        FREEZE_OBJECT_POSITION( l_U168, 1 );
    }
    return;
}

/* CREATE_CLEAN_SKYLIGHT_PLUG */ void sub_34543(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (iParam0 == 0)
    {
        uVar3 = {l_U208};
        uVar6 = {l_U211};
    }
    else
    {
        uVar3 = {l_U214};
        uVar6 = {l_U217};
    }
     /* LOADMODEL */ sub_10350( l_U152, 1 );
     /* CLEANOBJECT */ sub_10075( l_U172[iParam0] );
    l_U172[iParam0] =  /* CREATEOBJECTNOOFFSET */ sub_10217( l_U152, uVar3, uVar6, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U172[iParam0] ))
    {
        FREEZE_OBJECT_POSITION( l_U172[iParam0], 1 );
    }
    return;
}

/* DESTROY_RAYFIRE_PIECES */ void sub_34737()
{
     /* CLEANOBJECT */ sub_10075( l_U176 );
     /* CLEANOBJECT */ sub_10075( l_U177 );
     /* CLEANOBJECT */ sub_10075( l_U178 );
     /* CLEANOBJECT */ sub_10075( l_U179 );
     /* CLEANOBJECT */ sub_10075( l_U180 );
     /* CLEANOBJECT */ sub_10075( l_U181 );
     /* CLEANOBJECT */ sub_10075( l_U182 );
     /* CLEANOBJECT */ sub_10075( l_U183 );
    return;
}

/* CREATEOBJECT */ void sub_34880(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_10350( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an object to exist: {!f1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

/* CREATE_BROKEN_SKYLIGHT_CUTSCENE */ void sub_36734()
{
     /* CLEAN_SKYLIGHT_PIECES */ sub_36778();
     /* DESTROY_RAYFIRE_PIECES */ sub_34737();
     /* CREATE_BROKEN_SKYLIGHT_FRAME */ sub_34412();
     /* CREATE_STATIC_FINAL_RF */ sub_36938();
     /* CREATE_CLEAN_SKYLIGHT_PLUG */ sub_34543( 0 );
    return;
}

/* CLEAN_SKYLIGHT_PIECES */ void sub_36778()
{
    int I;

     /* CLEANOBJECT */ sub_10075( l_U175 );
     /* CLEANOBJECT */ sub_10075( l_U168 );
    I = 0;
    for ( I = 0; I < l_U172; I++ )
    {
         /* CLEANOBJECT */ sub_10075( l_U172[I] );
    }
    I = 0;
    for ( I = 0; I < l_U169; I++ )
    {
         /* CLEANOBJECT */ sub_10075( l_U169[I] );
    }
    return;
}

/* CREATE_STATIC_FINAL_RF */ void sub_36938()
{
     /* WRITESCRIPTLOG */ sub_2257( "bsw", "CREATE_STATIC_FINAL_RF start", 0 );
     /* LOADMODEL */ sub_10350( l_U155, 1 );
     /* CLEANOBJECT */ sub_10075( l_U175 );
    l_U175 =  /* CREATEOBJECTNOOFFSET */ sub_10217( l_U155, l_U214, l_U217, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U175 ))
    {
         /* WRITESCRIPTLOG */ sub_2257( "bsw", "CREATE_STATIC_FINAL_RF freezing object", 0 );
        FREEZE_OBJECT_POSITION( l_U175, 1 );
    }
    return;
}

/* PLAY_CHOPSHOP_ANIM */ void sub_37214()
{
    SET_OBJECT_VISIBLE( l_U176, 1 );
    SET_OBJECT_VISIBLE( l_U177, 1 );
    SET_OBJECT_VISIBLE( l_U178, 1 );
    SET_OBJECT_VISIBLE( l_U179, 1 );
    SET_OBJECT_VISIBLE( l_U180, 1 );
    SET_OBJECT_VISIBLE( l_U181, 1 );
    SET_OBJECT_VISIBLE( l_U182, 1 );
    SET_OBJECT_VISIBLE( l_U183, 1 );
     /* CLEANOBJECT */ sub_10075( l_U172[0] );
    SET_OBJECT_ANIM_SPEED( l_U176, "CS_WIN_SMASH_01", "ny_chopanim", 0.70000000 );
    SET_OBJECT_ANIM_SPEED( l_U177, "CS_WIN_SMASH_02", "ny_chopanim", 0.70000000 );
    SET_OBJECT_ANIM_SPEED( l_U178, "CS_WIN_SMASH_03", "ny_chopanim", 0.70000000 );
    SET_OBJECT_ANIM_SPEED( l_U179, "CS_WIN_SMASH_04", "ny_chopanim", 0.70000000 );
    SET_OBJECT_ANIM_SPEED( l_U180, "CS_WIN_SMASH_05", "ny_chopanim", 0.70000000 );
    SET_OBJECT_ANIM_SPEED( l_U181, "CS_WIN_SMASH_06", "ny_chopanim", 0.70000000 );
    SET_OBJECT_ANIM_SPEED( l_U182, "CS_WIN_SMASH_07", "ny_chopanim", 0.70000000 );
    SET_OBJECT_ANIM_SPEED( l_U183, "CS_WIN_SMASH_08", "ny_chopanim", 0.70000000 );
    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "NYC_RF_ChopShop_Glass_S", l_U190, l_U190, 1065353216 );
    return;
}

/* HANDLE_CAR_FALL */ void sub_37963()
{
    if (l_U503._fU0)
    {
         /* ISEQUENCE_TELEPORT_PLAYER */ sub_9404( ref l_U503 );
    }
    if (l_U503._fU8)
    {
         /* P_CREATE_DROP_CAR */ sub_38024();
        l_U503._fU8 = 0;
    }
    if (l_U503._fU4 == 1)
    {
         /* P_CREATE_DROP_CAR */ sub_38024();
         /* P_DROP_CAR_HANDLER */ sub_38825( l_U503._fU4 );
        l_U503._fU4 = 0;
    }
    else
    {
         /* P_DROP_CAR_HANDLER */ sub_38825( l_U503._fU4 );
    }
    if (l_U503._fU12)
    {
        l_U532 = 0;
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U503 );
    }
    return;
}

/* P_CREATE_DROP_CAR */ void sub_38024()
{
     /* WRITESCRIPTLOG */ sub_2257( "TEH", "P_CREATE_DROP_CAR", "###" );
    l_U550 = 0;
    STOP_SCRIPT_STREAM( l_U551 );
     /* LOADSCRIPTSTREAM */ sub_38133( "s_nyc_CHOP_LIFT", l_U551, 1 );
    STOP_SCRIPT_STREAM( l_U552 );
     /* LOADSCRIPTSTREAM */ sub_38133( "s_nyc_CHOP_PANEL", l_U552, 1 );
     /* CLEANOBJECT */ sub_10075( l_U521 );
    l_U521 =  /* CREATEOBJECT */ sub_34880( -2132846056, l_U524, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( l_U521 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U521, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U521, ref g_U3569 );
    }
     /* CLEANOBJECT */ sub_10075( l_U522 );
    l_U522 =  /* CREATEOBJECT */ sub_34880( -175351117, -214.78500000, -17.66700000, -10.14200000, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( l_U522 )) == 1)
    {
        SET_OBJECT_PROOFS( l_U522, 0, 1, 1, 1, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U522, ref g_U3569 );
        SET_OBJECT_TARGETTABLE( l_U522, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, l_U522 );
        SET_OBJECT_HEALTH( l_U522, 50 );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( l_U522, 1 );
    }
     /* CLEANOBJECT */ sub_10075( l_U523 );
    l_U523 =  /* CREATEOBJECT */ sub_34880( -175351117, -214.78500000, -20.99900000, -10.14200000, 0.00000000, 0.00000000, -180.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( l_U523 )) == 1)
    {
        SET_OBJECT_PROOFS( l_U523, 0, 1, 1, 1, 0 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U523, ref g_U3569 );
        SET_OBJECT_TARGETTABLE( l_U523, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, l_U523 );
        SET_OBJECT_HEALTH( l_U523, 50 );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( l_U523, 1 );
    }
    return;
}

/* LOADSCRIPTSTREAM */ void sub_38133(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for script stream to be loaded: {} : {} ###", 2, 1537, uParam0, 513, uParam1 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_DROP_CAR_HANDLER */ void sub_38825(boolean bParam0)
{
    if ((l_U532 == 0) AND ((DOES_OBJECT_EXIST( l_U523 )) AND (DOES_OBJECT_EXIST( l_U522 ))))
    {
        if (bParam0)
        {
            l_U532 = 1;
            PLAY_SCRIPT_STREAM_FROM_OBJECT( l_U522, l_U552 );
            PLAY_SCRIPT_STREAM_FROM_OBJECT( l_U521, l_U551 );
            START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "BusDepot_Elec_Box_S", l_U522, 0, 0, 0, 0, 0, 0, 1065353216 );
            GENERATE_OBJECT_CRUSH_IMMINENT_EVENT( l_U521 );
            PLAY_SCRIPT_STREAM_FROM_OBJECT( l_U523, l_U552 );
            PLAY_SCRIPT_STREAM_FROM_OBJECT( l_U521, l_U551 );
            START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "BusDepot_Elec_Box_S", l_U523, 0, 0, 0, 0, 0, 0, 1065353216 );
            GENERATE_OBJECT_CRUSH_IMMINENT_EVENT( l_U521 );
        }
    }
    if ((l_U532 != 4) AND (l_U532 != 0))
    {
         /* P_HANDLE_DROP */ sub_39123();
    }
    if ( /* ISTIMERDONE */ sub_17124( ref l_U541 ))
    {
        STOP_GAMEPLAY_CAM_SHAKING( "SMALL_EXPLOSION_SHAKE", 0 );
        STOP_GAMEPLAY_CAM_SHAKING( "VIBRATE_SHAKE", 0 );
    }
    return;
}

/* P_HANDLE_DROP */ void sub_39123()
{
    float fVar2;

    switch (l_U532)
    {
        case 1:
        if (DOES_OBJECT_EXIST( l_U521 ))
        {
            PLAY_OBJECT_ANIM( l_U521, "RF_DROPCAR", ref l_U533, 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_SPEED( l_U521, "RF_DROPCAR", ref l_U533, 1.00000000 );
            l_U532 = 2;
        }
        if (DOES_OBJECT_EXIST( l_U522 ))
        {
            CAMERA_CAN_TARGET_OBJECT( 0, l_U522 );
        }
        if (DOES_OBJECT_EXIST( l_U523 ))
        {
            CAMERA_CAN_TARGET_OBJECT( 0, l_U523 );
        }
        break;
        case 2:
        fVar2 = GET_OBJECT_ANIM_CURRENT_TIME( l_U521, "RF_DROPCAR", ref l_U533 );
        if (fVar2 >= 1.00000000)
        {
            l_U532 = 3;
        }
        else if ((NOT l_U550) AND (fVar2 > 0.95000000))
        {
             /* WRITESCRIPTLOG */ sub_2257( "ML", "STARTING Car IMPACT EFFECTS", "---" );
            START_PARTICLE_FX_NON_LOOPED_AT_COORD( "BusDepot_BusDrop_Impact_S", -214.75600000, -19.28700000, -10.03000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            SET_PAD_SHAKE( 0, 500, 256 );
            SHAKE_GAMEPLAY_CAM( "SMALL_EXPLOSION_SHAKE", 0.20000000 );
            SHAKE_GAMEPLAY_CAM( "VIBRATE_SHAKE", 0.40000000 );
             /* CREATETIMER */ sub_11863( ref l_U541, 2000, 1, 0 );
             /* STARTTIMER */ sub_16220( ref l_U541 );
            l_U550 = 1;
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_2257( "TEH", "CAR HAS FALLEN", "---" );
        FORCE_UPDATE_OBJECT_PHYSICAL_STATE( l_U521 );
        l_U532 = 0;
        break;
    }
    return;
}

/* HANDLE_FAN_TEST */ void sub_39854()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    int iVar5;

    if (NOT l_U1740)
    {
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "Starting HANDLE_FAN_TEST...", "***" );
        START_WIDGET_GROUP( "Falling Ceiling Fan Test" );
        ADD_WIDGET_BOOL( "Teleport Player to Test Location", ref l_U1742 );
        ADD_WIDGET_BOOL( "Reset Test", ref l_U1741 );
        ADD_WIDGET_BOOL( "Drop the Fan", ref l_U1744 );
         /* P_ADD_WIDGET_PED_POSITION */ sub_6927( "Victim Position", ref l_U1761, ref l_U1764 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U1774, "Ceiling Fan Location", 1036831949 );
        START_WIDGET_GROUP( "Pathing Test" );
        ADD_WIDGET_BOOL( "Do Pathing Test", ref l_U1745 );
        ADD_WIDGET_BOOL( "Avoid Objects?", ref l_U1746 );
         /* P_ADD_WIDGET_PED_POSITION */ sub_6927( "Path Start Position", ref l_U1765, ref l_U1771 );
         /* P_ADD_WIDGET_VECTOR_SLIDER */ sub_4483( ref l_U1768, "Path Finish Location", 1036831949 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
         /* LOADMODEL */ sub_10350( l_U1773, 1 );
         /* LOADMODEL */ sub_10350( g_U3092, 1 );
        l_U1740 = 1;
    }
    if (l_U1742)
    {
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "Teleporting player to Bar...", "***" );
         /* P_FADE_OUT_AND_WAIT */ sub_9445( 1000 );
        if (NOT l_U1743)
        {
            uVar2 = GET_HASH_KEY( ref g_U3457 );
            uVar3 = GET_INTERIOR_AT_COORDS( g_U3141[0]._fU0 );
            SET_INTERIOR_ACTIVE( uVar3, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar3, uVar2 );
            l_U1743 = 1;
        }
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )) == 0)
        {
            SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2548(), g_U3141[0]._fU0, 1 );
            SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_2548(), g_U3141[0]._fU12 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U3141[0]._fU16, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U3141[0]._fU20, 1065353216, 0 );
            SET_ROOM_FOR_PED_BY_NAME(  /* PLAYER_PED_ID */ sub_2548(), ref g_U3457 );
        }
         /* P_FADE_IN_AND_WAIT */ sub_9191( 1000 );
        l_U1742 = 0;
    }
    if (l_U1741)
    {
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "Resetting Victim...", "***" );
         /* CLEANPED */ sub_13425( l_U1760 );
         /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U1747, l_U1761, l_U1764, g_U3092, 7, 3, 2, 0, 0 );
        l_U1760 =  /* CREATEPED */ sub_13517( ref l_U1747 );
        if ( /* IS_PED_VALID */ sub_9631( l_U1760 ))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U1760, ref g_U3457 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1760, 1 );
            SET_PED_COMBAT_MOVEMENT( l_U1760, 0 );
        }
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "Resetting Ceiling Fan...", "***" );
         /* CLEANOBJECT */ sub_10075( l_U1772 );
        CLEAR_AREA_OF_OBJECTS( l_U1761, 10.00000000 );
        l_U1772 =  /* CREATEOBJECTNOOFFSET */ sub_10217( l_U1773, l_U1774, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
        if (DOES_OBJECT_EXIST( l_U1772 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1772, ref g_U3457 );
            PLAY_OBJECT_ANIM( l_U1772, "P_EL_cfDmg_Aa_H", "ny_anim", 1000, 1, 0 );
        }
        l_U1741 = 0;
    }
    if (l_U1744)
    {
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "Dropping the Ceiling Fan...", "***" );
        if (DOES_OBJECT_EXIST( l_U1772 ))
        {
            DESTROY_FRAGMENT_OBJECT( l_U1772 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_2257( "SBA", "Can't Drop the Ceiling Fan - it doesn't exist!", "***" );
        }
        l_U1744 = 0;
    }
    if (l_U1745)
    {
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "Resetting Victim...", "***" );
        if (l_U1746)
        {
            iVar5 = 0;
        }
        else
        {
            iVar5 = 64;
        }
         /* CLEANPED */ sub_13425( l_U1760 );
         /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U1747, l_U1765, l_U1771, g_U3092, 7, 3, 2, 0, 0 );
        l_U1760 =  /* CREATEPED */ sub_13517( ref l_U1747 );
        if ( /* IS_PED_VALID */ sub_9631( l_U1760 ))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U1760, ref g_U3457 );
            OPEN_SEQUENCE_TASK( ref uVar4 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U1768, 3, -1, 0.25000000, iVar5, 0 );
            CLOSE_SEQUENCE_TASK( uVar4 );
            CLEAR_PED_TASKS( l_U1760 );
            TASK_PERFORM_SEQUENCE( l_U1760, uVar4 );
            CLEAR_SEQUENCE_TASK( uVar4 );
        }
        l_U1745 = 0;
    }
    return;
}

/* HANDLE_VIGNETTES */ void sub_41393()
{
     /* HANDLE_TV_VIG */ sub_41422();
     /* HANDLE_VIGNETTE_01 */ sub_42162();
     /* HANDLE_VIGNETTE_01B */ sub_42863();
     /* HANDLE_VIGNETTE_03 */ sub_43925();
     /* HANDLE_VIGNETTE_07 */ sub_44813();
     /* HANDLE_VIGNETTE_07B */ sub_45761();
     /* HANDLE_VIGNETTE_08B */ sub_47603();
     /* HANDLE_VIGNETTE_09 */ sub_51072();
     /* HANDLE_VIGNETTE_12 */ sub_51883();
     /* HANDLE_VIGNETTE_11 */ sub_52752();
     /* HANDLE_VIGNETTE_17_18_19 */ sub_56238();
     /* HANDLE_VIGNETTE_21 */ sub_57209();
     /* HANDLE_VIGNETTE_22 */ sub_57960();
     /* HANDLE_VIGNETTE_24 */ sub_58879();
     /* HANDLE_VIGNETTE_26 */ sub_59924();
    return;
}

/* HANDLE_TV_VIG */ void sub_41422()
{
    if (l_U1724)
    {
         /* P_FADE_OUT_AND_WAIT */ sub_9445( 100 );
         /* TELEPORTPED */ sub_9748(  /* PLAYER_PED_ID */ sub_2548(), l_U1729, l_U1732 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 1 );
         /* P_FADE_IN_AND_WAIT */ sub_9191( 100 );
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 0 );
        l_U1724 = 0;
    }
    if (l_U1725)
    {
        ISEQ_UNREGISTER_ENTITY( 1624814954, "Max" );
        ISEQ_TERMINATE( 1624814954 );
         /* LOADISEQ */ sub_25650( 1624814954, 1 );
         /* TELEPORTPED */ sub_9748(  /* PLAYER_PED_ID */ sub_2548(), l_U1729, l_U1732 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )))
        {
            ISEQ_REGISTER_ENTITY( 1624814954, "Max",  /* PLAYER_PED_ID */ sub_2548(), 0 );
        }
        ISEQ_START( 1624814954 );
        l_U1725 = 0;
    }
    if (l_U1726)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )))
        {
            CLEAR_PED_TASKS(  /* PLAYER_PED_ID */ sub_2548() );
            PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_2548(), "/Global/Player/PlayerLoco" );
            ISEQ_UNREGISTER_ENTITY( 1624814954, "Max" );
        }
         /* TERMINATEISEQ */ sub_32448( 1624814954, 1 );
        l_U1726 = 0;
    }
    if (l_U1727)
    {
        ISEQ_UNREGISTER_ENTITY( -898316628, "Max" );
        ISEQ_TERMINATE( -898316628 );
         /* LOADISEQ */ sub_25650( -898316628, 1 );
         /* TELEPORTPED */ sub_9748(  /* PLAYER_PED_ID */ sub_2548(), l_U1729, l_U1732 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )))
        {
            ISEQ_REGISTER_ENTITY( -898316628, "Max",  /* PLAYER_PED_ID */ sub_2548(), 0 );
        }
        ISEQ_START( -898316628 );
        l_U1727 = 0;
    }
    if (l_U1728)
    {
        ISEQ_UNREGISTER_ENTITY( -613372609, "Max" );
        ISEQ_TERMINATE( -613372609 );
         /* LOADISEQ */ sub_25650( -613372609, 1 );
         /* TELEPORTPED */ sub_9748(  /* PLAYER_PED_ID */ sub_2548(), l_U1729, l_U1732 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )))
        {
            ISEQ_REGISTER_ENTITY( -613372609, "Max",  /* PLAYER_PED_ID */ sub_2548(), 0 );
        }
        CAMERA_PLAY_ANIMATED( "LEVEL_S_NYBAR_CP_03", "04_NYBAR_TV_TURN_OFF_CAM", 0, -333.93000000, -11.89000000, 5.30000000, -38.13000000, 0, 0 );
        ISEQ_START( -613372609 );
        l_U1728 = 0;
    }
    return;
}

/* HANDLE_VIGNETTE_01 */ void sub_42162()
{
    int iVar2;
    unknown uVar3;

    if (l_U359._fU0)
    {
        if ( /* IS_MAX_VALID */ sub_9601())
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 1 );
            iVar2 = GET_HASH_KEY( ref g_U3457 );
            uVar3 = GET_INTERIOR_AT_COORDS( l_U359._fU20 );
            SET_INTERIOR_ACTIVE( uVar3, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar3, iVar2 );
            SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2548(), l_U359._fU20, 1 );
            SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_2548(), l_U359._fU32 );
            if (iVar2 != -1)
            {
                SET_ROOM_FOR_PED_BY_KEY(  /* PLAYER_PED_ID */ sub_2548(), iVar2 );
            }
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 0 );
        }
        l_U359._fU0 = 0;
    }
    if (l_U359._fU4)
    {
         /* UPDATE_VIG_01 */ sub_42378();
    }
    if (l_U359._fU12)
    {
         /* CLEAN_VIG_01 */ sub_42741();
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U359 );
    }
    return;
}

/* UPDATE_VIG_01 */ void sub_42378()
{
    switch (l_U1057)
    {
        case 0:
         /* LOADMODEL */ sub_10350( 2024698471, 1 );
         /* LOADISEQ */ sub_25650( -2007826629, 1 );
         /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U1039, l_U1053, l_U1056, 2024698471, 7, 3, 2, 0, 0 );
        l_U1052 =  /* CREATEPED */ sub_13517( ref l_U1039 );
         /* F_GIVEPEDWEAPON */ sub_2652( g_U818, 68019059, 25000, 0, 1 );
        l_U1057 = 1;
        break;
        case 1:
        if ( /* IS_PED_VALID */ sub_9631( l_U1052 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "UPDATE_VIG_01 - Registering piVignettePassos", 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1052, 1 );
            ISEQ_REGISTER_ENTITY( -2007826629, "passos", l_U1052, 0 );
        }
        ISEQ_START( -2007826629 );
        l_U1057 = 2;
        break;
        case 2:
        if (l_U1058)
        {
            PED_SET_ACTION_INTENTION( l_U1052, 48, 1000, 0, 0, 0 );
            l_U1058 = 0;
        }
        break;
    }
    return;
}

/* CLEAN_VIG_01 */ void sub_42741()
{
    ISEQ_UNREGISTER_ENTITY( -2007826629, "passos" );
     /* TERMINATEISEQ */ sub_32448( -2007826629, 1 );
     /* CLEANPED */ sub_13425( l_U1052 );
     /* UNLOADMODEL */ sub_31199( 2024698471 );
    l_U1058 = 0;
    l_U359._fU4 = 0;
    l_U1057 = 0;
    return;
}

/* HANDLE_VIGNETTE_01B */ void sub_42863()
{
    int iVar2;
    unknown uVar3;

    if (l_U368._fU0)
    {
        if ( /* IS_MAX_VALID */ sub_9601())
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 1 );
            iVar2 = GET_HASH_KEY( ref g_U3457 );
            uVar3 = GET_INTERIOR_AT_COORDS( l_U368._fU20 );
            SET_INTERIOR_ACTIVE( uVar3, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar3, iVar2 );
            SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2548(), l_U368._fU20, 1 );
            SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_2548(), l_U368._fU32 );
            if (iVar2 != -1)
            {
                SET_ROOM_FOR_PED_BY_KEY(  /* PLAYER_PED_ID */ sub_2548(), iVar2 );
            }
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 0 );
        }
        l_U368._fU0 = 0;
    }
    if (l_U368._fU4)
    {
         /* UPDATE_VIG_01B */ sub_43080();
    }
    if (l_U368._fU12)
    {
         /* CLEAN_VIG_01B */ sub_43757();
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U368 );
    }
    return;
}

/* UPDATE_VIG_01B */ void sub_43080()
{
    if ( /* IS_PED_VALID */ sub_9631( l_U1086 ))
    {
        SET_PED_COORDS( l_U1086, l_U1087, 1 );
        SET_PED_HEADING( l_U1086, 65446 );
    }
    if ( /* IS_PED_VALID */ sub_9631( l_U1072 ))
    {
        SET_PED_COORDS( l_U1072, l_U1090, 1 );
        SET_PED_HEADING( l_U1072, 65446 );
    }
    switch (l_U1094)
    {
        case 0:
         /* LOADMODEL */ sub_10350( 1853260236, 1 );
         /* LOADMODEL */ sub_10350( 1864850433, 1 );
         /* LOADISEQ */ sub_25650( -596711032, 1 );
         /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U1059, l_U1090, 65446, 1853260236, 7, 3, 2, 0, 0 );
         /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U1073, l_U1087, 65446, 1864850433, 7, 3, 2, 0, 0 );
        l_U1086 =  /* CREATEPED */ sub_13517( ref l_U1073 );
        l_U1072 =  /* CREATEPED */ sub_13517( ref l_U1059 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1086, ref g_U3457 );
        SET_ROOM_FOR_PED_BY_NAME( l_U1072, ref g_U3457 );
        l_U1094 = 1;
        break;
        case 1:
        if ( /* IS_PED_VALID */ sub_9631( l_U1086 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "UPDATE_VIG_01B - Registering piBarGirl", 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1086, 1 );
            I_SEQUENCE_REGISTER_ENTITY( l_U1093, "bargirl", l_U1086, 0 );
        }
        if ( /* IS_PED_VALID */ sub_9631( l_U1072 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "UPDATE_VIG_01B - Registering piBartender", 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1072, 1 );
            I_SEQUENCE_REGISTER_ENTITY( l_U1093, "bartender", l_U1072, 0 );
        }
        I_SEQUENCE_START( l_U1093 );
        l_U1094 = 2;
        break;
        case 2:
        if (l_U1095)
        {
            PED_SET_ACTION_INTENTION( l_U1086, 37, 1000, 0, 0, 0 );
            l_U1095 = 0;
        }
        if (l_U1096)
        {
            PED_SET_ACTION_INTENTION( l_U1072, 38, 1000, 0, 0, 0 );
            l_U1096 = 0;
        }
        break;
    }
    return;
}

/* CLEAN_VIG_01B */ void sub_43757()
{
    ISEQ_UNREGISTER_ENTITY( -596711032, "bargirl" );
    ISEQ_UNREGISTER_ENTITY( -596711032, "bartender" );
     /* TERMINATEISEQ */ sub_32448( -596711032, 1 );
     /* CLEANPED */ sub_13425( l_U1086 );
     /* CLEANPED */ sub_13425( l_U1072 );
     /* UNLOADMODEL */ sub_31199( 1853260236 );
     /* UNLOADMODEL */ sub_31199( 1864850433 );
    l_U1095 = 0;
    l_U368._fU4 = 0;
    l_U1094 = 0;
    return;
}

/* HANDLE_VIGNETTE_03 */ void sub_43925()
{
    int iVar2;
    unknown uVar3;

    if (l_U377._fU0)
    {
        if ( /* IS_MAX_VALID */ sub_9601())
        {
            iVar2 = GET_HASH_KEY( ref g_U3473 );
            uVar3 = GET_INTERIOR_AT_COORDS( l_U377._fU20 );
            SET_INTERIOR_ACTIVE( uVar3, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar3, iVar2 );
            SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2548(), l_U377._fU20, 1 );
            SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_2548(), l_U377._fU32 );
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 1 );
            if (iVar2 != -1)
            {
                SET_ROOM_FOR_PED_BY_KEY(  /* PLAYER_PED_ID */ sub_2548(), iVar2 );
            }
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 0 );
        }
        l_U377._fU0 = 0;
    }
    if (l_U377._fU4)
    {
         /* UPDATE_VIG_03 */ sub_44141();
    }
    if (l_U377._fU12)
    {
         /* CLEAN_VIG_03 */ sub_44691();
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U377 );
    }
    return;
}

/* UPDATE_VIG_03 */ void sub_44141()
{
    switch (l_U1112)
    {
        case 0:
         /* LOADMODEL */ sub_10350( g_U3093, 1 );
         /* LOADISEQ */ sub_25650( -1679907246, 1 );
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_27988( ref l_U1097, 2.61000000, -318.00000000, -4.04000000, 65356, -119177685, 7, 3, 2, 0, 0 );
        l_U1110 =  /* CREATEPED */ sub_13517( ref l_U1097 );
        l_U1112 = 1;
        break;
        case 1:
        if ( /* IS_PED_VALID */ sub_9631( l_U1110 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "UPDATE_VIG_03 - Registering piBarCaller", 0 );
            SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( l_U1110, 0 );
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U1110, 1 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1110, 1 );
            SET_ROOM_FOR_PED_BY_NAME( l_U1110, ref g_U3473 );
            ISEQ_REGISTER_ENTITY( -1679907246, "caller", l_U1110, 0 );
        }
        ISEQ_START( -1679907246 );
        l_U1112 = 2;
        break;
        case 2:
        if (l_U1113)
        {
            PED_SET_ACTION_INTENTION( l_U1110, 47, 1000, 0, 0, 0 );
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "UPDATE_VIG_03 - Interrupting vignette", 0 );
            l_U1113 = 0;
            l_U1112 = 3;
        }
        if (ISEQ_QUERY_ENTITY_STATE( -1679907246, "caller", 6 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "UPDATE_VIG_03 - Done, cleaning up vignette", 0 );
            l_U1112 = 3;
        }
        break;
        case 3: break;
    }
    return;
}

/* CLEAN_VIG_03 */ void sub_44691()
{
    ISEQ_UNREGISTER_ENTITY( -1679907246, "caller" );
     /* TERMINATEISEQ */ sub_32448( -1679907246, 1 );
     /* CLEANPED */ sub_13425( l_U1110 );
     /* UNLOADMODEL */ sub_31199( g_U3093 );
    l_U1113 = 0;
    l_U377._fU4 = 0;
    l_U1112 = 0;
    return;
}

/* HANDLE_VIGNETTE_07 */ void sub_44813()
{
    if (l_U395._fU0)
    {
         /* ISEQUENCE_TELEPORT_PLAYER */ sub_9404( ref l_U395 );
    }
    if (l_U395._fU4)
    {
         /* RUN_VIG_07 */ sub_44877();
    }
    if (l_U395._fU12)
    {
         /* CLEAN_VIG_07 */ sub_45613();
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U395 );
    }
    return;
}

/* RUN_VIG_07 */ void sub_44877()
{
    switch (l_U1377)
    {
        case 0:
         /* MAKE_PASSOS_VIG_07 */ sub_44937( 0 );
         /* LOADISEQ */ sub_25650( -760081408, 1 );
        l_U1377 = 1;
        break;
        case 1:
        if ( /* IS_PED_VALID */ sub_9631( l_U1378 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIG_07 - Registering piPassos_Vig07", "***" );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1378, 1 );
            ISEQ_REGISTER_ENTITY( -760081408, "passos", l_U1378, 0 );
        }
        ISEQ_START( -760081408 );
        l_U1377 = 2;
        break;
        case 2:
        if (l_U1396)
        {
            if ( /* IS_PED_VALID */ sub_9631( l_U1378 ))
            {
                 /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIG_07 - Passos start shooting", "***" );
                PED_SET_ACTION_INTENTION( l_U1378, 47, 1000, 0, 0, 0 );
            }
            l_U1396 = 0;
        }
        if (l_U1397)
        {
             /* WRITESCRIPTLOG */ sub_2257( "SBA", "Transition to VIG07B", "***" );
             /* LOADISEQ */ sub_25650( 320396699, 1 );
            if ( /* IS_PED_VALID */ sub_9631( l_U1378 ))
            {
                PED_SET_ACTION_INTENTION( l_U1378, 56, 1000, 0, 0, 0 );
            }
            l_U1397 = 0;
        }
        if (ISEQ_QUERY_STATE( -760081408, 6 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIGNETTE_07: DONE!", "***" );
            l_U1377 = 0;
            l_U395._fU4 = 0;
        }
        break;
    }
    return;
}

/* MAKE_PASSOS_VIG_07 */ void sub_44937(boolean bParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

     /* WRITESCRIPTLOG */ sub_2257( "SBA", "MAKE_PASSOS_VIG_07", "***" );
    if (NOT bParam0)
    {
        uVar3 = {l_U1392};
        uVar6 = l_U1395;
    }
    else
    {
        uVar3 = {g_U3341};
        uVar6 = l_U1399;
    }
     /* LOADMODEL */ sub_10350( 2024698471, 1 );
     /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U1379, uVar3, uVar6, 2024698471, 7, 3, 2, 0, 0 );
     /* CLEANPED */ sub_13425( l_U1378 );
    l_U1378 =  /* CREATEPED */ sub_13517( ref l_U1379 );
     /* F_GIVEPEDWEAPON */ sub_2652( l_U1378, -862236369, 25000, 0, 0 );
    return;
}

/* CLEAN_VIG_07 */ void sub_45613()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "CLEAN_VIG_07", "***" );
    ISEQ_UNREGISTER_ENTITY( -760081408, "passos" );
     /* TERMINATEISEQ */ sub_32448( -760081408, 1 );
     /* CLEANPED */ sub_13425( l_U1378 );
     /* UNLOADMODEL */ sub_31199( 2024698471 );
    l_U395._fU4 = 0;
    l_U1377 = 0;
    return;
}

/* HANDLE_VIGNETTE_07B */ void sub_45761()
{
    if (l_U404._fU0)
    {
         /* ISEQUENCE_TELEPORT_PLAYER */ sub_9404( ref l_U404 );
    }
    if (l_U404._fU4)
    {
         /* RUN_VIG_07B */ sub_45826();
    }
    if (l_U404._fU12)
    {
         /* CLEAN_VIG_07B */ sub_47277();
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U404 );
    }
    return;
}

/* RUN_VIG_07B */ void sub_45826()
{
    switch (l_U1398)
    {
        case 0:
         /* CREATE_VIG_07B_PARKED_CARS */ sub_45886();
         /* MAKE_PASSOS_VIG_07 */ sub_44937( 1 );
         /* LOADISEQ */ sub_25650( 320396699, 1 );
        l_U1398 = 1;
        break;
        case 1:
        if ( /* IS_PED_VALID */ sub_9631( l_U1378 ))
        {
             /* TELEPORTPED */ sub_9748( l_U1378, g_U3341, g_U3345 );
            WAIT( 1 );
            SET_PED_SYNC_POINT( l_U1378, g_U3341, g_U3344 );
             /* WRITE_STRING */ sub_3037( "bswtest" );
             /* WRITE_VECTOR_FLOAT */ sub_46987( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U818 ), GET_PED_HEADING( g_U818 ) );
             /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIG_07B - Registering piPassos_Vig07B", "***" );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1378, 1 );
            ISEQ_REGISTER_ENTITY( 320396699, "passos", l_U1378, 0 );
        }
        ISEQ_START( 320396699 );
        l_U1398 = 2;
        break;
        case 2:
        if (ISEQ_QUERY_STATE( 320396699, 6 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIGNETTE_07B: DONE!", "***" );
            l_U1398 = 0;
            l_U404._fU4 = 0;
        }
        break;
    }
    return;
}

/* CREATE_VIG_07B_PARKED_CARS */ void sub_45886()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "CREATE_VIG_07B_PARKED_CARS - start", "***" );
     /* LOADMODEL */ sub_10350( 1839686620, 1 );
     /* LOADMODEL */ sub_10350( 557810561, 1 );
    l_U302[0] =  /* CREATEVEHICLE */ sub_46033( 1839686620, -19.47000000, -323.37500000, -0.61000000, -95.00000000, 1, 0, 0 );
    l_U302[1] =  /* CREATEVEHICLE */ sub_46033( 557810561, -18.25000000, -317.25000000, -0.61000000, 4.00000000, 1, 0, 0 );
     /* P_SET_STANDARD_VEHICLE_OPTIONS */ sub_46403( l_U302[0], 0, 1 );
     /* P_SET_STANDARD_VEHICLE_OPTIONS */ sub_46403( l_U302[1], 0, 1 );
    return;
}

/* CREATEVEHICLE */ void sub_46033(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_10350( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for vehicle to exist: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

/* P_SET_STANDARD_VEHICLE_OPTIONS */ void sub_46403(unknown uParam0, boolean bParam1, unknown uParam2)
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "P_SET_STANDARD_VEHICLE_OPTIONS: Starting", "***" );
    if ( /* IS_VEHICLE_VALID */ sub_46508( uParam0 ))
    {
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "P_SET_STANDARD_VEHICLE_OPTIONS: Car Valid - setting options", "***" );
        SET_VEHICLE_ON_GROUND_PROPERLY( uParam0 );
        SET_VEHICLE_CAN_BE_DAMAGED( uParam0, 1 );
        if (bParam1)
        {
            SET_VEHICLE_ENGINE_ON( uParam0, 1, 1 );
        }
        SET_VEHICLE_ENGINE_HEALTH( uParam0, 600.00000000 );
        SET_VEHICLE_PETROL_TANK_HEALTH( uParam0, 300.00000000 );
        SET_VEHICLE_PROOFS( uParam0, 0, 1, 1, 0, 0 );
        SET_VEHICLE_ONLY_DAMAGED_BY_PLAYER( uParam0, uParam2 );
    }
    else
    {
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "P_SET_STANDARD_VEHICLE_OPTIONS: CAR IS INVALID!", "***" );
    }
    return;
}

/* IS_VEHICLE_VALID */ int sub_46508(unknown uParam0)
{
    if ((NOT (IS_VEHICLE_DEAD( uParam0 ))) AND (DOES_VEHICLE_EXIST( uParam0 )))
    {
        return 1;
    }
    return 0;
}

/* WRITE_VECTOR_FLOAT */ void sub_46987(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    PRINTVECTOR( uParam0 );
    PRINTFLOAT( uParam3 );
    PRINTNL();
    return;
}

/* CLEAN_VIG_07B */ void sub_47277()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "CLEAN_VIG_07B", "***" );
    ISEQ_UNREGISTER_ENTITY( 320396699, "passos" );
     /* TERMINATEISEQ */ sub_32448( 320396699, 1 );
     /* CLEANPED */ sub_13425( l_U1378 );
     /* CLEANVEHICLEARRAY */ sub_47382( ref l_U302 );
     /* UNLOADMODEL */ sub_31199( 2024698471 );
     /* UNLOADMODEL */ sub_31199( 1839686620 );
     /* UNLOADMODEL */ sub_31199( 557810561 );
     /* UNLOADMODEL */ sub_31199( -425284483 );
    l_U404._fU4 = 0;
    l_U1398 = 0;
    return;
}

/* CLEANVEHICLEARRAY */ void sub_47382(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANVEHICLE */ sub_47436( (uParam0^)[I] );
    }
    return;
}

/* CLEANVEHICLE */ void sub_47436(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

/* HANDLE_VIGNETTE_08B */ void sub_47603()
{
    if (l_U422._fU0)
    {
         /* ISEQUENCE_TELEPORT_PLAYER */ sub_9404( ref l_U422 );
    }
    if (l_U422._fU4)
    {
         /* RUN_VIGNETTE_08B */ sub_47668();
    }
    if (l_U422._fU12)
    {
         /* CLEAN_VIG_08B */ sub_50676();
         /* SET_BOOL_ARRAY */ sub_3701( ref l_U1439, 0 );
         /* SET_BOOL_ARRAY */ sub_3701( ref l_U1443, 0 );
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U422 );
    }
    return;
}

/* RUN_VIGNETTE_08B */ void sub_47668()
{
    unknown uVar2;

    switch (l_U1418)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIGNETTE_08B: state = 0", "***" );
         /* LOAD_ASSETS_VIGNETTE_08B */ sub_47780();
         /* CREATE_CARS_VIGNETTE_08B */ sub_48127();
         /* CREATE_ENEMIES_VIGNETTE_08B */ sub_48313( ref l_U1447, l_U1421, ref l_U1431 );
         /* CREATE_ENEMIES_VIGNETTE_08B */ sub_48313( ref l_U1517, l_U1426, ref l_U1435 );
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIGNETTE_08B: GOING TO State = 1", "***" );
        l_U1418 = 1;
        break;
        case 1:
        if (l_U1419)
        {
             /* TASK_PED_TO_LEAVE_CAR */ sub_49632( ref l_U1447[0], l_U1421, 0 );
             /* TASK_PED_TO_LEAVE_CAR */ sub_49632( ref l_U1447[1], l_U1421, 1 );
             /* TASK_PED_TO_LEAVE_CAR */ sub_49632( ref l_U1447[2], l_U1421, 0 );
             /* TASK_PED_TO_LEAVE_CAR */ sub_49632( ref l_U1517[0], l_U1426, 0 );
             /* TASK_PED_TO_LEAVE_CAR */ sub_49632( ref l_U1517[1], l_U1426, 1 );
             /* TASK_PED_TO_LEAVE_CAR */ sub_49632( ref l_U1517[2], l_U1426, 0 );
            l_U1419 = 0;
            l_U1418 = 2;
        }
        break;
        case 2:
        if (( /* F_IS_PED_DONE_EXITING_VEHICLE */ sub_50010( l_U1517[0]._fU52 )) AND ( /* F_IS_PED_DONE_EXITING_VEHICLE */ sub_50010( l_U1447[0]._fU52 )))
        {
             /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIGNETTE_08B: DONE!", "***" );
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_16085( ref l_U1447[0]._fU52, 0 );
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_16085( ref l_U1447[1]._fU52, 0 );
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_16085( ref l_U1447[2]._fU52, 0 );
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_16085( ref l_U1517[0]._fU52, 0 );
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_16085( ref l_U1517[1]._fU52, 0 );
             /* PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS */ sub_16085( ref l_U1517[1]._fU52, 0 );
             /* LOCK_CLOSED_CAR_DOOR */ sub_50401( l_U1421, 0, ref l_U1439[0] );
             /* LOCK_CLOSED_CAR_DOOR */ sub_50401( l_U1421, 3, ref l_U1439[2] );
             /* LOCK_CLOSED_CAR_DOOR */ sub_50401( l_U1426, 0, ref l_U1443[0] );
             /* LOCK_CLOSED_CAR_DOOR */ sub_50401( l_U1426, 2, ref l_U1443[2] );
            l_U1418 = 0;
            l_U422._fU4 = 0;
        }
        break;
    }
    return;
}

/* LOAD_ASSETS_VIGNETTE_08B */ void sub_47780()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "LOAD_ASSETS_VIGNETTE_08B", "***" );
     /* LOADMODEL */ sub_10350( g_U3094, 1 );
     /* LOADMODEL */ sub_10350( 557810561, 1 );
     /* LOADANIMDICT */ sub_3160( "LEVEL_S_NYBAR_CP_02", 0, 1 );
     /* LOADANIMDICT */ sub_3160( "VEH@CAR_GENSEDAN", 0, 1 );
     /* LOADACTIONTREE */ sub_47965( "Vehicle/Vehicle_Car.act", 1 );
    return;
}

/* LOADACTIONTREE */ void sub_47965(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an Action Tree to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* CREATE_CARS_VIGNETTE_08B */ void sub_48127()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "CREATE_CARS_VIGNETTE_08B", "***" );
    l_U1421 =  /* CREATEVEHICLE */ sub_46033( 557810561, l_U1422, l_U1425, 0, 0, 0 );
    SET_VEHICLE_ON_GROUND_PROPERLY( l_U1421 );
    l_U1426 =  /* CREATEVEHICLE */ sub_46033( 557810561, l_U1427, l_U1430, 0, 0, 0 );
    SET_VEHICLE_ON_GROUND_PROPERLY( l_U1426 );
    return;
}

/* CREATE_ENEMIES_VIGNETTE_08B */ void sub_48313(unknown uParam0, int iParam1, unknown uParam2)
{
    int I;

     /* WRITESCRIPTLOG */ sub_2257( "SBA", "CREATE_ENEMIES_VIGNETTE_08B", "***" );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
         /* P_CREATEPEDSTRUCTWITHNAME */ sub_27988( ref (uParam0^)[I]._fU0, (uParam0^)[I]._fU60, (uParam0^)[I]._fU84, (uParam0^)[I]._fU88, 7, 3, 2, 0, 0 );
        if (iParam1 == l_U1426)
        {
            (uParam0^)[I]._fU52 =  /* CREATEPEDINVEHICLE */ sub_48500( ref (uParam0^)[I]._fU0, iParam1, (uParam2^)[I], 0, 0 );
        }
        else
        {
            (uParam0^)[I]._fU52 =  /* CREATEPEDINVEHICLE */ sub_48500( ref (uParam0^)[I]._fU0, iParam1, (uParam2^)[I], 0,  /* FIND_PATH_FOR_CAR_SEAT */ sub_49107( (uParam2^)[I] ) );
        }
         /* F_GIVEPEDWEAPON */ sub_2652( (uParam0^)[I]._fU52, -862236369, 25000, 0, 0 );
        SET_PED_NAME_DEBUG( (uParam0^)[I]._fU52, (uParam0^)[I]._fU56 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^)[I]._fU52, 1 );
    }
    return;
}

/* CREATEPEDINVEHICLE */ void sub_48500(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4)
{
    if ((HAS_MODEL_LOADED( iParam0->_fU16 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_10350( iParam0->_fU16, 1 );
    }
    if (((IS_VEHICLE_DEAD( uParam1 )) == 0) AND ((DOES_VEHICLE_EXIST( uParam1 )) == 1))
    {
        iParam0->_fU40 = CREATE_PED_INSIDE_VEHICLE( uParam1, iParam0->_fU24, iParam0->_fU16, uParam2, uParam4, iParam0->_fU48 );
    }
    else
    {
        SCRIPT_ASSERT( "The vehicle your trying to create a ped inside of is not valid!!!", 0 );
    }
    if (iParam3 == 1)
    {
        while ((DOES_PED_EXIST( iParam0->_fU40 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for ped created inside a vehicle to exist... ###", 0 );
            WAIT( 0 );
        }
    }
     /* SETPEDDEFAULTSTATS */ sub_14008( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_14109( iParam0->_fU40 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        iParam0->_fU44 = 1;
    }
    return iParam0->_fU40;
}

/* FIND_PATH_FOR_CAR_SEAT */ string sub_49107(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        return "/Global/VehicleCar/Passenger_FrontRight/CAR_GENSEDAN2";
        break;
        case 1:
        return "/Global/VehicleCar/Passenger_BackLeft/CAR_GENSEDAN2";
        break;
        case 2:
        return "/Global/VehicleCar/Passenger_BackRight/CAR_GENSEDAN2";
        break;
    }
    return "/Global/VehicleCar/Driver/CAR_GENSEDAN2";
}

/* TASK_PED_TO_LEAVE_CAR */ void sub_49632(int iParam0, unknown uParam1, boolean bParam2)
{
    if (( /* IS_VEHICLE_VALID */ sub_46508( uParam1 )) AND ( /* IS_PED_VALID */ sub_9631( iParam0->_fU52 )))
    {
        if (bParam2)
        {
             /* WRITESCRIPTLOG */ sub_2257( "SBA", "TASK_PED_TO_LEAVE_CAR: Exitting car but NOT closing door", "***" );
            TASK_LEAVE_VEHICLE_DONT_CLOSE_DOOR( iParam0->_fU52, uParam1 );
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_2257( "SBA", "TASK_PED_TO_LEAVE_CAR: Exitting car and closing door", "***" );
            TASK_LEAVE_VEHICLE( iParam0->_fU52, uParam1 );
        }
    }
    return;
}

/* F_IS_PED_DONE_EXITING_VEHICLE */ int sub_50010(unknown uParam0)
{
    if (( /* F_GET_SCRIPT_TASK_STATUS */ sub_50055( uParam0, 11 )) == 7)
    {
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "F_IS_PED_DONE_EXITING_VEHICLE:  TRUE!", "***" );
        return 1;
    }
    return 0;
}

/* F_GET_SCRIPT_TASK_STATUS */ int sub_50055(unknown uParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        return GET_SCRIPT_TASK_STATUS( uParam0, uParam1 );
    }
    return 0;
}

/* LOCK_CLOSED_CAR_DOOR */ void sub_50401(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (uParam2^))
    {
        if ( /* IS_VEHICLE_VALID */ sub_46508( uParam0 ))
        {
            if ((GET_VEHICLE_DOOR_ANGLE_RATIO( uParam0, uParam1 )) <= l_U1420)
            {
                 /* WRITESCRIPTLOG */ sub_2257( "SBA", "LOCK_CLOSED_CAR_DOOR: shuting and latching door!", "***" );
                SET_VEHICLE_DOOR_SHUT( uParam0, uParam1, 0, 0 );
                SET_VEHICLE_DOOR_LATCHED( uParam0, uParam1, 1, 1 );
                (uParam2^) = 1;
            }
        }
    }
    return;
}

/* CLEAN_VIG_08B */ void sub_50676()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "CLEAN_VIG_08B", "***" );
     /* CLEAN_PEDS_VIG_08B */ sub_50744( ref l_U1447, l_U1416 );
     /* CLEAN_PEDS_VIG_08B */ sub_50744( ref l_U1517, l_U1417 );
     /* TERMINATEISEQ */ sub_32448( 1537241033, 1 );
     /* CLEANVEHICLE */ sub_47436( l_U1421 );
     /* CLEANVEHICLE */ sub_47436( l_U1426 );
     /* UNLOADMODEL */ sub_31199( g_U3094 );
     /* UNLOADMODEL */ sub_31199( 557810561 );
     /* UNLOADANIMDICT */ sub_34199( "LEVEL_S_NYBAR_CP_02" );
     /* UNLOADANIMDICT */ sub_34199( "VEH@CAR_GENSEDAN" );
    l_U1418 = 0;
    return;
}

/* CLEAN_PEDS_VIG_08B */ void sub_50744(unknown uParam0, unknown uParam1)
{
    int I;

     /* WRITESCRIPTLOG */ sub_2257( "SBA", "CLEAN_PEDS_VIG_08B", "***" );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ( /* IS_PED_VALID */ sub_9631( (uParam0^)[I]._fU52 ))
        {
            I_SEQUENCE_UNREGISTER_ENTITY( uParam1, (uParam0^)[I]._fU56 );
             /* CLEANPED */ sub_13425( (uParam0^)[I]._fU52 );
        }
    }
    return;
}

/* HANDLE_VIGNETTE_09 */ void sub_51072()
{
    if (l_U431._fU0)
    {
         /* ISEQUENCE_TELEPORT_PLAYER */ sub_9404( ref l_U431 );
    }
    if (l_U431._fU4)
    {
         /* RUN_VIG_09 */ sub_51136();
    }
    if (l_U431._fU12)
    {
        l_U1606 = 0;
        if ( /* IS_PED_VALID */ sub_9631( g_U818 ))
        {
            PED_FINISH_ACTION_INTENTION( g_U818, 55 );
        }
         /* CLEAN_VIG_09 */ sub_51735();
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U431 );
    }
    return;
}

/* RUN_VIG_09 */ void sub_51136()
{
    switch (l_U1587)
    {
        case 0:
         /* MAKE_PASSOS_VIG_09 */ sub_51195();
         /* LOADISEQ */ sub_25650( -236629402, 1 );
        l_U1587 = 1;
        break;
        case 1:
        if ( /* IS_PED_VALID */ sub_9631( l_U1588 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIG_09 - Registering piPassos_Vig09", "***" );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1588, 1 );
            ISEQ_REGISTER_ENTITY( -236629402, "passos", l_U1588, 0 );
        }
        ISEQ_START( -236629402 );
        l_U1587 = 2;
        break;
        case 2:
        if (l_U1606)
        {
            if ( /* IS_PED_VALID */ sub_9631( g_U818 ))
            {
                PED_SET_ACTION_INTENTION( g_U818, 55, -1, 0, 0, 0 );
            }
        }
        else if ( /* IS_PED_VALID */ sub_9631( g_U818 ))
        {
            PED_FINISH_ACTION_INTENTION( g_U818, 55 );
        }
        if (ISEQ_QUERY_STATE( -236629402, 6 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIGNETTE_09: DONE!", "***" );
            l_U1587 = 0;
            l_U431._fU4 = 0;
        }
        break;
    }
    return;
}

/* MAKE_PASSOS_VIG_09 */ void sub_51195()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "MAKE_PASSOS_VIG_09", "***" );
     /* LOADMODEL */ sub_10350( 2024698471, 1 );
     /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U1589, l_U1602, l_U1605, 2024698471, 7, 3, 2, 0, 0 );
     /* CLEANPED */ sub_13425( l_U1588 );
    l_U1588 =  /* CREATEPED */ sub_13517( ref l_U1589 );
     /* F_GIVEPEDWEAPON */ sub_2652( l_U1588, -862236369, 25000, 0, 0 );
    return;
}

/* CLEAN_VIG_09 */ void sub_51735()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "CLEAN_VIG_09", "***" );
    ISEQ_UNREGISTER_ENTITY( -236629402, "passos" );
     /* TERMINATEISEQ */ sub_32448( -236629402, 1 );
     /* CLEANPED */ sub_13425( l_U1588 );
     /* UNLOADMODEL */ sub_31199( 2024698471 );
    l_U431._fU4 = 0;
    l_U1587 = 0;
    return;
}

/* HANDLE_VIGNETTE_12 */ void sub_51883()
{
    int iVar2;
    unknown uVar3;

    if (l_U449._fU0)
    {
         /* P_FADE_OUT_AND_WAIT */ sub_9445( 1000 );
        if ( /* IS_MAX_VALID */ sub_9601())
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 1 );
            iVar2 = GET_HASH_KEY( ref g_U3497 );
            uVar3 = GET_INTERIOR_AT_COORDS( l_U449._fU20 );
            SET_INTERIOR_ACTIVE( uVar3, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar3, iVar2 );
            SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2548(), l_U449._fU20, 1 );
            SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_2548(), l_U449._fU32 );
            if (iVar2 != -1)
            {
                SET_ROOM_FOR_PED_BY_KEY(  /* PLAYER_PED_ID */ sub_2548(), iVar2 );
            }
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 0 );
        }
        l_U449._fU0 = 0;
         /* P_FADE_IN_AND_WAIT */ sub_9191( 1000 );
    }
    if (l_U449._fU4)
    {
         /* RUN_VIG_12 */ sub_52115();
    }
    if (l_U449._fU12)
    {
         /* CLEAN_VIG_12 */ sub_52636();
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U449 );
    }
    return;
}

/* RUN_VIG_12 */ void sub_52115()
{
    switch (l_U1705)
    {
        case 0:
         /* MAKE_PASSOS_VIG_12 */ sub_52174();
         /* LOADISEQ */ sub_25650( 1883820167, 1 );
        l_U1705 = 1;
        break;
        case 1:
        if ( /* IS_PED_VALID */ sub_9631( l_U1706 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIG_12 - Registering piPassos_Vig12", 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1706, 1 );
            ISEQ_REGISTER_ENTITY( 1883820167, "passos", l_U1706, 0 );
        }
        ISEQ_START( 1883820167 );
        l_U1705 = 2;
        break;
        case 2:
        if (ISEQ_QUERY_STATE( 1883820167, 6 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIGNETTE_12: DONE!", "***" );
            l_U1705 = 0;
            l_U449._fU4 = 0;
        }
        break;
    }
    return;
}

/* MAKE_PASSOS_VIG_12 */ void sub_52174()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "MAKE_PASSOS_VIG_12", "***" );
     /* LOADMODEL */ sub_10350( 2024698471, 1 );
     /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U1707, l_U1720, l_U1723, 2024698471, 7, 3, 2, 0, 0 );
     /* CLEANPED */ sub_13425( l_U1706 );
    l_U1706 =  /* CREATEPED */ sub_13517( ref l_U1707 );
    SET_ROOM_FOR_PED_BY_NAME( l_U1706, ref g_U3529 );
    SET_PED_DEFAULT_AIM_AT_COORD( l_U1706, -360.20000000, -8.82000000, 4.20000000 );
     /* F_GIVEPEDWEAPON */ sub_2652( l_U1706, -862236369, 25000, 0, 0 );
    return;
}

/* CLEAN_VIG_12 */ void sub_52636()
{
    ISEQ_UNREGISTER_ENTITY( 1883820167, "passos" );
     /* TERMINATEISEQ */ sub_32448( 1883820167, 1 );
     /* CLEANPED */ sub_13425( l_U1706 );
     /* UNLOADMODEL */ sub_31199( 2024698471 );
    l_U449._fU4 = 0;
    l_U1705 = 0;
    return;
}

/* HANDLE_VIGNETTE_11 */ void sub_52752()
{
    int iVar2;
    unknown uVar3;

    if (l_U440._fU0)
    {
         /* P_FADE_OUT_AND_WAIT */ sub_9445( 1000 );
        if ( /* IS_MAX_VALID */ sub_9601())
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 1 );
            iVar2 = GET_HASH_KEY( ref g_U3497 );
            uVar3 = GET_INTERIOR_AT_COORDS( l_U440._fU20 );
            SET_INTERIOR_ACTIVE( uVar3, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar3, iVar2 );
            SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2548(), l_U440._fU20, 1 );
            SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_2548(), l_U440._fU32 );
            if (iVar2 != -1)
            {
                SET_ROOM_FOR_PED_BY_KEY(  /* PLAYER_PED_ID */ sub_2548(), iVar2 );
            }
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 0 );
        }
        l_U440._fU0 = 0;
         /* P_FADE_IN_AND_WAIT */ sub_9191( 1000 );
    }
    if (l_U440._fU4)
    {
         /* RUN_VIG_11 */ sub_52984();
    }
    if (l_U440._fU12)
    {
         /* CLEAN_VIG_11 */ sub_55993();
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U440 );
    }
    return;
}

/* RUN_VIG_11 */ void sub_52984()
{
    switch (l_U1607)
    {
        case 0:
         /* MAKE_ENTITIES_VIG_11 */ sub_53043();
         /* LOADISEQ */ sub_25650( -2112719846, 1 );
        l_U1607 = 1;
        break;
        case 1:
         /* REGISTER_ENTITIES_VIG_11 */ sub_53681();
        ISEQ_START( -2112719846 );
         /* CREATETIMER */ sub_11863( ref l_U1608, l_U1617, 1, 0 );
         /* STARTTIMER */ sub_16220( ref l_U1608 );
        l_U1607 = 2;
        break;
        case 2:
        if ( /* ISTIMERDONE */ sub_17124( ref l_U1608 ))
        {
             /* P_DIAL_CRAZY_BOOM */ sub_54286();
        }
        if (NOT l_U1704)
        {
            if ( /* IS_PED_VALID */ sub_9631( l_U1699 ))
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( l_U1699, 47 )) == 3)
                {
                     /* PLACEHOLDER_VIGNETTE */ sub_55746( "BOOOOOM!!", 4000 );
                    l_U1704 = 1;
                }
            }
        }
        if (ISEQ_QUERY_STATE( -2112719846, 6 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIGNETTE_11: DONE!", "***" );
            l_U1607 = 0;
            l_U440._fU4 = 0;
            l_U1704 = 0;
        }
        break;
    }
    return;
}

/* MAKE_ENTITIES_VIG_11 */ void sub_53043()
{
    int I;

     /* WRITESCRIPTLOG */ sub_2257( "SBA", "MAKE_ENTITIES_VIG_11", "***" );
    l_U1672[0] = {-366.40300000, -6.27200000, 2.64900000};
    l_U1672[1] = {-367.57200000, -7.18500000, 2.64900000};
    l_U1672[2] = {-366.01100000, -8.30700000, 2.64900000};
    l_U1682[0] = 270;
    l_U1682[1] = 270;
    l_U1682[2] = 270;
     /* LOADMODEL */ sub_10350( g_U3090, 1 );
     /* LOADMODEL */ sub_10350( g_U3095, 1 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_27988( ref l_U1628[0], l_U1672[0], l_U1682[0], -1244383370, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_27988( ref l_U1628[1], l_U1672[1], l_U1682[1], -941579388, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_27988( ref l_U1628[2], l_U1672[2], l_U1682[2], 525041670, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_27988( ref l_U1686, l_U1700, l_U1703, -1538180161, 7, 3, 2, 0, 0 );
    for ( I = 0; I <= 2; I++ )
    {
         /* CLEANPED */ sub_13425( l_U1668[I] );
        l_U1668[I] =  /* CREATEPED */ sub_13517( ref l_U1628[I] );
        SET_ROOM_FOR_PED_BY_NAME( l_U1668[I], ref g_U3529 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1668[I], 1 );
        if (I == 0)
        {
             /* F_GIVEPEDWEAPON */ sub_2652( l_U1668[I], -862236369, 25000, 0, 0 );
        }
        else if (I == 1)
        {
             /* F_GIVEPEDWEAPON */ sub_2652( l_U1668[I], 434544317, 25000, 0, 0 );
        }
        else
        {
             /* F_GIVEPEDWEAPON */ sub_2652( l_U1668[I], -862236369, 25000, 1, 0 );
        }
    }
     /* CLEANPED */ sub_13425( l_U1699 );
    l_U1699 =  /* CREATEPED */ sub_13517( ref l_U1686 );
    SET_ROOM_FOR_PED_BY_NAME( l_U1699, ref g_U3529 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1699, 1 );
    return;
}

/* REGISTER_ENTITIES_VIG_11 */ void sub_53681()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "REGISTER_ENTITIES_VIG_11", "***" );
    if ( /* IS_PED_VALID */ sub_9631( l_U1699 ))
    {
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIG_11 - Registering piCrazyGuy VIG 11", 0 );
        ISEQ_REGISTER_ENTITY( -2112719846, "CRAZY_GUY", l_U1699, 0 );
    }
    if ( /* IS_PED_VALID */ sub_9631( l_U1668[0] ))
    {
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIG_11 - Registering piThugs3rdWave[0] VIG 11", 0 );
        ISEQ_REGISTER_ENTITY( -2112719846, "GMED_LEFT", l_U1668[0], 0 );
    }
    if ( /* IS_PED_VALID */ sub_9631( l_U1668[1] ))
    {
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIG_11 - Registering piThugs3rdWave[1] VIG 11", 0 );
        ISEQ_REGISTER_ENTITY( -2112719846, "GMED_CENTER", l_U1668[1], 0 );
    }
    if ( /* IS_PED_VALID */ sub_9631( l_U1668[2] ))
    {
         /* WRITESCRIPTLOG */ sub_2257( "SBA", "RUN_VIG_11 - Registering piThugs3rdWave[2] VIG 11", 0 );
        ISEQ_REGISTER_ENTITY( -2112719846, "GMED_RIGHT", l_U1668[2], 0 );
    }
    return;
}

/* P_DIAL_CRAZY_BOOM */ void sub_54286()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "P_DIAL_CRAZY_BOOM", "***" );
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() ))) AND (NOT (IS_PED_DEAD( l_U1699 ))))
    {
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_54389( ref l_U1618 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54508( 0, l_U1699, "Crazy_Man_B", ref l_U1618, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_54508( 1,  /* PLAYER_PED_ID */ sub_2548(), "MAX", ref l_U1618, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_54777( "SNYC_VIG11A", ref l_U1618, 8, 1 );
    }
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_54389(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_54508(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_54777(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_54822( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_54822(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_54909( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_54909(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_54961( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_55479( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_54961(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_55479(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* PLACEHOLDER_VIGNETTE */ void sub_55746(unknown uParam0, unknown uParam1)
{
    CLEAR_HELP();
    CLEAR_PRINTS();
     /* TEXT_ONSCREEN_GENERAL */ sub_55797( uParam0, uParam1 );
     /* WRITESCRIPTLOG */ sub_2257( "TEH", uParam0, 0 );
    return;
}

/* TEXT_ONSCREEN_GENERAL */ void sub_55797(unknown uParam0, unknown uParam1)
{
    PRINT_STRING_WITH_LITERAL_STRING( "STRING", uParam0, uParam1, 1 );
    return;
}

/* CLEAN_VIG_11 */ void sub_55993()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "CLEAN_VIG_11", "***" );
    ISEQ_UNREGISTER_ENTITY( -2112719846, "GMED_LEFT" );
    ISEQ_UNREGISTER_ENTITY( -2112719846, "GMED_CENTER" );
    ISEQ_UNREGISTER_ENTITY( -2112719846, "GMED_RIGHT" );
    ISEQ_UNREGISTER_ENTITY( -2112719846, "CRAZY_GUY" );
     /* TERMINATEISEQ */ sub_32448( -2112719846, 1 );
     /* CLEANPEDARRAY */ sub_19199( ref l_U1668 );
     /* CLEANPED */ sub_13425( l_U1699 );
     /* UNLOADMODEL */ sub_31199( g_U3090 );
     /* UNLOADMODEL */ sub_31199( g_U3095 );
    l_U440._fU4 = 0;
    l_U1607 = 0;
    return;
}

/* HANDLE_VIGNETTE_17_18_19 */ void sub_56238()
{
    if (l_U458._fU0)
    {
         /* ISEQUENCE_TELEPORT_PLAYER */ sub_9404( ref l_U458 );
    }
    if (l_U458._fU4)
    {
         /* UPDATE_VIG_17_18_19 */ sub_56308();
    }
    if (l_U458._fU12)
    {
         /* CLEAN_VIG_17_18_19 */ sub_57069();
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U458 );
    }
    return;
}

/* UPDATE_VIG_17_18_19 */ void sub_56308()
{
    switch (l_U1201)
    {
        case 0:
         /* LOADMODEL */ sub_10350( 2024698471, 1 );
         /* LOADISEQ */ sub_25650( -1202559929, 1 );
         /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U1039, -251.64900000, -1.12500000, 1.60600000, 65356, 2024698471, 7, 3, 2, 0, 0 );
        l_U1052 =  /* CREATEPED */ sub_13517( ref l_U1039 );
         /* F_GIVEPEDWEAPON */ sub_2652( g_U818, 68019059, 25000, 0, 1 );
        l_U1201 = 1;
        break;
        case 1:
        if ( /* IS_PED_VALID */ sub_9631( l_U1052 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "UPDATE_VIG_17_18_19 - Registering piVignettePassos", 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1052, 1 );
            ISEQ_REGISTER_ENTITY( -1202559929, "passos", l_U1052, 0 );
        }
        ISEQ_START( -1202559929 );
        l_U1201 = 2;
        break;
        case 2:
        if (l_U1210)
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "Sending ACTION01 to VIG_17", 0 );
            PED_SET_ACTION_INTENTION( l_U1052, 47, 1000, 0, 0, 0 );
            l_U1201 = 3;
        }
        break;
        case 3:
        if ( /* IS_PED_VALID */ sub_9631( l_U1052 ))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( l_U1052, 47 )) == 1)
            {
                l_U1210 = 0;
                if (l_U1211)
                {
                     /* WRITESCRIPTLOG */ sub_2257( "RJM", "Sending ACTION02 to VIG_17", 0 );
                     /* TELEPORTPED */ sub_9748( g_U818, l_U1202, l_U1205 );
                    PED_SET_ACTION_INTENTION( l_U1052, 48, 1000, 0, 0, 0 );
                    l_U1201 = 4;
                }
            }
        }
        break;
        case 4:
        if ( /* IS_PED_VALID */ sub_9631( l_U1052 ))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( l_U1052, 48 )) == 1)
            {
                l_U1210 = 0;
                l_U1211 = 0;
                if (l_U1212)
                {
                     /* TELEPORTPED */ sub_9748( l_U1052, l_U1206, l_U1209 );
                     /* WRITESCRIPTLOG */ sub_2257( "RJM", "Sending ACTION03 to VIG_17", 0 );
                    PED_SET_ACTION_INTENTION( l_U1052, 49, 1000, 0, 0, 0 );
                    l_U1201 = 5;
                }
            }
        }
        break;
        case 5: break;
    }
    return;
}

/* CLEAN_VIG_17_18_19 */ void sub_57069()
{
    ISEQ_UNREGISTER_ENTITY( -1202559929, "passos" );
     /* TERMINATEISEQ */ sub_32448( -1202559929, 1 );
     /* CLEANPED */ sub_13425( l_U1052 );
     /* UNLOADMODEL */ sub_31199( 2024698471 );
    l_U1210 = 0;
    l_U1211 = 0;
    l_U1212 = 0;
    l_U458._fU4 = 0;
    l_U1201 = 0;
    return;
}

/* HANDLE_VIGNETTE_21 */ void sub_57209()
{
    if (l_U467._fU0)
    {
         /* ISEQUENCE_TELEPORT_PLAYER */ sub_9404( ref l_U467 );
    }
    if (l_U467._fU4)
    {
         /* UPDATE_VIG_21 */ sub_57273();
    }
    if (l_U467._fU12)
    {
         /* CLEAN_VIG_21 */ sub_57838();
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U467 );
    }
    return;
}

/* UPDATE_VIG_21 */ void sub_57273()
{
    switch (l_U1213)
    {
        case 0:
         /* LOADMODEL */ sub_10350( 2024698471, 1 );
         /* LOADISEQ */ sub_25650( -223586764, 1 );
         /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U1039, l_U1215, l_U1218, 2024698471, 7, 3, 2, 0, 0 );
        l_U1052 =  /* CREATEPED */ sub_13517( ref l_U1039 );
         /* F_GIVEPEDWEAPON */ sub_2652( g_U818, 68019059, 25000, 0, 1 );
        l_U1213 = 1;
        break;
        case 1:
        if ( /* IS_PED_VALID */ sub_9631( l_U1052 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "UPDATE_VIG_21 - Registering piVignettePassos", 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1052, 1 );
            ISEQ_REGISTER_ENTITY( -223586764, "passos", l_U1052, 0 );
        }
        ISEQ_START( -223586764 );
        l_U1213 = 2;
        break;
        case 2:
        if (l_U1214)
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "Sending SPEECH01 intention to VIG_21", 0 );
            PED_SET_ACTION_INTENTION( l_U1052, 37, 1000, 0, 0, 0 );
            l_U1213 = 3;
        }
        break;
        case 3:
        if ( /* IS_PED_VALID */ sub_9631( l_U1052 ))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( l_U1052, 37 )) == 1)
            {
                l_U1214 = 0;
                l_U1213 = 2;
            }
            else
            {
                 /* WRITESCRIPTLOG */ sub_2257( "RJM", "Waiting for SPEECH01 to complete", 0 );
            }
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "Passos not valid?", 0 );
        }
        break;
    }
    return;
}

/* CLEAN_VIG_21 */ void sub_57838()
{
    ISEQ_UNREGISTER_ENTITY( -223586764, "passos" );
     /* TERMINATEISEQ */ sub_32448( -223586764, 1 );
     /* CLEANPED */ sub_13425( l_U1052 );
     /* UNLOADMODEL */ sub_31199( 2024698471 );
    l_U1214 = 0;
    l_U467._fU4 = 0;
    l_U1213 = 0;
    return;
}

/* HANDLE_VIGNETTE_22 */ void sub_57960()
{
    if (l_U476._fU0)
    {
        if ( /* IS_MAX_VALID */ sub_9601())
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 1 );
            SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2548(), -223.81170000, -21.46038000, -11.46486000, 1 );
            SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_2548(), 356.33260000 );
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 0 );
        }
        l_U476._fU0 = 0;
    }
    if (l_U476._fU4)
    {
         /* UPDATE_VIG_22 */ sub_58107();
    }
    if (l_U476._fU12)
    {
         /* CLEAN_VIG_22 */ sub_58773();
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U476 );
    }
    return;
}

/* UPDATE_VIG_22 */ void sub_58107()
{
    switch (l_U1219)
    {
        case 0:
         /* CREATE_VIG_22_PEDS_AND_OBJECTS */ sub_58169();
         /* LOADISEQ */ sub_25650( 15594167, 1 );
         /* REGISTER_PEDS_VIG_22 */ sub_58462();
        l_U1219 = 1;
        break;
        case 1:
        if ( /* IS_PED_VALID */ sub_9631( l_U1052 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "UPDATE_VIG_22 - Registering peds", 0 );
             /* REGISTER_PEDS_VIG_22 */ sub_58462();
        }
         /* TELEPORTPED */ sub_9748( g_U818, -223.90000000, -19.20000000, -11.46177000, 205.00000000 );
        ISEQ_START( 15594167 );
        l_U1219 = 2;
        break;
        case 2: break;
    }
    return;
}

/* CREATE_VIG_22_PEDS_AND_OBJECTS */ void sub_58169()
{
     /* WRITESCRIPTLOG */ sub_2257( "TEH", "CREATE_VIG_22_PEDS_AND_OBJECTS - start", 0 );
     /* CLEANPED */ sub_13425( g_U818 );
     /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U1223, -224.16400000, -19.12281000, -11.46177000, 200.00000000, 2024698471, 26, 6, 0, 0, 0 );
    g_U818 =  /* CREATEPED */ sub_13517( ref l_U1223 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U818, 1 );
    SET_ROOM_FOR_PED_BY_NAME( g_U818, "GtaMloRoom02" );
     /* F_GIVEPEDWEAPON */ sub_2652( g_U818, 68019059, 25000, 0, 1 );
     /* WRITESCRIPTLOG */ sub_2257( "TEH", "CREATE_VIG_22_PEDS_AND_OBJECTS - end", 0 );
    return;
}

/* REGISTER_PEDS_VIG_22 */ void sub_58462()
{
     /* WRITESCRIPTLOG */ sub_2257( "TEH", "REGISTER_PEDS_VIG_22- start", 0 );
    ISEQ_REGISTER_ENTITY( 15594167, "passos", g_U818, 0 );
     /* WRITESCRIPTLOG */ sub_2257( "TEH", "REGISTER_PEDS_VIG_22 - end", 0 );
    return;
}

/* CLEAN_VIG_22 */ void sub_58773()
{
    ISEQ_UNREGISTER_ENTITY( 15594167, "passos" );
     /* TERMINATEISEQ */ sub_32448( 15594167, 1 );
     /* CLEANPED */ sub_13425( g_U818 );
    l_U476._fU4 = 0;
    l_U1219 = 0;
    return;
}

/* HANDLE_VIGNETTE_24 */ void sub_58879()
{
    if (l_U485._fU0)
    {
        if ( /* IS_MAX_VALID */ sub_9601())
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 1 );
            SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2548(), -223.81170000, -21.46038000, -11.46486000, 1 );
            SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_2548(), 356.33260000 );
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 0 );
        }
        l_U485._fU0 = 0;
    }
    if (l_U485._fU4)
    {
         /* UPDATE_VIG_24 */ sub_59026();
    }
    if (l_U485._fU12)
    {
         /* CLEAN_VIG_24 */ sub_59776();
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U485 );
    }
    return;
}

/* UPDATE_VIG_24 */ void sub_59026()
{
    switch (l_U1220)
    {
        case 0:
         /* CREATE_VIG_24_PEDS_AND_OBJECTS */ sub_59088();
         /* LOADISEQ */ sub_25650( -444056596, 1 );
         /* REGISTER_PEDS_VIG_24 */ sub_59381();
        l_U1220 = 1;
        break;
        case 1:
        if ( /* IS_PED_VALID */ sub_9631( l_U1052 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "UPDATE_VIG_24 - Registering peds", 0 );
             /* REGISTER_PEDS_VIG_24 */ sub_59381();
        }
         /* TELEPORTPED */ sub_9748( g_U818, l_U1400, l_U1403 );
        ISEQ_START( -444056596 );
        l_U1220 = 2;
        break;
        case 2:
        if (l_U592[4])
        {
            PED_SET_ACTION_INTENTION( g_U818, 51, 1000, 0, 0, 0 );
             /* TELEPORTPED */ sub_9748( g_U818, l_U1404, l_U1407 );
            l_U592[4] = 0;
        }
        break;
    }
    return;
}

/* CREATE_VIG_24_PEDS_AND_OBJECTS */ void sub_59088()
{
     /* WRITESCRIPTLOG */ sub_2257( "TEH", "CREATE_VIG_24_PEDS_AND_OBJECTS - start", 0 );
     /* CLEANPED */ sub_13425( g_U818 );
     /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U1236, -224.16400000, -19.12281000, -11.46177000, 225.00000000, 2024698471, 26, 6, 0, 0, 0 );
    g_U818 =  /* CREATEPED */ sub_13517( ref l_U1236 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U818, 1 );
    SET_ROOM_FOR_PED_BY_NAME( g_U818, "GtaMloRoom02" );
     /* F_GIVEPEDWEAPON */ sub_2652( g_U818, 68019059, 25000, 0, 1 );
     /* WRITESCRIPTLOG */ sub_2257( "TEH", "CREATE_VIG_24_PEDS_AND_OBJECTS - end", 0 );
    return;
}

/* REGISTER_PEDS_VIG_24 */ void sub_59381()
{
     /* WRITESCRIPTLOG */ sub_2257( "TEH", "REGISTER_PEDS_VIG_24- start", 0 );
    ISEQ_REGISTER_ENTITY( -444056596, "passos", g_U818, 0 );
    ISEQ_REGISTER_ENTITY( -444056596, "cs_gate", l_U1222, 1 );
     /* WRITESCRIPTLOG */ sub_2257( "TEH", "REGISTER_PEDS_VIG_24 - end", 0 );
    return;
}

/* CLEAN_VIG_24 */ void sub_59776()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "CLEAN_VIG_24", "***" );
    ISEQ_UNREGISTER_ENTITY( -444056596, "passos" );
     /* TERMINATEISEQ */ sub_32448( -444056596, 1 );
     /* CLEANPED */ sub_13425( g_U818 );
     /* UNLOADMODEL */ sub_31199( 2024698471 );
    l_U485._fU4 = 0;
    l_U1220 = 0;
    return;
}

/* HANDLE_VIGNETTE_26 */ void sub_59924()
{
    if (l_U494._fU0)
    {
        if ( /* IS_MAX_VALID */ sub_9601())
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 1 );
            SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_2548(), -193.46860000, -26.21138000, -11.60008000, 1 );
            SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_2548(), 356.70840000 );
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 0 );
        }
        l_U494._fU0 = 0;
    }
    if (l_U494._fU4)
    {
         /* UPDATE_VIG_26 */ sub_60071();
    }
    if (l_U494._fU12)
    {
         /* CLEAN_VIG_26 */ sub_60697();
         /* P_RESET_ISEQUENCE_WIDGET_BOOLS */ sub_19419( ref l_U494 );
    }
    return;
}

/* UPDATE_VIG_26 */ void sub_60071()
{
    switch (l_U1221)
    {
        case 0:
         /* CREATE_VIG_26_PEDS_AND_OBJECTS */ sub_60133();
         /* LOADISEQ */ sub_25650( -1207672607, 1 );
         /* REGISTER_PEDS_VIG_26 */ sub_60398();
        l_U1221 = 1;
        break;
        case 1:
        if ( /* IS_PED_VALID */ sub_9631( l_U1052 ))
        {
             /* WRITESCRIPTLOG */ sub_2257( "RJM", "UPDATE_VIG_26 - Registering peds", 0 );
             /* REGISTER_PEDS_VIG_26 */ sub_60398();
        }
         /* TELEPORTPED */ sub_9748( g_U818, l_U1408, l_U1411 );
        ISEQ_START( -1207672607 );
        l_U1221 = 2;
        break;
        case 2: break;
    }
    return;
}

/* CREATE_VIG_26_PEDS_AND_OBJECTS */ void sub_60133()
{
     /* WRITESCRIPTLOG */ sub_2257( "TEH", "CREATE_VIG_26_PEDS_AND_OBJECTS - start", 0 );
     /* CLEANPED */ sub_13425( g_U818 );
     /* P_CREATEPEDSTRUCT */ sub_12413( ref l_U1249, -196.82100000, -21.46900000, -11.46177000, 90, 2024698471, 26, 6, 0, 0, 0 );
    g_U818 =  /* CREATEPED */ sub_13517( ref l_U1249 );
    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U818, 1 );
     /* F_GIVEPEDWEAPON */ sub_2652( g_U818, 68019059, 25000, 0, 1 );
     /* WRITESCRIPTLOG */ sub_2257( "TEH", "CREATE_VIG_26_PEDS_AND_OBJECTS - end", 0 );
    return;
}

/* REGISTER_PEDS_VIG_26 */ void sub_60398()
{
     /* WRITESCRIPTLOG */ sub_2257( "TEH", "REGISTER_PEDS_VIG_26- start", 0 );
    ISEQ_REGISTER_ENTITY( -1207672607, "passos", g_U818, 0 );
     /* WRITESCRIPTLOG */ sub_2257( "TEH", "REGISTER_PEDS_VIG_26 - end", 0 );
    return;
}

/* CLEAN_VIG_26 */ void sub_60697()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "CLEAN_VIG_26", "***" );
    ISEQ_UNREGISTER_ENTITY( 1883820167, "passos" );
     /* TERMINATEISEQ */ sub_32448( -1207672607, 1 );
     /* CLEANPED */ sub_13425( g_U818 );
     /* UNLOADMODEL */ sub_31199( 2024698471 );
    l_U494._fU4 = 0;
    l_U1221 = 0;
    return;
}

/* HANDLE_NEWS_CLIPPING */ void sub_60853()
{
    if (l_U512._fU0)
    {
         /* ISEQUENCE_TELEPORT_PLAYER */ sub_9404( ref l_U512 );
    }
    if (l_U512._fU4)
    {
         /* P_CREATE_NEWS_CLIPPINGS_TEST */ sub_60919();
    }
    if (l_U512._fU12)
    {
         /* CLEANOBJECT */ sub_10075( l_U1733 );
         /* UNLOADMODEL */ sub_31199( -1226437551 );
    }
    return;
}

/* P_CREATE_NEWS_CLIPPINGS_TEST */ void sub_60919()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "P_CREATE_NEWS_CLIPPINGS_TEST", 0 );
     /* LOADMODEL */ sub_10350( -1226437551, 1 );
     /* CLEANOBJECT */ sub_10075( l_U1733 );
    l_U1733 =  /* CREATEOBJECTNOOFFSET */ sub_10217( -1226437551, l_U1734, l_U1737, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1733 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1733, ref g_U3489 );
        FREEZE_OBJECT_POSITION( l_U1733, 1 );
    }
    return;
}

/* HANDLE_CHOP_SHOP_ANIMATED_CAMERA */ void sub_61148()
{
    vector vVar2;
    float fVar5;
    unknown uVar6;
    unknown uVar7;

    if (l_U1805 == 0)
    {
        START_WIDGET_GROUP( "Chop Shop Animated Camera" );
        ADD_WIDGET_BOOL( "Teleport to Sequence", ref l_U1777 );
        ADD_WIDGET_BOOL( "Start Sequence", ref l_U1778 );
        ADD_WIDGET_BOOL( "Stop Sequence", ref l_U1779 );
        ADD_WIDGET_BOOL( "Use Animated Camera", ref l_U1784 );
        START_WIDGET_GROUP( "player" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U1780._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U1780._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U1780._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U1783, -360.00000000, 360.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Animated Camera" );
        ADD_WIDGET_BOOL( "Use Animated Camera Offset", ref l_U1785 );
        ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U1790, 0, 999999, 100 );
        ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U1800, 0, 999999, 100 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos X", ref l_U1786._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos Y", ref l_U1786._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos Z", ref l_U1786._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Heading", ref l_U1789, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay Cam Heading", ref l_U1803, -180.00000000, 180.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Gameplay Cam Pitch", ref l_U1804, -180.00000000, 180.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U1805 = 1;
    }
    if (l_U1777 == 1)
    {
         /* P_FADE_OUT_AND_WAIT */ sub_9445( 250 );
        vVar2 = {-222.53200000, -20.37189000, -11.46487000};
        fVar5 = 248.34180000;
         /* TELEPORTPED */ sub_9748(  /* PLAYER_PED_ID */ sub_2548(), vVar2, fVar5 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )) == 0)
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 1 );
        }
        uVar6 = GET_HASH_KEY( "GtaMloRoom02" );
        uVar7 = GET_INTERIOR_FROM_NAME( "Gta_MILO_chop", 0 );
        SET_INTERIOR_ACTIVE( uVar7, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar7, uVar6 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )) == 0)
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_2548(), 0 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 13.88741000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -4.68661100, 1065353216, 0 );
         /* P_FADE_IN_AND_WAIT */ sub_9191( 250 );
        l_U1777 = 0;
    }
    if (l_U1778 == 1)
    {
        l_U1801 = 0;
        l_U1802 = 0;
         /* RESETTIMER */ sub_11652( ref l_U1791 );
         /* LOADANIMDICT */ sub_3160( "LEVEL_S_NYBAR_CP_06", 0, 1 );
        if (((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_2586() )) == 0) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_2548() )) == 0))
        {
            SNAP_PLAYER_TO_COVERPOINT(  /* PLAYER_ID */ sub_2586(), "GenCover", "BF328AF7_6BF903F7_Corner2", 0 );
        }
        if (l_U1784 == 1)
        {
             /* NIS_PRE_SETUP */ sub_22363( 1, 0, 0, 1 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_NYBAR_CP_06", "B_OUT_MID_06_NYBAR_FWD_CAM", 1, l_U1786, l_U1789, 0, 0 );
            l_U1801 = 1;
        }
        l_U1778 = 0;
    }
    if (l_U1779 == 1)
    {
         /* LOADANIMDICT */ sub_3160( "LEVEL_S_NYBAR_CP_06", 0, 1 );
         /* NIS_POST_SETUP */ sub_23507( 1, 1 );
        l_U1779 = 0;
    }
    if (l_U1801 == 1)
    {
        if (l_U1802 == 0)
        {
            if (IS_ANIMATED_CAMERA_PLAYING() == 1)
            {
                if (CAMERA_ANIMATED_CURRENT_TIME() >= l_U1790)
                {
                    SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U1803, 1065353216, 0 );
                    SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U1804, 1065353216, 0 );
                    CAMERA_ANIMATED_STOP( l_U1800, 1 );
                     /* CREATETIMER */ sub_11863( ref l_U1791, l_U1800, 1, 0 );
                     /* STARTTIMER */ sub_16220( ref l_U1791 );
                    l_U1802 = 1;
                    l_U1801 = 0;
                }
            }
        }
    }
    if (( /* ISTIMERDONE */ sub_17124( ref l_U1791 )) == 1)
    {
         /* NIS_POST_SETUP */ sub_23507( 1, 1 );
    }
    return;
}

/* CLEANUPFANTEST */ void sub_62752()
{
     /* WRITESCRIPTLOG */ sub_2257( "SBA", "CleanUpFanTest", "***" );
     /* CLEANPED */ sub_13425( l_U1760 );
     /* CLEANOBJECT */ sub_10075( l_U1772 );
     /* UNLOADMODEL */ sub_31199( l_U1773 );
     /* UNLOADMODEL */ sub_31199( g_U3092 );
    return;
}


void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = "PED_DEF";
    l_U79 = 1.00000000;
    l_U91 = 0;
    l_U132 = 0;
    l_U152 = 1;
    l_U153 = 1;
    l_U193 = 0;
    g_U0 = 1;
    g_U648 = 0;
    StrCopy( ref g_U649, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref g_U657, "DEFAULT_SPLINE_CAMERA", 32 );
    g_U773 = 1838124598;
    g_U774 = 1483039714;
    g_U775 = 1243793245;
    g_U776 = -1445421619;
    g_U777 = -1109801521;
    g_U778 = 1879976501;
    g_U3035 = {1, 1, 0};
    g_U3038 = 0;
    g_U3039 = 0;
    g_U3040 = 0;
    g_U3041 = 0;
    g_U3042 = 0;
    g_U3043 = 0;
    StrCopy( ref g_U3077, "nyc_Doors", 32 );
    g_U3085 = -107091354;
    g_U3086 = -107091354;
    g_U3087 = -1407308805;
    g_U3088 = -1071199060;
    g_U3089 = 1504182176;
    g_U3090 = 186202593;
    g_U3091 = 2024698471;
    g_U3092 = -669185763;
    g_U3093 = 524982135;
    g_U3094 = 802544831;
    g_U3095 = 755708664;
    g_U3096 = -1494846271;
    g_U3097 = 233534649;
    g_U3098 = -1684598766;
    g_U3099 = -237650802;
    g_U3100 = -739938705;
    g_U3101 = {-288.62000000, -19.17000000, 8.12000000};
    g_U3104 = 0.00000000;
    g_U3105 = {-287.74600000, -9.74200000, 2.59000000};
    g_U3108 = {-287.74600000, -8.50000000, 1.00000000};
    g_U3111 = 0.00000000;
    g_U3119 = {-288.48500000, -17.97400000, 0.50000000};
    g_U3122 = {0.00000000, 0.00000000, 90.00000000};
    g_U3125 = {-207.67300000, -24.78400000, -11.41900000};
    g_U3128 = 90.00000000;
    g_U3129 = {-208.95700000, -22.69400000, -11.42400000};
    g_U3132 = 90.00000000;
    g_U3133 = {-207.85300000, -28.49500000, -11.42200000};
    g_U3136 = 70.00000000;
    g_U3137 = {-207.77700000, -30.22700000, -11.42900000};
    g_U3140 = 60.00000000;
    g_U3328 = {-1.30019000, -298.47430000, 0.97100000};
    g_U3331 = {1.01770000, -298.45280000, 0.97088000};
    g_U3334 = {1.23337200, -307.71600000, -0.28082900};
    g_U3337 = 90.01476000;
    g_U3338 = {-12.95400000, -320.75000000, -0.64200000};
    g_U3341 = {-12.95400000, -320.00000000, -0.64200000};
    g_U3344 = 90.00000000;
    g_U3345 = 0.00000000;
    g_U3346 = 90.54866000;
    g_U3347 = -4.64705600;
    g_U3349 = {-372.14970000, -20.33929000, 4.22899200};
    g_U3352 = {-2.39894500, 0.00000300, -77.49469000};
    g_U3417 = 8500;
    g_U3418 = 1000;
    g_U3419 = {-337.81770000, -14.67195000, 4.58660900};
    g_U3422 = {-4.62977700, -0.00001500, 13.83793000};
    g_U3425 = {-254.00000000, -1.35000000, 1.60600000};
    g_U3428 = 65446;
    g_U3429 = {-338.64830000, -15.66640000, 2.67698700};
    g_U3432 = 0.00000000;
    g_U3433 = {-358.73260000, -3.07857800, 6.26454100};
    g_U3436 = 247.05510000;
    StrCopy( ref g_U3449, "GtaMlo_BarGrnd_MILO", 32 );
    StrCopy( ref g_U3457, "GtaMloRoom_Grnd", 32 );
    StrCopy( ref g_U3465, "GtaMloRoom_StrBarg", 32 );
    StrCopy( ref g_U3473, "GtaMloRoom_Bsmnt", 32 );
    StrCopy( ref g_U3481, "GtaMloRoom_kitch", 32 );
    StrCopy( ref g_U3489, "RM_Aprt_01", 32 );
    StrCopy( ref g_U3497, "RM_Aprt_03", 32 );
    StrCopy( ref g_U3505, "RM_Aprt_02", 32 );
    StrCopy( ref g_U3513, "RM_Aprt_04", 32 );
    StrCopy( ref g_U3521, "RM_Aprt_06", 32 );
    StrCopy( ref g_U3529, "RM_Aprt_Central", 32 );
    StrCopy( ref g_U3537, "RM_Aprt_Stairs_01", 32 );
    StrCopy( ref g_U3545, "RM_Aprt_Stairs_02", 32 );
    StrCopy( ref g_U3553, "RM_Mlo_reno01", 32 );
    StrCopy( ref g_U3561, "RM_Mlo_reno02", 32 );
    StrCopy( ref g_U3569, "GtaMloRoom02", 32 );
    StrCopy( ref g_U3577, "Default Midscene message", 32 );
    g_U3585 = 0;
    g_U3586 = 0.06500000;
     /* WRITESCRIPTLOG */ sub_1719( "RJM", "Script s_nyc startup.sc is starting...", " " );
     /* P_FADE_OUT_AND_WAIT */ sub_1838( 0 );
    SET_DEBUG_ACTIVE( 0 );
    SET_STREAMING( 0 );
    SET_RANDOM_SEED( GET_GAME_TIMER() );
    SET_TRAFFIC_SYSTEM( 0 );
    g_U779 = GET_CHECKPOINT_SELECTED();
    StrCopy( ref g_U3045, "/Global/AMED/AMED_Root/AMED_INITIALIZE_IDLE", 64 );
    StrCopy( ref g_U3061, "/Global/AMED/AMED_Root/VIGNETTE_EXIT/AMED_VIGNETTE_EXECUTE", 64 );
    g_U780 = g_U779;
     /* SETUP_ALL_MISSION_START_POINTS */ sub_2173();
     /* P_SETUP_INITIAL_WEAPONS */ sub_4429();
     /* SETUP_INITIAL_WEAPON_WIDGET */ sub_5013();
     /* NYBAR_CREATE_PLAYER */ sub_5965();
     /* P_SETUP_PLAYER_RELATIONSHIPS */ sub_21181();
    SET_CAM_VIEW_MODE( 1 );
    l_U205._fU0 = 2;
    l_U205._fU8 = 3;
    SET_RICH_PRESENCE( ref l_U205 );
     /* SET_WEATHER_AND_TIME_OF_DAY_FOR_NYBAR */ sub_21393( g_U780, 0 );
    LOAD_TEXTURE_DICT( "gg_s_nyc2" );
    if (g_U779 < 20)
    {
        SET_STREAMING( 1 );
         /* SETUP_NYC_DOORS */ sub_21900();
         /* SETUP_MISSION_TRIGGERS */ sub_26428();
         /* SETUP_LEVEL_FLOW */ sub_26962();
         /* LOAD_STARTING_AREA */ sub_27551();
         /* P_START_GOLDENGUNS */ sub_28419();
         /* LOADNEWSCRIPTFILE */ sub_28681( "SpeechMain", 128 );
    }
    else
    {
        SET_STREAMING( 1 );
        if (g_U779 == 26)
        {
             /* LOADNEWSCRIPTFILE */ sub_28681( "s_nyc2_iSequences", 8192 );
        }
        else if (g_U779 == 27)
        {
             /* LOADNEWSCRIPTFILE */ sub_28681( "s_nyc2_iSequences2", 1536 );
        }
        else if (g_U779 == 25)
        {
             /* LOADNEWSCRIPTFILE */ sub_28681( "s_nyc2_cutscene", 1536 );
        }
        else if (g_U779 == 29)
        {
             /* LOADNEWSCRIPTFILE */ sub_28681( "s_nyc2_bcam_debug", 1536 );
        }
        else if (g_U779 == 30)
        {
             /* LOADNEWSCRIPTFILE */ sub_28681( "s_nyc2_ImgMetrics", 1536 );
        };;;;;
         /* SETUP_NYC_DOORS */ sub_21900();
         /* LOAD_STARTING_AREA */ sub_27551();
         /* P_FADE_IN_AND_WAIT */ sub_29116( 0 );
    }
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        ENABLE_BULLET_CAMERA_WIPE( 1 );
    }
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_DEBUG */ sub_29303();
        if (g_U779 < 20)
        {
             /* P_HANDLE_WEAPON_INIT_WIDGET */ sub_35467();
             /* P_HANDLE_MISSION_FLOW */ sub_36025();
             /* P_HANDLE_CHECKPOINT_THREADS */ sub_36639( ref g_U819, 9 );
             /* DISPLAYPLACEHOLDERMIDSCENEMESSAGE */ sub_37673();
        }
        WAIT( 0 );
    }
     /* WRITESCRIPTLOG */ sub_1719( "SP", "Script s_nyc startup.sc is terminating...", " " );
    SET_EXITFLAG_RESPONSE();
    return;
}

/* WRITESCRIPTLOG */ void sub_1719(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_FADE_OUT_AND_WAIT */ void sub_1838(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            DISPLAYF( "[SP]### Waiting for screen to fade out... ###", 0 );
            WAIT( 0 );
        }
    }
    return;
}

/* SETUP_ALL_MISSION_START_POINTS */ void sub_2173()
{
     /* WRITESCRIPTLOG */ sub_1719( "RJM", "SETUP_ALL_MISSION_START_POINTS", " " );
     /* SETUP_START_POSITION */ sub_2299( 0, -368.70210000, -20.18708000, 2.65209300, 0.00000000, -97.90749000, -3.00699700 );
     /* SETUP_START_POSITION */ sub_2299( 1, g_U3141[0]._fU0, g_U3141[0]._fU12, g_U3141[0]._fU16, g_U3141[0]._fU20 );
     /* SETUP_START_POSITION */ sub_2299( 2, g_U3433, g_U3436, 20.01874000, -8.82469400 );
     /* SETUP_START_POSITION */ sub_2299( 3, g_U3101, g_U3104, -0.76108500, -17.97338000 );
     /* SETUP_START_POSITION */ sub_2299( 4, -288.06090000, -6.18383900, 1.45560100, 4.11084400, 1.69127300, -6.98841900 );
     /* SETUP_START_POSITION */ sub_2299( 5, -255.41000000, -2.07496900, 1.36241600, 265.51320000, 13.67639000, -16.00381000 );
     /* SETUP_START_POSITION */ sub_2299( 6, -236.70070000, -18.15984000, 1.73403700, 195, 5.46449200, -16.32037000 );
     /* SETUP_START_POSITION */ sub_2299( 7, -221.98010000, -22.17252000, -11.46487000, 252.44000000, 90.55986000, -4.20000000 );
     /* SETUP_START_POSITION */ sub_2299( 8, -193.35000000, -21.22000000, -11.65461000, -52.33000000, 0.03446700, -5.66792300 );
     /* SETUP_START_POSITION */ sub_2299( 20, g_U3141[1]._fU0, g_U3141[1]._fU12, g_U3141[1]._fU16, g_U3141[1]._fU20 );
     /* SETUP_START_POSITION */ sub_2299( 21, g_U3141[2]._fU0, g_U3141[2]._fU12, g_U3141[2]._fU16, g_U3141[2]._fU20 );
     /* SETUP_START_POSITION */ sub_2299( 22, g_U3141[5]._fU0, g_U3141[5]._fU12, g_U3141[5]._fU16, g_U3141[5]._fU20 );
     /* SETUP_START_POSITION */ sub_2299( 23, g_U3141[7]._fU0, g_U3141[7]._fU12, g_U3141[7]._fU16, g_U3141[7]._fU20 );
     /* SETUP_START_POSITION */ sub_2299( 24, g_U3141[8]._fU0, g_U3141[8]._fU12, g_U3141[8]._fU16, g_U3141[8]._fU20 );
     /* SETUP_START_POSITION */ sub_2299( 26, g_U3141[0]._fU0, g_U3141[0]._fU12, g_U3141[0]._fU16, g_U3141[0]._fU20 );
     /* SETUP_START_POSITION */ sub_2299( 27, g_U3141[0]._fU0, g_U3141[0]._fU12, g_U3141[0]._fU16, g_U3141[0]._fU20 );
     /* SETUP_START_POSITION */ sub_2299( 25, g_U3141[0]._fU0, g_U3141[0]._fU12, g_U3141[0]._fU16, g_U3141[0]._fU20 );
     /* SETUP_START_POSITION */ sub_2299( 30, g_U3141[0]._fU0, g_U3141[0]._fU12, g_U3141[0]._fU16, g_U3141[0]._fU20 );
     /* SETUP_START_POSITION */ sub_2299( 28, 1000, 1000, 1000, 0.00000000, 0.00000000, 0.00000000 );
     /* SETUP_PASSOS_START_POSITION */ sub_4055( 1, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 9 );
     /* SETUP_PASSOS_START_POSITION */ sub_4055( 2, -314.90000000, -1.85000000, 2.67990500, 184.06340000, 9 );
     /* SETUP_PASSOS_START_POSITION */ sub_4055( 3, -287.20330000, -0.37083100, 1.49545100, 262.86440000, 9 );
     /* SETUP_PASSOS_START_POSITION */ sub_4055( 5, -245.45080000, -1.00000000, 2.74287000, -1.76000000, 9 );
     /* SETUP_PASSOS_START_POSITION */ sub_4055( 6, -236.78000000, -24.10000000, 1.73123000, 16.50000000, 9 );
     /* SETUP_PASSOS_START_POSITION */ sub_4055( 7, -223.60000000, -18.28500000, -11.42177000, 180.00000000, 9 );
     /* SETUP_PASSOS_START_POSITION */ sub_4055( 8, -192.41890000, -18.23972000, -10.44533000, -0.06000000, 9 );
    return;
}

/* SETUP_START_POSITION */ void sub_2299(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    if (iParam0 >= 31)
    {
         /* WRITESCRIPTLOG */ sub_1719( "RJM", "SETUP_START_POSITION tried to set start position outside of mission array!", " " );
         /* WRITESCRIPTLOG */ sub_1719( "RJM",  /* GET_NAME_OF_CHECKPOINT */ sub_2441( iParam0 ), " " );
        return;
    }
    g_U3141[iParam0]._fU0 = {uParam1};
    g_U3141[iParam0]._fU12 = uParam4;
    g_U3141[iParam0]._fU16 = uParam5;
    g_U3141[iParam0]._fU20 = uParam6;
    return;
}

/* GET_NAME_OF_CHECKPOINT */ string sub_2441(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        return "MCE_INTRO";
        break;
        case 1:
        return "MCE_APARTMENT";
        break;
        case 2:
        return "MCE_ROOFTOPS";
        break;
        case 3:
        return "MCE_ROOFTOPS_MPM";
        break;
        case 4:
        return "MCE_ROOFTOPS_2";
        break;
        case 5:
        return "MCE_ABANDONED_BUILDING";
        break;
        case 6:
        return "MCE_ABANDONED_BUILDING_2";
        break;
        case 7:
        return "MCE_CHOPSHOP";
        break;
        case 8:
        return "MCE_BACKYARDS";
        break;
        case 20:
        return "MCE_DEBUG_NO_SCRIPTS_APARTMENT";
        break;
        case 21:
        return "MCE_DEBUG_NO_SCRIPTS_ROOFTOPS";
        break;
        case 22:
        return "MCE_DEBUG_NO_SCRIPTS_ABANDONED";
        break;
        case 23:
        return "MCE_DEBUG_NO_SCRIPTS_CHOPSHOP";
        break;
        case 24:
        return "MCE_DEBUG_NO_SCRIPTS_BACKYARDS";
        break;
        case 26:
        return "MCE_I_SEQUENCES";
        break;
        case 27:
        return "MCE_I_SEQUENCES2";
        break;
        case 28:
        return "MCE_GENERATE_COVER";
        break;
        default:
        return "UNDEFINED CHECKPOINT";
        break;
    }
    return "UNDEFINED CHECKPOINT";
}

/* SETUP_PASSOS_START_POSITION */ void sub_4055(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5)
{
    if (iParam0 >= iParam5)
    {
         /* WRITESCRIPTLOG */ sub_1719( "TEH", "SETUP_PASSOS_START_POSITION tried to set start position outside of mission array!", " " );
        return;
    }
    g_U781[iParam0]._fU0 = {uParam1};
    g_U781[iParam0]._fU12 = uParam4;
    return;
}

/* P_SETUP_INITIAL_WEAPONS */ void sub_4429()
{
    int I;
    char[32] cVar3;

    StrCopy( ref cVar3, "Colt 45", 32 );
    for ( I = 0; I <= (9 - 1); I++ )
    {
         /* EMPTYMISSIONWEAPONS */ sub_4494( I );
         /* ADDPOSSIBLEINITIALWEAPON */ sub_4640( I, -862236369, cVar3 );
    }
    StrCopy( ref cVar3, "MAC10 SMG", 32 );
     /* ADDPOSSIBLEINITIALWEAPON */ sub_4640( 2, -691403429, cVar3 );
     /* ADDPOSSIBLEINITIALWEAPON */ sub_4640( 5, -691403429, cVar3 );
     /* ADDPOSSIBLEINITIALWEAPON */ sub_4640( 7, -691403429, cVar3 );
     /* ADDPOSSIBLEINITIALWEAPON */ sub_4640( 8, -691403429, cVar3 );
    StrCopy( ref cVar3, "AK47 Assault Rifle", 32 );
     /* ADDPOSSIBLEINITIALWEAPON */ sub_4640( 7, -1074756423, cVar3 );
     /* ADDPOSSIBLEINITIALWEAPON */ sub_4640( 8, -1074756423, cVar3 );
     /* P_SET_STARTING_WEAPON */ sub_4913( 0, 0 );
     /* P_SET_STARTING_WEAPON */ sub_4913( 1, 1 );
     /* P_SET_STARTING_WEAPON */ sub_4913( 2, 2 );
     /* P_SET_STARTING_WEAPON */ sub_4913( 5, 2 );
     /* P_SET_STARTING_WEAPON */ sub_4913( 7, 3 );
     /* P_SET_STARTING_WEAPON */ sub_4913( 8, 3 );
    return;
}

/* EMPTYMISSIONWEAPONS */ void sub_4494(unknown uParam0)
{
    int I;

    g_U928[uParam0]._fU0 = 0;
    g_U928[uParam0]._fU4 = 0;
    for ( I = 0; I <= 19; I++ )
    {
        g_U928[uParam0]._fU8[I] = 0;
        StrCopy( ref g_U928[uParam0]._fU92[I], "NONE", 32 );
    }
    return;
}

/* ADDPOSSIBLEINITIALWEAPON */ void sub_4640(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    g_U928[uParam0]._fU8[g_U928[uParam0]._fU0] = uParam1;
    g_U928[uParam0]._fU92[g_U928[uParam0]._fU0] = {uParam2};
    g_U928[uParam0]._fU0++;
    return;
}

/* P_SET_STARTING_WEAPON */ void sub_4913(unknown uParam0, unknown uParam1)
{
    g_U928[uParam0]._fU4 = uParam1;
    return;
}

/* SETUP_INITIAL_WEAPON_WIDGET */ void sub_5013()
{
    int I;

     /* WRITESCRIPTLOG */ sub_1719( "TEH", "SETUP_INITIAL_WEAPON_WIDGET END", "###" );
    START_WIDGET_GROUP( "Initial weapon widget" );
    START_WIDGET_GROUP( "Apartment" );
    for ( I = 0; I <= (g_U928[1]._fU0 - 1); I++ )
    {
        ADD_WIDGET_BOOL( ref g_U928[1]._fU92[I], ref l_U210[I][1] );
    }
    ADD_WIDGET_BOOL( "Randomize", ref l_U210[g_U928[1]._fU0][1] );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "Rooftops" );
    for ( I = 0; I <= (g_U928[2]._fU0 - 1); I++ )
    {
        ADD_WIDGET_BOOL( ref g_U928[2]._fU92[2], ref l_U210[I][2] );
    }
    ADD_WIDGET_BOOL( "Randomize", ref l_U210[g_U928[2]._fU0][2] );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "Abandoned Building" );
    for ( I = 0; I <= (g_U928[5]._fU0 - 1); I++ )
    {
        ADD_WIDGET_BOOL( ref g_U928[5]._fU92[I], ref l_U210[I][5] );
    }
    ADD_WIDGET_BOOL( "Randomize", ref l_U210[g_U928[5]._fU0][5] );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "Chopshop" );
    for ( I = 0; I <= (g_U928[7]._fU0 - 1); I++ )
    {
        ADD_WIDGET_BOOL( ref g_U928[7]._fU92[I], ref l_U210[I][7] );
    }
    ADD_WIDGET_BOOL( "Randomize", ref l_U210[g_U928[7]._fU0][7] );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "Backyards" );
    for ( I = 0; I <= (g_U928[8]._fU0 - 1); I++ )
    {
        ADD_WIDGET_BOOL( ref g_U928[8]._fU92[I], ref l_U210[I][8] );
    }
    ADD_WIDGET_BOOL( "Randomize", ref l_U210[g_U928[8]._fU0][8] );
    STOP_WIDGET_GROUP();
    START_WIDGET_GROUP( "Master Randmize" );
    ADD_WIDGET_BOOL( "Randomize", ref l_U421 );
    STOP_WIDGET_GROUP();
    STOP_WIDGET_GROUP();
     /* WRITESCRIPTLOG */ sub_1719( "TEH", "SETUP_INITIAL_WEAPON_WIDGET END", "###" );
    return;
}

/* NYBAR_CREATE_PLAYER */ void sub_5965()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

     /* WRITESCRIPTLOG */ sub_1719( "RJM", "CREATE_PLAYER", " " );
    uVar2 = {g_U3141[g_U779]._fU0};
    uVar5 = g_U3141[g_U779]._fU12;
    if (IS_CUSTOM_PLAYER_VARIATION() == 0)
    {
        g_U2585._fU0 =  /* F_GETMEMAX */ sub_6081( 12, uVar2, 0 );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6118() )) == 0)
        {
            SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_6118(), 0, 0 );
            SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_6118(), 1, 0 );
        }
    }
    else
    {
        uVar6 =  /* F_GET_ALTERNATE_PLAYER_VARIATION */ sub_19615( GET_CUSTOM_PLAYER_VARIATION() );
        g_U2585._fU0 =  /* F_GETMEMAX */ sub_6081( uVar6, uVar2, 0 );
        if (( /* F_DOES_VARIATION_USE_HOLSTERS */ sub_20064( uVar6 )) == 1)
        {
            SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_6118(), 0, 1 );
            SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_6118(), 1, 1 );
        }
        else
        {
            SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_6118(), 0, 0 );
            SET_HOLSTER_VISIBLE(  /* PLAYER_PED_ID */ sub_6118(), 1, 0 );
        }
    }
    g_U2585._fU4 = GET_PLAYER_PED( g_U2585._fU0 );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6118() )) == 0)
    {
         /* TELEPORTPED */ sub_21058(  /* PLAYER_PED_ID */ sub_6118(), uVar2, uVar5 );
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_6118(), 1 );
        SET_LOAD_COLLISION_FOR_PED_FLAG(  /* PLAYER_PED_ID */ sub_6118(), 1 );
        REQUEST_COLLISION_AT_COORD( uVar2 );
    }
    SET_PAYNEKILLER_AMT( 1 );
    return;
}

/* F_GETMEMAX */ void sub_6081(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown Result;
    unknown uVar8;

    Result = CREATE_PLAYER( uParam4, uParam1 );
    uVar8 =  /* PLAYER_PED_ID */ sub_6118();
    switch (uParam0)
    {
        case 0:
         /* P_MAKEINTROMAX_A */ sub_6611( uVar8 );
        break;
        case 1:
         /* P_MAKEINTROMAX_B */ sub_6872( uVar8 );
        break;
        case 2:
         /* P_MAKEINTROMAX_C */ sub_7133( uVar8 );
        break;
        case 3:
         /* P_MAKEROOFTOPPARTYMAX */ sub_7394( uVar8 );
        break;
        case 4:
         /* P_MAKEROOFTOPPARTYWETMAX */ sub_7665( uVar8 );
        break;
        case 5:
         /* P_MAKENIGHTCLUBMAX */ sub_7942( uVar8 );
        break;
        case 6:
         /* P_MAKENIGHTCLUBHELIHANGMAX */ sub_8207( uVar8 );
        break;
        case 8:
         /* P_MAKESTADIUMMAX */ sub_8488( uVar8 );
        break;
        case 9:
         /* P_MAKESTADIUMBMAX */ sub_8749( uVar8 );
        break;
        case 10:
         /* P_MAKESTADIUMCMAX */ sub_9012( uVar8 );
        break;
        case 11:
         /* P_MAKENY_TRIPMAX */ sub_9275( uVar8 );
        break;
        case 12:
         /* P_MAKENYBARMAX */ sub_9536( uVar8 );
        break;
        case 13:
         /* P_MAKEDOCKSMAX */ sub_9793( uVar8 );
        break;
        case 14:
         /* P_MAKEDOCKSRSV1MAX */ sub_10050( uVar8 );
        break;
        case 15:
         /* P_MAKEDOCKSRSV2MAX */ sub_10315( uVar8 );
        break;
        case 16:
         /* P_MAKEOFFICEMAX */ sub_10580( uVar8 );
        break;
        case 17:
         /* P_MAKEOFFICEFIREMAX */ sub_10839( uVar8 );
        break;
        case 18:
         /* P_MAKEFAVELA1V1MAX */ sub_11106( uVar8 );
        break;
        case 19:
         /* P_MAKEFAVELA1V2MAX */ sub_11371( uVar8 );
        break;
        case 20:
         /* P_MAKECEMETARYMAX */ sub_11636( uVar8 );
        break;
        case 21:
         /* P_MAKEFAVELA2V1MAX */ sub_11899( uVar8 );
        break;
        case 22:
         /* P_MAKEFAVELA2V2MAX */ sub_12164( uVar8 );
        break;
        case 23:
         /* P_MAKEFAVELA2V3MAX */ sub_12429( uVar8 );
        break;
        case 24:
         /* P_MAKEBUSDEPOTV1MAX */ sub_12694( uVar8 );
        break;
        case 25:
         /* P_MAKEBUSDEPOTV2MAX */ sub_12961( uVar8 );
        break;
        case 26:
         /* P_MAKEPANAMAMAX */ sub_13228( uVar8 );
        break;
        case 27:
         /* P_MAKEHOTELMAX */ sub_13487( uVar8 );
        break;
        case 28:
         /* P_MAKEHOTELMAXWITHBAG */ sub_13744( uVar8 );
        break;
        case 29:
         /* P_MAKEPOLICEBINKMAX */ sub_14015( uVar8 );
        break;
        case 30:
         /* P_MAKEPOLICEPRECINCTV1MAX */ sub_14282( uVar8 );
        break;
        case 31:
         /* P_MAKEPOLICEPRECINCTV2MAX */ sub_14561( uVar8 );
        break;
        case 32:
         /* P_MAKEPOLICEPRECINCTWITHVESTMAX */ sub_14840( uVar8 );
        break;
        case 33:
         /* P_MAKEAIRPORTMAXA */ sub_15131( uVar8 );
        break;
        case 34:
         /* P_MAKEAIRPORTMAXB */ sub_15394( uVar8 );
        break;
        case 35:
         /* P_MAKEAIRPORTMAXC */ sub_15657( uVar8 );
        break;
        case 36:
         /* P_MAKEAIRPORTMAXD */ sub_15920( uVar8 );
        break;
        case 37:
         /* P_MAKEBEACHMAX */ sub_16183( uVar8 );
        break;
        case 38:
         /* P_MAKEPILLZNBOOZEPART1MAX */ sub_16455( uVar8 );
        break;
        case 39:
         /* P_MAKEPILLZNBOOZEPART2V1MAX */ sub_16734( uVar8 );
        break;
        case 40:
         /* P_MAKEPILLZNBOOZEPART2V2MAX */ sub_17017( uVar8 );
        break;
        case 41:
         /* P_MAKEPILLZNBOOZEPART3MAX */ sub_17300( uVar8 );
        break;
        case 42:
         /* P_MAKEPILLZNBOOZEPART4V1MAX */ sub_17579( uVar8 );
        break;
        case 43:
         /* P_MAKEPILLZNBOOZEPART4V2MAX */ sub_17862( uVar8 );
        break;
        case 44:
         /* P_MAKEMAXPAYNE1COLORMAX */ sub_18147(  /* PLAYER_PED_ID */ sub_6118() );
        break;
        case 45:
         /* P_MAKEMAXPAYNE1BLACKWHITEMAX */ sub_18426(  /* PLAYER_PED_ID */ sub_6118() );
        break;
        case 46:
         /* P_MAKEMAXPAYNE2COLORMAX */ sub_18715(  /* PLAYER_PED_ID */ sub_6118() );
        break;
        case 47:
         /* P_MAKEMAXPAYNE2BLACKWHITEMAX */ sub_18994(  /* PLAYER_PED_ID */ sub_6118() );
        break;
        case 48:
         /* P_MAKE16BITMAX */ sub_19283(  /* PLAYER_PED_ID */ sub_6118() );
        break;
    }
    return Result;
}

/* PLAYER_PED_ID */ int sub_6118()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_6156() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_6156()
{
    return GET_PLAYER_ID();
}

/* P_MAKEINTROMAX_A */ void sub_6611(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeIntroMax_A", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEINTROMAX_B */ void sub_6872(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeIntroMax_B", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 29, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEINTROMAX_C */ void sub_7133(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeIntroMax_C", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEROOFTOPPARTYMAX */ void sub_7394(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeRooftopPartyMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEROOFTOPPARTYWETMAX */ void sub_7665(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeRooftopPartyWetMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 17, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 27, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 16, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 8, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKENIGHTCLUBMAX */ void sub_7942(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeNightclubMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKENIGHTCLUBHELIHANGMAX */ void sub_8207(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeNightclubHeliHangMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 24, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKESTADIUMMAX */ void sub_8488(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeStadiumMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKESTADIUMBMAX */ void sub_8749(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeStadiumBMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKESTADIUMCMAX */ void sub_9012(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeStadiumCMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKENY_TRIPMAX */ void sub_9275(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeNY_TripMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 28, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKENYBARMAX */ void sub_9536(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeNYBarMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEDOCKSMAX */ void sub_9793(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeDocksMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 17, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEDOCKSRSV1MAX */ void sub_10050(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeDocksRSV1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 16, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 23, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 14, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEDOCKSRSV2MAX */ void sub_10315(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeDocksRSV2Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 16, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 23, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 14, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 11, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEOFFICEMAX */ void sub_10580(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeOfficeMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEOFFICEFIREMAX */ void sub_10839(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeOfficeFireMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 6, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 14, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEFAVELA1V1MAX */ void sub_11106(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeFavela1V1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 9, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

/* P_MAKEFAVELA1V2MAX */ void sub_11371(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeFavela1V2Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 13, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 7, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

/* P_MAKECEMETARYMAX */ void sub_11636(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeCemetaryMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEFAVELA2V1MAX */ void sub_11899(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeFavela2V1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 7, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

/* P_MAKEFAVELA2V2MAX */ void sub_12164(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeFavela2V2Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

/* P_MAKEFAVELA2V3MAX */ void sub_12429(unknown uParam0)
{
    DISPLAYF( "[rw] P_MakeFavela2V3Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 30, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

/* P_MAKEBUSDEPOTV1MAX */ void sub_12694(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeBusDepotV1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 4, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEBUSDEPOTV2MAX */ void sub_12961(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeBusDepotV2Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 4, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPANAMAMAX */ void sub_13228(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePanamaMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 5, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 18, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEHOTELMAX */ void sub_13487(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeHotelMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 5, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEHOTELMAXWITHBAG */ void sub_13744(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeHotelMaxWithBag", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 5, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPOLICEBINKMAX */ void sub_14015(unknown uParam0)
{
    DISPLAYF( "[rw] P_MakePoliceBinkMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 16, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPOLICEPRECINCTV1MAX */ void sub_14282(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePolicePrecinctV1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPOLICEPRECINCTV2MAX */ void sub_14561(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePolicePrecinctV2Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 10, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 21, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 0, 0 );
    }
    return;
}

/* P_MAKEPOLICEPRECINCTWITHVESTMAX */ void sub_14840(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePolicePrecinctWithVestMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 11, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 20, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 1, 0 );
    }
    return;
}

/* P_MAKEAIRPORTMAXA */ void sub_15131(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeAirportMaxA", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 12, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 25, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEAIRPORTMAXB */ void sub_15394(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeAirportMaxB", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 12, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 15, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEAIRPORTMAXC */ void sub_15657(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeAirportMaxC", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 19, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 22, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 17, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 1, 0 );
    }
    return;
}

/* P_MAKEAIRPORTMAXD */ void sub_15920(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeAirportMaxC", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 7, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 17, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 2, 0, 0 );
    }
    return;
}

/* P_MAKEBEACHMAX */ void sub_16183(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeBeachMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 18, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 19, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
        SET_PED_PROP_INDEX( uParam0, 0, 0, 0, 255 );
    }
    return;
}

/* P_MAKEPILLZNBOOZEPART1MAX */ void sub_16455(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePillzNBoozePart1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPILLZNBOOZEPART2V1MAX */ void sub_16734(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePillzNBoozePart2V1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPILLZNBOOZEPART2V2MAX */ void sub_17017(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePillzNBoozePart2V2Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPILLZNBOOZEPART3MAX */ void sub_17300(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePillzNBoozePart3Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 26, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPILLZNBOOZEPART4V1MAX */ void sub_17579(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePillzNBoozePart4V1Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 8, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEPILLZNBOOZEPART4V2MAX */ void sub_17862(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakePillzNBoozePart4V2Max", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 8, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 7, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEMAXPAYNE1COLORMAX */ void sub_18147(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeMaxPayne1ColorMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 34, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 19, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 16, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 4, 0, 0 );
    }
    return;
}

/* P_MAKEMAXPAYNE1BLACKWHITEMAX */ void sub_18426(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeMaxPayne1BlackWhiteMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 13, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 34, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 19, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 16, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 7, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 4, 1, 0 );
    }
    return;
}

/* P_MAKEMAXPAYNE2COLORMAX */ void sub_18715(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeMaxPayne2ColorMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 32, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 18, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* P_MAKEMAXPAYNE2BLACKWHITEMAX */ void sub_18994(unknown uParam0)
{
    DISPLAYF( "[SP] P_MakeMaxPayne2BlackWhiteMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 32, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 18, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 11, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 10, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 16, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 5, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 1, 0 );
    }
    return;
}

/* P_MAKE16BITMAX */ void sub_19283(unknown uParam0)
{
    DISPLAYF( "[SP] P_Make16BitMax", 0 );
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 33, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 15, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

/* F_GET_ALTERNATE_PLAYER_VARIATION */ int sub_19615(unknown uParam0)
{
    unknown uVar3;

    uVar3 = uParam0;
    switch (uVar3)
    {
        case 1:
        return 44;
        break;
        case 2:
        return 46;
        break;
        case 3:
        return 3;
        break;
        case 4:
        return 10;
        break;
        case 5:
        return 15;
        break;
        case 6:
        return 18;
        break;
        case 7:
        return 20;
        break;
        case 8:
        return 24;
        break;
        case 9:
        return 26;
        break;
        case 10:
        return 31;
        break;
        case 11:
        return 36;
        break;
        case 12:
        return 1;
        break;
        case 13:
        return 16;
        break;
        case 14:
        return 29;
        break;
        case 15:
        return 32;
        break;
        case 16:
        return 41;
        break;
        case 17:
        return 37;
        break;
        case 18:
        return 48;
        break;
        case 19:
        return 45;
        break;
        case 20:
        return 47;
        break;
    }
    return 49;
}

/* F_DOES_VARIATION_USE_HOLSTERS */ int sub_20064(unknown uParam0)
{
    switch (uParam0)
    {
        case 0:
        return 0;
        break;
        case 1:
        return 0;
        break;
        case 2:
        return 0;
        break;
        case 3:
        return 0;
        break;
        case 4:
        return 0;
        break;
        case 5:
        return 0;
        break;
        case 6:
        return 0;
        break;
        case 8:
        return 1;
        break;
        case 9:
        return 1;
        break;
        case 10:
        return 1;
        break;
        case 11:
        return 0;
        break;
        case 12:
        return 0;
        break;
        case 13:
        return 1;
        break;
        case 14:
        return 1;
        break;
        case 15:
        return 1;
        break;
        case 16:
        return 0;
        break;
        case 17:
        return 0;
        break;
        case 18:
        return 1;
        break;
        case 19:
        return 1;
        break;
        case 20:
        return 0;
        break;
        case 21:
        return 1;
        break;
        case 22:
        return 1;
        break;
        case 23:
        return 1;
        break;
        case 24:
        return 1;
        break;
        case 25:
        return 1;
        break;
        case 26:
        return 1;
        break;
        case 27:
        return 1;
        break;
        case 28:
        return 1;
        break;
        case 29:
        return 0;
        break;
        case 30:
        return 1;
        break;
        case 31:
        return 1;
        break;
        case 32:
        return 1;
        break;
        case 33:
        return 0;
        break;
        case 34:
        return 1;
        break;
        case 35:
        return 1;
        break;
        case 36:
        return 1;
        break;
        case 37:
        return 0;
        break;
        case 38:
        return 0;
        break;
        case 39:
        return 0;
        break;
        case 40:
        return 0;
        break;
        case 41:
        return 0;
        break;
        case 42:
        return 0;
        break;
        case 43:
        return 0;
        break;
        case 44:
        return 0;
        break;
        case 45:
        return 0;
        break;
        case 46:
        return 0;
        break;
        case 47:
        return 0;
        break;
        case 48:
        return 0;
        break;
    }
    return 0;
}

/* TELEPORTPED */ void sub_21058(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* P_SETUP_PLAYER_RELATIONSHIPS */ void sub_21181()
{
     /* WRITESCRIPTLOG */ sub_1719( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", "###" );
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6118() )) == 0)
    {
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_6118(), 0, 1 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_6118(), 0, 2 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_6118(), 0, 6 );
        SET_PED_RELATIONSHIP(  /* PLAYER_PED_ID */ sub_6118(), 0, 7 );
    }
    return;
}

/* SET_WEATHER_AND_TIME_OF_DAY_FOR_NYBAR */ void sub_21393(unknown uParam0, unknown uParam1)
{
     /* WRITESCRIPTLOG */ sub_1719( "BSW", "SET_WEATHER_AND_TIME_OF_DAY_FOR_NYBAR start...", 0 );
    PRINTSTRING( "Setting weather for checkpoint: " );
    PRINTINT( uParam0 );
    PRINTNL();
    SET_WEATHER_TRANSITION_IMMEDIATE( uParam1 );
    switch (uParam0)
    {
        case 0:
        case 1:
        case 20:
        case 30:
        SET_TIME_OF_DAY( 12, 0 );
        FREEZE_TIME_OF_DAY( 12, 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
        break;
        case 7:
        SET_TIME_OF_DAY( 18, 0 );
        FREEZE_TIME_OF_DAY( 18, 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
        break;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 8:
        case 21:
        case 22:
        case 24:
        SET_TIME_OF_DAY( 18, 0 );
        FREEZE_TIME_OF_DAY( 18, 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "SNOW_LIGHT" );
        break;
        default:
        SET_TIME_OF_DAY( 12, 0 );
        FREEZE_TIME_OF_DAY( 12, 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "CLOUDY" );
        break;
    }
    return;
}

/* SETUP_NYC_DOORS */ void sub_21900()
{
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2692, g_U3089, g_U3328, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2692, -85.00000000, 85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2692, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2692, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2699, g_U3088, g_U3331, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2699, -85.00000000, 85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2699, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2699, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2706, 1106737826, -0.33950000, -328.97670000, 1.32750000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2706, -85.00000000, 85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2706, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2713, -897671296, -7.29282000, -327.43690000, -3.04303000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2713, -85.00000000, 85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2713, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2713, 0 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2720, 769851823, -7.29282000, -325.03410000, -3.04303000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2720, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2720, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2720, 0 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2741, -1092147013, -2.89492000, -319.84210000, -3.06428000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2741, -85.00000000, 85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2741, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2741, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2748, -1092147013, -5.30423000, -319.84940000, -3.06428000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2748, -85.00000000, 85.00000000 );
     /* P_OPENDOOR */ sub_23091( ref g_U2748, 0, 1, 1065353216 );
     /* P_SETDOORLATCH */ sub_23255( ref g_U2748, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2727, -330062536, -0.56950000, -326.62690000, -2.47860000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2727, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2727, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2727, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2734, -1092147013, -0.55290000, -311.60550000, -3.06420000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2734, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2734, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2734, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2755, -1346405291, 7.39386000, -328.44310000, -3.08185000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2755, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2755, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2755, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2762, -1935686705, -368.10070000, -18.51104000, 3.74710000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2762, -130.00000000, 85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2762, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2762, 0 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2769, -1928575465, -366.77430000, -16.72180000, 3.78320000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2769, -85.00000000, 85.00000000 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2769, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2776, 2025090800, -364.37670000, -16.72180000, 3.78130000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2776, -85.00000000, 85.00000000 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2776, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2783, -2085572123, -356.62450000, -21.56760000, 3.74710000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2783, -85.00000000, 85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2783, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2783, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2825, -2085572123, -368.10190000, -13.75260000, 3.74710000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2825, -85.00000000, 85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2825, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2825, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2790, -672179615, -344.63980000, -21.56760000, 3.74710000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2790, -85.00000000, 85.00000000 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2790, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2797, -1570640045, -337.19450000, -20.70830000, 3.74710000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2797, -85.00000000, 85.00000000 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2797, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2804, 918329350, -335.56990000, -18.47770000, 3.74710000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2804, -85.00000000, 85.00000000 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2804, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2811, 1033217464, -335.56990000, -12.55230000, 3.74710000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2811, -85.00000000, 85.00000000 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2811, 0 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2818, -672179615, -335.56990000, -6.62710000, 3.74710000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2818, -85.00000000, 85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2818, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2818, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2839, -2085572123, -347.04820000, -4.73840000, 3.74710000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2839, -85.00000000, 85.00000000 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2839, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2832, -2085572123, -359.03240000, -4.73840000, 3.74710000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2832, -85.00000000, 0.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2832, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2832, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2846, 918329350, -368.10190000, -7.82620000, 3.74710000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2846, -85.00000000, 85.00000000 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2846, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2860, 1511170199, -363.59790000, -3.18880000, 7.37210000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2860, -85.00000000, 85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2860, 1 );
     /* P_SETDOORAUTOCLOSE */ sub_24557( ref g_U2860, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2860, 0 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2853, 1395212901, -334.74020000, -2.50624000, 8.87574000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2853, -85.00000000, 85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2853, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2853, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2867, 1240477683, -325.38970000, -7.12973000, 1.56292000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2867, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2867, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2867, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2874, 1395212901, -312.81970000, -1.99460000, 3.87485000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2874, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2874, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2874, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2881, 1395212901, -302.50560000, -7.85630000, 3.56770000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2881, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2881, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2881, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2888, 1240477683, -292.24110000, -5.28450000, 3.56770000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2888, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2888, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2888, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2895, 1395212901, -284.38020000, -3.07670000, 3.24080000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2895, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2895, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2895, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2902, 1395212901, -273.90280000, -4.02834000, 3.42213000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2902, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2902, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2902, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2909, 1395212901, -264.45840000, -1.03696000, 3.87145000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2909, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2909, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2909, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2916, 1395212901, -254.24110000, 0.42413000, 2.39587000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2916, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2916, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2916, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2923, 1240477683, -323.48990000, -21.72626000, 5.87862000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2923, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2923, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2923, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2930, 1240477683, -313.15740000, -24.60981000, 7.07580000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2930, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2930, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2930, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2937, 1395212901, -306.61990000, -24.68797000, 8.07458000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2937, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2937, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2937, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2944, 1240477683, -303.33820000, -16.86633000, 7.62213000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2944, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2944, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2944, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2951, 1240477683, -283.53280000, -16.53160000, 6.10610000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2951, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2951, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2951, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2958, 1395212901, -275.35740000, -17.75738000, 5.60896000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2958, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2958, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2958, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2965, 1395212901, -265.08970000, -15.80689000, 7.44225000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2965, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2965, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2965, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2972, 1395212901, -208.81400000, -36.05800000, -10.37372000, 0, 0, 0 );
     /* P_SETDOORMINMAXLIMIT */ sub_22028( ref g_U2972, 85.00000000, -85.00000000 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2972, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2972, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2979, -322369529, -227.37370000, -24.14570000, -10.36631000, 0, 0, 0 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2979, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2979, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2986, -466284963, -230.35550000, -18.27308000, -10.39004000, 0, 0, 0 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2986, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2986, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U2993, -822549931, -192.35010000, -5.19159000, -9.48687000, 0, 0, 0 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U2993, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U2993, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U3000, -314502219, -192.42980000, -30.12028000, -10.37733000, 0, 0, 0 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U3000, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U3000, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U3007, -318235365, -184.83940000, -5.14006000, -11.39931000, 0, 0, 0 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U3007, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U3007, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U3014, -314502219, -187.47190000, -29.88576000, -10.98316000, 0, 0, 0 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U3014, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U3014, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U3021, -1943890159, -174.06380000, -1.50430000, -11.35974000, 0, 0, 0 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U3021, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U3021, 1 );
     /* P_CREATEDOORSTRUCT */ sub_21949( ref g_U3028, -822549931, -175.68080000, -29.84400000, -9.46288000, 0, 0, 0 );
     /* P_CLOSEDOOR */ sub_22365( ref g_U3028, 1 );
     /* P_SETDOORLOCKED */ sub_22509( ref g_U3028, 1 );
    return;
}

/* P_CREATEDOORSTRUCT */ void sub_21949(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

/* P_SETDOORMINMAXLIMIT */ void sub_22028(int iParam0, float fParam1, float fParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_22063( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_22147( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        PRINTSTRING( "[SP]### Error: Door fMinLimit greater than fMaxLimit (default min:-81.0 max:81.0) ###" );
        PRINTNL();
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_22063(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_22147(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_CLOSEDOOR */ void sub_22365(int iParam0, int iParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_22063( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_22147( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

/* P_SETDOORLOCKED */ void sub_22509(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_22063( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_22147( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_OPENDOOR */ void sub_23091(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_22063( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_22147( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* P_SETDOORLATCH */ void sub_23255(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_22063( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_22147( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

/* P_SETDOORAUTOCLOSE */ void sub_24557(int iParam0, unknown uParam1)
{
    if (( /* F_DOESDOOREXIST */ sub_22063( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_22147( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

/* SETUP_MISSION_TRIGGERS */ void sub_26428()
{
     /* P_CREATETRIGGERBOX */ sub_26540( ref g_U2587, "TRIG_ALLEY_SCRIPT_LOAD", 3.91000000, -320.92000000, -4.38000000, 6.70000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_26540( ref g_U2608, "TRIG_ROOFTOP_SCRIPT_LOAD", -337.66000000, -7.10000000, 2.11000000, 7.00000000, 3.74000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_26540( ref g_U2629, "TRIG_END_MISSION", -145.47000000, -16.63000000, -12.29000000, 3.86000000, 5.40000000, 3.05000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_26540( ref g_U2671, "PASSOS_DUMMY_TRIGGER", 0.00000000, 0.00000000, 0.00000000, 1.00000000, 1.00000000, 1.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_26540( ref g_U2650, "TRIG_BAR_AREA", 0.22700000, -316.02000000, -4.20000000, 16.50000000, 24.50000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

/* P_CREATETRIGGERBOX */ void sub_26540(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* SETUP_LEVEL_FLOW */ void sub_26962()
{
     /* WRITESCRIPTLOG */ sub_1719( "RJM", "SETUP_LEVEL_FLOW", " " );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_27055( ref g_U819[0], "s_nyc2_apartment", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_27055( ref g_U819[1], "s_nyc2_apartment", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_27055( ref g_U819[2], "s_nyc2_rooftops", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_27055( ref g_U819[3], "s_nyc2_rooftops", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_27055( ref g_U819[4], "s_nyc2_rooftops", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_27055( ref g_U819[5], "s_nyc2_rooftops", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_27055( ref g_U819[6], "s_nyc2_rooftops", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_27055( ref g_U819[7], "s_nyc2_chopshop", 8192, 0 );
     /* P_SETUP_CHECKPOINT_THREAD */ sub_27055( ref g_U819[8], "s_nyc2_chopshop", 8192, 0 );
     /* P_INIT_CHECKPOINT_THREAD_ARRAY */ sub_27427( ref g_U819, g_U779, 9 );
    return;
}

/* P_SETUP_CHECKPOINT_THREAD */ void sub_27055(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    StrCopy( ref iParam0->_fU0, uParam1, 32 );
    iParam0->_fU32 = nil;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = uParam2;
    iParam0->_fU36 = uParam3;
    return;
}

/* P_INIT_CHECKPOINT_THREAD_ARRAY */ void sub_27427(unknown uParam0, int iParam1, int iParam2)
{
    int I;

    for ( I = 0; I <= (iParam2 - 1); I++ )
    {
        if (iParam1 == I)
        {
            (uParam0^)[I]._fU36 = 1;
        }
        else
        {
            (uParam0^)[I]._fU36 = 0;
        }
    }
    return;
}

/* LOAD_STARTING_AREA */ void sub_27551()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    unknown uVar7;

    DISPLAYF( "LOAD_STARTING_AREA says we're trying to load in checkpoint {}", 1, 1537,  /* GET_NAME_OF_CHECKPOINT */ sub_2441( g_U779 ) );
    uVar2 = {g_U3141[g_U779]._fU0};
    uVar5 = g_U3141[g_U779]._fU12;
    iVar6 = -1;
    switch (g_U779)
    {
        case 0:
        case 1:
        case 20:
        case 25:
        case 26:
        case 27:
        case 30:
         /* WRITESCRIPTLOG */ sub_1719( "RJM", "Max's apartment room key", " " );
         /* WRITE_STRING */ sub_27842( ref g_U3497 );
        iVar6 = GET_HASH_KEY( ref g_U3497 );
         /* WRITE_INT */ sub_27906( iVar6 );
        break;
        case 6:
        iVar6 = GET_HASH_KEY( ref g_U3553 );
        break;
        case 7:
        case 23:
         /* WRITESCRIPTLOG */ sub_1719( "RJM", "Chop Shop room key", " " );
         /* WRITE_STRING */ sub_27842( ref g_U3569 );
        iVar6 = GET_HASH_KEY( ref g_U3569 );
         /* WRITE_INT */ sub_27906( iVar6 );
        break;
        default:
         /* WRITESCRIPTLOG */ sub_1719( "RJM", "Warping to a location that doesn't need an interior loaded", " " );
        break;
    }
    STREAM_HELPERS_INIT();
    if (iVar6 == -1)
    {
        LOAD_SCENE( uVar2 );
    }
    else
    {
        uVar7 = GET_INTERIOR_AT_COORDS( uVar2 );
        SET_INTERIOR_ACTIVE( uVar7, 1, 0 );
        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar7, iVar6 );
    }
    if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6118() )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_1719( "RJM", "Player's not dead, so set their heading", 0 );
        SET_PED_COORDS(  /* PLAYER_PED_ID */ sub_6118(), uVar2, 1 );
        SET_PED_HEADING(  /* PLAYER_PED_ID */ sub_6118(), uVar5 );
        if (iVar6 != -1)
        {
            SET_ROOM_FOR_PED_BY_KEY(  /* PLAYER_PED_ID */ sub_6118(), iVar6 );
        }
        FREEZE_PED_POSITION( g_U2585._fU4, 0 );
    }
    if (g_U779 == 28)
    {
        FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_6118(), 1 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U3141[g_U779]._fU16, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U3141[g_U779]._fU20, 1065353216, 0 );
    return;
}

/* WRITE_STRING */ void sub_27842(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_27906(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* P_START_GOLDENGUNS */ void sub_28419()
{
     /* WRITESCRIPTLOG */ sub_1719( "COP", "P_LOAD_PERSISTENT_ASSETS", 0 );
    LOAD_TEXTURE_DICT( "gg_s_nyc2" );
     /* WRITESCRIPTLOG */ sub_1719( "CO", "Starting the SP_GG_S_NY2_GG_M5 context...", 0 );
    START_CONTEXT( "S_NY2_GG_M5" );
     /* WRITESCRIPTLOG */ sub_1719( "CO", "Starting the P_CL_GG_40_03 context...", 0 );
    START_CONTEXT( "S_NY2_GG_40" );
    return;
}

/* LOADNEWSCRIPTFILE */ void sub_28681(unknown uParam0, unknown uParam1)
{
    REQUEST_SCRIPT( uParam0 );
    "[doubled result, dropped if not asigned]";
    while ((HAS_SCRIPT_LOADED( uParam0 )) == 0)
    {
        DISPLAYF( "[SP]### Waiting for a script to be loaded: {} ###", 1, 1537, uParam0 );
        WAIT( 0 );
    }
    DISPLAYF( "[SP]### Script loaded! ###", 0 );
    START_NEW_SCRIPT( uParam0, uParam1 );
    return;
}

/* P_FADE_IN_AND_WAIT */ void sub_29116(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            DISPLAYF( "[SP]### Waiting for screen to fade in... ###", 0 );
            WAIT( 0 );
        }
    }
    return;
}

/* P_HANDLE_DEBUG */ void sub_29303()
{
     /* P_DEBUG_TOGGLE */ sub_29330();
     /* P_DEBUG_OUTPUT_PLAYER_POSITION */ sub_29496();
     /* P_DEBUG_GAMEPLAY_CAM */ sub_30848();
     /* P_DEBUG_CHECK_FOR_KILL_KEY */ sub_31114();
     /* P_DEBUG_CHECK_FOR_RELAX_KEY */ sub_31209();
     /* P_DEBUG_HANDLE_KILL_RADIUS */ sub_31503( 1097859072 );
     /* P_DEBUG_HANDLE_PLACEMENT_WIDGET */ sub_31954();
     /* P_DEBUG_CHECK_FOR_PAYNE_KILLER_KEY */ sub_35340( 1 );
    return;
}

/* P_DEBUG_TOGGLE */ void sub_29330()
{
    if (IS_KEYBOARD_KEY_JUST_PRESSED( 38 ))
    {
        if (l_U0)
        {
            l_U0 = 0;
            SET_DEBUG_ACTIVE( 0 );
            PRINTSTRING( "debug off" );
            PRINTNL();
        }
        else
        {
            l_U0 = 1;
            SET_DEBUG_ACTIVE( 1 );
            PRINTSTRING( "debug on" );
            PRINTNL();
        }
        while (IS_KEYBOARD_KEY_PRESSED( 38 ))
        {
            WAIT( 0 );
        }
    }
    return;
}

/* P_DEBUG_OUTPUT_PLAYER_POSITION */ void sub_29496()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;

    iVar2 = 0;
    if (DOES_PAD_EXIST( 0 ))
    {
        iVar2 = IS_BUTTON_JUST_PRESSED( 0, 8 );
    }
    if ((IS_KEYBOARD_KEY_JUST_PRESSED( 25 )) || (iVar2))
    {
        uVar3 =  /* PLAYER_PED_ID */ sub_6118();
        if (NOT (IS_PED_DEAD( uVar3 )))
        {
            uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uVar3 )};
            uVar7 = GET_PED_HEADING( uVar3 );
            uVar8 = GET_DEBUG_CAM();
            uVar9 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_CAM_COORD( uVar8 )};
            uVar12 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_CAM_ROT( uVar8 )};
            uVar15 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_COORD()};
            uVar18 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_GAMEPLAY_CAM_ROT()};
            uVar21 = GET_GAMEPLAY_CAM_RELATIVE_HEADING();
            uVar22 = GET_GAMEPLAY_CAM_RELATIVE_PITCH();
            uVar24 = GET_GROUND_Z_FOR_3D_COORD( uVar4, ref uVar23 );
            PRINTNL();
            PRINTSTRING( "[SP] players position = <<" );
            PRINTFLOAT( uVar4._fU0 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar4._fU4 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar23 );
            PRINTSTRING( ">>" );
            PRINTNL();
            PRINTSTRING( "[SP] players heading = " );
            PRINTFLOAT( uVar7 );
            PRINTSTRING( "" );
            PRINTNL();
            PRINTSTRING( "[SP] Gameplay camera relative heading = " );
            PRINTFLOAT( uVar21 );
            PRINTNL();
            PRINTSTRING( "[SP] Gameplay camera relative pitch = " );
            PRINTFLOAT( uVar22 );
            PRINTNL();
            if ((IS_PED_IN_ANY_VEHICLE( uVar3 )) == 1)
            {
                 /* GET_PED_VEHICLE */ sub_30052( uVar3, ref uVar25, 1 );
                uVar26 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( uVar25 )};
                uVar29 = GET_VEHICLE_HEADING( uVar25 );
                PRINTSTRING( "[SP] vehicle position = <<" );
                PRINTFLOAT( uVar26._fU0 );
                PRINTSTRING( ", " );
                PRINTFLOAT( uVar26._fU4 );
                PRINTSTRING( ", " );
                PRINTFLOAT( uVar26._fU8 );
                PRINTSTRING( ">>" );
                PRINTNL();
                PRINTSTRING( "[SP] vehicle heading = " );
                PRINTFLOAT( uVar29 );
                PRINTSTRING( "" );
                PRINTNL();
            }
            PRINTSTRING( "[SP] Debug camera position = <<" );
            PRINTFLOAT( uVar9._fU0 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar9._fU4 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar9._fU8 );
            PRINTSTRING( ">>" );
            PRINTNL();
            PRINTSTRING( "[SP] Debug camera rotation = <<" );
            PRINTFLOAT( uVar12._fU0 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar12._fU4 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar12._fU8 );
            PRINTSTRING( ">>" );
            PRINTNL();
            PRINTSTRING( "[SP] Gameplay camera position = <<" );
            PRINTFLOAT( uVar15._fU0 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar15._fU4 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar15._fU8 );
            PRINTSTRING( ">>" );
            PRINTNL();
            PRINTSTRING( "[SP] Gameplay camera rotation = <<" );
            PRINTFLOAT( uVar18._fU0 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar18._fU4 );
            PRINTSTRING( ", " );
            PRINTFLOAT( uVar18._fU8 );
            PRINTSTRING( ">>" );
            PRINTNL();
        }
    }
    return;
}

/* GET_PED_VEHICLE */ int sub_30052(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (bParam2)
    {
        if (NOT (IS_PED_SITTING_IN_ANY_VEHICLE( uParam0 )))
        {
            return 0;
        }
    }
    else if (NOT (IS_PED_IN_ANY_VEHICLE( uParam0 )))
    {
        return 0;
    }
    (uParam1^) = GET_VEHICLE_PED_IS_IN( uParam0 );
    return 1;
}

/* P_DEBUG_GAMEPLAY_CAM */ void sub_30848()
{
    if (l_U1 == 1)
    {
        if (l_U5 == 0)
        {
            START_WIDGET_GROUP( "Scripted Cameras" );
            ADD_WIDGET_BOOL( "bUpdateDebugCamStuff", ref l_U2 );
            ADD_WIDGET_FLOAT_SLIDER( "fDebugCamHeading", ref l_U3, -360.00000000, 360.00000000, 1.00000000 );
            ADD_WIDGET_FLOAT_SLIDER( "fDebugCamPitch", ref l_U4, -180.00000000, 180.00000000, 1.00000000 );
            STOP_WIDGET_GROUP();
            l_U5 = 1;
        }
    }
    if (l_U2 == 1)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U3, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U4, 1065353216, 0 );
        l_U2 = 0;
    }
    return;
}

/* P_DEBUG_CHECK_FOR_KILL_KEY */ void sub_31114()
{
    if ((IS_KEYBOARD_KEY_PRESSED( 20 )) == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6118() )) == 0)
        {
            SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_6118(), 0, 0 );
        }
    }
    return;
}

/* P_DEBUG_CHECK_FOR_RELAX_KEY */ void sub_31209()
{
    if ((IS_KEYBOARD_KEY_PRESSED( 19 )) == 1)
    {
         /* P_RELAX_PLAYER */ sub_31265( 0 );
    }
    return;
}

/* P_RELAX_PLAYER */ void sub_31265(int iParam0)
{
    if (((IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_6156() )) == 0) AND ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6118() )) == 0))
    {
        if (iParam0 == 1)
        {
            SET_PED_EMOTION_STATE(  /* PLAYER_PED_ID */ sub_6118(), 4 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_6118(), 1 );
        }
        else
        {
            SET_PED_EMOTION_STATE(  /* PLAYER_PED_ID */ sub_6118(), 3 );
        }
        CLEAR_PED_TASKS(  /* PLAYER_PED_ID */ sub_6118() );
        CLEAR_PED_DEFAULT_AIM(  /* PLAYER_PED_ID */ sub_6118() );
        PED_ACTION_TREE_PLAY_NODE(  /* PLAYER_PED_ID */ sub_6118(), "/Global/Player/PlayerLoco/PlayerLoco_IDLE/RELAXED/relaxed_modes" );
    }
    return;
}

/* P_DEBUG_HANDLE_KILL_RADIUS */ void sub_31503(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    int iVar8;

    if ((IS_KEYBOARD_KEY_JUST_PRESSED( 37 )) == 1)
    {
         /* WRITE_STRING */ sub_27842( "[SP]### KILL ALL PEDS IN RADIUS ###" );
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6118() )) == 0)
        {
            iVar3 = 0;
            uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_6118() )};
            iVar8 = 1;
            while (iVar8 == 1)
            {
                if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6118() )) == 0)
                {
                    iVar8 = GET_CLOSEST_ENEMY_PED(  /* PLAYER_PED_ID */ sub_6118(), uVar5, uParam0, 1, 1, 0, 1, 0, 1, ref uVar4 );
                    if (iVar8 == 1)
                    {
                        if (((GET_PED_HEALTH( uVar4 )) > 1) AND (((IS_PED_DEAD( uVar4 )) == 0) AND ((DOES_PED_EXIST( uVar4 )) == 1)))
                        {
                             /* WRITE_STRING */ sub_27842( "[SP]### thunderdome killing a ped ###" );
                             /* P_KILL_PED */ sub_31796( uVar4 );
                            SET_PED_GENERATES_DEAD_BODY_EVENTS( uVar4, 1 );
                            iVar3++;
                        }
                    }
                }
                WAIT( 0 );
            }
            PRINTSTRING( "[SP] num killed: " );
            PRINTINT( iVar3 );
            PRINTNL();
        }
    }
    return;
}

/* P_KILL_PED */ void sub_31796(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* P_DEBUG_HANDLE_PLACEMENT_WIDGET */ void sub_31954()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    char[8] cVar10;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    char[8] cVar20;
    char[8] cVar22;

    if (l_U25 == 0)
    {
        START_WIDGET_GROUP( "Placement Helper" );
        START_NEW_WIDGET_COMBO();
        ADD_TO_WIDGET_COMBO( "HEALTH_STANDARD" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_STANDARD" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_HELMET" );
        ADD_TO_WIDGET_COMBO( "WEAPON_BEANBAG_LAUNCHER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_GRENADE_LAUNCHER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_LAW" );
        ADD_TO_WIDGET_COMBO( "WEAPON_MG_21E" );
        ADD_TO_WIDGET_COMBO( "WEAPON_MG_RPD" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_38" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_COLT1911" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_DEAGLE" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_GLOCK18" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_PT92" );
        ADD_TO_WIDGET_COMBO( "WEAPON_PISTOL_TAURUS608" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_97LC" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_AK47" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_FAL" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_FAL_RUBBER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_G36K" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIFLE_RUG30" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RIOT_SHIELD" );
        ADD_TO_WIDGET_COMBO( "WEAPON_RPG" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_BENELLIM3" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_DOUBLEBARREL" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_MOSSBERG590" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_SPAS15" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SHOTGUN_WINCHESTERSX3" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_FAMAEMT40" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_MAC10" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_MP5" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_PM12" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SMG_UZI" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SNIPER_M82" );
        ADD_TO_WIDGET_COMBO( "WEAPON_SNIPER_SG1" );
        ADD_TO_WIDGET_COMBO( "WEAPON_TASER" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_FLASH" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_GRENADE" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_INCENDIARY" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_SMOKE" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_TEAR_GAS" );
        ADD_TO_WIDGET_COMBO( "WEAPON_THROWN_TIN_CAN" );
        ADD_TO_WIDGET_COMBO( "INVENT_AMMOBAG" );
        ADD_TO_WIDGET_COMBO( "INVENT_PAYNE_KILLER" );
        ADD_TO_WIDGET_COMBO( "INVENT_AMMOBAG_CARRIED" );
        ADD_TO_WIDGET_COMBO( "INVENT_MPBAG_CARRIED" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_STEALTH_BOOTS" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_WALKIE_TALKIE" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_MONOCULAR" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_FIRST_AID_KIT" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_HYPO" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_SUNGLASSES" );
        ADD_TO_WIDGET_COMBO( "MP_SPECIAL_NIGHTVISION" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_HEAVY" );
        ADD_TO_WIDGET_COMBO( "ARMOUR_MAX" );
        l_U9 = STOP_WIDGET_COMBO( "PICKUP TYPE", ref l_U11 );
        ADD_WIDGET_BOOL( "Grab Player Position", ref l_U12 );
        ADD_WIDGET_BOOL( "Create Pickup", ref l_U13 );
        ADD_WIDGET_BOOL( "Output Placement Function", ref l_U14 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U18._fU0, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U18._fU4, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U18._fU8, -5000.00000000, 5000.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U21._fU0, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U21._fU4, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U21._fU8, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_BOOL( "Fixed", ref l_U15 );
        ADD_WIDGET_BOOL( "Limit Pickup Angle", ref l_U16 );
        ADD_WIDGET_FLOAT_SLIDER( "Half Angle", ref l_U17, 0.00000000, 360.00000000, 1.00000000 );
        ADD_WIDGET_BOOL( "Is placement in an Interior?", ref l_U24 );
        l_U10 = ADD_TEXT_WIDGET( "Interior Room Name" );
        SET_CONTENTS_OF_TEXT_WIDGET( l_U10, "" );
        STOP_WIDGET_GROUP();
        l_U25 = 1;
    }
    if (l_U13 == 1)
    {
         /* CLEANPLACEMENT */ sub_34122( l_U8 );
        l_U8 =  /* CREATEPLACEMENT */ sub_34835(  /* F_RETURN_PICKUP */ sub_34185( l_U11 ), l_U18, l_U21, l_U15, 1, l_U16, l_U17 );
        if (l_U24 == 1)
        {
            GET_CONTENTS_OF_TEXT_WIDGET( 32, ref uVar2, l_U10 );
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U8, ref uVar2 );
        }
        l_U13 = 0;
    }
    if (l_U12 == 1)
    {
        if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6118() )) == 0)
        {
            l_U18 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS(  /* PLAYER_PED_ID */ sub_6118() )};
        }
        l_U12 = 0;
    }
    if (l_U14 == 1)
    {
        StrCopy( ref cVar10, "PICKUP_", 8 );
        GET_CONTENTS_OF_COMBO_WIDGET_SELECTION( 32, ref uVar12, l_U9 );
        StrCopy( ref cVar20, "FALSE", 8 );
        if (l_U15 == 1)
        {
            StrCopy( ref cVar20, "TRUE", 8 );
        }
        StrCopy( ref cVar22, "FALSE", 8 );
        if (l_U16 == 1)
        {
            StrCopy( ref cVar22, "TRUE", 8 );
        }
        DISPLAYF( "CreatePlacement({0}{1}, (<<{2}>>), (<<{3}>>), {4}, {5}, {6}, {7})", 8, 1281, ref cVar10, 1281, ref uVar12, 1027, l_U18, 1027, l_U21, 1281, ref cVar20, 1537, "TRUE", 1281, ref cVar22, 769, l_U17 );
        l_U14 = 0;
    }
    return;
}

/* CLEANPLACEMENT */ void sub_34122(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

/* F_RETURN_PICKUP */ void sub_34185(unknown uParam0)
{
    int[54] iVar3;

    array(ref iVar3, 54);
    iVar3[0] = -1888453608;
    iVar3[1] = 1274757841;
    iVar3[2] = -1322620191;
    iVar3[3] = 1360803098;
    iVar3[4] = -64228399;
    iVar3[5] = 1468647706;
    iVar3[6] = 809028259;
    iVar3[7] = -217311068;
    iVar3[8] = -1377271918;
    iVar3[9] = -343443786;
    iVar3[10] = -2029912234;
    iVar3[11] = 426620576;
    iVar3[12] = 39142315;
    iVar3[13] = 525284907;
    iVar3[14] = 1676080365;
    iVar3[15] = 584407306;
    iVar3[16] = -46756431;
    iVar3[17] = -1601242092;
    iVar3[18] = 3711131;
    iVar3[19] = 1216559076;
    iVar3[20] = -597978297;
    iVar3[21] = 1295434569;
    iVar3[22] = -1138829373;
    iVar3[23] = -1141160886;
    iVar3[24] = 1699359515;
    iVar3[25] = -2117698134;
    iVar3[26] = -514108743;
    iVar3[27] = -579469575;
    iVar3[28] = 211733796;
    iVar3[29] = 280965399;
    iVar3[30] = -535211597;
    iVar3[31] = 843762214;
    iVar3[32] = 465100219;
    iVar3[33] = 750210207;
    iVar3[34] = 1160251115;
    iVar3[35] = 413078994;
    iVar3[36] = -527347232;
    iVar3[37] = 1675234620;
    iVar3[38] = 2088230095;
    iVar3[39] = -591863731;
    iVar3[40] = 1192708175;
    iVar3[41] = -1484798391;
    iVar3[42] = -4072149;
    iVar3[43] = 255084111;
    iVar3[44] = -547949121;
    iVar3[45] = -853563202;
    iVar3[46] = 455124134;
    iVar3[47] = -189960753;
    iVar3[48] = -718604917;
    iVar3[49] = -1126973237;
    iVar3[50] = 1528601552;
    iVar3[51] = -847977410;
    iVar3[52] = 2018389501;
    iVar3[53] = 865801398;
    return iVar3[uParam0];
}

/* CREATEPLACEMENT */ void sub_34835(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for a placement to exist: {} ###", 1, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return Result;
}

/* P_DEBUG_CHECK_FOR_PAYNE_KILLER_KEY */ void sub_35340(int iParam0)
{
    if ((IS_KEYBOARD_KEY_PRESSED( 49 )) == 1)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_6118() )))
        {
            SET_PAYNEKILLER_AMT( GET_PAYNEKILLER_AMT() + iParam0 );
        }
    }
    return;
}

/* P_HANDLE_WEAPON_INIT_WIDGET */ void sub_35467()
{
    int I;
    int J;

    if (l_U421 == 1)
    {
        l_U421 = 0;
        for ( I = 0; I <= (9 - 1); I++ )
        {
            l_U210[g_U928[I]._fU4][I] = 0;
             /* P_SET_RANDOM_STARTING_WEAPON */ sub_35566( I );
            l_U210[g_U928[I]._fU4][I] = 1;
        }
    }
    else
    {
        for ( I = 0; I <= (9 - 1); I++ )
        {
            if (l_U210[g_U928[I]._fU0][I] == 1)
            {
                l_U210[g_U928[I]._fU0][I] = 0;
                l_U210[g_U928[I]._fU4][I] = 0;
                 /* P_SET_RANDOM_STARTING_WEAPON */ sub_35566( I );
                l_U210[g_U928[I]._fU4][I] = 1;
            }
            else
            {
                for ( J = 0; J <= (g_U928[I]._fU0 - 1); J++ )
                {
                    if (l_U210[J][I] == 1)
                    {
                        if (J != g_U928[I]._fU4)
                        {
                            l_U210[J][I] = 0;
                            l_U210[g_U928[I]._fU4][I] = 0;
                             /* P_SET_STARTING_WEAPON */ sub_4913( I, J );
                        }
                    }
                }
            }
        }
    }
    for ( I = 0; I <= (9 - 1); I++ )
    {
        J = g_U928[I]._fU4;
        l_U210[J][I] = 1;
    }
    return;
}

/* P_SET_RANDOM_STARTING_WEAPON */ void sub_35566(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_RANDOM_INT_IN_RANGE( 0, g_U928[uParam0]._fU0 );
    g_U928[uParam0]._fU4 = uVar3;
    return;
}

/* P_HANDLE_MISSION_FLOW */ void sub_36025()
{
    if (g_U3437[2])
    {
        if (NOT g_U819[1]._fU36)
        {
             /* WRITESCRIPTLOG */ sub_1719( "RJM", "Player has triggered the Apartment script load", " " );
            g_U819[1]._fU36 = 1;
        }
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_36172( ref g_U2608, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_1719( "RJM", "Player has triggered the Rooftop script load", " " );
        g_U819[2]._fU36 = 1;
    }
    if (g_U3437[7])
    {
        if (NOT g_U819[7]._fU36)
        {
             /* WRITESCRIPTLOG */ sub_1719( "RJM", "Player has triggered the Chopshop script load", " " );
            g_U819[7]._fU36 = 1;
        }
    }
    if (g_U3437[10] == 1)
    {
         /* WRITESCRIPTLOG */ sub_1719( "RJM", "Player has triggered the mission end.", " " );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_36172(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_36248(  /* PLAYER_PED_ID */ sub_6118(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* F_ISPEDINTRIGGERBOX */ int sub_36248(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_HANDLE_CHECKPOINT_THREADS */ void sub_36639(unknown uParam0, int iParam1)
{
    int J;
    int I;
    int iVar6;

    for ( J = 0; J <= (iParam1 - 1); J++ )
    {
        if (((uParam0^)[J]._fU40 == 0) AND ((uParam0^)[J]._fU36 == 1))
        {
            DISPLAYF( "[SP]### Loading a new script thread: {} ###", 1, 1281, ref (uParam0^)[J]._fU0 );
            (uParam0^)[J]._fU40 = 1;
        }
        if ((uParam0^)[J]._fU40 == 0)
        {
            ;
        }
        else if ((uParam0^)[J]._fU40 == 1)
        {
            DISPLAYF( "[SP]### Script: {} threadState = TS_REQUESTED ###", 1, 1281, ref (uParam0^)[J]._fU0 );
            iVar6 = 0;
            for ( I = 0; I <= (iParam1 - 1); I++ )
            {
                if (((uParam0^)[I]._fU40 < 4) AND ((uParam0^)[I]._fU40 > 0))
                {
                    if ((IS_THREAD_ACTIVE( (uParam0^)[I]._fU32 )) == 1)
                    {
                        iVar6++;
                    }
                }
            }
            if (iVar6 < 2)
            {
                if ((DOES_SCRIPT_EXIST( ref (uParam0^)[J]._fU0 )) == 1)
                {
                    if ((HAS_SCRIPT_LOADED( ref (uParam0^)[J]._fU0 )) == 0)
                    {
                        REQUEST_SCRIPT( ref (uParam0^)[J]._fU0 );
                        "[doubled result, dropped if not asigned]";
                    }
                    (uParam0^)[J]._fU40 = 2;
                }
                else
                {
                    SCRIPT_ASSERT( "[SP] Error: Trying to load a script that doesn't exist!", 0 );
                    (uParam0^)[J]._fU40 = 0;
                }
            }
            else
            {
                SCRIPT_ASSERT( "[SP] Error: Attempting to start another thread when 2 are already running...", 0 );
            }
        }
        else if ((uParam0^)[J]._fU40 == 2)
        {
            DISPLAYF( "[SP]### Script: {} threadState = TS_LOADING ###", 1, 1281, ref (uParam0^)[J]._fU0 );
            if ((HAS_SCRIPT_LOADED( ref (uParam0^)[J]._fU0 )) == 1)
            {
                DISPLAYF( "[SP]### Starting new script thread: {} ###", 1, 1281, ref (uParam0^)[J]._fU0 );
                (uParam0^)[J]._fU32 = START_NEW_SCRIPT( ref (uParam0^)[J]._fU0, (uParam0^)[J]._fU44 );
                (uParam0^)[J]._fU40 = 3;
            }
        }
        else if ((uParam0^)[J]._fU40 == 3)
        {
            if ((IS_THREAD_ACTIVE( (uParam0^)[J]._fU32 )) == 0)
            {
                DISPLAYF( "[SP]### Script: {} was running but is no longer active ###", 1, 1281, ref (uParam0^)[J]._fU0 );
                (uParam0^)[J]._fU40 = 4;
            }
        }
        else if ((uParam0^)[J]._fU40 == 4)
        {
            ;
        };;;;;
    }
    return;
}

/* DISPLAYPLACEHOLDERMIDSCENEMESSAGE */ void sub_37673()
{
    if (g_U3585 == 1)
    {
        PRINT_STRING_WITH_LITERAL_STRING( "STRING", ref g_U3577, 1, 1 );
        DRAW_RECT( 0.50000000, 0.50000000, 1, 1, 0, 0, 0, 255 );
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
            DRAW_RECT( 0.50000000, 0.50000000, 1, 1, 0, 0, 0, 255 );
        }
    }
    return;
}


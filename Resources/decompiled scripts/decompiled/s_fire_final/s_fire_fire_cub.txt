void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U429 = 0;
    l_U430 = 0;
    l_U431 = 0;
    l_U432 = 0;
    l_U433 = 0;
    l_U434 = 0;
    l_U435 = {0, 0, 0};
    l_U438 = {0, 0, 0};
    l_U441 = 1.00000000;
    l_U442 = 0.00000000;
    l_U443 = -1;
    l_U445 = 0;
    l_U446 = 0;
    l_U447 = 1500;
    l_U457 = 0;
    l_U458 = 0;
    StrCopy( ref l_U769, "LEVEL_S_OFFICE_INJ", 32 );
    StrCopy( ref l_U777, "DAM_KO", 32 );
    StrCopy( ref l_U785, "LEVEL_S_OFFICE_FIRE_ATRIUM", 32 );
    StrCopy( ref l_U793, "LEVEL_S_OFFICE_CORPSE", 32 );
    StrCopy( ref l_U801, "MID_13_OFFICE_CONCAT", 32 );
    StrCopy( ref l_U809, "SCRIPT_MISSION\S_OFFICE_POST_FIRE_1", 64 );
    StrCopy( ref l_U825, "SCRIPT_MISSION\S_OFFICE_CUBICLE_FIRE_EVENTS", 64 );
    l_U958 = -1;
    l_U959 = -1;
    l_U960 = -1;
    l_U961 = -1;
    l_U966 = 1;
    l_U974 = 29.99174000;
    l_U975 = -16.42861000;
    l_U1077 = 0;
    l_U1080 = 0;
    l_U1081 = 0.67500000;
    l_U1091 = 3000;
    l_U1190 = 0;
    sub_689( "SA", "Script s_fire_Fire_Cub.sc is starting...", 0 );
    l_U457 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_757();
        if (l_U458 == 0)
        {
            sub_9852();
        }
        WAIT( 0 );
    }
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_fire_Fire_Cub" );
    sub_689( "SA", "Script s_fire_Fire_Cub.sc is terminating...", 0 );
    return;
}

void sub_689(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_757()
{
    if (g_U665 == 2)
    {
        switch (l_U458)
        {
            case 0:
            if (sub_839())
            {
                l_U458 = 3;
            }
            if ((IS_PED_DEAD( sub_1111() )) == 1)
            {
                l_U458 = 1;
                sub_689( "SA", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            if (g_U1583)
            {
                if (sub_1423())
                {
                    AUDIO_MUSIC_SUSPEND( 5000 );
                    l_U458 = 1;
                }
            }
            if (l_U967)
            {
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U458 = 1;
            }
            if (l_U1078)
            {
                AUDIO_MUSIC_SUSPEND( 5000 );
                sub_1873( ref g_U1574, 1000, 1, 0 );
                sub_2009( ref g_U1574 );
                l_U458 = 1;
            }
            break;
            case 1:
            if ((NOT (IS_CAM_ACTIVE( g_U743 ))) AND (l_U1078))
            {
                if (sub_1437( ref g_U1574 ))
                {
                    g_U743 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
                    SETUP_BULLET_CAMERA_SCENE( g_U743, "MISS_DEATH_FALL_01A", 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
                    SET_CAM_ACTIVE( g_U743, 1 );
                }
            }
            if (sub_2356( 0 ))
            {
                l_U458 = 2;
                sub_689( "SA", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
            }
            break;
            case 2:
            if ((NOT IS_BULLET_CAMERA_ACTIVE()) AND ((NOT (IS_PED_DEAD( sub_1111() ))) AND (NOT IS_LAST_MAN_STANDING_ACTIVE())))
            {
                DO_SCREEN_FADE_OUT( 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( sub_1111(), 0 );
                AUDIO_MUSIC_SUSPEND( 500 );
                sub_3413( 0 );
                sub_3506( 0 );
                CAMERA_ANIMATED_STOP( 0, 0 );
                DESTROY_ALL_CAMS();
                RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
                SET_CAM_VIEW_MODE( 1 );
                l_U458 = 3;
                sub_689( "SA", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_689( "SA", "eFailState = FAIL_CLEANUP_ALL", 0 );
            DO_SCREEN_FADE_OUT( 0 );
            if (g_U1605 == 2)
            {
                sub_3753( 3 );
            }
            sub_4150();
            sub_4368();
            sub_4498();
            l_U458 = 4;
            sub_689( "SA", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_689( "SA", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U460._fU0)
            {
                sub_5636( ref l_U460, sub_1111() );
            }
            l_U458 = 5;
            sub_689( "SA", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_689( "SA", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U457 = 1;
            l_U458 = 0;
            sub_689( "SA", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_839()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1111() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1111(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1133(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1133(), 1 );
            if ((IS_PED_VISIBLE( sub_1111() )) == 0)
            {
                SET_PED_VISIBLE( sub_1111(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

int sub_1111()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1133() );
    }
    return 0;
}

void sub_1133()
{
    return GET_PLAYER_ID();
}

int sub_1423()
{
    if (sub_1437( ref g_U1556 ))
    {
        g_U743 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
        SETUP_BULLET_CAMERA_SCENE( g_U743, "MISS_DEATH_FALL_01A", 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
        SET_CAM_ACTIVE( g_U743, 1 );
        return 1;
    }
    return 0;
}

int sub_1437(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_1873(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2009(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_2356(int iParam0)
{
    iParam0 = 1;
    switch (l_U446)
    {
        case 0:
        if (NOT (sub_2417( ref l_U448 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1111() )))
            {
                l_U447 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1873( ref l_U448, l_U447, 1, 1 );
            sub_2009( ref l_U448 );
        }
        if (sub_1437( ref l_U448 ))
        {
            sub_689( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1111() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1133() )))
            {
                SET_PLAYER_CONTROL( sub_1133(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U446 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U446 = 2;
            }
            else
            {
                l_U446 = 3;
            }
        }
        break;
        case 2:
        sub_689( "NS", "Player will QUIT", 0 );
        sub_2876();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_689( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2876();
        return 1;
        break;
    }
    return 0;
}

int sub_2417(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_2876()
{
    sub_689( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2926( ref l_U448 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1133() )))
    {
        SET_PLAYER_CONTROL( sub_1133(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U445 = 0;
    l_U445 = l_U445;
    l_U446 = 0;
    return;
}

void sub_2926(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_3413(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_3506(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 3) AND (g_U1[I] >= 1))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

int sub_3753(unknown uParam0)
{
    sub_689( "SA", "P_LOAD_BINK_FIRE", 0 );
    switch (uParam0)
    {
        case 1:
        sub_689( "SA", "BINK_FIRE_LOADING", 0 );
        PRELOAD_MOVIE( 0, "FIRE_TEST2", 1, 0 );
        SET_MOVIE_LOOP( 0, 1 );
        PLAY_MOVIE( 0, 0 );
        g_U1605 = 2;
        return 1;
        break;
        case 2:
        sub_689( "SA", "BINK_FIRE_PLAYING", 0 );
        return 1;
        break;
        case 3:
        sub_689( "SA", "BINK_FIRE_STOPPED", 0 );
        STOP_MOVIE( 0 );
        g_U1605 = 3;
        return 1;
        break;
        case 4:
        sub_689( "SA", "BINK_FIRE_RESTART", 0 );
        PLAY_MOVIE( 0, 0 );
        g_U1605 = 2;
        return 1;
        break;
        case 5:
        sub_689( "SA", "BINK_FIRE_RELEASE", 0 );
        STOP_MOVIE( 0 );
        RELEASE_MOVIE( 0 );
        g_U1605 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_4150()
{
    sub_689( "NS", "P_CLEAN_UP_KILL_MAX_FROM_SMOKE_INHALE()", 0 );
    sub_2926( ref g_U1556 );
    sub_2926( ref g_U1574 );
    sub_4235( ref g_U743 );
    g_U1583 = 0;
    CLEAR_TIMECYCLE_MODIFIER_OVERRIDE( 0 );
    DEACTIVATE_SPECIAL_FX_MODIFIER( "LAST_MAN_STANDING_DEATH" );
    return;
}

void sub_4235(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_4368()
{
    sub_689( "SA", "P_STOP_COUGHING_TIMER", "###" );
    g_U1585 = 0;
    g_U1587 = 0;
    l_U267 = 0;
    l_U266 = 3;
    l_U268 = 0;
    DEACTIVATE_SPECIAL_FX_MODIFIER( "FIRE_COUGH" );
    STOP_SOUND( g_U1598, 0 );
    sub_2926( ref g_U1538 );
    return;
}

void sub_4498()
{
    sub_689( "SA", "P_CLEANUP", 0 );
    RELEASE_SCRIPT_AUDIO_BANK();
    CLEAR_NAMED_CUTSCENE( ref l_U801 );
    CLEAR_TIMECYCLE_MODIFIER_OVERRIDE( 0 );
    CLEAR_TIMECYCLE_MODIFIER();
    CAMERA_USE_HANDY_CAM( 0, 0.00000000, 1 );
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    DESTROY_ALL_CAMS();
    STOP_SCRIPT_STREAM( 0 );
    STOP_SOUND( l_U958, 0 );
    STOP_SOUND( l_U959, 0 );
    RELEASE_NAMED_SCRIPT_AUDIO_BANK( ref l_U825 );
    ISEQ_UNREGISTER_ENTITY( 562579323, "enemy" );
    sub_4669( 562579323, 1 );
    ISEQ_UNREGISTER_ENTITY( 408543259, "player" );
    ISEQ_UNREGISTER_ENTITY( 408543259, "enemy" );
    sub_4669( 408543259, 1 );
    ISEQ_UNREGISTER_ENTITY( -2122387578, "PLAYER" );
    sub_4669( -2122387578, 1 );
    sub_2926( ref l_U859 );
    sub_2926( ref l_U868 );
    sub_2926( ref l_U877 );
    sub_2926( ref l_U886 );
    sub_2926( ref l_U895 );
    sub_2926( ref l_U904 );
    sub_2926( ref l_U850 );
    sub_2926( ref l_U913 );
    sub_2926( ref l_U1092 );
    sub_2926( ref l_U1101 );
    sub_2926( ref l_U1082 );
    sub_2926( ref l_U922 );
    sub_2926( ref l_U931 );
    sub_2926( ref l_U841 );
    sub_2926( ref l_U940 );
    sub_2926( ref l_U949 );
    sub_5100( ref l_U1158 );
    sub_5134( l_U1162 );
    sub_5134( l_U1176 );
    sub_5252( l_U1110 );
    sub_5252( l_U1111 );
    sub_5252( l_U1112 );
    sub_5252( l_U1113 );
    sub_5252( l_U1114 );
    sub_5252( l_U1115 );
    sub_5252( l_U1116 );
    sub_5252( l_U1117 );
    sub_5362();
    return;
}

void sub_4669(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_5100(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_5134( (uParam0^)[I] );
    }
    return;
}

void sub_5134(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_5252(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_5362()
{
    sub_689( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_689( "CCB", "Stopping the Office_Fire_Cubicles context...", 0 );
    END_CONTEXT( "Office_Fire_Cubicles" );
    return;
}

void sub_5636(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_689( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_5820( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_6897( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_7189( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_7549( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_7189( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_7549( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_7189( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_7549( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_7834( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_7549( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_7834( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_7549( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_8327( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_8488( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1111(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_689( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_5820(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_5852( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_5852(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_6897(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_7189(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_7505( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_7505(unknown uParam0)
{
    return;
}

void sub_7549(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_7834(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_7505( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_8327(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_8488(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_5852( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_8560( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_8560(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_9852()
{
    sub_9862();
    switch (l_U457)
    {
        case 0:
        sub_689( "SA", "eCheckpointState = CHECKPOINT_IDLE", 0 );
        break;
        case 1:
        sub_689( "SA", "eCheckpointState = CHECKPOINT_INIT_SCRIPT_DATA", 0 );
        if (g_U1605 == 0)
        {
            sub_3753( 1 );
        }
        else if (g_U1605 == 3)
        {
            sub_3753( 4 );
        }
        sub_10715();
        sub_14242();
        if (g_U665 == 2)
        {
            SET_CAM_VIEW_MODE( 1 );
            SET_CAMERA_OVERRIDE( "S_OFFICE_FIRE_DISARM", "", 0, 1, 1 );
        }
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
        FREEZE_TIME_OF_DAY( 18, 0 );
        sub_16877( "SOFFAUD" );
        l_U457 = 2;
        break;
        case 2:
        sub_689( "SA", "eCheckpointState = CHECKPOINT_INIT_REQUEST_ASSETS_PT1", 0 );
        sub_17067();
        l_U457 = 3;
        sub_689( "SA", "eCheckpointState = CHECKPOINT_INIT_REQUEST_ASSETS_PT2", 0 );
        break;
        case 3:
        if ((g_U665 == 2) || (sub_17966( l_U727 )))
        {
            sub_18055();
            l_U457 = 4;
            sub_689( "SA", "eCheckpointState = CHECKPOINT_INIT_REQUEST_ASSETS_PT3", 0 );
        }
        break;
        case 4:
        if ((g_U665 == 2) || (sub_17966( l_U748 )))
        {
            sub_18297();
            l_U457 = 5;
        }
        break;
        case 5:
        sub_689( "SA", "eCheckpointState = CHECKPOINT_LOAD_ASSETS", 0 );
        if (sub_18612())
        {
            if (g_U665 == 2)
            {
                l_U457 = 7;
            }
            else
            {
                l_U457 = 6;
                sub_689( "SA", "eCheckpointState = CHECKPOINT_WAITING_TO_START", 0 );
            }
        }
        break;
        case 6:
        if (g_U1586)
        {
            l_U457 = 7;
        }
        break;
        case 7:
        sub_689( "SA", "eCheckpointState = CHECKPOINT_SETUP_GAMEPLAY", 0 );
        sub_19438();
        if (g_U665 == 2)
        {
            l_U457 = 10;
        }
        else
        {
            l_U457 = 8;
        }
        break;
        case 8:
        sub_689( "SA", "eCheckpointState = CHECKPOINT_START_CUTSCENE", 0 );
        sub_23154();
        l_U457 = 9;
        sub_689( "SA", "eCheckpointState = CHECKPOINT_HANDLE_CUTSCENE", 0 );
        break;
        case 9:
        if (sub_24034())
        {
            l_U457 = 10;
        }
        else if (NOT l_U968)
        {
            if (GET_CUTSCENE_TIME_MS() > 2000)
            {
                SET_CAMERA_OVERRIDE( "S_OFFICE_FIRE_DISARM", "", 0, 1, 1 );
                l_U968 = 1;
            }
        }
        break;
        case 10:
        sub_689( "SA", "eCheckpointState = CHECKPOINT_START_GAMEPLAY", 0 );
        sub_24312();
        l_U457 = 11;
        break;
        case 11:
        sub_689( "SA", "eCheckpointState = CHECKPOINT_IN_MELEE_MPM", 0 );
        sub_29099();
        if (IS_PED_SHOOTING( sub_1111() ))
        {
            FORCE_RED_RETICULE( 0 );
        }
        if (sub_30226())
        {
            if ((IS_PED_DEAD( sub_1111() )) == 0)
            {
                if (NOT (IS_BULLET_CAMERA_RUNNING( 0 )))
                {
                    FORCE_RED_RETICULE( 0 );
                    CAMERA_USE_HANDY_CAM( 1, 5.00000000, 1 );
                    SET_CAM_VIEW_MODE( 0 );
                    SET_BULLET_CAM_PREF( sub_1111(), "", "", "", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                    SET_PLAYER_CONTROL( sub_1133(), 1, 0 );
                    sub_30412();
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( sub_1111(), 0 );
                    PLAY_IMAGEFX( "FLICKER_VIBRATE_LONG", 4, 1 );
                    if (DOES_PED_EXIST( l_U1176 ))
                    {
                        FREEZE_PED_POSITION( l_U1176, 1 );
                    }
                    l_U457 = 12;
                }
            }
        }
        break;
        case 12:
        sub_30588();
        sub_35472();
        sub_36028();
        sub_38130();
        sub_38389();
        sub_38472();
        sub_39465();
        sub_39799();
        if (sub_35487( ref l_U496, 0 ))
        {
            l_U457 = 13;
        }
        if (g_U665 == 2)
        {
            sub_40024();
        }
        break;
        case 13:
        sub_689( "SA", "eCheckpointState = CHECKPOINT_FINISHED", 0 );
        sub_4498();
        sub_43653();
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        break;
    }
    return;
}

void sub_9862()
{
    switch (l_U1191)
    {
        case 0:
        sub_689( "CCB", "eFastestGuns - STATE_CHALLENGE_IDLE", 0 );
        l_U1191 = 1;
        break;
        case 1:
        if (l_U457 >= 10)
        {
            if (sub_9985( ref l_U1158 ))
            {
                sub_689( "CCB", "One of the piAtrEnemies peds is shooting...", 0 );
                sub_689( "CCB", "eFastestGuns - STATE_CHALLENGE_COMPLETE", 0 );
                l_U1191 = 2;
            }
            else if ((sub_10206( ref l_U1158 )) == 0)
            {
                sub_689( "CCB", "The player killed all the enemies...", 0 );
                SCRIPT_VAR_HASH_SET_INT( 1137667574, 1 );
                sub_689( "CCB", "eFastestGuns - STATE_CHALLENGE_COMPLETE", 0 );
                l_U1191 = 2;
            }
        }
        break;
        case 2: break;
    }
    return;
}

int sub_9985(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            if (IS_PED_SHOOTING( (uParam0^)[I] ))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_10206(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_10715()
{
    sub_689( "SA", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U459 = 0;
    l_U962 = 0;
    l_U963 = 0;
    l_U964 = 0;
    l_U1190 = 0;
    l_U1080 = 0;
    l_U1077 = 0;
    l_U965 = 0;
    g_U1604 = 0;
    l_U967 = 0;
    l_U1078 = 0;
    l_U968 = 0;
    l_U1079 = 0;
    sub_1873( ref l_U1101, 1700, 1, 0 );
    l_U1101._fU32 = 1;
    sub_1873( ref l_U1092, 100, 1, 0 );
    sub_1873( ref l_U850, 0, 1, 0 );
    sub_1873( ref l_U859, 2500, 1, 0 );
    sub_1873( ref l_U868, 500, 1, 0 );
    sub_1873( ref l_U877, 1500, 1, 0 );
    sub_1873( ref l_U886, 500, 1, 0 );
    sub_1873( ref l_U895, 1500, 1, 0 );
    sub_1873( ref l_U904, 1200, 1, 0 );
    sub_1873( ref l_U913, 1500, 1, 0 );
    sub_1873( ref l_U841, 750, 1, 0 );
    sub_1873( ref l_U922, 200, 1, 0 );
    sub_1873( ref l_U949, 900, 1, 0 );
    sub_1873( ref l_U1082, l_U1091, 1, 0 );
    l_U1082._fU32 = 1;
    sub_1873( ref l_U940, 3000, 1, 0 );
    l_U940._fU32 = 1;
    sub_11080();
    if (g_U665 == 2)
    {
        sub_11490();
    }
    sub_12389();
    return;
}

void sub_11080()
{
    sub_689( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1191 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1137667574 )))
    {
        sub_689( "CCB", "Creating the FastestGuns script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1137667574 );
        if (SCRIPT_VAR_HASH_EXISTS( 1137667574 ))
        {
            sub_689( "CCB", "The FastestGuns script variable was successfully created...", 0 );
        }
        else
        {
            sub_689( "CCB", "The FastestGuns script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_689( "CCB", "The FastestGuns script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1137667574, 0 );
    }
    return;
}

void sub_11490()
{
    sub_689( "SA", "P_INIT_COUGHING_LOGIC", "###" );
    g_U1585 = 0;
    g_U1587 = 1;
    g_U1598 = GET_SOUND_ID();
    l_U267 = 0;
    l_U266 = 0;
    l_U268 = 0;
    sub_11647( ref g_U1340, "InFirAtr00", -978.00000000, 32.34000000, -2.50000000, 15.00000000, 30.00000000, 19.80000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref g_U1361, "InFirAtr01", -988.78000000, 23.59000000, -2.50000000, 15.00000000, 13.00000000, 19.80000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref g_U1382, "InFireCub00", -991.71000000, 37.54000000, -2.50000000, 14.00000000, 15.00000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref g_U1403, "InFireCub01", -1010.48000000, 32.34000000, -2.50000000, 28.00000000, 30.00000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref g_U1424, "InFireCub02", -1028.92000000, 30.17000000, -2.50000000, 10.00000000, 7.00000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref g_U1445, "InFireBrd00", -1031.12000000, 15.25000000, -2.50000000, 14.00000000, 22.50000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref g_U1466, "InFirArc01", -1009.07000000, 5.14000000, -2.50000000, 30.00000000, 24.00000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref g_U1487, "InFirArc00", -1028.87000000, -0.18000000, -2.50000000, 11.00000000, 8.00000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref g_U1508, "InFirRods00", -987.34000000, 3.39000000, -2.50000000, 14.00000000, 28.00000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_2926( ref g_U1547 );
    sub_1873( ref g_U1547, g_U1597, 1, 0 );
    sub_2926( ref g_U1529 );
    sub_1873( ref g_U1529, g_U1599, 1, 0 );
    sub_2926( ref g_U1538 );
    sub_1873( ref g_U1538, GET_RANDOM_INT_IN_RANGE( g_U1601, g_U1602 ), 1, 0 );
    return;
}

void sub_11647(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_12389()
{
    l_U39[0] = {-975.81300000, 24.29370000, 0.20000000};
    l_U39[1] = {-976.55800000, 22.32690000, 0.20000000};
    l_U39[2] = {-977.87300000, 20.86910000, 0.20000000};
    l_U39[3] = {-986.78000000, 23.85550000, 0.20000000};
    l_U39[4] = {-986.77100000, 25.82820000, 0.20000000};
    l_U39[5] = {-986.86200000, 27.80760000, 0.20000000};
    l_U39[6] = {-978.74000000, 33.56000000, 0.20000000};
    l_U39[7] = {-975.94700000, 33.13140000, 0.20000000};
    l_U39[8] = {-973.73800000, 30.97250000, 0.20000000};
    l_U39[9] = {-975.79000000, 26.29060000, 0.20000000};
    l_U39[10] = {-979.32800000, 19.46870000, 0.20000000};
    l_U39[11] = {-976.15100000, 28.33880000, 0.20000000};
    l_U39[12] = {-986.57800000, 18.69000000, 0.20000000};
    l_U39[13] = {-985.88000000, 21.00350000, 0.20000000};
    l_U82[0] = {-1001.50000000, 22.94000000, 4.90000000};
    l_U82[1] = {-1005.94000000, 26.53000000, 5.27000000};
    l_U82[2] = {-1001.13000000, 22.81000000, 4.90000000};
    l_U82[3] = {-997.86000000, 18.44390000, 4.90000000};
    l_U82[4] = {-1008.24000000, 22.64000000, 5.23000000};
    l_U82[5] = {-1011.02000000, 30.78660000, 5.23000000};
    l_U82[6] = {-1001.09000000, 27.87930000, 4.90000000};
    l_U82[7] = {-1002.04000000, 22.75000000, 4.90000000};
    l_U82[8] = {-996.57700000, 24.18540000, 4.90000000};
    l_U82[9] = {-996.96300000, 26.56050000, 4.90000000};
    l_U82[10] = {-1000.70000000, 37.59880000, 5.06841000};
    l_U82[11] = {-998.59600000, 37.62690000, 5.06841000};
    l_U82[12] = {-987.43300000, 30.83000000, 2.24344000};
    l_U82[13] = {-987.43700000, 32.53640000, 2.24185000};
    l_U82[14] = {-987.41700000, 34.50890000, 2.24185000};
    l_U82[15] = {-987.39700000, 36.57120000, 2.24185000};
    l_U82[16] = {-988.29700000, 38.13670000, 2.24344000};
    l_U82[17] = {-990.87400000, 38.24230000, 2.24344000};
    l_U82[19] = {-1008.28000000, 22.71000000, 5.23000000};
    l_U82[20] = {-1011.42000000, 20.05670000, 5.23000000};
    l_U82[21] = {-1000.78000000, 29.16000000, 4.90000000};
    l_U82[22] = {-996.20800000, 38.47680000, 5.06841000};
    l_U82[23] = {-1006.67000000, 26.33000000, 8.91000000};
    l_U82[24] = {-1013.05000000, 24.90050000, 5.23000000};
    l_U82[25] = {-1009.73000000, 29.52650000, 5.23000000};
    l_U82[26] = {-1012.81000000, 22.84860000, 5.23000000};
    l_U82[27] = {-1001.05000000, 30.78970000, 4.90000000};
    l_U82[28] = {-1001.75000000, 37.02490000, 5.06841000};
    l_U82[29] = {-1003.65000000, 18.17000000, 5.12000000};
    l_U82[30] = {-1008.37000000, 22.79000000, 5.23000000};
    l_U82[31] = {-1008.87000000, 27.82960000, 5.23000000};
    l_U82[32] = {-1009.37000000, 18.15310000, 5.12000000};
    l_U182[0] = {-1028.76000000, 10.36350000, 5.12000000};
    l_U182[1] = {-1033.35000000, 17.81970000, 5.12000000};
    l_U182[2] = {-1028.18000000, 21.06960000, 5.12000000};
    l_U182[3] = {-1028.89000000, 23.32580000, 5.12000000};
    l_U182[4] = {-1028.18000000, 25.39780000, 5.12000000};
    l_U182[5] = {-1033.35000000, 19.14410000, 5.12000000};
    l_U182[6] = {-1033.18000000, 12.51890000, 5.12000000};
    l_U182[7] = {-1034.57000000, 23.21270000, 5.12000000};
    l_U182[8] = {-1035.38000000, 25.88970000, 5.12000000};
    l_U182[9] = {-1034.96000000, 24.39860000, 5.12000000};
    l_U182[10] = {-1033.35000000, 13.93000000, 5.12000000};
    l_U182[11] = {-1028.45000000, 8.15473000, 5.12000000};
    l_U182[12] = {-1027.82000000, 4.90000000, 5.27000000};
    l_U182[13] = {-1032.84000000, 7.41310000, 5.12000000};
    l_U182[14] = {-1032.83000000, 5.65683000, 5.12000000};
    l_U182[15] = {-1028.15000000, 6.52000000, 5.27000000};
    l_U231[0] = {-1002.87000000, 3.46000000, 5.11000000};
    l_U231[1] = {-1000.20000000, 8.51000000, 5.11000000};
    l_U231[2] = {-998.83000000, 7.76000000, 5.27000000};
    l_U231[3] = {-1013.62000000, 3.49000000, 5.11000000};
    l_U231[4] = {-1017.99000000, 3.50199000, 5.11000000};
    l_U231[5] = {-1021.71000000, 4.45000000, 5.11000000};
    l_U231[6] = {-1020.13000000, 4.54000000, 5.11000000};
    l_U231[7] = {-1023.06000000, 4.79000000, 5.11000000};
    l_U256[0] = {-988.29200000, 5.26253000, 5.11000000};
    l_U256[1] = {-988.22500000, 7.23000000, 5.11000000};
    l_U256[2] = {-988.34100000, 9.27425000, 5.11000000};
    return;
}

void sub_14242()
{
    sub_689( "SA", "P_INIT_GAMEPLAY_STRUCTS", 0 );
    sub_14324( ref l_U1163, -1005.71000000, 22.86000000, 4.93000000, 36.04300000, 407429255, 7, 3, 2, 0, 0 );
    sub_14324( ref l_U1177, -998.46000000, 24.42000000, 4.99000000, 180.00000000, -761097041, 7, 3, 2, 0, 0 );
    sub_14324( ref l_U1118[0], -998.21200000, 30.90600000, 4.93000000, -2.50000000, -1192264476, 7, 3, 2, 0, 0 );
    sub_14324( ref l_U1118[1], -1009.40000000, 20.01000000, 4.93000000, -100.00000000, 2098181664, 7, 3, 2, 0, 0 );
    sub_14324( ref l_U1118[2], -1014.59000000, 28.30000000, 4.93000000, -101.50000000, -493273423, 7, 3, 2, 0, 0 );
    sub_11647( ref l_U496, "tbKillFireCubScript", -1031.13000000, 20.85000000, 4.91000000, 5.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref l_U559, "tbKillMax", -1017.54000000, 32.50000000, -0.30000000, 20.00000000, 20.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref l_U517, "tbCubDebris", -998.30000000, 29.59000000, 3.61000000, 3.00000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref l_U538, "tbCubFireball", -1001.06000000, 24.80000000, 3.61000000, 8.00000000, 8.00000000, 5.00000000, 0.00000000, 0.00000000, 0.46000000, 1 );
    sub_11647( ref l_U580, "tbSprinklers", -1018.50000000, 27.99000000, 3.61000000, 3.00000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref l_U601, "tbTriggerWave2Enemies", -1001.52000000, 21.35000000, 4.27000000, 9.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref l_U622, "tbTriggerWave3Enemies1", -1010.77000000, 26.98000000, 4.27000000, 4.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, -62.82000000, 1 );
    sub_11647( ref l_U643, "tbTriggerWave3Enemies2", -1010.77000000, 26.98000000, 4.27000000, 4.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, -62.82000000, 1 );
    sub_11647( ref l_U622, "tbTriggerWave3Enemies1", -1009.51000000, 21.00000000, 4.27000000, 4.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 39.77000000, 1 );
    sub_11647( ref l_U664, "tbTriggerExplosionZone", -1012.39000000, 29.51000000, 4.27000000, 5.00000000, 7.00000000, 5.00000000, 0.00000000, 0.00000000, -63.57000000, 1 );
    sub_11647( ref l_U685, "tbForceWalk", -1031.13000000, 28.48000000, 3.61000000, 5.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref l_U706, "tbRedirectEnemies", -1004.81000000, 19.84000000, 3.61000000, 5.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref l_U727, "tbLoadAssetsPt2", -994.59000000, 34.54000000, -0.47000000, 20.00000000, 15.00000000, 15.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11647( ref l_U748, "tbLoadAssetsPt3", -994.18000000, 34.54000000, -0.47000000, 10.00000000, 15.00000000, 15.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15731( ref l_U987, 2, -998.53000000, 25.51000000, 5.34000000, -998.53000000, 25.51000000, 5.34000000, -998.53000000, 25.51000000, 5.34000000, 1.50000000, 2.00000000, 1, 0 );
    sub_16577( ref l_U987, 30, "POI_DEADCS" );
    sub_16738( ref l_U987, 1 );
    return;
}

void sub_14324(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_15731(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_15746( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_16114( iParam0 );
    return;
}

void sub_15746(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_16114(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_16193( iParam0 );
    return;
}

void sub_16193(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_16252( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_16252( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_16252( iParam0, 1 );
            }
            else
            {
                sub_16252( iParam0, 0 );
            };;;
        }
        else
        {
            sub_16252( iParam0, 0 );
        }
    }
    else
    {
        sub_16252( iParam0, 0 );
    }
    return;
}

void sub_16252(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_16577(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_16608( iParam0 );
    return;
}

void sub_16608(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_16738(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_16877(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_16897();
    return;
}

void sub_16897()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_17067()
{
    sub_689( "SA", "P_REQUEST_ASSETS_PT1", 0 );
    if (g_U665 < 2)
    {
        sub_17128( ref l_U801, 0 );
    }
    sub_17382( 1613006336, 0 );
    sub_17382( -569568960, 0 );
    sub_17382( 1188660312, 0 );
    sub_17574( ref l_U809, 0 );
    sub_17574( ref l_U825, 0 );
    sub_17657( -2122387578, 0 );
    sub_17657( 562579323, 0 );
    sub_17657( 408543259, 0 );
    return;
}

void sub_17128(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_17382(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_7505( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_17574(unknown uParam0, int iParam1)
{
    LOAD_SCRIPT_AUDIO_BANK( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_17657(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_17966(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_17984( sub_1111(), uParam0 );
}

int sub_17984(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_18055()
{
    sub_689( "SA", "P_REQUEST_ASSETS_PT2", 0 );
    sub_17382( -994619221, 0 );
    sub_17382( 1589426392, 0 );
    sub_17382( -1335895011, 0 );
    sub_17382( -1152716301, 0 );
    sub_17382( -1929112218, 0 );
    sub_17382( -373633326, 0 );
    sub_17382( -209132946, 0 );
    sub_17382( -969537591, 0 );
    return;
}

void sub_18297()
{
    sub_689( "SA", "P_REQUEST_ASSETS_PT3", 0 );
    sub_18347( ref l_U777, 0, 0 );
    sub_18347( ref l_U769, 0, 0 );
    sub_18347( ref l_U785, 0, 0 );
    sub_18347( ref l_U793, 0, 0 );
    sub_18457( -862236369, 0 );
    sub_18347( "EXPL_CAM", 0, 0 );
    return;
}

void sub_18347(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_18457(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_18612()
{
    if (g_U665 < 2)
    {
        if (CUTSCENE_IS_LOADED( ref l_U801 ))
        {
            sub_689( "SA", "Opening cutscene loaded...", 0 );
        }
        else
        {
            return 0;
        }
    }
    if ((HAS_MODEL_LOADED( -969537591 )) AND ((HAS_MODEL_LOADED( -209132946 )) AND ((HAS_MODEL_LOADED( -373633326 )) AND ((HAS_MODEL_LOADED( -1929112218 )) AND ((HAS_MODEL_LOADED( -1152716301 )) AND ((HAS_MODEL_LOADED( -1335895011 )) AND ((HAS_MODEL_LOADED( 1589426392 )) AND ((HAS_MODEL_LOADED( -994619221 )) AND ((HAS_MODEL_LOADED( 1188660312 )) AND ((HAS_MODEL_LOADED( -569568960 )) AND (HAS_MODEL_LOADED( 1613006336 ))))))))))))
    {
        sub_689( "SA", "Models loaded...", 0 );
    }
    else
    {
        return 0;
    }
    if ((HAS_ANIM_DICT_LOADED( ref l_U793, 0 )) AND ((HAS_ANIM_DICT_LOADED( ref l_U785, 0 )) AND ((HAS_ANIM_DICT_LOADED( ref l_U769, 0 )) AND (HAS_ANIM_DICT_LOADED( ref l_U777, 0 )))))
    {
        sub_689( "SA", "Anim Dicts loaded...", 0 );
    }
    else
    {
        return 0;
    }
    if ((ISEQ_QUERY_STATE( -2122387578, 2 )) AND ((ISEQ_IS_LOADED( -2122387578 )) AND ((ISEQ_QUERY_STATE( 408543259, 2 )) AND ((ISEQ_IS_LOADED( 408543259 )) AND ((ISEQ_QUERY_STATE( 562579323, 2 )) AND (ISEQ_IS_LOADED( 562579323 )))))))
    {
        sub_689( "SA", "ISeq's loaded and ready...", 0 );
    }
    else
    {
        return 0;
    }
    if ((IS_SCRIPT_AUDIO_BANK_LOADED( ref l_U825, 0 )) AND (IS_SCRIPT_AUDIO_BANK_LOADED( ref l_U809, 0 )))
    {
        sub_689( "SA", "Audio Bank's loaded...", 0 );
    }
    else
    {
        return 0;
    }
    if (HAS_WEAPON_LOADED( -862236369 ))
    {
        sub_689( "SA", "Weapon's loaded...", 0 );
    }
    else
    {
        return 0;
    }
    return 1;
}

void sub_19438()
{
    unknown uVar2;
    unknown uVar3;

    sub_689( "SA", "P_SETUP_GAMEPLAY", 0 );
    sub_19507( "S_FIRE_CUBICLE_EXPLOSION", 0, 0 );
    sub_19582();
    sub_20467();
    sub_21299();
    sub_21371();
    sub_21509();
    sub_22123();
    sub_22397( ref l_U460 );
    ENABLE_DUAL_WIELD_IN_INVENTORY( 0 );
    if (g_U665 == 2)
    {
        if (NOT (IS_PED_DEAD( sub_1111() )))
        {
            sub_22633( sub_1111(), g_U751[2], g_U851[2] );
            SET_ROOM_FOR_PED_BY_NAME( sub_1111(), ref g_U1089 );
            if ((IS_PED_DEAD( sub_1111() )) == 0)
            {
                FREEZE_PED_POSITION( sub_1111(), 1 );
            }
            uVar2 = GET_HASH_KEY( ref g_U1129 );
            uVar3 = GET_INTERIOR_FROM_NAME( ref g_U1089, 0 );
            SET_INTERIOR_ACTIVE( uVar3, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar3, uVar2 );
            if ((IS_PED_DEAD( sub_1111() )) == 0)
            {
                FREEZE_PED_POSITION( sub_1111(), 0 );
            }
        }
    }
    if (((IS_PLAYER_DEAD( sub_1133() )) == 0) AND ((IS_PED_DEAD( sub_1111() )) == 0))
    {
        FREEZE_PED_POSITION( sub_1111(), 0 );
        SET_PED_AS_ONE_SHOT_KILL( sub_1111(), 0 );
        SET_PED_PROOFS( sub_1111(), 0, 0, 0, 0, 0 );
        SET_PED_FORCED_TO_WALK( sub_1111(), 0 );
        SET_FOOT_STEP_AUDIO_MOVEMENT( sub_1111(), 0 );
        REMOVE_ALL_PED_WEAPONS( sub_1111() );
        AUDIO_SET_PED_FOOTSTEPS_VOLUME( sub_1111(), g_U1588 );
        SET_PLAYER_CAN_USE_COVER( sub_1133(), 1 );
        SET_PLAYER_CONTROL( sub_1133(), 0, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( sub_1111(), 1 );
    }
    SET_PAYNEKILLER_AMT( 0 );
    SET_ADRENALINE_NOT_ALLOW( 0 );
    SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1133(), 0 );
    if ((sub_22397( ref l_U460 )) == 0)
    {
        SET_PED_HEALTH( sub_1111(), g_U1595, 0 );
    }
    return;
}

void sub_19507(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_19582()
{
    sub_689( "SA", "P_SETUP_DEAD_BODIES", 0 );
    l_U1162 = sub_19629( ref l_U1163 );
    if (NOT (IS_PED_DEAD( l_U1162 )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U1162, ref g_U1129 );
        SET_PED_CORPSE_FROM_ANIM( l_U1162, ref l_U793, "OFFICE_DEATH_POSE_CP01", 1.00000000, 1 );
    }
    l_U1176 = sub_19629( ref l_U1177 );
    if (NOT (IS_PED_DEAD( l_U1176 )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U1176, ref g_U1129 );
        SET_PED_CORPSE_FROM_ANIM( l_U1176, ref l_U793, "OFFICE_DEATH_POSE_IT", 1.00000000, 1 );
    }
    return;
}

void sub_19629(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_17382( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_20108( iParam0->_fU40 );
    sub_20188( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_20108(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_20188(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_20467()
{
    l_U1110 = sub_20507( 1589426392, -1011.22000000, 29.95600000, 4.54300000, 0, 0, 0, 0, 0, 0 );
    l_U1111 = sub_20507( -1335895011, -1011.22000000, 29.95600000, 4.54300000, 0, 0, 0, 0, 0, 0 );
    l_U1112 = sub_20507( -1152716301, -1011.22000000, 29.95600000, 4.54300000, 0, 0, 0, 0, 0, 0 );
    l_U1113 = sub_20507( -1929112218, -1011.22000000, 29.95600000, 4.54300000, 0, 0, 0, 0, 0, 0 );
    l_U1114 = sub_20507( -373633326, -1011.22000000, 29.95600000, 4.54300000, 0, 0, 0, 0, 0, 0 );
    l_U1115 = sub_20507( -209132946, -1011.22000000, 29.95600000, 4.54300000, 0, 0, 0, 0, 0, 0 );
    l_U1116 = sub_20507( -969537591, -1011.22000000, 29.95600000, 4.54300000, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1110 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1110, ref g_U1129 );
        FREEZE_OBJECT_POSITION( l_U1110, 1 );
    }
    if (DOES_OBJECT_EXIST( l_U1111 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1111, ref g_U1129 );
        FREEZE_OBJECT_POSITION( l_U1111, 1 );
    }
    if (DOES_OBJECT_EXIST( l_U1112 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1112, ref g_U1129 );
        FREEZE_OBJECT_POSITION( l_U1112, 1 );
    }
    if (DOES_OBJECT_EXIST( l_U1113 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1113, ref g_U1129 );
        FREEZE_OBJECT_POSITION( l_U1113, 1 );
    }
    if (DOES_OBJECT_EXIST( l_U1114 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1114, ref g_U1129 );
        FREEZE_OBJECT_POSITION( l_U1114, 1 );
    }
    if (DOES_OBJECT_EXIST( l_U1115 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1115, ref g_U1129 );
        FREEZE_OBJECT_POSITION( l_U1115, 1 );
    }
    if (DOES_OBJECT_EXIST( l_U1116 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1116, ref g_U1129 );
        FREEZE_OBJECT_POSITION( l_U1116, 1 );
    }
    return;
}

void sub_20507(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_17382( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_21299()
{
    sub_689( "SA", "P_SETUP_AMB_SNDS", 0 );
    l_U958 = GET_SOUND_ID();
    l_U959 = GET_SOUND_ID();
    return;
}

void sub_21371()
{
    sub_689( "RW", "P_SETUP_FAKE_FLOOR()", 0 );
    l_U1117 = sub_20507( -994619221, -1017.87100000, 34.09800000, 6.62300000, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U1117 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U1117, ref g_U1129 );
        FREEZE_OBJECT_POSITION( l_U1117, 1 );
    }
    return;
}

void sub_21509()
{
    int I;

    sub_689( "SA", "P_SETUP_ATR_ENEMIES", 0 );
    for ( I = 0; I < 3; I++ )
    {
        l_U1158[I] = sub_19629( ref l_U1118[I] );
        if (NOT (IS_PED_DEAD( l_U1158[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1158[I], 1 );
            SET_PED_AI_TEMPLATE( l_U1158[I], "AIT_NORMAL" );
            SET_ROOM_FOR_PED_BY_NAME( l_U1158[I], ref g_U1129 );
            sub_7834( l_U1158[I], -862236369, 25000, 0, 0 );
            if (I == 0)
            {
                SET_PED_COMBAT_RANGE_MAX( l_U1158[I], 2.00000000 );
                SET_PED_COMBAT_MOVEMENT( l_U1158[I], 0 );
            }
            else if (I == 1)
            {
                if (NOT (IS_PED_DEAD( sub_1111() )))
                {
                    TASK_COMBAT_SNAP_TO_COVER( l_U1158[1], "GenCover", "A6034633_EB738302_Corner2", sub_1111() );
                }
                SET_PED_FLAG_LOCK_TO_COVER( l_U1158[1], 1 );
                SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U1158[1], 1 );
            }
            else if (I == 2)
            {
                if (NOT (IS_PED_DEAD( sub_1111() )))
                {
                    TASK_COMBAT_SNAP_TO_COVER( l_U1158[2], "GenCover", "A6034633_6BF903F7_Corner2", sub_1111() );
                }
                SET_PED_FLAG_LOCK_TO_COVER( l_U1158[2], 1 );
                SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U1158[2], 1 );
            };;;
        }
    }
    sub_22021( ref l_U1158, "AtrEnemies_" );
    return;
}

void sub_22021(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_22123()
{
    sub_689( "SA", "P_ENABLE_GRAVITY_WELLS", 0 );
    ENABLE_GRAVITY_WELL( "s_office_fireatrium_gravitywells", "GRAVITY_WELL_EXPLOSION", 0, 0, 0, 0 );
    ENABLE_GRAVITY_WELL( "s_office_fireatrium_gravitywells", "GRAVITY_WELL_EXPLOSION_2", 0, 0, 0, 0 );
    ENABLE_GRAVITY_WELL( "s_office_fireatrium_gravitywells", "GRAVITY_WELL_DISARM_MPM", 0, 0, 0, 0 );
    return;
}

int sub_22397(unknown uParam0)
{
    sub_689( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_5636( uParam0, sub_1111() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_22633(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_23154()
{
    sub_689( "SA", "P_SETUP_MID_13_OFFICE", 0 );
    if (NOT (IS_PED_DEAD( sub_1111() )))
    {
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_1111(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE_ZERO_BLEND" );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_1111(), g_U751[2], g_U851[2] );
    }
    if ((NOT (IS_PED_DEAD( l_U1158[0] ))) AND (DOES_PED_EXIST( l_U1158[0] )))
    {
        SET_PED_VISIBLE( l_U1158[0], 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1158[0], "M_Crac_Sold_Z", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U1158[0], l_U1118[0]._fU0, l_U1118[0]._fU12 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U1158[0], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
    }
    if ((NOT (IS_PED_DEAD( l_U1158[1] ))) AND (DOES_PED_EXIST( l_U1158[1] )))
    {
        SET_PED_VISIBLE( l_U1158[1], 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1158[1], "M_Crac_Sold_Z^1", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U1158[1], -1009.40000000, 20.01000000, 4.93000000, 5.52000000 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U1158[1], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
    }
    if ((NOT (IS_PED_DEAD( l_U1158[2] ))) AND (DOES_PED_EXIST( l_U1158[2] )))
    {
        SET_PED_VISIBLE( l_U1158[2], 1 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1158[2], "M_Crac_Sold_Z^2", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U1158[2], -1014.59000000, 28.30000000, 4.93000000, -101.50000000 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U1158[2], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
    }
    CUTSCENE_OBJECT_OVERRIDE_VISIBILITY( "W_PI_Clt1911_Aa_H" );
    CUTSCENE_OBJECT_OVERRIDE_VISIBILITY( "Offi_Tech_Ded" );
    CUTSCENE_ENABLE_SKIP( 0 );
    START_SEAMLESS_CUTSCENE();
    if (IS_SCREEN_FADED_OUT())
    {
        DO_SCREEN_FADE_IN( 0 );
    }
    return;
}

int sub_24034()
{
    if (HAS_CUTSCENE_FINISHED())
    {
        CLEAR_NAMED_CUTSCENE( ref l_U801 );
        return 1;
    }
    else if ((GET_CUTSCENE_TIME_MS() > 2000) AND (GET_CAM_VIEW_MODE() != 1))
    {
        sub_689( "SA", "Setting view cam mode to medium", 0 );
        SET_CAM_VIEW_MODE( 1 );
    }
    return 0;
}

void sub_24312()
{
    int iVar2;

    sub_689( "SA", "P_START_GAMEPLAY", 0 );
    if (g_U665 == 2)
    {
        if (NOT (IS_PED_DEAD( sub_1111() )))
        {
            PED_ACTION_TREE_PLAY_NODE( sub_1111(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE_ZERO_BLEND" );
        }
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U974, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U975, 1065353216, 0 );
    sub_4368();
    sub_24498();
    SET_PLAYER_CONTROL( sub_1133(), 0, 256 );
    DISPLAY_HUD( 1 );
    ENABLE_DUAL_WIELD_IN_INVENTORY( 0 );
    AUDIO_MUSIC_FORCE_TRACK( "OFFICE_ACTION_SONG_02", "OFFICE_ACTION_2_4", "", 0.00000000, 2000, 15000, -1082130432, 0 );
    DO_SCREEN_FADE_IN( 0 );
    g_U665 = 2;
    if (l_U966)
    {
        sub_689( "SA", "Saving checkpoint", 0 );
        iVar2 = 1;
        if (g_U665 < 2)
        {
            iVar2 = 0;
        }
        sub_25252( ref l_U460, g_U665, sub_1111(), g_U751[2], g_U851[2], g_U885[2], g_U919[2], iVar2 );
        l_U966 = 0;
    }
    sub_2009( ref l_U841 );
    sub_28881();
    return;
}

void sub_24498()
{
    string sVar2;

    sub_689( "SP", "P_TRIGGER_WAVE_1_ENEMIES", 0 );
    sVar2 = "mped_disarm_pstl_03";
    if ((NOT (IS_PED_DEAD( sub_1111() ))) AND ((NOT (IS_PED_DEAD( l_U1158[0] ))) AND (DOES_PED_EXIST( l_U1158[0] ))))
    {
        sub_689( "SP", "Bullet cam setting here", 0 );
        SET_BULLET_CAM_PREF( sub_1111(), sVar2, "mped_disarm_pstl_fs_01", "mped_disarm_pstl_fs_01", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        sub_22633( l_U1158[0], l_U1118[0]._fU0, l_U1118[0]._fU12 );
        ISEQ_REGISTER_ENTITY( 562579323, "enemy", l_U1158[0], 0 );
        ISEQ_START( 562579323 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1158[0], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1158[1] )))
    {
        if (NOT (IS_PED_DEAD( sub_1111() )))
        {
            TASK_COMBAT_SNAP_TO_COVER( l_U1158[1], "GenCover", "A6034633_EB738302_Corner2", sub_1111() );
        }
    }
    if (NOT (IS_PED_DEAD( l_U1158[2] )))
    {
        if (NOT (IS_PED_DEAD( sub_1111() )))
        {
            TASK_COMBAT_SNAP_TO_COVER( l_U1158[2], "GenCover", "A6034633_6BF903F7_Corner2", sub_1111() );
        }
    }
    return;
}

void sub_25252(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_689( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_689( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_8488( iParam1 );
        sub_25511( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_25962( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_25962( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26194( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_25962( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26194( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_26194( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_25962( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26194( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_26194( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_26194( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_25962( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26194( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_26194( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_26194( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_26194( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_27752( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_689( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_25511(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_5852( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_689( "TEH", "Ending context", 0 );
        sub_689( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_25962(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_26194(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_27752(int iParam0)
{
    sub_7505( "CHECKPOINT DATA" );
    sub_27791( iParam0->_fU4 );
    sub_27814( iParam0->_fU16 );
    sub_27814( iParam0->_fU20 );
    sub_27814( iParam0->_fU24 );
    sub_27857( iParam0->_fU28 );
    sub_27857( iParam0->_fU56 );
    sub_27857( iParam0->_fU60 );
    sub_27857( iParam0->_fU64 );
    sub_27857( iParam0->_fU68 );
    sub_27857( iParam0->_fU72 );
    sub_27857( iParam0->_fU76 );
    sub_27857( iParam0->_fU80 );
    sub_27857( iParam0->_fU84 );
    sub_27857( iParam0->_fU88 );
    sub_27857( iParam0->_fU92 );
    sub_27814( iParam0->_fU32 );
    sub_27857( iParam0->_fU36 );
    sub_27857( iParam0->_fU40 );
    sub_27857( iParam0->_fU44 );
    sub_27814( iParam0->_fU136 );
    sub_28062( iParam0->_fU140 );
    sub_27857( iParam0->_fU52 );
    sub_7505( "---nRightHolsterAttachmentEnabled: " );
    sub_27857( iParam0->_fU96 );
    sub_7505( "---nRightHolsterAttachmentToggled: " );
    sub_27857( iParam0->_fU100 );
    sub_7505( "---nLeftHolsterAttachmentEnabled: " );
    sub_27857( iParam0->_fU104 );
    sub_7505( "---nLeftHolsterAttachmentToggled: " );
    sub_27857( iParam0->_fU108 );
    sub_7505( "---nRifleHolsterAttachmentEnabled: " );
    sub_27857( iParam0->_fU112 );
    sub_7505( "---nRifleHolsterAttachmentToggled: " );
    sub_27857( iParam0->_fU116 );
    sub_7505( "---nRightHandAttachmentEnabled: " );
    sub_27857( iParam0->_fU120 );
    sub_7505( "---nRightHandAttachmentToggled: " );
    sub_27857( iParam0->_fU124 );
    sub_7505( "---nLeftHandAttachmentEnabled: " );
    sub_27857( iParam0->_fU128 );
    sub_7505( "---nLeftHandAttachmentToggled: " );
    sub_27857( iParam0->_fU132 );
    sub_27857( l_U1 );
    sub_27857( 144 );
    return;
}

void sub_27791(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_27814(unknown uParam0)
{
    return;
}

void sub_27857(unknown uParam0)
{
    return;
}

void sub_28062(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_28881()
{
    sub_689( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_689( "CCB", "Starting the Office_Fire_Cubicles context...", 0 );
    START_CONTEXT( "Office_Fire_Cubicles" );
    return;
}

void sub_29099()
{
    if (NOT l_U1080)
    {
        if (GET_ADRENALINE_AMT() < 0.10000000)
        {
            SET_ADRENALINE_AMT( 0.10000000 );
        }
        ENABLE_MPM( 1 );
        ENABLE_ALL_ADRENALINE( 0 );
        ACTIVATE_BULLET_TIME( 1, l_U1081, 1 );
        sub_2009( ref l_U1092 );
        l_U1080 = 1;
    }
    if (sub_1437( ref l_U1092 ))
    {
        SET_PLAYER_CONTROL( sub_1133(), 0, 0 );
        REENABLE_PLAYER_INPUT( 4 );
        REENABLE_PLAYER_INPUT( 5 );
        UI_SET( 25, 2, 1537, "SPSlotLoader", 1537, "TUT_OF_DISARM" );
        l_U1073 = PLAY_IMAGEFX( "INTERLACE_DESATURATED_PANEL_02", 3, 0 );
        sub_2009( ref l_U1082 );
        sub_2009( ref l_U940 );
    }
    if (sub_1437( ref l_U940 ))
    {
        UI_SET( 25, 2, 1537, "SPSlotLoader", 257, 1 );
        STOP_IMAGEFX( l_U1073, 0 );
    }
    if (sub_1437( ref l_U1082 ))
    {
        sub_29424();
    }
    if (IS_ANIMATED_CAMERA_PLAYING())
    {
        if (CAMERA_ANIMATED_CURRENT_TIME() >= 2000)
        {
            l_U1078 = 1;
        }
    }
    if (sub_1437( ref l_U949 ))
    {
        sub_689( "SA", "BANG!!!", 0 );
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Blood_ImpactSplash_S", -998.23000000, 32.20000000, 6.50000000, 90, 0, 0, 1.00000000 );
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Blood_ImpactExit_S", -998.20000000, 32.40000000, 6.50000000, 65446, 0, 0, 1.00000000 );
    }
    if (NOT l_U1079)
    {
        if ((IS_PED_IN_MELEE_COMBAT( sub_1111() )) || (IS_PLAYER_DOING_MELEE_GRAPPLE( sub_1133() )))
        {
            sub_2926( ref l_U1082 );
            UI_SET( 25, 2, 1537, "SPSlotLoader", 257, 1 );
            STOP_IMAGEFX( l_U1073, 0 );
            ENABLE_MPM( 0 );
            ENABLE_ALL_ADRENALINE( 1 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
            ENABLE_GRAVITY_WELL( "s_office_fireatrium_gravitywells", "GRAVITY_WELL_DISARM_MPM", 0, 0, 0, 0 );
            sub_2009( ref l_U1101 );
            l_U1079 = 1;
        }
    }
    if (sub_1437( ref l_U1101 ))
    {
        sub_689( "SA", "Pulse", 0 );
        FORCE_RED_RETICULE( 1 );
        SET_CROSSHAIR_PULSE();
    }
    return;
}

void sub_29424()
{
    ISEQ_UNREGISTER_ENTITY( 562579323, "enemy" );
    sub_4669( 562579323, 1 );
    ISEQ_REGISTER_ENTITY( 408543259, "player", sub_1111(), 0 );
    ISEQ_REGISTER_ENTITY( 408543259, "enemy", l_U1158[0], 0 );
    ISEQ_START( 408543259 );
    UI_SET( 25, 2, 1537, "SPSlotLoader", 257, 1 );
    STOP_IMAGEFX( l_U1073, 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1133() )))
    {
        SET_PLAYER_CONTROL( sub_1133(), 0, 256 );
    }
    ENABLE_MPM( 0 );
    ENABLE_ALL_ADRENALINE( 1 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    DISPLAY_HUD( 0 );
    sub_2926( ref l_U1082 );
    sub_2009( ref l_U949 );
    CAMERA_PLAY_ANIMATED( "LEVEL_S_OFFICE_CP_06", "MID_13B_OFFICE_CAM", 0, 0, 0, 0, 0, 0, 0 );
    return;
}

int sub_30226()
{
    unknown uVar2;

    if ((IS_PED_DEAD( sub_1111() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1111(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            return 1;
        }
    }
    return 0;
}

void sub_30412()
{
    sub_689( "SA", "P_RESET_COUGHING_TIMER", "###" );
    g_U1585 = 1;
    g_U1587 = 1;
    l_U267 = 0;
    l_U266 = 3;
    l_U268 = 1;
    return;
}

void sub_30588()
{
    boolean bVar2;

    if ((sub_30602( ref l_U987 )) == 1)
    {
        sub_3413( 0 );
        sub_3506( 0 );
        sub_30869( ref l_U976 );
        sub_30951( 0, sub_1111(), "MAX", ref l_U976, 2, 0 );
        sub_30951( 1, sub_1111(), "MAX", ref l_U976, 2, 0 );
        sub_31193( "EXPLORE_ITEM", ref l_U976, 8, 1 );
    }
    bVar2 = false;
    if ((l_U987._fU0 == 1) AND (g_U1583))
    {
        sub_32001( ref l_U987, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1158[1] )))
    {
        if (NOT (GET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1158[1] )))
        {
            bVar2 = true;
        }
    }
    if (NOT (IS_PED_DEAD( l_U1158[2] )))
    {
        if (NOT (GET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1158[2] )))
        {
            bVar2 = true;
        }
    }
    if ((bVar2) AND (sub_30614( ref l_U987 )))
    {
        sub_32820( ref l_U987, 0 );
    }
    else if ((NOT bVar2) AND (NOT (sub_30614( ref l_U987 ))))
    {
        sub_32820( ref l_U987, 1 );
    }
    if (sub_32913( ref l_U987 ))
    {
        sub_32001( ref l_U987, 1 );
        sub_4368();
        if (NOT (IS_PED_DEAD( sub_1111() )))
        {
            SET_PLAYER_CONTROL( sub_1133(), 0, 0 );
            SET_PED_VISIBLE( sub_1111(), 0 );
        }
        sub_3413( 0 );
        sub_3506( 0 );
        DISPLAY_HUD( 0 );
        sub_689( "kja", "play animated camera pointing at IT guy", 0 );
        CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_25_F_CAM", 1, -1000.06700000, 25.18094000, 6.92169100, 65411, 0, 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "sfire_DeadIT" )))
        {
            if ((GET_RANDOM_FLOAT_IN_RANGE( 0, 1 )) > 0.50000000)
            {
                sub_34900();
            }
            else
            {
                sub_35080();
            }
        }
        sub_2926( ref l_U931 );
        sub_1873( ref l_U931, 6500, 1, 0 );
        sub_2009( ref l_U931 );
    }
    if (sub_1437( ref l_U931 ))
    {
        if (NOT (IS_PED_DEAD( sub_1111() )))
        {
            SET_PLAYER_CONTROL( sub_1133(), 1, 0 );
            SET_PED_VISIBLE( sub_1111(), 1 );
        }
        CAMERA_ANIMATED_STOP( 0, 0 );
        DISPLAY_HUD( 1 );
        ENABLE_DUAL_WIELD_IN_INVENTORY( 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "sfire_DeadIT" )))
        {
            sub_689( "SA", "Found item: sfire_DeadIT", 0 );
            FOUND_EXPLORATION_ITEM( "sfire_DeadIT" );
        }
        sub_30412();
    }
    return;
}

int sub_30602(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_30614( iParam0 )) == 0)))
    {
        if ((sub_30778() == 1) AND (((IS_PED_RELOADING( sub_1111() )) == 0) AND (((IS_PED_GETTING_UP( sub_1111() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_1111() )) == 0) AND (((IS_PED_IN_COVER( sub_1111() )) == 0) AND (((IS_PED_DUCKING( sub_1111() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_30614(int iParam0)
{
    return iParam0->_fU56;
}

int sub_30778()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_30869(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_30951(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_31193(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_31217( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_31217(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_31272( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_31272(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_31307( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_31801( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_31307(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_31801(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_32001(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_16252( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_16252( iParam0, 0 );
        sub_32072( iParam0, 0 );
        if ((IS_PED_DEAD( sub_1111() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_1111() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_1111(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_32072(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_32223( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_32223(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_32284( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_32284( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_32284(int iParam0)
{
    if (((IS_PED_DEAD( sub_1111() )) == 0) AND ((IS_PLAYER_DEAD( sub_1133() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_1111() )) == 1) || (((IS_PED_GETTING_UP( sub_1111() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_1111() )) == 1) || (((IS_PED_IN_COVER( sub_1111() )) == 1) || (((IS_PED_DUCKING( sub_1111() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_1111() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_32820(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_32223( iParam0 );
    return;
}

int sub_32913(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_1111() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1111() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_17984( sub_1111(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_17984( sub_1111(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_32223( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_32284( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_30778() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_32001( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_16252( iParam0, 0 );
                            sub_32072( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_16252( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_1111() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_1111(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_16252( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_32072( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_1111() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_1111(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_1111() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_1111(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_1111() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_1111(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_16252( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_32072( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_1111() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_1111() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_1111() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_1111(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_32072( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

void sub_34900()
{
    sub_689( "SA", "P_PLAY_SOFF_EXPLTM1", 0 );
    if (NOT (IS_PED_DEAD( sub_1111() )))
    {
        if (NOT (IS_SCRIPTED_SPEECH_PLAYING( sub_1111() )))
        {
            sub_3413( 0 );
            sub_30869( ref l_U319 );
            sub_30951( 0, sub_1111(), "MAX", ref l_U319, 2, 0 );
            sub_30951( 1, sub_1111(), "MAX", ref l_U319, 2, 0 );
            sub_31193( "SOFF_EXPLTM1", ref l_U319, 2, 1 );
        }
    }
    return;
}

void sub_35080()
{
    sub_689( "SA", "P_PLAY_SOFF_EXPLTM2", 0 );
    if (NOT (IS_PED_DEAD( sub_1111() )))
    {
        if (NOT (IS_SCRIPTED_SPEECH_PLAYING( sub_1111() )))
        {
            sub_3413( 0 );
            sub_30869( ref l_U329 );
            sub_30951( 0, sub_1111(), "MAX", ref l_U329, 2, 0 );
            sub_30951( 1, sub_1111(), "MAX", ref l_U329, 2, 0 );
            sub_31193( "SOFF_EXPLTM2", ref l_U329, 2, 1 );
        }
    }
    return;
}

void sub_35472()
{
    if (sub_35487( ref l_U601, 0 ))
    {
        sub_35588();
    }
    if (sub_35487( ref l_U706, 0 ))
    {
        PLAY_IMAGEFX( "FLICKER_VIBRATE_INTERLACE_01_L", 4, 1 );
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( "OF_Gas_Pump_Fire_01_S", -1015.96400000, 26.62289000, 6.11881700, 0.00000000, 0.00000000, 0.00000000, 1.00000000 );
    }
    return;
}

void sub_35487(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_17984( sub_1111(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_35588()
{
    sub_689( "SA", "P_TRIGGER_WAVE_2_ENEMIES", 0 );
    if ((NOT (IS_PED_DEAD( sub_1111() ))) AND (NOT (IS_PED_DEAD( l_U1158[1] ))))
    {
        sub_689( "SA", "Setting enemy cover flags _1", 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1158[1], 0 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U1158[1], 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U1158[1], 0 );
    }
    if ((NOT (IS_PED_DEAD( sub_1111() ))) AND (NOT (IS_PED_DEAD( l_U1158[2] ))))
    {
        sub_689( "SA", "Setting enemy cover flags _2", 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1158[2], 0 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U1158[2], 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U1158[2], 0 );
    }
    return;
}

void sub_36028()
{
    switch (l_U459)
    {
        case 0:
        if (sub_35487( ref l_U643, 0 ))
        {
            l_U459 = 1;
        }
        break;
        case 1:
        if ((NOT l_U913._fU16) || (NOT l_U913._fU20))
        {
            sub_2009( ref l_U913 );
        }
        if (sub_1437( ref l_U913 ))
        {
            sub_2926( ref l_U913 );
            l_U459 = 2;
        }
        break;
        case 2:
        if (IS_LAST_MAN_STANDING_ACTIVE())
        {
            l_U965 = 1;
        }
        if (NOT IS_LAST_MAN_STANDING_ACTIVE())
        {
            if (NOT (IS_PED_DEAD( sub_1111() )))
            {
                sub_4368();
                if (NOT l_U965)
                {
                    SET_PLAYER_CONTROL( sub_1133(), 0, 256 );
                    if (NOT (IS_SPHERE_VISIBLE( -1015.20100000, 32.70695000, 6.36140900, 1.00000000, 0 )))
                    {
                        REENABLE_PLAYER_INPUT( 7 );
                        REENABLE_PLAYER_INPUT( 14 );
                        REENABLE_PLAYER_INPUT( 15 );
                        REENABLE_PLAYER_INPUT( 16 );
                        REENABLE_PLAYER_INPUT( 17 );
                    }
                }
                if (NOT l_U965)
                {
                    ISEQ_UNREGISTER_ENTITY( -2122387578, "player" );
                    ISEQ_REGISTER_ENTITY( -2122387578, "player", sub_1111(), 0 );
                    PED_SET_ACTION_INTENTION( sub_1111(), 56, 1000, -1015.71100000, 34.34900000, 4.58800000 );
                    ISEQ_START( -2122387578 );
                }
                sub_2009( ref l_U850 );
            }
            if (sub_1437( ref l_U850 ))
            {
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Of_Rayfire_Explo_01", -1015.71100000, 34.34900000, 4.58800000, 0, 0, 0, 1065353216 );
                ACTIVATE_BULLET_TIME( 0, 0.30000000, 1 );
                sub_2009( ref l_U922 );
                PLAY_SCRIPT_STREAM_FROM_COORD( -1011.22000000, 29.95600000, 4.54300000, 0 );
                TRIGGER_EXPLOSION_AUDIO_MIX_LAYER( "S_FIRE_EXP_CUBICLES", -1011.22000000, 29.95600000, 4.54300000 );
                SHAKE_GAMEPLAY_CAM( "MEDIUM_EXPLOSION_SHAKE", 0.25000000 );
                if (DOES_OBJECT_EXIST( l_U1110 ))
                {
                    PLAY_OBJECT_ANIM( l_U1110, "rf_ofcube_anim01", "of_floor", 0.00000000, 0, 1 );
                }
                if (DOES_OBJECT_EXIST( l_U1111 ))
                {
                    PLAY_OBJECT_ANIM( l_U1111, "rf_ofcube_anim02", "of_floor", 0.00000000, 0, 1 );
                }
                if (DOES_OBJECT_EXIST( l_U1112 ))
                {
                    PLAY_OBJECT_ANIM( l_U1112, "rf_ofcube_anim03", "of_floor", 0.00000000, 0, 1 );
                }
                if (DOES_OBJECT_EXIST( l_U1113 ))
                {
                    PLAY_OBJECT_ANIM( l_U1113, "rf_ofcube_anim04", "of_floor", 0.00000000, 0, 1 );
                }
                if (DOES_OBJECT_EXIST( l_U1114 ))
                {
                    PLAY_OBJECT_ANIM( l_U1114, "rf_ofcube_anim05", "of_floor", 0.00000000, 0, 1 );
                }
                if (DOES_OBJECT_EXIST( l_U1115 ))
                {
                    PLAY_OBJECT_ANIM( l_U1115, "rf_ofcube_anim06", "of_floor", 0.00000000, 0, 1 );
                }
                if (DOES_OBJECT_EXIST( l_U1116 ))
                {
                    PLAY_OBJECT_ANIM( l_U1116, "rf_ofcube_anim07", "of_floor", 0.00000000, 0, 1 );
                }
                if (DOES_OBJECT_EXIST( l_U1110 ))
                {
                    WAKE_RESTING_OBJECTS_AROUND( l_U1110 );
                }
                sub_5252( l_U1117 );
                sub_37152();
                l_U459 = 3;
            }
        }
        break;
        case 3:
        sub_689( "SA", "EXPLODING_COMPLETE", 0 );
        if ((l_U965) || (I_SEQUENCE_QUERY_ENTITY_STATE( "S_OFF_18_EXPL_MED", "player", 6 )))
        {
            SET_PLAYER_CONTROL( sub_1133(), 1, 0 );
            sub_30412();
            sub_37847();
            l_U459 = 4;
        }
        break;
    }
    if (sub_1437( ref l_U922 ))
    {
        DEACTIVATE_BULLET_TIME( 1, 0 );
        PLAY_IMAGEFX( "INTERLACE_GLITCH_FAST_01", 4, 0 );
        PLAY_IMAGEFX( "RELOAD_GLITCH_BORDER", 3, 0 );
    }
    return;
}

void sub_37152()
{
    int I;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    sub_689( "SA", "P_KILL_WAVE_3_ENEMIES", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if (I != 0)
        {
            if (NOT (IS_PED_DEAD( l_U1158[I] )))
            {
                uVar3 = {sub_37249( l_U1158[I] )};
                SET_PED_TO_RAGDOLL_WITH_EXPLOSION( l_U1158[I], 1000, 30000, uVar3 );
                if ((I == 4) || (I == 3))
                {
                    APPLY_UNIFORMLY_DISTRIBUTED_IMPULSE_TO_RAGDOLL( l_U1158[I], uVar3 );
                }
                sub_37653( l_U1158[I] );
            }
        }
    }
    return;
}

void sub_37249(unknown uParam0)
{
    vector vVar3;
    vector vVar6;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    float fVar12;
    vector Result;

    sub_689( "SA", "F_DETERMINE_EXPLOSION_VECTOR", 0 );
    vVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    vVar6 = {-1016.11000000, 32.76000000, 4.36000000};
    fVar12 = 50.00000000;
    Result = {vVar3 - vVar6};
    uVar9._fU0 = ABSF( Result.x );
    uVar9._fU4 = ABSF( Result.y );
    uVar9._fU8 = ABSF( Result.z );
    Result = {Result / (sub_37410( uVar9 ))};
    Result.x *= fVar12;
    Result.y *= fVar12;
    Result.z *= fVar12;
    return Result;
}

vector sub_37410(unknown uParam0, unknown uParam1, unknown uParam2)
{
    float fVar5;

    fVar5 = SQRT( ((uParam0._fU0 * uParam0._fU0) + (uParam0._fU4 * uParam0._fU4)) + (uParam0._fU8 * uParam0._fU8) );
    if (fVar5 > 0.00000000)
    {
        return vector( uParam0._fU0 / fVar5, uParam0._fU4 / fVar5, uParam0._fU8 / fVar5);
        break;
    }
    return vector( 0.00000000, 0.00000000, 0.00000000);
}

void sub_37653(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_37847()
{
    sub_689( "SA", "P_PLAY_SOFF_TFCLPSES", 0 );
    if (NOT (IS_PED_DEAD( sub_1111() )))
    {
        if (NOT (IS_SCRIPTED_SPEECH_PLAYING( sub_1111() )))
        {
            sub_30869( ref l_U339 );
            sub_30951( 0, sub_1111(), "MAX", ref l_U339, 2, 0 );
            sub_30951( 1, sub_1111(), "MAX", ref l_U339, 2, 0 );
            sub_31193( "SOFF_TFCLPSES", ref l_U339, 2, 1 );
        }
    }
    return;
}

void sub_38130()
{
    if (sub_35487( ref l_U559, 0 ))
    {
        g_U743 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
        SETUP_BULLET_CAMERA_SCENE( g_U743, "MISS_DEATH_FALL_01A", 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
        SET_CAM_ACTIVE( g_U743, 1 );
        SET_PLAYER_CONTROL( sub_1133(), 0, 0 );
        sub_4368();
        DISPLAY_HUD( 0 );
        sub_3413( 0 );
        sub_3506( 0 );
        l_U967 = 1;
    }
    return;
}

void sub_38389()
{
    if (NOT (IS_PED_DEAD( sub_1111() )))
    {
        if (sub_17966( l_U685 ))
        {
            SET_PED_FORCED_TO_WALK( sub_1111(), 1 );
        }
        else
        {
            SET_PED_FORCED_TO_WALK( sub_1111(), 0 );
        }
    }
    return;
}

void sub_38472()
{
    if (sub_35487( ref l_U517, 0 ))
    {
        sub_689( "SA", "Triggering Debris in cub", 0 );
        SHAKE_GAMEPLAY_CAM( "MEDIUM_EXPLOSION_SHAKE", 0.25000000 );
        l_U960 = START_PARTICLE_FX_LOOPED_AT_COORD( "OF_DebrisFall_S", -998.48000000, 31.00000000, 10.10000000, 0, 0, 0, 1065353216 );
        l_U961 = START_PARTICLE_FX_LOOPED_AT_COORD( "OF_DebrisFall_S", -999.48000000, 24.00000000, 10.50000000, 0, 0, 0, 1065353216 );
    }
    if (sub_35487( ref l_U538, 0 ))
    {
        sub_689( "SA", "Triggering Fireball in cub", 0 );
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( "OF_FireBall_S", -996.48000000, 18.00000000, 7.00000000, 0.00000000, 0.00000000, 180.00000000, 1 );
    }
    if (sub_35487( ref l_U580, 0 ))
    {
        sub_689( "SA", "Triggering Sprinklers in cub", 0 );
        l_U969 = START_PARTICLE_FX_LOOPED_AT_COORD( "Flu_water_sewageGreen_S", -1032.20800000, 30.09700000, 7.91100000, 0, 0, 0, 1.00000000 );
        l_U970 = START_PARTICLE_FX_LOOPED_AT_COORD( "Flu_water_sewageGreen_S", -1027.15600000, 28.35900000, 7.63600000, 0, 0, 0, 1.00000000 );
        l_U971 = START_PARTICLE_FX_LOOPED_AT_COORD( "Flu_water_sewageGreen_S", -1026.13600000, 27.63600000, 7.90400000, 0, 0, 0, 1.00000000 );
        l_U972 = START_PARTICLE_FX_LOOPED_AT_COORD( "Flu_water_sewageGreen_S", -1033.58500000, 28.35300000, 7.47700000, 0, 0, 0, 1.00000000 );
        sub_2009( ref l_U859 );
    }
    if (sub_1437( ref l_U859 ))
    {
        l_U973 = START_PARTICLE_FX_LOOPED_AT_COORD( "OF_Sprinkler_S", -1032.20800000, 30.09700000, 7.91100000, 0, 0, 0, 1.00000000 );
        sub_2009( ref l_U868 );
    }
    if (sub_1437( ref l_U868 ))
    {
        STOP_PARTICLE_FX_LOOPED( l_U973 );
        sub_2009( ref l_U877 );
    }
    if (sub_1437( ref l_U877 ))
    {
        l_U973 = START_PARTICLE_FX_LOOPED_AT_COORD( "OF_Sprinkler_S", -1032.20800000, 30.09700000, 7.91100000, 0, 0, 0, 1.00000000 );
        sub_2009( ref l_U886 );
    }
    if (sub_1437( ref l_U886 ))
    {
        STOP_PARTICLE_FX_LOOPED( l_U973 );
        sub_2009( ref l_U895 );
    }
    if (sub_1437( ref l_U895 ))
    {
        l_U973 = START_PARTICLE_FX_LOOPED_AT_COORD( "OF_Sprinkler_S", -1032.20800000, 30.09700000, 7.91100000, 0, 0, 0, 1.00000000 );
        sub_2009( ref l_U904 );
    }
    if (sub_1437( ref l_U904 ))
    {
        STOP_PARTICLE_FX_LOOPED( l_U973 );
    }
    return;
}

void sub_39465()
{
    if (NOT l_U963)
    {
        if (NOT (IS_PED_DEAD( l_U1158[1] )))
        {
            if (IS_PED_USING_MP3_COVER_TASK( l_U1158[1] ))
            {
                sub_689( "SA", "Setting piAtrEnemies[1] Target Ped", 0 );
                SET_PED_COVER_TARGET_PED( l_U1158[1], sub_1111() );
                SET_PED_FLAG_LOCK_TO_COVER( l_U1158[1], 1 );
                SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U1158[1], 1 );
                l_U963 = 1;
            }
        }
    }
    if (NOT l_U964)
    {
        if (NOT (IS_PED_DEAD( l_U1158[2] )))
        {
            if (IS_PED_USING_MP3_COVER_TASK( l_U1158[2] ))
            {
                sub_689( "SA", "Setting piAtrEnemies[2] Target Ped", 0 );
                SET_PED_COVER_TARGET_PED( l_U1158[2], sub_1111() );
                SET_PED_FLAG_LOCK_TO_COVER( l_U1158[2], 1 );
                SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U1158[2], 1 );
                l_U964 = 1;
            }
        }
    }
    return;
}

void sub_39799()
{
    if (NOT (IS_PED_DEAD( sub_1111() )))
    {
        if ((NOT g_U1604) AND (IS_PED_IN_COVER( sub_1111() )))
        {
            sub_689( "SA", "Max Entering Cover", 0 );
            CAMERA_USE_HANDY_CAM( 0, 0.00000000, 1 );
            g_U1604 = 1;
        }
        else if ((g_U1604) AND (NOT (IS_PED_IN_COVER( sub_1111() ))))
        {
            sub_689( "SA", "Max Exiting Cover", 0 );
            CAMERA_USE_HANDY_CAM( 1, 5.00000000, 1 );
            g_U1604 = 0;
        }
    }
    return;
}

void sub_40024()
{
    sub_40034();
    sub_40732();
    if (g_U1587)
    {
        sub_41001();
    }
    if ((g_U1584) AND (g_U1585))
    {
        sub_41460();
        sub_41690();
        sub_42539();
    }
    return;
}

void sub_40034()
{
    if (NOT l_U429)
    {
        START_WIDGET_GROUP( "Fire Widget" );
        ADD_WIDGET_BOOL( "Enable/Disable Smoke/Coughing", ref g_U1584 );
        ADD_WIDGET_FLOAT_SLIDER( "Fire react distance", ref g_U1589, 0, 1000000, 1 );
        ADD_WIDGET_INT_SLIDER( "Max's starting health (in Fire Atrium)", ref g_U1594, 0, 1000000, 1 );
        ADD_WIDGET_INT_SLIDER( "Max's dying health (triggers coughing death)", ref g_U1595, 0, 1000000, 1 );
        ADD_WIDGET_INT_SLIDER( "Delay before idle state begins", ref g_U1599, 0, 1000000, 1 );
        ADD_WIDGET_INT_SLIDER( "Time between coughs when idling", ref g_U1600, 0, 1000000, 1 );
        ADD_WIDGET_INT_SLIDER( "The length of each cycle where Max loose a bit of health", ref g_U1597, 0, 1000000, 1 );
        ADD_WIDGET_INT_SLIDER( "How much health Max loose each cycle", ref g_U1596, 0, 1000000, 1 );
        ADD_WIDGET_FLOAT_SLIDER( "Smoke Blend in rate", ref g_U1591, 0, 1, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Smoke Blend out rate", ref g_U1592, 0, 1, 0.01000000 );
        ADD_WIDGET_INT_SLIDER( "Min Time for Max's cough", ref g_U1601, 0, 1000000, 1 );
        ADD_WIDGET_INT_SLIDER( "Max Time for Max's cough", ref g_U1602, 0, 1000000, 1 );
        STOP_WIDGET_GROUP();
        l_U429 = 1;
    }
    return;
}

void sub_40732()
{
    if (sub_40742())
    {
        if (g_U1584)
        {
            sub_689( "SA", "Disabling Oxygen Drain", 0 );
            PRINT_STRING_WITH_LITERAL_STRING( "STRING", "Disabling Oxygen Drain", 2000, 1 );
            g_U1584 = 0;
        }
        else
        {
            sub_689( "SA", "Enabling Oxygen Drain", 0 );
            PRINT_STRING_WITH_LITERAL_STRING( "STRING", "Enabling Oxygen Drain", 2000, 1 );
            g_U1584 = 1;
        }
    }
    return;
}

int sub_40742()
{
    if ((IS_MARKETING_KEYBOARD_KEY_JUST_PRESSED( 49 )) || (IS_KEYBOARD_KEY_JUST_PRESSED( 49 )))
    {
        return 1;
    }
    return 0;
}

void sub_41001()
{
    if ((sub_17984( sub_1111(), g_U1361 )) || (sub_17984( sub_1111(), g_U1340 )))
    {
        sub_41054( ref l_U39, 14 );
    }
    else if ((sub_17984( sub_1111(), g_U1424 )) || ((sub_17984( sub_1111(), g_U1403 )) || (sub_17984( sub_1111(), g_U1382 ))))
    {
        sub_41054( ref l_U82, 33 );
    }
    else if (sub_17984( sub_1111(), g_U1445 ))
    {
        sub_41054( ref l_U182, 16 );
    }
    else if ((sub_17984( sub_1111(), g_U1466 )) || (sub_17984( sub_1111(), g_U1487 )))
    {
        sub_41054( ref l_U231, 8 );
    }
    else if (sub_17984( sub_1111(), g_U1508 ))
    {
        sub_41054( ref l_U256, 3 );
    };;;;;
    return;
}

void sub_41054(unknown uParam0, int iParam1)
{
    int I;

    I = 0;
    for ( I = 0; I < iParam1; I++ )
    {
        if (NOT (IS_PED_DEAD( sub_1111() )))
        {
            if ((sub_41111( sub_1111(), (uParam0^)[I] )) <= g_U1589)
            {
                PED_SET_ACTION_INTENTION( sub_1111(), 55, 1000, (uParam0^)[I] );
            }
        }
    }
    return;
}

void sub_41111(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

void sub_41460()
{
    switch (l_U267)
    {
        case 0:
        if (l_U268 == 2)
        {
            l_U267 = 1;
        }
        break;
        case 1:
        sub_689( "SA", "SMKFX_BLEND_IN", 0 );
        l_U267 = 2;
        break;
        case 2:
        if (l_U268 != 2)
        {
            l_U267 = 3;
        }
        break;
        case 3:
        sub_689( "SA", "SMKFX_BLEND_OUT", 0 );
        l_U267 = 4;
        break;
        case 4:
        sub_689( "SA", "SMKFX_IDLE", 0 );
        l_U267 = 0;
        break;
    }
    return;
}

void sub_41690()
{
    switch (l_U266)
    {
        case 0: break;
        case 1:
        sub_689( "SA", "CL_SETUP", 0 );
        sub_2926( ref g_U1538 );
        sub_1873( ref g_U1538, GET_RANDOM_INT_IN_RANGE( g_U1601, g_U1602 ), 1, 0 );
        sub_2009( ref g_U1538 );
        l_U266 = 2;
        break;
        case 2:
        if (sub_1437( ref g_U1538 ))
        {
            sub_689( "SA", "CL_MAX_CAN_COUGH", 0 );
            if ((GET_PED_HEALTH( sub_1111() )) > g_U1593)
            {
                sub_41895();
            }
            else
            {
                sub_42248();
            }
            l_U266 = 1;
        }
        break;
        case 3:
        sub_689( "SA", "CL_MAX_CANNOT_COUGH", 0 );
        sub_2926( ref g_U1538 );
        l_U266 = 0;
        break;
    }
    return;
}

void sub_41895()
{
    sub_689( "SA", "P_RANDOM_COUGH_STAGE_1", 0 );
    if ((GET_RANDOM_INT_IN_RANGE( 1, 3 )) == 1)
    {
        sub_41957();
    }
    else
    {
        sub_42099();
    }
    return;
}

void sub_41957()
{
    sub_689( "SA", "P_LIGHT_COUGH", "###" );
    PED_SET_ACTION_INTENTION( sub_1111(), 51, 1000, 0.00000000, 0.00000000, 0.00000000 );
    if (NOT (IS_PED_DEAD( sub_1111() )))
    {
        PLAY_SOUND_FROM_PED( g_U1598, "MAX_COUGHS_SMALL", sub_1111() );
    }
    return;
}

void sub_42099()
{
    sub_689( "SA", "P_MED_COUGH", "###" );
    PED_SET_ACTION_INTENTION( sub_1111(), 52, 1000, 0.00000000, 0.00000000, 0.00000000 );
    if (NOT (IS_PED_DEAD( sub_1111() )))
    {
        PLAY_SOUND_FROM_PED( g_U1598, "MAX_COUGHS_MEDIUM", sub_1111() );
    }
    return;
}

void sub_42248()
{
    sub_689( "SA", "P_RANDOM_COUGH_STAGE_2", 0 );
    if ((GET_RANDOM_INT_IN_RANGE( 1, 4 )) == 1)
    {
        sub_42099();
    }
    else
    {
        sub_42320();
    }
    return;
}

void sub_42320()
{
    sub_689( "SA", "P_HEAVY_COUGH", "###" );
    PED_SET_ACTION_INTENTION( sub_1111(), 53, 1000, 0.00000000, 0.00000000, 0.00000000 );
    if (NOT (IS_PED_DEAD( sub_1111() )))
    {
        PLAY_SOUND_FROM_PED( g_U1598, "MAX_COUGHS_LARGE_A", sub_1111() );
    }
    return;
}

void sub_42539()
{
    boolean bVar2;

    bVar2 = true;
    switch (l_U268)
    {
        case 0: break;
        case 1:
        if ((GET_PED_SPEED( sub_1111() )) > 0.10000000)
        {
            bVar2 = false;
        }
        if (bVar2)
        {
            if ((NOT g_U1529._fU16) AND (NOT g_U1529._fU20))
            {
                sub_2009( ref g_U1529 );
            }
        }
        else
        {
            sub_2926( ref g_U1529 );
        }
        if (sub_1437( ref g_U1529 ))
        {
            sub_42693();
            sub_2926( ref g_U1529 );
            l_U266 = 1;
            l_U268 = 2;
        }
        break;
        case 2:
        if ((NOT g_U1547._fU16) AND (NOT g_U1547._fU20))
        {
            sub_2009( ref g_U1547 );
        }
        if (sub_1437( ref g_U1547 ))
        {
            SET_PED_HEALTH( sub_1111(), (GET_PED_HEALTH( sub_1111() )) - g_U1596, 0 );
            sub_2926( ref g_U1547 );
            sub_2009( ref g_U1547 );
        }
        if ((GET_PED_HEALTH( sub_1111() )) < g_U1594)
        {
            l_U268 = 3;
        }
        if ((GET_PED_SPEED( sub_1111() )) > 0.10000000)
        {
            sub_2926( ref g_U1529 );
            sub_2926( ref g_U1547 );
            l_U266 = 3;
            l_U268 = 1;
        }
        break;
        case 3:
        sub_43281();
        l_U268 = 0;
        break;
    }
    return;
}

void sub_42693()
{
    if ((GET_RANDOM_FLOAT_IN_RANGE( 0, 1 )) > 0.50000000)
    {
        sub_42725();
    }
    else
    {
        sub_42897();
    }
    return;
}

void sub_42725()
{
    sub_689( "SA", "P_PLAY_SOFF_MDSNTM", 0 );
    if (NOT (IS_PED_DEAD( sub_1111() )))
    {
        if (NOT (IS_SCRIPTED_SPEECH_PLAYING( sub_1111() )))
        {
            sub_30869( ref l_U409 );
            sub_30951( 0, sub_1111(), "MAX", ref l_U409, 2, 0 );
            sub_30951( 1, sub_1111(), "MAX", ref l_U409, 2, 0 );
            sub_31193( "SOFF_MDSNTM", ref l_U409, 2, 1 );
        }
    }
    return;
}

void sub_42897()
{
    sub_689( "SA", "P_PLAY_SOFF_SHTPRMP", 0 );
    if (NOT (IS_PED_DEAD( sub_1111() )))
    {
        if (NOT (IS_SCRIPTED_SPEECH_PLAYING( sub_1111() )))
        {
            sub_30869( ref l_U419 );
            sub_30951( 0, sub_1111(), "MAX", ref l_U419, 2, 0 );
            sub_30951( 1, sub_1111(), "MAX", ref l_U419, 2, 0 );
            sub_31193( "SOFF_SHTPRMP", ref l_U419, 2, 1 );
        }
    }
    return;
}

void sub_43281()
{
    sub_689( "SA", "P_KILL_MAX_FROM_SMOKE_INHALE", "###" );
    SET_PLAYER_CONTROL( sub_1133(), 0, 0 );
    DISPLAY_HUD( 0 );
    ADD_SPECIAL_FX_MODIFIER( "FIRE_COUGH", 1.00000000, 0.00000000, g_U1591, g_U1592 );
    if (g_U665 == 1)
    {
        ISEQ_REGISTER_ENTITY( -654795811, "MAX", sub_1111(), 0 );
        ISEQ_START( -654795811 );
    }
    else
    {
        SET_PLAYER_CAN_USE_COVER( sub_1133(), 0 );
        if (NOT (IS_PED_DEAD( sub_1111() )))
        {
            PED_SET_ACTION_INTENTION( sub_1111(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
    g_U1583 = 1;
    sub_2926( ref g_U1556 );
    sub_1873( ref g_U1556, 2500, 1, 0 );
    sub_2009( ref g_U1556 );
    return;
}

void sub_43653()
{
    sub_689( "SA", "P_UNLOAD_ASSETS", 0 );
    sub_43696( ref l_U777 );
    sub_43696( ref l_U769 );
    sub_43696( ref l_U785 );
    sub_43696( "EXPL_CAM" );
    sub_43763( 1613006336 );
    sub_43763( 1188660312 );
    sub_43763( -994619221 );
    sub_43763( 1589426392 );
    sub_43763( -1335895011 );
    sub_43763( -1152716301 );
    sub_43763( -1929112218 );
    sub_43763( -373633326 );
    sub_43763( -209132946 );
    sub_43763( -969537591 );
    CLEAR_NAMED_CUTSCENE( ref l_U801 );
    return;
}

void sub_43696(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_43763(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_7505( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}


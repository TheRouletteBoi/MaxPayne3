void main()
{
    unknown uVar2;

    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U40 = 0;
    l_U42 = 0;
    l_U43 = 0;
    l_U44 = 1500;
    l_U54 = 0;
    l_U55 = 1;
    l_U56 = 1;
    l_U57 = 1;
    l_U58 = 0;
    l_U59 = 0;
    l_U61 = 0;
    l_U71 = 0;
    l_U149 = 0;
    l_U150 = 0;
    l_U151 = 1;
    l_U152 = 0;
    l_U153 = 1;
    l_U154 = 0;
    l_U155 = 0;
    l_U156 = 2.00000000;
    l_U157 = 0.70000000;
    l_U158 = 0.70000000;
    l_U159 = {-126.12000000, 209.40000000, 3.00000000};
    l_U162 = -45.52230000;
    l_U163 = 0.25000000;
    l_U164 = 3500;
    l_U165 = 0.28000000;
    l_U175 = 5900;
    l_U185 = 7300;
    l_U195 = 1500;
    l_U205 = 100;
    StrCopy( ref l_U237, "MID_04_F2_concat", 32 );
    StrCopy( ref l_U245, "MID_07_FAV2_concat", 32 );
    StrCopy( ref l_U253, "f2_anim_mpm", 32 );
    l_U261 = 1232833631;
    l_U280 = 0;
    l_U318 = 0.00000000;
    l_U319 = 0;
    l_U320 = 1;
    l_U321 = 1;
    l_U322 = 0;
    l_U356 = 7200;
    l_U357 = {-113.50500000, 223.54700000, -1.40000000};
    l_U360 = {0.00000000, 0.00000000, 0.00000000};
    l_U372 = 7400;
    l_U373 = {-113.50500000, 223.54700000, -4.50000000};
    l_U376 = {0.00000000, 0.00000000, 0.00000000};
    l_U388 = 7000;
    l_U389 = {65427, 215, 6.50000000};
    l_U392 = 0;
    l_U393 = {-0.10500000, 0.02000000, 0.00000000};
    l_U396 = 1;
    l_U397 = 1;
    l_U398 = 1;
    l_U399 = 1;
    l_U400 = 1;
    l_U401 = 1;
    l_U402 = 1;
    StrCopy( ref l_U403, "f2_anim_hlgt", 32 );
    StrCopy( ref l_U411, "p_mi_searchlite", 32 );
    l_U419 = {0.00000000, 0.00000000, 0.00000000};
    l_U422 = {-0.40000000, 2.40000000, -0.13000000};
    l_U425 = {0.00000000, 0.00000000, 0.00000000};
    l_U450 = {-127.54000000, 206.92000000, 2.45000000};
    l_U453 = 0;
    l_U455 = 0;
    l_U459 = 0.00000000;
    l_U460 = -25.00000000;
    l_U461 = 42.48300000;
    l_U462 = 15.05100000;
    l_U463 = 29.38167000;
    l_U464 = 12.18398000;
    l_U465 = 1;
    l_U478 = 0.10000000;
    l_U479 = 317;
    l_U498 = {-125.89000000, 207.99000000, 4.76000000};
    l_U501 = 0.00000000;
    sub_1051( "CO", "FAVELA RAID MPM: START SCRIPT", 0 );
    if (g_U781 == 6)
    {
        if ((sub_1116( ref l_U93 )) == 0)
        {
            uVar2 = sub_3511( sub_1245(), g_U1310, 200, 0, 0 );
            g_U1046 = 1;
        }
    }
    START_WIDGET_GROUP( "Change Time " );
    ADD_WIDGET_INT_SLIDER( "Change Time", ref l_U185, 0, 20000, 1000 );
    STOP_WIDGET_GROUP();
    sub_5489();
    while (NOT IS_EXITFLAG_SET())
    {
        sub_6123();
        sub_9981();
        WAIT( 0 );
    }
    SET_SILHOUETTE_ACTIVE( 1 );
    sub_9180();
    sub_8984();
    sub_38653();
    sub_1051( "CO", "FAVELA RAID MPM: END SCRIPT", 0 );
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "fav2_FavelaMPM" );
    SET_EXITFLAG_RESPONSE();
    return;
}

void sub_1051(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

int sub_1116(unknown uParam0)
{
    sub_1051( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            g_U665 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, g_U666 );
            sub_1311( uParam0, sub_1245() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_1245()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1267() );
    }
    return 0;
}

void sub_1267()
{
    return GET_PLAYER_ID();
}

void sub_1311(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1051( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (g_U665)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_1497( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_2574( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_2866( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_3226( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_2866( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_3226( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_2866( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_3226( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_3511( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_3226( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_3511( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_3226( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (g_U665 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_4006( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_4167( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1245(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (g_U665)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    g_U665 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1051( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_1497(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_1529( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_1529(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_2574(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_2866(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_3182( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_3182(unknown uParam0)
{
    return;
}

void sub_3226(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_3511(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_3182( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_4006(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_4167(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_1529( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_4239( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_4239(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_5489()
{
    START_WIDGET_GROUP( "PLAYER MPM Start " );
    ADD_WIDGET_FLOAT_SLIDER( "vShootAtPlayer_WIDGET X", ref l_U450._fU0, -1000.00000000, 1000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "vShootAtPlayer_WIDGET Y", ref l_U450._fU4, -1000.00000000, 1000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "vShootAtPlayer_WIDGET Z", ref l_U450._fU8, -1000.00000000, 1000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "fPlayerStartheading", ref l_U162, -500.00000000, 500.00000000, 0.10000000 );
    ADD_WIDGET_FLOAT_SLIDER( "vStartPos_WIDGET X", ref l_U159._fU0, -1000.00000000, 1000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "vStartPos_WIDGET Y", ref l_U159._fU4, -1000.00000000, 1000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "vStartPos_WIDGET Z", ref l_U159._fU8, -1000.00000000, 1000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "fHeliSkip", ref l_U164, 0.00000000, 10000.00000000, 500.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "fTileSkip", ref l_U163, 0.00000000, 10000.00000000, 500.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "fCamMPMHeading2", ref l_U463, -1000.00000000, 1000.00000000, 1.00000000 );
    ADD_WIDGET_FLOAT_SLIDER( "fCamMPMPITCH2", ref l_U464, -1000.00000000, 1000.00000000, 1.00000000 );
    ADD_WIDGET_INT_SLIDER( "iFailWait", ref l_U479, 0, 10000, 1 );
    STOP_WIDGET_GROUP();
    return;
}

void sub_6123()
{
    if (l_U392)
    {
        sub_6148( sub_1245() );
    }
    if (g_U782 == 6)
    {
        switch (l_U58)
        {
            case 0:
            if ((l_U61 == 1) || ((sub_6297()) || (IS_PED_DEAD( sub_1245() ))))
            {
                SET_PED_INVINCIBLE( sub_1245(), 0 );
                l_U58 = 1;
                sub_1051( "kja", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_6815())
            {
                l_U58 = 2;
                sub_1051( "NS", "eFailState = FAIL_WAITING_FOR_PLAYER_RESPAWN", 0 );
            }
            else if ((sub_6913( 0 )) == 1)
            {
                l_U58 = 2;
                sub_1051( "NS", "eFailState = FAIL_WAITING_FOR_PLAYER_RESPAWN", 0 );
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_1245() )))
            {
                if ((g_U1312[6]._fU40 != 4) AND (g_U1312[6]._fU40 != 0))
                {
                    sub_1051( "kja", "Shutting down script for MCE_ROOFTOP_MPM.", 0 );
                    sub_8420( ref g_U1312[6] );
                }
                l_U58 = 3;
                sub_1051( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_1051( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_1245() ))) AND (NOT (IS_PLAYER_DEAD( sub_1267() ))))
            {
                SET_PLAYER_CONTROL( sub_1267(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_1245() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_1245(), 0 );
                }
            }
            sub_8633( ref l_U60 );
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            sub_8767();
            sub_8878();
            PED_FINISH_ACTION_INTENTION( sub_1245(), 47 );
            PED_FINISH_ACTION_INTENTION( sub_1245(), 49 );
            sub_8984();
            sub_9180();
            sub_9356( -1410560251, 0 );
            STOP_SCRIPT_STREAM( 0 );
            STOP_SCRIPT_STREAM( 1 );
            REQUEST_VEHICLE_RECORDING( 197 );
            if (NOT (IS_PED_DEAD( sub_1245() )))
            {
                REMOVE_ALL_PED_WEAPONS( sub_1245() );
                GIVE_WEAPON_TO_PED_HAND( sub_1245(), g_U1310, 200, 0 );
            }
            l_U58 = 4;
            sub_1051( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_1051( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_1311( ref l_U93, sub_1245() );
            l_U58 = 5;
            sub_1051( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_1051( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U54 = 0;
            l_U58 = 0;
            sub_1051( "kja", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    else if ((sub_6815()) || (IS_PED_DEAD( sub_1245() )))
    {
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        sub_8420( ref g_U1312[6] );
    }
    return;
}

void sub_6148(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

int sub_6297()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        g_U665 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1245() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1245(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1267(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1267(), 1 );
            if ((IS_PED_VISIBLE( sub_1245() )) == 0)
            {
                SET_PED_VISIBLE( sub_1245(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_6815()
{
    return g_U648;
}

int sub_6913(int iParam0)
{
    iParam0 = 1;
    switch (l_U43)
    {
        case 0:
        if (NOT (sub_6974( ref l_U45 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1245() )))
            {
                l_U44 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_7084( ref l_U45, l_U44, 1, 1 );
            sub_7220( ref l_U45 );
        }
        if (sub_7340( ref l_U45 ))
        {
            sub_1051( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1245() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1267() )))
            {
                SET_PLAYER_CONTROL( sub_1267(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U43 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U43 = 2;
            }
            else
            {
                l_U43 = 3;
            }
        }
        break;
        case 2:
        sub_1051( "NS", "Player will QUIT", 0 );
        sub_7827();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1051( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_7827();
        return 1;
        break;
    }
    return 0;
}

int sub_6974(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_7084(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_7220(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_7340(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_7827()
{
    sub_1051( "NS", "P_PostFailRetryCleanup", 0 );
    sub_7877( ref l_U45 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1267() )))
    {
        SET_PLAYER_CONTROL( sub_1267(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U42 = 0;
    l_U42 = l_U42;
    l_U43 = 0;
    return;
}

void sub_7877(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_8420(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_8633(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_8767()
{
    int I;

    for ( I = 0; I <= 14; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U323[I] ))
        {
            sub_8819( l_U323[I] );
        }
    }
    return;
}

void sub_8819(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_8878()
{
    int I;

    for ( I = 0; I <= 5; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U340[I] ))
        {
            sub_8819( l_U340[I] );
        }
    }
    return;
}

void sub_8984()
{
    sub_8994();
    ALLOW_BULLET_CAMERA_SLOWDOWN( 1 );
    return;
}

void sub_8994()
{
    sub_9008( ref l_U265 );
    sub_9042( l_U291 );
    DELETE_VEHICLE( ref l_U262 );
    return;
}

void sub_9008(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_9042( (uParam0^)[I] );
    }
    return;
}

void sub_9042(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_9180()
{
    sub_1051( "CCB", "P_CLEANUP_ALL", 0 );
    sub_9218();
    return;
}

void sub_9218()
{
    sub_1051( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_1051( "CCB", "Stopping the Favela2_MPM context...", 0 );
    END_CONTEXT( "Favela2_MPM" );
    return;
}

void sub_9356(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_9981()
{
    switch (l_U54)
    {
        case 0:
        sub_10083();
        sub_11155();
        sub_1051( "NS", "eChapMPMState = eWaitForAssets", 0 );
        l_U54 = 1;
        break;
        case 1:
        if (sub_11735())
        {
            sub_1051( "NS", "P_Are_Assets_Loaded() = true", 0 );
            if (g_U782 != 6)
            {
                if (HAS_CUTSCENE_LOADED())
                {
                    sub_1051( "NS", "eChapMPMState = eWaitForHandOff", 0 );
                    l_U54 = 2;
                }
            }
            else
            {
                sub_12150();
                sub_1051( "NS", "eChapMPMState = eChapterINIT", 0 );
                l_U54 = 3;
            }
        }
        break;
        case 2:
        if (sub_12709( ref l_U72, sub_1245(), 0 ))
        {
            sub_1051( "NS", "eChapMPMState = eChapterINIT", 0 );
            l_U54 = 3;
        }
        break;
        case 3:
        sub_12905();
        sub_14881();
        if (NOT (IS_PED_DEAD( sub_1245() )))
        {
            SET_PED_VISIBLE( sub_1245(), 1 );
        }
        if (g_U782 != 6)
        {
            sub_1051( "NS", "eChapMPMState = eHandleCutscene", 0 );
            l_U54 = 5;
        }
        else
        {
            sub_15259();
            sub_16325( 0 );
            sub_1051( "NS", "eChapMPMState = eStateStartCheckpoint", 0 );
            l_U54 = 6;
        }
        break;
        case 5:
        if (sub_17682())
        {
            l_U54 = 6;
            CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV2_MPM", "MPED_PSTL_FAV2_MPM_INTRO_CAM", 1, l_U498, l_U501, 0, 0 );
            break;
        }
        return;
        case 6:
        sub_20400();
        ALLOW_BULLET_CAMERA_SLOWDOWN( 0 );
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        sub_22547();
        sub_28463();
        if (l_U151 == 1)
        {
            sub_10140( ref l_U245, 0 );
            sub_10519( -1889224605, 0 );
            l_U151 = 0;
        }
        AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_3_4_5_6", "", 0.00000000, 1000, 5000, -1082130432, 0 );
        l_U54 = 4;
        break;
        case 4:
        if (l_U149 == 0)
        {
            AUDIO_MUSIC_REQUEST_ONESHOT( "FAV2_ONESHOT_I", 0 );
            l_U149 = 1;
        }
        if (sub_28739())
        {
            sub_1051( "NS", "Hit chapter 3 killswitch.", 0 );
            sub_8984();
            l_U54 = 10;
        }
        break;
        case 7:
        if (sub_33701())
        {
            l_U54 = 8;
            g_U1041 = 1;
            break;
        }
        return;
        case 8:
        if (sub_36594())
        {
            sub_38513( ref g_U1312[7] );
            l_U54 = 10;
        }
        break;
        case 10: break;
    }
    sub_38555();
    return;
}

void sub_10083()
{
    sub_1051( "SP", "P_REQUEST_ASSETS", 0 );
    if (g_U782 != 6)
    {
        sub_10140( ref l_U237, 0 );
    }
    REQUEST_MODEL( -433063323 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( l_U261 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( 1750472651 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( 1686109657 );
    "[doubled result, dropped if not asigned]";
    sub_10450( 1001413062, 0 );
    sub_10519( -1410560251, 0 );
    sub_10735( "LEVEL_S_FAV2_MPM", 0, 0 );
    sub_10735( "LEVEL_S_FAV2_CP_04", 0, 0 );
    sub_10735( "LEVEL_S_FAV2_CP_05", 0, 0 );
    sub_10735( ref l_U253, 0, 0 );
    sub_10735( "veh@helicopter", 0, 0 );
    sub_10921( "VEHICLE/vehicle_heli", 0 );
    sub_10921( "LEVEL/S_FAV2/S_FAV2_VIG_09", 0 );
    sub_11037( "S_FAV2_MPM", 0, 0 );
    sub_11037( "S_FAV2_MPM_FAIL", 1, 0 );
    REQUEST_VEHICLE_RECORDING( 197 );
    return;
}

void sub_10140(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_10450(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_10519(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_10735(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_10921(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_11037(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_11155()
{
    sub_11175( "SFV2AUD" );
    sub_11360( ref l_U72, "Trigger_MPMACTIVATE", -133.53000000, 203.64000000, 2.48000000, 4.00000000, 6.00000000, 4.00000000, 0.00000000, 0.00000000, 20.93000000, 1 );
    l_U54 = 0;
    l_U55 = 1;
    l_U56 = 1;
    l_U57 = 1;
    l_U59 = 0;
    l_U71 = 0;
    l_U453 = 0;
    l_U319 = 0;
    l_U321 = 0;
    l_U320 = 0;
    l_U154 = 0;
    l_U153 = 1;
    l_U280 = 0;
    l_U151 = 1;
    l_U149 = 0;
    l_U150 = 0;
    l_U152 = 0;
    l_U155 = 0;
    l_U61 = 0;
    sub_7877( ref l_U347 );
    sub_7877( ref l_U363 );
    sub_7877( ref l_U379 );
    sub_7877( ref l_U166 );
    sub_7877( ref l_U347 );
    sub_7877( ref l_U363 );
    sub_7877( ref l_U466 );
    sub_7877( ref l_U480 );
    sub_7877( ref l_U489 );
    sub_7877( ref l_U176 );
    sub_7877( ref l_U186 );
    sub_7877( ref l_U196 );
    sub_7877( ref l_U62 );
    return;
}

void sub_11175(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_11195();
    return;
}

void sub_11195()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_11360(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

int sub_11735()
{
    sub_1051( "NS", "F_Are_Assets_Loaded()", 0 );
    if ((HAS_VEHICLE_RECORDING_BEEN_LOADED( 197 )) AND ((LOAD_SCRIPT_STREAM( "S_FAV2_MPM_FAIL", 1 )) AND ((LOAD_SCRIPT_STREAM( "S_FAV2_MPM", 0 )) AND ((HAS_ANIM_DICT_LOADED( "veh@helicopter", 0 )) AND ((HAS_ANIM_DICT_LOADED( "LEVEL_S_FAV2_CP_05", 0 )) AND ((HAS_ANIM_DICT_LOADED( ref l_U253, 0 )) AND ((HAS_ANIM_DICT_LOADED( "LEVEL_S_FAV2_CP_04", 0 )) AND ((HAS_ANIM_DICT_LOADED( "LEVEL_S_FAV2_MPM", 0 )) AND ((HAS_MODEL_LOADED( -433063323 )) AND ((HAS_MODEL_LOADED( 1750472651 )) AND (HAS_MODEL_LOADED( l_U261 ))))))))))))
    {
        return 1;
    }
    return 0;
}

void sub_12150()
{
    sub_1051( "SP", "P_LOAD_ASSETS", 0 );
    if (g_U782 != 6)
    {
        sub_10140( ref l_U237, 1 );
    }
    sub_12215( l_U261, 1 );
    sub_12215( 1750472651, 1 );
    sub_12215( -433063323, 1 );
    sub_10735( "LEVEL_S_FAV2_MPM", 0, 1 );
    sub_10735( "LEVEL_S_FAV2_CP_04", 0, 1 );
    sub_10735( "LEVEL_S_FAV2_CP_05", 0, 1 );
    sub_10735( ref l_U253, 0, 1 );
    sub_10735( "veh@helicopter", 0, 1 );
    sub_10921( "VEHICLE/vehicle_heli", 1 );
    sub_10921( "LEVEL/S_FAV2/S_FAV2_VIG_09", 1 );
    sub_11037( "S_FAV2_MPM", 0, 1 );
    sub_11037( "S_FAV2_MPM_FAIL", 1, 1 );
    REQUEST_VEHICLE_RECORDING( 197 );
    return;
}

void sub_12215(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_3182( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_12709(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_12748( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

int sub_12748(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_12905()
{
    unknown[4] uVar2;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;
    unknown uVar51;
    unknown uVar52;
    unknown uVar53;
    unknown uVar54;
    unknown uVar55;
    unknown uVar56;
    unknown uVar57;
    unknown uVar58;
    unknown uVar59;
    unknown uVar60;
    unknown uVar61;
    unknown uVar62;
    unknown uVar63;
    unknown uVar64;
    unknown uVar65;
    unknown uVar66;
    unknown uVar67;

    array(ref uVar2, 4);
    sub_12919();
    sub_14417( ref uVar2[0], -116.13000000, 232.70000000, -5.12000000, 0.00000000, -139671070, 7, 3, 2, 0, 0 );
    l_U265[0] = sub_13425( ref uVar2[0] );
    sub_14417( ref uVar2[1], -116.67000000, 234.27000000, -5.16000000, 0.00000000, 1526749116, 7, 3, 2, 0, 0 );
    l_U265[1] = sub_13425( ref uVar2[1] );
    sub_14417( ref uVar2[2], -116.67000000, 233.27000000, -5.16000000, 0.00000000, 1526749116, 7, 3, 2, 0, 0 );
    l_U265[2] = sub_13425( ref uVar2[2] );
    sub_14417( ref uVar55, -117.57000000, 233.28000000, -5.15000000, 0.00000000, 882668171, 7, 3, 2, 0, 0 );
    l_U291 = sub_13425( ref uVar55 );
    if (NOT (IS_PED_DEAD( l_U291 )))
    {
        SET_PED_NAME_DEBUG( l_U291, "piHeliMM_RPG" );
    }
    sub_14779( ref l_U265, "piHeliMMEnemies" );
    return;
}

void sub_12919()
{
    vector vVar2;
    float fVar5;

    vVar2 = {-71.64221000, 177.36430000, 15.36041000};
    fVar5 = 86.57030000;
    sub_12969( ref l_U262, vVar2, fVar5, l_U261 );
    return;
}

void sub_12969(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;

    sub_1051( "SP", "P_SETUP_VEHICLE", 0 );
    sub_12215( uParam5, 1 );
    sub_13019( (uParam0^) );
    (uParam0^) = sub_13083( uParam5, uParam1, uParam4, 1, 0, 0 );
    sub_13330( ref uVar8, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( (uParam0^) ), 0.00000000, 1686109657, 7, 3, 2, 0, 0 );
    l_U263 = sub_13425( ref uVar8 );
    if ((NOT (IS_VEHICLE_DEAD( (uParam0^) ))) AND (DOES_VEHICLE_EXIST( (uParam0^) )))
    {
        SET_PED_INTO_VEHICLE( l_U263, (uParam0^), -1 );
        SET_PED_RELATIONSHIP_GROUP( l_U263, 4 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U263, 1 );
        SET_PED_VISIBLE( l_U263, 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U263, 2, 0 );
        SET_PED_PROOFS( l_U263, 1, 1, 1, 1, 1 );
        SET_PED_AIM_LOCKONABLE( l_U263, 0 );
    }
    if ((NOT (IS_VEHICLE_DEAD( (uParam0^) ))) AND (DOES_VEHICLE_EXIST( (uParam0^) )))
    {
        SET_VEHICLE_DOORS_LOCKED( (uParam0^), 2 );
        SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED( (uParam0^), 1 );
        SET_VEHICLE_PROOFS( (uParam0^), 1, 1, 1, 1, 1 );
        SET_VEHICLE_ENGINE_ON( (uParam0^), 1, 1 );
        SET_VEHICLE_LIGHTS( (uParam0^), 2 );
        SET_VEHICLE_NAME_DEBUG( (uParam0^), "vi_chaseVehicle" );
        SET_VEHICLE_DOOR_OPEN( (uParam0^), 3 );
        SET_VEHICLE_DOOR_OPEN( (uParam0^), 2 );
        SET_HELI_BLADES_FULL_SPEED( (uParam0^) );
        SET_VEHICLE_COLOUR_COMBINATION( (uParam0^), 0 );
    }
    return;
}

void sub_13019(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_13083(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_12215( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_13330(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_13425(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_12215( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_13904( iParam0->_fU40 );
    sub_13984( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_13904(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_13984(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_14417(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_14779(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_14881()
{
    l_U294[0] = 0.45000000;
    l_U300[0] = 0.80000000;
    l_U306[0] = 0.80000000;
    l_U312[0] = -90.00000000;
    l_U294[1] = 0.95000000;
    l_U300[1] = -0.10000000;
    l_U306[1] = 0.70000000;
    l_U312[1] = -90.00000000;
    l_U294[2] = 0.40000000;
    l_U300[2] = 2.00000000;
    l_U306[2] = 0.80000000;
    l_U312[2] = 0.00000000;
    l_U294[3] = 0.80000000;
    l_U300[3] = 0.70000000;
    l_U306[3] = 0.70000000;
    l_U312[3] = -104.00000000;
    sub_1051( "SP", "Starting the S_FAV2_21_MPM sequence", 0 );
    return;
}

void sub_15259()
{
    char[32] cVar2;
    int I;
    vector vVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;

    sub_1051( "SP", "P_MAX_MOMENT_LOADROOF", 0 );
    StrCopy( ref cVar2, "TILE_MPM_ROOT_", 32 );
    vVar11 = {0, 0, 0};
    sub_12215( 53136011, 1 );
    sub_12215( 350776838, 1 );
    sub_12215( -421260802, 1 );
    sub_12215( -83477950, 1 );
    sub_12215( 1247828213, 1 );
    sub_12215( 1553595752, 1 );
    sub_12215( 835430348, 1 );
    sub_12215( -2109060920, 1 );
    sub_12215( -1791365465, 1 );
    sub_12215( 1752855097, 1 );
    sub_12215( -490346798, 1 );
    sub_12215( -259554731, 1 );
    sub_12215( 90811417, 1 );
    sub_12215( 348539602, 1 );
    sub_12215( -1439533652, 1 );
    l_U323[0] = CREATE_OBJECT( 53136011, (vector( -124.42400000, 210.55200000, 1.96600000)) + vVar11, 0, 0 );
    l_U323[1] = CREATE_OBJECT( 350776838, (vector( -124.51500000, 210.55200000, 1.96600000)) + vVar11, 0, 0 );
    l_U323[2] = CREATE_OBJECT( -421260802, (vector( -124.60900000, 210.55200000, 1.96600000)) + vVar11, 0, 0 );
    l_U323[3] = CREATE_OBJECT( -83477950, (vector( -124.70200000, 210.55200000, 1.96600000)) + vVar11, 0, 0 );
    l_U323[4] = CREATE_OBJECT( 1247828213, (vector( -124.79500000, 210.55200000, 1.96600000)) + vVar11, 0, 0 );
    l_U323[5] = CREATE_OBJECT( 1553595752, (vector( -124.42400000, 210.73700000, 1.96600000)) + vVar11, 0, 0 );
    l_U323[6] = CREATE_OBJECT( 835430348, (vector( -124.51800000, 210.73700000, 1.96600000)) + vVar11, 0, 0 );
    l_U323[7] = CREATE_OBJECT( -2109060920, (vector( -124.61100000, 210.73700000, 1.96600000)) + vVar11, 0, 0 );
    l_U323[8] = CREATE_OBJECT( -1791365465, (vector( -124.70400000, 210.73700000, 1.96600000)) + vVar11, 0, 0 );
    l_U323[9] = CREATE_OBJECT( 1752855097, (vector( -124.79500000, 210.73700000, 1.96600000)) + vVar11, 0, 0 );
    l_U323[10] = CREATE_OBJECT( -490346798, (vector( -124.42400000, 210.92500000, 1.96600000)) + vVar11, 0, 0 );
    l_U323[11] = CREATE_OBJECT( -259554731, (vector( -124.51800000, 210.92500000, 1.96600000)) + vVar11, 0, 0 );
    l_U323[12] = CREATE_OBJECT( 90811417, (vector( -124.61100000, 210.92500000, 1.96600000)) + vVar11, 0, 0 );
    l_U323[13] = CREATE_OBJECT( 348539602, (vector( -124.70400000, 210.92500000, 1.96600000)) + vVar11, 0, 0 );
    l_U323[14] = CREATE_OBJECT( -1439533652, (vector( -124.79500000, 210.92500000, 1.96600000)) + vVar11, 0, 0 );
    for ( I = 0; I <= 14; I++ )
    {
        uVar14 = {cVar2};
        if (I < 9)
        {
            ConcatString(ref uVar14, "0", 32);
        }
        ConcatString(ref uVar14, I + 1, 32);
        if ((DOES_OBJECT_EXIST( l_U323[I] )) == 1)
        {
            PLAY_OBJECT_ANIM( l_U323[I], ref uVar14, ref l_U253, 0.10000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( l_U323[I], ref uVar14, ref l_U253, l_U163 );
            SET_OBJECT_ANIM_SPEED( l_U323[I], ref uVar14, ref l_U253, 0.00000000 );
        }
    }
    return;
}

void sub_16325(boolean bParam0)
{
    char[32] cVar3;
    int I;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;

    sub_1051( "SP", "P_MAX_MOMENT_LOADROOF", 0 );
    StrCopy( ref cVar3, "Tile_mpm_fail_rt_", 32 );
    if (NOT bParam0)
    {
        sub_12215( -860528484, 1 );
        sub_12215( -2059906653, 1 );
        sub_12215( 1995486484, 1 );
        sub_12215( 833432206, 1 );
        sub_12215( 596676181, 1 );
        sub_12215( 1334765137, 1 );
        if (l_U396)
        {
            l_U340[0] = CREATE_OBJECT_NO_OFFSET( -860528484, (vector( -124.60900000, 210.55200000, 1.96600000)) + l_U393, 0, 0 );
        }
        if (l_U397)
        {
            l_U340[1] = CREATE_OBJECT_NO_OFFSET( -2059906653, (vector( -124.51600000, 210.55200000, 1.96600000)) + l_U393, 0, 0 );
        }
        for ( I = 0; I <= 1; I++ )
        {
            uVar12 = {cVar3};
            ConcatString(ref uVar12, "0", 32);
            ConcatString(ref uVar12, I + 1, 32);
            if ((DOES_OBJECT_EXIST( l_U323[I] )) == 1)
            {
                PLAY_OBJECT_ANIM( l_U340[I], ref uVar12, ref l_U253, 0.10000000, 0, 1 );
                SET_OBJECT_ANIM_CURRENT_TIME( l_U340[I], ref uVar12, ref l_U253, 0.01000000 );
                SET_OBJECT_ANIM_SPEED( l_U340[I], ref uVar12, ref l_U253, 0.00000000 );
            }
        }
    }
    else if (l_U398)
    {
        l_U340[2] = CREATE_OBJECT_NO_OFFSET( 1995486484, (vector( -124.61100000, 210.92500000, 1.96600000)) + l_U393, 0, 0 );
    }
    if (l_U399)
    {
        l_U340[3] = CREATE_OBJECT_NO_OFFSET( 833432206, (vector( -124.51800000, 210.92500000, 1.96600000)) + l_U393, 0, 0 );
    }
    if (l_U400)
    {
        l_U340[4] = CREATE_OBJECT_NO_OFFSET( 596676181, (vector( -124.70200000, 210.55200000, 1.96600000)) + l_U393, 0, 0 );
    }
    if (l_U401)
    {
        l_U340[5] = CREATE_OBJECT_NO_OFFSET( 1334765137, (vector( -124.61100000, 210.73700000, 1.96600000)) + l_U393, 0, 0 );
    }
    sub_16964();
    for ( I = 0; I <= 5; I++ )
    {
        uVar20 = {cVar3};
        if (I < 9)
        {
            ConcatString(ref uVar20, "0", 32);
        }
        ConcatString(ref uVar20, I + 1, 32);
        if ((DOES_OBJECT_EXIST( l_U340[I] )) == 1)
        {
            PLAY_OBJECT_ANIM( l_U340[I], ref uVar20, ref l_U253, 0.10000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( l_U340[I], ref uVar20, ref l_U253, 0.01000000 );
            SET_OBJECT_ANIM_SPEED( l_U340[I], ref uVar20, ref l_U253, 1.00000000 );
        }
    }
    if (l_U402)
    {
        sub_17503();
    }
    return;
}

void sub_16964()
{
    int I;

    for ( I = 0; I < 16; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U323[I] ))
        {
            sub_8819( l_U323[I] );
        }
    }
    sub_17037( 53136011 );
    sub_17037( 350776838 );
    sub_17037( -421260802 );
    sub_17037( -83477950 );
    sub_17037( 1247828213 );
    sub_17037( 1553595752 );
    sub_17037( 835430348 );
    sub_17037( -2109060920 );
    sub_17037( -1791365465 );
    sub_17037( 1752855097 );
    sub_17037( -490346798 );
    sub_17037( -259554731 );
    sub_17037( 90811417 );
    sub_17037( 348539602 );
    sub_17037( -1439533652 );
    return;
}

void sub_17037(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_3182( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_17503()
{
    sub_1051( "CO", "P_ADD_FAILED_FX", 0 );
    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "FAV1_MPMRPG_Fail_S", -121.00000000, 214.00000000, 0.18000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

int sub_17682()
{
    unknown uVar2;
    unknown uVar3;
    int iVar4;

    uVar2 = GET_CUTSCENE_SECTION_PLAYING();
    uVar3 = GET_CUTSCENE_TIME();
    iVar4 = GET_CUTSCENE_TIME_MS();
    switch (l_U55)
    {
        case 0: break;
        case 1:
        l_U55 = 2;
        break;
        case 2:
        l_U55 = 3;
        break;
        case 3:
        l_U55 = 4;
        break;
        case 4:
        l_U55 = 5;
        break;
        case 5:
        if ((NOT (IS_VEHICLE_DEAD( l_U262 ))) AND (DOES_VEHICLE_EXIST( l_U262 )))
        {
            REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U262, "heli_ufe", 0 );
        }
        else
        {
            sub_1051( "CO", "Heli Is Dead ", 0 );
        }
        l_U270[0] = sub_3511( l_U265[0], g_U1308, 25000, 0, 0 );
        l_U270[1] = sub_3511( l_U265[1], g_U1308, 25000, 0, 0 );
        l_U292 = sub_3511( l_U291, 1001413062, 25000, 0, 0 );
        if ((NOT (IS_PED_DEAD( l_U265[0] ))) AND (DOES_PED_EXIST( l_U265[0] )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U265[0], "M_F2_UFE_F^1", 0 );
            if ((GET_DOES_WEAPON_EXIST( l_U270[0] )) == 1)
            {
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U270[0], "W_AR_G36K_Aa_H", 0 );
            }
            CUTSCENE_REGISTER_PED_TELEPORT( l_U265[0], -116.13000000, 232.70000000, -5.12000000, 0.00000000 );
        }
        if ((NOT (IS_PED_DEAD( l_U265[1] ))) AND (DOES_PED_EXIST( l_U265[1] )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U265[1], "M_F2_UFE_F", 0 );
            if ((GET_DOES_WEAPON_EXIST( l_U270[1] )) == 1)
            {
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U270[1], "W_AR_G36K_Aa_H^1", 0 );
            }
            CUTSCENE_REGISTER_PED_TELEPORT( l_U265[1], -116.67000000, 234.27000000, -5.16000000, 0.00000000 );
        }
        if ((NOT (IS_PED_DEAD( l_U291 ))) AND (DOES_PED_EXIST( l_U291 )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U291, "M_F2_UFE_F^2", 0 );
            if ((GET_DOES_WEAPON_EXIST( l_U292 )) == 1)
            {
                CUTSCENE_REGISTER_PED_TELEPORT( l_U291, -117.57000000, 233.28000000, -5.15000000, 0.00000000 );
                CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U291, "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U292, "W_AR_G36K_Aa_H^2", 0 );
            }
        }
        if ((NOT (IS_PED_DEAD( l_U265[2] ))) AND (DOES_PED_EXIST( l_U265[2] )))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U265[2], "M_F2_UFE_F^3", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( l_U265[2], -116.67000000, 233.27000000, -5.16000000, 0.00000000 );
        }
        if (NOT (IS_PED_DEAD( sub_1245() )))
        {
            CUTSCENE_REGISTER_PED_TELEPORT( sub_1245(), l_U159, l_U162 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_1245(), "/Global/L_FAV2_21_MPM2/SEQ_START/MPM/PISTOL" );
            ISEQ_REGISTER_ENTITY( -1410560251, "mpm_player", sub_1245(), 0 );
            CUTSCENE_REGISTER_ISEQ( -1410560251 );
        }
        g_U1045 = 1;
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        l_U55 = 6;
        break;
        case 6:
        sub_18822( 1, 1 );
        SET_PED_AMMO( sub_1245(), 68019059, 32 );
        RELOAD_PED_WEAPONS( sub_1245() );
        AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_3_4_5_6", "", 0.00000000, 1000, 5000, -1082130432, 0 );
        l_U55 = 7;
        break;
        case 7:
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            if (l_U154 == 0)
            {
                if (iVar4 >= 500)
                {
                    sub_19738();
                    sub_15259();
                    sub_16325( 0 );
                    l_U154 = 1;
                }
            }
        }
        else if (NOT (IS_PED_DEAD( l_U291 )))
        {
            sub_20141( l_U291, -117.57000000, 233.28000000, -5.15000000, 0.00000000 );
        }
        if (WAS_CUTSCENE_SKIPPED() == 1)
        {
            sub_15259();
            sub_16325( 0 );
            l_U71 = 1;
        }
        DISPLAY_HUD( 0 );
        CLEAR_NAMED_CUTSCENE( ref l_U237 );
        CUTSCENE_ENABLE_SKIP( 1 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U461, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U462, 1065353216, 0 );
        return 1;;
        break;
    }
    return 0;
}

void sub_18822(unknown uParam0, unknown uParam1)
{
    int iVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown Result;
    int iVar9;
    int iVar10;
    boolean bVar11;

    sub_1051( "CO", "P_Update_player_Weapon", "************" );
    iVar9 = 1;
    iVar10 = 1;
    bVar11 = false;
    if (NOT (IS_PED_DEAD( sub_1245() )))
    {
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_1245(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar7 ))
        {
            sub_1051( "CO", "I HAVE A RIFLE IN MY LEFT HAND", "************" );
            bVar11 = true;
        }
        if (NOT bVar11)
        {
            l_U38 = GET_WEAPON_FROM_HAND( sub_1245(), 0, 0 );
            l_U39 = GET_WEAPON_FROM_HAND( sub_1245(), 1, 0 );
            if (GET_DOES_WEAPON_EXIST( l_U39 ))
            {
                sub_1051( "CO", "I HAVE A LEFT", "************" );
                SELECT_WEAPON_TO_HAND( sub_1245(), 0, 1, 1 );
                bVar11 = true;
            }
            if (GET_DOES_WEAPON_EXIST( l_U38 ))
            {
                sub_1051( "CO", "I HAVE A RIGHT", "************" );
                SELECT_WEAPON_TO_HAND( sub_1245(), 0, 0, 1 );
                bVar11 = true;
            }
            uVar5 = GET_WEAPON_FROM_HOLSTER( sub_1245(), 0 );
            uVar6 = GET_WEAPON_FROM_HOLSTER( sub_1245(), 1 );
            if (GET_DOES_WEAPON_EXIST( uVar5 ))
            {
                sub_1051( "CO", "I HAVE A RIGHT HOLSTERED WEAPON", "************" );
                SELECT_WEAPON_TO_HAND( sub_1245(), uVar5, 0, uParam1 );
            }
            else if (GET_DOES_WEAPON_EXIST( uVar6 ))
            {
                sub_1051( "CO", "I HAVE A LEFT HOLSTERED WEAPON", "************" );
                SELECT_WEAPON_TO_HAND( sub_1245(), uVar6, 0, uParam1 );
            }
        }
        WAIT( 0 );
        if (NOT (IS_PED_DEAD( sub_1245() )))
        {
            Result = GET_WEAPON_FROM_HAND( sub_1245(), 0, 0 );
            if (GET_DOES_WEAPON_EXIST( Result ))
            {
                iVar4 = GET_WEAPON_AMMO_IN_CLIP( Result );
                sub_1051( "CO", "P_Update_player_Weapon : Bullet Count", ":" );
                sub_19545( iVar4 );
                if (iVar4 < 1)
                {
                    SET_WEAPON_AMMO( Result, 1 );
                }
                return Result;
            }
        }
    }
    return Result;
}

void sub_19545(unknown uParam0)
{
    return;
}

void sub_19738()
{
    sub_1051( "NS", "REQUEST_ASSETS_AFTER_START()", 0 );
    REQUEST_MODEL( 53136011 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( 350776838 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( -421260802 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( -83477950 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( 1247828213 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( 1553595752 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( 835430348 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( -2109060920 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( -1791365465 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( 1752855097 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( -490346798 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( -259554731 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( 90811417 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( 348539602 );
    "[doubled result, dropped if not asigned]";
    REQUEST_MODEL( -1439533652 );
    "[doubled result, dropped if not asigned]";
    sub_12215( -860528484, 0 );
    sub_12215( -2059906653, 0 );
    sub_12215( 1995486484, 0 );
    sub_12215( 833432206, 0 );
    sub_12215( 596676181, 0 );
    sub_12215( 1334765137, 0 );
    return;
}

void sub_20141(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_20400()
{
    vector vVar2;
    float fVar5;
    vector vVar6;
    vector vVar9;

    vVar2 = {-71.64221000, 177.36430000, 15.36041000};
    fVar5 = 86.57030000;
    if (NOT (IS_VEHICLE_DEAD( l_U262 )))
    {
        if (NOT (IS_PED_DEAD( l_U263 )))
        {
            TASK_HELI_MISSION( l_U263, l_U262, 0, 0, vVar2, 4, 5.00000000, 10, fVar5, 1, 1 );
        }
    }
    sub_8819( l_U264 );
    l_U264 = sub_20541( 1750472651, vVar2, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( l_U264 )) == 1)
    {
        SET_OBJECT_LIGHTS( l_U264, 1 );
        SET_OBJECT_COLLISION( l_U264, 0 );
        SET_OBJECT_PROOFS( l_U264, 1, 1, 1, 1, 1 );
        FREEZE_OBJECT_POSITION( l_U264, 1 );
    }
    if ((NOT (IS_VEHICLE_DEAD( l_U262 ))) AND ((DOES_VEHICLE_EXIST( l_U262 )) AND (DOES_OBJECT_EXIST( l_U264 ))))
    {
        vVar6 = {0.00000000, 0.20000000, 1.20000000};
        vVar9 = {4.71000000, 0.00000000, 0.00000000};
        FREEZE_OBJECT_POSITION( l_U264, 0 );
        ATTACH_OBJECT_TO_VEHICLE( l_U264, l_U262, 0, vVar6, vVar9 );
    }
    sub_20974( l_U265[0], g_U1308, 0, 0, 1, 0 );
    sub_21130( l_U265[0] );
    if (NOT (IS_PED_DEAD( l_U265[0] )))
    {
        SET_PED_HAS_SPECIAL_GUN_SOUND( l_U265[0], 1 );
    }
    sub_20974( l_U265[1], g_U1308, 0, 0, 1, 0 );
    sub_21130( l_U265[1] );
    if (NOT (IS_PED_DEAD( l_U265[1] )))
    {
        SET_PED_HAS_SPECIAL_GUN_SOUND( l_U265[1], 1 );
    }
    l_U270[2] = sub_20974( l_U265[2], g_U1308, 0, 0, 1, 0 );
    sub_21130( l_U265[2] );
    l_U292 = sub_20974( l_U291, 1001413062, 1, 0, 1, 0 );
    sub_21130( l_U291 );
    sub_21571( ref l_U265, 1, 0 );
    if (NOT (IS_VEHICLE_DEAD( l_U262 )))
    {
        if (NOT (IS_PED_DEAD( l_U265[0] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U265[0], l_U262, 0, l_U294[0], l_U300[0], l_U306[0], l_U312[0], l_U318, 1, 0, 0, 1 );
            CLEAR_PED_TASKS( l_U265[0] );
            l_U270[0] = GIVE_WEAPON_TO_PED_HAND( l_U265[0], g_U1308, 25000, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U265[0], 1 );
            if (NOT (IS_PED_DEAD( sub_1245() )))
            {
                TASK_AIM_GUN_AT_COORD( l_U265[0], l_U450, -1, 0 );
            }
            PED_ACTION_TREE_PLAY_NODE( l_U265[0], "/Global/S_FAV2_VIG_09/S_FAV2_INNER_R/PASSENGER" );
        }
        if (NOT (IS_PED_DEAD( l_U265[1] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U265[1], l_U262, 0, l_U294[1], l_U300[1], l_U306[1], l_U312[1], l_U318, 1, 0, 0, 1 );
            CLEAR_PED_TASKS( l_U265[1] );
            l_U270[1] = GIVE_WEAPON_TO_PED_HAND( l_U265[1], g_U1308, 25000, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U265[1], 1 );
            if (NOT (IS_PED_DEAD( sub_1245() )))
            {
                TASK_AIM_GUN_AT_COORD( l_U265[0], l_U450, -1, 0 );
            }
            PED_ACTION_TREE_PLAY_NODE( l_U265[1], "/Global/S_FAV2_VIG_09/S_FAV2_SKID/PASSENGER" );
        }
        if (NOT (IS_PED_DEAD( l_U265[2] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U265[2], l_U262, 0, l_U294[2], l_U300[2], l_U306[2], l_U312[2], l_U318, 1, 0, 0, 1 );
            CLEAR_PED_TASKS( l_U265[2] );
            SET_PED_CAN_BE_TARGETTED( l_U265[2], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U265[2], 1 );
            SET_PED_PROOFS( l_U265[2], 1, 1, 1, 1, 1 );
            PED_ACTION_TREE_PLAY_NODE( l_U265[2], "/Global/S_FAV2_VIG_09/S_FAV2_DRIVER/DRIVER" );
        }
        if (NOT (IS_PED_DEAD( l_U291 )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U291, 1 );
            SET_PED_AI_TEMPLATE( l_U291, "AIT_NORMAL" );
        }
    }
    sub_14779( ref l_U265, "piHeliMMEnemies_1_" );
    return;
}

void sub_20541(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_12215( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_20974(unknown uParam0, unknown uParam1, boolean bParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (bParam2)
        {
            Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, 25000, 0 );
        }
        if ((NOT (ARE_STRINGS_EQUAL( uParam5, "" ))) || (NOT (IS_STRING_NULL( uParam5 ))))
        {
            if (GET_DOES_WEAPON_EXIST( Result ))
            {
                SET_WEAPON_LIGHT_DATA_BY_NAME( Result, "Flashlight_Default" );
            }
        }
        SET_PED_COMBAT_MOVEMENT( uParam0, uParam3 );
    }
    return Result;
}

void sub_21130(unknown uParam0)
{
    sub_1051( "CO", "P_Setup_Enemy_For_MPM", 0 );
    CLEAR_PED_TASKS( uParam0 );
    SET_PED_MAX_HEALTH( uParam0, 500 );
    SET_PED_HEALTH( uParam0, 500, 0 );
    SET_PED_AS_ONE_SHOT_KILL( uParam0, 0 );
    SET_PED_SUFFERS_CRITICAL_HITS( uParam0, 0 );
    SET_PED_DIES_WHEN_INJURED( uParam0, 0 );
    SET_PED_COMBAT_ATTRIBUTES( uParam0, 1, 0 );
    SET_PED_ALLOWED_TO_KNEEL_AND_FIRE( uParam0, 0 );
    SET_PED_PERFECT_ACCURACY_OVERRIDE( uParam0, 1 );
    SET_PED_ACCURACY( uParam0, 31186664 );
    SET_PED_ALERTNESS( uParam0, 4 );
    SET_PED_IGNORE_LOS_CHECKS( uParam0, 1 );
    SET_PED_FLAG_BLOCK_GORE_REACTION( uParam0, 1 );
    SET_PED_CONSUMING_AMMO( uParam0, 0 );
    SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    if (NOT (IS_PED_DEAD( sub_1245() )))
    {
        REGISTER_TARGET( uParam0, sub_1245() );
    }
    return;
}

void sub_21571(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            sub_1051( "CO", "BRAINDEAD", "****" );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^)[I], uParam1 );
            FREEZE_PED_POSITION( (uParam0^)[I], uParam2 );
        }
        WAIT( 0 );
    }
    return;
}

void sub_22547()
{
    int I;
    int iVar3;
    int iVar4;
    float fVar5;

    iVar3 = 0;
    iVar4 = 0;
    fVar5 = GET_ADRENALINE_AMT();
    if (fVar5 <= 0.10000000)
    {
        SET_ADRENALINE_AMT( 0.10000000 );
    }
    for ( I = 0; I <= 2; I++ )
    {
        l_U275[I] = 0;
        l_U281[I] = 0;
        l_U286[I] = 75;
    }
    l_U275[3] = 0;
    l_U281[3] = 0;
    l_U286[3] = 150;
    if (NOT (IS_PED_DEAD( sub_1245() )))
    {
        CLEAR_PED_TASKS( sub_1245() );
        SET_PLAYER_CONTROL( sub_1267(), 0, 0 );
        SET_PLAYER_INVINCIBLE( sub_1267(), 1 );
    }
    sub_22738();
    ENABLE_MPM( 1 );
    DISPLAY_HUD( 0 );
    ENABLE_ALL_ADRENALINE( 0 );
    if ((NOT (IS_VEHICLE_DEAD( l_U262 ))) AND (DOES_VEHICLE_EXIST( l_U262 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( l_U262, 197 );
        SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( l_U262, l_U164 );
        SET_PLAYBACK_SPEED( l_U262, l_U156 );
    }
    if ((ISEQ_QUERY_STATE( -1410560251, 3 )) == 0)
    {
        ISEQ_REGISTER_ENTITY( -1410560251, "mpm_player", sub_1245(), 0 );
        ISEQ_START( -1410560251 );
        sub_20141( sub_1245(), l_U159, l_U162 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV2_MPM", "MPED_PSTL_FAV2_MPM_INTRO_CAM", 1, l_U498, l_U501, 0, 0 );
    }
    if (NOT (IS_PED_DEAD( sub_1245() )))
    {
        SET_PED_CONSUMING_AMMO( sub_1245(), 0 );
        SET_PLAYER_INVINCIBLE( sub_1267(), 1 );
        SET_PED_PROOFS( sub_1245(), 1, 1, 1, 1, 1 );
    }
    sub_23532();
    sub_23848( ref l_U93, 6, 0 );
    if (DOES_OBJECT_EXIST( l_U428 ))
    {
        PLAY_OBJECT_ANIM( l_U428, ref l_U411, ref l_U403, 0.00000000, 0, 1 );
    }
    SET_CAMERA_OVERRIDE( "S_FAV2_AIM_CAMERA", "", 0, 1, 1 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U461, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U462, 1065353216, 0 );
    if (NOT (IS_PED_DEAD( sub_1245() )))
    {
        ;
    }
    DO_SCREEN_FADE_IN( 0 );
    return;
}

void sub_22738()
{
    if (NOT (IS_VEHICLE_DEAD( l_U262 )))
    {
        if (NOT (IS_PED_DEAD( l_U265[0] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U265[0], l_U262, 0, l_U294[0], l_U300[0], l_U306[0], l_U312[0], l_U318, 1, 0, 0, 1 );
            PED_ACTION_TREE_PLAY_NODE( l_U265[0], "/Global/S_FAV2_VIG_09/S_FAV2_INNER_R/PASSENGER" );
        }
        if (NOT (IS_PED_DEAD( l_U265[1] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U265[1], l_U262, 0, l_U294[1], l_U300[1], l_U306[1], l_U312[1], l_U318, 1, 0, 0, 1 );
            PED_ACTION_TREE_PLAY_NODE( l_U265[1], "/Global/S_FAV2_VIG_09/S_FAV2_SKID/PASSENGER" );
        }
        if (NOT (IS_PED_DEAD( l_U265[2] )))
        {
            ATTACH_PED_TO_VEHICLE( l_U265[2], l_U262, 0, l_U294[2], l_U300[2], l_U306[2], l_U312[2], l_U318, 1, 0, 0, 1 );
            PED_ACTION_TREE_PLAY_NODE( l_U265[2], "/Global/S_FAV2_VIG_09/S_FAV2_DRIVER/DRIVER" );
        }
    }
    return;
}

void sub_23532()
{
    int I;
    vector[3] vVar3;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;

    array(ref vVar3, 3);
    sub_1051( "CO", "P_HeliShootAtPlayer", 0 );
    vVar3[0] = {-123.04000000, 212.26000000, 2.11000000};
    vVar3[1] = {-123.01000000, 211.87000000, 2.18000000};
    vVar3[2] = {-121.94000000, 213.16000000, 1.78000000};
    CLEAR_SEQUENCE_TASK( l_U293 );
    OPEN_SEQUENCE_TASK( ref l_U293 );
    if (NOT (IS_PED_DEAD( sub_1245() )))
    {
        TASK_SHOOT_AT_COORD( 0, l_U450, -1, -256437761, 1, 1 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_COMBAT_PED( 0, sub_1245() );
    }
    CLOSE_SEQUENCE_TASK( l_U293 );
    for ( I = 0; I <= 1; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U265[I] )))
        {
            sub_21130( l_U265[I] );
            TASK_PERFORM_SEQUENCE( l_U265[I], l_U293 );
        }
    }
    CLEAR_SEQUENCE_TASK( l_U293 );
    return;
}

void sub_23848(int iParam0, int iParam1, unknown uParam2)
{
    sub_1051( "CO", "CO_HANDLE_SAVEDATA : Saving Data", 0 );
    if ((g_U782 < iParam1) || (NOT iParam0->_fU0))
    {
        sub_1051( "CO", "CO_HANDLE_SAVEDATA : Saved Data", 0 );
        sub_24017( iParam0, iParam1, sub_1245(), g_U783[iParam1], g_U910[iParam1], g_U953[iParam1], g_U996[iParam1], uParam2 );
    }
    g_U782 = iParam1;
    sub_27634( g_U782 );
    return;
}

void sub_24017(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1051( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1051( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_4167( iParam1 );
        sub_24276( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_24727( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_24727( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24959( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_24727( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24959( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_24959( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_24727( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24959( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_24959( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_24959( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_24727( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_24959( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_24959( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_24959( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_24959( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_26517( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, g_U666, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1051( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_24276(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_1529( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1051( "TEH", "Ending context", 0 );
        sub_1051( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_24727(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_24959(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_26517(int iParam0)
{
    sub_3182( "CHECKPOINT DATA" );
    sub_26556( iParam0->_fU4 );
    sub_26579( iParam0->_fU16 );
    sub_26579( iParam0->_fU20 );
    sub_26579( iParam0->_fU24 );
    sub_19545( iParam0->_fU28 );
    sub_19545( iParam0->_fU56 );
    sub_19545( iParam0->_fU60 );
    sub_19545( iParam0->_fU64 );
    sub_19545( iParam0->_fU68 );
    sub_19545( iParam0->_fU72 );
    sub_19545( iParam0->_fU76 );
    sub_19545( iParam0->_fU80 );
    sub_19545( iParam0->_fU84 );
    sub_19545( iParam0->_fU88 );
    sub_19545( iParam0->_fU92 );
    sub_26579( iParam0->_fU32 );
    sub_19545( iParam0->_fU36 );
    sub_19545( iParam0->_fU40 );
    sub_19545( iParam0->_fU44 );
    sub_26579( iParam0->_fU136 );
    sub_26814( iParam0->_fU140 );
    sub_19545( iParam0->_fU52 );
    sub_3182( "---nRightHolsterAttachmentEnabled: " );
    sub_19545( iParam0->_fU96 );
    sub_3182( "---nRightHolsterAttachmentToggled: " );
    sub_19545( iParam0->_fU100 );
    sub_3182( "---nLeftHolsterAttachmentEnabled: " );
    sub_19545( iParam0->_fU104 );
    sub_3182( "---nLeftHolsterAttachmentToggled: " );
    sub_19545( iParam0->_fU108 );
    sub_3182( "---nRifleHolsterAttachmentEnabled: " );
    sub_19545( iParam0->_fU112 );
    sub_3182( "---nRifleHolsterAttachmentToggled: " );
    sub_19545( iParam0->_fU116 );
    sub_3182( "---nRightHandAttachmentEnabled: " );
    sub_19545( iParam0->_fU120 );
    sub_3182( "---nRightHandAttachmentToggled: " );
    sub_19545( iParam0->_fU124 );
    sub_3182( "---nLeftHandAttachmentEnabled: " );
    sub_19545( iParam0->_fU128 );
    sub_3182( "---nLeftHandAttachmentToggled: " );
    sub_19545( iParam0->_fU132 );
    sub_19545( g_U666 );
    sub_19545( 144 );
    return;
}

void sub_26556(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_26579(unknown uParam0)
{
    return;
}

void sub_26814(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_27634(unknown uParam0)
{
    sub_1051( "CO", "P_SETUP_INITIAL_TIMECYCLE", 0 );
    switch (uParam0)
    {
        case 0:
        case 1:
        case 2:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
        case 3:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 0 );
        break;
        case 4:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 10 );
        break;
        case 5:
        if (g_U1046 == 1)
        {
            sub_1051( "kja", "MCE_UFE_RUN bTimeofDayReleased = TRUE", 0 );
            FREEZE_TIME_OF_DAY( 20, 10 );
            break;
        }
        sub_1051( "kja", "MCE_UFE_RUN bTimeofDayReleased = FALSE: SO WE're SETTING WEATHER AND TOD TO 20:20", 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 20, 10 );
        case 6:
        case 7:
        case 8:
        if (g_U1046 == 1)
        {
            ;
        }
        else
        {
            SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
            SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
            FREEZE_TIME_OF_DAY( 21, 0 );
        }
        break;
        case 9:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 21, 0 );
        break;
        case 10:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 22, 0 );
        break;
        default:
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
    }
    return;
}

void sub_28463()
{
    sub_1051( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_1051( "CCB", "Starting the Favela2_MPM context...", 0 );
    START_CONTEXT( "Favela2_MPM" );
    return;
}

int sub_28739()
{
    int I;
    int iVar3;

    iVar3 = 1;
    sub_28752();
    sub_28807();
    if (NOT (sub_6974( ref l_U196 )))
    {
        if (NOT (IS_PED_DEAD( sub_1245() )))
        {
            if (IS_ANIMATED_CAMERA_PLAYING())
            {
                if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FAV2_MPM", "MPED_PSTL_FAV2_MPM_INTRO_CAM" )) - 200))
                {
                    PED_FINISH_ACTION_INTENTION( sub_1245(), 47 );
                    CAMERA_ANIMATED_STOP( 500, 1 );
                    sub_7084( ref l_U196, l_U205, 1, 0 );
                    sub_7220( ref l_U196 );
                    sub_30193();
                }
            }
        }
    }
    if (sub_7340( ref l_U196 ))
    {
        REENABLE_PLAYER_INPUT( 4 );
        REENABLE_PLAYER_INPUT( 6 );
        REENABLE_PLAYER_INPUT( 14 );
        REENABLE_PLAYER_INPUT( 15 );
        REENABLE_PLAYER_INPUT( 16 );
        REENABLE_PLAYER_INPUT( 17 );
        SET_CROSSHAIR_PULSE();
        ENABLE_CROSSHAIR( 1 );
        ACTIVATE_BULLET_TIME( 0, 0.37000000, 0 );
    }
    if (l_U153)
    {
        switch (l_U59)
        {
            case 0:
            if ((PED_GET_ACTION_INTENTION_STATUS( sub_1245(), 49 )) == 3)
            {
                sub_1051( "NS", "********* ACT_INT_SEQ_ACTION03 ********************", 0 );
                PED_FINISH_ACTION_INTENTION( sub_1245(), 49 );
                l_U59 = 1;
            }
            break;
            case 1:
            if (NOT (IS_PED_DEAD( sub_1245() )))
            {
                SET_PLAYER_CONTROL( sub_1267(), 1, 0 );
                SET_PLAYER_CONTROL( sub_1267(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            ENABLE_CROSSHAIR( 0 );
            if (NOT l_U275[0])
            {
                if (NOT (IS_PED_DEAD( l_U265[0] )))
                {
                    CLEAR_PED_TASKS( l_U265[0] );
                    PED_SET_ACTION_INTENTION( l_U265[0], 51, 1000, 0.00000000, 0.00000000, 0.00000000 );
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U265[0], 1 );
                }
            }
            if (NOT l_U275[1])
            {
                if (NOT (IS_PED_DEAD( l_U265[1] )))
                {
                    CLEAR_PED_TASKS( l_U265[1] );
                    PED_SET_ACTION_INTENTION( l_U265[1], 51, 1000, 0.00000000, 0.00000000, 0.00000000 );
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U265[1], 1 );
                }
            }
            if (NOT (IS_PED_DEAD( l_U291 )))
            {
                SET_PED_PROOFS( l_U291, 1, 1, 1, 1, 1 );
                PED_ACTION_TREE_PLAY_NODE( l_U291, "/Global/S_FAV2_VIG_09/S_FAV2_RPG/INTRO" );
                if ((NOT (IS_VEHICLE_DEAD( l_U262 ))) AND (DOES_VEHICLE_EXIST( l_U262 )))
                {
                    ATTACH_PED_TO_VEHICLE( l_U291, l_U262, 0, l_U294[3] - 0.80000000, l_U300[3], l_U306[3], l_U312[3], l_U318, 1, 0, 0, 1 );
                }
                SET_PED_DROPS_WEAPONS_WHEN_DEAD( l_U291, 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U291, 1 );
                SET_BULLET_CAM_ON_NEXT_PROJECTILE( l_U291, "PIST_CUSTOM_FAV2_MPM_01" );
            }
            DEACTIVATE_BULLET_TIME( 1, 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
            sub_30302( l_U478 );
            if ((l_U150 == 0) AND (l_U149 == 1))
            {
                sub_1051( "KA", "PLAY PH_ONESHOT_3 RPG GUY IS VISIBLE", 0 );
                AUDIO_MUSIC_PLAY_ONESHOT();
                AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_3_4", "", 0.00000000, 6000, 5000, -1082130432, 0 );
                l_U150 = 1;
            }
            if (((IS_VEHICLE_DEAD( l_U262 )) == 0) AND (((DOES_VEHICLE_EXIST( l_U262 )) == 1) AND ((IS_PED_DEAD( l_U265[0] )) == 0)))
            {
                ATTACH_PED_TO_VEHICLE( l_U265[0], l_U262, 0, l_U294[0] - 0.80000000, l_U300[0], l_U306[0], l_U312[0], l_U318, 1, 0, 0, 1 );
            }
            CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV2_CP_04", "VIG_09_F2_RPG_IN_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
            l_U59 = 2;
            break;
            case 2:
            l_U59 = 3;
            break;
            case 3:
            if (NOT IS_ANIMATED_CAMERA_PLAYING())
            {
                l_U59 = 4;
            }
            break;
            case 4:
            if ((NOT (IS_VEHICLE_DEAD( l_U262 ))) AND (DOES_VEHICLE_EXIST( l_U262 )))
            {
                SET_VEHICLE_COLLISION( l_U262, 0 );
            }
            if (NOT (IS_PED_DEAD( l_U291 )))
            {
                TASK_SHOOT_AT_COORD( l_U291, -120.89000000, 215.69000000, 1.13000000, 500, 1566631136, 1, 0 );
            }
            sub_31888();
            if (NOT (IS_PED_DEAD( l_U291 )))
            {
                SET_PED_CAN_BE_TARGETTED( l_U291, 0 );
                SET_PED_AIM_LOCKONABLE( l_U291, 0 );
            }
            l_U453 = 0;
            if (NOT (IS_PED_DEAD( sub_1245() )))
            {
                PED_SET_ACTION_INTENTION( sub_1245(), 54, 1000, 0, 0, 0 );
            }
            sub_30302( 1.00000000 );
            if (NOT (IS_PED_DEAD( l_U291 )))
            {
                SET_PED_PROOFS( l_U291, 0, 0, 0, 0, 0 );
            }
            SET_CAMERA_OVERRIDE( "S_FAV2_AIM_CAMERA", "", 0, 1, 1 );
            REENABLE_PLAYER_INPUT( 4 );
            REENABLE_PLAYER_INPUT( 6 );
            REENABLE_PLAYER_INPUT( 14 );
            REENABLE_PLAYER_INPUT( 15 );
            REENABLE_PLAYER_INPUT( 16 );
            REENABLE_PLAYER_INPUT( 17 );
            SET_CROSSHAIR_PULSE();
            ENABLE_CROSSHAIR( 1 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U463, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U464, 1065353216, 0 );
            ACTIVATE_BULLET_TIME( 0, 0.27000000, 0 );
            l_U153 = 0;
            l_U59 = 5;
            break;
            case 5: break;
        }
    }
    if (NOT l_U319)
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( sub_1245(), 52 )) == 3)
        {
            if (NOT l_U280)
            {
                sub_1051( "NS", "********* FAILED ********************", 0 );
                sub_19545( l_U291 );
                DEACTIVATE_BULLET_TIME( 1, 0 );
                STOP_SCRIPT_STREAM( 0 );
                if (NOT (IS_PED_DEAD( sub_1245() )))
                {
                    sub_1051( "NS", "********* PLAY_SCRIPT_STREAM_FROM_PED( PLAYER_PED_ID(), 1 ) ********************", 0 );
                    PLAY_SCRIPT_STREAM_FROM_PED( sub_1245(), 1 );
                }
                l_U458 = CREATE_CAM_WITH_PARAMS( "DEFAULT_SCRIPTED_CAMERA", -126.90000000, 212.95000000, 2.16000000, 2.19000000, -0.18000000, -44.85000000, 50.05000000, 0 );
                if ((DOES_VEHICLE_EXIST( l_U262 )) AND (NOT (IS_VEHICLE_DEAD( l_U262 ))))
                {
                    SET_PLAYBACK_SPEED( l_U262, 0.60000000 );
                }
                SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
                SET_CAM_ACTIVE( l_U458, 1 );
                RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
                if (NOT (IS_PED_DEAD( sub_1245() )))
                {
                    SET_PLAYER_CONTROL( sub_1267(), 1, 0 );
                    SET_PLAYER_CONTROL( sub_1267(), 0, 0 );
                    SET_PLAYER_INVINCIBLE( sub_1267(), 0 );
                    SET_PED_PROOFS( sub_1245(), 0, 0, 1, 0, 0 );
                }
                for ( I = 0; I <= 1; I++ )
                {
                    if (NOT (IS_PED_DEAD( sub_1245() )))
                    {
                        if (NOT l_U275[I])
                        {
                            if (NOT (IS_PED_DEAD( l_U265[I] )))
                            {
                                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U265[I], 1 );
                                CLEAR_PED_TASKS( l_U265[I] );
                                TASK_AIM_GUN_AT_COORD( l_U265[I], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1245() ), -1, 0 );
                            }
                        }
                    }
                }
                DISPLAY_HUD( 0 );
                ENABLE_CROSSHAIR( 0 );
                sub_16325( 1 );
                SHAKE_CAM( l_U458, "MEDIUM_EXPLOSION_SHAKE", 0.50000000 );
                SET_PAD_SHAKE( 0, l_U479, 250 );
                if (NOT (IS_PED_DEAD( sub_1245() )))
                {
                    SET_PED_VISIBLE( sub_1245(), 0 );
                }
                sub_7084( ref l_U62, 1000, 1, 0 );
                sub_7220( ref l_U62 );
                AUDIO_MUSIC_SUSPEND( l_U479 );
                FREEZE_PED_POSITION( sub_1245(), 0 );
            }
            else
            {
                sub_1051( "NS", "********* PASSED ********************", 0 );
                sub_10519( -1889224605, 0 );
                sub_9356( -1410560251, 1 );
                sub_7084( ref l_U347, l_U356, 1, 0 );
                sub_7220( ref l_U347 );
                l_U372 = l_U356 + 200;
                sub_7084( ref l_U363, l_U372, 1, 0 );
                sub_7220( ref l_U363 );
                sub_7084( ref l_U379, l_U388, 1, 0 );
                sub_7220( ref l_U379 );
                if (NOT (IS_PED_DEAD( sub_1245() )))
                {
                    SET_PLAYER_CONTROL( sub_1267(), 1, 0 );
                    SET_PLAYER_CONTROL( sub_1267(), 0, 0 );
                    SET_PLAYER_INVINCIBLE( sub_1267(), 0 );
                    SET_PED_PROOFS( sub_1245(), 0, 0, 0, 0, 0 );
                }
                DISPLAY_HUD( 0 );
                ENABLE_CROSSHAIR( 0 );
                SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
                ENABLE_MPM( 0 );
                ENABLE_ALL_ADRENALINE( 1 );
                l_U54 = 7;
            }
            l_U319 = 1;
        }
    }
    if ((sub_7340( ref l_U62 )) == 1)
    {
        SET_BULLET_CAM_PREF( sub_1245(), "MISS_DEATH_FALL_01A", "", "", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        sub_6148( sub_1245() );
    }
    return 0;
}

void sub_28752()
{
    if (l_U455)
    {
        DRAW_RECT( 0.50000000, 0.50000000, 1, 1, 0, 0, 0, 255 );
    }
    return;
}

void sub_28807()
{
    int I;
    int iVar3;
    int iVar4;
    float fVar5;
    float fVar6;
    int iVar7;

    for ( I = 0; I <= 1; I++ )
    {
        if (NOT l_U275[I])
        {
            l_U275[I] = sub_28856( l_U265[I], I, 0 );
        }
    }
    sub_29180();
    if (NOT l_U280)
    {
        l_U275[3] = sub_28856( l_U291, 3, 0 );
        if (NOT (IS_PED_DEAD( l_U291 )))
        {
            if (IS_EXPLOSION_IN_SPHERE( 2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U291 ), 20.00000000 ))
            {
                l_U275[3] = sub_28856( l_U291, 3, 1 );
                DEACTIVATE_BULLET_TIME( 1, 0 );
                if (NOT (IS_PED_DEAD( l_U265[0] )))
                {
                    iVar3++;
                }
                if (NOT (IS_PED_DEAD( l_U265[1] )))
                {
                    iVar3++;
                }
                sub_1051( "NS", "***************************", 0 );
                sub_19545( iVar3 );
                iVar4 = 200;
                fVar6 = 0.33000000;
                fVar5 = 1.00000000 - (iVar3 * fVar6);
                if (fVar5 > 0)
                {
                    iVar7 = (ROUND( iVar4 * fVar5 )) + 100;
                    if (NOT (IS_PED_DEAD( sub_1245() )))
                    {
                        SET_PED_HEALTH( sub_1245(), iVar7, 0 );
                    }
                }
                l_U280 = 1;
            }
        }
    }
    if (NOT (IS_PED_DEAD( l_U265[0] )))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( l_U265[0], 56 )) == 3)
        {
            sub_1051( "NS", "********* ACT_INT_SEQ_ACTION10 0 ********************", 0 );
            SET_PED_COLLISION( l_U265[0], 0 );
            SET_ARCADEMODE_EVENT( 3, l_U265[0] );
            sub_6148( l_U265[0] );
            sub_9042( l_U265[0] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U265[1] )))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( l_U265[1], 56 )) == 3)
        {
            sub_1051( "NS", "********* ACT_INT_SEQ_ACTION10 1 ********************", 0 );
            SET_PED_COLLISION( l_U265[1], 0 );
            SET_ARCADEMODE_EVENT( 3, l_U265[1] );
            sub_6148( l_U265[1] );
            sub_9042( l_U265[1] );
        }
    }
    return;
}

int sub_28856(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( sub_1245() )))
    {
        if ((DOES_PED_EXIST( uParam0 )) AND (NOT (IS_PED_DEAD( uParam0 ))))
        {
            if ((uParam2) || (HAS_PED_BEEN_DAMAGED_BY_PED( uParam0, sub_1245(), 0 )))
            {
                sub_1051( "NS", " *********** HELI PED KILLED **************", 0 );
                sub_19545( uParam1 );
                SET_PED_HEALTH( uParam0, 500, 0 );
                SET_PED_INVINCIBLE( uParam0, 1 );
                CLEAR_PED_TASKS( uParam0 );
                PED_SET_ACTION_INTENTION( uParam0, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                PED_SET_ACTION_INTENTION( uParam0, 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
                SET_PED_CAN_BE_TARGETTED( uParam0, 0 );
                SET_PED_CAN_BE_MELEED( uParam0, 0 );
                SET_PED_AIM_LOCKONABLE( uParam0, 0 );
                STOP_PED_SPEAKING( uParam0, 1 );
                CLEAR_PED_LAST_DAMAGE_ENTITY( uParam0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 1 );
                return 1;
            }
        }
    }
    return 0;
}

void sub_29180()
{
    int iVar2;

    if (NOT l_U453)
    {
        if (NOT (IS_PED_DEAD( l_U265[2] )))
        {
            if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U265[2] ), 1.00000000, ref iVar2 ))
            {
                if (iVar2 == sub_1245())
                {
                    sub_1051( "CO", "Holy shit I got shot at", "************" );
                    PED_SET_ACTION_INTENTION( l_U265[2], 47, 200, 0.00000000, 0.00000000, 0.00000000 );
                    l_U453 = 1;
                }
            }
        }
    }
    return;
}

void sub_30193()
{
    sub_1051( "NS", "P_RETURN_MPM_CONTROL()", 0 );
    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Fav2_MPM_TileSlide_S", -124.42400000, 210.55200000, 1.96600000, 0, 0, 0, 1065353216 );
    sub_30302( 1.00000000 );
    if (NOT (IS_PED_DEAD( sub_1245() )))
    {
        PLAY_SCRIPT_STREAM_FROM_PED( sub_1245(), 0 );
    }
    if ((NOT (IS_VEHICLE_DEAD( l_U262 ))) AND (DOES_VEHICLE_EXIST( l_U262 )))
    {
        sub_1051( "NS", "********* fHeliSpeed02 ********************", 0 );
        SET_PLAYBACK_SPEED( l_U262, l_U156 );
    }
    sub_7877( ref l_U489 );
    return;
}

void sub_30302(unknown uParam0)
{
    int I;
    char[32] cVar4;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar4, "TILE_MPM_ROOT_", 32 );
    for ( I = 0; I <= 14; I++ )
    {
        uVar12 = {cVar4};
        if (I < 9)
        {
            ConcatString(ref uVar12, "0", 32);
        }
        ConcatString(ref uVar12, I + 1, 32);
        if ((DOES_OBJECT_EXIST( l_U323[I] )) == 1)
        {
            SET_OBJECT_ANIM_SPEED( l_U323[I], ref uVar12, ref l_U253, uParam0 );
        }
    }
    return;
}

void sub_31888()
{
    int I;

    CLEAR_SEQUENCE_TASK( l_U293 );
    OPEN_SEQUENCE_TASK( ref l_U293 );
    if (NOT (IS_PED_DEAD( sub_1245() )))
    {
        TASK_COMBAT_PED( 0, sub_1245() );
    }
    CLOSE_SEQUENCE_TASK( l_U293 );
    for ( I = 0; I <= 1; I++ )
    {
        if (NOT l_U275[I])
        {
            if ((NOT (IS_PED_DEAD( sub_1245() ))) AND (NOT (IS_PED_DEAD( l_U265[I] ))))
            {
                CLEAR_PED_TASKS( l_U265[I] );
                REGISTER_TARGET( l_U265[I], sub_1245() );
                SET_PED_PROOFS( l_U265[I], 0, 0, 0, 0, 0 );
                SET_PED_CAN_BE_TARGETTED( l_U265[I], 0 );
                SET_PED_AIM_LOCKONABLE( l_U265[I], 0 );
                TASK_PERFORM_SEQUENCE( l_U265[I], l_U293 );
            }
        }
    }
    return;
}

int sub_33701()
{
    unknown uVar2;

    switch (l_U56)
    {
        case 1:
        l_U56 = 2;
        break;
        case 2:
        if (HAS_CUTSCENE_LOADED())
        {
            l_U56 = 3;
        }
        break;
        case 3:
        l_U56 = 4;
        break;
        case 4:
        sub_7877( ref l_U166 );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_1245(), -114.64000000, 222.73000000, -5.04000000, -40.82700000 );
        ISEQ_REGISTER_ENTITY( -1889224605, "player", sub_1245(), 0 );
        CUTSCENE_REGISTER_ISEQ( -1889224605 );
        if ((IS_PED_DEAD( sub_1245() )) == 0)
        {
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_1245(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
        }
        uVar2 = sub_33990();
        sub_34380( ref l_U502, 0, 1 );
        sub_35462( l_U502, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "w_pi_pt92_aa_h", 0 );
        }
        APPLY_PLAYER_PRELOAD_VARIATION( sub_1245(), 0 );
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        l_U56 = 6;
        break;
        case 6:
        sub_9042( l_U291 );
        sub_9042( l_U263 );
        sub_9008( ref l_U265 );
        sub_8819( l_U264 );
        sub_8819( l_U428 );
        sub_13019( l_U262 );
        sub_7084( ref l_U166, l_U175, 1, 0 );
        sub_7220( ref l_U166 );
        sub_7084( ref l_U176, l_U185, 1, 0 );
        sub_7220( ref l_U176 );
        sub_35769();
        sub_35787();
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        l_U56 = 7;
        break;
        case 7:
        if (HAS_CUTSCENE_FINISHED())
        {
            CUTSCENE_ENABLE_SKIP( 1 );
            l_U56 = 0;
            sub_35999( l_U502, 1 );
            sub_35462( l_U502, 1 );
            return 1;
        }
        else if (sub_7340( ref l_U176 ))
        {
            ;
        }
        if (l_U155 == 0)
        {
            if (GET_CUTSCENE_TIME_MS() > 3250)
            {
                sub_1051( "kja", "Fade music now - player went through roof", 0 );
                AUDIO_MUSIC_SUSPEND( 6000 );
                l_U155 = 1;
            }
        }
        sub_36306();;
        break;
        case 0: break;
    }
    return 0;
}

int sub_33990()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1245() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_1245(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_34053( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1245(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_1245(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_1245(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

int sub_34053(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_34380(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_34392( iParam0 );
    if ((IS_PED_DEAD( sub_1245() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_1245(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_34053( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_34615( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_1245(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_1245(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_1245(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_1245(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_1245() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_1245(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1245(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_1245(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1245(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_1245() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_1245(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_34615( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_1245(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_1245(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1245(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_34392(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_34615(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_35462(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

void sub_35769()
{
    return;
}

void sub_35787()
{
    int I;
    char[32] cVar3;

    for ( I = 0; I <= 14; I++ )
    {
        StrCopy( ref cVar3, "TILE_MPM_ROOT_", 32 );
        if (I < 9)
        {
            ConcatString(ref cVar3, "0", 32);
        }
        ConcatString(ref cVar3, I + 1, 32);
        if ((DOES_OBJECT_EXIST( l_U323[I] )) == 1)
        {
            SET_OBJECT_ANIM_CURRENT_TIME( l_U323[I], ref cVar3, ref l_U253, l_U165 );
            SET_OBJECT_ANIM_SPEED( l_U323[I], ref cVar3, ref l_U253, 1.00000000 );
        }
    }
    return;
}

void sub_35999(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;

    if ((IS_PED_DEAD( sub_1245() )) == 0)
    {
        uVar21 = uParam0._fU0._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
        {
            SELECT_WEAPON_TO_HAND( sub_1245(), uVar21, 0, uParam18 );
        }
        uVar22 = uParam0._fU12._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
        {
            SELECT_WEAPON_TO_HAND( sub_1245(), uVar22, 1, uParam18 );
        }
        uVar23 = uParam0._fU24._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar23 )) == 1)
        {
            SELECT_WEAPON_TO_HAND( sub_1245(), uVar23, 0, uParam18 );
        }
    }
    return;
}

void sub_36306()
{
    if (sub_7340( ref l_U347 ))
    {
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Fav2_MPM_Roof_Brk_S", l_U357, l_U360, 1065353216 );
        sub_1051( "BSW", "P_CHECK_FOR_PARTICLE_FX play 1", 0 );
    }
    if (sub_7340( ref l_U363 ))
    {
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( "Fav2_MPM_Roof_Brk_S", l_U373, l_U376, 1065353216 );
        sub_1051( "BSW", "P_CHECK_FOR_PARTICLE_FX play 2", 0 );
    }
    if (sub_7340( ref l_U379 ))
    {
        ;
    }
    return;
}

int sub_36594()
{
    switch (l_U57)
    {
        case 1:
        if (NOT (IS_PED_DEAD( sub_1245() )))
        {
            SET_PLAYER_CONTROL( sub_1267(), 0, 0 );
        }
        sub_36684( ref l_U139 );
        sub_36766( 0, sub_1245(), "MAX", ref l_U139, 2, 0 );
        sub_36984( "SFV2_MGUFRA", ref l_U139, 8, 1 );
        SET_FORCED_AIM_INTENTION_DIRECTION( 0.57870000, 0.81130000, 0.08430000 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV2_CP_05", "B_OUT_MID_07_F2_FWD_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        SET_FREEZE_HEADING_BLEND( 3000 );
        l_U57 = 3;
        break;
        case 3:
        if (IS_ANIMATED_CAMERA_PLAYING() == 1)
        {
            if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FAV2_CP_05", "B_OUT_MID_07_F2_FWD_CAM" )) - 1500))
            {
                sub_1051( "NS", "Stopping animated cam", 0 );
                DEACTIVATE_BULLET_TIME( 1, 0 );
                SET_CAMERA_OVERRIDE( "", "", 0, 0, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
                CAMERA_FREEZE_FRAME( 1, 1000, 0, 0 );
                l_U57 = 0;
                sub_7084( ref l_U186, l_U195, 1, 0 );
                sub_7220( ref l_U186 );
                l_U57 = 4;
            }
        }
        break;
        case 4:
        if (sub_7340( ref l_U186 ))
        {
            RESET_FORCED_AIM_INTENTION_DIRECTION();
            sub_38135( 1, 1 );
            if (NOT (IS_PLAYER_DEAD( sub_1267() )))
            {
                SET_PLAYER_INVINCIBLE( sub_1267(), 0 );
            }
            if (NOT (IS_PED_DEAD( sub_1245() )))
            {
                SET_PED_PROOFS( sub_1245(), 0, 0, 0, 0, 0 );
                SET_PED_CONSUMING_AMMO( sub_1245(), 1 );
            }
            return 1;
        }
        break;
        case 0: break;
    }
    return 0;
}

void sub_36684(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_36766(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_36984(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_37008( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_37008(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_37063( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_37063(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_37098( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_37592( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_37098(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_37592(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_38135(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1245() )))
    {
        SET_PLAYER_CONTROL( sub_1267(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1245(), 0 );
        if (bParam0)
        {
            sub_38216();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_38216()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1245() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1245(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1245(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1245(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1245(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_38513(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_38555()
{
    int iVar2;
    unknown uVar3;

    if (IS_TIME_OF_DAY_FROZEN() == 0)
    {
        GET_TIME_OF_DAY( ref iVar2, ref uVar3 );
        if (iVar2 == 21)
        {
            FREEZE_TIME_OF_DAY( 21, 0 );
        }
    }
    return;
}

void sub_38653()
{
    sub_1051( "SP", "FAVELA RAID: P_UNLOAD_ASSETS", 0 );
    sub_16964();
    sub_38710();
    sub_9356( -1410560251, 1 );
    sub_38865( "LEVEL/S_FAV2/S_FAV2_VIG_09" );
    sub_17037( 1750472651 );
    sub_17037( l_U261 );
    sub_17037( 572505350 );
    sub_38927( ref l_U403 );
    sub_38927( ref l_U253 );
    sub_38927( "veh@helicopter" );
    sub_38927( "LEVEL_S_FAV2_MPM" );
    sub_38927( "LEVEL_S_FAV2_CP_04" );
    sub_38927( "LEVEL_S_FAV2_CP_05" );
    sub_17037( -433063323 );
    sub_39077( 1001413062 );
    sub_17037( 1686109657 );
    CLEAR_NAMED_CUTSCENE( ref l_U237 );
    STOP_SCRIPT_STREAM( 0 );
    STOP_SCRIPT_STREAM( 1 );
    return;
}

void sub_38710()
{
    int I;

    for ( I = 0; I <= 5; I++ )
    {
        sub_8819( l_U340[I] );
    }
    sub_17037( -860528484 );
    sub_17037( -2059906653 );
    sub_17037( 1995486484 );
    sub_17037( 833432206 );
    sub_17037( 596676181 );
    sub_17037( 1334765137 );
    return;
}

void sub_38865(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}

void sub_38927(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_39077(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}


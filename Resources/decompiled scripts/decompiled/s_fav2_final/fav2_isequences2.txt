void main()
{
    unknown uVar2;

    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = 0;
    l_U40 = 0;
    l_U42 = {-12.25000000, 62.77300000, 29.24600000};
    l_U45 = 35.00000000;
    l_U46 = {-38.43240000, 68.74062000, 27.30552000};
    l_U49 = 0;
    l_U50 = 0;
    l_U51 = 0;
    l_U52 = 0;
    l_U54 = {-45.00000000, 63.20000000, 27.28900000};
    l_U57 = 90.00000000;
    l_U58 = {-24.78862000, 68.61852000, 27.18471000};
    l_U61 = 0;
    l_U62 = 0;
    l_U63 = 0;
    l_U78 = {-43.92000000, 74.34000000, 27.51000000};
    l_U81 = -174.00000000;
    l_U82 = 0;
    l_U83 = 0;
    l_U84 = 0;
    l_U85 = 0;
    l_U87 = {-41.80000000, 69.20000000, 27.30500000};
    l_U90 = 112.00000000;
    l_U91 = {-12.37837000, 68.68969000, 27.27375000};
    l_U94 = 0;
    l_U95 = 0;
    l_U96 = 0;
    l_U97 = 0;
    l_U99 = {-17.80000000, 63.50000000, 27.95800000};
    l_U102 = 220.00000000;
    l_U103 = {-35.53223000, 68.94478000, 27.30577000};
    l_U106 = 0;
    l_U107 = 0;
    l_U108 = 0;
    l_U109 = 0;
    l_U110 = 0;
    l_U111 = {-128.43820000, 118.22180000, 10.88082000};
    l_U114 = 110.36330000;
    l_U115 = {-139.90000000, 120.24300000, 9.47600000};
    l_U118 = 180.00000000;
    l_U119 = {-140.54900000, 117.98800000, 9.48600000};
    l_U122 = 225.10600000;
    l_U151 = 0;
    sub_735( "SP", "Script fav2_iSequences is starting...", "###" );
    uVar2 = sub_860( sub_784(), 456708483, 200, 0, 1 );
    sub_1199( 1000 );
    while (true)
    {
        sub_1283();
        WAIT( 0 );
    }
    sub_735( "SP", "Script fav2_iSequences is terminating...", "###" );
    return;
}

void sub_735(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

int sub_784()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_806() );
    }
    return 0;
}

void sub_806()
{
    return GET_PLAYER_ID();
}

void sub_860(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_1166( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_1166(unknown uParam0)
{
    return;
}

void sub_1199(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1283()
{
    if (l_U151 == 0)
    {
        START_WIDGET_GROUP( "Interactive Sequence Test Helper" );
        START_WIDGET_GROUP( "S_FAV2_06_CSCVR_4" );
        ADD_WIDGET_STRING( "CS with pistol in left side wall cover. Runs out of cover while aiming." );
        ADD_WIDGET_BOOL( "Teleport player to the Sequence", ref l_U37 );
        ADD_WIDGET_BOOL( "Start Sequence", ref l_U38 );
        ADD_WIDGET_BOOL( "Kill Sequence", ref l_U39 );
        START_WIDGET_GROUP( "CSCVR4_MALE" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U42._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U42._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U42._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U45, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos X", ref l_U46._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos Y", ref l_U46._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos Z", ref l_U46._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "S_FAV2_06_CSCVR_6" );
        ADD_WIDGET_STRING( "CS with pistol in left side wall cover. Comes out of cover while taunting/shooting." );
        ADD_WIDGET_BOOL( "Teleport player to the Sequence", ref l_U49 );
        ADD_WIDGET_BOOL( "Start Sequence", ref l_U50 );
        ADD_WIDGET_BOOL( "Kill Sequence", ref l_U51 );
        START_WIDGET_GROUP( "CSCVR6_MALE" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U54._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U54._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U54._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U57, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos X", ref l_U58._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos Y", ref l_U58._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos Z", ref l_U58._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "S_FAV2_06_CSCVR2_4" );
        ADD_WIDGET_STRING( "CS with pistol retreats, leaps and rolls over cover. Retreats from cover running." );
        ADD_WIDGET_BOOL( "Teleport player to the Sequence", ref l_U82 );
        ADD_WIDGET_BOOL( "Start Sequence", ref l_U83 );
        ADD_WIDGET_BOOL( "Kill Sequence", ref l_U84 );
        START_WIDGET_GROUP( "CSCVR24_MALE" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U87._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U87._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U87._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U90, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos X", ref l_U91._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos Y", ref l_U91._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos Z", ref l_U91._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "S_FAV2_06_CSCVR2_R2" );
        ADD_WIDGET_STRING( "CS with rifle retreats, scoots around right side cover. Retreats from cover running." );
        ADD_WIDGET_BOOL( "Teleport player to the Sequence", ref l_U94 );
        ADD_WIDGET_BOOL( "Start Sequence", ref l_U95 );
        ADD_WIDGET_BOOL( "Kill Sequence", ref l_U96 );
        START_WIDGET_GROUP( "CSCVR2R2_MALE" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U99._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U99._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U99._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U102, -360.00000000, 360.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos X", ref l_U103._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos Y", ref l_U103._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Goto Pos Z", ref l_U103._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( " EXPLOSION GUY " );
        ADD_WIDGET_STRING( " EXPLOSION GUY " );
        ADD_WIDGET_BOOL( "Teleport player ", ref l_U61 );
        ADD_WIDGET_BOOL( "Start Sequence", ref l_U62 );
        ADD_WIDGET_BOOL( "Kill Sequence", ref l_U63 );
        START_WIDGET_GROUP( "enemy position" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U78._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U78._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U78._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U81, -360.00000000, 360.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( " B_OUT_MID_03 " );
        ADD_WIDGET_STRING( " B_OUT_MID_03 " );
        ADD_WIDGET_BOOL( "Teleport player ", ref l_U106 );
        ADD_WIDGET_BOOL( "Load Sequence", ref l_U107 );
        ADD_WIDGET_BOOL( "StartSequence", ref l_U108 );
        ADD_WIDGET_BOOL( "Kill Sequence", ref l_U109 );
        START_WIDGET_GROUP( "ufe position" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U115._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U115._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U115._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U118, -360.00000000, 360.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "cs position" );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U119._fU0, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U119._fU4, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U119._fU8, -5000.00000000, 5000.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Heading", ref l_U122, -360.00000000, 360.00000000, 0.10000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U151 = 1;
    }
    sub_4388();
    sub_6588();
    sub_7316();
    sub_7593();
    return;
}

void sub_4388()
{
    vector vVar2;
    float fVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;

    if (l_U37 == 1)
    {
        sub_735( "SP", "Teleporting player to the S_FAV2_06_CSCVR_4 sequence", "###" );
        vVar2 = {-16.46051000, 67.44594000, 27.21306000};
        fVar5 = 207.17050000;
        sub_4510( 1000 );
        sub_4598( sub_784(), vVar2, fVar5 );
        LOAD_SCENE( vVar2 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.70681500, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -1.07129400, 1065353216, 0 );
        sub_1199( 1000 );
        l_U37 = 0;
    }
    if (l_U38 == 1)
    {
        sub_735( "SP", "Starting the S_FAV2_06_CSCVR_4 sequence", "###" );
        l_U40 = 0;
        sub_4798( -418092171, 1 );
        sub_5003( -418092171, 1 );
        sub_5204( 43800727, 1 );
        sub_5391( ref uVar6, l_U42, l_U45, 43800727, 4, 1, 0, 0, 0 );
        sub_5489( l_U41 );
        l_U41 = sub_5564( ref uVar6 );
        if (((IS_PED_DEAD( l_U41 )) == 0) AND ((DOES_PED_EXIST( l_U41 )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U41, 1 );
            uVar19 = sub_860( l_U41, 68019059, 200, 0, 1 );
        }
        ISEQ_REGISTER_ENTITY( -418092171, "cscvr4_male", l_U41, 0 );
        ISEQ_START( -418092171 );
        l_U38 = 0;
    }
    if (l_U39 == 1)
    {
        sub_735( "SP", "Killing the S_FAV2_06_CSCVR_4 sequence", "###" );
        sub_4798( -418092171, 1 );
        sub_5489( l_U41 );
        l_U40 = 0;
        l_U39 = 0;
    }
    if (l_U40 == 0)
    {
        if (((IS_PED_DEAD( l_U41 )) == 0) AND ((DOES_PED_EXIST( l_U41 )) == 1))
        {
            OPEN_SEQUENCE_TASK( ref uVar20 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U46, 3, -1, 1048576000, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( uVar20 );
            TASK_PERFORM_SEQUENCE( l_U41, uVar20 );
            CLEAR_SEQUENCE_TASK( uVar20 );
            l_U40 = 1;
        }
    }
    return;
}

void sub_4510(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_4598(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_4798(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_5003(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_5204(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_1166( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_5391(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_5489(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_5564(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_5204( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_6043( iParam0->_fU40 );
    sub_6123( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_6043(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_6123(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_6588()
{
    vector vVar2;
    float fVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;

    if (l_U49 == 1)
    {
        sub_735( "SP", "Teleporting player to the S_FAV2_06_CSCVR_6 sequence", "###" );
        vVar2 = {-49.17629000, 64.47679000, 27.29404000};
        fVar5 = 258.65030000;
        sub_4510( 1000 );
        sub_4598( sub_784(), vVar2, fVar5 );
        LOAD_SCENE( vVar2 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 11.80635000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -25.69791000, 1065353216, 0 );
        sub_1199( 1000 );
        l_U49 = 0;
    }
    if (l_U50 == 1)
    {
        sub_735( "SP", "Starting the S_FAV2_06_CSCVR_6 sequence", "###" );
        l_U52 = 0;
        sub_4798( 51716990, 1 );
        sub_5003( 51716990, 1 );
        sub_5204( 43800727, 1 );
        sub_5391( ref uVar6, l_U54, l_U57, 43800727, 4, 1, 0, 0, 0 );
        sub_5489( l_U53 );
        l_U53 = sub_5564( ref uVar6 );
        if (((IS_PED_DEAD( l_U53 )) == 0) AND ((DOES_PED_EXIST( l_U53 )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U53, 1 );
            uVar19 = sub_860( l_U53, 68019059, 200, 0, 1 );
        }
        ISEQ_REGISTER_ENTITY( 51716990, "cscvr6_male", l_U53, 0 );
        ISEQ_START( 51716990 );
        l_U50 = 0;
    }
    if (l_U51 == 1)
    {
        sub_735( "SP", "Killing the S_FAV2_06_CSCVR_6 sequence", "###" );
        sub_4798( 51716990, 1 );
        sub_5489( l_U53 );
        l_U52 = 0;
        l_U51 = 0;
    }
    if (l_U52 == 0)
    {
        if (((IS_PED_DEAD( l_U53 )) == 0) AND ((DOES_PED_EXIST( l_U53 )) == 1))
        {
            OPEN_SEQUENCE_TASK( ref uVar20 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U58, 3, -1, 1048576000, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( uVar20 );
            TASK_PERFORM_SEQUENCE( l_U53, uVar20 );
            CLEAR_SEQUENCE_TASK( uVar20 );
            l_U52 = 1;
        }
    }
    return;
}

void sub_7316()
{
    if (l_U61)
    {
        DO_SCREEN_FADE_OUT( 0 );
        LOAD_SCENE( -43.58000000, 71.40000000, 27.16000000 );
        sub_4598( sub_784(), -43.58000000, 71.40000000, 27.16000000, 80.00000000 );
        DO_SCREEN_FADE_IN( 0 );
        l_U61 = 0;
    }
    if (l_U62)
    {
        sub_5489( l_U64 );
        sub_5391( ref l_U65, l_U78, l_U81, 43800727, 4, 1, 0, 0, 0 );
        sub_5003( -1368781135, 1 );
        l_U64 = sub_5564( ref l_U65 );
        ISEQ_REGISTER_ENTITY( -1368781135, "PED", l_U64, 0 );
        ISEQ_START( -1368781135 );
        l_U62 = 0;
    }
    if (l_U63)
    {
        ISEQ_UNREGISTER_ENTITY( -1368781135, "PED" );
        sub_4798( -1368781135, 1 );
        sub_5489( l_U64 );
        l_U63 = 0;
    }
    return;
}

void sub_7593()
{
    if (l_U106 == 1)
    {
        sub_4510( 1000 );
        sub_4598( sub_784(), l_U111, l_U114 );
        LOAD_SCENE( l_U111 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 1.11075300, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -3.80076200, 1065353216, 0 );
        sub_1199( 1000 );
        l_U106 = 0;
    }
    if (l_U107 == 1)
    {
        sub_4798( -1725804306, 1 );
        sub_5003( -1725804306, 1 );
        sub_5204( 1953994288, 1 );
        sub_5204( -194111775, 1 );
        sub_7770( -168327769, 1 );
        sub_7770( 406496141, 1 );
        sub_7869( ref l_U138, l_U115, l_U118, -1803991131, 7, 3, 2, 0, 0 );
        sub_7869( ref l_U124, l_U119, l_U122, 1115622901, 7, 3, 2, 0, 0 );
        sub_5489( l_U137 );
        l_U137 = sub_5564( ref l_U138 );
        if (((IS_PED_DEAD( l_U137 )) == 0) AND ((DOES_PED_EXIST( l_U137 )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U137, 1 );
            sub_860( l_U137, -168327769, 25000, 0, 0 );
        }
        sub_5489( l_U123 );
        l_U123 = sub_5564( ref l_U124 );
        if (((IS_PED_DEAD( l_U123 )) == 0) AND ((DOES_PED_EXIST( l_U123 )) == 1))
        {
            SET_PED_AS_ONE_SHOT_KILL( l_U123, 1 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U123, 1 );
        }
        l_U107 = 0;
    }
    if (l_U108 == 1)
    {
        CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED( sub_806() );
        if (((IS_PED_DEAD( l_U123 )) == 0) AND ((DOES_PED_EXIST( l_U123 )) == 1))
        {
            ISEQ_REGISTER_ENTITY( -1725804306, "cs_1", l_U123, 0 );
            SET_PED_SYNC_POINT( l_U123, l_U119, l_U122 );
        }
        if (((IS_PED_DEAD( l_U137 )) == 0) AND ((DOES_PED_EXIST( l_U137 )) == 1))
        {
            ISEQ_REGISTER_ENTITY( -1725804306, "ufe_1", l_U137, 0 );
            SET_PED_SYNC_POINT( l_U137, l_U115, l_U118 );
        }
        ISEQ_START( -1725804306 );
        if (((IS_PED_DEAD( l_U137 )) == 0) AND ((DOES_PED_EXIST( l_U137 )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U137, 0 );
        }
        l_U110 = 1;
        l_U108 = 0;
    }
    if (l_U110 == 1)
    {
        sub_735( "SA", "Running S_FAV2_B_OUT_MID_03_F2_B", 0 );
        if (HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED( sub_806() ))
        {
            sub_735( "SA", "Interupting S_FAV2_B_OUT_MID_03_F2_B", 0 );
            if (NOT (IS_PED_DEAD( l_U137 )))
            {
                PED_SET_ACTION_INTENTION( l_U137, 47, 1000, 0, 0, 0 );
            }
            CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED( sub_806() );
            l_U110 = 0;
        }
    }
    if (l_U109 == 1)
    {
        l_U110 = 0;
        ISEQ_UNREGISTER_ENTITY( -1725804306, "cs_1" );
        ISEQ_UNREGISTER_ENTITY( -1725804306, "ufe_1" );
        ISEQ_TERMINATE( -1725804306 );
        sub_5489( l_U123 );
        sub_5489( l_U137 );
        l_U109 = 0;
    }
    return;
}

void sub_7770(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_7869(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}


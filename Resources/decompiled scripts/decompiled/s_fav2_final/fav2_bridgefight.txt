void main()
{
    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U38 = 0;
    l_U39 = 0;
    l_U40 = 1500;
    l_U86 = 0;
    l_U87 = 0;
    l_U88 = 0;
    l_U89 = 0;
    l_U90 = 0;
    l_U498 = 100;
    l_U535 = 300;
    l_U548 = 0;
    l_U571 = -32.01215000;
    l_U572 = -7.27043200;
    l_U573 = 0;
    l_U574 = 0;
    l_U609 = 0;
    l_U610 = 0;
    l_U611 = 0;
    l_U612 = 0;
    l_U613 = 0;
    l_U614 = 1;
    l_U624 = 18250;
    l_U634 = 9325;
    l_U635 = {-112.24000000, 308.17000000, -10.00000000};
    l_U638 = 180;
    l_U639 = {-113.38000000, 307.61000000, -10.01000000};
    l_U642 = -139.91400000;
    l_U681 = {-105.54000000, 327.93000000, -14.33000000};
    l_U684 = 248.60100000;
    l_U707 = 0;
    sub_502( "SP", "Script fav2_bridgeFight.sc is starting...", 0 );
    l_U87 = 1;
    while (IS_EXITFLAG_SET() == 0)
    {
        sub_571();
        sub_8406();
        WAIT( 0 );
    }
    sub_2968();
    sub_35154();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "fav2_bridgeFight" );
    SET_EXITFLAG_RESPONSE();
    sub_502( "SP", "Script fav2_bridgeFight.sc is terminating...", 0 );
    return;
}

void sub_502(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_571()
{
    if (g_U782 == 9)
    {
        switch (l_U90)
        {
            case 0:
            if ((sub_726()) || (IS_PED_DEAD( sub_653() )))
            {
                l_U90 = 1;
                sub_502( "kja", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_1223())
            {
                l_U90 = 2;
            }
            else if ((sub_1263( 0 )) == 1)
            {
                l_U90 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_653() )))
            {
                if ((g_U1312[9]._fU40 != 4) AND (g_U1312[9]._fU40 != 0))
                {
                    sub_502( "kja", "Shutting down script for MCE_FINAL_FIGHT.", 0 );
                    sub_2712( ref g_U1312[9] );
                }
                l_U90 = 3;
                sub_502( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_502( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_653() ))) AND (NOT (IS_PLAYER_DEAD( sub_675() ))))
            {
                SET_PLAYER_CONTROL( sub_675(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_653() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_653(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            sub_2968();
            l_U90 = 4;
            sub_502( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_502( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_4123( ref l_U50, sub_653() );
            l_U90 = 5;
            sub_502( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_502( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            sub_2712( ref g_U1312[9] );
            l_U87 = 1;
            l_U90 = 0;
            sub_502( "kja", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    else if ((sub_1223()) || ((IS_PED_DEAD( sub_653() )) == 1))
    {
        sub_2712( ref g_U1312[9] );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_653()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_675() );
    }
    return 0;
}

void sub_675()
{
    return GET_PLAYER_ID();
}

int sub_726()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        g_U665 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_653() )))
        {
            SET_PED_FORCED_TO_WALK( sub_653(), 0 );
            SET_PLAYER_FORCED_AIM( sub_675(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_675(), 1 );
            if ((IS_PED_VISIBLE( sub_653() )) == 0)
            {
                SET_PED_VISIBLE( sub_653(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1223()
{
    return g_U648;
}

int sub_1263(int iParam0)
{
    iParam0 = 1;
    switch (l_U39)
    {
        case 0:
        if (NOT (sub_1324( ref l_U41 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_653() )))
            {
                l_U40 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1434( ref l_U41, l_U40, 1, 1 );
            sub_1570( ref l_U41 );
        }
        if (sub_1690( ref l_U41 ))
        {
            sub_502( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_653() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_675() )))
            {
                SET_PLAYER_CONTROL( sub_675(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U39 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U39 = 2;
            }
            else
            {
                l_U39 = 3;
            }
        }
        break;
        case 2:
        sub_502( "NS", "Player will QUIT", 0 );
        sub_2177();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_502( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2177();
        return 1;
        break;
    }
    return 0;
}

int sub_1324(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_1434(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1570(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_1690(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2177()
{
    sub_502( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2227( ref l_U41 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_675() )))
    {
        SET_PLAYER_CONTROL( sub_675(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U38 = 0;
    l_U38 = l_U38;
    l_U39 = 0;
    return;
}

void sub_2227(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_2712(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_2968()
{
    sub_502( "SP", "P_CLEANUP_ALL", 0 );
    ISEQ_UNREGISTER_ENTITY( 1526913321, "UFE_1" );
    ISEQ_UNREGISTER_ENTITY( 1526913321, "UFE_2" );
    sub_3051( 1526913321, 1 );
    ISEQ_UNREGISTER_ENTITY( -497997588, "PLAYER" );
    sub_3051( -497997588, 1 );
    sub_3287( ref l_U549, 0 );
    sub_3287( ref l_U556, 0 );
    sub_3503( ref l_U563, 1 );
    sub_3632( ref l_U605 );
    sub_3632( ref l_U601 );
    sub_3632( ref l_U376 );
    sub_3632( ref l_U394 );
    sub_3632( ref l_U410 );
    sub_3632( ref l_U465 );
    sub_3809( l_U570 );
    sub_3856( g_U757._fU0 );
    SET_CAMERA_OVERRIDE( "", "", 0, 0, 0 );
    SET_RAIL_RELATIVE_DIR( 0, 0.00000000 );
    CLEAR_NAMED_CUTSCENE( "mid_08b_f2" );
    sub_3948();
    return;
}

void sub_3051(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3287(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_3299( iParam0 )) == 0)
    {
        sub_3365( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_3299(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_3365(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_3503(int iParam0, int iParam1)
{
    if ((sub_3299( iParam0 )) == 0)
    {
        sub_3365( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_3632(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_3666( (uParam0^)[I] );
    }
    return;
}

void sub_3666(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_3809(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_3856(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_3948()
{
    sub_502( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    return;
}

void sub_4123(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_502( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (g_U665)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_4309( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_5386( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_5678( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_6038( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_5678( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_6038( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_5678( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_6038( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_6323( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_6038( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_6323( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_6038( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (g_U665 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_6818( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_6979( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_653(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (g_U665)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    g_U665 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_502( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_4309(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_4341( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_4341(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_5386(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_5678(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_5994( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_5994(unknown uParam0)
{
    return;
}

void sub_6038(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_6323(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_5994( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_6818(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_6979(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_4341( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_7051( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_7051(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_8406()
{
    unknown uVar2;

    sub_8416();
    switch (l_U87)
    {
        case 0: break;
        case 1:
        sub_502( "SP", "eCheckpointState = CHECKPOINT_INIT_SCRIPT_DATA", 0 );
        sub_8988();
        sub_11522();
        sub_11712();
        sub_12150( "SFV2AUD" );
        sub_12262();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U87 = 2;
        sub_502( "SP", "eCheckpointState = CHECKPOINT_INIT_REQUEST_ASSETS", 0 );
        case 2:
        sub_502( "SP", "eCheckpointState = CHECKPOINT_INIT_REQUEST_ASSETS", 0 );
        sub_12460();
        l_U87 = 3;
        sub_502( "SP", "eCheckpointState = CHECKPOINT_INIT_LOAD_ASSETS", 0 );
        case 3:
        if (sub_13256() == 1)
        {
            l_U87 = 4;
            sub_502( "SP", "eCheckpointState = CHECKPOINT_SETUP_START_POINT", 0 );
            break;
        }
        return;
        case 4:
        sub_502( "SP", "eCheckpointState = CHECKPOINT_SETUP_START_POINT", 0 );
        if (g_U782 < 9)
        {
            l_U88 = 1;
            l_U87 = 7;
            sub_502( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_08B_CUTSCENE", 0 );
        }
        else if (g_U782 == 9)
        {
            if ((l_U86 == 0) AND (g_U781 == 9))
            {
                l_U86 = 1;
                if ((sub_13702( ref l_U50 )) == 0)
                {
                    sub_6323( sub_653(), g_U1310, 200, 0, 0 );
                }
                l_U87 = 5;
                sub_502( "SP", "eCheckpointState = CHECKPOINT_DEBUG_WAIT_FOR_PLAYERS_WEAPON", 0 );
            }
            else
            {
                l_U89 = 1;
                l_U87 = 8;
                sub_502( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_08B_BLENDOUT", 0 );
            }
        }
        break;
        case 5:
        if ((IS_PED_DEAD( sub_653() )) == 0)
        {
            uVar2 = GET_WEAPON_FROM_HAND( sub_653(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
            {
                l_U89 = 1;
                l_U87 = 8;
                sub_502( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_08B_BLENDOUT", 0 );
            }
        }
        break;
        case 7:
        if (g_U1043 == 1)
        {
            l_U89 = 1;
            l_U87 = 8;
            sub_502( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_08B_BLENDOUT", 0 );
            break;
        }
        return;
        case 8:
        if (sub_14311() == 1)
        {
            l_U87 = 9;
            sub_502( "SP", "eCheckpointState = CHECKPOINT_START_BRIDGE_FIGHT", 0 );
            break;
        }
        return;
        case 9:
        sub_502( "SP", "eCheckpointState = CHECKPOINT_START_BRIDGE_FIGHT", 0 );
        if (((IS_PED_DEAD( sub_653() )) == 0) AND ((IS_PLAYER_DEAD( sub_675() )) == 0))
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_675(), 1 );
            SET_PLAYER_CONTROL( sub_675(), 1, 0 );
            if ((GET_IS_PED_FORCED_TO_WALK( sub_653() )) == 1)
            {
                SET_PED_FORCED_TO_WALK( sub_653(), 0 );
            }
        }
        sub_19763();
        sub_20121();
        sub_20946();
        sub_21336();
        if (((IS_PED_DEAD( sub_653() )) == 0) AND ((IS_PLAYER_DEAD( sub_675() )) == 0))
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_675(), 1 );
            SET_PLAYER_CONTROL( sub_675(), 1, 0 );
            if ((GET_IS_PED_FORCED_TO_WALK( sub_653() )) == 1)
            {
                SET_PED_FORCED_TO_WALK( sub_653(), 0 );
            }
        }
        sub_22213( ref l_U50, 9, 0 );
        sub_502( "SP", "eCheckpointState = CHECKPOINT_HANDLE_BRIDGE_FIGHT", 0 );
        sub_26756();
        l_U87 = 10;
        break;
        case 10:
        if (l_U610 == 0)
        {
            if (sub_26833() == 1)
            {
                sub_27596();
                l_U610 = 1;
            }
        }
        if (sub_1690( ref l_U508 ))
        {
            sub_20489( ref l_U328, l_U605[0], 1 );
        }
        sub_28422();
        if (l_U547 == 1)
        {
            sub_29109();
        }
        if (l_U547 == 1)
        {
            if (((IS_PED_DEAD( l_U601[0] )) == 1) AND (((IS_PED_DEAD( l_U605[0] )) == 1) AND (((sub_29558( ref l_U394 )) == 0) AND ((sub_29558( ref l_U376 )) == 0))))
            {
                l_U547 = 0;
            }
        }
        if (l_U614 == 1)
        {
            if (((sub_29558( ref l_U601 )) == 0) AND (((sub_29558( ref l_U605 )) == 0) AND ((sub_29558( ref l_U376 )) <= 1)))
            {
                sub_29759( l_U394[0] );
                if (NOT (IS_PED_DEAD( l_U394[0] )))
                {
                    SET_PED_COMBAT_ATTRIBUTES( l_U394[0], 8192, 1 );
                    SET_PED_COMBAT_ATTRIBUTES( l_U394[0], 1024, 1 );
                    CLEAR_PED_TASKS( l_U394[0] );
                    TASK_ATTACK_MOVE( l_U394[0], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_653() ), 0, 1101004800, -1082130432, 3 );
                }
                sub_29928();
                l_U614 = 0;
            }
        }
        if ((sub_30286( ref l_U112, sub_653(), 0 )) == 1)
        {
            sub_3287( ref l_U549, 1 );
            sub_3287( ref l_U556, 1 );
            sub_30451();
        }
        if ((sub_30286( ref l_U91, sub_653(), 0 )) == 1)
        {
            sub_31058();
            sub_31300();
            AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_3_5", "", 0.00000000, 9000, 9000, -1082130432, 0 );
            sub_1434( ref l_U526, 10000, 1, 0 );
            sub_1570( ref l_U526 );
            sub_31663();
            l_U574 = 1;
        }
        if (sub_32148( ref l_U280, 0 ))
        {
            sub_32256( ref g_U1312[10] );
            sub_32282();
        }
        if ((sub_1690( ref l_U526 )) == 1)
        {
            AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_3", "", 0.00000000, 9000, 10000, -1082130432, 0 );
        }
        if ((sub_30286( ref l_U133, sub_653(), 0 )) == 1)
        {
            sub_32549();
        }
        if ((sub_30286( ref l_U154, sub_653(), 0 )) == 1)
        {
            sub_32998();
            sub_3503( ref l_U563, 0 );
            sub_33144( ref g_U1219, 0 );
            sub_33221( ref g_U1219, 0, 1, 0.15000000 );
        }
        if ((sub_33373( l_U175 )) == 1)
        {
            if ((IS_PED_DEAD( sub_653() )) == 0)
            {
                if ((GET_IS_PED_FORCED_TO_WALK( sub_653() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_653(), 1 );
                }
            }
        }
        else if ((IS_PED_DEAD( sub_653() )) == 0)
        {
            if ((GET_IS_PED_FORCED_TO_WALK( sub_653() )) == 1)
            {
                SET_PED_FORCED_TO_WALK( sub_653(), 0 );
            }
        }
        if ((sub_32148( ref l_U259, 0 )) == 1)
        {
            sub_33535();
        }
        if ((sub_30286( ref l_U196, sub_653(), 0 )) == 1)
        {
            if (((IS_PED_DEAD( sub_653() )) == 0) AND ((IS_PLAYER_DEAD( sub_675() )) == 0))
            {
                SET_PLAYER_CONTROL( sub_675(), 0, 0 );
            }
            g_U1044 = 1;
            if (((IS_PED_DEAD( sub_653() )) == 0) AND ((IS_PLAYER_DEAD( sub_675() )) == 0))
            {
                SET_PLAYER_CONTROL( sub_675(), 1, 0 );
                if ((GET_IS_PED_FORCED_TO_WALK( sub_653() )) == 1)
                {
                    SET_PED_FORCED_TO_WALK( sub_653(), 0 );
                }
            }
            l_U87 = 11;
            sub_502( "SP", "eCheckpointState = CHECKPOINT_FINISHED", 0 );
        }
        if (sub_30286( ref l_U238, sub_653(), 0 ))
        {
            sub_502( "CO", "Player Hit the Kill Box", 0 );
            sub_34173( sub_653() );
        }
        if (l_U574 == 1)
        {
            sub_34250();
        }
        sub_34844();
        break;
        case 11:
        sub_502( "SP", "eCheckpointState = CHECKPOINT_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U87 = 0;
        sub_502( "SP", "eCheckpointState = CHECKPOINT_IDLE", 0 );
        break;
    }
    return;
}

void sub_8416()
{
    switch (l_U685)
    {
        case 0:
        sub_502( "CCB", "eBingBangBoom - STATE_CHALLENGE_IDLE", 0 );
        l_U685 = 1;
        break;
        case 1:
        if (l_U87 >= 10)
        {
            if (sub_8546( l_U570, sub_653() ))
            {
                if (SCRIPT_VAR_HASH_EXISTS( 196995894 ))
                {
                    l_U686 = (SCRIPT_VAR_HASH_GET_INT( 196995894 )) + 1;
                    SCRIPT_VAR_HASH_SET_INT( 196995894, l_U686 );
                }
                else
                {
                    sub_502( "CCB", "The PropaneDestroyed script variable is NOT valid!!!", 0 );
                }
                sub_502( "CCB", "eBingBangBoom - STATE_CHALLENGE_COMPLETE", 0 );
                l_U685 = 2;
            }
        }
        break;
        case 2: break;
    }
    return;
}

int sub_8546(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        if (DOES_OBJECT_EXIST( uParam0 ))
        {
            if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( uParam0, uParam1 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_8988()
{
    sub_502( "SP", "P_INIT_GAMEPLAY_STRUCTS", 0 );
    sub_9060( ref l_U575, l_U635, l_U638, 1975716461, 7, 3, 2, 0, 0 );
    sub_9060( ref l_U588, l_U639, l_U642, 1025115996, 7, 3, 2, 0, 0 );
    sub_9060( ref l_U336[0], -101.11000000, 304.51600000, -10.09000000, 82.33360000, 1063470242, 7, 3, 2, 0, 0 );
    sub_9060( ref l_U336[1], -101.12600000, 303.69900000, -10.09000000, 24.02800000, 346741852, 7, 3, 2, 0, 0 );
    sub_9060( ref l_U336[2], -100.77000000, 303.52000000, -9.93000000, 24.02800000, 89316741, 7, 3, 2, 0, 0 );
    sub_9060( ref l_U380[0], -97.42070000, 315.08000000, -10.09000000, 92.87040000, 2127812759, 7, 3, 2, 0, 0 );
    sub_9060( ref l_U396[0], -99.70000000, 349.96000000, -17.40000000, 214.33920000, 1827651570, 7, 3, 2, 0, 0 );
    sub_9060( ref l_U412[0], -96.30000000, 337.07000000, -19.67000000, 81.53000000, 2127812759, 7, 3, 2, 0, 0 );
    sub_9060( ref l_U412[1], -97.11000000, 336.64000000, -19.67000000, 84.72000000, 346741852, 7, 3, 2, 0, 0 );
    sub_9060( ref l_U412[2], -101.98000000, 345.17000000, -21.34000000, -105.20000000, -667630561, 7, 3, 2, 0, 0 );
    sub_9060( ref l_U412[3], -107.93000000, 347.86000000, -24.36000000, -107.78000000, 825890338, 7, 3, 2, 0, 0 );
    sub_9672( ref l_U112, "TRIG_BRIDGE_LOCK_DOORS", -105.22900000, 310.39600000, -10.34010000, 4.00000000, 6.00000000, 4.00000000, 0.00000000, 0.00000000, 106.60500000, 1 );
    sub_9672( ref l_U91, "TRIG_DROP_DOWN", -103.67900000, 320.41800000, -16.61160000, 8.00000000, 4.00000000, 10.00000000, 0.00000000, 0.00000000, 0.35493900, 1 );
    sub_9672( ref l_U133, "TRIG_FINAL_ENEMY", -102.55000000, 329.69000000, -18.11000000, 6.00000000, 8.00000000, 8.00000000, 0.00000000, 0.00000000, -14.00000000, 1 );
    sub_9672( ref l_U154, "TRIG_FINAL_ENEMY_RETREAT", -98.75230000, 345.57000000, -24.03590000, 8.00000000, 8.00000000, 8.00000000, 0.00000000, 0.00000000, -13.86200000, 1 );
    sub_9672( ref l_U175, "TRIG_STORE_FORCE_WALK", -114.28100000, 351.81700000, -26.21460000, 8.00000000, 8.00000000, 8.00000000, 0.00000000, 0.00000000, -36.82550000, 1 );
    sub_9672( ref l_U196, "TRIG_STORE_DOORWAY", -113.73000000, 352.98000000, -25.62000000, 2.00000000, 2.00000000, 4.00000000, 0.00000000, 0.00000000, -0.35000600, 1 );
    sub_9672( ref l_U217, "TRIG_ALERT_BRIDGE_ENEMS", -117.32000000, 298.47000000, -11.26000000, 1.95000000, 12.50000000, 2.25000000, 0.00000000, 0.00000000, -4.28999000, 1 );
    sub_9672( ref l_U238, "TRIG_FAV_KILLZONE", -114.23700000, 304.18500000, -21.98000000, 50.00000000, 30.00000000, 10.00000000, 0.00000000, 0.00000000, -40.49210000, 1 );
    sub_9672( ref l_U259, "tbCleanupBridgeFight", -99.58000000, 340.86000000, -24.60000000, 8.00000000, 8.00000000, 8.00000000, 0.00000000, 0.00000000, -13.86000000, 1 );
    sub_9672( ref l_U280, "tbPreloadBoss", -103.53000000, 327.77000000, -16.40000000, 8.00000000, 4.00000000, 10.00000000, 0.00000000, 0.00000000, -12.52000000, 1 );
    sub_9672( ref l_U301, "tbDeadEndDialogue", -112.08000000, 349.38000000, -24.96000000, 12.00000000, 10.00000000, 8.00000000, 0.00000000, 0.00000000, -13.86000000, 1 );
    sub_10614( ref l_U322, "TETH_BRIDGE_01", -105.49700000, 304.45800000, -10.94340000, 4.00000000, 6.00000000, 6.00000000, 0.00000000, 0.00000000, 0.95791300, 1 );
    sub_10614( ref l_U323, "TETH_BRIDGE_02", -105.49700000, 304.45800000, -10.94340000, 4.00000000, 6.00000000, 6.00000000, 0.00000000, 0.00000000, 0.95791300, 1 );
    sub_10614( ref l_U324, "TETH_BRIDGE_03", -100.64100000, 311.11600000, -10.94340000, 4.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, -71.04970000, 1 );
    sub_10614( ref l_U325, "TETH_BRIDGE_04", -113.37300000, 307.72100000, -10.94340000, 4.00000000, 2.00000000, 6.00000000, 0.00000000, 0.00000000, -71.04970000, 1 );
    sub_10614( ref l_U326, "TETH_BRIDGE_05", -109.70200000, 308.89100000, -10.94340000, 4.00000000, 2.00000000, 6.00000000, 0.00000000, 0.00000000, -71.04970000, 1 );
    sub_10614( ref l_U327, "TETH_BRIDGE_FIGHT_END", -104.51000000, 316.16000000, -10.09000000, 8.00000000, 4.00000000, 10.00000000, 0.00000000, 0.00000000, 0.35000000, 1 );
    sub_10614( ref l_U328, "teRushPlayer", -119.40000000, 301.99000000, -10.94000000, 12.80000000, 4.29000000, 6.00000000, 0.00000000, 0.00000000, -65.07000000, 1 );
    sub_10614( ref l_U329, "teRightSideTether", -110.86000000, 304.77000000, -10.94000000, 12.80000000, 21.18000000, 6.00000000, 0.00000000, 0.00000000, -89.99000000, 1 );
    sub_11240( ref l_U549, -417746690, -101.72780000, 305.21830000, -8.95950000, 0.00000000, 0.00000000, 0.00000000 );
    sub_3503( ref l_U549, 1 );
    sub_11240( ref l_U556, -417746690, -99.14670000, 315.67620000, -8.94430000, 0.00000000, 0.00000000, 0.00000000 );
    sub_11240( ref l_U563, -417746690, -99.31016000, 348.39820000, -16.25212000, 0.00000000, 0.00000000, 0.00000000 );
    sub_11400( ref l_U549, -90.00000000, 0.00000000 );
    sub_11400( ref l_U556, -90.00000000, 0.00000000 );
    return;
}

void sub_9060(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_9672(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_10614(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_11240(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_11400(int iParam0, float fParam1, float fParam2)
{
    if ((sub_3299( iParam0 )) == 0)
    {
        sub_3365( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

void sub_11522()
{
    sub_502( "SP", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U573 = 0;
    l_U610 = 0;
    l_U611 = 0;
    l_U545 = 0;
    l_U546 = 0;
    l_U547 = 0;
    l_U613 = 0;
    l_U548 = 0;
    l_U574 = 0;
    l_U614 = 1;
    sub_2227( ref l_U480 );
    sub_2227( ref l_U615 );
    sub_2227( ref l_U489 );
    sub_2227( ref l_U499 );
    sub_2227( ref l_U625 );
    sub_2227( ref l_U508 );
    sub_2227( ref l_U536 );
    l_U88 = 0;
    l_U89 = 0;
    return;
}

void sub_11712()
{
    sub_502( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U685 = 0;
    l_U686 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 196995894 )))
    {
        sub_502( "CCB", "Creating the PropaneDestroyed script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 196995894 );
        if (SCRIPT_VAR_HASH_EXISTS( 196995894 ))
        {
            sub_502( "CCB", "The PropaneDestroyed script variable was successfully created...", 0 );
        }
        else
        {
            sub_502( "CCB", "The PropaneDestroyed script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_502( "CCB", "The PropaneDestroyed script variable was already created...", 0 );
        l_U686 = SCRIPT_VAR_HASH_GET_INT( 196995894 );
    }
    return;
}

void sub_12150(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_12170();
    return;
}

void sub_12170()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_12262()
{
    sub_502( "ka", "P_CREATE_CAMERA()", 0 );
    SET_CAM_VIEW_MODE( 0 );
    return;
}

void sub_12460()
{
    sub_502( "SP", "P_REQUEST_ASSETS", 0 );
    sub_12506( -1978121733, 0 );
    sub_12506( g_U780, 0 );
    sub_12688( g_U1308, 0 );
    sub_12757( 1526913321, 0 );
    sub_12757( -497997588, 0 );
    sub_12986( "LEVEL_S_FAV2_CHAOS", 0, 0 );
    sub_12986( "LEVEL_S_FAV2_CP_06", 0, 0 );
    sub_13116( "LEVEL/S_FAV2/S_FAV2_DEAD_CS", 0 );
    return;
}

void sub_12506(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_5994( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_12688(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_12757(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_12986(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_13116(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_13256()
{
    if (((HAS_ANIM_DICT_LOADED( "LEVEL_S_FAV2_CHAOS", 0 )) == 1) AND (((HAS_ANIM_DICT_LOADED( "LEVEL_S_FAV2_CP_06", 0 )) == 1) AND (((ISEQ_QUERY_STATE( -497997588, 2 )) == 1) AND ((HAS_MODEL_LOADED( g_U780 )) AND (((ISEQ_IS_LOADED( 1526913321 )) == 1) AND (((HAS_WEAPON_LOADED( g_U1308 )) == 1) AND ((HAS_MODEL_LOADED( -1978121733 )) == 1)))))))
    {
        return 1;
    }
    return 0;
}

int sub_13702(unknown uParam0)
{
    sub_502( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            g_U665 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, g_U666 );
            sub_4123( uParam0, sub_653() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_14311()
{
    vector vVar2;
    float fVar5;
    unknown uVar6;

    vVar2 = {-119.60000000, 295.17000000, -9.10000000};
    fVar5 = -5.00000000;
    switch (l_U89)
    {
        case 0: break;
        case 1:
        sub_502( "SP", "eMid08bBlendState = BLEND_SETUP", 0 );
        sub_14443();
        sub_16048( 1, 0, 0, 1 );
        if ((ISEQ_QUERY_STATE( -497997588, 3 )) == 0)
        {
            sub_16234( g_U1240, 1 );
            sub_16407( 1 );
            sub_16944( g_U1240, 1 );
            sub_502( "NS", "ISEQ_QUERY_STATE(S_FAV2_MID_08B_BLENDOUT, eSNS_PLAYING) = FALSE", 0 );
            if (NOT (IS_PED_DEAD( sub_653() )))
            {
                sub_17159( sub_653(), g_U783[9], g_U910[9] );
                SNAP_PLAYER_TO_COVERLINE( sub_675(), "fav2_03", "Grabspline59", 1, -117.98270000, 298.50400000, -10.06949000 );
                ISEQ_REGISTER_ENTITY( -497997588, "PLAYER", sub_653(), 0 );
                ISEQ_START( -497997588 );
            }
        }
        CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV2_CP_08", "B_OUT_MID_08B_F2_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        l_U89 = 2;
        sub_502( "SP", "eMid08bBlendState = BLEND_FIRST_FRAME", 0 );
        break;
        case 2:
        sub_502( "SP", "eMid08bBlendState = BLEND_FIRST_FRAME", 0 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( -15.00000000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0.00000000, 1065353216, 0 );
        AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_5", "", 0.00000000, 5000, 8000, -1082130432, 0 );
        sub_17587();
        DO_SCREEN_FADE_IN( 0 );
        l_U89 = 3;
        sub_502( "SP", "eMid08bBlendState = BLEND_PLAYING", 0 );
        break;
        case 3:
        if ((sub_1324( ref l_U499 )) == 0)
        {
            if (IS_ANIMATED_CAMERA_PLAYING() == 1)
            {
                if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FAV2_CP_08", "B_OUT_MID_08B_F2_CAM" )) - 500))
                {
                    sub_502( "ka", "HANDLE MID_08B BLENDOUT COMPLETE", 0 );
                    SET_GAMEPLAY_CAM_RELATIVE_HEADING( -15.00000000, 1065353216, 0 );
                    SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0.00000000, 1065353216, 0 );
                    CAMERA_FREEZE_FRAME( 1, 400, 0, 0 );
                    sub_1434( ref l_U499, l_U498, 1, 0 );
                    sub_1570( ref l_U499 );
                }
            }
        }
        if (sub_1690( ref l_U499 ))
        {
            sub_502( "NS", "HANDLE MID_08B BLENDOUT COMPLETE - Return control", 0 );
            sub_19193( 1, 1 );
            l_U89 = 0;
            sub_502( "SP", "eMid08bBlendState = BLEND_IDLE", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

void sub_14443()
{
    sub_502( "KA", "P_SETUP_VIG_11", 0 );
    sub_3666( l_U605[0] );
    l_U605[0] = sub_14498( ref l_U575 );
    SET_PED_AI_TEMPLATE( l_U605[0], "AIT_UFE_TOUGH" );
    sub_15036( l_U605[0], ref l_U330 );
    if (((IS_PED_DEAD( l_U605[0] )) == 0) AND ((DOES_PED_EXIST( l_U605[0] )) == 1))
    {
        SET_PED_NAME_DEBUG( l_U605[0], "piVig11Enemy1" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U605[0], 1 );
        l_U607[0] = sub_6323( l_U605[0], 1308526797, 25000, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( l_U607[0] ))
        {
            ENABLE_WEAPON_ATTACHMENT( l_U607[0], 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( l_U607[0], 14, 1 );
        }
        SET_PED_PROJECTILE_OVERRIDE_PARAMETERS( l_U605[0], 1, 15.00000000, -1082130432, 0, 0 );
        SET_PED_FLAG_SCRIPTED_PROJECTILE_USE( l_U605[0], 1 );
    }
    sub_3666( l_U601[0] );
    l_U601[0] = sub_14498( ref l_U588 );
    SET_PED_AI_TEMPLATE( l_U601[0], "AIT_UFE_AVERAGE" );
    sub_15036( l_U601[0], ref l_U330 );
    if (((IS_PED_DEAD( l_U601[0] )) == 0) AND ((DOES_PED_EXIST( l_U601[0] )) == 1))
    {
        SET_PED_NAME_DEBUG( l_U601[0], "piVig11Enemy2" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U601[0], 1 );
        l_U603[0] = sub_6323( l_U601[0], 57534114, 25000, 0, 0 );
        if (GET_DOES_WEAPON_EXIST( l_U603[0] ))
        {
            ENABLE_WEAPON_ATTACHMENT( l_U603[0], 14, 1 );
            TOGGLE_WEAPON_ATTACHMENT( l_U603[0], 14, 1 );
        }
        SET_PED_PROJECTILE_OVERRIDE_PARAMETERS( l_U601[0], 1, 15.00000000, -1082130432, 0, 0 );
        SET_PED_FLAG_SCRIPTED_PROJECTILE_USE( l_U601[0], 1 );
    }
    ISEQ_REGISTER_ENTITY( 1526913321, "UFE_1", l_U605[0], 0 );
    ISEQ_REGISTER_ENTITY( 1526913321, "UFE_2", l_U601[0], 0 );
    return;
}

void sub_14498(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_12506( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    return iParam0->_fU40;
}

void sub_15036(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_5994( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_15179( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_15179( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_15179(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_16048(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_653() )))
        {
            SET_PLAYER_CONTROL( sub_675(), 0, uParam2 );
            SET_PED_DUCKING( sub_653(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_653() );
            }
            SET_PED_INVINCIBLE( sub_653(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_16234(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;

    if ((IS_PED_DEAD( sub_653() )) == 0)
    {
        uVar21 = uParam0._fU0._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
        {
            SELECT_WEAPON_TO_HAND( sub_653(), uVar21, 0, uParam18 );
        }
        uVar22 = uParam0._fU12._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
        {
            SELECT_WEAPON_TO_HAND( sub_653(), uVar22, 1, uParam18 );
        }
        uVar23 = uParam0._fU24._fU0;
        if ((GET_DOES_WEAPON_EXIST( uVar23 )) == 1)
        {
            SELECT_WEAPON_TO_HAND( sub_653(), uVar23, 0, uParam18 );
        }
    }
    return;
}

void sub_16407(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_653() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_653(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_16487( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_16696();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_653(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_16487(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_16696()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_653() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_653(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_16487( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_653(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_653(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_653(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_16944(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

void sub_17159(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_17587()
{
    sub_502( "KA", "START VIG NOW", 0 );
    ISEQ_START( 1526913321 );
    sub_17640( ref l_U687 );
    sub_17736( 2, l_U605[0], "M9_UFE_052_AVG", ref l_U687, 2, 0 );
    sub_17736( 1, l_U601[0], "M9_UFE_051_MUS", ref l_U687, 2, 0 );
    sub_17991( "SFV2_VIG11A", ref l_U687, 8, 1 );
    sub_1434( ref l_U615, l_U624, 1, 0 );
    sub_1570( ref l_U615 );
    sub_1434( ref l_U625, l_U634, 1, 0 );
    sub_1570( ref l_U625 );
    return;
}

void sub_17640(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_17736(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_17991(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_18015( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_18015(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_18070( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_18070(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_18105( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_18599( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_18105(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_18599(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_19193(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_653() )))
    {
        SET_PLAYER_CONTROL( sub_675(), 1, 0 );
        SET_PED_INVINCIBLE( sub_653(), 0 );
        if (bParam0)
        {
            sub_19274();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_19274()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_653() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_653(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_653(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_653(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_653(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_19763()
{
    sub_502( "SP", "P_CREATE_PROPANE_TANKS", 0 );
    sub_3809( l_U570 );
    l_U570 = sub_19859( -346844275, -102.16000000, 306.24000000, -10.08000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U570 )) == 1)
    {
        CAMERA_CAN_TARGET_OBJECT( 1, l_U570 );
    }
    return;
}

void sub_19859(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_12506( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_20121()
{
    int I;

    sub_502( "SP", "P_SETUP_BRIDGE_ENEMIES_01", 0 );
    sub_15179( ref l_U330, 1056964608, 0 );
    for ( I = 0; I < l_U376; I++ )
    {
        sub_3666( l_U376[I] );
        l_U376[I] = sub_14498( ref l_U336[I] );
        SET_PED_AI_TEMPLATE( l_U376[I], "AIT_UFE_AVERAGE" );
        sub_15036( l_U376[I], ref l_U330 );
        if (((IS_PED_DEAD( l_U376[I] )) == 0) AND ((DOES_PED_EXIST( l_U376[I] )) == 1))
        {
            FREEZE_PED_POSITION( l_U376[I], 1 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U376[I], 1 );
            SET_PED_COMBAT_ATTRIBUTES( l_U376[I], 1024, 1 );
            SET_PED_ALERTNESS( l_U376[I], 3 );
            if (NOT (IS_PED_DEAD( sub_653() )))
            {
                REGISTER_TARGET( l_U376[I], sub_653() );
            }
            if (I == 0)
            {
                sub_6323( l_U376[I], g_U1311, 25000, 0, 0 );
                sub_20489( ref l_U323, l_U376[I], 1 );
            }
            else if (I == 1)
            {
                sub_6323( l_U376[I], g_U1309, 25000, 0, 0 );
                sub_20489( ref l_U323, l_U376[I], 1 );
            }
            else if (I == 2)
            {
                sub_20641( l_U376[I] );
                sub_6323( l_U376[I], g_U1311, 25000, 0, 0 );
                sub_20489( ref l_U329, l_U376[I], 1 );
            };;;
            SET_PED_PROJECTILE_OVERRIDE_PARAMETERS( l_U376[I], 1, 13.00000000, 18, 0, 0 );
        }
    }
    sub_20844( ref l_U376, "piBridgeEnemies01_" );
    return;
}

void sub_20489(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_20641(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_20844(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_20946()
{
    int I;

    sub_502( "SP", "P_SETUP_BRIDGE_ENEMIES_03", 0 );
    for ( I = 0; I < l_U394; I++ )
    {
        sub_3666( l_U394[I] );
        l_U394[I] = sub_14498( ref l_U380[I] );
        SET_PED_AI_TEMPLATE( l_U394[I], "AIT_UFE_TOUGH" );
        sub_15036( l_U394[I], ref l_U330 );
        if (((IS_PED_DEAD( l_U394[I] )) == 0) AND ((DOES_PED_EXIST( l_U394[I] )) == 1))
        {
            FREEZE_PED_POSITION( l_U394[I], 1 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U394[I], 1 );
            SET_BLOCKING_OF_PED_TARGETTING( l_U394[I], 1 );
            if (I == 0)
            {
                SET_PED_COMBAT_MOVEMENT( l_U394[I], 1 );
                sub_6323( l_U394[I], g_U1311, 25000, 0, 0 );
            }
            SET_PED_PROJECTILE_OVERRIDE_PARAMETERS( l_U394[I], 1, 15.00000000, -1082130432, 0, 0 );
            SET_PED_FLAG_SCRIPTED_PROJECTILE_USE( l_U394[I], 1 );
        }
    }
    sub_20844( ref l_U394, "piBridgeEnemies03_" );
    return;
}

void sub_21336()
{
    sub_502( "CO", "P_CREATE_S_FV2_GG_D5_03", 0 );
    sub_21437( ref g_U757, g_U780, 1223088625, -2044392051, -100.99000000, 309.32000000, -10.00000000, 0.00000000, 0.00000000, 1.00000000, "" );
    sub_21566( ref g_U757 );
    return;
}

void sub_21437(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_502( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_21566(int iParam0)
{
    sub_502( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_21627( iParam0->_fU12 )) == 1)
        {
            sub_502( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_502( "CO", "has never been collected.", 0 );
        }
        if ((sub_21627( iParam0->_fU12 )) == 0)
        {
            sub_3856( iParam0->_fU0 );
            iParam0->_fU0 = sub_21862( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_502( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_502( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_21627(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_21862(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_22213(int iParam0, int iParam1, unknown uParam2)
{
    sub_502( "CO", "CO_HANDLE_SAVEDATA : Saving Data", 0 );
    if ((g_U782 < iParam1) || (NOT iParam0->_fU0))
    {
        sub_502( "CO", "CO_HANDLE_SAVEDATA : Saved Data", 0 );
        sub_22382( iParam0, iParam1, sub_653(), g_U783[iParam1], g_U910[iParam1], g_U953[iParam1], g_U996[iParam1], uParam2 );
    }
    g_U782 = iParam1;
    sub_26012( g_U782 );
    return;
}

void sub_22382(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_502( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_502( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_6979( iParam1 );
        sub_22641( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_23092( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_23092( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23324( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_23092( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23324( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_23324( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_23092( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23324( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_23324( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_23324( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_23092( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23324( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_23324( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_23324( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_23324( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_24882( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, g_U666, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_502( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_22641(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_4341( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_502( "TEH", "Ending context", 0 );
        sub_502( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_23092(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_23324(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_24882(int iParam0)
{
    sub_5994( "CHECKPOINT DATA" );
    sub_24921( iParam0->_fU4 );
    sub_24944( iParam0->_fU16 );
    sub_24944( iParam0->_fU20 );
    sub_24944( iParam0->_fU24 );
    sub_24987( iParam0->_fU28 );
    sub_24987( iParam0->_fU56 );
    sub_24987( iParam0->_fU60 );
    sub_24987( iParam0->_fU64 );
    sub_24987( iParam0->_fU68 );
    sub_24987( iParam0->_fU72 );
    sub_24987( iParam0->_fU76 );
    sub_24987( iParam0->_fU80 );
    sub_24987( iParam0->_fU84 );
    sub_24987( iParam0->_fU88 );
    sub_24987( iParam0->_fU92 );
    sub_24944( iParam0->_fU32 );
    sub_24987( iParam0->_fU36 );
    sub_24987( iParam0->_fU40 );
    sub_24987( iParam0->_fU44 );
    sub_24944( iParam0->_fU136 );
    sub_25192( iParam0->_fU140 );
    sub_24987( iParam0->_fU52 );
    sub_5994( "---nRightHolsterAttachmentEnabled: " );
    sub_24987( iParam0->_fU96 );
    sub_5994( "---nRightHolsterAttachmentToggled: " );
    sub_24987( iParam0->_fU100 );
    sub_5994( "---nLeftHolsterAttachmentEnabled: " );
    sub_24987( iParam0->_fU104 );
    sub_5994( "---nLeftHolsterAttachmentToggled: " );
    sub_24987( iParam0->_fU108 );
    sub_5994( "---nRifleHolsterAttachmentEnabled: " );
    sub_24987( iParam0->_fU112 );
    sub_5994( "---nRifleHolsterAttachmentToggled: " );
    sub_24987( iParam0->_fU116 );
    sub_5994( "---nRightHandAttachmentEnabled: " );
    sub_24987( iParam0->_fU120 );
    sub_5994( "---nRightHandAttachmentToggled: " );
    sub_24987( iParam0->_fU124 );
    sub_5994( "---nLeftHandAttachmentEnabled: " );
    sub_24987( iParam0->_fU128 );
    sub_5994( "---nLeftHandAttachmentToggled: " );
    sub_24987( iParam0->_fU132 );
    sub_24987( g_U666 );
    sub_24987( 144 );
    return;
}

void sub_24921(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_24944(unknown uParam0)
{
    return;
}

void sub_24987(unknown uParam0)
{
    return;
}

void sub_25192(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_26012(unknown uParam0)
{
    sub_502( "CO", "P_SETUP_INITIAL_TIMECYCLE", 0 );
    switch (uParam0)
    {
        case 0:
        case 1:
        case 2:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
        case 3:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 0 );
        break;
        case 4:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 10 );
        break;
        case 5:
        if (g_U1046 == 1)
        {
            sub_502( "kja", "MCE_UFE_RUN bTimeofDayReleased = TRUE", 0 );
            FREEZE_TIME_OF_DAY( 20, 10 );
            break;
        }
        sub_502( "kja", "MCE_UFE_RUN bTimeofDayReleased = FALSE: SO WE're SETTING WEATHER AND TOD TO 20:20", 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 20, 10 );
        case 6:
        case 7:
        case 8:
        if (g_U1046 == 1)
        {
            ;
        }
        else
        {
            SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
            SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
            FREEZE_TIME_OF_DAY( 21, 0 );
        }
        break;
        case 9:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 21, 0 );
        break;
        case 10:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 22, 0 );
        break;
        default:
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
    }
    return;
}

void sub_26756()
{
    sub_502( "CCB", "P_START_SP_CHALLENGES", 0 );
    return;
}

int sub_26833()
{
    unknown uVar2;

    if ((IS_PED_DEAD( sub_653() )) == 0)
    {
        if ((DOES_PED_EXIST( l_U605[0] )) == 1)
        {
            if (((PED_GET_ACTION_INTENTION_STATUS( l_U605[0], 48 )) == 3) || (((GET_PED_AWARENESS_STATE( l_U605[0], sub_653(), 2 )) == 1) || (((GET_PED_AWARENESS_STATE( l_U605[0], sub_653(), 1 )) == 1) || (((HAS_PED_BEEN_DAMAGED_BY_PED( l_U605[0], sub_653(), 0 )) == 1) || ((IS_PED_DEAD( l_U605[0] )) == 1)))))
            {
                PED_FINISH_ACTION_INTENTION( l_U605[0], 48 );
                sub_502( "ka", "UFE 1 HAVE BEEN DAMAGE, HEARD OR SEEN THE PLAYER", 0 );
                return 1;
            }
        }
        if ((DOES_PED_EXIST( l_U601[0] )) == 1)
        {
            if (((GET_PED_AWARENESS_STATE( l_U601[0], sub_653(), 2 )) == 1) || (((GET_PED_AWARENESS_STATE( l_U601[0], sub_653(), 1 )) == 1) || (((HAS_PED_BEEN_DAMAGED_BY_PED( l_U601[0], sub_653(), 0 )) == 1) || ((IS_PED_DEAD( l_U601[0] )) == 1))))
            {
                sub_502( "ka", "UFE 2 HAVE BEEN DAMAGE, HEARD OR SEEN THE PLAYER", 0 );
                return 1;
            }
        }
        if (((sub_1690( ref l_U615 )) == 1) || ((HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_653() ), 7.00000000, 0, ref uVar2 )) == 1))
        {
            sub_502( "ka", "PLAYER FIRED, IS NOT IN COVER, LEFT THE TRIGGER OR THE TIMER RAN OUT", 0 );
            return 1;
        }
        if ((sub_1324( ref l_U536 )) == 0)
        {
            if (((IS_CONTROL_JUST_PRESSED( 0, 27 )) == 1) || ((IS_PED_IN_COVER( sub_653() )) == 0))
            {
                sub_1434( ref l_U536, l_U535, 1, 0 );
                sub_1570( ref l_U536 );
            }
        }
        else if (sub_1690( ref l_U536 ))
        {
            return 1;
        }
        if ((l_U625._fU16) || (sub_1690( ref l_U625 )))
        {
            if (((IS_CONTROL_JUST_PRESSED( 0, 6 )) == 1) || ((IS_CONTROL_PRESSED( 0, 6 )) == 1))
            {
                sub_502( "NS", "PLAYER aimed Too Long", 0 );
                return 1;
            }
        }
    }
    return 0;
}

void sub_27596()
{
    sub_502( "KA", "P_START_VIG_11_BREAKOUT", 0 );
    sub_502( "KA", "ISEQ Interrupted or timer has run out - set UFE to attack the player", 0 );
    if ((IS_PED_DEAD( sub_653() )) == 0)
    {
        if (((IS_PED_DEAD( l_U601[0] )) == 0) AND ((DOES_PED_EXIST( l_U601[0] )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U601[0], 0 );
            REGISTER_TARGET( l_U601[0], sub_653() );
            SET_PED_DEFAULT_AIM_AT_PED( l_U601[0], sub_653() );
            PED_SET_ACTION_INTENTION( l_U601[0], 47, -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_653() ) );
            TASK_COMBAT_PED( l_U601[0], sub_653() );
            sub_20489( ref l_U328, l_U601[0], 1 );
            sub_1434( ref l_U471, 1000, 1, 0 );
            sub_1570( ref l_U471 );
        }
        if (((IS_PED_DEAD( l_U605[0] )) == 0) AND ((DOES_PED_EXIST( l_U605[0] )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U605[0], 0 );
            REGISTER_TARGET( l_U605[0], sub_653() );
            SET_PED_DEFAULT_AIM_AT_PED( l_U605[0], sub_653() );
            PED_SET_ACTION_INTENTION( l_U605[0], 47, -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_653() ) );
            TASK_COMBAT_PED( l_U605[0], sub_653() );
        }
    }
    if ((sub_1690( ref l_U471 )) == 1)
    {
        sub_502( "CO", "sssSFV2_VIG11B", "*********************" );
        sub_17640( ref l_U697 );
        sub_17736( 1, l_U601[0], "M9_UFE_051_MUS", ref l_U697, 2, 0 );
        sub_17991( "SFV2_VIG11B", ref l_U697, 8, 1 );
    }
    sub_1434( ref l_U480, 2000, 1, 0 );
    sub_1570( ref l_U480 );
    sub_1434( ref l_U508, 3000, 1, 0 );
    sub_1570( ref l_U508 );
    ISEQ_UNREGISTER_ENTITY( 1526913321, "UFE_1" );
    ISEQ_UNREGISTER_ENTITY( 1526913321, "UFE_2" );
    sub_3051( 1526913321, 1 );
    AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_3_5_6", "", 0.00000000, 1000, 3000, -1082130432, 0 );
    l_U611 = 1;
    return;
}

void sub_28422()
{
    if (sub_1690( ref l_U480 ))
    {
        sub_28446();
        sub_28746();
        l_U547 = 1;
    }
    return;
}

void sub_28446()
{
    int I;

    sub_502( "SP", "P_ACTIVATE_BRIDGE_ENEMIES_03", 0 );
    for ( I = 0; I < l_U394; I++ )
    {
        if (((IS_PED_DEAD( l_U394[I] )) == 0) AND ((DOES_PED_EXIST( l_U394[I] )) == 1))
        {
            FREEZE_PED_POSITION( l_U394[I], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U394[I], 0 );
            SET_BLOCKING_OF_PED_TARGETTING( l_U394[I], 0 );
            if (I == 0)
            {
                sub_20489( ref l_U324, l_U394[I], 1 );
                SET_PED_COMBAT_ATTRIBUTES( l_U394[I], 1, 0 );
                if ((IS_PED_DEAD( sub_653() )) == 0)
                {
                    TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U394[I], -100.66500000, 311.69700000, -10.13650000, sub_653(), 0, 1092616192, 1101004800, -1082130432, 3 );
                }
            }
        }
    }
    return;
}

void sub_28746()
{
    int I;
    unknown uVar3;

    sub_502( "SP", "P_ACTIVATE_BRIDGE_ENEMIES_01", 0 );
    for ( I = 0; I < l_U376; I++ )
    {
        if (((IS_PED_DEAD( l_U376[I] )) == 0) AND ((DOES_PED_EXIST( l_U376[I] )) == 1))
        {
            if ((IS_PED_DEAD( sub_653() )) == 0)
            {
                if (I == 0)
                {
                    FREEZE_PED_POSITION( l_U376[I], 0 );
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U376[I], 0 );
                    TASK_ATTACK_MOVE( l_U376[I], -104.84290000, 307.20070000, -10.04942000, 1092616192, 1101004800, -1082130432, 3 );
                }
                else if (I == 1)
                {
                    FREEZE_PED_POSITION( l_U376[I], 0 );
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U376[I], 0 );
                    TASK_ATTACK_MOVE( l_U376[I], -104.79000000, 304.01000000, -10.05000000, 1092616192, 1101004800, -1082130432, 3 );
                }
            }
        }
    }
    return;
}

void sub_29109()
{
    if ((IS_PED_USING_MP3_COVER_TASK( sub_653() )) == 1)
    {
        if (l_U545 == 0)
        {
            sub_502( "ka", "PLAYER IN COVER - START TIMER", 0 );
            sub_1434( ref l_U489, 1500, 1, 0 );
            sub_1570( ref l_U489 );
            l_U545 = 1;
            l_U546 = 0;
        }
    }
    if ((sub_1690( ref l_U489 )) == 1)
    {
        sub_502( "ka", "TIMER DONE - RUSH THE PLAYER AND THROW GRENS!", 0 );
        SET_GROUP_GRENADE_PARAMS( l_U330._fU0, 1000 );
        SET_GROUP_RATIO_FIRING_AT_INVISIBLE( l_U330._fU0, 0.00000000 );
        SET_GROUP_MAX_NUM_MOVING( l_U330._fU0, 1 );
        SET_GROUP_MAX_NUM_ADVANCING( l_U330._fU0, 1 );
    }
    if ((IS_PED_USING_MP3_COVER_TASK( sub_653() )) == 0)
    {
        if (l_U546 == 0)
        {
            sub_502( "ka", "PLAYER NOT IN COVER - RESET TIMER", 0 );
            SET_GROUP_GRENADE_PARAMS( l_U330._fU0, 3000 );
            SET_GROUP_RATIO_FIRING_AT_INVISIBLE( l_U330._fU0, 0.50000000 );
            SET_GROUP_MAX_NUM_MOVING( l_U330._fU0, 1 );
            SET_GROUP_MAX_NUM_ADVANCING( l_U330._fU0, 0 );
            sub_2227( ref l_U489 );
            l_U545 = 0;
            l_U546 = 1;
        }
    }
    return;
}

void sub_29558(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_29759(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_29928()
{
    sub_502( "NS", "P_ACTIVATE_LAST_BRIDGE_ENEMIES_01()", 0 );
    if (NOT (IS_PED_DEAD( sub_653() )))
    {
        if (NOT (IS_PED_DEAD( l_U376[2] )))
        {
            sub_30034( l_U376[2] );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U376[2], 0 );
            TASK_COMBAT_PED( l_U376[2], sub_653() );
            SET_PED_COMBAT_ATTRIBUTES( l_U376[2], 8192, 1 );
            SET_PED_COMBAT_ATTRIBUTES( l_U376[2], 1, 0 );
            SET_PED_COMBAT_ATTRIBUTES( l_U376[2], 1024, 1 );
            TASK_ATTACK_MOVE( l_U376[2], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_653() ), 0, 1101004800, -1082130432, 3 );
        }
    }
    return;
}

void sub_30034(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_30286(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_30325( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

int sub_30325(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_30451()
{
    int I;

    sub_502( "NS", "P_SETUP_AFTER_JUMP", 0 );
    for ( I = 0; I < 4; I++ )
    {
        sub_3666( l_U465[I] );
        if (I != 3)
        {
            l_U465[I] = sub_14498( ref l_U412[I] );
        }
        SET_PED_AI_TEMPLATE( l_U465[I], "AIT_UFE_AVERAGE" );
        sub_15036( l_U465[I], ref l_U330 );
        if (((IS_PED_DEAD( l_U465[I] )) == 0) AND ((DOES_PED_EXIST( l_U465[I] )) == 1))
        {
            SET_PED_ALERTNESS( l_U465[I], 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U465[I], 1 );
            if (NOT (IS_PED_DEAD( sub_653() )))
            {
                REGISTER_TARGET( l_U465[I], sub_653() );
            }
        }
    }
    if (NOT (IS_PED_DEAD( l_U465[0] )))
    {
        SET_PED_COMBAT_RANGE_MIN( l_U465[0], 0.50000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U465[0], 4.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U465[1] )))
    {
        SET_PED_COMBAT_RANGE_MIN( l_U465[1], 0.40000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U465[1], 4.00000000 );
    }
    sub_6323( l_U465[0], g_U1311, 25000, 0, 0 );
    sub_6323( l_U465[1], g_U1308, 25000, 0, 0 );
    sub_6323( l_U465[2], g_U1309, 25000, 0, 0 );
    sub_6323( l_U465[3], g_U1309, 25000, 0, 0 );
    sub_30950( ref l_U465 );
    sub_20844( ref l_U465, "piAfterJump" );
    return;
}

void sub_30950(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_20641( (uParam0^)[I] );
    }
    return;
}

void sub_31058()
{
    sub_502( "SP", "P_RETETHER_BRIDGE_ENEMIES_01", 0 );
    if (((IS_PED_DEAD( l_U376[0] )) == 0) AND ((DOES_PED_EXIST( l_U376[0] )) == 1))
    {
        SET_PED_COMBAT_RANGE_MIN( l_U376[0], 3.00000000 );
        sub_29759( l_U376[0] );
        sub_20489( ref l_U327, l_U376[0], 1 );
    }
    if (((IS_PED_DEAD( l_U376[1] )) == 0) AND ((DOES_PED_EXIST( l_U376[1] )) == 1))
    {
        SET_PED_COMBAT_RANGE_MIN( l_U376[1], 3.00000000 );
        sub_29759( l_U376[1] );
        sub_20489( ref l_U327, l_U376[1], 1 );
    }
    return;
}

void sub_31300()
{
    int I;

    sub_502( "SP", "P_RETETHER_BRIDGE_ENEMIES_03", 0 );
    for ( I = 0; I < l_U394; I++ )
    {
        if (((IS_PED_DEAD( l_U394[I] )) == 0) AND ((DOES_PED_EXIST( l_U394[I] )) == 1))
        {
            if (I == 0)
            {
                sub_17159( l_U394[I], -115.13000000, 306.93000000, -9.84000000, 240.00000000 );
                SET_PED_COMBAT_RANGE_MIN( l_U394[I], 3.00000000 );
                sub_31489( ref l_U326, l_U394[I] );
                sub_20489( ref l_U327, l_U394[I], 1 );
            }
        }
    }
    return;
}

void sub_31489(int iParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_REMOVE_BOX( uParam1, iParam0->_fU0 );
    }
    return;
}

void sub_31663()
{
    int I;

    sub_502( "NS", "P_ACTIVATE_AFTER_JUMP", 0 );
    sub_31712( ref l_U465 );
    for ( I = 0; I < 4; I++ )
    {
        if (((IS_PED_DEAD( l_U465[I] )) == 0) AND ((DOES_PED_EXIST( l_U465[I] )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U465[I], 0 );
            if (NOT (IS_PED_DEAD( sub_653() )))
            {
                if (I == 0)
                {
                    TASK_ATTACK_MOVE( l_U465[I], -104.58000000, 327.57000000, -13.85000000, 1092616192, 1101004800, -1082130432, 3 );
                }
                else if (I == 1)
                {
                    TASK_ATTACK_MOVE( l_U465[I], -103.15300000, 322.48100000, -13.85000000, 1092616192, 1101004800, -1082130432, 3 );
                }
                else if (I == 2)
                {
                    SET_PED_FLAG_LOCK_TO_COVER( l_U465[I], 1 );
                    TASK_COMBAT_MOVE_TO_COVER( l_U465[I], "fav2_03", "Corner_Position22", 0 );
                }
                else if (I == 3)
                {
                    TASK_ATTACK_MOVE( l_U465[I], -101.36590000, 337.89950000, -19.00000000, 1092616192, 1101004800, -1082130432, 3 );
                };;;;
            }
        }
    }
    return;
}

void sub_31712(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_30034( (uParam0^)[I] );
    }
    return;
}

void sub_32148(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_30325( sub_653(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_32256(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_32282()
{
    sub_502( "NS", "P_RELEASE_AFTER_JUMP_ENEMIES()", 0 );
    if (NOT (IS_PED_DEAD( l_U465[2] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U465[2], 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U465[2], 8192, 1 );
        SET_PED_COMBAT_RANGE_MIN( l_U465[2], 0.00000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U465[2], 1.00000000 );
        SET_PED_ACCURACY( l_U465[2], 31186664 );
    }
    return;
}

void sub_32549()
{
    unknown uVar2;
    vector vVar3;

    sub_502( "SP", "P_SETUP_FINAL_ENEMY", 0 );
    vVar3 = {-98.47000000, 346.02000000, -17.41000000};
    sub_3666( l_U410[0] );
    l_U410[0] = sub_14498( ref l_U396[0] );
    sub_15036( l_U410[0], ref l_U330 );
    if ((NOT (IS_PED_DEAD( l_U410[0] ))) AND (DOES_PED_EXIST( l_U410[0] )))
    {
        SET_PED_AI_TEMPLATE( l_U410[0], "AIT_UFE_AVERAGE" );
        sub_6323( l_U410[0], g_U1308, 25000, 0, 0 );
        SET_PED_ALERTNESS( l_U410[0], 3 );
        SET_PED_COMBAT_MOVEMENT( l_U410[0], 1 );
        if (NOT (IS_PED_DEAD( l_U410[0] )))
        {
            REGISTER_TARGET( l_U410[0], sub_653() );
        }
        if (NOT (IS_PED_DEAD( sub_653() )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -98.82000000, 346.62000000, -17.34000000, 2, 20000, 1048576000, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U410[0], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
    }
    sub_20844( ref l_U410, "piFinalEnemy" );
    return;
}

void sub_32998()
{
    if (NOT (IS_PED_DEAD( l_U410[0] )))
    {
        CLEAR_PED_TASKS( l_U410[0] );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U410[0], 1 );
        if (NOT (IS_PED_DEAD( sub_653() )))
        {
            TASK_FOLLOW_NAV_MESH_TO_COORD( l_U410[0], -100.28200000, 348.74270000, -17.22978000, 3, 20000, 1048576000, 0, 0 );
        }
    }
    return;
}

void sub_33144(int iParam0, unknown uParam1)
{
    if ((sub_3299( iParam0 )) == 0)
    {
        sub_3365( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

void sub_33221(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_3299( iParam0 )) == 0)
    {
        sub_3365( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_33373(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_30325( sub_653(), uParam0 );
}

void sub_33535()
{
    ISEQ_UNREGISTER_ENTITY( 1526913321, "UFE_1" );
    ISEQ_UNREGISTER_ENTITY( 1526913321, "UFE_2" );
    sub_3051( 1526913321, 1 );
    ISEQ_UNREGISTER_ENTITY( -497997588, "PLAYER" );
    sub_3051( -497997588, 1 );
    sub_3632( ref l_U605 );
    sub_3632( ref l_U601 );
    sub_3632( ref l_U376 );
    sub_3632( ref l_U394 );
    sub_3632( ref l_U410 );
    sub_33678( -1978121733 );
    sub_33835( "LEVEL_S_FAV2_CHAOS" );
    sub_33835( "LEVEL_S_FAV2_CP_06" );
    return;
}

void sub_33678(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_5994( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_33835(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_34173(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_34250()
{
    if (l_U548 == 0)
    {
        if (sub_34272() == 1)
        {
            l_U470 = sub_34386();
            if (((IS_PED_DEAD( l_U470 )) == 0) AND ((DOES_PED_EXIST( l_U470 )) == 1))
            {
                l_U548 = 1;
            }
        }
    }
    return;
}

void sub_34272()
{
    int Result;

    Result = 0;
    Result += sub_29558( ref l_U605 );
    Result += sub_29558( ref l_U601 );
    Result += sub_29558( ref l_U376 );
    Result += sub_29558( ref l_U394 );
    Result += sub_29558( ref l_U410 );
    Result += sub_29558( ref l_U465 );
    return Result;
}

void sub_34386()
{
    unknown Result;

    Result = sub_34400( ref l_U605 );
    if (((IS_PED_DEAD( Result )) == 0) AND ((DOES_PED_EXIST( Result )) == 1))
    {
        return Result;
    }
    Result = sub_34400( ref l_U601 );
    if (((IS_PED_DEAD( Result )) == 0) AND ((DOES_PED_EXIST( Result )) == 1))
    {
        return Result;
    }
    Result = sub_34400( ref l_U376 );
    if (((IS_PED_DEAD( Result )) == 0) AND ((DOES_PED_EXIST( Result )) == 1))
    {
        return Result;
    }
    Result = sub_34400( ref l_U394 );
    if (((IS_PED_DEAD( Result )) == 0) AND ((DOES_PED_EXIST( Result )) == 1))
    {
        return Result;
    }
    Result = sub_34400( ref l_U410 );
    if (((IS_PED_DEAD( Result )) == 0) AND ((DOES_PED_EXIST( Result )) == 1))
    {
        return Result;
    }
    Result = sub_34400( ref l_U465 );
    if (((IS_PED_DEAD( Result )) == 0) AND ((DOES_PED_EXIST( Result )) == 1))
    {
        return Result;
    }
    return Result;
}

void sub_34400(unknown uParam0)
{
    int I;

    if ((sub_29558( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_34844()
{
    if (sub_33373( l_U301 ))
    {
        if ((sub_1324( ref l_U517 )) == 0)
        {
            sub_1434( ref l_U517, 8000, 1, 0 );
            sub_1570( ref l_U517 );
        }
        else if ((sub_1690( ref l_U517 )) == 1)
        {
            sub_17640( ref l_U671 );
            sub_17736( 0, sub_653(), "MAX", ref l_U671, 2, 0 );
            sub_17991( "SFV2_MDTLFRCA", ref l_U671, 8, 1 );
        }
    }
    return;
}

void sub_35154()
{
    sub_502( "SP", "P_UNLOAD_ASSETS", 0 );
    sub_33678( -1978121733 );
    sub_33678( -346844275 );
    sub_35218( g_U1308 );
    sub_33835( "LEVEL_S_FAV2_CP_06" );
    sub_33678( g_U780 );
    sub_33835( "LEVEL_S_FAV2_CHAOS" );
    sub_35337( "LEVEL/S_FAV2/S_FAV2_DEAD_CS" );
    RELEASE_NAMED_SCRIPT_AUDIO_BANK( "SCRIPT_MISSION\S_FAV2_ROUNDUP" );
    return;
}

void sub_35218(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}

void sub_35337(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}


void main()
{
    unknown uVar2;

    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U40 = 0;
    l_U92 = 0;
    l_U93 = 0;
    l_U94 = 1;
    l_U96 = 0;
    l_U97 = 0;
    l_U98 = 1500;
    l_U108 = {0, 0, 0};
    StrCopy( ref l_U111, "DUMMY", 32 );
    l_U119 = 1;
    l_U124 = 0;
    l_U125 = 0;
    l_U126 = 0;
    l_U129 = 0;
    l_U174 = 2000;
    l_U249 = 0;
    l_U250 = 0;
    l_U251 = 0;
    l_U272 = 0;
    sub_369( "KA", "Script fav2_ai_test is starting...", "###" );
    uVar2 = sub_494( sub_418(), 456708483, 200, 0, 1 );
    sub_833( 1000 );
    while (true)
    {
        sub_917();
        WAIT( 0 );
    }
    sub_369( "KA", "Script fav2_ai_test is terminating...", "###" );
    return;
}

void sub_369(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

int sub_418()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_440() );
    }
    return 0;
}

void sub_440()
{
    return GET_PLAYER_ID();
}

void sub_494(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_800( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_800(unknown uParam0)
{
    return;
}

void sub_833(unknown uParam0)
{
    if ((IS_SCREEN_FADING_IN() == 0) AND (IS_SCREEN_FADED_IN() == 0))
    {
        DO_SCREEN_FADE_IN( uParam0 );
        while (IS_SCREEN_FADED_IN() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_917()
{
    if (l_U272 == 0)
    {
        START_WIDGET_GROUP( "AI_TEST - Encounter Testing" );
        START_WIDGET_GROUP( "S_FAV2_BATTLE_TEST" );
        ADD_WIDGET_STRING( "A fight between 2 UFE and 2 CS across the street" );
        ADD_WIDGET_BOOL( "Teleport player to the Encounter", ref l_U250 );
        ADD_WIDGET_BOOL( "Start Encounter", ref l_U249 );
        ADD_WIDGET_BOOL( "Kill Encounter", ref l_U251 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U272 = 1;
    }
    sub_1191();
    return;
}

void sub_1191()
{
    int I;

    switch (l_U175)
    {
        case 0:
        if (l_U250 == 1)
        {
            l_U175 = 1;
            l_U250 = 0;
        }
        if (l_U249 == 1)
        {
            l_U175 = 2;
            l_U249 = 0;
        }
        break;
        case 1:
        sub_1333( 1000 );
        sub_1438( sub_418(), -167.12000000, 201.51000000, 8.59000000, -54.76000000 );
        LOAD_SCENE( -167.12000000, 201.51000000, 8.59000000 );
        sub_833( 1000 );
        l_U175 = 0;
        break;
        case 2:
        sub_1575( ref l_U215[0], -155.81000000, 215.21000000, 3.86000000, 142.79950000, -961888456, 9, 5, 0, 0, 0 );
        l_U212[0] = sub_1689( ref l_U215[0] );
        SET_PED_AI_TEMPLATE( l_U212[0], "AIT_NORMAL" );
        SET_PED_RELATIONSHIP_GROUP( l_U212[0], 5 );
        SET_PED_RELATIONSHIP( l_U212[0], 2, 4 );
        sub_1575( ref l_U215[1], -150.55000000, 214.36000000, 3.86000000, 142.79950000, -1459646085, 9, 5, 0, 0, 0 );
        l_U212[1] = sub_1689( ref l_U215[1] );
        SET_PED_AI_TEMPLATE( l_U212[1], "AIT_NORMAL" );
        SET_PED_RELATIONSHIP_GROUP( l_U212[1], 5 );
        SET_PED_RELATIONSHIP( l_U212[1], 2, 4 );
        sub_494( l_U212[0], 57534114, 25000, 0, 1 );
        sub_494( l_U212[1], 57534114, 25000, 0, 1 );
        sub_2751( ref l_U242, 1056964608, 0 );
        sub_2935( l_U212[0], ref l_U242 );
        sub_2935( l_U212[1], ref l_U242 );
        sub_3224( ref l_U212, "UFE_" );
        CLEAR_SEQUENCE_TASK( l_U248 );
        for ( I = 0; I <= 1; I++ )
        {
            OPEN_SEQUENCE_TASK( ref l_U248 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U212[I], 0 );
            CLOSE_SEQUENCE_TASK( l_U248 );
            if (NOT (IS_PED_DEAD( l_U212[I] )))
            {
                SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U212[I], 1 );
                SET_PED_GORE( l_U212[I], 0 );
                SET_PED_ACCURACY( l_U212[I], -1467320974 );
                SET_PED_COMBAT_ATTRIBUTES( l_U212[I], 1, 1 );
                CLEAR_PED_TASKS( l_U212[I] );
                TASK_PERFORM_SEQUENCE( l_U212[I], l_U248 );
            }
            CLEAR_SEQUENCE_TASK( l_U248 );
        }
        l_U175 = 3;
        break;
        case 3:
        l_U265[0] = {-144.63800000, 216.67200000, 1.50562000};
        l_U265[1] = {-144.63800000, 216.67200000, 1.50562000};
        sub_1575( ref l_U179[0], -155.21000000, 202.58000000, 4.40000000, -7.33000000, 1807867450, 8, 4, 0, 0, 0 );
        l_U176[0] = sub_1689( ref l_U179[0] );
        SET_PED_RELATIONSHIP_GROUP( l_U176[0], 4 );
        SET_PED_RELATIONSHIP( l_U176[0], 2, 4 );
        sub_1575( ref l_U179[1], -150.33000000, 202.75000000, 4.44000000, 13.99000000, 1807867450, 8, 4, 0, 0, 0 );
        l_U176[1] = sub_1689( ref l_U179[1] );
        SET_PED_RELATIONSHIP_GROUP( l_U176[1], 4 );
        SET_PED_RELATIONSHIP( l_U176[1], 2, 4 );
        sub_494( l_U176[0], g_U1310, 25000, 0, 1 );
        sub_494( l_U176[1], g_U1308, 25000, 0, 1 );
        sub_2751( ref l_U206, 1056964608, 0 );
        sub_2935( l_U176[0], ref l_U206 );
        sub_2935( l_U176[1], ref l_U206 );
        CLEAR_SEQUENCE_TASK( l_U248 );
        for ( I = 0; I <= 1; I++ )
        {
            OPEN_SEQUENCE_TASK( ref l_U248 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_SHOOT_AT_COORD( 0, l_U265[I], -1, 0, 0, 0 );
            CLOSE_SEQUENCE_TASK( l_U248 );
            if (NOT (IS_PED_DEAD( l_U176[I] )))
            {
                SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U176[I], 1 );
                SET_PED_ACCURACY( l_U176[I], -1467320974 );
                SET_PED_HEALTH( l_U176[I], 500, 0 );
                SET_PED_COMBAT_ATTRIBUTES( l_U176[I], 1, 1 );
                CLEAR_PED_TASKS( l_U176[I] );
                TASK_PERFORM_SEQUENCE( l_U176[I], l_U248 );
            }
            CLEAR_SEQUENCE_TASK( l_U248 );
        }
        sub_3224( ref l_U176, "CSRoofTop_" );
        l_U175 = 4;
        break;
        case 4:
        l_U252[0] = {-154.97000000, 214.52000000, 3.86000000};
        l_U252[1] = {-152.55000000, 217.49000000, 3.86000000};
        SET_RELATIONSHIP_BETWEEN_REL_GROUPS( 2, 5, 4 );
        SET_RELATIONSHIP_BETWEEN_REL_GROUPS( 2, 4, 5 );
        CLEAR_SEQUENCE_TASK( l_U248 );
        if ((IS_PED_DEAD( l_U212[0] )) == 0)
        {
            OPEN_SEQUENCE_TASK( ref l_U248 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_MOVE_TO_COVER( l_U212[0], "GenCover", "C37344FE_15F2B99B_Corner1", l_U176[0] );
            CLOSE_SEQUENCE_TASK( l_U248 );
            TASK_PERFORM_SEQUENCE( l_U212[0], l_U248 );
            CLEAR_SEQUENCE_TASK( l_U248 );
        }
        if ((IS_PED_DEAD( l_U212[1] )) == 0)
        {
            OPEN_SEQUENCE_TASK( ref l_U248 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_MOVE_TO_COVER( l_U212[1], "GenCover", "C37344FE_AFD7ED63_Popover1", l_U176[1] );
            CLOSE_SEQUENCE_TASK( l_U248 );
            TASK_PERFORM_SEQUENCE( l_U212[1], l_U248 );
            CLEAR_SEQUENCE_TASK( l_U248 );
        }
        l_U175 = 5;
        break;
        case 5:
        if (l_U251 == 1)
        {
            l_U175 = 6;
            l_U251 = 0;
        }
        break;
        case 6:
        sub_4584( l_U212[0] );
        sub_4584( l_U212[1] );
        sub_4584( l_U176[0] );
        sub_4584( l_U176[1] );
        l_U175 = 0;
        break;
        case 7: break;
    }
    return;
}

void sub_1333(unknown uParam0)
{
    if ((IS_SCREEN_FADING_OUT() == 0) AND (IS_SCREEN_FADED_OUT() == 0))
    {
        DO_SCREEN_FADE_OUT( uParam0 );
        while (IS_SCREEN_FADED_OUT() == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_1438(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_1575(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_1689(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_1859( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_2328( iParam0->_fU40 );
    sub_2408( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_1859(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_800( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_2328(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_2408(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_2751(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_2935(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_800( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_2751( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_2751( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_3224(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_4584(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}


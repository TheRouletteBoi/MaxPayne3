void main()
{
    unknown uVar2;

    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U40 = 0;
    l_U92 = 0;
    l_U93 = 0;
    l_U94 = 1;
    l_U96 = 0;
    l_U97 = 0;
    l_U98 = 1500;
    l_U108 = {0, 0, 0};
    StrCopy( ref l_U111, "DUMMY", 32 );
    l_U119 = 1;
    l_U124 = 0;
    l_U125 = 0;
    l_U126 = 0;
    l_U129 = 0;
    l_U174 = 2000;
    l_U176 = 0;
    l_U684 = 0;
    l_U685 = 0;
    l_U785 = 1;
    l_U786 = 1;
    l_U787 = 1;
    l_U788 = 0;
    l_U789 = 0;
    l_U790 = 1;
    l_U791 = 0;
    l_U792 = 0;
    l_U793 = 0;
    l_U794 = 1;
    l_U795 = 0;
    l_U796 = 0;
    l_U797 = 0;
    l_U798 = 0;
    l_U799 = 0;
    l_U800 = 0;
    l_U801 = 1;
    l_U802 = 0;
    l_U803 = 0;
    l_U804 = 0;
    l_U805 = 0;
    l_U806 = 0;
    l_U807 = 0;
    l_U808 = 0;
    l_U809 = 1;
    l_U810 = 0;
    l_U811 = 0;
    l_U812 = 0;
    l_U813 = 1;
    l_U827 = 0;
    l_U992 = 10000;
    l_U1165 = 0;
    l_U1166 = 0;
    l_U1190 = 0;
    l_U1191 = 0;
    l_U1275 = {-179.02000000, 224.51000000, 7.51000000};
    l_U1278 = 180.00000000;
    l_U1280 = {-179.84000000, 220.96000000, 7.49000000};
    l_U1283 = {0.00000000, 0.00000000, 180.00000000};
    l_U1286 = 2000;
    l_U1310 = {-139.76000000, 223.07000000, 1.63000000};
    l_U1313 = -122.00000000;
    l_U1315 = {-138.20000000, 220.54000000, 1.67000000};
    l_U1318 = {0.00000000, 0.00000000, -150.00000000};
    l_U1322 = 0;
    l_U1326 = 1232833631;
    StrCopy( ref l_U1368, "f2_anim_hlgt", 32 );
    l_U1376 = {0.00000000, 0.00000000, 0.00000000};
    l_U1379 = {-0.40000000, 2.40000000, -0.13000000};
    l_U1382 = {0.00000000, 0.00000000, 0.00000000};
    l_U1407 = 0;
    l_U1414 = {-167.68000000, 216.87000000, 5.65000000};
    l_U1417 = -90.00000000;
    l_U1418 = {-167.35000000, 215.58000000, 5.70000000};
    l_U1421 = -90.00000000;
    l_U1422 = {-171.56000000, 216.63000000, 6.10000000};
    l_U1425 = -90.00000000;
    l_U1426 = {-170.19000000, 215.59000000, 6.00000000};
    l_U1429 = -90.00000000;
    l_U1430 = {-170.38000000, 217.38000000, 5.80000000};
    l_U1433 = -90.00000000;
    l_U1434 = 0;
    l_U1447 = 0;
    if (g_U781 == 5)
    {
        if ((sub_988( ref l_U598 )) == 0)
        {
            uVar2 = sub_3427( sub_1161(), g_U1310, 200, 0, 0 );
            g_U1046 = 1;
        }
    }
    while (NOT IS_EXITFLAG_SET())
    {
        sub_5355();
        sub_5373();
        sub_9759();
        WAIT( 0 );
    }
    sub_1028( "NS", "CHECKPOINT MCE_UFE_RUN HAS ENDED", "########################" );
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "fav2_UfeRun" );
    SET_EXITFLAG_RESPONSE();
    return;
}

int sub_988(unknown uParam0)
{
    sub_1028( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            g_U665 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, g_U666 );
            sub_1227( uParam0, sub_1161() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_1028(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

int sub_1161()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1183() );
    }
    return 0;
}

void sub_1183()
{
    return GET_PLAYER_ID();
}

void sub_1227(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1028( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (g_U665)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_1413( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_2490( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_2782( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_3142( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_2782( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_3142( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_2782( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_3142( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_3427( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_3142( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_3427( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_3142( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (g_U665 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_3922( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_4083( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1161(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (g_U665)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    g_U665 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1028( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_1413(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_1445( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_1445(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_2490(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_2782(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_3098( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_3098(unknown uParam0)
{
    return;
}

void sub_3142(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_3427(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_3098( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_3922(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_4083(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_1445( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_4155( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_4155(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_5355()
{
    return;
}

void sub_5373()
{
    if (g_U782 == 5)
    {
        switch (l_U176)
        {
            case 0:
            if ((sub_5467()) || (IS_PED_DEAD( sub_1161() )))
            {
                l_U176 = 1;
                sub_1028( "kja", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_5964())
            {
                l_U176 = 2;
            }
            else if ((sub_6004( 0 )) == 1)
            {
                l_U176 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_1161() )))
            {
                if ((g_U1312[5]._fU40 != 4) AND (g_U1312[5]._fU40 != 0))
                {
                    sub_1028( "kja", "Shutting down script for MCE_UFE_RUN.", 0 );
                    sub_7449( ref g_U1312[5] );
                }
                l_U176 = 3;
                sub_1028( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_1028( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_1161() ))) AND (NOT (IS_PLAYER_DEAD( sub_1183() ))))
            {
                SET_PLAYER_CONTROL( sub_1183(), 0, 0 );
                SET_PED_FORCED_TO_WALK( sub_1161(), 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1183(), 1 );
                SET_CAN_ROLL_DODGE( sub_1161(), 1 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            sub_7714();
            sub_8939();
            sub_9103( ref g_U1198, 1 );
            sub_9103( ref g_U1205, 1 );
            sub_9103( ref g_U1100, 0 );
            l_U176 = 4;
            sub_1028( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_1028( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_1227( ref l_U598, sub_1161() );
            l_U176 = 5;
            sub_1028( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_1028( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            sub_7449( ref g_U1312[5] );
            l_U175 = 0;
            l_U176 = 0;
            sub_1028( "kja", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    else if ((sub_5964()) || (IS_PED_DEAD( sub_1161() )))
    {
        sub_1028( "CO", "CHECKPOINT MCE_UFE_BATTLE HAS ENDED", "########################" );
        sub_7449( ref g_U1312[5] );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_5467()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        g_U665 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1161() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1161(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1183(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1183(), 1 );
            if ((IS_PED_VISIBLE( sub_1161() )) == 0)
            {
                SET_PED_VISIBLE( sub_1161(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_5964()
{
    return g_U648;
}

int sub_6004(int iParam0)
{
    iParam0 = 1;
    switch (l_U97)
    {
        case 0:
        if (NOT (sub_6065( ref l_U99 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1161() )))
            {
                l_U98 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_6175( ref l_U99, l_U98, 1, 1 );
            sub_6311( ref l_U99 );
        }
        if (sub_6431( ref l_U99 ))
        {
            sub_1028( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1161() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1183() )))
            {
                SET_PLAYER_CONTROL( sub_1183(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U97 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U97 = 2;
            }
            else
            {
                l_U97 = 3;
            }
        }
        break;
        case 2:
        sub_1028( "NS", "Player will QUIT", 0 );
        sub_6918();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1028( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_6918();
        return 1;
        break;
    }
    return 0;
}

int sub_6065(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_6175(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_6311(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_6431(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_6918()
{
    sub_1028( "NS", "P_PostFailRetryCleanup", 0 );
    sub_6968( ref l_U99 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1183() )))
    {
        SET_PLAYER_CONTROL( sub_1183(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U96 = 0;
    l_U96 = l_U96;
    l_U97 = 0;
    return;
}

void sub_6968(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_7449(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_7714()
{
    sub_7730( 656995606, 1 );
    sub_7730( 1681008462, 1 );
    sub_7730( -1827157400, 1 );
    sub_7730( -851927440, 1 );
    sub_7730( -1170716322, 1 );
    sub_7730( -956144910, 1 );
    sub_7730( 1557696148, 1 );
    ISEQ_UNREGISTER_ENTITY( -1979577743, "civ" );
    sub_7730( -1979577743, 1 );
    ISEQ_UNREGISTER_ENTITY( 1789862085, "civ" );
    sub_7730( 1789862085, 1 );
    ISEQ_UNREGISTER_ENTITY( -1935874550, "csrunner8" );
    ISEQ_UNREGISTER_ENTITY( -1935874550, "csrunner9" );
    sub_7730( -1935874550, 1 );
    ISEQ_UNREGISTER_ENTITY( 268580424, "CIV" );
    ISEQ_UNREGISTER_ENTITY( 268580424, "DOOR" );
    sub_8154( l_U1261 );
    sub_8233( l_U1279 );
    ISEQ_UNREGISTER_ENTITY( 432294348, "CIV" );
    ISEQ_UNREGISTER_ENTITY( 432294348, "DOOR" );
    sub_8154( l_U1296 );
    sub_8233( l_U1314 );
    ISEQ_UNREGISTER_ENTITY( -851927440, "TFE_1" );
    ISEQ_UNREGISTER_ENTITY( -851927440, "TFE_2" );
    ISEQ_UNREGISTER_ENTITY( -851927440, "TFE_3" );
    sub_8390();
    sub_8154( l_U1327 );
    sub_8593();
    sub_8618( ref l_U900 );
    sub_8618( ref l_U907 );
    sub_8154( l_U925 );
    sub_8154( l_U939 );
    sub_8154( l_U953 );
    sub_8154( l_U1015 );
    sub_8154( l_U1029 );
    sub_8154( l_U1043 );
    sub_8154( l_U1135 );
    sub_8154( l_U1136 );
    sub_8154( l_U1137 );
    sub_8154( l_U1138 );
    sub_8154( l_U1139 );
    sub_8154( l_U1140 );
    sub_8154( l_U1141 );
    sub_8154( l_U1347 );
    sub_8154( l_U1361 );
    sub_8154( l_U1205 );
    sub_8154( l_U1219 );
    sub_8618( ref l_U988 );
    sub_8154( l_U1233 );
    sub_8154( l_U1367 );
    sub_8405( l_U1366 );
    sub_8154( l_U1142 );
    sub_8154( l_U1167 );
    return;
}

void sub_7730(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_8154(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_8233(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_8390()
{
    sub_8405( l_U1328 );
    sub_8233( l_U1329 );
    sub_8154( l_U1361 );
    sub_8154( l_U1333 );
    sub_8154( l_U1347 );
    sub_8503( ref l_U1330 );
    l_U1407 = 0;
    return;
}

void sub_8405(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_8503(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_8154( (uParam0^)[I] );
        WAIT( 0 );
    }
    return;
}

void sub_8593()
{
    sub_7730( 1681008462, 1 );
    sub_8618( ref l_U894 );
    return;
}

void sub_8618(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_8154( (uParam0^)[I] );
    }
    return;
}

void sub_8939()
{
    sub_8954( l_U1363 );
    sub_8954( l_U1364 );
    sub_8954( l_U1365 );
    sub_9021( ref l_U1323 );
    sub_8954( g_U685._fU0 );
    return;
}

void sub_8954(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_9021(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_8954( (uParam0^)[I] );
    }
    return;
}

void sub_9103(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_9115( iParam0 )) == 0)
    {
        sub_9181( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_9115(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_9181(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_9759()
{
    switch (l_U175)
    {
        case 0:
        sub_9821();
        sub_10119();
        sub_13394( 0 );
        sub_9103( ref g_U1191, 1 );
        if (g_U782 == 5)
        {
            sub_1028( "NS", "UFE Run: STARTUP debug or save load", 0 );
            sub_13394( 1 );
            sub_14646();
            if (NOT (IS_PED_DEAD( sub_1161() )))
            {
                SET_PLAYER_CONTROL( sub_1183(), 0, 0 );
            }
            g_U1046 = 1;
            sub_14747( ref l_U598, 5, 0 );
            l_U175 = 1;
        }
        else
        {
            sub_1028( "NS", "UFE Run: Playthrough", 0 );
            l_U175 = 1;
        }
        break;
        case 1:
        if (l_U795 == 0)
        {
            if (sub_19295())
            {
                if (sub_19910())
                {
                    l_U795 = 1;
                }
            }
        }
        else if (((ABSF( sub_27567( ref g_U1198 ) )) > 0.10000000) || ((g_U781 == 5) || (sub_27479( l_U198 ))))
        {
            if ((IS_PED_DEAD( sub_1161() )) == 0)
            {
                SET_PED_FORCED_TO_WALK( sub_1161(), 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1183(), 1 );
                SET_CAN_ROLL_DODGE( sub_1161(), 1 );
            }
            DO_SCREEN_FADE_IN( 1000 );
            SET_PLAYER_CONTROL( sub_1183(), 1, 0 );
            l_U175 = 2;
        }
        break;
        case 2:
        if (IS_SCREEN_FADED_OUT())
        {
            if (NOT (IS_PED_DEAD( sub_1161() )))
            {
                SET_PLAYER_CONTROL( sub_1183(), 0, 0 );
            }
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U953[5], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U996[5], 1065353216, 0 );
        }
        sub_27836();
        sub_29046();
        sub_29074();
        sub_29187();
        sub_30728();
        sub_31204();
        sub_31592();
        sub_31754();
        sub_31930();
        sub_32073( ref g_U1198, 0 );
        if (l_U796 == 0)
        {
            AUDIO_MUSIC_REQUEST_ONESHOT( "FAV2_ONESHOT_H", 0 );
            l_U796 = 1;
        }
        if (g_U782 < 5)
        {
            SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
            SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        }
        sub_32298();
        sub_6175( ref l_U704, 2250, 1, 0 );
        sub_6311( ref l_U704 );
        g_U1046 = 1;
        l_U813 = 0;
        sub_6175( ref l_U686, 15000, 1, 0 );
        sub_6311( ref l_U686 );
        l_U175 = 3;
        break;
        case 3:
        if (l_U809 == 1)
        {
            if (sub_32874())
            {
                l_U809 = 0;
            }
        }
        if (l_U794 == 1)
        {
            if ((sub_27567( ref g_U1198 )) > -0.01000000)
            {
                if (sub_27479( l_U198 ))
                {
                    g_U1046 = 1;
                    sub_14747( ref l_U598, 5, 0 );
                    sub_9103( ref g_U1198, 1 );
                    l_U794 = 0;
                }
            }
        }
        if (l_U793 == 0)
        {
            if ((sub_6431( ref l_U767 )) || ((sub_33912( ref l_U576, 0 )) || (sub_33822())))
            {
                sub_34024();
                l_U793 = 1;
            }
        }
        if (sub_34361( ref l_U219, sub_1161(), 0 ))
        {
            SET_WEATHER_TYPE_PERSIST( "DRIZZLE" );
            SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
            SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
            g_U1046 = 1;
        }
        if (sub_34361( ref l_U387, sub_1161(), 0 ))
        {
            sub_34537();
            sub_35658();
            sub_8390();
            sub_36011();
            sub_36731();
            sub_37436();
            sub_37862();
            if (l_U1434)
            {
                sub_8593();
                l_U1434 = 0;
            }
            sub_38474( ref g_U1312[6] );
        }
        if (sub_34361( ref l_U450, sub_1161(), 0 ))
        {
            ADD_EXPLOSION( -164.50640000, 208.28280000, -1.63300800, 0, 1.00000000, 1, 1, 1065353216 );
            l_U790 = 0;
            sub_38563();
            sub_38762();
            sub_39229();
            sub_39310();
        }
        if (l_U802 == 1)
        {
            if (sub_39699())
            {
                l_U802 = 0;
            }
        }
        if ((sub_6431( ref l_U704 )) == 1)
        {
            sub_40007();
        }
        if (sub_34361( ref l_U429, sub_1161(), 0 ))
        {
            sub_8154( l_U1327 );
            sub_32073( ref g_U1100, 0 );
            sub_6175( ref l_U758, 2000, 1, 0 );
            sub_6311( ref l_U758 );
        }
        if (l_U792 == 0)
        {
            if ((sub_6431( ref l_U758 )) == 1)
            {
                sub_9103( ref g_U1100, 1 );
                l_U792 = 1;
            }
        }
        if (sub_34361( ref l_U366, sub_1161(), 0 ))
        {
            sub_40276();
            sub_40683();
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -168.14000000, 205.00000000, 5.30000000, -130.92700000, 210.46600000, 4.00300000, 100, 1, -1312131151, 0 );
            l_U684 = 1;
        }
        sub_41449();
        sub_41907();
        sub_43445();
        sub_43912();
        sub_44793();
        sub_46043();
        sub_46154();
        sub_46495();
        sub_46850();
        if ((sub_34361( ref l_U534, sub_1161(), 0 )) == 1)
        {
            sub_46980();
        }
        if (sub_6431( ref l_U1287 ))
        {
            sub_47188();
        }
        if (NOT (IS_PED_DEAD( l_U1333 )))
        {
            if (sub_34361( ref l_U261, l_U1333, 0 ))
            {
                ADD_EXPLOSION( -117.24000000, 211.16000000, 4.46000000, 0, 0.01000000, 1, 0, 1065353216 );
                sub_8390();
            }
        }
        if ((sub_33912( ref l_U408, 0 )) == 1)
        {
            AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_3_4_5_6", "", 0.00000000, 1000, 5000, -1082130432, 0 );
            sub_6175( ref l_U695, 15000, 1, 0 );
            sub_6311( ref l_U695 );
            l_U685 = 1;
        }
        if (g_U1045 == 1)
        {
            l_U175 = 4;
        }
        if ((sub_34361( ref l_U345, sub_1161(), 0 )) || ((sub_34361( ref l_U324, sub_1161(), 0 )) || (sub_34361( ref l_U303, sub_1161(), 0 ))))
        {
            sub_1028( "CO", "Player Hit the Kill Box", 0 );
            sub_43546( sub_1161() );
        }
        break;
        case 4:
        if (l_U799 == 0)
        {
            sub_1028( "?ka", "We're inside eStateShutdown - Let's delete Chapter3Resources", 0 );
            sub_47694();
            l_U799 = 1;
            l_U800 = 1;
        }
        if (l_U800 == 1)
        {
            sub_1028( "?ka", "We're inside eStateShutdown - Resources are deleting - set exitflag for uferun", 0 );
            SET_EXITFLAG_FOR_SCRIPT( g_U1312[5]._fU32 );
            l_U800 = 0;
        }
        break;
    }
    return;
}

void sub_9821()
{
    sub_1028( "NS", "P_INITIALIZE_SCRIPT_DATA()", 0 );
    l_U175 = 0;
    l_U1165 = 0;
    l_U1166 = 0;
    l_U1190 = 0;
    l_U1191 = 0;
    l_U1321 = 0;
    l_U1434 = 0;
    l_U827 = 0;
    l_U785 = 1;
    l_U786 = 1;
    l_U1259 = 0;
    l_U1260 = 0;
    l_U787 = 1;
    l_U790 = 1;
    l_U788 = 0;
    l_U789 = 0;
    l_U1322 = 0;
    l_U791 = 0;
    l_U792 = 0;
    l_U793 = 0;
    l_U795 = 0;
    l_U794 = 1;
    l_U797 = 0;
    l_U796 = 0;
    l_U798 = 0;
    l_U799 = 0;
    l_U800 = 0;
    l_U801 = 1;
    l_U802 = 0;
    l_U803 = 0;
    l_U804 = 0;
    l_U805 = 0;
    l_U806 = 0;
    l_U807 = 0;
    l_U808 = 0;
    l_U809 = 1;
    l_U810 = 0;
    l_U811 = 0;
    l_U812 = 0;
    l_U813 = 1;
    return;
}

void sub_10119()
{
    sub_10139( "SFV2AUD" );
    sub_10320( ref l_U177, "tbOldlady_Start", -156.61000000, 173.49500000, 5.62000000, 8.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 89.99000000, 1 );
    sub_10320( ref l_U198, "tbActivateMission", -164.30000000, 204.31000000, 3.73000000, 20.00000000, 20.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10320( ref l_U219, "tbActivateHELIA", -167.65000000, 194.77000000, 6.59000000, 9.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10320( ref l_U240, "tbActivateHELIA_OPENER", -164.51000000, 199.03000000, 6.59000000, 10.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10320( ref l_U282, "tbActivate_20_TFE_ADV", -164.42100000, 197.05100000, 6.59000000, 5.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10320( ref l_U261, "Trigger_HeliDelete", -209.08400000, 209.98100000, -14.45500000, 50.00000000, 20.00000000, 40.00000000, 0.00000000, 0.00000000, 90.00000000, 1 );
    sub_10320( ref l_U303, "Trigger_F03DeathBox0", -175.29000000, 208.87000000, 2.67000000, 30.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10320( ref l_U324, "Trigger_F03DeathBox1", -159.45000000, 209.38000000, 2.69000000, 30.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10320( ref l_U345, "Trigger_F03DeathBox2", -142.98000000, 210.36000000, 2.69000000, 8.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 19.70000000, 1 );
    sub_10320( ref l_U387, "tbStartLoadMPMMission", -160.38000000, 198.88000000, 2.32000000, 4.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, -90.93000000, 1 );
    sub_10320( ref l_U408, "tbResetSniper", -156.86600000, 195.65000000, 2.32000000, 5.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -89.72000000, 1 );
    sub_10320( ref l_U429, "tbLockLowerDoor", -154.88000000, 198.10000000, 2.32000000, 7.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -24.81000000, 1 );
    sub_10320( ref l_U366, "tbHeliFlyBy", -154.69100000, 202.77300000, 3.08521000, 8.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10320( ref l_U450, "tbLowerVigStart", -157.71000000, 194.34000000, 2.32000000, 5.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -89.72000000, 1 );
    sub_10320( ref l_U471, "tbLowerVigStartFailSafe", -155.10000000, 200.65000000, 2.32000000, 5.00000000, 7.80000000, 4.00000000, 0.00000000, 0.00000000, -89.72000000, 1 );
    sub_10320( ref l_U492, "tbNSDoorkickers", -153.62000000, 203.35000000, 2.32000000, 5.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -89.72000000, 1 );
    sub_10320( ref l_U513, "tbNSRFRs", -148.07000000, 203.35000000, 2.32000000, 5.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -89.72000000, 1 );
    sub_10320( ref l_U534, "tbDoorCloser", -142.31000000, 203.35000000, 2.32000000, 5.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -89.72000000, 1 );
    sub_10320( ref l_U555, "tbNSDragFailSafe", -150.36000000, 203.53000000, 2.32000000, 5.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -89.72000000, 1 );
    sub_10320( ref l_U576, "tbActivateUfeSurprise", -164.22000000, 202.47000000, 5.39000000, 3.00000000, 3.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11926( ref l_U597, "thrDraggerKiller", -132.28000000, 200.46000000, 5.76000000, 3.00000000, 2.00000000, 4.00000000, 0.00000000, 0.00000000, -57.10000000, 1 );
    sub_6968( ref l_U1250 );
    sub_6968( ref l_U1241 );
    sub_6968( ref l_U1156 );
    sub_6968( ref l_U749 );
    sub_6968( ref l_U740 );
    sub_6968( ref l_U758 );
    sub_6968( ref l_U1287 );
    sub_6968( ref l_U767 );
    sub_6968( ref l_U776 );
    sub_6968( ref l_U993 );
    sub_6175( ref l_U1287, l_U1286, 1, 0 );
    sub_12122( ref l_U912, -156.56500000, 216.49200000, 3.87500000, -92.77900000, 932140135, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U926, -156.43040000, 215.89460000, 3.82605200, -82.65300000, -1459646085, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U940, -155.48000000, 216.20900000, 3.86400000, -16.90600000, -1336753797, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U961[0], -155.70000000, 215.30000000, 3.83000000, -82.65000000, 1059840429, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U961[1], -152.53000000, 214.85000000, 3.84000000, -82.65000000, 101331905, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U1002, -133.78030000, 200.29870000, 3.16701500, -146.06400000, 932140135, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U1016, -134.27420000, 199.54800000, 3.16659500, -147.16300000, -1459646085, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U1030, -132.95440000, 198.21820000, 3.16685500, -53.47100000, -1336753797, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U1044, -141.73800000, 215.84400000, 4.98500000, 71.60300000, 1942935997, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U1057, -146.78070000, 222.21780000, 8.39085100, 41.36000000, -629381325, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U1070, -156.69700000, 227.69600000, 3.88000000, 98.38000000, 977944719, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U1083, -132.32500000, 200.36600000, 7.44500000, 60.00000000, 1807867450, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U1096, -126.45000000, 195.10600000, 10.26800000, -50.00000000, 534483867, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U1109, -142.95000000, 203.78000000, 2.89925100, 90.08000000, 1274170340, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U1122, -141.72000000, 203.77000000, 2.93925100, 80.55000000, 1672525755, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U1262, l_U1275, l_U1278, 534483867, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U1297, l_U1310, l_U1313, 534483867, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U1192, -157.98000000, 195.61000000, 3.53000000, -1.31000000, -72597801, 8, 4, 2, 0, 0 );
    sub_12122( ref l_U1206, -126.35000000, 199.77000000, 7.45000000, 60.00000000, 101331905, 8, 4, 2, 0, 0 );
    sub_12122( ref l_U1220, -155.60000000, 197.82000000, 3.43000000, -1.31000000, -259407639, 8, 4, 2, 0, 0 );
    sub_12122( ref l_U828[4], -177.23600000, 215.83300000, 6.56244000, -86.91000000, -961888456, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U828[3], -175.44700000, 215.96300000, 6.56244000, -93.59350000, -1538254147, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U828[2], -173.70400000, 215.95900000, 6.56243000, -81.34080000, -468474721, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U828[1], -172.28300000, 216.62500000, 6.56243000, -84.45830000, -1589080611, 7, 3, 0, 0, 0 );
    sub_12122( ref l_U828[0], -170.28900000, 216.21200000, 6.56244000, -87.27470000, 1274170340, 7, 3, 0, 0, 0 );
    sub_12122( ref l_U1143, -157.43000000, 203.08000000, 3.40000000, 65446, -1589080611, 7, 3, 2, 0, 0 );
    sub_12122( ref l_U1168, -157.31200000, 201.94200000, 3.40000000, 65446, -1317119986, 7, 3, 2, 0, 0 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    sub_13332( ref l_U1234, -1239208525, -161.10590000, 199.22870000, 8.70437000, 0.00000000, 0.00000000, 0.00000000 );
    sub_9103( ref l_U1234, 1 );
    return;
}

void sub_10139(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_10159();
    return;
}

void sub_10159()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_10320(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_11926(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_12122(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_13332(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_13394(unknown uParam0)
{
    sub_1028( "SP", "P_LOAD_ASSETS", 0 );
    sub_13438( -805468804, uParam0 );
    sub_13438( -401048192, uParam0 );
    sub_13438( l_U1326, uParam0 );
    sub_13438( 1750472651, uParam0 );
    sub_13438( 572505350, uParam0 );
    sub_13438( g_U776, uParam0 );
    sub_13438( 1686109657, uParam0 );
    sub_13438( -1006708222, uParam0 );
    sub_13707( "veh@helicopter", 0, uParam0 );
    sub_13707( "LEVEL_S_FAV2_CP_04", 0, uParam0 );
    sub_13707( ref l_U1368, 0, uParam0 );
    sub_13826( 656995606, uParam0 );
    sub_13826( 1681008462, uParam0 );
    sub_13826( 268580424, uParam0 );
    sub_13826( 432294348, uParam0 );
    sub_13826( -1170716322, uParam0 );
    sub_13826( -956144910, uParam0 );
    sub_13826( 1557696148, uParam0 );
    sub_13826( -1979577743, uParam0 );
    sub_13826( 1789862085, uParam0 );
    sub_13826( -851927440, uParam0 );
    sub_13826( -1827157400, uParam0 );
    sub_13826( -99898118, uParam0 );
    sub_13826( -790308179, uParam0 );
    sub_13826( -1935874550, uParam0 );
    sub_14202( "VEHICLE/vehicle_heli", uParam0 );
    sub_14202( "LEVEL/S_FAV2/S_FAV2_HELI_DRIVER_CP04", uParam0 );
    sub_14321( -378310276, uParam0 );
    sub_13707( "npc_pstl_cover_grenade", 0, uParam0 );
    sub_13707( "npc_rifle_cover_grenade", 0, uParam0 );
    sub_13707( "mped_grenade_core", 0, uParam0 );
    sub_14484( 123, uParam0 );
    sub_14321( g_U1309, uParam0 );
    return;
}

void sub_13438(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_3098( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_13707(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_13826(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_14202(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_14321(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_14484(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_14646()
{
    sub_1028( "ka", "P_CREATE_CAMERA()", 0 );
    SET_CAM_VIEW_MODE( 0 );
    return;
}

void sub_14747(int iParam0, int iParam1, unknown uParam2)
{
    sub_1028( "CO", "CO_HANDLE_SAVEDATA : Saving Data", 0 );
    if ((g_U782 < iParam1) || (NOT iParam0->_fU0))
    {
        sub_1028( "CO", "CO_HANDLE_SAVEDATA : Saved Data", 0 );
        sub_14916( iParam0, iParam1, sub_1161(), g_U783[iParam1], g_U910[iParam1], g_U953[iParam1], g_U996[iParam1], uParam2 );
    }
    g_U782 = iParam1;
    sub_18546( g_U782 );
    return;
}

void sub_14916(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1028( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1028( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_4083( iParam1 );
        sub_15175( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_15626( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_15626( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_15858( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_15626( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_15858( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_15858( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_15626( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_15858( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_15858( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_15858( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_15626( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_15858( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_15858( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_15858( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_15858( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_17416( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, g_U666, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1028( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_15175(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_1445( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1028( "TEH", "Ending context", 0 );
        sub_1028( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_15626(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_15858(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_17416(int iParam0)
{
    sub_3098( "CHECKPOINT DATA" );
    sub_17455( iParam0->_fU4 );
    sub_17478( iParam0->_fU16 );
    sub_17478( iParam0->_fU20 );
    sub_17478( iParam0->_fU24 );
    sub_17521( iParam0->_fU28 );
    sub_17521( iParam0->_fU56 );
    sub_17521( iParam0->_fU60 );
    sub_17521( iParam0->_fU64 );
    sub_17521( iParam0->_fU68 );
    sub_17521( iParam0->_fU72 );
    sub_17521( iParam0->_fU76 );
    sub_17521( iParam0->_fU80 );
    sub_17521( iParam0->_fU84 );
    sub_17521( iParam0->_fU88 );
    sub_17521( iParam0->_fU92 );
    sub_17478( iParam0->_fU32 );
    sub_17521( iParam0->_fU36 );
    sub_17521( iParam0->_fU40 );
    sub_17521( iParam0->_fU44 );
    sub_17478( iParam0->_fU136 );
    sub_17726( iParam0->_fU140 );
    sub_17521( iParam0->_fU52 );
    sub_3098( "---nRightHolsterAttachmentEnabled: " );
    sub_17521( iParam0->_fU96 );
    sub_3098( "---nRightHolsterAttachmentToggled: " );
    sub_17521( iParam0->_fU100 );
    sub_3098( "---nLeftHolsterAttachmentEnabled: " );
    sub_17521( iParam0->_fU104 );
    sub_3098( "---nLeftHolsterAttachmentToggled: " );
    sub_17521( iParam0->_fU108 );
    sub_3098( "---nRifleHolsterAttachmentEnabled: " );
    sub_17521( iParam0->_fU112 );
    sub_3098( "---nRifleHolsterAttachmentToggled: " );
    sub_17521( iParam0->_fU116 );
    sub_3098( "---nRightHandAttachmentEnabled: " );
    sub_17521( iParam0->_fU120 );
    sub_3098( "---nRightHandAttachmentToggled: " );
    sub_17521( iParam0->_fU124 );
    sub_3098( "---nLeftHandAttachmentEnabled: " );
    sub_17521( iParam0->_fU128 );
    sub_3098( "---nLeftHandAttachmentToggled: " );
    sub_17521( iParam0->_fU132 );
    sub_17521( g_U666 );
    sub_17521( 144 );
    return;
}

void sub_17455(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_17478(unknown uParam0)
{
    return;
}

void sub_17521(unknown uParam0)
{
    return;
}

void sub_17726(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_18546(unknown uParam0)
{
    sub_1028( "CO", "P_SETUP_INITIAL_TIMECYCLE", 0 );
    switch (uParam0)
    {
        case 0:
        case 1:
        case 2:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
        case 3:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 0 );
        break;
        case 4:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 10 );
        break;
        case 5:
        if (g_U1046 == 1)
        {
            sub_1028( "kja", "MCE_UFE_RUN bTimeofDayReleased = TRUE", 0 );
            FREEZE_TIME_OF_DAY( 20, 10 );
            break;
        }
        sub_1028( "kja", "MCE_UFE_RUN bTimeofDayReleased = FALSE: SO WE're SETTING WEATHER AND TOD TO 20:20", 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 20, 10 );
        case 6:
        case 7:
        case 8:
        if (g_U1046 == 1)
        {
            ;
        }
        else
        {
            SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
            SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
            FREEZE_TIME_OF_DAY( 21, 0 );
        }
        break;
        case 9:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 21, 0 );
        break;
        case 10:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 22, 0 );
        break;
        default:
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
    }
    return;
}

int sub_19295()
{
    if (((HAS_WEAPON_LOADED( g_U1309 )) == 1) AND ((HAS_VEHICLE_RECORDING_BEEN_LOADED( 123 )) AND ((HAS_ANIM_DICT_LOADED( "mped_grenade_core", 0 )) AND ((HAS_ANIM_DICT_LOADED( "npc_rifle_cover_grenade", 0 )) AND ((HAS_ANIM_DICT_LOADED( "npc_pstl_cover_grenade", 0 )) AND ((IS_ACTION_TREE_LOADED( "LEVEL/S_FAV2/S_FAV2_HELI_DRIVER_CP04" )) AND ((IS_ACTION_TREE_LOADED( "VEHICLE/vehicle_heli" )) AND (((ISEQ_IS_LOADED( -1935874550 )) == 1) AND (((ISEQ_IS_LOADED( -790308179 )) == 1) AND (((ISEQ_IS_LOADED( -99898118 )) == 1) AND (((ISEQ_IS_LOADED( -99898118 )) == 1) AND (((ISEQ_IS_LOADED( -1827157400 )) == 1) AND (((ISEQ_IS_LOADED( -851927440 )) == 1) AND (((ISEQ_IS_LOADED( 1557696148 )) == 1) AND (((ISEQ_IS_LOADED( -956144910 )) == 1) AND (((ISEQ_IS_LOADED( -1170716322 )) == 1) AND (((ISEQ_IS_LOADED( 432294348 )) == 1) AND (((ISEQ_IS_LOADED( 268580424 )) == 1) AND (((ISEQ_IS_LOADED( 1681008462 )) == 1) AND (((ISEQ_IS_LOADED( 656995606 )) == 1) AND ((HAS_ANIM_DICT_LOADED( ref l_U1368, 0 )) AND ((HAS_ANIM_DICT_LOADED( "LEVEL_S_FAV2_CP_04", 0 )) AND ((HAS_ANIM_DICT_LOADED( "veh@helicopter", 0 )) AND ((HAS_WEAPON_LOADED( -378310276 )) AND ((HAS_MODEL_LOADED( -1006708222 )) AND ((HAS_MODEL_LOADED( 1686109657 )) AND ((HAS_MODEL_LOADED( g_U776 )) AND ((HAS_MODEL_LOADED( 572505350 )) AND ((HAS_MODEL_LOADED( 1750472651 )) AND ((HAS_MODEL_LOADED( l_U1326 )) AND ((HAS_MODEL_LOADED( -401048192 )) AND (HAS_MODEL_LOADED( -805468804 )))))))))))))))))))))))))))))))))
    {
        return 1;
    }
    return 0;
}

int sub_19910()
{
    if (l_U810 == 0)
    {
        if (sub_19932())
        {
            l_U810++;
        }
    }
    else if (l_U810 == 1)
    {
        if (sub_22714())
        {
            l_U810++;
        }
    }
    else if (l_U810 == 2)
    {
        sub_25059();
        l_U810++;
    }
    else if (l_U810 == 3)
    {
        sub_25465();
        l_U810++;
    }
    else if (l_U810 == 4)
    {
        sub_25926();
        l_U810++;
    }
    else if (l_U810 == 5)
    {
        sub_26776();
        l_U810++;
    }
    else if (l_U810 == 6)
    {
        sub_27053();
        l_U810++;
        return 1;
    };;;;;;;
    return 0;
}

int sub_19932()
{
    vector vVar2;
    float fVar5;
    unknown[2] uVar6;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown[2] uVar33;
    unknown uVar36;
    vector vVar37;
    vector vVar40;

    sub_1028( "SP", "P_SETUP_HELIA", 0 );
    vVar2 = {-160.47900000, 210.25900000, 8.23400000};
    fVar5 = 130.00000000;
    array(ref uVar6, 2);
    array(ref uVar33, 2);
    if (l_U811 == 0)
    {
        sub_20032( ref l_U1328, vVar2, fVar5, l_U1326 );
        if ((NOT (IS_VEHICLE_DEAD( l_U1328 ))) AND (DOES_VEHICLE_EXIST( l_U1328 )))
        {
            SET_HELI_BLADES_FULL_SPEED( l_U1328 );
            SET_VEHICLE_LIGHTS( l_U1328, 1 );
            SET_VEHICLE_DOOR_OPEN( l_U1328, 2 );
            FREEZE_VEHICLE_POSITION( l_U1328, 1 );
        }
        l_U811++;
    }
    else if (l_U811 == 1)
    {
        sub_20553( l_U1328, ref l_U1333, 1 );
        if (NOT (IS_VEHICLE_DEAD( l_U1328 )))
        {
            if (NOT (IS_PED_DEAD( l_U1333 )))
            {
                TASK_HELI_MISSION( l_U1333, l_U1328, 0, 0, vVar2, 4, 5.00000000, 10, fVar5, 10, 10 );
                SET_PED_PROOFS( l_U1333, 0, 0, 0, 0, 0 );
            }
        }
        l_U811++;
    }
    else if (l_U811 == 1)
    {
        sub_8233( l_U1329 );
        l_U1329 = sub_21836( 1750472651, vVar2, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
        if ((DOES_OBJECT_EXIST( l_U1329 )) == 1)
        {
            SET_OBJECT_LIGHTS( l_U1329, 1 );
            SET_OBJECT_COLLISION( l_U1329, 0 );
            SET_OBJECT_PROOFS( l_U1329, 1, 1, 1, 1, 1 );
            FREEZE_OBJECT_POSITION( l_U1329, 1 );
        }
        if ((NOT (IS_VEHICLE_DEAD( l_U1328 ))) AND ((DOES_VEHICLE_EXIST( l_U1328 )) AND (DOES_OBJECT_EXIST( l_U1329 ))))
        {
            vVar37 = {0.00000000, 0.20000000, 1.19500000};
            vVar40 = {4.71000000, 0.00000000, 0.00000000};
            FREEZE_OBJECT_POSITION( l_U1329, 0 );
            ATTACH_OBJECT_TO_VEHICLE( l_U1329, l_U1328, 0, vVar37, vVar40 );
        }
        l_U811++;
    }
    else if (l_U811 == 2)
    {
        sub_12122( ref l_U1348, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U1328 ), 0.00000000, -239417171, 7, 3, 2, 0, 0 );
        l_U1361 = sub_20633( ref l_U1348 );
        if (NOT (IS_PED_DEAD( l_U1361 )))
        {
            ATTACH_PED_TO_VEHICLE( l_U1361, l_U1328, 0, -0.25000000, 0.50000000, 0.75000000, 90.00000000, 0.00000000, 1, 0, 0, 1 );
            SET_PED_NAME_DEBUG( l_U1361, "piHeliShooter" );
            CLEAR_PED_TASKS( l_U1361 );
            SET_PED_CAN_BE_TARGETTED( l_U1361, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1361, 1 );
            SET_PED_MAX_HEALTH( l_U1361, 500 );
            SET_PED_HEALTH( l_U1361, 500, 0 );
            SET_PED_AS_ONE_SHOT_KILL( l_U1361, 0 );
            SET_PED_SUFFERS_CRITICAL_HITS( l_U1361, 0 );
            SET_PED_DIES_WHEN_INJURED( l_U1361, 0 );
            SET_PED_COMBAT_ATTRIBUTES( l_U1361, 1, 0 );
            SET_PED_ALLOWED_TO_KNEEL_AND_FIRE( l_U1361, 0 );
            SET_PED_IGNORE_LOS_CHECKS( l_U1361, 1 );
            SET_PED_FLAG_BLOCK_GORE_REACTION( l_U1361, 1 );
            SET_PED_CONSUMING_AMMO( l_U1361, 0 );
            SET_PED_PROOFS( l_U1361, 1, 1, 1, 1, 1 );
            PED_SET_ACTION_INTENTION( l_U1361, 10, -1, 0, 0, 0 );
            sub_3427( l_U1361, g_U1309, 25000, 0, 0 );
        }
        return 1;
    };;;;
    return 0;
}

void sub_20032(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    sub_1028( "SP", "P_SETUP_VEHICLE", 0 );
    sub_8405( (uParam0^) );
    (uParam0^) = sub_20089( uParam5, uParam1, uParam4, 1, 0, 0 );
    if ((NOT (IS_VEHICLE_DEAD( (uParam0^) ))) AND (DOES_VEHICLE_EXIST( (uParam0^) )))
    {
        SET_VEHICLE_DOORS_LOCKED( (uParam0^), 2 );
        SET_VEHICLE_PROOFS( (uParam0^), 0, 1, 1, 1, 1 );
        SET_VEHICLE_ENGINE_ON( (uParam0^), 1, 1 );
        SET_VEHICLE_LIGHTS( (uParam0^), 2 );
        SET_VEHICLE_NAME_DEBUG( (uParam0^), "vi_chaseVehicle" );
        SET_VEHICLE_COLOUR_COMBINATION( (uParam0^), 0 );
    }
    return;
}

void sub_20089(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_13438( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_20553(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;

    if (NOT (IS_VEHICLE_DEAD( uParam0 )))
    {
        sub_12122( ref uVar5, -176.73100000, 220.24200000, 6.56243000, -112.78100000, 1691402102, 7, 3, 2, 0, 0 );
        if ((IS_VEHICLE_DEAD( uParam0 )) == 0)
        {
            (uParam1^) = sub_20633( ref uVar5 );
            SET_PED_INTO_VEHICLE( (uParam1^), uParam0, -1 );
        }
        if (NOT (IS_PED_DEAD( (uParam1^) )))
        {
            SET_PED_COMBAT_ATTRIBUTES( (uParam1^), 2, 0 );
            SET_PED_COMBAT_MOVEMENT( (uParam1^), 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam1^), 1 );
            SET_PED_VISIBLE( (uParam1^), 0 );
            if (bParam2)
            {
                SET_PED_PROOFS( (uParam1^), 1, 1, 1, 1, 1 );
            }
        }
        if ((IS_VEHICLE_DEAD( l_U1328 )) == 0)
        {
            sub_8154( l_U1347 );
            sub_12122( ref l_U1334, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U1328 ), 0.00000000, -961888456, 7, 3, 2, 0, 0 );
            l_U1347 = sub_20633( ref l_U1334 );
            if (NOT (IS_PED_DEAD( l_U1347 )))
            {
                ATTACH_PED_TO_VEHICLE( l_U1347, l_U1328, 0, 0.40000000, 2.00000000, 0.80000000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
                SET_PED_NAME_DEBUG( l_U1347, "piHeliFlyby3" );
                CLEAR_PED_TASKS( l_U1347 );
                SET_PED_CAN_BE_TARGETTED( l_U1347, 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1347, 1 );
                SET_PED_PROOFS( l_U1347, 1, 1, 1, 1, 1 );
                PED_ACTION_TREE_PLAY_NODE( l_U1347, "/Global/S_FAV2_HELI_DRIVER_CP04/S_FAV2_DRIVER/DRIVER" );
            }
        }
    }
    return;
}

void sub_20633(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_13438( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_21112( iParam0->_fU40 );
    sub_21192( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_21112(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_21192(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_21836(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_13438( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

int sub_22714()
{
    int I;
    unknown uVar3;

    sub_1028( "NS", "creating GP_INIT_S_FAV2_20_TFE_ADV", 0 );
    if (l_U812 == 0)
    {
        l_U894[4] = sub_20633( ref l_U828[4] );
        sub_22841( l_U894[4], g_U1309, 0, 1, 1, "Flashlight_Favela2" );
        if (NOT (IS_PED_DEAD( l_U894[4] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[4], 1 );
            SET_BULLET_CAM_PREF( l_U894[4], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        }
        l_U812++;
    }
    else if (l_U812 == 1)
    {
        l_U894[3] = sub_20633( ref l_U828[3] );
        sub_22841( l_U894[3], g_U1311, 0, 1, 1, "Flashlight_Favela2" );
        if (NOT (IS_PED_DEAD( l_U894[3] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[3], 1 );
            SET_BULLET_CAM_PREF( l_U894[3], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        }
        l_U812++;
    }
    else if (l_U812 == 2)
    {
        l_U894[2] = sub_20633( ref l_U828[2] );
        sub_22841( l_U894[2], g_U1311, 0, 1, 1, 0 );
        if (NOT (IS_PED_DEAD( l_U894[2] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[2], 1 );
            SET_BULLET_CAM_PREF( l_U894[2], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        }
        l_U812++;
    }
    else if (l_U812 == 3)
    {
        l_U894[1] = sub_20633( ref l_U828[1] );
        sub_22841( l_U894[1], g_U1311, 1, 1, 0, 0 );
        if (NOT (IS_PED_DEAD( l_U894[1] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[1], 1 );
            SET_BULLET_CAM_PREF( l_U894[1], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        }
        l_U812++;
    }
    else if (l_U812 == 4)
    {
        l_U894[0] = sub_20633( ref l_U828[0] );
        sub_22841( l_U894[0], g_U1311, 1, 1, 0, 0 );
        if (NOT (IS_PED_DEAD( l_U894[0] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[0], 1 );
            SET_BULLET_CAM_PREF( l_U894[0], "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        }
        l_U812++;
    }
    else if (l_U812 == 5)
    {
        for ( I = 0; I <= 1; I++ )
        {
            if ((NOT (IS_PED_DEAD( l_U894[I] ))) AND (DOES_PED_EXIST( l_U894[I] )))
            {
                SET_PED_AS_ONE_SHOT_KILL( l_U894[I], 1 );
                SET_PED_PROOFS( l_U894[I], 0, 0, 1, 0, 0 );
                l_U1408[I] = 0;
            }
        }
        for ( I = 2; I <= 4; I++ )
        {
            if ((NOT (IS_PED_DEAD( l_U894[I] ))) AND (DOES_PED_EXIST( l_U894[I] )))
            {
                uVar3 = sub_3427( l_U894[I], g_U1309, 200, 0, 1 );
                SET_PED_ALERTNESS( l_U894[I], 0 );
                l_U1408[I] = 0;
            }
            sub_24053( l_U894[I], ref l_U821 );
        }
        for ( I = 0; I <= (l_U894 - 1); I++ )
        {
            if (((IS_PED_DEAD( l_U894[I] )) == 0) AND ((DOES_PED_EXIST( l_U894[I] )) == 1))
            {
                SET_PED_ONLY_DAMAGED_BY_PLAYER( l_U894[I], 1 );
            }
        }
        sub_24586( ref l_U894, 1, 0 );
        sub_24746( ref l_U894, "S_FAV2_20_TFE_ADV_" );
        sub_24859( l_U894[0], l_U1414, l_U1417 );
        sub_24859( l_U894[1], l_U1418, l_U1421 );
        sub_24859( l_U894[2], l_U1422, l_U1425 );
        sub_24859( l_U894[3], l_U1426, l_U1429 );
        sub_24859( l_U894[4], l_U1430, l_U1433 );
        return 1;
    };;;;;;
    return 0;
}

void sub_22841(unknown uParam0, unknown uParam1, boolean bParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown Result;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (bParam2)
        {
            Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, 25000, 0 );
        }
        if ((NOT (ARE_STRINGS_EQUAL( uParam5, "" ))) || (NOT (IS_STRING_NULL( uParam5 ))))
        {
            if (GET_DOES_WEAPON_EXIST( Result ))
            {
                SET_WEAPON_LIGHT_DATA_BY_NAME( Result, "Flashlight_Default" );
            }
        }
        SET_PED_COMBAT_MOVEMENT( uParam0, uParam3 );
    }
    return Result;
}

void sub_24053(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_3098( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_24196( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_24196( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_24196(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_24586(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            sub_1028( "CO", "BRAINDEAD", "****" );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( (uParam0^)[I], uParam1 );
            FREEZE_PED_POSITION( (uParam0^)[I], uParam2 );
        }
        WAIT( 0 );
    }
    return;
}

void sub_24746(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_24859(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_25059()
{
    sub_1028( "NS", "P_CREATE_S_FAV2_VIG_00A_BATTLE_01", 0 );
    sub_8154( l_U1261 );
    l_U1261 = sub_20633( ref l_U1262 );
    sub_8233( l_U1279 );
    l_U1279 = sub_21836( -1006708222, l_U1280, l_U1283, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1279 ))
    {
        FREEZE_OBJECT_POSITION( l_U1279, 1 );
    }
    if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
    {
        SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U1261, 0, 0 );
        SET_PED_GORE_FROM_PLAYER( l_U1261, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1261 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( l_U1261, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1261, 1 );
        ISEQ_REGISTER_ENTITY( 268580424, "CIV", l_U1261, 0 );
        ISEQ_REGISTER_ENTITY( 268580424, "DOOR", l_U1279, 1 );
        ISEQ_START( 268580424 );
        SET_BULLET_CAM_PREF( l_U1261, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_25465()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    vector vVar15;
    unknown uVar18;

    vVar15 = {-166.12500000, 202.79600000, 7.45375000};
    sub_12122( ref uVar2, vVar15, -10.00000000, 977944719, 8, 4, 0, 0, 0 );
    l_U1327 = sub_20633( ref uVar2 );
    sub_6968( ref l_U713 );
    sub_25611( l_U1327, "CSF03VIC_Tether", -165.94900000, 202.68600000, 7.40357000, 2.00000000, 2.00000000, 2.00000000, 0.00000000, 0.00000000, -29.82810000 );
    if (NOT (IS_PED_DEAD( l_U1327 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1327, 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U1327, 1 );
    }
    if ((NOT (IS_PED_DEAD( l_U1327 ))) AND (DOES_PED_EXIST( l_U1327 )))
    {
        uVar18 = sub_3427( l_U1327, g_U1310, 200, 0, 1 );
    }
    SET_PED_NAME_DEBUG( l_U1327, "piCSFIGHTHELI" );
    sub_24859( l_U1327, vVar15, -10.00000000 );
    return;
}

void sub_25611(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    unknown uVar13;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        sub_11926( ref uVar13, uParam1, uParam2, uParam5, uParam6, uParam7, uParam8, 1 );
        sub_25664( ref uVar13, uParam0, 1 );
    }
    return;
}

void sub_25664(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_25926()
{
    sub_8154( l_U1137 );
    l_U1137 = sub_25950( ref l_U1070 );
    if (((IS_PED_DEAD( l_U1137 )) == 0) AND ((DOES_PED_EXIST( l_U1137 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1137, "AIT_UFE_TOUGH" );
        SET_PED_AS_ONE_SHOT_KILL( l_U1137, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1137, 1 );
        SET_BULLET_CAM_PREF( l_U1137, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        sub_3427( l_U1137, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1137, "piSCRAMBLE3" );
    sub_26642( l_U1137 );
    return;
}

void sub_25950(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_13438( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    return iParam0->_fU40;
}

void sub_26642(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_26776()
{
    sub_1028( "NS", "P_CREATE_UFE_SURPRISE()", 0 );
    sub_8154( l_U1205 );
    if (NOT (IS_PED_DEAD( l_U1205 )))
    {
        sub_3427( l_U1205, g_U1311, 25000, 0, 1 );
        sub_24053( l_U1205, ref l_U821 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1205, 1 );
        SET_PED_AI_TEMPLATE( l_U1205, "AIT_UFE_TOUGH" );
        SET_ROOM_FOR_PED_BY_NAME( l_U1205, "GtaMloRoom_lower" );
        if (NOT (IS_PED_DEAD( sub_1161() )))
        {
            REGISTER_TARGET( l_U1205, sub_1161() );
        }
    }
    sub_6175( ref l_U767, 10000, 1, 0 );
    sub_6311( ref l_U767 );
    return;
}

void sub_27053()
{
    sub_1028( "NS", "P_CREATE_UFE_DRAG_KILLER()", 0 );
    sub_8154( l_U1219 );
    l_U1219 = sub_20633( ref l_U1206 );
    if (NOT (IS_PED_DEAD( l_U1219 )))
    {
        sub_3427( l_U1219, g_U1311, 25000, 0, 1 );
        sub_24053( l_U1219, ref l_U821 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1219, 1 );
        SET_PED_AI_TEMPLATE( l_U1219, "AIT_UFE_TOUGH" );
        SET_PED_ALERTNESS( l_U1219, 4 );
        SET_PED_IGNORE_LOS_CHECKS( l_U1219, 1 );
        SET_PED_OBLIVIOUS_TO_DANGER( l_U1219, 1 );
        SET_PED_RELATIONSHIP( l_U1219, 2, 3 );
        SET_PED_NAME_DEBUG( l_U1219, "piUFEDragKiller" );
        sub_25664( ref l_U597, l_U1219, 1 );
        SET_BULLET_CAM_PREF( l_U1219, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        if (NOT (IS_PED_DEAD( l_U1141 )))
        {
            REGISTER_TARGET( l_U1219, l_U1141 );
        }
    }
    sub_26642( l_U1219 );
    return;
}

void sub_27479(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_27497( sub_1161(), uParam0 );
}

int sub_27497(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_27567(int iParam0)
{
    int iVar3;
    float Result;

    if ((sub_9115( iParam0 )) == 0)
    {
        sub_9181( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

void sub_27836()
{
    sub_27851( ref g_U1205, 0 );
    if ((DOES_PLACEMENT_EXIST( l_U1364 )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1364, "GtaMloRoom_lower" );
    }
    if ((DOES_PLACEMENT_EXIST( l_U1323[0] )) == 1)
    {
        sub_8954( l_U1323[0] );
    }
    l_U1323[0] = sub_28037( 3711131, 65380, 196.84000000, 3.48000000, 30, 0, 60, 0, 0, 0, 1119092736 );
    if ((DOES_PLACEMENT_EXIST( l_U1323[0] )) == 1)
    {
        sub_8954( l_U1323[1] );
    }
    l_U1323[1] = sub_28037( -535211597, -155.12000000, 194.47000000, 4.15000000, 30, 0, 35, 0, 0, 0, 1119092736 );
    if ((DOES_PLACEMENT_EXIST( l_U1323[1] )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1323[0], "GtaMloRoom_lower" );
    }
    if ((DOES_PLACEMENT_EXIST( l_U1323[1] )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U1323[1], "GtaMloRoom_lower" );
    }
    sub_28330();
    return;
}

void sub_27851(int iParam0, unknown uParam1)
{
    if ((sub_9115( iParam0 )) == 0)
    {
        sub_9181( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

void sub_28037(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_28330()
{
    sub_1028( "CO", "P_CREATE_S_FV2_GG_97_02", 0 );
    sub_28444( ref g_U685, g_U776, -175394327, -210584001, -159.87000000, 191.82000000, 7.65000000, 0.00000000, 0.00000000, 5.00000000, "GtaMloRoom_top" );
    sub_28573( ref g_U685 );
    return;
}

void sub_28444(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_1028( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_28573(int iParam0)
{
    sub_1028( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_28634( iParam0->_fU12 )) == 1)
        {
            sub_1028( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_1028( "CO", "has never been collected.", 0 );
        }
        if ((sub_28634( iParam0->_fU12 )) == 0)
        {
            sub_8954( iParam0->_fU0 );
            iParam0->_fU0 = sub_28037( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_1028( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_1028( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_28634(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_29046()
{
    sub_9103( ref g_U1093, 1 );
    return;
}

void sub_29074()
{
    if (NOT (IS_PED_DEAD( sub_1161() )))
    {
        sub_1028( "CO", "RESET WALK", "******" );
        SET_PED_FORCED_TO_WALK( sub_1161(), 0 );
        SET_CAN_ROLL_DODGE( sub_1161(), 1 );
        SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1183(), 1 );
        l_U40 = 0;
    }
    return;
}

void sub_29187()
{
    sub_1028( "SP", "P_HELIA_ACTIVATE", 0 );
    if ((NOT (IS_VEHICLE_DEAD( l_U1328 ))) AND (DOES_VEHICLE_EXIST( l_U1328 )))
    {
        FREEZE_VEHICLE_POSITION( l_U1328, 0 );
        SET_VEHICLE_LIGHTS( l_U1328, 2 );
        if ((NOT (IS_PED_DEAD( l_U1333 ))) AND ((NOT (IS_PED_DEAD( sub_1161() ))) AND (DOES_PED_EXIST( l_U1333 ))))
        {
            HELI_SPOTLIGHT_TRACK_PED( l_U1328, sub_1161(), 1 );
        }
    }
    if ((NOT (IS_PED_DEAD( l_U1327 ))) AND (DOES_PED_EXIST( l_U1327 )))
    {
        sub_24859( l_U1327, -166.12500000, 202.79600000, 7.45375000, -10.00000000 );
        ISEQ_REGISTER_ENTITY( 656995606, "csheli_male", l_U1327, 0 );
        ISEQ_START( 656995606 );
        sub_29459( ref l_U654 );
        sub_29555( 1, l_U1330[0], "SFV2_TFE_HELI1", ref l_U654, 2, 0 );
        sub_29555( 0, sub_1161(), "MAX", ref l_U654, 2, 0 );
        sub_29794( "SFV2_UBMA", ref l_U654, 8, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U1361 )))
    {
        OPEN_SEQUENCE_TASK( ref l_U1362 );
        TASK_PAUSE( 0, 1000 );
        TASK_SHOOT_AT_COORD( 0, -163.60250000, 201.95110000, 6.06237500, 90000, -256437761, 1, 1 );
        CLOSE_SEQUENCE_TASK( l_U1362 );
        TASK_PERFORM_SEQUENCE( l_U1361, l_U1362 );
        CLEAR_SEQUENCE_TASK( l_U1362 );
    }
    sub_6175( ref l_U713, 1700, 1, 0 );
    sub_6311( ref l_U713 );
    l_U1407 = 1;
    return;
}

void sub_29459(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_29555(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_29794(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_29818( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_29818(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_29873( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_29873(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_29908( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_30402( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_29908(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_30402(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_30728()
{
    sub_8154( l_U1135 );
    l_U1135 = sub_25950( ref l_U1044 );
    if (((IS_PED_DEAD( l_U1135 )) == 0) AND ((DOES_PED_EXIST( l_U1135 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1135, "AIT_UFE_TOUGH" );
        SET_PED_AS_ONE_SHOT_KILL( l_U1135, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1135, 1 );
        SET_BULLET_CAM_PREF( l_U1135, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        sub_3427( l_U1135, g_U1310, 25000, 0, 0 );
    }
    sub_26642( l_U1135 );
    SET_PED_NAME_DEBUG( l_U1135, "piSCRAMBLE1" );
    sub_8154( l_U1136 );
    l_U1136 = sub_25950( ref l_U1057 );
    if (((IS_PED_DEAD( l_U1136 )) == 0) AND ((DOES_PED_EXIST( l_U1136 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1136, "AIT_UFE_TOUGH" );
        SET_PED_AS_ONE_SHOT_KILL( l_U1136, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1136, 1 );
        SET_BULLET_CAM_PREF( l_U1136, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        sub_3427( l_U1136, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1136, "piSCRAMBLE2" );
    sub_26642( l_U1136 );
    return;
}

void sub_31204()
{
    sub_8154( l_U1140 );
    l_U1140 = sub_25950( ref l_U1109 );
    if (((IS_PED_DEAD( l_U1140 )) == 0) AND ((DOES_PED_EXIST( l_U1140 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1140, "AIT_UFE_TOUGH" );
        SET_PED_AS_ONE_SHOT_KILL( l_U1140, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1140, 1 );
        FREEZE_PED_POSITION( l_U1140, 1 );
        SET_PED_INVINCIBLE( l_U1140, 1 );
        sub_3427( l_U1140, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1140, "piSCRAMBLE8" );
    sub_8154( l_U1141 );
    l_U1141 = sub_25950( ref l_U1122 );
    if (((IS_PED_DEAD( l_U1141 )) == 0) AND ((DOES_PED_EXIST( l_U1141 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1141, "AIT_UFE_TOUGH" );
        SET_PED_AS_ONE_SHOT_KILL( l_U1141, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1141, 1 );
        sub_3427( l_U1141, g_U1310, 25000, 0, 0 );
        SET_PED_INVINCIBLE( l_U1141, 1 );
        FREEZE_PED_POSITION( l_U1141, 1 );
    }
    SET_PED_NAME_DEBUG( l_U1141, "piSCRAMBLE9" );
    return;
}

void sub_31592()
{
    sub_1028( "SA", "P_CREATE_VIG07A", 0 );
    sub_8154( l_U1142 );
    l_U1142 = sub_25950( ref l_U1143 );
    if (NOT (IS_PED_DEAD( l_U1142 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( l_U1142, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1142, 1 );
        sub_3427( l_U1142, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1142, "piEnemyV07A" );
    return;
}

void sub_31754()
{
    sub_1028( "SA", "P_CREATE_VIG07A_1", 0 );
    sub_8154( l_U1167 );
    l_U1167 = sub_25950( ref l_U1168 );
    if (NOT (IS_PED_DEAD( l_U1167 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( l_U1167, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1167, 1 );
        sub_3427( l_U1167, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1167, "piEnemyV07A_1" );
    sub_26642( l_U1167 );
    return;
}

void sub_31930()
{
    sub_31977( l_U1333, l_U1328, -218.71320000, 205.36860000, 13.33274000, -134.88900000, 1092616192 );
    sub_24586( ref l_U1330, 0, 0 );
    return;
}

void sub_31977(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    if (NOT (IS_VEHICLE_DEAD( uParam1 )))
    {
        if (NOT (IS_PED_DEAD( uParam0 )))
        {
            TASK_HELI_MISSION( uParam0, uParam1, 0, 0, uParam2, 4, uParam6, 5, uParam5, 1, 1 );
        }
    }
    return;
}

void sub_32073(int iParam0, int iParam1)
{
    if ((sub_9115( iParam0 )) == 0)
    {
        sub_9181( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_32298()
{
    int I;

    sub_1028( "SP", "GP_ACTIVATED_S_FAV2_20_TFE_ADV", 0 );
    ISEQ_REGISTER_ENTITY( 1681008462, "tfeadv_male1", l_U894[0], 0 );
    ISEQ_REGISTER_ENTITY( 1681008462, "tfeadv_male2", l_U894[1], 0 );
    ISEQ_REGISTER_ENTITY( 1681008462, "tfeadv_male3", l_U894[2], 0 );
    ISEQ_REGISTER_ENTITY( 1681008462, "tfeadv_male4", l_U894[3], 0 );
    ISEQ_REGISTER_ENTITY( 1681008462, "tfeadv_male5", l_U894[4], 0 );
    ISEQ_START( 1681008462 );
    sub_24859( l_U894[0], l_U1414, l_U1417 );
    sub_24859( l_U894[1], l_U1418, l_U1421 );
    sub_24859( l_U894[2], l_U1422, l_U1425 );
    sub_24859( l_U894[3], l_U1426, l_U1429 );
    sub_24859( l_U894[4], l_U1430, l_U1433 );
    for ( I = 0; I < 5; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U894[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U894[I], 0 );
            if (NOT (IS_PED_DEAD( sub_1161() )))
            {
                REGISTER_TARGET( l_U894[I], sub_1161() );
            }
        }
    }
    l_U1434 = 1;
    sub_6311( ref l_U1287 );
    return;
}

int sub_32874()
{
    sub_1028( "SA", "Shooting Glass in Lower Balcony", 0 );
    if (l_U808 == 0)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -157.16900000, 198.08260000, 5.54884100, -156.63980000, 204.27980000, 5.42533300, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 1)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -157.21720000, 200.04930000, 4.77405600, -156.63980000, 204.27980000, 5.42533300, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 2)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -156.01560000, 200.22250000, 4.74531400, -156.63980000, 204.27980000, 5.42533300, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 3)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -156.01590000, 200.23950000, 5.18309800, -156.63980000, 204.27980000, 5.42533300, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 4)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -155.46990000, 199.15750000, 4.66441400, -155.68030000, 206.93090000, 5.34520800, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 5)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -154.27190000, 198.92930000, 4.34918300, -153.82890000, 207.57280000, 5.06921000, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 6)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -154.23720000, 199.60750000, 5.54787300, -153.95420000, 205.12810000, 4.92970300, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 7)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -155.31830000, 198.40880000, 5.42256800, -155.29450000, 207.71530000, 5.48419400, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 8)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -153.52280000, 200.11970000, 4.68538400, -152.66080000, 207.45840000, 5.26663400, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 9)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -152.37240000, 200.12330000, 4.84003400, -152.66080000, 207.45840000, 5.26663400, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 10)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -153.55170000, 199.72030000, 5.31100600, -152.66080000, 207.45840000, 5.26663400, 0, 1, g_U1309, 0 );
    }
    else if (l_U808 == 11)
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( -152.70140000, 199.87360000, 5.50341100, -152.66080000, 207.45840000, 5.26663400, 0, 1, g_U1309, 0 );
        return 1;
    };;;;;;;;;;;;
    l_U808++;
    return 0;
}

int sub_33822()
{
    int iVar2;

    if (NOT (IS_PED_DEAD( sub_1161() )))
    {
        if (HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1161() ), 2.00000000, 0, ref iVar2 ))
        {
            if (sub_1161() == iVar2)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_33912(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_27497( sub_1161(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_34024()
{
    sub_1028( "NS", "P_UFE_SURPRISE_ACTION()", 0 );
    sub_34082( ref g_U1100, 1, 1, 1065353216 );
    sub_32073( ref g_U1100, 0 );
    if (NOT (IS_PED_DEAD( l_U1205 )))
    {
        if (NOT (IS_PED_DEAD( sub_1161() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1205, 0 );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U1205, -167.39000000, 199.27000000, 7.54000000, sub_1161(), 1, 5.00000000, 1101004800, -1082130432, 3 );
        }
    }
    return;
}

void sub_34082(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_9115( iParam0 )) == 0)
    {
        sub_9181( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_34361(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_27497( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_34537()
{
    sub_1028( "NS", "P_CREATE_DEAD_CS", 0 );
    l_U1233 = sub_20633( ref l_U1220 );
    if (NOT (IS_PED_DEAD( l_U1233 )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U1233, "GtaMloRoom_lower" );
    }
    sub_34646( l_U1233, 0 );
    SET_PED_NAME_DEBUG( l_U1233, "piDeadCS" );
    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1233, 14989, 0, 0, 1 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1233, 3229, 0, 0, 0 ), 100, 1, g_U1308, 0 );
    return;
}

void sub_34646(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
        sub_3098( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

void sub_35658()
{
    sub_13332( ref l_U1386, -417746690, -154.22700000, 220.15400000, 5.10000000, 0, 0, 0 );
    sub_13332( ref l_U1393, -417746690, -145.81000000, 220.35100000, 3.71500000, 0, 0, 0 );
    sub_13332( ref l_U1400, -417746690, -144.22900000, 217.03400000, 0.78700000, 0, 0, 0 );
    sub_13332( ref l_U954, -1006708222, -154.22420000, 217.26230000, 5.02125000, 0, 0, 0 );
    sub_35826( ref l_U1386, 0.00000000, 80.00000000 );
    sub_35826( ref l_U1393, 0.00000000, 100.00000000 );
    sub_35826( ref l_U1400, 0.00000000, 100.00000000 );
    sub_32073( ref l_U1386, 0 );
    sub_32073( ref l_U1393, 0 );
    sub_32073( ref l_U1400, 0 );
    sub_27851( ref l_U954, 0 );
    return;
}

void sub_35826(int iParam0, float fParam1, float fParam2)
{
    if ((sub_9115( iParam0 )) == 0)
    {
        sub_9181( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

void sub_36011()
{
    sub_8154( l_U925 );
    l_U925 = sub_25950( ref l_U912 );
    if (((IS_PED_DEAD( l_U925 )) == 0) AND ((DOES_PED_EXIST( l_U925 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U925, "AIT_UFE_TOUGH" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U925, 1 );
        SET_PED_COMBAT_MOVEMENT( l_U925, 1 );
        SET_BULLET_CAM_PREF( l_U925, "all_lms_01", "all_lms_01", "all_lms_01", "all_lms_01", 1, 0, 0, 0, 0, 0, 0, 0 );
        sub_3427( l_U925, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U925, "piDOORKICKERS1" );
    sub_8154( l_U939 );
    l_U939 = sub_25950( ref l_U926 );
    if (((IS_PED_DEAD( l_U939 )) == 0) AND ((DOES_PED_EXIST( l_U939 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U939, "AIT_UFE_TOUGH" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U939, 1 );
        SET_PED_COMBAT_MOVEMENT( l_U939, 1 );
        SET_BULLET_CAM_PREF( l_U939, "all_lms_01", "all_lms_01", "all_lms_01", "all_lms_01", 1, 0, 0, 0, 0, 0, 0, 0 );
        sub_3427( l_U939, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U939, "piDOORKICKERS2" );
    sub_8154( l_U953 );
    l_U953 = sub_25950( ref l_U940 );
    if (((IS_PED_DEAD( l_U953 )) == 0) AND ((DOES_PED_EXIST( l_U953 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U953, "AIT_UFE_TOUGH" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U953, 1 );
        SET_PED_COMBAT_MOVEMENT( l_U953, 1 );
        SET_BULLET_CAM_PREF( l_U953, "all_lms_01", "all_lms_01", "all_lms_01", "all_lms_01", 1, 0, 0, 0, 0, 0, 0, 0 );
        sub_3427( l_U953, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U953, "piDOORKICKERS3" );
    return;
}

void sub_36731()
{
    sub_8154( l_U1015 );
    l_U1015 = sub_25950( ref l_U1002 );
    if (((IS_PED_DEAD( l_U1015 )) == 0) AND ((DOES_PED_EXIST( l_U1015 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1015, "AIT_UFE_TOUGH" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1015, 1 );
        SET_BULLET_CAM_PREF( l_U1015, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        SET_BULLET_CAM_PREF( l_U1015, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        sub_3427( l_U1015, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1015, "piDOORKICKERS4" );
    sub_8154( l_U1029 );
    l_U1029 = sub_25950( ref l_U1016 );
    if (((IS_PED_DEAD( l_U1029 )) == 0) AND ((DOES_PED_EXIST( l_U1029 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1029, "AIT_UFE_TOUGH" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1029, 1 );
        SET_BULLET_CAM_PREF( l_U1029, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        sub_3427( l_U1029, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1029, "piDOORKICKERS5" );
    sub_8154( l_U1043 );
    l_U1043 = sub_25950( ref l_U1030 );
    if (((IS_PED_DEAD( l_U1043 )) == 0) AND ((DOES_PED_EXIST( l_U1043 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1043, "AIT_UFE_TOUGH" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1043, 1 );
        SET_BULLET_CAM_PREF( l_U1043, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        sub_3427( l_U1043, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1043, "piDOORKICKERS6" );
    return;
}

void sub_37436()
{
    sub_8154( l_U1138 );
    if (((IS_PED_DEAD( l_U1138 )) == 0) AND ((DOES_PED_EXIST( l_U1138 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1138, "AIT_UFE_TOUGH" );
        SET_PED_AS_ONE_SHOT_KILL( l_U1138, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1138, 1 );
        SET_BULLET_CAM_PREF( l_U1138, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        sub_3427( l_U1138, g_U1310, 25000, 0, 0 );
    }
    sub_8154( l_U1139 );
    l_U1139 = sub_25950( ref l_U1096 );
    if (((IS_PED_DEAD( l_U1139 )) == 0) AND ((DOES_PED_EXIST( l_U1139 )) == 1))
    {
        SET_PED_AI_TEMPLATE( l_U1139, "AIT_UFE_TOUGH" );
        SET_PED_AS_ONE_SHOT_KILL( l_U1139, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1139, 1 );
        SET_BULLET_CAM_PREF( l_U1139, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
        sub_3427( l_U1139, g_U1310, 25000, 0, 0 );
    }
    SET_PED_NAME_DEBUG( l_U1139, "piSCRAMBLE5" );
    sub_26642( l_U1139 );
    return;
}

void sub_37862()
{
    int I;

    sub_1028( "NS", "P_CREATE_FS_COVER_GRENADERS", 0 );
    sub_8618( ref l_U988 );
    for ( I = 0; I < 2; I++ )
    {
        l_U988[I] = sub_25950( ref l_U961[I] );
        if (I == 0)
        {
            sub_3427( l_U988[0], g_U1311, 25000, 0, 0 );
        }
        else
        {
            sub_3427( l_U988[1], g_U1308, 25000, 0, 0 );
        }
        if (NOT (IS_PED_DEAD( l_U988[I] )))
        {
            sub_24053( l_U988[I], ref l_U821 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U988[I], 1 );
            SET_PED_AI_TEMPLATE( l_U988[I], "AIT_UFE_TOUGH" );
            SET_PED_COMBAT_ATTRIBUTES( l_U988[I], 512, 1 );
            SET_PED_ALERTNESS( l_U988[I], 4 );
            SET_PED_PROJECTILE_OVERRIDE_PARAMETERS( l_U988[I], 0, 15.00000000, -1082130432, 0, 0 );
            SET_BULLET_CAM_PREF( l_U988[I], "all_lms_01", "all_lms_01", "all_lms_01", "all_lms_01", 1, 0, 0, 0, 0, 0, 0, 0 );
            SET_PED_FLAG_SCRIPTED_PROJECTILE_USE( l_U988[I], 1 );
            if (NOT (IS_PED_DEAD( sub_1161() )))
            {
                REGISTER_TARGET( l_U988[I], sub_1161() );
            }
        }
    }
    l_U991 = sub_2782( l_U988[1], -378310276, 5, 25000, 0 );
    SET_AI_PROJECTILE_THROW_ENABLED( 1 );
    sub_24746( ref l_U988, "piUfeFSGrenader" );
    sub_38383( ref l_U988 );
    return;
}

void sub_38383(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_26642( (uParam0^)[I] );
    }
    return;
}

void sub_38474(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_38563()
{
    if ((ISEQ_QUERY_STATE( -1827157400, 3 )) == 0)
    {
        ISEQ_REGISTER_ENTITY( -1827157400, "TFE1", l_U925, 0 );
        ISEQ_REGISTER_ENTITY( -1827157400, "TFE2", l_U939, 0 );
        ISEQ_REGISTER_ENTITY( -1827157400, "TFE3", l_U953, 0 );
        sub_1028( "ka", "KICK IN THE DOOR! GO GO GO !", 0 );
        ISEQ_START( -1827157400 );
        sub_6175( ref l_U740, 7500, 1, 0 );
        sub_6311( ref l_U740 );
        l_U797 = 1;
    }
    return;
}

void sub_38762()
{
    sub_1028( "NS", "P_FS_COVER_GRENADERS_ACTION()", 0 );
    sub_38819( ref l_U988 );
    if (NOT (IS_PED_DEAD( l_U988[0] )))
    {
        if (NOT (IS_PED_DEAD( sub_1161() )))
        {
            OPEN_SEQUENCE_TASK( ref l_U1362 );
            TASK_SHOOT_AT_PED( 0, sub_1161(), 5000, 0, 0, 0, 0 );
            TASK_SHOOT_AT_PED( 0, sub_1161(), 5000, -256437761, 0, 0, 0 );
            SET_SEQUENCE_TO_REPEAT( l_U1362, 1 );
            CLOSE_SEQUENCE_TASK( l_U1362 );
            TASK_PERFORM_SEQUENCE( l_U988[0], l_U1362 );
            CLEAR_SEQUENCE_TASK( l_U1362 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U988[1] )))
    {
        if (NOT (IS_PED_DEAD( sub_1161() )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U988[1], 0 );
            TASK_COMBAT_PED( l_U988[1], sub_1161() );
        }
    }
    l_U802 = 1;
    sub_6175( ref l_U993, 5000, 1, 0 );
    sub_6311( ref l_U993 );
    return;
}

void sub_38819(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_38850( (uParam0^)[I] );
    }
    return;
}

void sub_38850(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_39229()
{
    sub_8154( l_U1137 );
    sub_8154( l_U1135 );
    sub_8154( l_U1136 );
    sub_7730( -1170716322, 1 );
    sub_7730( -956144910, 1 );
    sub_7730( 1557696148, 1 );
    return;
}

void sub_39310()
{
    sub_1028( "ka", "P_CREATE_S_FAV2_VIG_00A_BATTLE_02", 0 );
    sub_8154( l_U1296 );
    l_U1296 = sub_20633( ref l_U1297 );
    sub_8233( l_U1314 );
    l_U1314 = sub_21836( -1006708222, l_U1315, l_U1318, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1314 ))
    {
        FREEZE_OBJECT_POSITION( l_U1314, 1 );
    }
    if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
    {
        SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U1296, 0, 0 );
        SET_PED_GORE_FROM_PLAYER( l_U1296, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1296 )))
    {
        SET_PED_AS_ONE_SHOT_KILL( l_U1296, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1296, 1 );
        ISEQ_REGISTER_ENTITY( 432294348, "CIV", l_U1296, 0 );
        ISEQ_REGISTER_ENTITY( 432294348, "DOOR", l_U1314, 1 );
        ISEQ_START( 432294348 );
        SET_BULLET_CAM_PREF( l_U1296, "ALL_LMS_01", "ALL_LMS_03", "ALL_LMS_05", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
    }
    return;
}

int sub_39699()
{
    if (sub_6431( ref l_U993 ))
    {
        if (NOT (IS_PED_DEAD( l_U988[1] )))
        {
            sub_1028( "NS", "piUfeFSGrenader[1] is in cover", 0 );
            OPEN_SEQUENCE_TASK( ref l_U1362 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_SELECT_WEAPON_TO_HAND( 0, l_U991, 0 );
            TASK_SHOOT_AT_COORD( 0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1161() ), 3000, 1566631136, 0, 0 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            CLOSE_SEQUENCE_TASK( l_U1362 );
            CLEAR_PED_TASKS( l_U988[1] );
            SET_PED_PROJECTILE_OVERRIDE_PARAMETERS( l_U988[1], 0, 15.00000000, -1082130432, 0, 0 );
            TASK_PERFORM_SEQUENCE( l_U988[1], l_U1362 );
            CLEAR_SEQUENCE_TASK( l_U1362 );
            sub_6175( ref l_U993, 7000, 1, 0 );
            sub_6311( ref l_U993 );
        }
    }
    return 0;
}

void sub_40007()
{
    if ((ISEQ_QUERY_STATE( 1557696148, 3 )) == 0)
    {
        sub_1028( "NS", "P_HANDLE_FS_ROOFTOP_RUNNERS_3()", 0 );
        sub_38850( l_U1137 );
        ISEQ_REGISTER_ENTITY( 1557696148, "csrunner3", l_U1137, 0 );
        ISEQ_START( 1557696148 );
        l_U805 = 1;
    }
    return;
}

void sub_40276()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;

    sub_1028( "NS", "P_CREATE_HELI_SOUND()", 0 );
    l_U1366 = sub_20089( 1232833631, -153.64500000, 181.97390000, 10.18083000, 0.00000000, 0, 0, 0 );
    if (DOES_VEHICLE_EXIST( l_U1366 ))
    {
        FREEZE_VEHICLE_POSITION( l_U1366, 1 );
        SET_VEHICLE_ENGINE_ON( l_U1366, 1, 1 );
        SET_VEHICLE_COLLISION( l_U1366, 0 );
        SET_VEHICLE_VISIBLE( l_U1366, 0 );
        SET_VEHICLE_PROOFS( l_U1366, 1, 1, 1, 1, 1 );
        sub_40472( ref uVar2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U1366 ), 0, 1686109657, 7, 3, 2, 0, 0 );
    }
    l_U1367 = sub_20633( ref uVar2 );
    if ((NOT (IS_VEHICLE_DEAD( l_U1366 ))) AND (DOES_VEHICLE_EXIST( l_U1366 )))
    {
        SET_PED_INTO_VEHICLE( l_U1367, l_U1366, -1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1367, 1 );
        SET_PED_VISIBLE( l_U1367, 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1367, 2, 0 );
        sub_26642( l_U1367 );
    }
    return;
}

void sub_40472(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_40683()
{
    vector vVar2;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;

    sub_1028( "SP", "P_SETUP_HELI_FLYBY", 0 );
    vVar2 = {-145.38000000, 147.01700000, 12.52000000};
    sub_14484( 123, 1 );
    sub_8405( l_U1328 );
    l_U1328 = sub_20089( 1232833631, vVar2, 0.00000000, 0, 0, 0 );
    if ((NOT (IS_VEHICLE_DEAD( l_U1328 ))) AND (DOES_VEHICLE_EXIST( l_U1328 )))
    {
        SET_VEHICLE_PROOFS( l_U1328, 1, 1, 1, 1, 1 );
        SET_VEHICLE_ENGINE_ON( l_U1328, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( l_U1328 );
        SET_VEHICLE_COLOUR_COMBINATION( l_U1328, 0 );
    }
    sub_40472( ref uVar5, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U1328 ), 0.00000000, 1686109657, 7, 3, 2, 0, 0 );
    sub_8154( l_U1333 );
    l_U1333 = sub_20633( ref uVar5 );
    if ((NOT (IS_VEHICLE_DEAD( l_U1328 ))) AND (DOES_VEHICLE_EXIST( l_U1328 )))
    {
        SET_PED_INTO_VEHICLE( l_U1333, l_U1328, -1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1333, 1 );
        SET_PED_VISIBLE( l_U1333, 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1333, 2, 0 );
        SET_PED_PROOFS( l_U1333, 1, 1, 1, 1, 1 );
        SET_PED_AIM_LOCKONABLE( l_U1333, 0 );
    }
    sub_8154( l_U1347 );
    sub_12122( ref l_U1334, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U1328 ), 0.00000000, -961888456, 7, 3, 2, 0, 0 );
    l_U1347 = sub_20633( ref l_U1334 );
    if (NOT (IS_PED_DEAD( l_U1347 )))
    {
        ATTACH_PED_TO_VEHICLE( l_U1347, l_U1328, 0, 0.40000000, 2.00000000, 0.80000000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        SET_PED_NAME_DEBUG( l_U1347, "piHeliFlyby3" );
        CLEAR_PED_TASKS( l_U1347 );
        SET_PED_CAN_BE_TARGETTED( l_U1347, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1347, 1 );
        SET_PED_PROOFS( l_U1347, 1, 1, 1, 1, 1 );
        PED_ACTION_TREE_PLAY_NODE( l_U1347, "/Global/S_FAV2_HELI_DRIVER_CP04/S_FAV2_DRIVER/DRIVER" );
    }
    if ((NOT (IS_VEHICLE_DEAD( l_U1328 ))) AND (DOES_VEHICLE_EXIST( l_U1328 )))
    {
        START_PLAYBACK_RECORDED_VEHICLE( l_U1328, 123 );
        SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE( l_U1328, 6000 );
    }
    return;
}

void sub_41449()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;

    if (l_U788 == 0)
    {
        if ((NOT (IS_PED_DEAD( l_U1136 ))) AND (NOT (IS_PED_DEAD( l_U1135 ))))
        {
            if ((IS_PED_ON_SCREEN( l_U1136, 0 )) || (IS_PED_ON_SCREEN( l_U1135, 0 )))
            {
                sub_41535();
                sub_41655();
                l_U788 = 1;
            }
        }
    }
    if (l_U803 == 1)
    {
        uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U1135 )};
        if (uVar2._fU8 < 4.00000000)
        {
            sub_8154( l_U1135 );
            l_U803 = 0;
        }
    }
    if (l_U804 == 1)
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U1136 )};
        if (uVar5._fU8 < 1.00000000)
        {
            sub_8154( l_U1136 );
            l_U804 = 0;
        }
    }
    return;
}

void sub_41535()
{
    sub_1028( "NS", "P_HANDLE_FS_ROOFTOP_RUNNERS()", 0 );
    sub_38850( l_U1135 );
    ISEQ_REGISTER_ENTITY( -1170716322, "csrunner1", l_U1135, 0 );
    ISEQ_START( -1170716322 );
    l_U803 = 1;
    return;
}

void sub_41655()
{
    sub_1028( "NS", "P_HANDLE_FS_ROOFTOP_RUNNERS_2()", 0 );
    sub_38850( l_U1136 );
    ISEQ_REGISTER_ENTITY( -956144910, "csrunner2", l_U1136, 0 );
    ISEQ_START( -956144910 );
    l_U804 = 1;
    return;
}

void sub_41907()
{
    if (l_U790 == 0)
    {
        if ((sub_33912( ref l_U555, 0 )) || ((IS_PED_ON_SCREEN( l_U1140, 1 )) == 1))
        {
            sub_41960();
            sub_42288();
            l_U787 = 0;
            l_U790 = 1;
        }
    }
    if (sub_34361( ref l_U492, sub_1161(), 0 ))
    {
        sub_42575();
    }
    if (sub_34361( ref l_U513, sub_1161(), 0 ))
    {
        sub_42830();
        sub_42848();
    }
    if (l_U797 == 1)
    {
        if (((HAS_PED_BEEN_DAMAGED_BY_PED( l_U953, sub_1161(), 0 )) == 1) || (((HAS_PED_BEEN_DAMAGED_BY_PED( l_U939, sub_1161(), 0 )) == 1) || ((HAS_PED_BEEN_DAMAGED_BY_PED( l_U925, sub_1161(), 0 )) == 1)))
        {
            sub_7730( -1827157400, 1 );
            ISEQ_UNREGISTER_ENTITY( -1827157400, "TFE1" );
            ISEQ_UNREGISTER_ENTITY( -1827157400, "TFE2" );
            ISEQ_UNREGISTER_ENTITY( -1827157400, "TFE3" );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U925, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U939, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U953, 0 );
            REGISTER_TARGET( l_U925, sub_1161() );
            REGISTER_TARGET( l_U939, sub_1161() );
            REGISTER_TARGET( l_U953, sub_1161() );
            l_U797 = 0;
        }
        else if ((sub_6431( ref l_U740 )) == 1)
        {
            sub_8154( l_U925 );
            sub_8154( l_U939 );
            sub_8154( l_U953 );
            sub_7730( -1827157400, 1 );
            ISEQ_UNREGISTER_ENTITY( -1827157400, "TFE1" );
            ISEQ_UNREGISTER_ENTITY( -1827157400, "TFE2" );
            ISEQ_UNREGISTER_ENTITY( -1827157400, "TFE3" );
            l_U797 = 0;
        }
    }
    if ((sub_6431( ref l_U749 )) == 1)
    {
        l_U797 = 0;
        sub_7730( -851927440, 1 );
        ISEQ_UNREGISTER_ENTITY( -851927440, "TFE_1" );
        ISEQ_UNREGISTER_ENTITY( -851927440, "TFE_2" );
        ISEQ_UNREGISTER_ENTITY( -851927440, "TFE_3" );
    }
    return;
}

void sub_41960()
{
    sub_24859( l_U1140, l_U1109._fU0, l_U1109._fU12 );
    sub_24859( l_U1141, l_U1122._fU0, l_U1122._fU12 );
    if (NOT (IS_PED_DEAD( l_U1140 )))
    {
        FREEZE_PED_POSITION( l_U1140, 0 );
        SET_PED_INVINCIBLE( l_U1140, 0 );
    }
    if (NOT (IS_PED_DEAD( l_U1141 )))
    {
        FREEZE_PED_POSITION( l_U1141, 0 );
        SET_PED_INVINCIBLE( l_U1141, 0 );
    }
    if ((ISEQ_QUERY_STATE( -1935874550, 3 )) == 0)
    {
        ISEQ_REGISTER_ENTITY( -1935874550, "csrunner8", l_U1140, 0 );
        ISEQ_REGISTER_ENTITY( -1935874550, "csrunner9", l_U1141, 0 );
        sub_1028( "ka", "DRAG FOREST DRAG !", 0 );
        ISEQ_START( -1935874550 );
        sub_6175( ref l_U1241, 5312, 1, 0 );
        sub_6175( ref l_U1250, 5000, 1, 0 );
        sub_6311( ref l_U1250 );
        sub_6311( ref l_U1241 );
    }
    return;
}

void sub_42288()
{
    sub_1028( "NS", "P_UFE_DRAG_KILLER_ACTION", 0 );
    sub_38850( l_U1219 );
    if ((NOT (IS_PED_DEAD( l_U1219 ))) AND ((NOT (IS_PED_DEAD( l_U1141 ))) AND (NOT (IS_PED_DEAD( sub_1161() )))))
    {
        OPEN_SEQUENCE_TASK( ref l_U1362 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( 0, -132.38000000, 200.84000000, 7.44000000, l_U1141, 0, 1092616192, 1101004800, -1082130432, 3 );
        TASK_COMBAT_PED( 0, l_U1141 );
        CLOSE_SEQUENCE_TASK( l_U1362 );
        TASK_PERFORM_SEQUENCE( l_U1219, l_U1362 );
        CLEAR_SEQUENCE_TASK( l_U1362 );
    }
    sub_6175( ref l_U776, 4000, 1, 0 );
    sub_6311( ref l_U776 );
    return;
}

void sub_42575()
{
    if ((ISEQ_QUERY_STATE( -851927440, 3 )) == 0)
    {
        ISEQ_REGISTER_ENTITY( -851927440, "TFE_1", l_U1015, 0 );
        ISEQ_REGISTER_ENTITY( -851927440, "TFE_2", l_U1029, 0 );
        ISEQ_REGISTER_ENTITY( -851927440, "TFE_3", l_U1043, 0 );
        sub_1028( "ka", "KICK IN THE DOOR! GO GO GO !", 0 );
        ISEQ_START( -851927440 );
        sub_27851( ref g_U1212, 0 );
        sub_6175( ref l_U722, 1500, 1, 0 );
        sub_6311( ref l_U722 );
        sub_6175( ref l_U749, 6500, 1, 0 );
        sub_6311( ref l_U749 );
        l_U785 = 0;
    }
    return;
}

void sub_42830()
{
    return;
}

void sub_42848()
{
    if ((ISEQ_QUERY_STATE( -99898118, 3 )) == 0)
    {
        sub_38850( l_U1139 );
        ISEQ_REGISTER_ENTITY( -99898118, "csrunner5", l_U1139, 0 );
        sub_1028( "ka", "RUN FOREST RUN 5!", 0 );
        ISEQ_START( -99898118 );
        l_U807 = 1;
    }
    return;
}

void sub_43445()
{
    if (l_U787 == 0)
    {
        if ((IS_PED_DEAD( l_U1141 )) == 1)
        {
            sub_1028( "ka", "dragger is dead.. terminate the isequence", 0 );
            sub_43546( l_U1140 );
            sub_7730( -1935874550, 1 );
            l_U787 = 1;
        }
    }
    if (l_U1260 == 0)
    {
        if ((sub_6431( ref l_U1250 )) == 1)
        {
            sub_1028( "ka", "set draggee to corpse", 0 );
            sub_43546( l_U1140 );
            l_U1260 = 1;
        }
    }
    if (l_U785 == 0)
    {
        if ((sub_6431( ref l_U722 )) == 1)
        {
            sub_34082( ref g_U1212, 1, 1, 1065353216 );
            sub_6175( ref l_U731, 3000, 1, 0 );
            sub_6311( ref l_U731 );
            l_U785 = 1;
        }
    }
    if (l_U786 == 0)
    {
        if ((sub_6431( ref l_U731 )) == 1)
        {
            sub_32073( ref g_U1212, 0 );
            l_U786 = 1;
        }
    }
    if (l_U1259 == 0)
    {
        if ((sub_6431( ref l_U1241 )) == 1)
        {
            sub_1028( "ka", "shoot dragger to death", 0 );
            sub_43546( l_U1141 );
            l_U1259 = 1;
        }
    }
    return;
}

void sub_43546(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_43912()
{
    int I;

    if (l_U1407)
    {
        for ( I = 0; I <= 1; I++ )
        {
            if ((NOT (IS_PED_DEAD( l_U1330[I] ))) AND (DOES_PED_EXIST( l_U1330[I] )))
            {
                if (IS_PED_INJURED( l_U1330[I] ))
                {
                    sub_44004();
                    l_U1407 = 0;
                }
            }
        }
    }
    if (NOT (IS_PED_DEAD( l_U1327 )))
    {
        if (NOT (IS_PED_DEAD( sub_1161() )))
        {
            if ((sub_44343( sub_1161(), l_U1327, 1 )) < 1.50000000)
            {
                sub_1028( "NS", "kill ped", 0 );
                SET_PED_HEALTH( l_U1327, 0, 0 );
            }
        }
    }
    if (sub_34361( ref l_U240, sub_1161(), 0 ))
    {
        AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_3_5", "", 0.00000000, 5000, 5000, -1082130432, 0 );
        sub_1028( "KA", "PLAY FAV2_EXIT_OLDLADY_ONESHOT When player goes through door", 0 );
        if (l_U798 == 0)
        {
            if ((AUDIO_MUSIC_IS_ONESHOT_PREPARED( "FAV2_ONESHOT_H" )) == 1)
            {
                AUDIO_MUSIC_PLAY_ONESHOT();
                l_U798 = 1;
            }
        }
    }
    if (sub_6431( ref l_U713 ))
    {
        sub_44004();
        ADD_EXPLOSION( -158.92000000, 228.24000000, 3.90000000, 0, 0.01000000, 1, 0, 1065353216 );
        l_U1407 = 0;
    }
    return;
}

void sub_44004()
{
    sub_1028( "NS", "P_HELIA_OPENER()", 0 );
    ISEQ_UNREGISTER_ENTITY( 656995606, "csheli_male" );
    sub_7730( 656995606, 1 );
    if (NOT (IS_PED_DEAD( l_U1327 )))
    {
        if (NOT (IS_PED_DEAD( l_U1333 )))
        {
            CLEAR_PED_TASKS( l_U1327 );
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1327, 65488, 0, 0, 1 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1327, 14989, 0, 0, 0 ), 100, 1, g_U1309, l_U1333 );
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1327, 14989, 0, 0, 1 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1327, 3227, 0, 0, 0 ), 100, 1, g_U1309, l_U1333 );
            SET_PED_HEALTH( l_U1327, 0, 0 );
        }
    }
    return;
}

void sub_44343(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_44793()
{
    int I;
    vector[3] vVar3;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;

    array(ref vVar3, 3);
    vVar3[0] = {-161.90900000, 216.14700000, 3.39400000};
    vVar3[1] = {-164.99300000, 219.78200000, 4.85400000};
    vVar3[2] = {-167.52600000, 218.32900000, 4.85400000};
    if (l_U1434)
    {
        if (ISEQ_QUERY_STATE( 1681008462, 6 ))
        {
            l_U1434 = 0;
        }
        if (l_U801 == 1)
        {
            if (sub_44919())
            {
                for ( I = 0; I < 5; I++ )
                {
                    if (NOT (IS_PED_DEAD( l_U894[I] )))
                    {
                        PED_SET_ACTION_INTENTION( l_U894[I], 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                        if (NOT (IS_PED_DEAD( sub_1161() )))
                        {
                            TASK_COMBAT_PED( l_U894[I], sub_1161() );
                        }
                    }
                }
                l_U801 = 0;
            }
        }
        for ( I = 0; I <= 1; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U894[I] )))
            {
                if (IS_PED_INJURED( l_U894[I] ))
                {
                    if (NOT l_U1408[I])
                    {
                        SET_PED_CORPSE( l_U894[I], 0 );
                        l_U1408[I] = 1;
                    }
                }
                if ((PED_GET_ACTION_INTENTION_STATUS( l_U894[I], 48 )) == 3)
                {
                    SET_PED_CORPSE( l_U894[I], 0 );
                    l_U1408[I] = 1;
                }
            }
        }
        for ( I = 2; I <= 4; I++ )
        {
            if ((IS_PED_INJURED( l_U894[I] )) || (IS_PED_DEAD( l_U894[I] )))
            {
                if (NOT l_U1408[I])
                {
                    l_U1321 = 1;
                }
            }
            if (NOT (IS_PED_DEAD( l_U894[I] )))
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( l_U894[I], 48 )) == 3)
                {
                    DELETE_PED( ref l_U894[I] );
                    l_U1408[I] = 1;
                }
            }
        }
        if (l_U1321 == 1)
        {
            if (NOT (IS_PED_DEAD( sub_1161() )))
            {
                for ( I = 0; I < 5; I++ )
                {
                    sub_1028( "ka", "Interrupted !!!! UFE Should Attack player!", 0 );
                    if (NOT (IS_PED_DEAD( l_U894[I] )))
                    {
                        PED_SET_ACTION_INTENTION( l_U894[I], 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                        OPEN_SEQUENCE_TASK( ref l_U1362 );
                        if (NOT (IS_PED_DEAD( sub_1161() )))
                        {
                            REGISTER_TARGET( l_U894[I], sub_1161() );
                            TASK_COMBAT_PED( 0, sub_1161() );
                        }
                        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
                        CLOSE_SEQUENCE_TASK( l_U1362 );
                        CLEAR_PED_TASKS( l_U894[I] );
                        TASK_PERFORM_SEQUENCE( l_U894[I], l_U1362 );
                        CLEAR_SEQUENCE_TASK( l_U1362 );
                    }
                }
            }
            ISEQ_UNREGISTER_ENTITY( 1681008462, "tfeadv_male1" );
            ISEQ_UNREGISTER_ENTITY( 1681008462, "tfeadv_male2" );
            ISEQ_UNREGISTER_ENTITY( 1681008462, "tfeadv_male3" );
            ISEQ_UNREGISTER_ENTITY( 1681008462, "tfeadv_male4" );
            ISEQ_UNREGISTER_ENTITY( 1681008462, "tfeadv_male5" );
            sub_7730( 1681008462, 1 );
            l_U1434 = 0;
        }
    }
    return;
}

int sub_44919()
{
    int I;

    for ( I = 0; I < 5; I++ )
    {
        if (I > 1)
        {
            if (sub_44959( l_U894[I] ))
            {
                sub_1028( "NS", "Player_shot vig 20", 0 );
                return 1;
            }
        }
    }
    return 0;
}

int sub_44959(unknown uParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 ), 6.00000000, ref iVar3 ))
        {
            if (iVar3 == sub_1161())
            {
                sub_1028( "NS", "Player_shot near a ped", 0 );
                return 1;
            }
        }
    }
    return 0;
}

void sub_46043()
{
    int iVar2;
    unknown uVar3;

    if (g_U1046 == 0)
    {
        if (IS_TIME_OF_DAY_FROZEN() == 0)
        {
            GET_TIME_OF_DAY( ref iVar2, ref uVar3 );
            if (iVar2 == 21)
            {
                sub_1028( "kja", "TIME IS 21h, FReeze T-O-D", 0 );
                FREEZE_TIME_OF_DAY( 21, 0 );
            }
        }
    }
    return;
}

void sub_46154()
{
    if (l_U1165 == 0)
    {
        if ((sub_27479( l_U471 )) || (IS_SPHERE_VISIBLE( -155.47830000, 200.26340000, 3.43487100, 1.00000000, 1 )))
        {
            if (NOT (IS_PED_DEAD( l_U1142 )))
            {
                sub_1028( "SA", "Starting - piEnemyV07A", 0 );
                sub_24859( l_U1142, l_U1143._fU0, l_U1143._fU12 );
                ISEQ_REGISTER_ENTITY( -1979577743, "civ", l_U1142, 0 );
                ISEQ_START( -1979577743 );
                sub_6175( ref l_U1156, 2500, 1, 0 );
                sub_6311( ref l_U1156 );
            }
            l_U1165 = 1;
        }
    }
    if (l_U1166 == 0)
    {
        if (sub_6431( ref l_U1156 ))
        {
            sub_1028( "SA", "tmrVig07ADone", 0 );
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1142, 65488, -1, 1, 0 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1142, 65488, 0, 0, 0 ), 20, 1, g_U1308, 0 );
            l_U1166 = 1;
        }
    }
    return;
}

void sub_46495()
{
    if (l_U1190 == 0)
    {
        if ((sub_27479( l_U471 )) || (IS_SPHERE_VISIBLE( -155.47830000, 200.26340000, 3.43487100, 1.00000000, 1 )))
        {
            if (NOT (IS_PED_DEAD( l_U1167 )))
            {
                sub_1028( "SA", "Starting - piEnemyV07A_1", 0 );
                sub_38850( l_U1167 );
                sub_24859( l_U1167, l_U1168._fU0, l_U1168._fU12 );
                ISEQ_REGISTER_ENTITY( 1789862085, "civ", l_U1167, 0 );
                ISEQ_START( 1789862085 );
                sub_6175( ref l_U1181, 3500, 1, 0 );
                sub_6311( ref l_U1181 );
            }
            l_U1190 = 1;
        }
    }
    if (l_U1191 == 0)
    {
        if (sub_6431( ref l_U1181 ))
        {
            sub_1028( "SA", "tmrVig07A_1Done", 0 );
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1167, 65488, -1, 1, 0 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1167, 65488, 0, 0, 0 ), 20, 1, g_U1308, 0 );
            l_U1191 = 1;
        }
    }
    return;
}

void sub_46850()
{
    if ((l_U685 == 0) AND ((sub_6431( ref l_U686 )) == 1))
    {
        sub_29459( ref l_U664 );
        sub_29555( 0, sub_1161(), "MAX", ref l_U664, 2, 0 );
        sub_29794( "SFV2_MXSTNDBL", ref l_U664, 8, 1 );
        l_U685 = 1;
    }
    return;
}

void sub_46980()
{
    sub_1028( "ka", "pi00ABattle_DOOR_02 - INSIDE PROC - FIRE OFF ACT_INT_SEQ_ACTION01", 0 );
    if (NOT (IS_PED_DEAD( l_U1296 )))
    {
        sub_1028( "ka", "pi00ABattle_DOOR_02 - ACT INT 01", 0 );
        PED_SET_ACTION_INTENTION( l_U1296, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    return;
}

void sub_47188()
{
    if (NOT (IS_PED_DEAD( l_U1261 )))
    {
        sub_1028( "NS", "pi00ABATTLE_DOOR_01 - ACT INT 01", 0 );
        PED_SET_ACTION_INTENTION( l_U1261, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    return;
}

void sub_47694()
{
    sub_8939();
    sub_8233( l_U1329 );
    sub_8154( l_U1333 );
    sub_8405( l_U1328 );
    sub_7714();
    sub_47744();
    return;
}

void sub_47744()
{
    sub_1028( "SP", "FAVELA RAID: P_UNLOAD_ASSETS", 0 );
    sub_47801( -401048192 );
    sub_47801( -1474177767 );
    sub_47801( -805468804 );
    sub_47801( -1006708222 );
    sub_47972( -378310276 );
    sub_47801( g_U776 );
    REMOVE_ANIM_DICT( "npc_pstl_cover_grenade", 0 );
    REMOVE_ANIM_DICT( "npc_rifle_cover_grenade", 0 );
    REMOVE_ANIM_DICT( "mped_grenade_core", 0 );
    return;
}

void sub_47801(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_3098( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_47972(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}


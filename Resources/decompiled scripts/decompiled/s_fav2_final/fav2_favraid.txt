void main()
{
    l_U51 = 0;
    l_U52 = 0;
    l_U53 = 1;
    l_U55 = 0;
    l_U56 = 0;
    l_U57 = 1500;
    l_U70 = 0;
    l_U107 = 0;
    l_U108 = 0;
    l_U109 = 0;
    l_U110 = 0;
    l_U111 = 0;
    l_U112 = 0;
    l_U881 = 0;
    l_U951 = {-157.41500000, 167.00600000, 5.91800000};
    l_U954 = -90.00000000;
    l_U956 = {-156.89000000, 168.64100000, 5.92200000};
    l_U959 = {0.00000000, 0.00000000, 93.54000000};
    l_U976 = {-144.31000000, 115.18000000, 11.79000000};
    l_U979 = -80.00000000;
    l_U981 = {-141.37000000, 116.74000000, 11.73000000};
    l_U984 = {0.00000000, 0.00000000, 50.00000000};
    l_U988 = {-141.37000000, 115.74000000, 11.73000000};
    l_U991 = {0.00000000, 0.00000000, 100.00000000};
    l_U1008 = {-153.11000000, 174.30000000, 8.49000000};
    l_U1011 = 90.00000000;
    l_U1013 = {-155.00000000, 173.97000000, 8.60000000};
    l_U1016 = {0.00000000, 0.00000000, -90.00000000};
    l_U1020 = {-155.00000000, 174.97000000, 8.60000000};
    l_U1023 = {0.00000000, 0.00000000, -90.00000000};
    l_U1040 = {-156.15600000, 158.40900000, 6.30000000};
    l_U1043 = 0.00000000;
    l_U1045 = {-155.51700000, 161.35800000, 6.19000000};
    l_U1048 = {0.00000000, 0.00000000, 127.86500000};
    l_U1052 = {-154.91100000, 160.56100000, 6.19000000};
    l_U1055 = {0.00000000, 0.00000000, 127.86500000};
    l_U1072 = {-124.80600000, 152.15000000, 10.55000000};
    l_U1075 = 90.00000000;
    l_U1077 = {-127.18300000, 151.72000000, 10.60000000};
    l_U1080 = {0.00000000, 0.00000000, -82.97000000};
    l_U1084 = {-127.30600000, 152.72000000, 10.60000000};
    l_U1087 = {0.00000000, 0.00000000, -82.97000000};
    l_U1120 = {-156.04300000, 154.95500000, 15.00000000};
    l_U1123 = 0.00000000;
    l_U1209 = 0;
    l_U1547 = 0;
    l_U1548 = {-128.43820000, 118.22180000, 10.83997000};
    l_U1551 = 87.46572000;
    l_U1552 = {-130.91470000, 118.85770000, 12.00367000};
    l_U1555 = 0.00000000;
    l_U1556 = 0;
    l_U1557 = 100;
    l_U1558 = 0;
    l_U1559 = 0;
    l_U1560 = 0;
    l_U1561 = 0;
    l_U1562 = 0;
    l_U1563 = 0;
    l_U1564 = 0;
    l_U1565 = 0;
    l_U1566 = 0;
    l_U1567 = 0;
    l_U1568 = 0;
    l_U1569 = 1;
    l_U1570 = 0;
    l_U1571 = 0;
    l_U1572 = 0;
    l_U1573 = 0;
    l_U1574 = 0;
    l_U1576 = 1;
    l_U1577 = 1;
    l_U1578 = 0;
    l_U1579 = 0;
    l_U1580 = 1;
    l_U1581 = 0;
    l_U1582 = 0;
    l_U1709 = 0;
    l_U1710 = 0;
    l_U1711 = 0;
    l_U1712 = 0;
    l_U1713 = 0;
    l_U1714 = 0;
    l_U1715 = {-131.94200000, 154.59600000, 6.94200000};
    l_U1718 = -105.43000000;
    l_U1719 = {-140.74000000, 157.77000000, 6.47000000};
    l_U1722 = -94.37000000;
    l_U1723 = {-129.60880000, 144.71880000, 7.09035900};
    l_U1726 = {-139.18000000, 157.07000000, 6.31000000};
    l_U1729 = -94.37000000;
    l_U1730 = {-127.00500000, 144.85280000, 7.15570400};
    l_U1733 = 0;
    l_U1734 = 0;
    l_U1821 = {-139.41000000, 160.55000000, 7.80000000};
    l_U1824 = 70.71000000;
    l_U1889 = 500;
    l_U1890 = 0;
    sub_1198( "SP", "Script fav2_favRaid.sc is starting...", 0 );
    l_U108 = 1;
    while (IS_EXITFLAG_SET() == 0)
    {
        sub_1267();
        sub_9817();
        WAIT( 0 );
    }
    sub_3661();
    sub_54888();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "fav2_favRaid" );
    SET_EXITFLAG_RESPONSE();
    sub_1198( "SP", "Script fav2_favRaid.sc is terminating...", 0 );
    return;
}

void sub_1198(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1267()
{
    if (g_U782 == 3)
    {
        switch (l_U112)
        {
            case 0:
            if ((sub_1422()) || (IS_PED_DEAD( sub_1349() )))
            {
                l_U112 = 1;
                sub_1198( "kja", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_1919())
            {
                l_U112 = 2;
            }
            else if ((sub_1959( 0 )) == 1)
            {
                l_U112 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_1349() )))
            {
                if ((g_U1312[3]._fU40 != 4) AND (g_U1312[3]._fU40 != 0))
                {
                    sub_1198( "kja", "Shutting down script for MCE_UFE_RAID.", 0 );
                    sub_3405( ref g_U1312[3] );
                }
                l_U112 = 3;
                sub_1198( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_1198( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_1349() ))) AND (NOT (IS_PLAYER_DEAD( sub_1371() ))))
            {
                SET_PLAYER_CONTROL( sub_1371(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_1349() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_1349(), 0 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            sub_3661();
            l_U112 = 4;
            sub_1198( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_1198( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_5547( ref l_U71, sub_1349() );
            l_U112 = 5;
            sub_1198( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_1198( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            sub_3405( ref g_U1312[3] );
            l_U108 = 1;
            l_U112 = 0;
            sub_1198( "kja", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    else if ((sub_1919()) || ((IS_PED_DEAD( sub_1349() )) == 1))
    {
        sub_3405( ref g_U1312[3] );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_1349()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1371() );
    }
    return 0;
}

void sub_1371()
{
    return GET_PLAYER_ID();
}

int sub_1422()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        g_U665 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1349() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1349(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1371(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1371(), 1 );
            if ((IS_PED_VISIBLE( sub_1349() )) == 0)
            {
                SET_PED_VISIBLE( sub_1349(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1919()
{
    return g_U648;
}

int sub_1959(int iParam0)
{
    iParam0 = 1;
    switch (l_U56)
    {
        case 0:
        if (NOT (sub_2020( ref l_U58 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1349() )))
            {
                l_U57 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_2130( ref l_U58, l_U57, 1, 1 );
            sub_2266( ref l_U58 );
        }
        if (sub_2386( ref l_U58 ))
        {
            sub_1198( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1349() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1371() )))
            {
                SET_PLAYER_CONTROL( sub_1371(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U56 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U56 = 2;
            }
            else
            {
                l_U56 = 3;
            }
        }
        break;
        case 2:
        sub_1198( "NS", "Player will QUIT", 0 );
        sub_2873();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1198( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2873();
        return 1;
        break;
    }
    return 0;
}

int sub_2020(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_2130(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2266(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_2386(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2873()
{
    sub_1198( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2923( ref l_U58 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1371() )))
    {
        SET_PLAYER_CONTROL( sub_1371(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U55 = 0;
    l_U55 = l_U55;
    l_U56 = 0;
    return;
}

void sub_2923(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_3405(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_3661()
{
    sub_1198( "SP", "P_CLEANUP_ALL", 0 );
    sub_3698();
    ISEQ_UNREGISTER_ENTITY( -390570017, "CIV" );
    ISEQ_UNREGISTER_ENTITY( -390570017, "DOOR" );
    sub_3713( l_U937 );
    sub_4457( l_U955 );
    ISEQ_UNREGISTER_ENTITY( -1486121519, "CIV" );
    ISEQ_UNREGISTER_ENTITY( -1486121519, "SHUTTERA" );
    ISEQ_UNREGISTER_ENTITY( -1486121519, "SHUTTERB" );
    sub_3713( l_U962 );
    sub_4457( l_U980 );
    sub_4457( l_U987 );
    ISEQ_UNREGISTER_ENTITY( 706754384, "CIV" );
    ISEQ_UNREGISTER_ENTITY( 706754384, "SHUTTERA" );
    ISEQ_UNREGISTER_ENTITY( 706754384, "SHUTTERB" );
    sub_3713( l_U994 );
    sub_4457( l_U1012 );
    sub_4457( l_U1019 );
    ISEQ_UNREGISTER_ENTITY( 290867718, "CIV" );
    ISEQ_UNREGISTER_ENTITY( 290867718, "SHUTTERA" );
    ISEQ_UNREGISTER_ENTITY( 290867718, "SHUTTERB" );
    ISEQ_TERMINATE( 290867718 );
    ISEQ_UNREGISTER_ENTITY( 231092439, "CIV" );
    ISEQ_UNREGISTER_ENTITY( 231092439, "SHUTTERA" );
    ISEQ_UNREGISTER_ENTITY( 231092439, "SHUTTERB" );
    ISEQ_TERMINATE( 231092439 );
    ISEQ_UNREGISTER_ENTITY( -1725804306, "cs_1" );
    ISEQ_UNREGISTER_ENTITY( -1725804306, "ufe_1" );
    ISEQ_TERMINATE( -1725804306 );
    sub_3713( l_U1026 );
    sub_4457( l_U1044 );
    sub_4457( l_U1051 );
    sub_3713( l_U1058 );
    sub_4457( l_U1076 );
    sub_4457( l_U1083 );
    sub_4457( l_U1544 );
    sub_3713( l_U922 );
    sub_3713( l_U908 );
    sub_3801( ref l_U1190 );
    sub_3801( ref l_U1237 );
    sub_3801( ref l_U1267 );
    sub_3801( ref l_U1352 );
    sub_3713( l_U1370 );
    sub_3713( l_U1298 );
    sub_3713( l_U1430 );
    sub_3713( l_U1445 );
    sub_5059( l_U1091 );
    sub_3713( l_U1092 );
    sub_3713( l_U1106 );
    sub_5140( g_U739._fU0 );
    sub_5204( "LEVEL_S_FAV2_CP_03" );
    sub_5271( "LEVEL/S_FAV2/S_FAV2_HELI_DRIVER_CP03" );
    sub_5299();
    return;
}

void sub_3698()
{
    sub_3713( l_U1370 );
    sub_3713( l_U1445 );
    sub_3801( ref l_U1352 );
    sub_3713( l_U1284 );
    sub_3713( l_U1298 );
    sub_3801( ref l_U1237 );
    sub_3801( ref l_U1267 );
    sub_3713( l_U1384 );
    sub_3801( ref l_U1399 );
    sub_3801( ref l_U1415 );
    sub_3713( l_U1430 );
    sub_3801( ref l_U1190 );
    sub_3713( l_U908 );
    sub_3713( l_U922 );
    ISEQ_UNREGISTER_ENTITY( 748104715, "deadend1_male1" );
    ISEQ_TERMINATE( 748104715 );
    ISEQ_UNREGISTER_ENTITY( -1766338147, "player" );
    ISEQ_TERMINATE( -1766338147 );
    sub_4044( 723698836, 1 );
    sub_4248( -194111775 );
    return;
}

void sub_3713(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_3801(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_3713( (uParam0^)[I] );
    }
    return;
}

void sub_4044(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_4248(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_4371( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_4371(unknown uParam0)
{
    return;
}

void sub_4457(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_5059(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_5140(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_5204(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_5271(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}

void sub_5299()
{
    sub_1198( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_1198( "CCB", "Stopping the Favela2_Raid context...", 0 );
    END_CONTEXT( "Favela2_Raid" );
    return;
}

void sub_5547(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1198( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (g_U665)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_5733( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_6810( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_7102( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_7449( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_7102( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_7449( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_7102( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_7449( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_7734( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_7449( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_7734( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_7449( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (g_U665 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_8229( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_8390( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1349(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (g_U665)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    g_U665 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1198( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_5733(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_5765( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_5765(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_6810(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_7102(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_4371( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_7449(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_7734(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_4371( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_8229(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_8390(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_5765( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_8462( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_8462(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_9817()
{
    unknown uVar2;

    sub_9827();
    switch (l_U108)
    {
        case 0: break;
        case 1:
        sub_1198( "SP", "eCheckpointState = CHECKPOINT_INIT_SCRIPT_DATA", 0 );
        sub_10399();
        sub_16972();
        sub_17346();
        sub_17780( "SFV2AUD" );
        sub_17892();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U108 = 2;
        sub_1198( "SP", "eCheckpointState = CHECKPOINT_SETUP_START_POINT", 0 );
        break;
        case 2:
        sub_1198( "SP", "eCheckpointState = CHECKPOINT_SETUP_START_POINT", 0 );
        if (g_U782 < 3)
        {
            l_U109 = 1;
            l_U108 = 6;
            sub_1198( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_03_CUTSCENE", 0 );
        }
        else
        {
            l_U108 = 3;
            sub_1198( "SP", "eCheckpointState = CHECKPOINT_INIT_REQUEST_ASSETS", 0 );
        }
        break;
        case 3:
        sub_1198( "SP", "eCheckpointState = CHECKPOINT_INIT_REQUEST_ASSETS", 0 );
        sub_18323();
        sub_18688();
        sub_19255();
        sub_19326( 0 );
        l_U108 = 4;
        sub_1198( "SP", "eCheckpointState = CHECKPOINT_INIT_LOAD_ASSETS", 0 );
        break;
        case 4:
        sub_1198( "SP", "eCheckpointState = CHECKPOINT_INIT_LOAD_ASSETS", 0 );
        if ((sub_19947()) AND ((sub_19719()) AND (sub_19570() == 1)))
        {
            if ((l_U107 == 0) AND (g_U781 == 3))
            {
                if (sub_20015())
                {
                    l_U107 = 1;
                    if ((sub_20155( ref l_U71 )) == 0)
                    {
                        sub_7734( sub_1349(), g_U1310, 200, 0, 0 );
                    }
                    l_U108 = 5;
                    sub_1198( "SP", "eCheckpointState = CHECKPOINT_DEBUG_WAIT_FOR_WEAPON", 0 );
                }
            }
            else
            {
                sub_20443( ref g_U1107, 1 );
                sub_11639( ref g_U1107, 1 );
                l_U111 = 1;
                l_U108 = 7;
                sub_1198( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_03_BLENDOUT", 0 );
            }
        }
        break;
        case 5:
        sub_1198( "SP", "eCheckpointState = CHECKPOINT_DEBUG_WAIT_FOR_WEAPON", 0 );
        if ((IS_PED_DEAD( sub_1349() )) == 0)
        {
            uVar2 = GET_WEAPON_FROM_HAND( sub_1349(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
            {
                sub_20443( ref g_U1107, 1 );
                sub_11639( ref g_U1107, 1 );
                l_U111 = 1;
                l_U108 = 7;
                sub_1198( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_03_BLENDOUT", 0 );
            }
        }
        break;
        case 6:
        if (sub_20880() == 1)
        {
            sub_20443( ref g_U1107, 1 );
            sub_11639( ref g_U1107, 1 );
            l_U111 = 1;
            l_U108 = 7;
            sub_1198( "SP", "eCheckpointState = CHECKPOINT_HANDLE_MID_03_BLENDOUT", 0 );
            break;
        }
        return;
        case 7:
        if (sub_29890() == 1)
        {
            l_U108 = 8;
            sub_1198( "SP", "eCheckpointState = CHECKPOINT_START_GOTO_OLD_LADY_APT", 0 );
            break;
        }
        return;
        case 8:
        sub_1198( "SP", "eCheckpointState = CHECKPOINT_START_GOTO_OLD_LADY_APT", 0 );
        sub_32714();
        sub_11639( ref g_U1149, 1 );
        sub_33512( ref g_U1191, 1, 1, 0.50000000 );
        sub_11639( ref g_U1121, 0 );
        sub_11639( ref g_U1135, 1 );
        sub_11639( ref g_U1156, 1 );
        sub_33512( ref g_U1142, 0, 1, 0.65000000 );
        sub_11639( ref l_U1446, 1 );
        sub_32152( ref l_U1446, 0 );
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        if ((IS_PED_DEAD( sub_1349() )) == 0)
        {
            SET_PLAYER_CONTROL( sub_1371(), 1, 0 );
        }
        sub_33783( ref l_U71, 3, 0 );
        sub_2130( ref l_U1628, 13500, 1, 0 );
        sub_2266( ref l_U1628 );
        sub_38273();
        l_U108 = 9;
        sub_1198( "SP", "eCheckpointState = CHECKPOINT_HANDLE_GOTO_OLD_LADY_APT", 0 );
        break;
        case 9:
        sub_38479();
        sub_38703();
        if (l_U1576)
        {
            if (sub_39000())
            {
                l_U1576 = 0;
            }
        }
        if (l_U1577 == 1)
        {
            if (sub_39198())
            {
                l_U1577 = 0;
            }
        }
        sub_39357();
        sub_39510();
        sub_39637();
        sub_39953();
        sub_40544();
        sub_44696( l_U239, l_U386 );
        if (sub_38718( ref l_U617, 0 ))
        {
            sub_44898();
        }
        if ((sub_40171( ref l_U659, l_U1237[0], 0 )) == 1)
        {
            sub_3713( l_U1237[0] );
        }
        if (sub_38760( l_U1237[0], l_U638 ))
        {
            sub_3713( l_U1237[0] );
        }
        if (l_U1559 == 0)
        {
            if ((sub_40446( l_U218 )) == 1)
            {
                sub_11639( ref g_U1121, 1 );
                sub_45260();
                sub_47020();
                sub_47168( ref l_U899, 1 );
                l_U1560 = 1;
                l_U1571 = 1;
                l_U1573 = 1;
                l_U1559 = 1;
            }
        }
        if (l_U1571 == 0)
        {
            if ((sub_40446( l_U197 )) == 1)
            {
                sub_45260();
                sub_47020();
                sub_11639( ref g_U1121, 1 );
                sub_47168( ref l_U899, 1 );
                l_U1560 = 1;
                l_U1559 = 1;
                l_U1571 = 1;
            }
        }
        if ((sub_38718( ref l_U575, 0 )) == 1)
        {
            l_U1570 = 1;
        }
        if (l_U1560 == 1)
        {
            if (l_U1562 == 0)
            {
                if (sub_47555() == 1)
                {
                    l_U1270 = sub_47730();
                    if (((IS_PED_DEAD( l_U1270 )) == 0) AND ((DOES_PED_EXIST( l_U1270 )) == 1))
                    {
                        l_U1562 = 1;
                    }
                }
            }
        }
        if (l_U881 == 0)
        {
            if (sub_47555() == 0)
            {
                sub_16427( ref l_U755, 1 );
                l_U881 = 1;
            }
        }
        if (l_U1559 == 1)
        {
            if (l_U1561 == 0)
            {
                if (sub_47555() == 0)
                {
                    AUDIO_MUSIC_SUSPEND( 1000 );
                    AUDIO_MUSIC_PLAY_ONESHOT();
                    l_U1561 = 1;
                }
            }
        }
        if ((l_U1561) AND (NOT l_U1734))
        {
            if (NOT IS_BULLET_CAMERA_ACTIVE())
            {
                if (sub_40446( l_U701 ))
                {
                    if ((sub_48287( l_U1805 )) == 0)
                    {
                        sub_41269( ref l_U1775 );
                        sub_41351( 0, sub_1349(), "MAX", ref l_U1775, 2, 0 );
                        sub_41602( "SFV2_VOMAXDA", ref l_U1775, 8, 1 );
                        l_U1734 = 1;
                    }
                }
            }
        }
        if (l_U1709 == 0)
        {
            if ((sub_40446( l_U239 )) == 1)
            {
                sub_48557( ref l_U885, l_U1237[1] );
                sub_48557( ref l_U886, l_U1267[0] );
                sub_48557( ref l_U886, l_U1267[1] );
                sub_26188( ref l_U882, l_U1237[0], 1 );
                sub_26188( ref l_U882, l_U1267[0], 1 );
                sub_26188( ref l_U882, l_U1267[1], 1 );
                sub_48705();
                sub_49181();
                sub_49582();
                l_U1709 = 1;
            }
        }
        if (l_U1572 == 0)
        {
            if ((sub_38718( ref l_U428, 0 )) == 1)
            {
                l_U110 = 1;
                l_U1572 = 1;
                l_U1090 = 1;
            }
        }
        if ((sub_38718( ref l_U491, 0 )) == 1)
        {
            sub_50000();
            if (NOT (IS_PED_DEAD( l_U1237[0] )))
            {
                sub_3713( l_U1237[0] );
            }
            if (NOT (IS_PED_DEAD( l_U1237[1] )))
            {
                sub_3713( l_U1237[1] );
            }
        }
        if (sub_38718( ref l_U554, 0 ))
        {
            sub_50144();
        }
        if (sub_38760( l_U1092, l_U596 ))
        {
            sub_5059( l_U1091 );
            sub_3713( l_U1092 );
            sub_3713( l_U1106 );
        }
        if (sub_38718( ref l_U134, 0 ))
        {
            sub_51362( ref g_U1312[4] );
        }
        if ((sub_38718( ref l_U260, 0 )) == 1)
        {
            sub_3698();
            sub_20443( ref g_U1191, 0 );
            sub_2130( ref l_U1637, 2000, 1, 0 );
            sub_2266( ref l_U1637 );
        }
        if ((sub_38718( ref l_U281, 0 )) == 1)
        {
            l_U108 = 10;
            sub_1198( "SP", "eCheckpointState = CHECKPOINT_FINISHED - IN A TRIGGER", 0 );
        }
        if ((sub_40446( l_U680 )) == 1)
        {
            sub_51551();
        }
        sub_51596();
        break;
        case 10:
        sub_1198( "SP", "eCheckpointState = CHECKPOINT_FINISHED - INSIDE THE CASE OF CHECKPOINT_FINISHED", 0 );
        sub_1198( "SP", "eCheckpointState = CHECKPOINT_FINISHED - TIMER FINISHED CLEANUP AND UNLOAD and LOCK GATE", 0 );
        AUDIO_MUSIC_SUSPEND( 10000 );
        sub_3661();
        sub_54888();
        sub_11639( ref g_U1191, 1 );
        l_U108 = 0;
        SET_EXITFLAG_FOR_SCRIPT( g_U1312[3]._fU32 );
        sub_1198( "SP", "eCheckpointState = CHECKPOINT_IDLE", 0 );
        break;
    }
    return;
}

void sub_9827()
{
    switch (l_U1803)
    {
        case 0:
        sub_1198( "CCB", "eBingBangBoom - STATE_CHALLENGE_IDLE", 0 );
        l_U1803 = 1;
        break;
        case 1:
        if (l_U108 >= 9)
        {
            if (sub_9957( l_U1544, sub_1349() ))
            {
                if (SCRIPT_VAR_HASH_EXISTS( 196995894 ))
                {
                    l_U1804 = (SCRIPT_VAR_HASH_GET_INT( 196995894 )) + 1;
                    SCRIPT_VAR_HASH_SET_INT( 196995894, l_U1804 );
                }
                else
                {
                    sub_1198( "CCB", "The PropaneDestroyed script variable is NOT valid!!!", 0 );
                }
                sub_1198( "CCB", "eBingBangBoom - STATE_CHALLENGE_COMPLETE", 0 );
                l_U1803 = 2;
            }
        }
        break;
        case 2: break;
    }
    return;
}

int sub_9957(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        if (DOES_OBJECT_EXIST( uParam0 ))
        {
            if (HAS_OBJECT_BEEN_DAMAGED_BY_PED( uParam0, uParam1 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_10399()
{
    sub_1198( "SP", "P_INIT_GAMEPLAY_STRUCTS", 0 );
    sub_10481( ref l_U923, -139.69200000, 120.13900000, 8.87600000, 178.18900000, -1803991131, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U909, -140.43000000, 117.44000000, 9.40000000, -127.77000000, 1115622901, 4, 1, 1, 0, 0 );
    sub_10481( ref l_U938, l_U951, l_U954, 1115622901, 4, 1, 0, 0, 0 );
    sub_10481( ref l_U963, l_U976, l_U979, -1907248745, 4, 1, 0, 0, 0 );
    sub_10481( ref l_U995, l_U1008, l_U1011, -1907248745, 4, 1, 0, 0, 0 );
    sub_10481( ref l_U1027, l_U1040, l_U1043, -1907248745, 4, 1, 0, 0, 0 );
    sub_10481( ref l_U1059, l_U1072, l_U1075, 1115622901, 4, 1, 0, 0, 0 );
    sub_10481( ref l_U1124[0], -128.15360000, 128.12770000, 7.02771600, 0.00000000, -58376829, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U1124[2], -130.15360000, 128.12770000, 7.02771600, 0.00000000, -1171492726, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U1124[3], -131.15360000, 128.12770000, 7.02771600, 0.00000000, -1803991131, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U1124[4], -132.15360000, 128.12770000, 7.02771600, 0.00000000, 1902835366, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U1210[0], -134.09000000, 130.51000000, 8.99818400, 77.84000000, -58376829, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U1210[1], -132.76000000, 130.45000000, 8.99818400, 178.58000000, 1902835366, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U1240[0], -123.11680000, 121.01650000, 9.29319600, 48.81113000, -1333236019, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U1240[1], -124.92310000, 123.28560000, 7.08769700, 100.13440000, -944870602, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U1299[0], -140.67000000, 120.48000000, 9.41000000, -86.86000000, -1171492726, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U1299[1], -135.15300000, 116.19500000, 10.81800000, 100.00000000, -1803991131, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U1299[2], -126.86000000, 140.73000000, 7.12000000, 166.90450000, -1803991131, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U1299[3], -127.58000000, 138.62000000, 7.12000000, 166.90450000, 521861167, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U1357, -135.15300000, 116.19500000, 10.81800000, 100.00000000, 1115622901, 8, 4, 1, 0, 0 );
    sub_10481( ref l_U1285, -135.72000000, 130.52000000, 9.43000000, 202.79810000, -1907248745, 8, 4, 2, 0, 0 );
    sub_10481( ref l_U1371, l_U1715, l_U1718, 756046324, 4, 1, 0, 0, 0 );
    sub_10481( ref l_U1385[0], l_U1719, l_U1722, 521861167, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U1401[0], l_U1726, l_U1729, -944870602, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U1417, -140.83000000, 160.53000000, 6.12000000, 158.64590000, 521861167, 7, 3, 2, 0, 0 );
    sub_10481( ref l_U1432, -145.69200000, 154.27500000, 14.07400000, 65516, -1907248745, 4, 1, 0, 0, 0 );
    sub_11591( ref l_U1446, -1006708222, -126.24660000, 122.85300000, 8.17904000, 0.00000000, 0.00000000, 0.00000000 );
    sub_11639( ref l_U1446, 1 );
    sub_11591( ref l_U1453, -1006708222, -124.67510000, 123.03180000, 11.16567000, 0.00000000, 0.00000000, 0.00000000 );
    sub_11958( ref l_U113, "TRIG_EXPLODE_COURT", -128.40300000, 160.17300000, 6.19501000, 4.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -17.76460000, 1 );
    sub_11958( ref l_U176, "TRIG_RAID_SCENE", -128.59700000, 118.54400000, 9.16000000, 3.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, -89.47920000, 1 );
    sub_11958( ref l_U197, "TRIG_RAID_WAVE2", -134.36000000, 123.46000000, 9.68000000, 3.75000000, 14.63000000, 5.00000000, 0.00000000, 0.00000000, -87.81000000, 1 );
    sub_11958( ref l_U218, "TRIG_RAID_WAVE2B", -130.86000000, 121.45000000, 10.00000000, 4.00000000, 8.00000000, 4.00000000, 0.00000000, 0.00000000, -89.79000000, 1 );
    sub_11958( ref l_U239, "TRIG_DEAD_END_START", -129.66000000, 132.50000000, 5.59000000, 4.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, -85.66000000, 1 );
    sub_11958( ref l_U281, "TRIG_SCRIPT_END", -158.91000000, 188.47000000, 5.65000000, 4.50000000, 6.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11958( ref l_U260, "TRIG_CLOSE_GATE", -154.99000000, 169.63000000, 5.65000000, 4.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11958( ref l_U155, "TRIG_CIV_RUNNER_END", -138.60700000, 164.41300000, 8.37684000, 4.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -17.76460000, 1 );
    sub_11958( ref l_U134, "tbStartOldLadyApt", -128.36000000, 147.99000000, 6.38000000, 5.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 90.00000000, 1 );
    sub_11958( ref l_U344, "TRIG_BALCONY_RAID_TELEPORT", -135.65000000, 132.36000000, 8.57000000, 1.93000000, 1.48000000, 2.78000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11958( ref l_U365, "TRIG_END_ALLEY_CAM", -140.72500000, 157.20400000, 4.62000000, 5.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, -17.76000000, 1 );
    sub_11958( ref l_U386, "TRIG_RAID_LastMan", -130.86000000, 128.23000000, 6.92000000, 4.00000000, 8.00000000, 4.00000000, 0.00000000, 0.00000000, -89.79000000, 1 );
    sub_11958( ref l_U407, "tbKillStairsCS", -136.01440000, 115.97480000, 10.80972000, 2.24000000, 2.47000000, 1.64000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11958( ref l_U428, "tbDEStart", -130.47000000, 133.44000000, 6.92000000, 4.00000000, 8.00000000, 4.00000000, 0.00000000, 0.00000000, -89.79000000, 1 );
    sub_11958( ref l_U449, "tbRaidWave2LowerBalc", -132.87000000, 123.41000000, 7.14000000, 3.75000000, 12.64000000, 5.00000000, 0.00000000, 0.00000000, -87.81000000, 1 );
    sub_11958( ref l_U470, "tbGrenadePlayer", -130.60000000, 116.13000000, 10.54000000, 7.04000000, 6.60000000, 3.15000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11958( ref l_U491, "tbDEBalconyRunner", -130.45000000, 155.97000000, 6.61000000, 4.00000000, 8.00000000, 4.00000000, 0.00000000, 0.00000000, -89.79000000, 1 );
    sub_11958( ref l_U512, "tbTriggerShutter2", -144.88000000, 158.65000000, 4.62000000, 5.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, -17.76000000, 1 );
    sub_11958( ref l_U533, "tbFirstDoor00", -151.67000000, 160.83000000, 4.62000000, 5.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, -17.76000000, 1 );
    sub_11958( ref l_U575, "tbAlleyActivate", -134.20000000, 125.57000000, 6.92000000, 15.00000000, 8.00000000, 7.00000000, 0.00000000, 0.00000000, 0.85000000, 1 );
    sub_11958( ref l_U554, "tbHeli", -149.92000000, 160.59000000, 4.62000000, 5.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, -31.97000000, 1 );
    sub_11958( ref l_U596, "tbKillHeli", -158.75000000, 256.68000000, -7.39000000, 50.00000000, 20.00000000, 40.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11958( ref l_U617, "tbUfeBalcRunAway", -134.55000000, 125.49000000, 6.42000000, 3.75000000, 14.63000000, 10.00000000, 0.00000000, 0.00000000, -90.41000000, 1 );
    sub_11958( ref l_U638, "tbUfeKill", -139.22000000, 135.60000000, 7.62000000, 8.00000000, 8.00000000, 4.00000000, 0.00000000, 0.00000000, -89.79000000, 1 );
    sub_11958( ref l_U659, "tbBalconyExit", -131.33000000, 133.86000000, 8.85000000, 1.93000000, 1.48000000, 2.78000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11958( ref l_U680, "tbDoorOpen", -154.52000000, 163.96000000, 4.62000000, 5.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, -31.97000000, 1 );
    sub_11958( ref l_U701, "tbPlaySFV2_VOMAXD", -154.81000000, 163.18000000, 4.62000000, 5.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, -31.97000000, 1 );
    sub_14051( ref l_U882, "TETH_UFE_RAID", -131.42500000, 126.22000000, 5.59000000, 10.00000000, 10.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14051( ref l_U883, "TETH_UFE_RAID02", -137.15700000, 119.02000000, 6.97782000, 8.00000000, 10.00000000, 8.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14051( ref l_U884, "TETH_UFE_RAID_COME_UP", -134.36000000, 116.45000000, 8.93000000, 15.00000000, 6.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14051( ref l_U885, "TETH_UFE_RAID_BALCONY1", -134.11000000, 130.48500000, 9.06214000, 5.36000000, 1.85000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14051( ref l_U886, "TETH_UFE_RAID_BALCONY2", -125.61000000, 127.20000000, 10.00000000, 3.75000000, 1.85000000, 2.00000000, 0.00000000, 0.00000000, 90.30200000, 1 );
    sub_14051( ref l_U888, "TETH_UFE_RAID_BALCONY3", -125.61000000, 123.32000000, 10.00000000, 3.25000000, 1.85000000, 2.00000000, 0.00000000, 0.00000000, 90.30200000, 1 );
    sub_14051( ref l_U887, "TETH_DEAD_END", -137.95000000, 154.99000000, 4.58000000, 15.00000000, 38.00000000, 6.00000000, 0.00000000, 0.00000000, 42.60000000, 1 );
    sub_14051( ref l_U889, "teBalcRunAway", -134.33000000, 136.73000000, 5.59000000, 4.80000000, 5.30000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11591( ref l_U1460, 1391469520, -140.91490000, 126.16770000, 9.00027000, 0.00000000, 0.00000000, 0.00000000 );
    sub_11639( ref l_U1460, 1 );
    sub_11591( ref l_U1467, 1391469520, -138.13030000, 130.96800000, 8.09148000, 0.00000000, 0.00000000, 0.00000000 );
    sub_11639( ref l_U1467, 1 );
    sub_11591( ref l_U1474, 1391469520, -130.36040000, 118.84960000, 8.68843000, 0.00000000, 0.00000000, 0.00000000 );
    sub_11639( ref l_U1474, 1 );
    sub_11591( ref l_U1481, 1391469520, -133.22310000, 118.37270000, 8.68843000, 0.00000000, 0.00000000, 0.00000000 );
    sub_11639( ref l_U1481, 1 );
    sub_11591( ref l_U1488, 1391469520, -128.43090000, 137.91630000, 8.83489000, 0.00000000, 0.00000000, 0.00000000 );
    sub_11639( ref l_U1488, 1 );
    sub_11591( ref l_U1495, 1391469520, -126.04280000, 144.46790000, 8.63438000, 0.00000000, 0.00000000, 0.00000000 );
    sub_11639( ref l_U1495, 1 );
    sub_11591( ref l_U1502, 1391469520, -125.82380000, 151.09690000, 8.92318000, 0.00000000, 0.00000000, 0.00000000 );
    sub_11639( ref l_U1502, 1 );
    sub_11591( ref l_U1509, 1391469520, -128.50920000, 159.46190000, 8.77774000, 0.00000000, 0.00000000, 0.00000000 );
    sub_11639( ref l_U1509, 1 );
    sub_11591( ref l_U1516, 1391469520, -136.01190000, 159.03680000, 8.01974000, 0.00000000, 0.00000000, 0.00000000 );
    sub_11639( ref l_U1516, 1 );
    sub_11591( ref l_U1523, -1239208525, -141.04120000, 161.79130000, 7.43807000, 0.00000000, 0.00000000, 0.00000000 );
    sub_11639( ref l_U1523, 1 );
    sub_11591( ref l_U1537, 1391469520, -126.42070000, 153.14280000, 8.90000000, 0.00000000, 0.00000000, 0.00000000 );
    sub_11639( ref l_U1537, 1 );
    sub_11958( ref l_U734, "tbpoiDeadUFE", -141.25000000, 160.70000000, 5.91000000, 4.00000000, 4.00000000, 4.00000000, 0.00000000, 0.00000000, -17.76000000, 1 );
    sub_15387( ref l_U755, 2, 0.00000000, 0.00000000, 0.00000000, -140.53280000, 159.57360000, 5.90931800, -140.53280000, 159.57360000, 5.90931800, 1.50000000, 3.00000000, 1, 0 );
    sub_16234( ref l_U755, 30, "POI_DEADUFE" );
    sub_16395( ref l_U755, 0 );
    sub_16427( ref l_U755, 0 );
    sub_16806( ref l_U755, 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "C37344FE_1F5660D4_Corner2", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "fav2_02", "Corner_Position52", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "C37344FE_CC4AAE4_Corner1", 1 );
    return;
}

void sub_10481(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_11591(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_11639(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_11651( iParam0 )) == 0)
    {
        sub_11717( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_11651(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_11717(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_11958(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_14051(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_15387(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_15402( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_15770( iParam0 );
    return;
}

void sub_15402(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_15770(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_15849( iParam0 );
    return;
}

void sub_15849(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_15908( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_15908( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_15908( iParam0, 1 );
            }
            else
            {
                sub_15908( iParam0, 0 );
            };;;
        }
        else
        {
            sub_15908( iParam0, 0 );
        }
    }
    else
    {
        sub_15908( iParam0, 0 );
    }
    return;
}

void sub_15908(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_16234(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_16265( iParam0 );
    return;
}

void sub_16265(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_16395(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_16427(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_16469( iParam0 );
    return;
}

void sub_16469(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_16530( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_16530( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_16530(int iParam0)
{
    if (((IS_PED_DEAD( sub_1349() )) == 0) AND ((IS_PLAYER_DEAD( sub_1371() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_1349() )) == 1) || (((IS_PED_GETTING_UP( sub_1349() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_1349() )) == 1) || (((IS_PED_IN_COVER( sub_1349() )) == 1) || (((IS_PED_DUCKING( sub_1349() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_1349() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_16806(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_16972()
{
    sub_1198( "SP", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U936 = 0;
    l_U1090 = 0;
    l_U1547 = 0;
    l_U1209 = 0;
    l_U1559 = 0;
    l_U1561 = 0;
    l_U1560 = 0;
    l_U1562 = 0;
    l_U1558 = 0;
    l_U1709 = 0;
    l_U1710 = 0;
    l_U1711 = 0;
    l_U1712 = 0;
    l_U1713 = 0;
    l_U1714 = 0;
    l_U1572 = 0;
    l_U1571 = 0;
    l_U881 = 0;
    l_U1563 = 0;
    l_U1564 = 0;
    l_U1565 = 0;
    l_U1566 = 0;
    l_U1567 = 0;
    l_U1568 = 0;
    l_U1569 = 1;
    l_U1570 = 0;
    l_U1573 = 0;
    l_U1575 = 0;
    l_U1576 = 1;
    l_U1577 = 1;
    l_U1578 = 0;
    l_U1579 = 0;
    l_U1580 = 1;
    l_U1581 = 0;
    l_U1582 = 0;
    l_U1734 = 0;
    sub_2923( ref l_U1628 );
    sub_2923( ref l_U1619 );
    sub_2923( ref l_U1637 );
    sub_2923( ref l_U1646 );
    sub_2923( ref l_U1655 );
    sub_2923( ref l_U899 );
    sub_2923( ref l_U890 );
    sub_2923( ref l_U1794 );
    sub_2923( ref l_U1785 );
    l_U109 = 0;
    l_U110 = 0;
    sub_11639( ref l_U1446, 1 );
    return;
}

void sub_17346()
{
    sub_1198( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1803 = 0;
    l_U1804 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 196995894 )))
    {
        sub_1198( "CCB", "Creating the PropaneDestroyed script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 196995894 );
        if (SCRIPT_VAR_HASH_EXISTS( 196995894 ))
        {
            sub_1198( "CCB", "The PropaneDestroyed script variable was successfully created...", 0 );
        }
        else
        {
            sub_1198( "CCB", "The PropaneDestroyed script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_1198( "CCB", "The PropaneDestroyed script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 196995894, 0 );
    }
    return;
}

void sub_17780(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_17800();
    return;
}

void sub_17800()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_17892()
{
    sub_1198( "ka", "P_CREATE_CAMERA()", 0 );
    SET_CAM_VIEW_MODE( 0 );
    return;
}

void sub_18323()
{
    sub_1198( "SP", "P_REQUEST_ASSETS", 0 );
    sub_18369( 2072171637, 0 );
    sub_18369( 1678648716, 0 );
    sub_18369( -194111775, 0 );
    sub_18369( -1006708222, 0 );
    sub_18369( 1232833631, 0 );
    sub_18369( g_U779, 0 );
    sub_18369( 1686109657, 0 );
    sub_18606( -1378176668, 0 );
    sub_18606( -1986694060, 0 );
    return;
}

void sub_18369(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_4371( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_18606(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_18688()
{
    sub_18704( 748104715, 0 );
    sub_18704( -1766338147, 0 );
    sub_18704( 290867718, 0 );
    sub_18704( 231092439, 0 );
    sub_18704( -390570017, 0 );
    sub_18704( -1486121519, 0 );
    sub_18704( 706754384, 0 );
    sub_18704( -1725804306, 0 );
    sub_18995( "veh@helicopter", 0, 0 );
    sub_19090( "VEHICLE/vehicle_heli", 0 );
    sub_18995( "LEVEL_S_FAV2_CP_03", 0, 0 );
    sub_19090( "LEVEL/S_FAV2/S_FAV2_HELI_DRIVER_CP03", 0 );
    sub_18995( "EXPL_CAM", 0, 0 );
    return;
}

void sub_18704(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_18995(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_19090(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_19255()
{
    sub_1198( "NS", "P_REQUEST_GAMEPLAY_ASSETS()", 0 );
    sub_18369( 1953994288, 0 );
    return;
}

void sub_19326(unknown uParam0)
{
    sub_18995( "npc_pstl_cover_grenade", 0, uParam0 );
    sub_18995( "npc_rifle_cover_grenade", 0, uParam0 );
    sub_18995( "mped_grenade_core", 0, uParam0 );
    return;
}

int sub_19570()
{
    if (((HAS_WEAPON_LOADED( -1986694060 )) == 1) AND (((HAS_WEAPON_LOADED( -1378176668 )) == 1) AND (((HAS_MODEL_LOADED( 1232833631 )) == 1) AND (((HAS_MODEL_LOADED( g_U779 )) == 1) AND (((HAS_MODEL_LOADED( -1006708222 )) == 1) AND (((HAS_MODEL_LOADED( 1678648716 )) == 1) AND (((HAS_MODEL_LOADED( 2072171637 )) == 1) AND ((HAS_MODEL_LOADED( -194111775 )) == 1))))))))
    {
        return 1;
    }
    return 0;
}

int sub_19719()
{
    if ((HAS_ANIM_DICT_LOADED( "EXPL_CAM", 0 )) AND (((HAS_ANIM_DICT_LOADED( "LEVEL_S_FAV2_CP_03", 0 )) == 1) AND (((HAS_ANIM_DICT_LOADED( "veh@helicopter", 0 )) == 1) AND (((ISEQ_IS_LOADED( -1725804306 )) == 1) AND (((ISEQ_IS_LOADED( 706754384 )) == 1) AND (((ISEQ_IS_LOADED( -1486121519 )) == 1) AND (((ISEQ_IS_LOADED( -390570017 )) == 1) AND (((ISEQ_IS_LOADED( 231092439 )) == 1) AND (((ISEQ_IS_LOADED( 290867718 )) == 1) AND (((ISEQ_IS_LOADED( -1766338147 )) == 1) AND ((ISEQ_IS_LOADED( 748104715 )) == 1)))))))))))
    {
        return 1;
    }
    return 0;
}

int sub_19947()
{
    if ((HAS_MODEL_LOADED( 1953994288 )) == 1)
    {
        return 1;
    }
    return 0;
}

int sub_20015()
{
    if ((HAS_ANIM_DICT_LOADED( "mped_grenade_core", 0 )) AND ((HAS_ANIM_DICT_LOADED( "npc_rifle_cover_grenade", 0 )) AND (HAS_ANIM_DICT_LOADED( "npc_pstl_cover_grenade", 0 ))))
    {
        return 1;
    }
    return 0;
}

int sub_20155(unknown uParam0)
{
    sub_1198( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            g_U665 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, g_U666 );
            sub_5547( uParam0, sub_1349() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_20443(int iParam0, int iParam1)
{
    if ((sub_11651( iParam0 )) == 0)
    {
        sub_11717( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_20880()
{
    int I;
    unknown uVar3;
    unknown uVar4;
    int iVar5;
    string[1] sVar6;
    unknown uVar8;

    array(ref sVar6, 1);
    sVar6[0] = "MIDSCENE: MID_03_F2";
    switch (l_U109)
    {
        case 0: break;
        case 1:
        sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_REQUEST_ASSETS", 0 );
        sub_18323();
        PRE_STREAM_SEAMLESS_CUTSCENE( "mid_03_f2_concat" );
        l_U109 = 2;
        sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_LOAD_ASSETS", 0 );
        break;
        case 2:
        sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_LOAD_ASSETS", 0 );
        if ((HAS_CUTSCENE_LOADED() == 1) AND (sub_19570() == 1))
        {
            l_U109 = 3;
            sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_SETUP", 0 );
            break;
        }
        return 0;
        case 3:
        sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_REQUEST_ASSETS", 0 );
        sub_18688();
        l_U109 = 4;
        sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_LOAD_ASSETS", 0 );
        break;
        case 4:
        sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_LOAD_ASSETS", 0 );
        if (sub_19719() == 1)
        {
            l_U109 = 5;
            sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_SETUP", 0 );
            break;
        }
        return 0;
        case 5:
        sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_SETUP", 0 );
        for ( I = 0; I < l_U1190; I++ )
        {
            sub_3713( l_U1190[I] );
            if (I != 1)
            {
                l_U1190[I] = sub_21687( ref l_U1124[I] );
                if (((IS_PED_DEAD( l_U1190[I] )) == 0) AND ((DOES_PED_EXIST( l_U1190[I] )) == 1))
                {
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1190[I], 1 );
                    if (I == 0)
                    {
                        l_U1196[I] = sub_7734( l_U1190[I], g_U1308, 25000, 0, 0 );
                    }
                    else if (I == 1)
                    {
                        l_U1196[I] = sub_7734( l_U1190[I], g_U1310, 25000, 0, 0 );
                    }
                    else if (I == 2)
                    {
                        l_U1196[I] = sub_7734( l_U1190[I], g_U1310, 25000, 0, 0 );
                    }
                    else if (I == 3)
                    {
                        l_U1196[I] = sub_7734( l_U1190[I], g_U1308, 25000, 0, 0 );
                    }
                    else if (I == 4)
                    {
                        l_U1196[I] = sub_7734( l_U1190[I], g_U1308, 25000, 0, 0 );
                    };;;;;
                }
            }
        }
        sub_22665( ref l_U1190, "piMid03Ufe_" );
        l_U109 = 6;
        sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_WAITING_FOR_HANDOFF", 0 );
        case 6:
        if (g_U1040 == 1)
        {
            l_U109 = 7;
            if (NOT (IS_PED_DEAD( sub_1349() )))
            {
                SET_PLAYER_CONTROL( sub_1371(), 0, 0 );
                SIMULATE_PLAYER_INPUT_GAIT( sub_1371(), 2, 3000, 0 );
            }
            sub_2130( ref l_U1601, 1500, 1, 0 );
            sub_2266( ref l_U1601 );
            l_U1825 = sub_22921( 1, 1 );
            sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_START", 0 );
            break;
        }
        return 0;
        case 7:
        if (sub_2386( ref l_U1601 ))
        {
            l_U109 = 8;
        }
        break;
        case 8:
        sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_START", 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 0 );
        if (NOT (IS_PED_DEAD( sub_1349() )))
        {
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_1349(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
            CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "C37344FE_EFA68C98_Popover2", 1, 1 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U1825, "W_PI_PT92_Aa_H", 0 );
        }
        uVar8 = DOOR_FIND_CLOSEST( -1006708222, -130.79000000, 138.12000000, 7.06000000 );
        if ((DOES_OBJECT_EXIST( uVar8 )) == 1)
        {
            SET_OBJECT_VISIBLE( uVar8, 0 );
            SET_OBJECT_COLLISION( uVar8, 0 );
        }
        if (((IS_PED_DEAD( l_U1190[0] )) == 0) AND ((DOES_PED_EXIST( l_U1190[0] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1190[0], "M_F2_UFE_E", 1 );
            if ((GET_DOES_WEAPON_EXIST( l_U1196[0] )) == 1)
            {
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U1196[0], "W_AR_FAL_Aa_H^1", 1 );
            }
        }
        if (((IS_PED_DEAD( l_U1190[2] )) == 0) AND ((DOES_PED_EXIST( l_U1190[2] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1190[2], "M_F2_UFE_E^2", 1 );
            if ((GET_DOES_WEAPON_EXIST( l_U1196[2] )) == 1)
            {
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U1196[2], "W_PI_PT92_Aa_H^1", 1 );
            }
        }
        if (((IS_PED_DEAD( l_U1190[3] )) == 0) AND ((DOES_PED_EXIST( l_U1190[3] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1190[3], "M_F2_UFE_E^3", 1 );
            if ((GET_DOES_WEAPON_EXIST( l_U1196[3] )) == 1)
            {
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U1196[3], "W_SG_M590_Aa_H", 1 );
            }
        }
        if (((IS_PED_DEAD( l_U1190[4] )) == 0) AND ((DOES_PED_EXIST( l_U1190[4] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U1190[4], "M_F2_UFE_E^4", 1 );
            if ((GET_DOES_WEAPON_EXIST( l_U1196[4] )) == 1)
            {
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U1196[4], "W_AR_FAL_Aa_H", 1 );
            }
        }
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_F2_GCS_E", 1115622901 );
        REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_F2_GCS_E^1", -1907248745 );
        sub_20443( ref g_U1107, 1 );
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U1142._fU0, g_U1142._fU4 );
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U1114._fU0, g_U1114._fU4 );
        START_SEAMLESS_CUTSCENE();
        CUTSCENE_ENABLE_SKIP( 0 );
        l_U109 = 9;
        sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 9:
        sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_1_4_5", "", 0.00000000, 1000, 1000, -1082130432, 0 );
        DO_SCREEN_FADE_IN( 0 );
        l_U109 = 10;
        sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 10:
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            uVar3 = GET_CUTSCENE_SECTION_PLAYING();
            uVar4 = GET_CUTSCENE_TIME();
            iVar5 = GET_CUTSCENE_TIME_MS();
            if ((IS_SCREEN_FADING_OUT() == 1) || (IS_SCREEN_FADED_OUT() == 1))
            {
                CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
                l_U1547 = 1;
            }
            if (l_U1579 == 0)
            {
                if (iVar5 > 5000)
                {
                    sub_19255();
                    l_U1579 = 1;
                }
            }
            else if (l_U1578 == 0)
            {
                if (sub_19947())
                {
                    sub_25106();
                    CUTSCENE_ENABLE_SKIP( 1 );
                    l_U1578 = 1;
                }
            }
            if (l_U1582 == 0)
            {
                if (iVar5 >= 15409)
                {
                    AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_1_2_4_5", "", 0.00000000, 1000, 1000, -1082130432, 0 );
                    l_U1582 = 1;
                }
            }
            if (l_U1580 == 1)
            {
                sub_19326( 0 );
                l_U1580 = 0;
            }
        }
        else if (l_U1547 == 1)
        {
            sub_19326( 1 );
        }
        sub_3801( ref l_U1190 );
        sub_4248( 284807160 );
        sub_29555( -1013714740 );
        sub_29555( -862236369 );
        sub_29555( 406496141 );
        uVar8 = DOOR_FIND_CLOSEST( -1006708222, -130.79000000, 138.12000000, 7.06000000 );
        if ((DOES_OBJECT_EXIST( uVar8 )) == 1)
        {
            SET_OBJECT_VISIBLE( uVar8, 1 );
            SET_OBJECT_COLLISION( uVar8, 1 );
        }
        if (NOT (IS_PED_DEAD( sub_1349() )))
        {
            SET_PLAYER_CONTROL( sub_1371(), 1, 0 );
        }
        l_U109 = 0;
        sub_1198( "SP", "eMid03CutsceneState = CUTSCENE_IDLE", 0 );
        return 1;;
        break;
    }
    return 0;
}

void sub_21687(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_18369( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_22166( iParam0->_fU40 );
    sub_22246( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_22166(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_22246(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_22665(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_22921(unknown uParam0, unknown uParam1)
{
    int iVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown Result;
    int iVar9;
    int iVar10;
    boolean bVar11;

    sub_1198( "CO", "P_Update_player_Weapon", "************" );
    iVar9 = 1;
    iVar10 = 1;
    bVar11 = false;
    if (NOT (IS_PED_DEAD( sub_1349() )))
    {
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_1349(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar7 ))
        {
            sub_1198( "CO", "I HAVE A RIFLE IN MY LEFT HAND", "************" );
            bVar11 = true;
        }
        if (NOT bVar11)
        {
            l_U68 = GET_WEAPON_FROM_HAND( sub_1349(), 0, 0 );
            l_U69 = GET_WEAPON_FROM_HAND( sub_1349(), 1, 0 );
            if (GET_DOES_WEAPON_EXIST( l_U69 ))
            {
                sub_1198( "CO", "I HAVE A LEFT", "************" );
                SELECT_WEAPON_TO_HAND( sub_1349(), 0, 1, 1 );
                bVar11 = true;
            }
            if (GET_DOES_WEAPON_EXIST( l_U68 ))
            {
                sub_1198( "CO", "I HAVE A RIGHT", "************" );
                SELECT_WEAPON_TO_HAND( sub_1349(), 0, 0, 1 );
                bVar11 = true;
            }
            uVar5 = GET_WEAPON_FROM_HOLSTER( sub_1349(), 0 );
            uVar6 = GET_WEAPON_FROM_HOLSTER( sub_1349(), 1 );
            if (GET_DOES_WEAPON_EXIST( uVar5 ))
            {
                sub_1198( "CO", "I HAVE A RIGHT HOLSTERED WEAPON", "************" );
                SELECT_WEAPON_TO_HAND( sub_1349(), uVar5, 0, uParam1 );
            }
            else if (GET_DOES_WEAPON_EXIST( uVar6 ))
            {
                sub_1198( "CO", "I HAVE A LEFT HOLSTERED WEAPON", "************" );
                SELECT_WEAPON_TO_HAND( sub_1349(), uVar6, 0, uParam1 );
            }
        }
        WAIT( 0 );
        if (NOT (IS_PED_DEAD( sub_1349() )))
        {
            Result = GET_WEAPON_FROM_HAND( sub_1349(), 0, 0 );
            if (GET_DOES_WEAPON_EXIST( Result ))
            {
                iVar4 = GET_WEAPON_AMMO_IN_CLIP( Result );
                sub_1198( "CO", "P_Update_player_Weapon : Bullet Count", ":" );
                sub_23644( iVar4 );
                if (iVar4 < 1)
                {
                    SET_WEAPON_AMMO( Result, 1 );
                }
                return Result;
            }
        }
    }
    return Result;
}

void sub_23644(unknown uParam0)
{
    return;
}

void sub_25106()
{
    sub_1198( "NS", "P_CREATE_GAMEPLAY_ENEMIES()", 0 );
    sub_25157();
    sub_25409();
    sub_26976();
    sub_27315();
    sub_27962();
    sub_28566();
    sub_29019();
    return;
}

void sub_25157()
{
    sub_1198( "SP", "P_SETUP_RAID_DEAD_CS", 0 );
    sub_3713( l_U1298 );
    l_U1298 = sub_21687( ref l_U1285 );
    if (((IS_PED_DEAD( l_U1298 )) == 0) AND ((DOES_PED_EXIST( l_U1298 )) == 1))
    {
        SET_PED_NAME_DEBUG( l_U1298, "piRaidDeadCS2" );
        sub_25292( l_U1298 );
    }
    if ((IS_PED_DEAD( l_U1298 )) || (NOT (IS_PED_DEAD( l_U1298 ))))
    {
        SET_PED_VISIBLE( l_U1298, 0 );
    }
    return;
}

void sub_25292(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_25409()
{
    int I;

    sub_1198( "SP", "P_SETUP_BALCONY1_ENEMIES", 0 );
    for ( I = 0; I < l_U1237; I++ )
    {
        sub_3713( l_U1237[I] );
        if (I != 1)
        {
            l_U1237[I] = sub_25504( ref l_U1210[I] );
        }
        if (((IS_PED_DEAD( sub_1349() )) == 0) AND (((IS_PED_DEAD( l_U1237[I] )) == 0) AND ((DOES_PED_EXIST( l_U1237[I] )) == 1)))
        {
            SET_PED_COMBAT_MOVEMENT( l_U1237[I], 1 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1237[I], 1 );
            SET_PED_ALERTNESS( l_U1237[I], 3 );
            if (I == 0)
            {
                SET_PED_AI_TEMPLATE( l_U1237[I], "AIT_UFE_TOUGH" );
                sub_7734( l_U1237[I], g_U1310, 25000, 0, 0 );
                sub_26188( ref l_U885, l_U1237[I], 1 );
            }
            else if (I == 1)
            {
                SET_PED_AI_TEMPLATE( l_U1237[I], "AIT_UFE_AVERAGE" );
                sub_7734( l_U1237[I], g_U1310, 25000, 0, 0 );
            }
            sub_26345( l_U1237[I], ref l_U1202 );
        }
    }
    sub_26788( ref l_U1237 );
    sub_22665( ref l_U1237, "piUFEBalcony1Enemies1" );
    return;
}

void sub_25504(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_18369( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    return iParam0->_fU40;
}

void sub_26188(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_26345(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_4371( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_26488( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_26488( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_26488(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_26788(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_26819( (uParam0^)[I] );
    }
    return;
}

void sub_26819(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_26976()
{
    sub_1198( "SP", "P_SETUP_MID_03_BLEND", 0 );
    sub_3713( l_U922 );
    l_U922 = sub_21687( ref l_U923 );
    if (((IS_PED_DEAD( l_U922 )) == 0) AND ((DOES_PED_EXIST( l_U922 )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U922, 1 );
        sub_7734( l_U922, g_U1308, 25000, 0, 0 );
        SET_PED_VISIBLE( l_U922, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( l_U922, 0 );
        SET_PED_NAME_DEBUG( l_U922, "piMid03UFEEnemy" );
    }
    sub_3713( l_U908 );
    l_U908 = sub_21687( ref l_U909 );
    if (((IS_PED_DEAD( l_U908 )) == 0) AND ((DOES_PED_EXIST( l_U908 )) == 1))
    {
        SET_PED_AS_ONE_SHOT_KILL( l_U908, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U908, 1 );
        SET_PED_VISIBLE( l_U908, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( l_U908, 0 );
        SET_PED_NAME_DEBUG( l_U908, "piMid03CSEnemy" );
    }
    return;
}

void sub_27315()
{
    int I;

    sub_1198( "SP", "P_SETUP_STAIRS_ENEMIES", 0 );
    for ( I = 0; I < l_U1352; I++ )
    {
        sub_3713( l_U1352[I] );
        if (I != 1)
        {
            l_U1352[I] = sub_25504( ref l_U1299[I] );
            if (((IS_PED_DEAD( l_U1352[I] )) == 0) AND ((DOES_PED_EXIST( l_U1352[I] )) == 1))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1352[I], 1 );
                SET_PED_COMBAT_ABILITY( l_U1352[I], 2 );
                SET_PED_COMBAT_ATTRIBUTES( l_U1352[I], 1, 1 );
                sub_26345( l_U1352[I], ref l_U1202 );
                if (I == 0)
                {
                    SET_PED_AI_TEMPLATE( l_U1352[I], "AIT_UFE_AVERAGE" );
                }
                else
                {
                    SET_PED_AI_TEMPLATE( l_U1352[I], "AIT_UFE_AVERAGE" );
                }
            }
        }
    }
    if (NOT (IS_PED_DEAD( sub_1349() )))
    {
        if (NOT (IS_PED_DEAD( l_U1352[2] )))
        {
            SET_PED_ALERTNESS( l_U1352[2], 3 );
            REGISTER_TARGET( l_U1352[2], sub_1349() );
        }
        if (NOT (IS_PED_DEAD( l_U1352[3] )))
        {
            SET_PED_ALERTNESS( l_U1352[3], 3 );
            REGISTER_TARGET( l_U1352[3], sub_1349() );
        }
    }
    sub_7734( l_U1352[0], g_U1311, 25000, 0, 0 );
    sub_7102( l_U1352[0], -1378176668, 5, 3, 0 );
    sub_7734( l_U1352[2], g_U1309, 25000, 0, 0 );
    sub_7102( l_U1352[2], -1378176668, 5, 3, 0 );
    sub_7734( l_U1352[3], g_U1309, 25000, 0, 0 );
    sub_7102( l_U1352[3], -1378176668, 5, 3, 0 );
    sub_26819( l_U1352[2] );
    sub_26819( l_U1352[3] );
    sub_22665( ref l_U1352, "piUFEStairsEnemies_" );
    return;
}

void sub_27962()
{
    sub_1198( "SA", "P_CREATE_00A_FirstWindow", 0 );
    sub_3713( l_U1058 );
    l_U1058 = sub_21687( ref l_U1059 );
    sub_4457( l_U1076 );
    l_U1076 = sub_28064( 2072171637, l_U1077, l_U1080, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1076 ))
    {
        FREEZE_OBJECT_POSITION( l_U1076, 1 );
    }
    sub_4457( l_U1083 );
    l_U1083 = sub_28064( 1678648716, l_U1084, l_U1087, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1083 ))
    {
        FREEZE_OBJECT_POSITION( l_U1083, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U1058 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1058, 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U1058, 1 );
        ISEQ_REGISTER_ENTITY( 290867718, "CIV", l_U1058, 0 );
        ISEQ_REGISTER_ENTITY( 290867718, "SHUTTERA", l_U1076, 1 );
        ISEQ_REGISTER_ENTITY( 290867718, "SHUTTERB", l_U1083, 1 );
        ISEQ_START( 290867718 );
        SET_PED_NAME_DEBUG( l_U1058, "pi00AFirstWindow" );
    }
    return;
}

void sub_28064(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_18369( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_28566()
{
    sub_1198( "SA", "P_CREATE_S_FAV2_VIG_00A_RAID_WINDOW", 0 );
    sub_3713( l_U962 );
    l_U962 = sub_21687( ref l_U963 );
    sub_4457( l_U980 );
    l_U980 = sub_28064( 2072171637, l_U981, l_U984, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U980 ))
    {
        FREEZE_OBJECT_POSITION( l_U980, 1 );
    }
    sub_4457( l_U987 );
    l_U987 = sub_28064( 1678648716, l_U988, l_U991, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U987 ))
    {
        FREEZE_OBJECT_POSITION( l_U987, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U962 )))
    {
        if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
        {
            SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U962, 0, 0 );
            SET_PED_GORE_FROM_PLAYER( l_U962, 0 );
        }
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U962, 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U962, 1 );
        ISEQ_REGISTER_ENTITY( -1486121519, "CIV", l_U962, 0 );
        ISEQ_REGISTER_ENTITY( -1486121519, "SHUTTERA", l_U980, 1 );
        ISEQ_REGISTER_ENTITY( -1486121519, "SHUTTERB", l_U987, 1 );
        ISEQ_START( -1486121519 );
        SET_PED_NAME_DEBUG( l_U962, "pi00ARaidWindow" );
    }
    return;
}

void sub_29019()
{
    sub_1198( "SP", "P_CREATE_PROPANE_TANKS", 0 );
    sub_4457( l_U1544 );
    l_U1544 = sub_29114( -346844275, -132.13000000, 131.07000000, 9.08000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U1544 )) == 1)
    {
        CAMERA_CAN_TARGET_OBJECT( 1, l_U1544 );
    }
    return;
}

void sub_29114(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_18369( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_29555(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}

int sub_29890()
{
    switch (l_U111)
    {
        case 0:
        sub_1198( "SP", "eMid03BlendState = BLEND_IDLE", 0 );
        break;
        case 1:
        sub_1198( "SP", "eMid03BlendState = BLEND_SETUP", 0 );
        sub_30040( 1, 0, 0, 1 );
        if (g_U782 == 3)
        {
            if ((IS_PED_DEAD( sub_1349() )) == 0)
            {
                if (NOT (IS_PED_IN_COVER( sub_1349() )))
                {
                    sub_1198( "NS", "Snapping player to cover", 0 );
                    SNAP_PLAYER_TO_COVERPOINT( sub_1371(), "GenCover", "C37344FE_EFA68C98_Popover2", 1 );
                }
            }
        }
        if (NOT (IS_PLAYER_DEAD( sub_1371() )))
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1371(), 1 );
        }
        sub_30387( sub_1349(), l_U1548, l_U1551 );
        if (l_U1578 == 0)
        {
            sub_25106();
            l_U1578 = 1;
        }
        if ((IS_PED_DEAD( l_U1298 )) || (NOT (IS_PED_DEAD( l_U1298 ))))
        {
            SET_PED_VISIBLE( l_U1298, 1 );
        }
        sub_30511();
        sub_31085();
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U953[3], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U996[3], 1065353216, 0 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV2_CP_03", "B_OUT_MID_03_F2_B_FWD_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        l_U111 = 2;
        sub_1198( "SP", "eMid03BlendState = BLEND_FIRST_FRAME", 0 );
        break;
        case 2:
        sub_1198( "SP", "eMid03BlendState = BLEND_FIRST_FRAME", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_1_2_4_5", "", 0.00000000, 15000, 1000, -1082130432, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U953[3], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U996[3], 1065353216, 0 );
        sub_26488( ref l_U1202, 1056964608, 0 );
        if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || (IS_SCREEN_FADED_OUT()))
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        l_U1556 = 0;
        l_U111 = 3;
        sub_1198( "SP", "eMid03BlendState = BLEND_PLAYING", 0 );
        break;
        case 3:
        if (NOT l_U1556)
        {
            if (IS_ANIMATED_CAMERA_PLAYING())
            {
                if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FAV2_CP_03", "B_OUT_MID_03_F2_B_FWD_CAM" )) - l_U1557))
                {
                    sub_32008();
                    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U953[3], 1065353216, 0 );
                    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U996[3], 1065353216, 0 );
                    sub_32152( ref l_U1446, 0 );
                    sub_32152( ref l_U1453, 0 );
                    sub_2130( ref l_U1646, l_U1557, 1, 0 );
                    sub_2266( ref l_U1646 );
                    l_U1556 = 1;
                }
            }
        }
        if ((sub_2386( ref l_U1646 )) == 1)
        {
            sub_32277( 1, 1 );
            return 1;
        }
        break;
    }
    return 0;
}

void sub_30040(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1349() )))
        {
            SET_PLAYER_CONTROL( sub_1371(), 0, uParam2 );
            SET_PED_DUCKING( sub_1349(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1349() );
            }
            SET_PED_INVINCIBLE( sub_1349(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_30387(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_30511()
{
    sub_1198( "NS", "P_BALCONY1_ACTION()", 0 );
    sub_30558( ref l_U1237 );
    if (((IS_PED_DEAD( sub_1349() )) == 0) AND (((IS_PED_DEAD( l_U1237[1] )) == 0) AND ((DOES_PED_EXIST( l_U1237[1] )) == 1)))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1237[1], 1 );
        SET_PED_ALERTNESS( l_U1237[1], 3 );
        OPEN_SEQUENCE_TASK( ref l_U722 );
        TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD( 0, -133.50000000, 133.46000000, 9.00000000, -133.50000000, 133.46000000, 9.00000000, 3, 0, 1056964608, 0, 1, 0 );
        TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD( 0, -135.69000000, 132.54000000, 10.00000000, -135.69000000, 132.54000000, 10.00000000, 3, 0, 1056964608, 0, 1, 0 );
        CLOSE_SEQUENCE_TASK( l_U722 );
        TASK_PERFORM_SEQUENCE( l_U1237[1], l_U722 );
        CLEAR_SEQUENCE_TASK( l_U722 );
    }
    if (((IS_PED_DEAD( sub_1349() )) == 0) AND (((IS_PED_DEAD( l_U1237[0] )) == 0) AND ((DOES_PED_EXIST( l_U1237[0] )) == 1)))
    {
        OVERRIDE_PED_FIRING_PATTERN( l_U1237[0], 1929989524 );
        TASK_COMBAT_MOVE_TO_COVER( l_U1237[0], "GenCover", "C37344FE_5116CF77_Corner2", 0 );
    }
    return;
}

void sub_30558(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_30589( (uParam0^)[I] );
    }
    return;
}

void sub_30589(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_31085()
{
    sub_1198( "SP", "P_TRIGGER_MID_03_BLEND", 0 );
    CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED( sub_1371() );
    if (((IS_PED_DEAD( l_U908 )) == 0) AND ((DOES_PED_EXIST( l_U908 )) == 1))
    {
        sub_30387( l_U908, l_U909._fU0, l_U909._fU12 );
        ISEQ_REGISTER_ENTITY( -1725804306, "cs_1", l_U908, 0 );
    }
    if (((IS_PED_DEAD( l_U922 )) == 0) AND ((DOES_PED_EXIST( l_U922 )) == 1))
    {
        sub_30387( l_U922, l_U923._fU0, l_U923._fU12 );
        ISEQ_REGISTER_ENTITY( -1725804306, "ufe_1", l_U922, 0 );
    }
    ISEQ_START( -1725804306 );
    if (((IS_PED_DEAD( l_U922 )) == 0) AND ((DOES_PED_EXIST( l_U922 )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U922, 0 );
        SET_PED_VISIBLE( l_U922, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( l_U922, 1 );
    }
    if (((IS_PED_DEAD( l_U908 )) == 0) AND ((DOES_PED_EXIST( l_U908 )) == 1))
    {
        SET_PED_VISIBLE( l_U908, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( l_U908, 1 );
    }
    l_U936 = 1;
    return;
}

void sub_32008()
{
    sub_1198( "SP", "P_ACTIVATE_STAIRS_ENEMIES", 0 );
    if (((IS_PED_DEAD( l_U1352[0] )) == 0) AND ((DOES_PED_EXIST( l_U1352[0] )) == 1))
    {
        ;
    }
    return;
}

void sub_32152(int iParam0, unknown uParam1)
{
    if ((sub_11651( iParam0 )) == 0)
    {
        sub_11717( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

void sub_32277(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1349() )))
    {
        SET_PLAYER_CONTROL( sub_1371(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1349(), 0 );
        if (bParam0)
        {
            sub_32358();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_32358()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1349() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1349(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1349(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1349(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1349(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_32714()
{
    sub_1198( "CO", "P_CREATE_S_FV2_GG_D5_02", 0 );
    sub_32814( ref g_U739, g_U779, 935442343, -1813075680, -134.73000000, 130.28000000, 6.53000000, 1.50000000, 0.00000000, 10.00000000, "" );
    sub_32943( ref g_U739 );
    return;
}

void sub_32814(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_1198( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_32943(int iParam0)
{
    sub_1198( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_33004( iParam0->_fU12 )) == 1)
        {
            sub_1198( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_1198( "CO", "has never been collected.", 0 );
        }
        if ((sub_33004( iParam0->_fU12 )) == 0)
        {
            sub_5140( iParam0->_fU0 );
            iParam0->_fU0 = sub_33239( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_1198( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_1198( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_33004(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_33239(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_33512(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_11651( iParam0 )) == 0)
    {
        sub_11717( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_33783(int iParam0, int iParam1, unknown uParam2)
{
    sub_1198( "CO", "CO_HANDLE_SAVEDATA : Saving Data", 0 );
    if ((g_U782 < iParam1) || (NOT iParam0->_fU0))
    {
        sub_1198( "CO", "CO_HANDLE_SAVEDATA : Saved Data", 0 );
        sub_33952( iParam0, iParam1, sub_1349(), g_U783[iParam1], g_U910[iParam1], g_U953[iParam1], g_U996[iParam1], uParam2 );
    }
    g_U782 = iParam1;
    sub_37569( g_U782 );
    return;
}

void sub_33952(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1198( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1198( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_8390( iParam1 );
        sub_34211( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_34662( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_34662( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34894( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_34662( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34894( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_34894( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_34662( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34894( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_34894( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_34894( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_34662( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34894( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_34894( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_34894( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_34894( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_36452( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, g_U666, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1198( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_34211(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_5765( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1198( "TEH", "Ending context", 0 );
        sub_1198( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_34662(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_34894(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_36452(int iParam0)
{
    sub_4371( "CHECKPOINT DATA" );
    sub_36491( iParam0->_fU4 );
    sub_36514( iParam0->_fU16 );
    sub_36514( iParam0->_fU20 );
    sub_36514( iParam0->_fU24 );
    sub_23644( iParam0->_fU28 );
    sub_23644( iParam0->_fU56 );
    sub_23644( iParam0->_fU60 );
    sub_23644( iParam0->_fU64 );
    sub_23644( iParam0->_fU68 );
    sub_23644( iParam0->_fU72 );
    sub_23644( iParam0->_fU76 );
    sub_23644( iParam0->_fU80 );
    sub_23644( iParam0->_fU84 );
    sub_23644( iParam0->_fU88 );
    sub_23644( iParam0->_fU92 );
    sub_36514( iParam0->_fU32 );
    sub_23644( iParam0->_fU36 );
    sub_23644( iParam0->_fU40 );
    sub_23644( iParam0->_fU44 );
    sub_36514( iParam0->_fU136 );
    sub_36749( iParam0->_fU140 );
    sub_23644( iParam0->_fU52 );
    sub_4371( "---nRightHolsterAttachmentEnabled: " );
    sub_23644( iParam0->_fU96 );
    sub_4371( "---nRightHolsterAttachmentToggled: " );
    sub_23644( iParam0->_fU100 );
    sub_4371( "---nLeftHolsterAttachmentEnabled: " );
    sub_23644( iParam0->_fU104 );
    sub_4371( "---nLeftHolsterAttachmentToggled: " );
    sub_23644( iParam0->_fU108 );
    sub_4371( "---nRifleHolsterAttachmentEnabled: " );
    sub_23644( iParam0->_fU112 );
    sub_4371( "---nRifleHolsterAttachmentToggled: " );
    sub_23644( iParam0->_fU116 );
    sub_4371( "---nRightHandAttachmentEnabled: " );
    sub_23644( iParam0->_fU120 );
    sub_4371( "---nRightHandAttachmentToggled: " );
    sub_23644( iParam0->_fU124 );
    sub_4371( "---nLeftHandAttachmentEnabled: " );
    sub_23644( iParam0->_fU128 );
    sub_4371( "---nLeftHandAttachmentToggled: " );
    sub_23644( iParam0->_fU132 );
    sub_23644( g_U666 );
    sub_23644( 144 );
    return;
}

void sub_36491(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_36514(unknown uParam0)
{
    return;
}

void sub_36749(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_37569(unknown uParam0)
{
    sub_1198( "CO", "P_SETUP_INITIAL_TIMECYCLE", 0 );
    switch (uParam0)
    {
        case 0:
        case 1:
        case 2:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
        case 3:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 0 );
        break;
        case 4:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 10 );
        break;
        case 5:
        if (g_U1046 == 1)
        {
            sub_1198( "kja", "MCE_UFE_RUN bTimeofDayReleased = TRUE", 0 );
            FREEZE_TIME_OF_DAY( 20, 10 );
            break;
        }
        sub_1198( "kja", "MCE_UFE_RUN bTimeofDayReleased = FALSE: SO WE're SETTING WEATHER AND TOD TO 20:20", 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 20, 10 );
        case 6:
        case 7:
        case 8:
        if (g_U1046 == 1)
        {
            ;
        }
        else
        {
            SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
            SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
            FREEZE_TIME_OF_DAY( 21, 0 );
        }
        break;
        case 9:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 21, 0 );
        break;
        case 10:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 22, 0 );
        break;
        default:
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
    }
    return;
}

void sub_38273()
{
    sub_1198( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_1198( "CCB", "Starting the Favela2_Raid context...", 0 );
    START_CONTEXT( "Favela2_Raid" );
    return;
}

void sub_38479()
{
    if (l_U936)
    {
        if (HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED( sub_1371() ))
        {
            sub_1198( "SA", "Interupting S_FAV2_B_OUT_MID_03_F2_B", 0 );
            if (NOT (IS_PED_DEAD( l_U922 )))
            {
                PED_SET_ACTION_INTENTION( l_U922, 47, 1000, 0, 0, 0 );
            }
            CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED( sub_1371() );
            l_U936 = 0;
        }
        if ((NOT (IS_PED_DEAD( l_U922 ))) AND (NOT (IS_PED_DEAD( l_U908 ))))
        {
            if (HAS_PED_BEEN_DAMAGED_BY_PED( l_U908, l_U922, 0 ))
            {
                SET_PED_HEALTH( l_U908, 0, 0 );
            }
        }
    }
    return;
}

void sub_38703()
{
    if (sub_38718( ref l_U533, 0 ))
    {
        if (NOT (IS_PED_DEAD( l_U937 )))
        {
            sub_1198( "SA", "pi00AFIRST_DOOR - ACT INT 01", 0 );
            sub_30387( l_U937, l_U938._fU0, l_U938._fU12 );
            PED_SET_ACTION_INTENTION( l_U937, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
    return;
}

void sub_38718(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_38760( sub_1349(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_38760(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

int sub_39000()
{
    if (NOT (IS_PED_DEAD( l_U962 )))
    {
        if (IS_SPHERE_VISIBLE( -141.31000000, 116.30000000, 12.56000000, 1.00000000, 1 ))
        {
            sub_1198( "NS", "pi00ARaidWindow - ACT INT 01", 0 );
            sub_30387( l_U962, l_U963._fU0, l_U963._fU12 );
            PED_SET_ACTION_INTENTION( l_U962, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            return 1;
        }
    }
    return 0;
}

int sub_39198()
{
    if (NOT (IS_PED_DEAD( l_U994 )))
    {
        if (IS_SPHERE_VISIBLE( -154.95000000, 173.84000000, 9.83000000, 1.00000000, 1 ))
        {
            sub_1198( "NS", "pi00BWindow02 - ACT INT 01", 0 );
            PED_SET_ACTION_INTENTION( l_U994, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            return 1;
        }
    }
    return 0;
}

void sub_39357()
{
    if (l_U1090)
    {
        if (NOT (IS_PED_DEAD( l_U1058 )))
        {
            sub_1198( "SA", "pi00AFirstWindow - ACT INT 01", 0 );
            sub_30387( l_U1058, l_U1059._fU0, l_U1059._fU12 );
            PED_SET_ACTION_INTENTION( l_U1058, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            l_U1090 = 0;
        }
    }
    return;
}

void sub_39510()
{
    if (sub_38718( ref l_U512, 0 ))
    {
        if (NOT (IS_PED_DEAD( l_U1026 )))
        {
            sub_1198( "SA", "pi00AWindowReact - ACT INT 01", 0 );
            PED_SET_ACTION_INTENTION( l_U1026, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
    return;
}

void sub_39637()
{
    if (l_U1570 == 1)
    {
        sub_30589( l_U1352[2] );
        sub_30589( l_U1352[3] );
        if (NOT (IS_PED_DEAD( sub_1349() )))
        {
            if (((IS_PED_DEAD( sub_1349() )) == 0) AND (((IS_PED_DEAD( l_U1352[2] )) == 0) AND ((DOES_PED_EXIST( l_U1352[2] )) == 1)))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1352[2], 0 );
                TASK_ATTACK_MOVE( l_U1352[2], -132.59000000, 122.47000000, 7.09000000, 1092616192, 1101004800, -1082130432, 3 );
            }
            if (((IS_PED_DEAD( sub_1349() )) == 0) AND (((IS_PED_DEAD( l_U1352[3] )) == 0) AND ((DOES_PED_EXIST( l_U1352[3] )) == 1)))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1352[3], 0 );
                TASK_ATTACK_MOVE( l_U1352[3], -129.40000000, 122.16000000, 7.09000000, 1092616192, 1101004800, -1082130432, 3 );
            }
            l_U1570 = 0;
        }
    }
    return;
}

void sub_39953()
{
    if (l_U1569 == 1)
    {
        l_U1569 = 0;
    }
    if (((IS_PED_DEAD( sub_1349() )) == 0) AND ((DOES_PED_EXIST( sub_1349() )) == 1))
    {
        CLEAR_PED_PRIMARY_LOOKAT( sub_1349() );
    }
    if (l_U1565 == 0)
    {
        if (((IS_PED_DEAD( sub_1349() )) == 0) AND (((IS_PED_DEAD( l_U1237[0] )) == 0) AND ((DOES_PED_EXIST( l_U1237[0] )) == 1)))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1237[0], 0 );
            OVERRIDE_PED_FIRING_PATTERN( l_U1237[0], 0 );
            REGISTER_TARGET( l_U1237[0], sub_1349() );
        }
        l_U1568 = 1;
        l_U1565 = 1;
    }
    if ((sub_40171( ref l_U344, l_U1237[1], 0 )) == 1)
    {
        if (((IS_PED_DEAD( sub_1349() )) == 0) AND (((IS_PED_DEAD( l_U1237[1] )) == 0) AND ((DOES_PED_EXIST( l_U1237[1] )) == 1)))
        {
            sub_30387( l_U1237[1], -134.36000000, 138.69000000, 8.07000000, 90.00000000 );
            SET_PED_ALERTNESS( l_U1237[1], 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1237[1], 0 );
            TASK_ATTACK_MOVE( l_U1237[1], -129.83000000, 131.59000000, 8.14000000, 1.00000000, 1.00000000, -1.00000000, 3 );
        }
    }
    if (((sub_40446( l_U218 )) == 1) || ((sub_40446( l_U197 )) == 1))
    {
        ;
    }
    if ((IS_PED_DEAD( l_U1352[0] )) == 0)
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1352[0], 0 );
    }
    return;
}

void sub_40171(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_38760( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_40446(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_38760( sub_1349(), uParam0 );
}

void sub_40544()
{
    unknown uVar2;
    unknown uVar3;

    switch (l_U110)
    {
        case 0: break;
        case 1:
        sub_1198( "SP", "issDeadEndState = ISS_LOADING", 0 );
        if (((IS_PED_DEAD( l_U1384 )) == 0) AND ((DOES_PED_EXIST( l_U1384 )) == 1))
        {
            FREEZE_PED_POSITION( l_U1384, 0 );
            SET_PED_CAN_BE_TARGETTED( l_U1384, 1 );
        }
        sub_30387( l_U1384, l_U1715, l_U1718 );
        sub_30387( l_U1399[0], l_U1719, l_U1722 );
        sub_30387( l_U1415[0], l_U1726, l_U1729 );
        ISEQ_REGISTER_ENTITY( 748104715, "deadend1_male1", l_U1384, 0 );
        ISEQ_START( 748104715 );
        sub_2130( ref l_U1592, 3000, 1, 0 );
        sub_2266( ref l_U1592 );
        sub_2130( ref l_U1583, 5500, 1, 0 );
        sub_2266( ref l_U1583 );
        sub_2130( ref l_U1619, 500, 1, 0 );
        sub_2266( ref l_U1619 );
        sub_2130( ref l_U1664, 1750, 1, 0 );
        sub_2266( ref l_U1664 );
        sub_2130( ref l_U1673, 2000, 1, 0 );
        sub_2266( ref l_U1673 );
        sub_2130( ref l_U1682, 2350, 1, 0 );
        sub_2266( ref l_U1682 );
        sub_2130( ref l_U1691, 2650, 1, 0 );
        sub_2266( ref l_U1691 );
        AUDIO_MUSIC_REQUEST_ONESHOT( "FAV2_ONESHOT_F", 0 );
        sub_41010();
        l_U110 = 2;
        sub_1198( "KA", "issDeadEndState = ISS_PLAYING", 0 );
        break;
        case 2:
        if ((sub_2386( ref l_U1619 )) == 1)
        {
            sub_41269( ref l_U1765 );
            sub_41351( 0, sub_1349(), "MAX", ref l_U1765, 2, 0 );
            sub_41351( 1, l_U1384, "M9_CS_023_MUS", ref l_U1765, 2, 0 );
            sub_41602( "SFV2_VIG04A", ref l_U1765, 8, 1 );
            AUDIO_MUSIC_PLAY_ONESHOT();
        }
        if (((IS_PED_DEAD( l_U1384 )) == 0) AND ((DOES_PED_EXIST( l_U1384 )) == 1))
        {
            if ((sub_2386( ref l_U1592 )) == 1)
            {
                SET_PED_HEALTH( l_U1384, 100, 0 );
                if (((IS_PED_DEAD( l_U1415[0] )) == 0) AND ((DOES_PED_EXIST( l_U1415[0] )) == 1))
                {
                    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1415[0], 55060, 0.20000000, 0.00000000, 0.00000000 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1384, 57704, 0.00000000, 0.00000000, 0.00000000 ), 10, 1, -1074756423, l_U1415[0] );
                    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1415[0], 55060, 0.20000000, 0.00000000, 0.00000000 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1384, 43424, 0.00000000, 0.00000000, 0.00000000 ), 10, 1, -1074756423, l_U1415[0] );
                    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1415[0], 55060, 0.20000000, 0.00000000, 0.00000000 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1384, 58528, 0.00000000, 0.00000000, 0.00000000 ), 10, 1, -1074756423, l_U1415[0] );
                    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1415[0], 55060, 0.20000000, 0.00000000, 0.00000000 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1384, 48898, 0.00000000, 0.00000000, 0.00000000 ), 10, 1, -1074756423, l_U1415[0] );
                    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1415[0], 55060, 0.20000000, 0.00000000, 0.00000000 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1384, 14989, 0.00000000, 0.00000000, 0.00000000 ), 10, 1, -1074756423, l_U1415[0] );
                    SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1415[0], 55060, 0.20000000, 0.00000000, 0.00000000 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1384, 15558, 0.00000000, 0.00000000, 0.00000000 ), 10, 1, -1074756423, l_U1415[0] );
                    START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "WE_AK47_MZFL_01_S", l_U1415[0], 0.20000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 55060, 2.00000000 );
                }
            }
        }
        if (((IS_PED_DEAD( l_U1399[0] )) == 0) AND ((DOES_PED_EXIST( l_U1399[0] )) == 1))
        {
            if ((sub_2386( ref l_U1664 )) == 1)
            {
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1399[0], 55060, 0.20000000, 0.00000000, 0.00000000 ), -126.50000000, 152.60000000, 8.50000000, 10, 1, -1074756423, l_U1399[0] );
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1399[0], 55060, 0.20000000, 0.00000000, 0.00000000 ), -126.50000000, 152.60000000, 8.90000000, 10, 1, -1074756423, l_U1399[0] );
            }
        }
        if (((IS_PED_DEAD( l_U1399[0] )) == 0) AND ((DOES_PED_EXIST( l_U1399[0] )) == 1))
        {
            if ((sub_2386( ref l_U1673 )) == 1)
            {
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1399[0], 55060, 0.20000000, 0.00000000, 0.00000000 ), -126.50000000, 152.70000000, 9.10000000, 10, 1, -1074756423, l_U1399[0] );
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1399[0], 55060, 0.20000000, 0.00000000, 0.00000000 ), -126.50000000, 152.70000000, 9.00000000, 10, 1, -1074756423, l_U1399[0] );
            }
        }
        if (((IS_PED_DEAD( l_U1399[0] )) == 0) AND ((DOES_PED_EXIST( l_U1399[0] )) == 1))
        {
            if ((sub_2386( ref l_U1682 )) == 1)
            {
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1399[0], 55060, 0.20000000, 0.00000000, 0.00000000 ), -126.50000000, 152.80000000, 8.30000000, 10, 1, -1074756423, l_U1399[0] );
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1399[0], 55060, 0.20000000, 0.00000000, 0.00000000 ), -126.50000000, 152.50000000, 7.90000000, 10, 1, -1074756423, l_U1399[0] );
            }
        }
        if (((IS_PED_DEAD( l_U1399[0] )) == 0) AND ((DOES_PED_EXIST( l_U1399[0] )) == 1))
        {
            if ((sub_2386( ref l_U1691 )) == 1)
            {
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1399[0], 55060, 0.20000000, 0.00000000, 0.00000000 ), -126.50000000, 152.90000000, 8.70000000, 10, 1, -1074756423, l_U1399[0] );
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( l_U1399[0], 55060, 0.20000000, 0.00000000, 0.00000000 ), -126.50000000, 152.40000000, 7.90000000, 10, 1, -1074756423, l_U1399[0] );
            }
        }
        if (((IS_PED_DEAD( l_U1384 )) == 1) || ((sub_2386( ref l_U1583 )) == 1))
        {
            SET_PED_CORPSE( l_U1384, 1 );
            l_U1711 = 1;
            l_U110 = 3;
            sub_1198( "KA", "issDeadEndState = ISS_FINISHED", 0 );
        }
        break;
        case 3:
        sub_1198( "KA", "issDeadEndState = ISS_FINISHED", 0 );
        ISEQ_UNREGISTER_ENTITY( 748104715, "deadend1_male1" );
        sub_4044( 748104715, 1 );
        AUDIO_MUSIC_REQUEST_ONESHOT( "FAV2_ONESHOT_G", 0 );
        sub_44124();
        l_U110 = 0;
        sub_1198( "KA", "issDeadEndState = ISS_IDLE", 0 );
        break;
    }
    return;
}

void sub_41010()
{
    sub_1198( "NS", "P_DEAD_END_ENEMIES_TACTICAL_STAND()", 0 );
    if (NOT (IS_PED_DEAD( sub_1349() )))
    {
        if (((IS_PED_DEAD( l_U1415[0] )) == 0) AND ((DOES_PED_EXIST( l_U1415[0] )) == 1))
        {
            SET_PED_FORCE_KNEEL_AND_FIRE( l_U1415[0], 1 );
        }
    }
    if ((IS_PED_DEAD( l_U1430 )) || (NOT (IS_PED_DEAD( l_U1430 ))))
    {
        FREEZE_PED_POSITION( l_U1430, 1 );
    }
    return;
}

void sub_41269(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_41351(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_41602(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_41626( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_41626(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_41681( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_41681(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_41716( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_42210( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_41716(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_42210(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_44124()
{
    sub_1198( "NS", "P_DEAD_END_ENEMIES_TACTICAL_CORNER()", 0 );
    if (((IS_PED_DEAD( l_U1399[0] )) == 0) AND ((DOES_PED_EXIST( l_U1399[0] )) == 1))
    {
        CLEAR_PED_TASKS( l_U1399[0] );
        OPEN_SEQUENCE_TASK( ref l_U722 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_SEARCH_FOR_PED_AT_COVER_POINT( 0, "fav2_02", "Corner_Position52", 1 );
        TASK_SEARCH_FOR_PED_AT_COVER_POINT( 0, "GenCover", "C37344FE_CC4AAE4_Corner1", 1 );
        CLOSE_SEQUENCE_TASK( l_U722 );
        TASK_PERFORM_SEQUENCE( l_U1399[0], l_U722 );
        CLEAR_SEQUENCE_TASK( l_U722 );
    }
    if (((IS_PED_DEAD( l_U1415[0] )) == 0) AND ((DOES_PED_EXIST( l_U1415[0] )) == 1))
    {
        CLEAR_PED_TASKS( l_U1415[0] );
        OPEN_SEQUENCE_TASK( ref l_U722 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_ATTACK_MOVE( 0, -138.16000000, 157.70000000, 5.75000000, 0.00000000, 20.00000000, -1.00000000, 2 );
        TASK_PAUSE( 0, 11000 );
        TASK_ATTACK_MOVE( 0, -130.20000000, 155.32000000, 6.98000000, 0.00000000, 20.00000000, -1.00000000, 2 );
        CLOSE_SEQUENCE_TASK( l_U722 );
        SET_PED_FORCE_KNEEL_AND_FIRE( l_U1415[0], 0 );
        TASK_PERFORM_SEQUENCE( l_U1415[0], l_U722 );
        CLEAR_SEQUENCE_TASK( l_U722 );
    }
    return;
}

void sub_44696(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41)
{
    if ((IS_PED_DEAD( sub_1349() )) == 0)
    {
        if (l_U1733 == 0)
        {
            if ((sub_40446( uParam0 )) == 1)
            {
                sub_1198( "ka", "Alley Close Cam Active", 0 );
                SET_CAM_VIEW_MODE( 0 );
                l_U1733 = 1;
            }
        }
        else if ((sub_40446( uParam21 )) == 1)
        {
            sub_1198( "ka", "Alley Close Cam Inactive", 0 );
            SET_CAM_VIEW_MODE( 1 );
            l_U1733 = 0;
        }
    }
    return;
}

void sub_44898()
{
    sub_1198( "NS", "P_BALCONY1_RUN_AWAY()", 0 );
    if (NOT (IS_PED_DEAD( l_U1237[0] )))
    {
        OPEN_SEQUENCE_TASK( ref l_U722 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        TASK_GO_STRAIGHT_TO_COORD( 0, -131.59170000, 134.14020000, 8.99826000, 3, 20000 );
        CLOSE_SEQUENCE_TASK( l_U722 );
        sub_45032( l_U1237[0] );
        TASK_PERFORM_SEQUENCE( l_U1237[0], l_U722 );
        sub_26188( ref l_U889, l_U1237[0], 1 );
        CLEAR_SEQUENCE_TASK( l_U722 );
    }
    return;
}

void sub_45032(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_45260()
{
    unknown uVar2;
    unknown uVar3;

    sub_1198( "SP", "P_CREATE_DEAD_END_PEDS", 0 );
    sub_3713( l_U1384 );
    l_U1384 = sub_21687( ref l_U1371 );
    if (((IS_PED_DEAD( l_U1384 )) == 0) AND ((DOES_PED_EXIST( l_U1384 )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1384, 1 );
    }
    sub_3801( ref l_U1399 );
    l_U1399[0] = sub_25504( ref l_U1385[0] );
    if (((IS_PED_DEAD( l_U1399[0] )) == 0) AND ((DOES_PED_EXIST( l_U1399[0] )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1399[0], 1 );
        SET_PED_AI_TEMPLATE( l_U1399[0], "AIT_UFE_AVERAGE" );
        SET_PED_COMBAT_MOVEMENT( l_U1399[0], 2 );
        SET_PED_FLAG_AGGRESSIVE_CHARGER( l_U1399[0], 1 );
        SET_PED_COMBAT_RANGE_MAX( l_U1399[0], 4.00000000 );
        SET_PED_ALERTNESS( l_U1399[0], 2 );
        uVar2 = sub_7734( l_U1399[0], g_U1308, 200, 0, 1 );
    }
    sub_3801( ref l_U1415 );
    l_U1415[0] = sub_25504( ref l_U1401[0] );
    if (((IS_PED_DEAD( l_U1415[0] )) == 0) AND ((DOES_PED_EXIST( l_U1415[0] )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1415[0], 1 );
        SET_PED_AI_TEMPLATE( l_U1415[0], "AIT_UFE_TOUGH" );
        SET_PED_COMBAT_MOVEMENT( l_U1415[0], 2 );
        SET_PED_FLAG_AGGRESSIVE_CHARGER( l_U1415[0], 1 );
        SET_PED_COMBAT_RANGE_MAX( l_U1415[0], 4.00000000 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1415[0], 1, 0 );
        SET_PED_ALERTNESS( l_U1415[0], 1 );
        uVar3 = sub_7734( l_U1415[0], g_U1308, 200, 0, 1 );
    }
    sub_3713( l_U1430 );
    l_U1430 = sub_25504( ref l_U1417 );
    if (((IS_PED_DEAD( l_U1430 )) == 0) AND ((DOES_PED_EXIST( l_U1430 )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1430, 1 );
        SET_PED_NAME_DEBUG( l_U1430, "piDeadUFEPOI" );
        sub_45918( l_U1430, 11 );
    }
    sub_26488( ref l_U1815, 0.50000000, 0 );
    sub_26345( l_U1399[0], ref l_U1815 );
    sub_26345( l_U1415[0], ref l_U1815 );
    SET_PED_NAME_DEBUG( l_U1384, "piDeadEnd1Male1" );
    SET_PED_NAME_DEBUG( l_U1399[0], "piDeadEnd1Male3" );
    SET_PED_NAME_DEBUG( l_U1415[0], "piDeadEnd1Male4" );
    SET_PED_NAME_DEBUG( l_U1430, "piDeadUFEPOI" );
    return;
}

void sub_45918(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
        sub_4371( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

void sub_47020()
{
    sub_18704( 723698836, 1 );
    sub_3713( l_U1445 );
    l_U1445 = sub_21687( ref l_U1432 );
    if (((IS_PED_DEAD( l_U1445 )) == 0) AND ((DOES_PED_EXIST( l_U1445 )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1445, 1 );
        SET_PED_NAME_DEBUG( l_U1445, "piBalconyRunner" );
        SET_PED_AS_ONE_SHOT_KILL( l_U1445, 1 );
    }
    return;
}

void sub_47168(int iParam0, int iParam1)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if (iParam1 == 1)
    {
        iParam0->_fU8 = iParam0->_fU4 - iParam0->_fU0;
        sub_2923( iParam0 );
    }
    else if (iParam0->_fU8 > 0)
    {
        sub_2266( iParam0 );
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA() - iParam0->_fU8;
        }
        else
        {
            iParam0->_fU0 = TIMERB() - iParam0->_fU8;
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM() - iParam0->_fU8;
        }
        iParam0->_fU4 = iParam0->_fU0;
        iParam0->_fU8 = 0;
    }
    return;
}

void sub_47555()
{
    int Result;

    Result = 0;
    Result += sub_47574( ref l_U1352 );
    Result += sub_47574( ref l_U1237 );
    Result += sub_47574( ref l_U1267 );
    Result += sub_47574( ref l_U1399 );
    Result += sub_47574( ref l_U1415 );
    return Result;
}

void sub_47574(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_47730()
{
    unknown Result;

    Result = sub_47744( ref l_U1352 );
    if (((IS_PED_DEAD( Result )) == 0) AND ((DOES_PED_EXIST( Result )) == 1))
    {
        return Result;
    }
    Result = sub_47744( ref l_U1237 );
    if (((IS_PED_DEAD( Result )) == 0) AND ((DOES_PED_EXIST( Result )) == 1))
    {
        return Result;
    }
    Result = sub_47744( ref l_U1267 );
    if (((IS_PED_DEAD( Result )) == 0) AND ((DOES_PED_EXIST( Result )) == 1))
    {
        return Result;
    }
    Result = sub_47744( ref l_U1399 );
    if (((IS_PED_DEAD( Result )) == 0) AND ((DOES_PED_EXIST( Result )) == 1))
    {
        return Result;
    }
    Result = sub_47744( ref l_U1415 );
    if (((IS_PED_DEAD( Result )) == 0) AND ((DOES_PED_EXIST( Result )) == 1))
    {
        return Result;
    }
    return Result;
}

void sub_47744(unknown uParam0)
{
    int I;

    if ((sub_47574( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

int sub_48287(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_48300( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_48300(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_48557(int iParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_REMOVE_BOX( uParam1, iParam0->_fU0 );
    }
    return;
}

void sub_48705()
{
    sub_1198( "SA", "P_CREATE_S_FAV2_VIG_00B_WINDOW02", 0 );
    sub_3713( l_U994 );
    l_U994 = sub_21687( ref l_U995 );
    sub_4457( l_U1012 );
    l_U1012 = sub_28064( 2072171637, l_U1013, l_U1016, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1012 ))
    {
        FREEZE_OBJECT_POSITION( l_U1012, 1 );
    }
    sub_4457( l_U1019 );
    l_U1019 = sub_28064( 1678648716, l_U1020, l_U1023, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1019 ))
    {
        FREEZE_OBJECT_POSITION( l_U1019, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U994 )))
    {
        SET_PED_NAME_DEBUG( l_U994, "pi00BWindow02" );
        if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
        {
            SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U994, 0, 0 );
            SET_PED_GORE_FROM_PLAYER( l_U994, 0 );
        }
        SET_PED_AS_ONE_SHOT_KILL( l_U994, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U994, 1 );
        ISEQ_REGISTER_ENTITY( 706754384, "CIV", l_U994, 0 );
        ISEQ_REGISTER_ENTITY( 706754384, "SHUTTERA", l_U1012, 1 );
        ISEQ_REGISTER_ENTITY( 706754384, "SHUTTERB", l_U1019, 1 );
        ISEQ_START( 706754384 );
        SET_PED_NAME_DEBUG( l_U994, "pi00BWindow02" );
    }
    return;
}

void sub_49181()
{
    sub_1198( "SA", "P_CREATE_S_FAV2_RAID_WINDOW_REACT", 0 );
    sub_3713( l_U1026 );
    l_U1026 = sub_21687( ref l_U1027 );
    sub_4457( l_U1044 );
    l_U1044 = sub_28064( 2072171637, l_U1045, l_U1048, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1044 ))
    {
        FREEZE_OBJECT_POSITION( l_U1044, 1 );
    }
    sub_4457( l_U1051 );
    l_U1051 = sub_28064( 1678648716, l_U1052, l_U1055, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U1051 ))
    {
        FREEZE_OBJECT_POSITION( l_U1051, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U1026 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1026, 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U1026, 1 );
        ISEQ_REGISTER_ENTITY( 231092439, "CIV", l_U1026, 0 );
        ISEQ_REGISTER_ENTITY( 231092439, "SHUTTERA", l_U1044, 1 );
        ISEQ_REGISTER_ENTITY( 231092439, "SHUTTERB", l_U1051, 1 );
        ISEQ_START( 231092439 );
        SET_PED_NAME_DEBUG( l_U1026, "pi00AWindowReact" );
    }
    return;
}

void sub_49582()
{
    sub_1198( "SA", "P_CREATE_S_FAV2_VIG_00A_FIRST_DOOR", 0 );
    sub_3713( l_U937 );
    l_U937 = sub_21687( ref l_U938 );
    sub_4457( l_U955 );
    l_U955 = sub_28064( -1006708222, l_U956, l_U959, 0, 1, 0 );
    if (DOES_OBJECT_EXIST( l_U955 ))
    {
        FREEZE_OBJECT_POSITION( l_U955, 1 );
    }
    if (NOT (IS_PED_DEAD( l_U937 )))
    {
        if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
        {
            SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U937, 0, 0 );
            SET_PED_GORE_FROM_PLAYER( l_U937, 0 );
        }
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U937, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U937, 1 );
        ISEQ_REGISTER_ENTITY( -390570017, "CIV", l_U937, 0 );
        ISEQ_REGISTER_ENTITY( -390570017, "DOOR", l_U955, 1 );
        ISEQ_START( -390570017 );
        SET_PED_NAME_DEBUG( l_U937, "pi00AFIRST_DOOR" );
    }
    return;
}

void sub_50000()
{
    ISEQ_REGISTER_ENTITY( 723698836, "csrunner4", l_U1445, 0 );
    ISEQ_START( 723698836 );
    return;
}

void sub_50144()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;

    sub_1198( "NS", "P_FINAL_HELI_FLYBY()", 0 );
    sub_5059( l_U1091 );
    l_U1091 = sub_50217( 1232833631, l_U1120, l_U1123, 0, 0, 0 );
    if ((NOT (IS_VEHICLE_DEAD( l_U1091 ))) AND (DOES_VEHICLE_EXIST( l_U1091 )))
    {
        SET_VEHICLE_PROOFS( l_U1091, 1, 1, 1, 1, 1 );
        SET_VEHICLE_ENGINE_ON( l_U1091, 1, 1 );
        SET_HELI_BLADES_FULL_SPEED( l_U1091 );
        SET_VEHICLE_COLOUR_COMBINATION( l_U1091, 0 );
        SET_VEHICLE_DOOR_OPEN( l_U1091, 2 );
        FREEZE_VEHICLE_POSITION( l_U1091, 1 );
        SET_LOAD_COLLISION_FOR_VEHICLE_FLAG( l_U1091, 0 );
        SET_VEHICLE_NAME_DEBUG( l_U1091, "viLastFlyBy" );
    }
    sub_50619( ref uVar2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U1091 ), 0.00000000, 1686109657, 7, 3, 2, 0, 0 );
    sub_3713( l_U1092 );
    l_U1092 = sub_21687( ref uVar2 );
    if ((NOT (IS_VEHICLE_DEAD( l_U1091 ))) AND (DOES_VEHICLE_EXIST( l_U1091 )))
    {
        SET_PED_INTO_VEHICLE( l_U1092, l_U1091, -1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1092, 1 );
        SET_PED_VISIBLE( l_U1092, 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U1092, 2, 0 );
        SET_PED_PROOFS( l_U1092, 1, 1, 1, 1, 1 );
        SET_PED_AIM_LOCKONABLE( l_U1092, 0 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( l_U1092, 0 );
        SET_PED_NAME_DEBUG( l_U1092, "piLastFlyByDriver" );
    }
    sub_3713( l_U1106 );
    sub_10481( ref l_U1107, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_VEHICLE_COORDS( l_U1091 ), 0.00000000, 521861167, 7, 3, 2, 0, 0 );
    l_U1106 = sub_21687( ref l_U1107 );
    if (((IS_VEHICLE_DEAD( l_U1091 )) == 0) AND (NOT (IS_PED_DEAD( l_U1106 ))))
    {
        ATTACH_PED_TO_VEHICLE( l_U1106, l_U1091, 0, 0.40000000, 2.00000000, 0.80000000, 0.00000000, 0.00000000, 1, 0, 0, 1 );
        SET_PED_NAME_DEBUG( l_U1106, "piHELIFLYBY" );
        CLEAR_PED_TASKS( l_U1106 );
        SET_PED_CAN_BE_TARGETTED( l_U1106, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1106, 1 );
        SET_PED_PROOFS( l_U1106, 1, 1, 1, 1, 1 );
        PED_ACTION_TREE_PLAY_NODE( l_U1106, "/Global/S_FAV2_HELI_DRIVER_CP03/S_FAV2_DRIVER/DRIVER" );
    }
    if (NOT (IS_VEHICLE_DEAD( l_U1091 )))
    {
        FREEZE_VEHICLE_POSITION( l_U1091, 0 );
        if (NOT (IS_PED_DEAD( l_U1092 )))
        {
            TASK_HELI_MISSION( l_U1092, l_U1091, 0, 0, -157.17400000, 400.00000000, 15.00000000, 4, 80.00000000, 10, -1, 0, 0 );
        }
    }
    return;
}

void sub_50217(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_18369( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_50619(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_51362(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_51551()
{
    sub_11639( ref g_U1093, 0 );
    sub_33512( ref g_U1093, 1, 1, -0.50000000 );
    return;
}

void sub_51596()
{
    if ((sub_51610( ref l_U755 )) == 1)
    {
        sub_41269( ref l_U724 );
        sub_41351( 0, sub_1349(), "MAX", ref l_U724, 2, 0 );
        sub_41351( 1, sub_1349(), "MAX", ref l_U724, 2, 0 );
        sub_41602( "EXPLORE_ITEM", ref l_U724, 8, 1 );
    }
    if ((sub_51947( ref l_U755 )) == 1)
    {
        CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_25_F_CAM", 1, l_U1821, l_U1824, 0, 0 );
        if (NOT (IS_PED_DEAD( sub_1349() )))
        {
            SET_PLAYER_CONTROL( sub_1371(), 0, 0 );
            SET_PED_VISIBLE( sub_1349(), 0 );
        }
        sub_30040( 1, 0, 0, 1 );
        sub_2923( ref l_U872 );
        sub_2130( ref l_U872, 6000, 1, 0 );
        sub_2266( ref l_U872 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "sfav2_DeadUFE" )))
        {
            sub_1198( "CCB", "Playing SFV2_EXTM2A speech.", 0 );
            sub_54284( 0 );
            sub_41269( ref l_U1805 );
            if (NOT (IS_PED_DEAD( sub_1349() )))
            {
                sub_1198( "CCB", "Adding PLAYER_PED_ID ped for sss_SFV2_EXTM2A script speech.", 0 );
                sub_41351( 0, sub_1349(), "MAX", ref l_U1805, 2, 0 );
            }
            sub_41602( "SFV2_EXTM2A", ref l_U1805, 7, 1 );
        }
    }
    if ((sub_2386( ref l_U872 )) == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1349() )))
        {
            SET_PLAYER_CONTROL( sub_1371(), 1, 0 );
            SET_PED_VISIBLE( sub_1349(), 1 );
        }
        sub_32277( 1, 1 );
        CAMERA_ANIMATED_STOP( 0, 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "sfav2_DeadUFE" )))
        {
            FOUND_EXPLORATION_ITEM( "sfav2_DeadUFE" );
        }
        sub_52872( ref l_U755, 1 );
    }
    return;
}

int sub_51610(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_51622( iParam0 )) == 0)))
    {
        if ((sub_51786() == 1) AND (((IS_PED_RELOADING( sub_1349() )) == 0) AND (((IS_PED_GETTING_UP( sub_1349() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_1349() )) == 0) AND (((IS_PED_IN_COVER( sub_1349() )) == 0) AND (((IS_PED_DUCKING( sub_1349() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_51622(int iParam0)
{
    return iParam0->_fU56;
}

int sub_51786()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

int sub_51947(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_1349() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1349() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_38760( sub_1349(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_38760( sub_1349(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_16469( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_16530( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_51786() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_52872( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_15908( iParam0, 0 );
                            sub_52943( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_15908( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_1349() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_1349(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_15908( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_52943( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_1349() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_1349(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_1349() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_1349(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_1349() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_1349(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_15908( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_52943( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_1349() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_1349() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_1349() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_1349(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_52943( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

void sub_52872(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_15908( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_15908( iParam0, 0 );
        sub_52943( iParam0, 0 );
        if ((IS_PED_DEAD( sub_1349() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_1349() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_1349(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_52943(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_16469( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_54284(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_54888()
{
    sub_1198( "SP", "P_UNLOAD_ASSETS", 0 );
    sub_4248( 1953994288 );
    sub_4248( -194111775 );
    sub_4248( 2072171637 );
    sub_4248( 1678648716 );
    sub_4248( 1232833631 );
    sub_4248( g_U779 );
    sub_4248( 1686109657 );
    sub_29555( -1378176668 );
    sub_29555( -1986694060 );
    REMOVE_ANIM_DICT( "npc_pstl_cover_grenade", 0 );
    REMOVE_ANIM_DICT( "npc_rifle_cover_grenade", 0 );
    REMOVE_ANIM_DICT( "mped_grenade_core", 0 );
    CLEAR_NAMED_CUTSCENE( "mid_03_f2_concat" );
    sub_5204( "EXPL_CAM" );
    return;
}


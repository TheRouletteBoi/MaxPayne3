void main()
{
    l_U3 = 0;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 1500;
    l_U18 = 0;
    l_U19 = 0;
    StrCopy( ref l_U20, "09_04_fav2_concat", 32 );
    l_U28 = 1;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = 0;
    l_U33 = 0;
    l_U34 = 0;
    l_U35 = 1;
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 0;
    l_U43 = 0;
    l_U44 = 1;
    l_U45 = 1;
    l_U46 = 1;
    l_U47 = 1;
    l_U48 = 0;
    l_U49 = 1;
    l_U50 = 0;
    l_U51 = 0;
    l_U52 = 1;
    l_U53 = 0;
    l_U54 = 0;
    l_U55 = 0;
    l_U56 = 0;
    l_U57 = 0;
    l_U58 = 0;
    l_U59 = 0;
    l_U60 = 0;
    l_U61 = 0;
    l_U62 = 0;
    l_U63 = 0;
    l_U64 = 500;
    l_U74 = 0;
    l_U75 = 0;
    l_U76 = 0;
    l_U273 = 0;
    l_U310 = 0;
    l_U525 = 0;
    l_U526 = {-107.00000000, 438.44000000, -24.92000000};
    l_U529 = 0.00000000;
    l_U530 = {-109.91000000, 437.57000000, -25.07000000};
    l_U533 = 0.00000000;
    l_U534 = {-110.94000000, 438.72000000, -25.84000000};
    l_U537 = 0.00000000;
    l_U538 = {-109.54000000, 439.69200000, -25.20000000};
    l_U541 = -5.00000000;
    l_U542 = 167972;
    l_U543 = {0.00000000, 0.00000000, -1.00000000};
    l_U546 = {0.00000000, 0.00000000, 0.00000000};
    l_U549 = 1.00000000;
    l_U550 = 176892;
    l_U551 = {0.00000000, 0.00000000, -0.60000000};
    l_U554 = {0.00000000, 0.00000000, 0.00000000};
    l_U557 = 1.00000000;
    l_U558 = 178033;
    l_U559 = 178133;
    l_U560 = {0.00000000, 0.00000000, -0.60000000};
    l_U563 = {0.00000000, 0.00000000, 0.00000000};
    l_U566 = 1.00000000;
    l_U570 = 0;
    l_U571 = 0;
    l_U572 = 0;
    sub_699( "SA", "fav2_Boss.sc Script Starting", 0 );
    sub_748();
    sub_1872();
    while (IS_EXITFLAG_SET() == 0)
    {
        sub_3282();
        sub_21875();
        if (l_U29 == 0)
        {
            sub_21903();
        }
        WAIT( 0 );
        if (NOT (IS_PED_DEAD( l_U311 )))
        {
            if (IS_PED_ON_FIRE( l_U311 ))
            {
                STOP_PED_FIRE( l_U311 );
            }
        }
    }
    sub_5670( 0 );
    sub_45285();
    if (NOT (IS_PED_DEAD( sub_3362() )))
    {
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    }
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "fav2_Boss" );
    if (g_U782 == 10)
    {
        if ((sub_3938() == 0) AND (NOT (IS_PED_DEAD( sub_3362() ))))
        {
            SET_HIGHEST_ARCADE_LEVEL_UNLOCKED( 12 );
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                SWITCH_TO_LEVEL_NAME( "s_busdep" );
            }
        }
    }
    sub_699( "SA", "fav2_Boss.sc Script Ending", 0 );
    return;
}

void sub_699(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_748()
{
    sub_699( "NS", "P_SETUP_STATIC_DATA", 0 );
    sub_856( ref l_U482, "VcpfAttack", -48.81000000, 689.61000000, -30.40000000, 20.00000000, 25.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_856( ref l_U503, "KillBossRight", -42.69000000, 689.70000000, -29.19000000, 10.00000000, 25.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1071( ref l_U481, "tbVCPF", -48.87000000, 686.87000000, -29.78000000, 14.91000000, 26.16000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_1162( ref l_U345, -109.46000000, 437.22000000, -26.56000000, -45.00000000, 222234247, 7, 3, 2, 0, 0 );
    sub_1305( ref l_U312, -110.68000000, 435.00000000, -27.23000000, 98.44000000, -693003798, 7, 3, 2, 0, 0 );
    sub_1162( ref l_U326, -107.54000000, 435.83000000, -26.59000000, 0.00000000, -1079975449, 26, 6, 0, 0, 0 );
    sub_1162( ref l_U111, -131.38900000, 453.95100000, -25.14142000, 0.00000000, 1828726176, 26, 6, 0, 0, 0 );
    sub_1162( ref l_U125, -131.38900000, 453.95100000, -25.14142000, 0.00000000, -1934831796, 26, 6, 0, 0, 0 );
    sub_1162( ref l_U139[0], -131.38900000, 453.95100000, -25.14142000, 0.00000000, 1498592529, 26, 6, 0, 0, 0 );
    sub_1162( ref l_U139[1], -132.38900000, 453.95100000, -25.14142000, 0.00000000, -34937740, 26, 6, 0, 0, 0 );
    sub_1162( ref l_U139[2], -131.80000000, 453.95100000, -25.14142000, 0.00000000, -1754030436, 26, 6, 0, 0, 0 );
    sub_1162( ref l_U183[0], -132.38900000, 453.95100000, -25.14142000, 0.00000000, 1268900754, 26, 6, 0, 0, 0 );
    sub_1162( ref l_U183[1], -131.00000000, 453.95100000, -25.14142000, 0.00000000, -934594957, 26, 6, 0, 0, 0 );
    sub_1162( ref l_U213, -130.38900000, 453.95100000, -25.14142000, 0.00000000, -1876547275, 26, 6, 0, 0, 0 );
    sub_1162( ref l_U244, -91.21000000, 425.30000000, -26.33000000, 0.00000000, 1268900754, 7, 3, 2, 0, 0 );
    sub_1162( ref l_U259, -93.13000000, 428.41000000, -26.52000000, 0.00000000, -1779729528, 7, 3, 2, 0, 0 );
    return;
}

void sub_856(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_1071(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_1162(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_1305(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU12 = uParam4;
    iParam0->_fU16 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU48 = uParam10;
    return;
}

void sub_1872()
{
    sub_699( "SA", "P_INITIALIZE_SCRIPT_DATA() - START", 0 );
    l_U273 = 0;
    l_U17 = 0;
    l_U18 = 4;
    l_U19 = 0;
    l_U28 = 1;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = 0;
    l_U33 = 0;
    l_U34 = 0;
    l_U35 = 1;
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U39 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 0;
    l_U43 = 0;
    l_U44 = 1;
    l_U45 = 1;
    l_U46 = 1;
    l_U47 = 1;
    l_U48 = 0;
    l_U49 = 1;
    l_U50 = 0;
    l_U51 = 0;
    l_U52 = 1;
    l_U53 = 0;
    l_U54 = 0;
    l_U55 = 0;
    l_U56 = 0;
    l_U57 = 0;
    l_U58 = 0;
    l_U59 = 0;
    l_U60 = 0;
    l_U61 = 0;
    l_U62 = 0;
    l_U63 = 0;
    l_U74 = 0;
    l_U75 = 0;
    l_U76 = 0;
    sub_2174( ref l_U102 );
    sub_2174( ref l_U84 );
    sub_2174( ref l_U65 );
    l_U79[0] = 0;
    l_U79[1] = 1;
    l_U79[2] = 2;
    l_U79[3] = 3;
    sub_2349( "SFV2AUD" );
    sub_2461();
    sub_699( "SA", "P_INITIALIZE_SCRIPT_DATA() - END", 0 );
    return;
}

void sub_2174(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_2349(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_2369();
    return;
}

void sub_2369()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_2461()
{
    sub_699( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U568 = 0;
    l_U569 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -1375770305 )))
    {
        sub_699( "CCB", "Creating the Favela2Complete script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -1375770305 );
        if (SCRIPT_VAR_HASH_EXISTS( -1375770305 ))
        {
            sub_699( "CCB", "The Favela2Complete script variable was successfully created...", 0 );
        }
        else
        {
            sub_699( "CCB", "The Favela2Complete script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_699( "CCB", "The Favela2Complete script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -1375770305, 0 );
    }
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 1701971384 )))
    {
        sub_699( "CCB", "Creating the OldPainless script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 1701971384 );
        if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
        {
            sub_699( "CCB", "The OldPainless script variable was successfully created...", 0 );
        }
        else
        {
            sub_699( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_699( "CCB", "The OldPainless script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 1701971384, 0 );
    }
    return;
}

void sub_3282()
{
    if (g_U782 == 10)
    {
        switch (l_U29)
        {
            case 0:
            if ((l_U50 == 1) || ((sub_3435()) || (IS_PED_DEAD( sub_3362() ))))
            {
                l_U29 = 1;
                sub_699( "kja", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_3938())
            {
                l_U29 = 2;
            }
            else if ((sub_3976( 0 )) == 1)
            {
                l_U29 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_3362() )))
            {
                if ((g_U1312[10]._fU40 != 4) AND (g_U1312[10]._fU40 != 0))
                {
                    sub_699( "kja", "Shutting down script for MCE_MILO_REGO_MPM.", 0 );
                    sub_5289( ref g_U1312[10] );
                }
                l_U29 = 3;
                sub_699( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_699( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_3362() ))) AND (NOT (IS_PLAYER_DEAD( sub_3384() ))))
            {
                SET_PLAYER_CONTROL( sub_3384(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_3362() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_3362(), 0 );
                }
            }
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            l_U310++;
            if (NOT (IS_PED_DEAD( sub_3362() )))
            {
                SET_PLAYER_CONTROL( sub_3384(), 1, 0 );
                SET_PLAYER_CONTROL( sub_3384(), 0, 0 );
                if (NOT (IS_PLAYER_DEAD( sub_3384() )))
                {
                    SET_PLAYER_FORCED_AIM( sub_3384(), 0, 0 );
                }
                RESET_PED_GORE( sub_3362() );
            }
            l_U50 = 1;
            STOP_PARTICLE_FX_LOOPED( l_U77 );
            UI_SET( 25, 2, 1537, "SPSlotLoader", 1537, "" );
            sub_5670( 1 );
            if (IS_CUSTOM_PLAYER_VARIATION() == 0)
            {
                sub_6785( 19, g_U783[10], 0 );
                PRELOAD_PLAYER_VARIATION( sub_3362(), 0, 0, 20, 1 );
            }
            l_U29 = 4;
            sub_699( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_699( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_17464( ref l_U274, sub_3362() );
            l_U29 = 5;
            sub_699( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_699( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            sub_5289( ref g_U1312[10] );
            sub_21649( sub_3362(), g_U783[10], g_U910[10] );
            sub_1872();
            l_U29 = 0;
            sub_699( "kja", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    else if ((sub_3938()) || ((IS_PED_DEAD( sub_3362() )) == 1))
    {
        sub_699( "SP", "Player is dead, resetting script thread.", 0 );
        sub_5289( ref g_U1312[10] );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_3362()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_3384() );
    }
    return 0;
}

void sub_3384()
{
    return GET_PLAYER_ID();
}

int sub_3435()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        g_U665 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_3362() )))
        {
            SET_PED_FORCED_TO_WALK( sub_3362(), 0 );
            SET_PLAYER_FORCED_AIM( sub_3384(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_3384(), 1 );
            if ((IS_PED_VISIBLE( sub_3362() )) == 0)
            {
                SET_PED_VISIBLE( sub_3362(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_3938()
{
    return g_U648;
}

int sub_3976(int iParam0)
{
    iParam0 = 1;
    switch (l_U6)
    {
        case 0:
        if (NOT (sub_4033( ref l_U8 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_3362() )))
            {
                l_U7 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_4137( ref l_U8, l_U7, 1, 1 );
            sub_4271( ref l_U8 );
        }
        if (sub_4389( ref l_U8 ))
        {
            sub_699( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_3362() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_3384() )))
            {
                SET_PLAYER_CONTROL( sub_3384(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U6 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U6 = 2;
            }
            else
            {
                l_U6 = 3;
            }
        }
        break;
        case 2:
        sub_699( "NS", "Player will QUIT", 0 );
        sub_4870();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_699( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_4870();
        return 1;
        break;
    }
    return 0;
}

int sub_4033(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_4137(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_4271(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_4389(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_4870()
{
    sub_699( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2174( ref l_U8 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_3384() )))
    {
        SET_PLAYER_CONTROL( sub_3384(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U5 = 0;
    l_U5 = l_U5;
    l_U6 = 0;
    return;
}

void sub_5289(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_5670(unknown uParam0)
{
    sub_699( "SA", "P_CLEANUP_ALL() - START", 0 );
    ISEQ_UNREGISTER_ENTITY( -37981725, "PLAYER" );
    ISEQ_UNREGISTER_ENTITY( -37981725, "ENEMY" );
    ISEQ_UNREGISTER_ENTITY( -37981725, "MARCELO" );
    sub_5786( -37981725, 1 );
    ISEQ_UNREGISTER_ENTITY( -1739192333, "GIO" );
    sub_5786( -1739192333, 1 );
    if (NOT (IS_PED_DEAD( sub_3362() )))
    {
        CLEAR_PED_TASKS( sub_3362() );
    }
    if (NOT (IS_PED_DEAD( l_U344 )))
    {
        CLEAR_ALL_PED_PROPS( l_U344 );
    }
    if (NOT (IS_PED_DEAD( sub_3362() )))
    {
        CLEAR_ALL_PED_PROPS( sub_3362() );
    }
    DESTROY_ALL_CAMS();
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
    if (NOT (IS_PED_DEAD( sub_3362() )))
    {
        PED_ACTION_TREE_PLAY_NODE( sub_3362(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
    }
    sub_6227( l_U344 );
    sub_6227( l_U325 );
    sub_6227( l_U311 );
    sub_6325( ref l_U339 );
    sub_6227( l_U124 );
    sub_6227( l_U138 );
    sub_6441( ref l_U179 );
    sub_6441( ref l_U210 );
    sub_6227( l_U226 );
    sub_6227( l_U240 );
    sub_6533( l_U241 );
    sub_6589( uParam0 );
    sub_699( "SA", "P_CLEANUP_ALL() - END", 0 );
    return;
}

void sub_5786(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_6227(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_6325(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_6358( (uParam0^)[I] );
    }
    return;
}

void sub_6358(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_6441(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_6227( (uParam0^)[I] );
    }
    return;
}

void sub_6533(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_6589(boolean bParam0)
{
    sub_699( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    if (bParam0)
    {
        ;
    }
    else
    {
        sub_699( "CCB", "Stopping the Favela2 context...", 0 );
        END_CONTEXT( "Favela2" );
    }
    return;
}

void sub_6785(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    unknown Result;
    unknown uVar8;

    Result = CREATE_PLAYER( uParam4, uParam1 );
    uVar8 = sub_3362();
    switch (uParam0)
    {
        case 0:
        sub_7213( uVar8 );
        break;
        case 1:
        sub_7423( uVar8 );
        break;
        case 2:
        sub_7633( uVar8 );
        break;
        case 3:
        sub_7843( uVar8 );
        break;
        case 4:
        sub_8053( uVar8 );
        break;
        case 5:
        sub_8263( uVar8 );
        break;
        case 6:
        sub_8473( uVar8 );
        break;
        case 8:
        sub_8683( uVar8 );
        break;
        case 9:
        sub_8893( uVar8 );
        break;
        case 10:
        sub_9103( uVar8 );
        break;
        case 11:
        sub_9313( uVar8 );
        break;
        case 12:
        sub_9523( uVar8 );
        break;
        case 13:
        sub_9733( uVar8 );
        break;
        case 14:
        sub_9943( uVar8 );
        break;
        case 15:
        sub_10153( uVar8 );
        break;
        case 16:
        sub_10363( uVar8 );
        break;
        case 17:
        sub_10573( uVar8 );
        break;
        case 18:
        sub_10783( uVar8 );
        break;
        case 19:
        sub_10993( uVar8 );
        break;
        case 20:
        sub_11203( uVar8 );
        break;
        case 21:
        sub_11413( uVar8 );
        break;
        case 22:
        sub_11623( uVar8 );
        break;
        case 23:
        sub_11833( uVar8 );
        break;
        case 24:
        sub_12043( uVar8 );
        break;
        case 25:
        sub_12253( uVar8 );
        break;
        case 26:
        sub_12463( uVar8 );
        break;
        case 27:
        sub_12673( uVar8 );
        break;
        case 28:
        sub_12883( uVar8 );
        break;
        case 29:
        sub_13093( uVar8 );
        break;
        case 30:
        sub_13303( uVar8 );
        break;
        case 31:
        sub_13513( uVar8 );
        break;
        case 32:
        sub_13723( uVar8 );
        break;
        case 33:
        sub_13933( uVar8 );
        break;
        case 34:
        sub_14143( uVar8 );
        break;
        case 35:
        sub_14353( uVar8 );
        break;
        case 36:
        sub_14563( uVar8 );
        break;
        case 37:
        sub_14773( uVar8 );
        break;
        case 38:
        sub_14998( uVar8 );
        break;
        case 39:
        sub_15208( uVar8 );
        break;
        case 40:
        sub_15418( uVar8 );
        break;
        case 41:
        sub_15628( uVar8 );
        break;
        case 42:
        sub_15838( uVar8 );
        break;
        case 43:
        sub_16048( uVar8 );
        break;
        case 44:
        sub_16260( sub_3362() );
        break;
        case 45:
        sub_16474( sub_3362() );
        break;
        case 46:
        sub_16688( sub_3362() );
        break;
        case 47:
        sub_16902( sub_3362() );
        break;
        case 48:
        sub_17116( sub_3362() );
        break;
    }
    return Result;
}

void sub_7213(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_7423(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 29, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_7633(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_7843(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_8053(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 17, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 27, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 16, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 8, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_8263(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_8473(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 24, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_8683(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_8893(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_9103(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_9313(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 28, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_9523(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_9733(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 17, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_9943(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 16, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 23, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 14, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_10153(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 16, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 23, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 14, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 11, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_10363(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_10573(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 6, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 14, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_10783(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 9, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

void sub_10993(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 13, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 7, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

void sub_11203(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_11413(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 7, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

void sub_11623(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

void sub_11833(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 30, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 3, 0, 0 );
    }
    return;
}

void sub_12043(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 4, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_12253(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 14, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 4, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_12463(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 5, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 18, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 9, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_12673(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 5, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_12883(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 0, 5, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 0, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 0, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_13093(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 16, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_13303(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 15, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_13513(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 10, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 21, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 0, 0 );
    }
    return;
}

void sub_13723(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 11, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 20, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 1, 0 );
    }
    return;
}

void sub_13933(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 12, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 25, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_14143(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 12, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 15, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 3, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_14353(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 19, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 22, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 17, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 0, 1, 0 );
    }
    return;
}

void sub_14563(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 7, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 17, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 2, 0, 0 );
    }
    return;
}

void sub_14773(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 18, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 3, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 19, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
        SET_PED_PROP_INDEX( uParam0, 0, 0, 0, 255 );
    }
    return;
}

void sub_14998(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_15208(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_15418(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_15628(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 26, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 2, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_15838(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 8, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_16048(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 0, 8, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 8, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 10, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 4, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 3, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 7, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 1, 2, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_16260(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 13, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 34, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 19, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 16, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 7, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 4, 0, 0 );
    }
    return;
}

void sub_16474(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 13, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 34, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 19, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 16, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 7, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 4, 1, 0 );
    }
    return;
}

void sub_16688(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 32, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 18, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 10, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 6, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 5, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_16902(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 12, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 32, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 18, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 11, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 10, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 16, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 6, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 5, 1, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 1, 0 );
    }
    return;
}

void sub_17116(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_COMPONENT_VARIATION( uParam0, 0, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 1, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 2, 33, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 3, 12, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 4, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 6, 11, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 5, 15, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 7, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 8, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 9, 1, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 11, 0, 0, 0 );
        SET_PED_COMPONENT_VARIATION( uParam0, 12, 1, 0, 0 );
    }
    return;
}

void sub_17464(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_699( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (g_U665)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_17650( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_18727( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_19019( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_19379( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_19019( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_19379( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_19019( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_19379( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_19664( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_19379( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_19664( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_19379( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (g_U665 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_20159( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_20320( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_3362(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (g_U665)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    g_U665 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_699( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_17650(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_17682( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_17682(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_18727(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_19019(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_19335( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_19335(unknown uParam0)
{
    return;
}

void sub_19379(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_19664(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_19335( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_20159(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_20320(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_17682( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_20392( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_20392(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_21649(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_21875()
{
    return;
}

void sub_21903()
{
    sub_21913();
    switch (l_U17)
    {
        case 0:
        if (g_U782 < 10)
        {
            sub_22399( 0 );
            l_U17 = 1;
        }
        else
        {
            sub_23262( 1 );
            sub_23343( 1 );
            l_U17 = 5;
        }
        break;
        case 1:
        if (sub_23794())
        {
            l_U17 = 2;
        }
        break;
        case 2:
        if (sub_23990())
        {
            l_U17 = 5;
            break;
        }
        return;
        case 5:
        if (sub_30984())
        {
            l_U17 = 3;
        }
        break;
        case 3:
        if (l_U36 == 0)
        {
            ;
        }
        if (l_U52 == 1)
        {
            if (NOT (IS_PED_DEAD( l_U325 )))
            {
                SET_PERSISTENT_PED_VARIATION_ENUM( l_U325, -1143874999 );
                l_U52 = 0;
            }
        }
        sub_32864();
        REENABLE_PLAYER_INPUT( 30 );
        REENABLE_PLAYER_INPUT( 6 );
        REENABLE_PLAYER_INPUT( 22 );
        REENABLE_PLAYER_INPUT( 1 );
        sub_33057( ref l_U274, 10, 0 );
        sub_699( "ka", "Changing mood here - CS should be done", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_4_6", "", 0.00000000, 1000, 5000, -1082130432, 0 );
        sub_4137( ref l_U84, 2000, 1, 0 );
        l_U19 = 1;
        l_U17 = 4;
        break;
        case 4:
        if (IS_ARCADE_MODE_ACTIVE() == 0)
        {
            sub_37683();
        }
        if (PED_ANIM_EVENT_OLD( sub_3362(), 1024 ))
        {
            l_U48++;
            switch (l_U48)
            {
                case 1:
                sub_699( "NS", "CASE 1", 0 );
                if (NOT (IS_PED_DEAD( sub_3362() )))
                {
                    UI_SET( 25, 2, 1537, "SPSlotLoader", 1537, "TUT_FAV2_BOSSMELEE1" );
                    SET_FAIL_PROMPT_BUTTON_AND_TEXT( sub_3362(), 6, "" );
                }
                break;
                case 3:
                sub_699( "NS", "CASE 3", 0 );
                if (NOT (IS_PED_DEAD( sub_3362() )))
                {
                    UI_SET( 25, 2, 1537, "SPSlotLoader", 1537, "TUT_FAV2_BOSSMELEE2" );
                    SET_FAIL_PROMPT_BUTTON_AND_TEXT( sub_3362(), 4, "" );
                }
                break;
                case 5:
                sub_699( "NS", "CASE 5", 0 );
                if (NOT (IS_PED_DEAD( sub_3362() )))
                {
                    UI_SET( 25, 2, 1537, "SPSlotLoader", 1537, "TUT_FAV2_BOSSMELEE3" );
                    SET_FAIL_PROMPT_BUTTON_AND_TEXT( sub_3362(), 22, "" );
                }
                break;
                case 7:
                sub_699( "NS", "CASE 7", 0 );
                if (NOT (IS_PED_DEAD( sub_3362() )))
                {
                    UI_SET( 25, 2, 1537, "SPSlotLoader", 1537, "TUT_FAV2_BOSSMELEE4" );
                    SET_FAIL_PROMPT_BUTTON_AND_TEXT( sub_3362(), 1, "" );
                }
                break;
                case 2:
                sub_699( "NS", "test 2", 0 );
                sub_40130();
                l_U63 = 1;
                l_U62 = 1;
                sub_4137( ref l_U65, l_U64, 1, 0 );
                sub_4271( ref l_U65 );
                break;
                case 4:
                sub_699( "NS", "test 4", 0 );
                sub_40130();
                l_U63 = 1;
                sub_4137( ref l_U65, l_U64, 1, 0 );
                sub_4271( ref l_U65 );
                if (NOT (IS_PED_DEAD( l_U311 )))
                {
                    sub_699( "SA", "Gio - act int 02", 0 );
                    l_U62 = 1;
                    PED_SET_ACTION_INTENTION( l_U311, 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
                }
                break;
                case 6:
                sub_699( "NS", "test 6", 0 );
                sub_40130();
                l_U63 = 1;
                sub_4137( ref l_U65, l_U64, 1, 0 );
                sub_4271( ref l_U65 );
                if (NOT (IS_PED_DEAD( l_U311 )))
                {
                    sub_699( "SA", "Gio - act int 01", 0 );
                    l_U62 = 1;
                    PED_SET_ACTION_INTENTION( l_U311, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                }
                break;
                case 8:
                sub_699( "NS", "test 8", 0 );
                sub_40130();
                sub_4137( ref l_U65, l_U64, 1, 0 );
                sub_4271( ref l_U65 );
                l_U63 = 1;
                l_U62 = 1;
                break;
            }
            if (l_U310 < -1)
            {
                SET_FAIL_PROMPT_BUTTON_AND_TEXT( sub_3362(), 4, "" );
            }
        }
        if (l_U47 == 1)
        {
            if (NOT (IS_PED_DEAD( sub_3362() )))
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( sub_3362(), 49 )) == 3)
                {
                    sub_699( "NS", "Fail StateStarted", 0 );
                    l_U60 = 1;
                    l_U61 = 1;
                    l_U63 = 0;
                    sub_2174( ref l_U65 );
                    sub_35831( l_U48 );
                    PED_FINISH_ACTION_INTENTION( sub_3362(), 49 );
                    if (l_U48 >= 5)
                    {
                        sub_699( "NS", "Fail happened switch guns", 0 );
                        if (NOT (IS_PED_DEAD( l_U344 )))
                        {
                            REMOVE_ALL_PED_WEAPONS( l_U344 );
                            SET_PED_COMPONENT_VARIATION( l_U344, 11, 0, 1, 0 );
                        }
                        sub_19664( l_U344, 68019059, 25000, 0, 0 );
                        l_U47 = 0;
                    }
                    if ((l_U48 == 2) || (l_U48 == 1))
                    {
                        sub_699( "NS", "fail 1", 0 );
                        PLAY_SCRIPT_STREAM_FRONTEND_INT( l_U79[0], 1 );
                        AUDIO_MUSIC_SUSPEND( 7000 );
                        CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV2_CP_12", "VIG_17_F2_FAIL1_CAM", 1, l_U526, l_U529, l_U525, 500 );
                        APPLY_PLAYER_PRELOAD_VARIATION( sub_3362(), 1 );
                    }
                    if ((l_U48 == 4) || (l_U48 == 3))
                    {
                        sub_699( "NS", "fail 2", 0 );
                        AUDIO_MUSIC_SUSPEND( 7000 );
                        PLAY_SCRIPT_STREAM_FRONTEND_INT( l_U79[0], 2 );
                        CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV2_CP_12", "VIG_17_F2_FAIL2_CAM", 1, l_U530, l_U533, l_U525, 500 );
                    }
                    if ((l_U48 == 6) || (l_U48 == 5))
                    {
                        sub_699( "NS", "fail 3", 0 );
                        AUDIO_MUSIC_SUSPEND( 7000 );
                        PLAY_SCRIPT_STREAM_FRONTEND_INT( l_U79[2], 1 );
                        CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV2_CP_12", "VIG_17_F2_FAIL3_RTC_CAM", 1, l_U534, l_U537, l_U525, 500 );
                    }
                    if ((l_U48 == 8) || (l_U48 == 7))
                    {
                        sub_699( "NS", "fail 4", 0 );
                        AUDIO_MUSIC_SUSPEND( 7000 );
                        PLAY_SCRIPT_STREAM_FRONTEND_INT( l_U79[2], 2 );
                        CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV2_CP_12", "VIG_17_F2_FAIL4_CAM", 1, l_U538, l_U541, l_U525, 500 );
                        sub_4137( ref l_U93, 4250, 1, 0 );
                        sub_4271( ref l_U93 );
                    }
                }
            }
        }
        if (l_U63 == 1)
        {
            if ((l_U48 == 8) || ((l_U48 == 6) || ((l_U48 == 4) || (l_U48 == 2))))
            {
                if (sub_4389( ref l_U65 ))
                {
                    SET_ARCADEMODE_EVENT( 3, l_U344 );
                    l_U63 = 0;
                }
            }
        }
        if ((l_U48 == 2) || (l_U48 == 1))
        {
            if (NOT (IS_PED_DEAD( sub_3362() )))
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( sub_3362(), 54 )) == 3)
                {
                    PED_FINISH_ACTION_INTENTION( sub_3362(), 54 );
                    START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "Blood_arterial_Slice_01_S", sub_3362(), 0.00000000, 0.00000000, 0.00000000, 45.00000000, 0.00000000, 90.00000000, 57704, 1 );
                }
            }
        }
        if ((l_U48 == 4) || (l_U48 == 3))
        {
            if (NOT (IS_PED_DEAD( sub_3362() )))
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( sub_3362(), 54 )) == 3)
                {
                    PED_FINISH_ACTION_INTENTION( sub_3362(), 54 );
                    APPLY_PLAYER_PRELOAD_VARIATION( sub_3362(), 1 );
                    START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "Blood_arterial_Slice_01_S", sub_3362(), 0.00000000, 0.00000000, 0.00000000, 45.00000000, 0.00000000, 90.00000000, 57704, 1 );
                }
            }
        }
        if (l_U48 == 8)
        {
            if (NOT (IS_PED_DEAD( l_U344 )))
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( sub_3362(), 54 )) == 3)
                {
                    PED_FINISH_ACTION_INTENTION( sub_3362(), 54 );
                    START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "Blood_arterial_Slice_01_S", l_U344, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 90.00000000, 60.00000000, 57704, 1 );
                }
            }
        }
        if (((DOES_PED_EXIST( sub_3362() )) == 1) AND (NOT (IS_PED_DEAD( sub_3362() ))))
        {
            if ((DOES_PED_EXIST( l_U344 )) == 1)
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( l_U344, 53 )) == 3)
                {
                    PED_FINISH_ACTION_INTENTION( l_U344, 53 );
                    sub_699( "NS", "Shooting player for the fail.", 0 );
                    if ((l_U48 == 6) || (l_U48 == 5))
                    {
                        START_PARTICLE_FX_LOOPED_ON_PED_BONE( "Blood_arterial_massive_01_S", sub_3362(), 0.15000000, 0.20000000, 0.12000000, -90.00000000, 0.00000000, 0.00000000, 3228, 1 );
                    }
                    if ((l_U48 == 8) || (l_U48 == 7))
                    {
                        START_PARTICLE_FX_LOOPED_ON_PED_BONE( "Blood_arterial_massive_01_S", sub_3362(), 0.00000000, 0.30000000, 0.00000000, -90.00000000, 0.00000000, 0.00000000, 3228, 1 );
                    }
                }
            }
        }
        if (NOT (IS_PED_DEAD( sub_3362() )))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( sub_3362(), 48 )) == 3)
            {
                PED_FINISH_ACTION_INTENTION( sub_3362(), 48 );
                sub_699( "NS", "kill Player", 0 );
                l_U50 = 1;
            }
        }
        if (NOT (IS_PED_DEAD( sub_3362() )))
        {
            if (IS_ANIMATED_CAMERA_PLAYING())
            {
                if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FAV2_CP_12", "VIG_17_F2_B_CAM" )) - 100))
                {
                    if (NOT (IS_PLAYER_DEAD( sub_3384() )))
                    {
                        SET_PLAYER_CONTROL( sub_3384(), 0, 0 );
                    }
                    l_U76 = 1;
                    PED_FINISH_ACTION_INTENTION( sub_3362(), 47 );
                    sub_699( "NS", "player Won", 0 );
                    l_U19 = 4;
                    l_U17 = 6;
                }
            }
        }
        if (l_U76 == 1)
        {
            if (((DOES_PED_EXIST( l_U311 )) == 1) AND ((IS_PED_DEAD( l_U311 )) == 0))
            {
                sub_699( "kja", "Gio Texture Swap to muddy", 0 );
                SET_PERSISTENT_PED_VARIATION_ENUM( l_U311, -386163738 );
                l_U76 = 0;
            }
        }
        if (l_U44 == 1)
        {
            if (PED_ANIM_EVENT_OLD( sub_3362(), 134217728 ))
            {
                if (NOT (IS_PED_DEAD( l_U344 )))
                {
                    CLEAR_ALL_PED_PROPS( l_U344 );
                }
                if (NOT (IS_PED_DEAD( sub_3362() )))
                {
                    SET_PED_PROP_INDEX( sub_3362(), 13, 2, 0, 255 );
                }
                l_U44 = 0;
            }
        }
        if (l_U45 == 1)
        {
            if (l_U48 == 8)
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( sub_3362(), 50 )) == 3)
                {
                    PED_FINISH_ACTION_INTENTION( sub_3362(), 50 );
                    if (NOT (IS_PED_DEAD( sub_3362() )))
                    {
                        CLEAR_ALL_PED_PROPS( sub_3362() );
                    }
                    if (NOT (IS_PED_DEAD( l_U344 )))
                    {
                        SET_PED_PROP_INDEX( l_U344, 13, 0, -1, 255 );
                    }
                    SET_ARCADEMODE_EVENT( 3, l_U344 );
                    l_U45 = 0;
                }
            }
        }
        if (l_U46 == 1)
        {
            if (PED_ANIM_EVENT_OLD( sub_3362(), 268435456 ))
            {
                if (NOT (IS_PED_DEAD( l_U344 )))
                {
                    REMOVE_ALL_PED_WEAPONS( l_U344 );
                }
                if (NOT (IS_PED_DEAD( sub_3362() )))
                {
                    CLEAR_ALL_PED_PROPS( sub_3362() );
                    if ((sub_43090( ref l_U274 )) == 0)
                    {
                        sub_19664( sub_3362(), 68019059, 25000, 0, 0 );
                    }
                }
                l_U44 = 0;
            }
        }
        if ((PED_GET_ACTION_INTENTION_STATUS( sub_3362(), 51 )) == 3)
        {
            PED_FINISH_ACTION_INTENTION( sub_3362(), 51 );
            sub_699( "NS", "REMOVE PLAYER WEAPON", 0 );
            if (NOT (IS_PED_DEAD( sub_3362() )))
            {
                REMOVE_ALL_PED_WEAPONS( sub_3362() );
            }
        }
        if ((PED_GET_ACTION_INTENTION_STATUS( sub_3362(), 52 )) == 3)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( l_U344, 1283185433 );
            SET_PLAYER_CONTROL( sub_3384(), 0, 0 );
            PED_FINISH_ACTION_INTENTION( sub_3362(), 52 );
            sub_699( "NS", "play success cam", 0 );
            if (l_U75 == 0)
            {
                AUDIO_MUSIC_REQUEST_ONESHOT( "FAV2_ONESHOT_L", 0 );
                sub_4271( ref l_U84 );
                l_U75 = 1;
            }
        }
        if (l_U53 == 0)
        {
            if ((sub_4389( ref l_U84 )) == 1)
            {
                AUDIO_MUSIC_PLAY_ONESHOT();
                AUDIO_MUSIC_SUSPEND( 10000 );
                l_U53 = 1;
            }
        }
        if ((sub_4389( ref l_U93 )) == 1)
        {
            KNOCK_OFF_PROP_AT_ANCHOR_POINT( sub_3362(), 13 );
        }
        sub_43635();
        break;
        case 6:
        if (IS_ARCADE_MODE_ACTIVE() == 1)
        {
            DISPLAY_ARCADE_MODE_LEVEL_END( "s_busdep" );
            DO_SCREEN_FADE_IN( 0 );
            l_U17 = 7;
        }
        else if (sub_37683() == 1)
        {
            sub_5670( 0 );
            sub_45285();
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        break;
        case 7:
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        break;
    }
    return;
}

void sub_21913()
{
    switch (l_U568)
    {
        case 0:
        sub_699( "CCB", "eCleanBillHealth - STATE_CHALLENGE_IDLE", 0 );
        l_U568 = 1;
        break;
        case 1:
        if (l_U17 >= 4)
        {
            if (NOT (IS_PED_DEAD( sub_3362() )))
            {
                if ((PED_GET_ACTION_INTENTION_STATUS( sub_3362(), 47 )) == 3)
                {
                    sub_699( "CCB", "The player completed Favela2...", 0 );
                    SCRIPT_VAR_HASH_SET_INT( -1375770305, 1 );
                    sub_699( "CCB", "eCleanBillHealth - STATE_CHALLENGE_COMPLETE", 0 );
                    l_U568 = 2;
                }
            }
            if (SCRIPT_VAR_HASH_EXISTS( 1701971384 ))
            {
                SCRIPT_VAR_HASH_SET_INT( 1701971384, 1 );
            }
            else
            {
                sub_699( "CCB", "The OldPainless script variable is NOT valid!!!", 0 );
            }
        }
        break;
        case 2: break;
    }
    return;
}

void sub_22399(unknown uParam0)
{
    sub_699( "NS", "P_LOAD_PRE_CUTSCENE_ASSETS", 0 );
    sub_22456( -1415227013, uParam0 );
    sub_22456( -356399194, uParam0 );
    sub_22456( -1158470756, uParam0 );
    sub_22456( -1415982292, uParam0 );
    sub_22456( 975934894, uParam0 );
    sub_22676( g_U1308, uParam0 );
    sub_22746( -37981725, uParam0 );
    if (NOT (CUTSCENE_IS_LOADED( "09_03_FAV2_CONCAT" )))
    {
        sub_22996( "09_03_FAV2_CONCAT", uParam0 );
    }
    return;
}

void sub_22456(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_19335( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_22676(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_22746(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_22996(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_23262(unknown uParam0)
{
    sub_699( "NS", "P_LOAD_GAMEPLAY_ASSETS_1", 0 );
    sub_22456( -356399194, uParam0 );
    sub_22456( -693003798, uParam0 );
    return;
}

void sub_23343(unknown uParam0)
{
    sub_699( "NS", "P_LOAD_GAMEPLAY_ASSETS_2", 0 );
    sub_22456( -1415227013, uParam0 );
    sub_22456( -1290003862, uParam0 );
    sub_22746( -37981725, uParam0 );
    sub_22746( -1739192333, uParam0 );
    STOP_SCRIPT_STREAM( 0 );
    STOP_SCRIPT_STREAM( 1 );
    STOP_SCRIPT_STREAM( 2 );
    STOP_SCRIPT_STREAM( 3 );
    sub_23513( "SCRIPT_MISSION\S_FAV2_BOSS_SUCCESS_01", uParam0 );
    sub_23513( "SCRIPT_MISSION\S_FAV2_BOSS_SUCCESS_02", uParam0 );
    sub_23662( "s_fav2_boss_Fail_int12", l_U79[0], uParam0 );
    sub_23662( "s_fav2_boss_Fail_int34", l_U79[2], uParam0 );
    return;
}

void sub_23513(unknown uParam0, int iParam1)
{
    LOAD_SCRIPT_AUDIO_BANK( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_23662(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 == 0)
    {
        REQUEST_SCRIPT_STREAM( uParam0, uParam1 );
    }
    else
    {
        while ((LOAD_SCRIPT_STREAM( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

int sub_23794()
{
    if ((HAS_CUTSCENE_LOADED()) AND (((ISEQ_GET_STATE( -37981725 )) == 2) AND ((HAS_WEAPON_LOADED( g_U1308 )) AND ((HAS_MODEL_LOADED( 975934894 )) AND ((HAS_MODEL_LOADED( -1415982292 )) AND ((HAS_MODEL_LOADED( -1158470756 )) AND ((HAS_MODEL_LOADED( -356399194 )) AND (HAS_MODEL_LOADED( -1415227013 )))))))))
    {
        return 1;
    }
    sub_699( "NS", "F_ARE_PRE_CUTSCENE_ASSETS_LOADED = false", 0 );
    return 0;
}

int sub_23990()
{
    unknown uVar2;
    unknown uVar3;
    int iVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    switch (l_U18)
    {
        case 0: break;
        case 4:
        sub_699( "NS", "CUTSCENE_SETUP", 0 );
        if (l_U571 == 0)
        {
            sub_6227( l_U344 );
            l_U344 = sub_24109( ref l_U345 );
            if (((IS_PED_DEAD( l_U344 )) == 0) AND ((DOES_PED_EXIST( l_U344 )) == 1))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U344, 1 );
                SET_PED_NAME_DEBUG( l_U344, "piVig17" );
                FREEZE_PED_POSITION( l_U344, 1 );
            }
            l_U571++;
        }
        else if (l_U571 == 1)
        {
            sub_6227( l_U325 );
            l_U325 = sub_24109( ref l_U326 );
            if (((IS_PED_DEAD( l_U325 )) == 0) AND ((DOES_PED_EXIST( l_U325 )) == 1))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U325, 1 );
                SET_PED_NAME_DEBUG( l_U325, "piMarcelo" );
                FREEZE_PED_POSITION( l_U325, 1 );
            }
            l_U571++;
        }
        else if (l_U571 == 2)
        {
            if (l_U572 != l_U179)
            {
                sub_6227( l_U179[l_U572] );
                l_U179[l_U572] = sub_24109( ref l_U139[l_U572] );
                if (((IS_PED_DEAD( l_U179[l_U572] )) == 0) AND ((DOES_PED_EXIST( l_U179[l_U572] )) == 1))
                {
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U179[l_U572], 1 );
                    sub_19664( l_U179[l_U572], g_U1308, 25000, 0, 0 );
                    FREEZE_PED_POSITION( l_U179[l_U572], 1 );
                }
                l_U572++;
            }
            else
            {
                sub_25223( ref l_U179, "pi0903Ufe" );
                l_U571++;
            }
        }
        else if (l_U571 == 3)
        {
            sub_6533( l_U241 );
            l_U241 = sub_25386( -1415982292, -128.68800000, 442.94910000, -24.31484000, 180.00000000, 0, 0, 0 );
            if (((IS_VEHICLE_DEAD( l_U241 )) == 0) AND ((DOES_VEHICLE_EXIST( l_U241 )) == 1))
            {
                SET_VEHICLE_ON_GROUND_PROPERLY( l_U241 );
                SET_VEHICLE_ENGINE_ON( l_U241, 1, 1 );
                SET_VEHICLE_LIGHTS( l_U241, 1 );
                SET_VEHICLE_COLOUR_COMBINATION( l_U241, 0 );
                FREEZE_VEHICLE_POSITION( l_U241, 1 );
            }
            l_U571++;
        }
        else if (l_U571 == 4)
        {
            sub_6533( l_U242 );
            l_U242 = sub_25386( 975934894, -128.68800000, 442.94910000, -24.31484000, 180.00000000, 0, 0, 0 );
            if (((IS_VEHICLE_DEAD( l_U242 )) == 0) AND ((DOES_VEHICLE_EXIST( l_U242 )) == 1))
            {
                SET_VEHICLE_ON_GROUND_PROPERLY( l_U242 );
                SET_VEHICLE_ENGINE_ON( l_U242, 1, 1 );
                SET_VEHICLE_COLOUR_COMBINATION( l_U242, 0 );
                FREEZE_VEHICLE_POSITION( l_U242, 1 );
            }
            l_U571++;
        }
        else if (l_U571 == 5)
        {
            sub_25903();
            l_U51 = 1;
            l_U18 = 3;
        };;;;;;
        break;
        case 3:
        if (g_U1044 == 1)
        {
            if (DOES_PED_EXIST( sub_3362() ))
            {
                CUTSCENE_REGISTER_PED_TELEPORT( sub_3362(), -108.04000000, 438.52000000, -26.56000000, 135.00000000 );
                ISEQ_REGISTER_ENTITY( -37981725, "PLAYER", sub_3362(), 0 );
            }
            if (((IS_PED_DEAD( l_U124 )) == 0) AND ((DOES_PED_EXIST( l_U124 )) == 1))
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U124, "Bach_Unif", 0 );
            }
            if (((IS_PED_DEAD( l_U344 )) == 0) AND ((DOES_PED_EXIST( l_U344 )) == 1))
            {
                CUTSCENE_REGISTER_PED_TELEPORT( l_U344, l_U345._fU0, l_U345._fU12 );
                ISEQ_REGISTER_ENTITY( -37981725, "ENEMY", l_U344, 0 );
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U344, "Milo_Unif", 0 );
                FREEZE_PED_POSITION( l_U344, 0 );
            }
            if (((IS_PED_DEAD( l_U138 )) == 0) AND ((DOES_PED_EXIST( l_U138 )) == 1))
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U138, "Sero_Unif_2", 0 );
            }
            if (((IS_PED_DEAD( l_U325 )) == 0) AND ((DOES_PED_EXIST( l_U325 )) == 1))
            {
                CUTSCENE_REGISTER_PED_TELEPORT( l_U325, l_U326._fU0, l_U326._fU12 );
                ISEQ_REGISTER_ENTITY( -37981725, "MARCELO", l_U325, 0 );
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U325, "Marc_Fav2", 0 );
                FREEZE_PED_POSITION( l_U325, 0 );
            }
            if (((IS_PED_DEAD( l_U311 )) == 0) AND ((DOES_PED_EXIST( l_U311 )) == 1))
            {
                CUTSCENE_REGISTER_PED_TELEPORT( l_U311, l_U312._fU0, l_U312._fU12 );
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U311, "Giov_Fav", 0 );
            }
            if (((IS_PED_DEAD( l_U179[0] )) == 0) AND ((DOES_PED_EXIST( l_U179[0] )) == 1))
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U179[0], "M_F2_UFE_I", 1 );
                uVar11 = GET_WEAPON_FROM_HAND( l_U179[0], 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
                {
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar11, "W_AR_G36K_Aa_H", 0 );
                }
                FREEZE_PED_POSITION( l_U179[0], 0 );
            }
            if (((IS_PED_DEAD( l_U179[1] )) == 0) AND ((DOES_PED_EXIST( l_U179[1] )) == 1))
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U179[1], "M_F2_UFE_I^1", 0 );
                uVar11 = GET_WEAPON_FROM_HAND( l_U179[1], 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
                {
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar11, "W_AR_G36K_Aa_H^1", 0 );
                }
                FREEZE_PED_POSITION( l_U179[1], 0 );
            }
            if (((IS_PED_DEAD( l_U179[2] )) == 0) AND ((DOES_PED_EXIST( l_U179[2] )) == 1))
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U179[2], "M_F2_UFE_I^2", 0 );
                uVar11 = GET_WEAPON_FROM_HAND( l_U179[2], 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
                {
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar11, "W_AR_G36K_Aa_H^2", 0 );
                }
                FREEZE_PED_POSITION( l_U179[2], 0 );
            }
            if (((IS_PED_DEAD( l_U210[0] )) == 0) AND ((DOES_PED_EXIST( l_U210[0] )) == 1))
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U210[0], "M_F2_MCP_A", 0 );
                uVar11 = GET_WEAPON_FROM_HAND( l_U210[0], 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
                {
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar11, "w_SG_SX3_Aa_H", 0 );
                }
            }
            if (((IS_PED_DEAD( l_U210[1] )) == 0) AND ((DOES_PED_EXIST( l_U210[1] )) == 1))
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U210[1], "M_F2_MCP_A^1", 0 );
            }
            if (((IS_PED_DEAD( l_U226 )) == 0) AND ((DOES_PED_EXIST( l_U226 )) == 1))
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U226, "M_F2_MISC_B", 0 );
            }
            if (((IS_PED_DEAD( l_U240 )) == 0) AND ((DOES_PED_EXIST( l_U240 )) == 1))
            {
                REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U240, "F_F2_MISC_B", 0 );
            }
            if (((IS_VEHICLE_DEAD( l_U241 )) == 0) AND ((DOES_VEHICLE_EXIST( l_U241 )) == 1))
            {
                REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U241, "van_plc", 0 );
                FREEZE_VEHICLE_POSITION( l_U241, 0 );
            }
            if (((IS_VEHICLE_DEAD( l_U242 )) == 0) AND ((DOES_VEHICLE_EXIST( l_U242 )) == 1))
            {
                REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U242, "cavierao", 0 );
                FREEZE_VEHICLE_POSITION( l_U242, 0 );
            }
            if (NOT (IS_PED_DEAD( sub_3362() )))
            {
                REMOVE_ALL_PED_WEAPONS( sub_3362() );
                CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( sub_3362(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
            }
            if (DOES_OBJECT_EXIST( l_U339[0] ))
            {
                ISEQ_REGISTER_ENTITY( -37981725, "TIRE0", l_U339[0], 1 );
                REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( l_U339[0], "cs_f2_tire_Aa", 0 );
            }
            if (DOES_OBJECT_EXIST( l_U339[1] ))
            {
                ISEQ_REGISTER_ENTITY( -37981725, "TIRE1", l_U339[1], 1 );
                REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( l_U339[1], "cs_f2_tire_Aa^1", 0 );
            }
            if (DOES_OBJECT_EXIST( l_U339[2] ))
            {
                ISEQ_REGISTER_ENTITY( -37981725, "TIRE2", l_U339[2], 1 );
                REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( l_U339[2], "cs_f2_tire_Aa^2", 0 );
            }
            if (DOES_OBJECT_EXIST( l_U339[3] ))
            {
                ISEQ_REGISTER_ENTITY( -37981725, "TIRE3", l_U339[3], 1 );
                REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( l_U339[3], "cs_f2_tire_Aa^3", 0 );
            }
            REGISTER_HIDE_ENTITY_AT_POSITION( g_U1219._fU0, g_U1219._fU4 );
            REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_F2_GCS_I", 482320223 );
            REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_F2_GCS_I^1", -1670508694 );
            REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_F2_MISC_B", -1876547275 );
            REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_F2_MISC_B^1", 963114223 );
            REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_F2_MISC_B", 24349928 );
            REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_F2_MISC_B^1", 1748289110 );
            CUTSCENE_REGISTER_ISEQ( -37981725 );
            CUTSCENE_ENABLE_SKIP( 0 );
            START_SEAMLESS_CUTSCENE();
            l_U18 = 5;
        }
        break;
        case 5:
        sub_699( "SP", "eOpeningCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        g_U1047 = 1;
        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        AUDIO_MUSIC_SUSPEND( 10000 );
        sub_28701( 1, 0, 0, 1 );
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        l_U18 = 6;
        sub_699( "SP", "eOpeningCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 6:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            if (l_U30 == 1)
            {
                CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 0 );
                LOAD_SCENE( g_U783[10] );
                if (l_U36 == 0)
                {
                    l_U36 = 1;
                }
                if (l_U57 == 0)
                {
                    STOP_PARTICLE_FX_LOOPED( l_U567 );
                    l_U57 = 1;
                }
                if (NOT (IS_PED_DEAD( l_U325 )))
                {
                    REMOVE_PARTICLE_FX_FROM_PED( l_U325 );
                }
            }
            sub_29069();
            CLEAR_NAMED_CUTSCENE( "09_03_FAV2_CONCAT" );
            REMOVE_PARTICLE_FX( l_U567 );
            return 1;
        }
        else
        {
            uVar2 = GET_CUTSCENE_SECTION_PLAYING();
            uVar3 = GET_CUTSCENE_TIME();
            iVar4 = GET_CUTSCENE_TIME_MS();
            if (l_U54 == 0)
            {
                if (iVar4 > 149760)
                {
                    sub_699( "ka", "WE SHOULD UNLOAD UFE, CS, TRUCK", 0 );
                    sub_6227( l_U226 );
                    sub_6227( l_U240 );
                    sub_6227( l_U210[0] );
                    sub_6441( ref l_U179 );
                    sub_6533( l_U241 );
                    sub_6533( l_U242 );
                    sub_29126( -1731587863 );
                    sub_29126( -1224510077 );
                    sub_29126( -1158470756 );
                    sub_29126( -1415982292 );
                    sub_29126( 975934894 );
                    sub_29327( g_U1308 );
                    l_U54 = 1;
                }
            }
            if (l_U55 == 0)
            {
                if (iVar4 > l_U542)
                {
                    sub_699( "SA", "Triggering SFX: MPM_Tire_Burn_S", 0 );
                    START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "MPM_Tire_Burn_S", l_U325, l_U543, l_U546, 0, l_U549 );
                    l_U55 = 1;
                }
            }
            if (l_U56 == 0)
            {
                if (iVar4 > l_U550)
                {
                    sub_699( "SA", "Triggering SFX: MPM_Tire_Burn_02_S", 0 );
                    l_U567 = START_PARTICLE_FX_LOOPED_ON_PED_BONE( "MPM_Tire_Burn_02_S", l_U325, l_U551, l_U554, 0, l_U557 );
                    l_U56 = 1;
                }
            }
            if (l_U57 == 0)
            {
                if (iVar4 > l_U558)
                {
                    sub_699( "SA", "Stopping SFX: MPM_Tire_Burn_02_S", 0 );
                    REMOVE_PARTICLE_FX( l_U567 );
                    l_U57 = 1;
                }
            }
            if (l_U52 == 1)
            {
                if (iVar4 > 174876)
                {
                    if (((IS_PED_DEAD( l_U325 )) == 0) AND ((DOES_PED_EXIST( l_U325 )) == 1))
                    {
                        sub_699( "NS", "Marchello Texture Swap to Burnt", 0 );
                        SET_PERSISTENT_PED_VARIATION_ENUM( l_U325, -1143874999 );
                        l_U52 = 0;
                    }
                }
            }
            if (l_U58 == 0)
            {
                if (iVar4 > l_U559)
                {
                    sub_699( "SA", "Triggering SFX: MPM_Tire_Burn_02_S", 0 );
                    l_U567 = START_PARTICLE_FX_LOOPED_ON_PED_BONE( "MPM_Tire_Burn_02_S", l_U325, l_U551, l_U554, 0, l_U557 );
                    l_U58 = 1;
                }
            }
            if (l_U37 == 0)
            {
                if (iVar4 >= 172750)
                {
                    AUDIO_MUSIC_FORCE_TRACK( "FAV2_SONG_01", "FAV2_4", "", 0.00000000, 3000, 5000, -1082130432, 0 );
                    l_U37 = 1;
                }
            }
            if (l_U38 == 0)
            {
                if (iVar4 >= 180018)
                {
                    l_U38 = 1;
                }
            }
            if ((IS_SCREEN_FADED_OUT() == 1) || (IS_SCREEN_FADING_OUT() == 1))
            {
                CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
                l_U30 = 1;
            }
            if (l_U31 == 0)
            {
                if (iVar4 >= 160760)
                {
                    sub_23262( 0 );
                    l_U31 = 1;
                }
            }
            if (l_U33 == 0)
            {
                if (l_U31 == 1)
                {
                    if (sub_30450() == 1)
                    {
                        sub_23343( 0 );
                        l_U32 = 1;
                        l_U33 = 1;
                    }
                }
            }
            if (l_U32 == 1)
            {
                ;
            }
            if (l_U35 == 1)
            {
                if (l_U33 == 1)
                {
                    if (l_U32 == 1)
                    {
                        if (sub_30579() == 1)
                        {
                            CUTSCENE_ENABLE_SKIP( 1 );
                            sub_699( "NS", "Gameplay assets are loaded!!!", 0 );
                            l_U34 = 1;
                            l_U35 = 0;
                        }
                    }
                }
            }
            if (l_U36 == 0)
            {
                if (l_U34 == 1)
                {
                    l_U36 = 1;
                }
            }
        }
        break;
    }
    return 0;
}

void sub_24109(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_22456( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_24588( iParam0->_fU40 );
    sub_24668( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_24588(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_24668(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_25223(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_25386(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_22456( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_25903()
{
    int I;

    sub_699( "NS", "P_CREATE_MARCHELO_TIRES()", 0 );
    sub_6325( ref l_U339 );
    l_U339[0] = sub_26001( -1290003862, -107.55400000, 435.73900000, -25.53700000, 0.00000000, 0.00000000, 145.39100000, 0, 1, 0 );
    l_U339[1] = sub_26001( -1290003862, -107.44900000, 435.74800000, -25.86800000, 0.00000000, 0.00000000, 146.48300000, 0, 1, 0 );
    l_U339[2] = sub_26001( -1290003862, -107.47000000, 435.93000000, -26.18000000, 0.00000000, 0.00000000, 146.48300000, 0, 1, 0 );
    l_U339[3] = sub_26001( -1290003862, -107.39000000, 435.75000000, -26.52000000, 0.00000000, 0.00000000, 146.48300000, 0, 1, 0 );
    for ( I = 0; I < 4; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U339[I] ))
        {
            FREEZE_OBJECT_POSITION( l_U339[I], 1 );
            SET_OBJECT_COLLISION( l_U339[I], 0 );
        }
    }
    return;
}

void sub_26001(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_22456( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_28701(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_3362() )))
        {
            SET_PLAYER_CONTROL( sub_3384(), 0, uParam2 );
            SET_PED_DUCKING( sub_3362(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_3362() );
            }
            SET_PED_INVINCIBLE( sub_3362(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_29069()
{
    sub_699( "NS", "P_UNLOAD_PRE_CUTSCENE_ASSETS", 0 );
    sub_29126( -760991695 );
    sub_29126( 1437984777 );
    sub_29126( -1158470756 );
    sub_29126( -995917300 );
    sub_29126( -1731587863 );
    sub_29126( -1415982292 );
    sub_29126( 975934894 );
    sub_29327( g_U1308 );
    return;
}

void sub_29126(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_19335( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_29327(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}

void sub_30450()
{
    int Result;

    Result = 0;
    if ((HAS_MODEL_LOADED( -693003798 )) AND (HAS_MODEL_LOADED( -356399194 )))
    {
        Result = 1;
    }
    return Result;
}

void sub_30579()
{
    int Result;

    Result = 0;
    if (((LOAD_SCRIPT_STREAM( "S_FAV2_BOSS_FAIL_INT34", l_U79[2] )) == 1) AND (((LOAD_SCRIPT_STREAM( "S_FAV2_BOSS_FAIL_INT12", l_U79[0] )) == 1) AND (((REQUEST_SCRIPT_AUDIO_BANK( "SCRIPT_MISSION\S_FAV2_BOSS_SUCCESS_02" )) == 1) AND (((REQUEST_SCRIPT_AUDIO_BANK( "SCRIPT_MISSION\S_FAV2_BOSS_SUCCESS_01" )) == 1) AND (((ISEQ_QUERY_STATE( -1739192333, 2 )) == 1) AND (((ISEQ_QUERY_STATE( -37981725, 2 )) == 1) AND ((HAS_MODEL_LOADED( -1290003862 )) AND (HAS_MODEL_LOADED( -1415227013 )))))))))
    {
        Result = 1;
    }
    return Result;
}

int sub_30984()
{
    switch (l_U28)
    {
        case 0: break;
        case 1:
        sub_699( "NS", "BLEND_SETUP", 0 );
        if (l_U51 == 0)
        {
            sub_6227( l_U344 );
            l_U344 = sub_24109( ref l_U345 );
            while ((IS_PED_DEAD( l_U344 )) || (NOT (DOES_PED_EXIST( l_U344 ))))
            {
                sub_699( "NS", " waiting for ped", 0 );
            }
        }
        if (NOT (IS_PED_DEAD( l_U344 )))
        {
            REMOVE_ALL_PED_WEAPONS( l_U344 );
            CLEAR_ALL_PED_PROPS( l_U344 );
            SET_PED_PROP_INDEX( l_U344, 13, 0, -1, 255 );
            SET_PED_INVINCIBLE( l_U344, 1 );
            SET_PED_PROOFS( l_U344, 1, 1, 1, 1, 1 );
        }
        sub_19019( l_U344, 68019059, 1, 25000, 0 );
        if (l_U51 == 0)
        {
            sub_6227( l_U311 );
            l_U311 = sub_24109( ref l_U312 );
        }
        if (NOT (IS_PED_DEAD( l_U311 )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U311, 1 );
            SET_PED_INVINCIBLE( l_U311, 1 );
            SET_PED_PROOFS( l_U311, 1, 1, 1, 1, 1 );
        }
        if (l_U51 == 0)
        {
            sub_6227( l_U325 );
            l_U325 = sub_24109( ref l_U326 );
        }
        if (NOT (IS_PED_DEAD( l_U325 )))
        {
            SET_PED_INVINCIBLE( l_U325, 1 );
            SET_PED_PROOFS( l_U325, 1, 1, 1, 1, 1 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U325, 1 );
            SET_PERSISTENT_PED_VARIATION_ENUM( l_U325, -1143874999 );
            SET_PED_NAME_DEBUG( l_U325, "piMarcelo" );
        }
        if (l_U51 == 0)
        {
            sub_25903();
        }
        else if (DOES_OBJECT_EXIST( l_U339[0] ))
        {
            SET_OBJECT_COORDS( l_U339[0], -107.55400000, 435.73900000, -25.53700000 );
            SET_OBJECT_ROTATION( l_U339[0], 0.00000000, 0.00000000, 145.39100000 );
        }
        if (DOES_OBJECT_EXIST( l_U339[1] ))
        {
            SET_OBJECT_COORDS( l_U339[1], -107.44900000, 435.74800000, -25.86800000 );
            SET_OBJECT_ROTATION( l_U339[1], 0.00000000, 0.00000000, 146.48300000 );
        }
        if (DOES_OBJECT_EXIST( l_U339[2] ))
        {
            SET_OBJECT_COORDS( l_U339[2], -107.47000000, 435.93000000, -26.18000000 );
            SET_OBJECT_ROTATION( l_U339[2], 0.00000000, 0.00000000, 146.48300000 );
        }
        if (DOES_OBJECT_EXIST( l_U339[3] ))
        {
            SET_OBJECT_COORDS( l_U339[3], -107.39000000, 435.75000000, -26.52000000 );
            SET_OBJECT_ROTATION( l_U339[3], 0.00000000, 0.00000000, 146.48300000 );
        }
        if (NOT (IS_PED_DEAD( sub_3362() )))
        {
            SET_PED_INVINCIBLE( sub_3362(), 1 );
            SET_PED_PROOFS( sub_3362(), 1, 1, 1, 1, 1 );
        }
        if (l_U51 == 0)
        {
            if ((ISEQ_IS_LOADED( -37981725 )) == 1)
            {
                sub_21649( sub_3362(), -108.04000000, 438.52000000, -26.56000000, 135.00000000 );
                sub_21649( l_U344, l_U345._fU0, l_U345._fU12 );
                sub_21649( l_U311, l_U312._fU0, l_U312._fU12 );
                sub_21649( l_U325, l_U326._fU0, l_U326._fU12 );
                ISEQ_REGISTER_ENTITY( -37981725, "PLAYER", sub_3362(), 0 );
                ISEQ_REGISTER_ENTITY( -37981725, "ENEMY", l_U344, 0 );
                ISEQ_REGISTER_ENTITY( -37981725, "MARCELO", l_U325, 0 );
                ISEQ_REGISTER_ENTITY( -37981725, "TIRE0", l_U339[0], 1 );
                ISEQ_REGISTER_ENTITY( -37981725, "TIRE1", l_U339[1], 1 );
                ISEQ_REGISTER_ENTITY( -37981725, "TIRE2", l_U339[2], 1 );
                ISEQ_REGISTER_ENTITY( -37981725, "TIRE3", l_U339[3], 1 );
                ISEQ_START( -37981725 );
            }
        }
        ISEQ_REGISTER_ENTITY( -1739192333, "GIO", l_U311, 0 );
        ISEQ_START( -1739192333 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV2_CP_12", "VIG_17_F2_B_CAM", 1, -106.81560000, 438.85330000, -25.12000000, 0.00000000, 0, 0 );
        DISPLAY_HUD( 0 );
        if (NOT (IS_PED_DEAD( l_U344 )))
        {
            if (NOT (IS_PED_DEAD( sub_3362() )))
            {
                TASK_MELEE_GRAPPLE( sub_3362(), l_U344, 0 );
            }
        }
        l_U77 = START_PARTICLE_FX_LOOPED_ON_PED_BONE( "MPM_Tire_Burn_02_S", l_U325, l_U551, l_U554, 0, l_U557 );
        sub_4137( ref l_U102, 100, 1, 0 );
        sub_4271( ref l_U102 );
        l_U28 = 2;
        break;
        case 2:
        sub_699( "NS", "BLEND_FIRST_FRAME", 0 );
        if ((sub_4389( ref l_U102 )) == 1)
        {
            sub_699( "NS", "made the cam", 0 );
            l_U524 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
            SETUP_BULLET_CAMERA_ANIM_SCENE( l_U524, sub_3362(), l_U344 );
            DO_SCREEN_FADE_IN( 0 );
            if (NOT (IS_PED_DEAD( l_U311 )))
            {
                sub_699( "SA", "Gio - act int 03", 0 );
                PED_SET_ACTION_INTENTION( l_U311, 49, 1000, 0.00000000, 0.00000000, 0.00000000 );
            }
            l_U28 = 3;
        }
        break;
        case 3:
        return 1;
        break;
    }
    return 0;
}

void sub_32864()
{
    sub_699( "NS", "P_Start_GamePlay()", 0 );
    if (NOT (IS_PED_DEAD( sub_3362() )))
    {
        REMOVE_ALL_PED_WEAPONS( sub_3362() );
        CLEAR_ALL_PED_PROPS( sub_3362() );
    }
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    sub_32957();
    return;
}

void sub_32957()
{
    sub_699( "CCB", "P_START_SP_CHALLENGES", 0 );
    return;
}

void sub_33057(int iParam0, int iParam1, unknown uParam2)
{
    sub_699( "CO", "CO_HANDLE_SAVEDATA : Saving Data", 0 );
    if ((g_U782 < iParam1) || (NOT iParam0->_fU0))
    {
        sub_699( "CO", "CO_HANDLE_SAVEDATA : Saved Data", 0 );
        sub_33226( iParam0, iParam1, sub_3362(), g_U783[iParam1], g_U910[iParam1], g_U953[iParam1], g_U996[iParam1], uParam2 );
    }
    g_U782 = iParam1;
    sub_36856( g_U782 );
    return;
}

void sub_33226(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_699( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_699( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_20320( iParam1 );
        sub_33485( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_33936( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_33936( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34168( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_33936( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34168( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_34168( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_33936( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34168( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_34168( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_34168( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_33936( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_34168( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_34168( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_34168( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_34168( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_35726( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, g_U666, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_699( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_33485(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_17682( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_699( "TEH", "Ending context", 0 );
        sub_699( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_33936(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_34168(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_35726(int iParam0)
{
    sub_19335( "CHECKPOINT DATA" );
    sub_35765( iParam0->_fU4 );
    sub_35788( iParam0->_fU16 );
    sub_35788( iParam0->_fU20 );
    sub_35788( iParam0->_fU24 );
    sub_35831( iParam0->_fU28 );
    sub_35831( iParam0->_fU56 );
    sub_35831( iParam0->_fU60 );
    sub_35831( iParam0->_fU64 );
    sub_35831( iParam0->_fU68 );
    sub_35831( iParam0->_fU72 );
    sub_35831( iParam0->_fU76 );
    sub_35831( iParam0->_fU80 );
    sub_35831( iParam0->_fU84 );
    sub_35831( iParam0->_fU88 );
    sub_35831( iParam0->_fU92 );
    sub_35788( iParam0->_fU32 );
    sub_35831( iParam0->_fU36 );
    sub_35831( iParam0->_fU40 );
    sub_35831( iParam0->_fU44 );
    sub_35788( iParam0->_fU136 );
    sub_36036( iParam0->_fU140 );
    sub_35831( iParam0->_fU52 );
    sub_19335( "---nRightHolsterAttachmentEnabled: " );
    sub_35831( iParam0->_fU96 );
    sub_19335( "---nRightHolsterAttachmentToggled: " );
    sub_35831( iParam0->_fU100 );
    sub_19335( "---nLeftHolsterAttachmentEnabled: " );
    sub_35831( iParam0->_fU104 );
    sub_19335( "---nLeftHolsterAttachmentToggled: " );
    sub_35831( iParam0->_fU108 );
    sub_19335( "---nRifleHolsterAttachmentEnabled: " );
    sub_35831( iParam0->_fU112 );
    sub_19335( "---nRifleHolsterAttachmentToggled: " );
    sub_35831( iParam0->_fU116 );
    sub_19335( "---nRightHandAttachmentEnabled: " );
    sub_35831( iParam0->_fU120 );
    sub_19335( "---nRightHandAttachmentToggled: " );
    sub_35831( iParam0->_fU124 );
    sub_19335( "---nLeftHandAttachmentEnabled: " );
    sub_35831( iParam0->_fU128 );
    sub_19335( "---nLeftHandAttachmentToggled: " );
    sub_35831( iParam0->_fU132 );
    sub_35831( g_U666 );
    sub_35831( 144 );
    return;
}

void sub_35765(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_35788(unknown uParam0)
{
    return;
}

void sub_35831(unknown uParam0)
{
    return;
}

void sub_36036(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_36856(unknown uParam0)
{
    sub_699( "CO", "P_SETUP_INITIAL_TIMECYCLE", 0 );
    switch (uParam0)
    {
        case 0:
        case 1:
        case 2:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
        case 3:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 0 );
        break;
        case 4:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 10 );
        break;
        case 5:
        if (g_U1046 == 1)
        {
            sub_699( "kja", "MCE_UFE_RUN bTimeofDayReleased = TRUE", 0 );
            FREEZE_TIME_OF_DAY( 20, 10 );
            break;
        }
        sub_699( "kja", "MCE_UFE_RUN bTimeofDayReleased = FALSE: SO WE're SETTING WEATHER AND TOD TO 20:20", 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 20, 10 );
        case 6:
        case 7:
        case 8:
        if (g_U1046 == 1)
        {
            ;
        }
        else
        {
            SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
            SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
            FREEZE_TIME_OF_DAY( 21, 0 );
        }
        break;
        case 9:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 21, 0 );
        break;
        case 10:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 22, 0 );
        break;
        default:
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
    }
    return;
}

int sub_37683()
{
    unknown uVar2;
    unknown uVar3;
    int iVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    switch (l_U19)
    {
        case 0: break;
        case 1:
        if (NOT (sub_4033( ref l_U573 )))
        {
            sub_4137( ref l_U573, 5000, 1, 0 );
            sub_4271( ref l_U573 );
        }
        else if (sub_4389( ref l_U573 ))
        {
            sub_37814( 0 );
            l_U19 = 2;
        }
        break;
        case 2:
        if (sub_37956())
        {
            if (NOT (DOES_PED_EXIST( l_U243 )))
            {
                sub_6227( l_U243 );
                l_U243 = sub_24109( ref l_U244 );
                if (((IS_PED_DEAD( l_U243 )) == 0) AND ((DOES_PED_EXIST( l_U243 )) == 1))
                {
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U243, 1 );
                    SET_PED_NAME_DEBUG( l_U243, "pi0904Thug1" );
                    l_U257 = sub_19664( l_U243, -1074756423, 25000, 0, 0 );
                }
                sub_38221( l_U243 );
            }
            else
            {
                sub_6227( l_U258 );
                l_U258 = sub_24109( ref l_U259 );
                if (((IS_PED_DEAD( l_U258 )) == 0) AND ((DOES_PED_EXIST( l_U258 )) == 1))
                {
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U258, 1 );
                    SET_PED_NAME_DEBUG( l_U258, "pi0904Neves" );
                    l_U272 = sub_19664( l_U258, -862236369, 25000, 0, 1 );
                }
                sub_38221( l_U258 );
                l_U19 = 0;
            }
        }
        break;
        case 4:
        sub_699( "NS", "CUTSCENE_SETUP", 0 );
        DISPLAY_HUD( 0 );
        if (NOT (IS_PED_DEAD( sub_3362() )))
        {
            ;
        }
        sub_6227( l_U344 );
        sub_38533( l_U243 );
        sub_38533( l_U258 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U311, "Giov_Fav", 0 );
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U325, "Marc_Fav", 0 );
        if (((IS_PED_DEAD( l_U243 )) == 0) AND ((DOES_PED_EXIST( l_U243 )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U243, "M_F2_MCP_A1", 1 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U257, "W_SB_Uzi_Aa_H", 0 );
        }
        if (((IS_PED_DEAD( l_U258 )) == 0) AND ((DOES_PED_EXIST( l_U258 )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U258, "Nevs_Unif", 1 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( l_U272, "W_PI_Clt1911_Aa_H", 0 );
        }
        l_U78 = START_PARTICLE_FX_LOOPED_ON_PED_BONE( "MPM_Tire_Burn_02_S", l_U325, l_U551 + (vector( 0.00000000, 0.00000000, 1.00000000)), l_U554, 0, l_U557 );
        CUTSCENE_ENABLE_SKIP( 0 );
        DISABLE_FADE_BETWEEN_SP_LEVELS();
        AUD_ENABLE_PRE_BINK_SHUTDOWN( 1 );
        START_SEAMLESS_CUTSCENE();
        l_U19 = 5;
        break;
        case 5:
        sub_699( "SP", "eClosingCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        CAMERA_ANIMATED_STOP( 0, 0 );
        if (NOT (IS_PED_DEAD( sub_3362() )))
        {
            REMOVE_ALL_PED_WEAPONS( sub_3362() );
        }
        ISEQ_UNREGISTER_ENTITY( -37981725, "PLAYER" );
        ISEQ_UNREGISTER_ENTITY( -37981725, "ENEMY" );
        ISEQ_UNREGISTER_ENTITY( -37981725, "GIO" );
        ISEQ_UNREGISTER_ENTITY( -37981725, "MARCELO" );
        sub_5786( -37981725, 0 );
        sub_6325( ref l_U339 );
        DESTROY_ALL_CAMS();
        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        sub_28701( 1, 0, 0, 1 );
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        l_U19 = 6;
        sub_699( "SP", "eClosingCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 6:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            if (l_U39 == 1)
            {
                ;
            }
            REMOVE_PARTICLE_FX( l_U78 );
            CLEAR_NAMED_CUTSCENE( ref l_U20 );
            return 1;
        }
        else
        {
            uVar2 = GET_CUTSCENE_SECTION_PLAYING();
            uVar3 = GET_CUTSCENE_TIME();
            iVar4 = GET_CUTSCENE_TIME_MS();
            if (l_U43 == 0)
            {
                if (iVar4 >= 18427)
                {
                    sub_699( "kja", "APPLY THE MUDDY VARIATION STUFF ON MAX NOW - 18.47 SECONDS INTO CS", 0 );
                    APPLY_PLAYER_PRELOAD_VARIATION( sub_3362(), 2 );
                    l_U43 = 1;
                }
            }
            if ((IS_SCREEN_FADED_OUT() == 1) || (IS_SCREEN_FADING_OUT() == 1))
            {
                CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
                l_U39 = 1;
            }
        }
        break;
    }
    return 0;
}

void sub_37814(unknown uParam0)
{
    sub_699( "NS", "P_PRELOAD_09_04_FAV2", 0 );
    sub_22996( ref l_U20, uParam0 );
    sub_22456( -693003798, uParam0 );
    sub_22456( -356399194, uParam0 );
    sub_22456( 1844299595, uParam0 );
    sub_22456( -995917300, uParam0 );
    sub_22676( -1074756423, uParam0 );
    sub_22676( -862236369, uParam0 );
    return;
}

int sub_37956()
{
    if ((HAS_WEAPON_LOADED( -862236369 )) AND ((HAS_WEAPON_LOADED( -1074756423 )) AND ((HAS_MODEL_LOADED( -995917300 )) AND ((HAS_MODEL_LOADED( 1844299595 )) AND ((HAS_MODEL_LOADED( -356399194 )) AND ((HAS_MODEL_LOADED( -693003798 )) AND (CUTSCENE_IS_LOADED( ref l_U20 ))))))))
    {
        return 1;
    }
    return 0;
}

void sub_38221(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_38533(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_40130()
{
    sub_699( "NS", "Turn Off Tutorial Text", 0 );
    UI_SET( 15, 2, 1537, "animMainText", 257, 1 );
    return;
}

int sub_43090(unknown uParam0)
{
    sub_699( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            g_U665 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, g_U666 );
            sub_17464( uParam0, sub_3362() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_43635()
{
    if (l_U59 == 1)
    {
        sub_699( "ka", "Milo Rushes Max with Machete - Milo Dialogue Lines", 0 );
        sub_43725( ref l_U410 );
        sub_43813( 1, l_U344, "MILO_REGO", ref l_U410, 2, 0 );
        sub_44031( "SFV2_VIG17A", ref l_U410, 8, 1 );
        l_U59 = 0;
    }
    if (l_U60 == 1)
    {
        sub_699( "ka", "Max is dead, Milo Dialogue Lines", 0 );
        sub_43725( ref l_U420 );
        sub_43813( 1, l_U344, "MILO_REGO", ref l_U420, 2, 0 );
        sub_44031( "SFV2_VIG17B", ref l_U420, 8, 1 );
        l_U60 = 0;
    }
    if (l_U61 == 1)
    {
        sub_699( "ka", "Max is dead, Giovanna Dialogue Lines", 0 );
        sub_43725( ref l_U430 );
        sub_43813( 1, l_U311, "GIOVANNA", ref l_U430, 2, 0 );
        sub_44031( "SFV2_GVAF2", ref l_U430, 4, 1 );
        l_U61 = 0;
    }
    if (l_U62 == 1)
    {
        sub_699( "ka", "Max is dead, Giovanna Dialogue Lines", 0 );
        sub_43725( ref l_U440 );
        sub_43813( 1, l_U311, "GIOVANNA", ref l_U440, 2, 0 );
        sub_44031( "SFV2_GVAF1", ref l_U440, 4, 1 );
        l_U62 = 0;
    }
    return;
}

void sub_43725(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_43813(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_44031(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_44055( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_44055(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_44110( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_44110(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_44145( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_44639( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_44145(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_44639(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_45285()
{
    sub_699( "NS", "P_UNLOAD_ASSETS() - START", 0 );
    sub_6227( l_U258 );
    sub_6227( l_U243 );
    sub_29126( -760991695 );
    sub_29126( 1437984777 );
    sub_29126( -1158470756 );
    sub_29126( -995917300 );
    sub_29126( -1731587863 );
    sub_29126( -1415982292 );
    sub_29126( 975934894 );
    sub_29126( -1415227013 );
    sub_29126( -693003798 );
    sub_29126( -356399194 );
    sub_29126( -1290003862 );
    sub_29126( 1844299595 );
    sub_29327( -1074756423 );
    sub_29327( -862236369 );
    RELEASE_SCRIPT_AUDIO_BANK();
    STOP_SCRIPT_STREAM( l_U79[0] );
    STOP_SCRIPT_STREAM( l_U79[2] );
    if (CUTSCENE_IS_LOADED( ref l_U20 ))
    {
        CLEAR_NAMED_CUTSCENE( ref l_U20 );
    }
    if (CUTSCENE_IS_LOADED( "09_03_FAV2_CONCAT" ))
    {
        CLEAR_NAMED_CUTSCENE( "09_03_FAV2_CONCAT" );
    }
    STOP_CUTSCENE_AUDIO();
    UI_SET( 25, 2, 1537, "SPSlotLoader", 1537, "" );
    sub_699( "NS", "P_UNLOAD_ASSETS() - END", 0 );
    g_U1044 = 0;
    return;
}


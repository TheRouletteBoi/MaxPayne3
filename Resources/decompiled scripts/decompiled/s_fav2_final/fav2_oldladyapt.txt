void main()
{
    unknown uVar2;

    l_U0 = 0;
    l_U1 = 1;
    l_U2 = 0;
    l_U3 = 1.00000000;
    l_U4 = -5.00000000;
    l_U5 = 0;
    l_U6 = 0;
    l_U7 = 0;
    l_U11 = 42;
    l_U12 = 0;
    l_U13 = 0;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 90.00000000;
    l_U18 = {0.00000000, 0.00000000, 0.00000000};
    l_U21 = {0.00000000, 0.00000000, 0.00000000};
    l_U24 = 0;
    l_U25 = 0;
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = nil;
    l_U31 = {0.00000000, 0.00000000, 0.00000000};
    l_U34 = 0;
    l_U35 = 0;
    l_U36 = 0;
    l_U40 = 0;
    l_U92 = 0;
    l_U93 = 0;
    l_U94 = 1;
    l_U96 = 0;
    l_U97 = 0;
    l_U98 = 1500;
    l_U108 = {0, 0, 0};
    StrCopy( ref l_U111, "DUMMY", 32 );
    l_U119 = 1;
    l_U124 = 0;
    l_U125 = 0;
    l_U126 = 0;
    l_U129 = 0;
    l_U174 = 2000;
    l_U203 = 0;
    l_U204 = 0;
    l_U206 = 0;
    l_U395 = 0;
    l_U396 = 0;
    l_U397 = 1;
    l_U475 = 0;
    l_U476 = 0;
    l_U477 = 0;
    l_U492 = {-167.55460000, 187.74690000, 7.52686600};
    l_U495 = 84.49000000;
    l_U496 = {-166.11690000, 193.17150000, 7.52686500};
    l_U504 = 0;
    l_U505 = 0;
    l_U794 = 56700;
    l_U804 = 1;
    l_U805 = {-157.28000000, 183.24000000, 8.74000000};
    l_U808 = 22.24000000;
    l_U809 = 0;
    if (g_U781 == 4)
    {
        if ((sub_487( ref l_U333 )) == 0)
        {
            uVar2 = sub_2926( sub_660(), g_U1310, 200, 0, 0 );
        }
    }
    while (NOT IS_EXITFLAG_SET())
    {
        sub_4848();
        sub_4866();
        sub_9346();
        WAIT( 0 );
    }
    sub_527( "CO", "CHECKPOINT MCE_OLD_LADY_APT_MPM HAS ENDED", "########################" );
    sub_7229();
    sub_31561();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "fav2_OldLadyApt" );
    SET_EXITFLAG_RESPONSE();
    return;
}

int sub_487(unknown uParam0)
{
    sub_527( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            g_U665 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, g_U666 );
            sub_726( uParam0, sub_660() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_527(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

int sub_660()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_682() );
    }
    return 0;
}

void sub_682()
{
    return GET_PLAYER_ID();
}

void sub_726(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_527( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (g_U665)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_912( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_1989( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_2281( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_2641( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_2281( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_2641( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_2281( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_2641( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_2926( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_2641( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_2926( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_2641( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (g_U665 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_3421( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_3582( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_660(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (g_U665)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    g_U665 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_527( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_912(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_944( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_944(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_1989(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_2281(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_2597( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_2597(unknown uParam0)
{
    return;
}

void sub_2641(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_2926(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_2597( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_3421(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_3582(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_944( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_3654( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_3654(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_4848()
{
    return;
}

void sub_4866()
{
    if (g_U782 == 4)
    {
        switch (l_U206)
        {
            case 0:
            if ((sub_4960()) || (IS_PED_DEAD( sub_660() )))
            {
                l_U206 = 1;
                sub_527( "kja", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_5457())
            {
                l_U206 = 2;
            }
            else if ((sub_5497( 0 )) == 1)
            {
                l_U206 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_660() )))
            {
                if ((g_U1312[4]._fU40 != 4) AND (g_U1312[4]._fU40 != 0))
                {
                    sub_527( "kja", "Shutting down script for MCE_OLD_LADY_APT.", 0 );
                    sub_6947( ref g_U1312[4] );
                }
                l_U206 = 3;
                sub_527( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_527( "kja", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_660() ))) AND (NOT (IS_PLAYER_DEAD( sub_682() ))))
            {
                SET_PLAYER_CONTROL( sub_682(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_660() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_660(), 0 );
                    SET_PLAYER_CAN_USE_SHOOTDODGE( sub_682(), 1 );
                    SET_CAN_ROLL_DODGE( sub_660(), 1 );
                }
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            sub_7229();
            l_U206 = 4;
            sub_527( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_527( "kja", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_726( ref l_U333, sub_660() );
            l_U206 = 5;
            sub_527( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_527( "kja", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            sub_6947( ref g_U1312[4] );
            sub_8844( ref g_U1198, 0 );
            sub_8844( ref g_U1205, 1 );
            sub_8844( ref g_U1100, 0 );
            sub_9065();
            l_U205 = 0;
            l_U206 = 0;
            sub_527( "kja", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    else if ((sub_5457()) || ((IS_PED_DEAD( sub_660() )) == 1))
    {
        sub_6947( ref g_U1312[4] );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_4960()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        g_U665 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_660() )))
        {
            SET_PED_FORCED_TO_WALK( sub_660(), 0 );
            SET_PLAYER_FORCED_AIM( sub_682(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_682(), 1 );
            if ((IS_PED_VISIBLE( sub_660() )) == 0)
            {
                SET_PED_VISIBLE( sub_660(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_5457()
{
    return g_U648;
}

int sub_5497(int iParam0)
{
    iParam0 = 1;
    switch (l_U97)
    {
        case 0:
        if (NOT (sub_5558( ref l_U99 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_660() )))
            {
                l_U98 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_5668( ref l_U99, l_U98, 1, 1 );
            sub_5804( ref l_U99 );
        }
        if (sub_5924( ref l_U99 ))
        {
            sub_527( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_660() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_682() )))
            {
                SET_PLAYER_CONTROL( sub_682(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U97 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U97 = 2;
            }
            else
            {
                l_U97 = 3;
            }
        }
        break;
        case 2:
        sub_527( "NS", "Player will QUIT", 0 );
        sub_6411();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_527( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_6411();
        return 1;
        break;
    }
    return 0;
}

int sub_5558(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_5668(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_5804(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_5924(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_6411()
{
    sub_527( "NS", "P_PostFailRetryCleanup", 0 );
    sub_6461( ref l_U99 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_682() )))
    {
        SET_PLAYER_CONTROL( sub_682(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U96 = 0;
    l_U96 = l_U96;
    l_U97 = 0;
    return;
}

void sub_6461(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_6947(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_7229()
{
    sub_527( "NS", "P_CLEANUP_ALL()", 0 );
    ISEQ_UNREGISTER_ENTITY( -949942467, "old_lady1" );
    ISEQ_TERMINATE( -949942467 );
    sub_7309( l_U478 );
    sub_7383();
    sub_7546( ref l_U513 );
    if ((sub_5457()) || (IS_PED_DEAD( sub_660() )))
    {
        sub_7897();
    }
    return;
}

void sub_7309(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_7383()
{
    sub_7398( l_U510 );
    sub_7398( l_U511 );
    sub_7398( l_U512 );
    sub_7465( ref l_U506 );
    sub_7398( g_U685._fU0 );
    return;
}

void sub_7398(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_7465(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_7398( (uParam0^)[I] );
    }
    return;
}

void sub_7546(int iParam0)
{
    sub_527( "rw", "P_CLEAN_MOVIE", 0 );
    sub_7590( iParam0->_fU40 );
    sub_7638( iParam0->_fU76, 1 );
    if (IS_SCRIPT_MOVIE_PLAYING( 2 ))
    {
        STOP_MOVIE( 2 );
    }
    RELEASE_MOVIE( 2 );
    return;
}

void sub_7590(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_7638(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_7897()
{
    sub_527( "NS", "P_UNLOAD_UFE_RUN_ASSETS()", 0 );
    sub_7951( -805468804 );
    sub_7951( -401048192 );
    sub_7951( 1750472651 );
    sub_7951( 572505350 );
    sub_7951( g_U776 );
    sub_7951( 1686109657 );
    sub_7951( -1006708222 );
    sub_8164( "veh@helicopter" );
    sub_8164( "LEVEL_S_FAV2_CP_04" );
    ISEQ_TERMINATE( 656995606 );
    ISEQ_TERMINATE( 1681008462 );
    ISEQ_TERMINATE( 268580424 );
    ISEQ_TERMINATE( 432294348 );
    ISEQ_TERMINATE( -1170716322 );
    ISEQ_TERMINATE( -956144910 );
    ISEQ_TERMINATE( 1557696148 );
    ISEQ_TERMINATE( -1979577743 );
    ISEQ_TERMINATE( 1789862085 );
    sub_8349( "VEHICLE/vehicle_heli" );
    sub_8349( "LEVEL/S_FAV2/S_FAV2_HELI_DRIVER_CP04" );
    sub_8426( -378310276 );
    sub_8164( "npc_pstl_cover_grenade" );
    sub_8164( "npc_rifle_cover_grenade" );
    sub_8164( "mped_grenade_core" );
    sub_8542( 123 );
    sub_8426( g_U1309 );
    return;
}

void sub_7951(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_2597( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_8164(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_8349(unknown uParam0)
{
    ACTION_TREE_UNLOAD( uParam0 );
    return;
}

void sub_8426(unknown uParam0)
{
    SET_WEAPON_AS_NO_LONGER_NEEDED( uParam0 );
    return;
}

void sub_8542(unknown uParam0)
{
    REMOVE_VEHICLE_RECORDING( uParam0 );
    return;
}

void sub_8844(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_8856( iParam0 )) == 0)
    {
        sub_8922( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_8856(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_8922(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_9065()
{
    sub_527( "NS", "P_INITIALIZE_SCRIPT_DATA()", 0 );
    l_U205 = 0;
    sub_6461( ref l_U428 );
    sub_6461( ref l_U419 );
    sub_6461( ref l_U795 );
    l_U500 = 0;
    l_U501 = 0;
    l_U502 = 0;
    l_U503 = 0;
    l_U504 = 0;
    l_U505 = 0;
    l_U396 = 0;
    l_U804 = 1;
    l_U397 = 1;
    l_U475 = 0;
    l_U476 = 0;
    l_U477 = 0;
    return;
}

void sub_9346()
{
    sub_9368( l_U270, l_U291 );
    switch (l_U205)
    {
        case 0:
        sub_9725( 0 );
        sub_9065();
        sub_10319();
        sub_11303( ref g_U1205, 1, 1, -1.00000000 );
        sub_11449();
        ENABLE_WALLA_ZONE( "S_FAV2_WZ_BASE_PANIC_LAYER", 0 );
        ENABLE_WALLA_ZONE( "S_FAV2_WZ_SHOOTING_LAYER", 0 );
        if (g_U782 == 4)
        {
            sub_527( "ka", "Checkpoint = Old Lady Load and INIT", 0 );
            sub_11657();
            sub_12610();
            sub_13623();
            sub_13686( ref l_U333, 4, 0 );
            sub_8844( ref g_U1191, 1 );
            l_U205 = 1;
        }
        else
        {
            sub_527( "ka", "Must be a playthrough - Terminate RAID and LOAD and INIT OLA", 0 );
            l_U205 = 1;
        }
        break;
        case 1:
        if (IS_SCREEN_FADED_OUT())
        {
            if (NOT (IS_PED_DEAD( sub_660() )))
            {
                SET_PLAYER_CONTROL( sub_682(), 0, 0 );
                sub_9725( 1 );
                sub_18322();
            }
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U953[4], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U996[4], 1065353216, 0 );
            DO_SCREEN_FADE_IN( 1000 );
            SET_PED_FORCED_TO_WALK( sub_660(), 1 );
            SET_CAN_ROLL_DODGE( sub_660(), 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_682(), 0 );
            SET_PLAYER_CONTROL( sub_682(), 1, 0 );
            l_U503 = 1;
            l_U205 = 2;
        }
        else if (l_U505 == 0)
        {
            if (sub_20654())
            {
                sub_11657();
                sub_12610();
                sub_18322();
                sub_20846();
                l_U505 = 1;
            }
        }
        if (sub_21524( ref l_U228, sub_660(), 0 ))
        {
            PLAYER_SET_AIM_MODE( 2 );
            SET_PLAYER_COMBAT_TIMER_MODE( 0 );
            SET_PLAYER_GLOBAL_COMBAT_TIMER_STATE( 0 );
            if (l_U505 == 0)
            {
                sub_11657();
                sub_12610();
            }
            if (g_U782 < 4)
            {
                sub_13686( ref l_U333, 4, 0 );
                SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
                SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
            }
            l_U205 = 2;
        }
        break;
        case 2:
        if ((sub_21751( ref l_U270, 0 )) == 1)
        {
            AUDIO_MUSIC_SUSPEND( 10000 );
            sub_11303( ref g_U1205, 1, 1, -1.00000000 );
        }
        sub_21881();
        if (NOT l_U504)
        {
            if (sub_24158())
            {
                SET_PLAYER_GLOBAL_COMBAT_TIMER_STATE( 1 );
                l_U504 = 1;
            }
        }
        if (sub_21751( ref l_U312, 0 ))
        {
            ENABLE_WALLA_ZONE( "S_FAV2_WZ_BASE_PANIC_LAYER", 1 );
            ENABLE_WALLA_ZONE( "S_FAV2_WZ_SHOOTING_LAYER", 1 );
            SET_EXITFLAG_FOR_SCRIPT( g_U1312[4]._fU32 );
        }
        sub_24368();
        break;
    }
    sub_24901( ref l_U513 );
    if (l_U804 == 1)
    {
        if (l_U513._fU940 == 4)
        {
            if ((sub_30114( ref l_U513 )) == 0)
            {
                l_U397 = 0;
                if (NOT (sub_5558( ref l_U795 )))
                {
                    sub_5804( ref l_U795 );
                }
                else if (sub_5924( ref l_U795 ))
                {
                    sub_22220( ref l_U784 );
                    if (NOT (IS_PED_DEAD( sub_660() )))
                    {
                        sub_527( "NS", "Adding PLAYER_PED_ID ped for sssSFV2_WOTBBLD script speech.", 0 );
                        sub_24623( 0, sub_660(), "MAX", ref l_U784, 2, 0 );
                        sub_24623( 1, sub_660(), "MAX", ref l_U784, 2, 0 );
                    }
                    sub_22512( "SFV2_WOTBBLD", ref l_U784, 7, 1 );
                    l_U804 = 1;
                }
            }
            else
            {
                l_U397 = 1;
                l_U804 = 1;
            }
        }
    }
    return;
}

boolean sub_9368(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41)
{
    if (l_U40)
    {
        if (NOT (IS_PED_DEAD( sub_660() )))
        {
            if (sub_9415( sub_660(), uParam21 ))
            {
                sub_527( "CO", "FORCE UNWALK", "******" );
                SET_PED_FORCED_TO_WALK( sub_660(), 0 );
                SET_CAN_ROLL_DODGE( sub_660(), 1 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_682(), 1 );
                l_U40 = 0;
            }
        }
    }
    if (NOT l_U40)
    {
        if (NOT (IS_PED_DEAD( sub_660() )))
        {
            if (sub_9415( sub_660(), uParam0 ))
            {
                sub_527( "CO", "FORCE WALK", "******" );
                SET_PED_FORCED_TO_WALK( sub_660(), 1 );
                SET_CAN_ROLL_DODGE( sub_660(), 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_682(), 0 );
                l_U40 = 1;
            }
        }
    }
    return NOT l_U40;
}

int sub_9415(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_9725(unknown uParam0)
{
    sub_527( "SP", "P_LOAD_ASSETS", 0 );
    sub_9769( 772685022, uParam0 );
    sub_9769( g_U776, uParam0 );
    sub_9769( -883391640, uParam0 );
    sub_9965( -949942467, uParam0 );
    sub_9965( 937874072, uParam0 );
    sub_9965( -1600414088, uParam0 );
    sub_10206( "LEVEL_S_FAV2_MPM", 0, uParam0 );
    sub_10206( "LEVEL_S_FAV2_CP_04", 0, uParam0 );
    return;
}

void sub_9769(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_2597( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_9965(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_10206(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_10319()
{
    sub_527( "NS", "P_SETUP_STATIC_DATA()", 0 );
    l_U205 = 0;
    sub_10380( "SFV2AUD" );
    sub_10561( ref l_U207, "tbOldlady_Start", -156.61000000, 173.49500000, 5.62000000, 8.00000000, 5.00000000, 5.00000000, 0.00000000, 0.00000000, 89.99000000, 1 );
    sub_10561( ref l_U228, "tbActivateOldLady", -161.75000000, 191.21000000, 3.73000000, 10.00000000, 10.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10561( ref l_U270, "tbWalk", -156.88000000, 182.88000000, 7.40000000, 4.00000000, 4.00000000, 3.64000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10561( ref l_U291, "tbUnWalk", -156.83000000, 177.89600000, 7.40000000, 4.00000000, 4.00000000, 3.64000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10561( ref l_U312, "tbKillOldLadyApt", -164.01000000, 199.47000000, 3.73000000, 10.00000000, 10.00000000, 10.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10561( ref l_U398, "OldLadyTrigger", -159.97000000, 187.89000000, 7.52000000, 6.37000000, 4.85000000, 2.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10561( ref l_U249, "tbOldWomanDoor", -167.25000000, 190.40000000, 7.47000000, 3.46000000, 1.10000000, 2.29000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_11076( ref g_U1093, 0 );
    sub_11167( ref l_U479, l_U492, l_U495, -727528178, 5, 2, 0, 0, 0 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
    return;
}

void sub_10380(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_10400();
    return;
}

void sub_10400()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_10561(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_11076(int iParam0, unknown uParam1)
{
    if ((sub_8856( iParam0 )) == 0)
    {
        sub_8922( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

void sub_11167(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_11303(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_8856( iParam0 )) == 0)
    {
        sub_8922( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_11449()
{
    sub_527( "NS", "P_RESET_MAX_CONTEXTUAL_DIALOGUE", 0 );
    l_U203 = 0;
    l_U204 = 0;
    return;
}

void sub_11657()
{
    sub_9965( -949942467, 1 );
    sub_9769( 772685022, 1 );
    sub_7309( l_U478 );
    l_U478 = sub_11703( ref l_U479 );
    if (((IS_PED_DEAD( l_U478 )) == 0) AND ((DOES_PED_EXIST( l_U478 )) == 1))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U478, 0 );
        SET_ROOM_FOR_PED_BY_NAME( l_U478, "GtaMloRoom_top" );
    }
    if ((IS_GERMAN_VERSION() == 1) || (IS_JAPANESE_GAME() == 1))
    {
        SET_PED_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP( l_U478, 0, 0 );
        SET_PED_GORE_FROM_PLAYER( l_U478, 0 );
    }
    sub_12502( l_U478, l_U492, l_U495 );
    ISEQ_REGISTER_ENTITY( -949942467, "old_lady1", l_U478, 0 );
    ISEQ_START( -949942467 );
    return;
}

void sub_11703(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_9769( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_12182( iParam0->_fU40 );
    sub_12262( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_12182(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_12262(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_12502(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_12610()
{
    l_U510 = sub_12664( -4072149, -157.62000000, 192.12000000, 8.16000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 1119092736 );
    l_U512 = sub_12664( -4072149, -161.97000000, 194.12000000, 8.94000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0, 1119092736 );
    if ((DOES_PLACEMENT_EXIST( l_U510 )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U510, "GtaMloRoom_top" );
    }
    if ((DOES_PLACEMENT_EXIST( l_U512 )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U512, "GtaMloRoom_top" );
    }
    sub_12907();
    return;
}

void sub_12664(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_12907()
{
    sub_527( "CO", "P_CREATE_S_FV2_GG_97_02", 0 );
    sub_13021( ref g_U685, g_U776, -175394327, -210584001, -159.87000000, 191.82000000, 7.65000000, 0.00000000, 0.00000000, 5.00000000, "GtaMloRoom_top" );
    sub_13150( ref g_U685 );
    return;
}

void sub_13021(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_527( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_13150(int iParam0)
{
    sub_527( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_13211( iParam0->_fU12 )) == 1)
        {
            sub_527( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_527( "CO", "has never been collected.", 0 );
        }
        if ((sub_13211( iParam0->_fU12 )) == 0)
        {
            sub_7398( iParam0->_fU0 );
            iParam0->_fU0 = sub_12664( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_527( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_527( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_13211(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_13623()
{
    sub_527( "ka", "P_CREATE_CAMERA()", 0 );
    SET_CAM_VIEW_MODE( 0 );
    return;
}

void sub_13686(int iParam0, int iParam1, unknown uParam2)
{
    sub_527( "CO", "CO_HANDLE_SAVEDATA : Saving Data", 0 );
    if ((g_U782 < iParam1) || (NOT iParam0->_fU0))
    {
        sub_527( "CO", "CO_HANDLE_SAVEDATA : Saved Data", 0 );
        sub_13855( iParam0, iParam1, sub_660(), g_U783[iParam1], g_U910[iParam1], g_U953[iParam1], g_U996[iParam1], uParam2 );
    }
    g_U782 = iParam1;
    sub_17485( g_U782 );
    return;
}

void sub_13855(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_527( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_527( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_3582( iParam1 );
        sub_14114( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_14565( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_14565( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_14797( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_14565( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_14797( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_14797( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_14565( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_14797( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_14797( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_14797( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_14565( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_14797( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_14797( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_14797( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_14797( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_16355( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, g_U666, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_527( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_14114(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_944( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_527( "TEH", "Ending context", 0 );
        sub_527( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_14565(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_14797(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_16355(int iParam0)
{
    sub_2597( "CHECKPOINT DATA" );
    sub_16394( iParam0->_fU4 );
    sub_16417( iParam0->_fU16 );
    sub_16417( iParam0->_fU20 );
    sub_16417( iParam0->_fU24 );
    sub_16460( iParam0->_fU28 );
    sub_16460( iParam0->_fU56 );
    sub_16460( iParam0->_fU60 );
    sub_16460( iParam0->_fU64 );
    sub_16460( iParam0->_fU68 );
    sub_16460( iParam0->_fU72 );
    sub_16460( iParam0->_fU76 );
    sub_16460( iParam0->_fU80 );
    sub_16460( iParam0->_fU84 );
    sub_16460( iParam0->_fU88 );
    sub_16460( iParam0->_fU92 );
    sub_16417( iParam0->_fU32 );
    sub_16460( iParam0->_fU36 );
    sub_16460( iParam0->_fU40 );
    sub_16460( iParam0->_fU44 );
    sub_16417( iParam0->_fU136 );
    sub_16665( iParam0->_fU140 );
    sub_16460( iParam0->_fU52 );
    sub_2597( "---nRightHolsterAttachmentEnabled: " );
    sub_16460( iParam0->_fU96 );
    sub_2597( "---nRightHolsterAttachmentToggled: " );
    sub_16460( iParam0->_fU100 );
    sub_2597( "---nLeftHolsterAttachmentEnabled: " );
    sub_16460( iParam0->_fU104 );
    sub_2597( "---nLeftHolsterAttachmentToggled: " );
    sub_16460( iParam0->_fU108 );
    sub_2597( "---nRifleHolsterAttachmentEnabled: " );
    sub_16460( iParam0->_fU112 );
    sub_2597( "---nRifleHolsterAttachmentToggled: " );
    sub_16460( iParam0->_fU116 );
    sub_2597( "---nRightHandAttachmentEnabled: " );
    sub_16460( iParam0->_fU120 );
    sub_2597( "---nRightHandAttachmentToggled: " );
    sub_16460( iParam0->_fU124 );
    sub_2597( "---nLeftHandAttachmentEnabled: " );
    sub_16460( iParam0->_fU128 );
    sub_2597( "---nLeftHandAttachmentToggled: " );
    sub_16460( iParam0->_fU132 );
    sub_16460( g_U666 );
    sub_16460( 144 );
    return;
}

void sub_16394(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_16417(unknown uParam0)
{
    return;
}

void sub_16460(unknown uParam0)
{
    return;
}

void sub_16665(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_17485(unknown uParam0)
{
    sub_527( "CO", "P_SETUP_INITIAL_TIMECYCLE", 0 );
    switch (uParam0)
    {
        case 0:
        case 1:
        case 2:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
        case 3:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 0 );
        break;
        case 4:
        SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
        FREEZE_TIME_OF_DAY( 20, 10 );
        break;
        case 5:
        if (g_U1046 == 1)
        {
            sub_527( "kja", "MCE_UFE_RUN bTimeofDayReleased = TRUE", 0 );
            FREEZE_TIME_OF_DAY( 20, 10 );
            break;
        }
        sub_527( "kja", "MCE_UFE_RUN bTimeofDayReleased = FALSE: SO WE're SETTING WEATHER AND TOD TO 20:20", 0 );
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 20, 10 );
        case 6:
        case 7:
        case 8:
        if (g_U1046 == 1)
        {
            ;
        }
        else
        {
            SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
            SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
            FREEZE_TIME_OF_DAY( 21, 0 );
        }
        break;
        case 9:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 21, 0 );
        break;
        case 10:
        SET_WEATHER_TYPE_NOW_PERSIST( "DRIZZLE" );
        SET_PUDDLES( 0.11000000, 0.07000000, 0.11000000, 0.51300000 );
        FREEZE_TIME_OF_DAY( 22, 0 );
        break;
        default:
        FREEZE_TIME_OF_DAY( 19, 0 );
        break;
    }
    return;
}

void sub_18322()
{
    sub_527( "rw", "P_CreateTVStruct", 0 );
    l_U513._fU0 = 0;
    StrCopy( ref l_U513._fU8, "TV_07_4x3_fav2", 32 );
    l_U513._fU40 = sub_18435( -883391640, -161.26340000, 186.94760000, 8.69730000, 0.00000000, 0.00000000, -18.48900000, 0, 0, 0 );
    l_U513._fU912 = 1;
    l_U513._fU44 = {g_U1056};
    l_U513._fU76 = 937874072;
    l_U513._fU916 = 2000;
    l_U513._fU920 = 0;
    l_U513._fU80 = {-160.94000000, 188.28000000, 7.53000000};
    l_U513._fU92 = 150.22000000;
    l_U513._fU96 = "09_FAV2_TV_ON_CHANNEL_CAM";
    l_U513._fU100 = "LEVEL_S_FAV2_CP_04";
    l_U513._fU104 = "09_FAV2_TV_OFF_CAM";
    l_U513._fU108 = {-158.21000000, 187.85000000, 9.48000000};
    l_U513._fU120 = 102.00000000;
    l_U513._fU128 = {-161.07010000, 187.48030000, 8.71447300};
    l_U513._fU140 = {-2.95532100, 0.00001600, 160.95640000};
    l_U513._fU924 = 0.70000000;
    l_U513._fU928 = 0.75000000;
    l_U513._fU932 = 1.00000000;
    l_U513._fU4 = 1;
    l_U513._fU1008 = -1600414088;
    l_U513._fU1012 = {-160.94000000, 188.28000000, 7.53000000};
    l_U513._fU1024 = 150.22000000;
    l_U513._fU1064 = 1700;
    l_U513._fU1068 = 3900;
    l_U513._fU1076 = 0.00000000;
    if (DOES_OBJECT_EXIST( l_U513._fU40 ))
    {
        FREEZE_OBJECT_POSITION( l_U513._fU40, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U513._fU40, ref l_U513._fU44 );
    }
    sub_19160( ref l_U513 );
    sub_5668( ref l_U795, l_U794, 1, 0 );
    return;
}

void sub_18435(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_9769( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_19160(int iParam0)
{
    float fVar3;
    float fVar4;

    fVar3 = 1.10000000;
    fVar4 = 1.50000000;
    if (DOES_OBJECT_EXIST( iParam0->_fU40 ))
    {
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( iParam0->_fU40, 1 );
    }
    sub_19279( iParam0 + 152, 2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), 10.00000000, 10.00000000, 0, 0 );
    sub_20132( iParam0 + 152, 30, "POI_STOPWATCHTV" );
    sub_20295( iParam0 + 152, 0 );
    sub_19279( iParam0 + 496, 2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ), fVar3, fVar4, 1, 0 );
    sub_20132( iParam0 + 496, 30, "POI_WATCHTV" );
    sub_20295( iParam0 + 496, 0 );
    sub_6461( iParam0 + 840 );
    sub_6461( iParam0 + 876 );
    sub_6461( iParam0 + 968 );
    sub_6461( iParam0 + 1028 );
    iParam0->_fU936 = 0;
    iParam0->_fU940 = 0;
    iParam0->_fU1080 = 0;
    return;
}

void sub_19279(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_19294( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_19662( iParam0 );
    return;
}

void sub_19294(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_19662(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_19741( iParam0 );
    return;
}

void sub_19741(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_19800( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_19800( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_19800( iParam0, 1 );
            }
            else
            {
                sub_19800( iParam0, 0 );
            };;;
        }
        else
        {
            sub_19800( iParam0, 0 );
        }
    }
    else
    {
        sub_19800( iParam0, 0 );
    }
    return;
}

void sub_19800(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_20132(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_20163( iParam0 );
    return;
}

void sub_20163(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_20295(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

int sub_20654()
{
    if (((ISEQ_QUERY_STATE( -1600414088, 1 )) != 1) AND (((ISEQ_QUERY_STATE( 937874072, 1 )) != 1) AND (((ISEQ_QUERY_STATE( -949942467, 1 )) != 1) AND ((HAS_ANIM_DICT_LOADED( "LEVEL_S_FAV2_CP_04", 0 )) AND ((HAS_ANIM_DICT_LOADED( "LEVEL_S_FAV2_MPM", 0 )) AND ((HAS_MODEL_LOADED( -883391640 )) AND ((HAS_MODEL_LOADED( g_U776 )) AND (HAS_MODEL_LOADED( 772685022 )))))))))
    {
        return 1;
    }
    return 0;
}

void sub_20846()
{
    sub_527( "NS", "P_REQUEST_UFE_RUN_ASSETS()", 0 );
    sub_9769( -805468804, 0 );
    sub_9769( -401048192, 0 );
    sub_9769( 1750472651, 0 );
    sub_9769( 572505350, 0 );
    sub_9769( g_U776, 0 );
    sub_9769( 1686109657, 0 );
    sub_9769( -1006708222, 0 );
    sub_10206( "veh@helicopter", 0, 0 );
    sub_10206( "LEVEL_S_FAV2_CP_04", 0, 0 );
    sub_9965( 656995606, 0 );
    sub_9965( 1681008462, 0 );
    sub_9965( 268580424, 0 );
    sub_9965( 432294348, 0 );
    sub_9965( -1170716322, 0 );
    sub_9965( -956144910, 0 );
    sub_9965( 1557696148, 0 );
    sub_9965( -1979577743, 0 );
    sub_9965( 1789862085, 0 );
    sub_21148( "VEHICLE/vehicle_heli", 0 );
    sub_21148( "LEVEL/S_FAV2/S_FAV2_HELI_DRIVER_CP04", 0 );
    sub_21265( -378310276, 0 );
    sub_10206( "npc_pstl_cover_grenade", 0, 0 );
    sub_10206( "npc_rifle_cover_grenade", 0, 0 );
    sub_10206( "mped_grenade_core", 0, 0 );
    sub_21424( 123, 0 );
    sub_21265( g_U1309, 0 );
    return;
}

void sub_21148(unknown uParam0, int iParam1)
{
    ACTION_TREE_LOAD( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_ACTION_TREE_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_21265(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_21424(unknown uParam0, int iParam1)
{
    REQUEST_VEHICLE_RECORDING( uParam0 );
    if (iParam1 == 1)
    {
        while ((HAS_VEHICLE_RECORDING_BEEN_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_21524(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_9415( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_21751(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_9415( sub_660(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_21881()
{
    unknown uVar2;

    if ((l_U503) || (sub_21751( ref l_U398, 0 )))
    {
        sub_21917( ref g_U1093, 0 );
        sub_11076( ref g_U1205, 0 );
        sub_11076( ref g_U1198, 0 );
        sub_5668( ref l_U457, 15000, 1, 0 );
        sub_5804( ref l_U457 );
        sub_527( "ka", "OLD WOMAN SHOULD BE RUNNING AWAY RIGHT NOW", 0 );
        if (NOT (IS_PED_DEAD( l_U478 )))
        {
            SET_CAM_VIEW_MODE( 0 );
            PED_SET_ACTION_INTENTION( l_U478, 48, 5000, 0.00000000, 0.00000000, 0.00000000 );
            SET_PED_HEALTH( l_U478, 100, 0 );
            sub_22220( ref l_U437 );
            sub_22301( 1, l_U478, -727528178, ref l_U437, 4, 0 );
            sub_22512( "SFV2_VIG06A", ref l_U437, 8, 1 );
            sub_5668( ref l_U419, 4000, 1, 0 );
            sub_5804( ref l_U419 );
            l_U503 = 0;
            l_U500 = 1;
        }
        sub_23334( ref g_U1312[5] );
    }
    if (l_U500 == 1)
    {
        if (sub_5924( ref l_U419 ))
        {
            sub_21917( ref g_U1205, 0 );
            sub_5668( ref l_U428, 2500, 1, 0 );
            sub_5804( ref l_U428 );
        }
        if ((sub_5924( ref l_U428 )) == 1)
        {
            sub_8844( ref g_U1205, 1 );
            l_U501 = 1;
            l_U500 = 0;
        }
        else if ((IS_PED_DEAD( l_U478 )) == 1)
        {
            sub_23486( ref l_U428, 1 );
            sub_23486( ref l_U419, 1 );
            sub_23749( ref g_U1205, -100.00000000, 100.00000000 );
            l_U501 = 1;
            l_U500 = 0;
        }
    }
    if (l_U501 == 1)
    {
        if ((IS_PED_DEAD( l_U478 )) == 1)
        {
            SET_PED_CORPSE( l_U478, 1 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U478, 0 );
            ISEQ_UNREGISTER_ENTITY( -949942467, "old_lady1" );
            sub_7638( -949942467, 1 );
            l_U501 = 0;
        }
        else
        {
            ISEQ_UNREGISTER_ENTITY( -949942467, "old_lady1" );
            sub_7638( -949942467, 1 );
            l_U501 = 0;
        }
    }
    if (l_U502 == 0)
    {
        if (((HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_660() ), 7.00000000, 0, ref uVar2 )) == 1) || ((sub_21751( ref l_U249, 0 )) == 1))
        {
            if ((IS_PED_DEAD( l_U478 )) == 0)
            {
                sub_22220( ref l_U437 );
                sub_22301( 1, l_U478, -727528178, ref l_U437, 4, 0 );
                sub_22512( "SFV2_VIG06B", ref l_U437, 8, 1 );
            }
            l_U502 = 1;
        }
    }
    return;
}

void sub_21917(int iParam0, int iParam1)
{
    if ((sub_8856( iParam0 )) == 0)
    {
        sub_8922( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_22220(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_22301(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = uParam2;
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_22512(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_22536( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_22536(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_22591( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_22591(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_22626( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_23120( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_22626(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_23120(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_23334(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_23486(int iParam0, int iParam1)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if (iParam1 == 1)
    {
        iParam0->_fU8 = iParam0->_fU4 - iParam0->_fU0;
        sub_6461( iParam0 );
    }
    else if (iParam0->_fU8 > 0)
    {
        sub_5804( iParam0 );
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA() - iParam0->_fU8;
        }
        else
        {
            iParam0->_fU0 = TIMERB() - iParam0->_fU8;
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM() - iParam0->_fU8;
        }
        iParam0->_fU4 = iParam0->_fU0;
        iParam0->_fU8 = 0;
    }
    return;
}

void sub_23749(int iParam0, float fParam1, float fParam2)
{
    if ((sub_8856( iParam0 )) == 0)
    {
        sub_8922( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

int sub_24158()
{
    int iVar2;

    if (NOT (IS_PED_DEAD( sub_660() )))
    {
        if (HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_660() ), 2.00000000, 0, ref iVar2 ))
        {
            if (sub_660() == iVar2)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_24368()
{
    if (l_U203 == 0)
    {
        l_U204 = GET_PAYNEKILLER_AMT();
        l_U203 = 1;
    }
    if ((IS_PED_DEAD( sub_660() )) == 0)
    {
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
        {
            if ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ((IS_MONOLOGUE_PLAYING() == 0) AND (sub_24452() == 0)))
            {
                if (l_U204 < GET_PAYNEKILLER_AMT())
                {
                    sub_527( "NS", "Playing Pills Monologue", 0 );
                    sub_22220( ref l_U193 );
                    sub_24623( 0, sub_660(), "MAX", ref l_U193, 2, 0 );
                    sub_24623( 1, sub_660(), "MAX", ref l_U193, 2, 0 );
                    sub_22512( "SFV2_MPFSFPLA", ref l_U193, 7, 1 );
                }
            }
            l_U204 = GET_PAYNEKILLER_AMT();
        }
    }
    return;
}

void sub_24452()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_24623(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_24901(int iParam0)
{
    if (DOES_OBJECT_EXIST( iParam0->_fU40 ))
    {
        if ((GET_OBJECT_HEALTH( iParam0->_fU40 )) < 1000.00000000)
        {
            if (iParam0->_fU4)
            {
                sub_7590( iParam0->_fU40 );
            }
            if ((ref iParam0->_fU496->_fU0) == 1)
            {
                sub_25000( iParam0 + 496, 0 );
            }
        }
    }
    switch (iParam0->_fU940)
    {
        case 0:
        if (DOES_OBJECT_EXIST( iParam0->_fU40 ))
        {
            if (((GET_OBJECT_HEALTH( iParam0->_fU40 )) == 1000.00000000) AND ((sub_25819() == 0) AND (iParam0->_fU0 == 0)))
            {
                if ((IS_SCRIPT_MOVIE_PLAYING( 2 )) == 0)
                {
                    if (sub_25938( iParam0 + 496 ))
                    {
                        if (NOT (IS_PED_DEAD( sub_660() )))
                        {
                            SET_PLAYER_CONTROL( sub_682(), 0, 0 );
                            REENABLE_PLAYER_INPUT( 30 );
                        }
                        iParam0->_fU944 = GET_WEAPON_FROM_HAND( sub_660(), 0, 0 );
                        if (iParam0->_fU1072)
                        {
                            if (sub_27790( iParam0->_fU944 ))
                            {
                                sub_28076( iParam0 );
                            }
                        }
                        else
                        {
                            sub_28237();
                        }
                        if (NOT (IS_PED_DEAD( sub_660() )))
                        {
                            if (IS_PED_DUAL_WIELDING( sub_660() ))
                            {
                                sub_5668( ref l_U175, 1200, 1, 0 );
                            }
                            else
                            {
                                sub_5668( ref l_U175, 500, 1, 0 );
                            }
                        }
                        sub_9965( iParam0->_fU76, 0 );
                        sub_5804( ref l_U175 );
                        iParam0->_fU940 = 1;
                    }
                }
            }
        }
        break;
        case 1:
        if ((sub_5924( ref l_U175 )) AND (sub_28408( iParam0 )))
        {
            if ((sub_28498( iParam0 )) AND (NOT (IS_PED_DEAD( sub_660() ))))
            {
                ISEQ_REGISTER_ENTITY( iParam0->_fU76, "Max", sub_660(), 0 );
            }
            if (sub_28498( iParam0 ))
            {
                ISEQ_START( iParam0->_fU76 );
            }
            sub_25000( iParam0 + 496, 0 );
            iParam0->_fU940 = 2;
        }
        else
        {
            sub_527( "rw", "waiting for weapon to holster", 0 );
        }
        break;
        case 2:
        if (sub_28498( iParam0 ))
        {
            CAMERA_PLAY_ANIMATED( iParam0->_fU100, iParam0->_fU96, 0, iParam0->_fU108, iParam0->_fU120, 0, 0 );
            sub_12502( sub_660(), iParam0->_fU80, iParam0->_fU92 );
        }
        PRELOAD_MOVIE( 2, iParam0 + 8, 0, sub_28735() );
        if (sub_28498( iParam0 ))
        {
            sub_5668( iParam0 + 840, iParam0->_fU916, 1, 0 );
        }
        else
        {
            sub_5668( iParam0 + 840, 0, 1, 0 );
        }
        sub_5804( iParam0 + 840 );
        iParam0->_fU940 = 3;
        break;
        case 3:
        if (sub_5924( iParam0 + 840 ))
        {
            sub_6461( iParam0 + 840 );
            if (sub_28498( iParam0 ))
            {
                ISEQ_UNREGISTER_ENTITY( iParam0->_fU76, "Max" );
                ISEQ_TERMINATE( iParam0->_fU76 );
            }
            CAMERA_ANIMATED_STOP( 0, 0 );
            iParam0->_fU124 = CREATE_CAM_WITH_PARAMS( "DEFAULT_SCRIPTED_CAMERA", iParam0->_fU128, iParam0->_fU140, 45, 0 );
            if (iParam0->_fU924 != 0)
            {
                SET_CAM_FAR_DOF( iParam0->_fU124, iParam0->_fU924, iParam0->_fU928 );
                SET_CAM_DOF_STRENGTH( iParam0->_fU124, iParam0->_fU932 );
            }
            SET_CAM_ACTIVE( iParam0->_fU124, 1 );
            RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
            if (NOT (IS_PED_DEAD( sub_660() )))
            {
                SET_PED_VISIBLE( sub_660(), 0 );
                DISPLAY_HUD( 0 );
            }
            if ((iParam0->_fU912 == 0) AND ((DOES_OBJECT_EXIST( iParam0->_fU40 )) == 1))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU40, iParam0 + 44 );
                FREEZE_OBJECT_POSITION( iParam0->_fU40, 1 );
                SET_OBJECT_COLLISION( iParam0->_fU40, 0 );
            }
            sub_25000( iParam0 + 496, 0 );
            sub_25000( iParam0 + 152, 1 );
            if ((IS_SCRIPT_MOVIE_PLAYING( 2 )) == 0)
            {
                SET_MOVIE_LOOP( 2, 0 );
                PLAY_MOVIE( 2, 0 );
                AUDIO_ENABLE_TV_MOVIE( 1 );
            }
            if ((NOT (sub_5558( iParam0 + 876 ))) AND ((sub_28498( iParam0 )) AND (iParam0->_fU920 > 0)))
            {
                sub_5668( iParam0 + 876, iParam0->_fU920, 1, 0 );
                sub_5804( iParam0 + 876 );
            }
            STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
            iParam0->_fU940 = 4;
        }
        break;
        case 4:
        if (sub_5924( iParam0 + 876 ))
        {
            sub_9965( iParam0->_fU76, 0 );
            if (NOT (IS_PED_DEAD( sub_660() )))
            {
                ISEQ_REGISTER_ENTITY( iParam0->_fU76, "Max", sub_660(), 0 );
                SET_PED_VISIBLE( sub_660(), 1 );
            }
            sub_12502( sub_660(), iParam0->_fU80, iParam0->_fU92 );
            if (sub_28498( iParam0 ))
            {
                SET_CAM_ACTIVE( iParam0->_fU124, 0 );
                CAMERA_PLAY_ANIMATED( iParam0->_fU100, iParam0->_fU96, 0, iParam0->_fU108, iParam0->_fU120, 0, 0 );
                ISEQ_START( iParam0->_fU76 );
            }
            CLEAR_PED_PRIMARY_LOOKAT( sub_660() );
            SET_COORD_PRIMARY_LOOKAT( sub_660(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU40 ) );
            sub_6461( iParam0 + 840 );
            sub_5668( iParam0 + 840, iParam0->_fU916, 1, 0 );
            sub_5804( iParam0 + 840 );
            sub_25000( iParam0 + 496, 0 );
            sub_25000( iParam0 + 152, 0 );
        }
        if (sub_5924( iParam0 + 840 ))
        {
            sub_6461( iParam0 + 840 );
            if (sub_28498( iParam0 ))
            {
                ISEQ_UNREGISTER_ENTITY( iParam0->_fU76, "Max" );
                ISEQ_TERMINATE( iParam0->_fU76 );
            }
            if (sub_28498( iParam0 ))
            {
                if (IS_ANIMATED_CAMERA_PLAYING())
                {
                    CAMERA_ANIMATED_STOP( 0, 0 );
                }
            }
            if ((DOES_CAM_EXIST( iParam0->_fU124 )) == 0)
            {
                iParam0->_fU124 = CREATE_CAM_WITH_PARAMS( "DEFAULT_SCRIPTED_CAMERA", iParam0->_fU128, iParam0->_fU140, 45, 0 );
                if (iParam0->_fU924 != 0)
                {
                    SET_CAM_FAR_DOF( iParam0->_fU124, iParam0->_fU924, iParam0->_fU928 );
                    SET_CAM_DOF_STRENGTH( iParam0->_fU124, iParam0->_fU932 );
                }
            }
            SET_CAM_ACTIVE( iParam0->_fU124, 1 );
            if (NOT (IS_PED_DEAD( sub_660() )))
            {
                SET_PLAYER_CONTROL( sub_682(), 0, 0 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( sub_660(), 1 );
                REENABLE_PLAYER_INPUT( 30 );
                SET_PED_VISIBLE( sub_660(), 0 );
                DISPLAY_HUD( 0 );
            }
            RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
            if ((iParam0->_fU912 == 0) AND ((DOES_OBJECT_EXIST( iParam0->_fU40 )) == 1))
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU40, iParam0 + 44 );
                FREEZE_OBJECT_POSITION( iParam0->_fU40, 1 );
                SET_OBJECT_COLLISION( iParam0->_fU40, 0 );
            }
            sub_25000( iParam0 + 152, 1 );
        }
        if ((sub_25819()) || (((sub_30114( iParam0 )) AND ((ref iParam0->_fU152->_fU0) == 1)) || (sub_25938( iParam0 + 152 ))))
        {
            sub_12502( sub_660(), iParam0->_fU1012, iParam0->_fU1024 );
            sub_25000( iParam0 + 152, 0 );
            if (sub_28498( iParam0 ))
            {
                sub_5668( iParam0 + 1028, iParam0->_fU1064, 1, 0 );
            }
            else
            {
                sub_5668( iParam0 + 1028, iParam0->_fU1068, 1, 0 );
            }
            sub_5804( iParam0 + 1028 );
            if (sub_28498( iParam0 ))
            {
                sub_9965( iParam0->_fU1008, 0 );
                ISEQ_REGISTER_ENTITY( iParam0->_fU1008, "Max", sub_660(), 0 );
                ISEQ_START( iParam0->_fU1008 );
            }
            iParam0->_fU940 = 5;
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_660() )))
        {
            SET_PED_VISIBLE( sub_660(), 1 );
        }
        if (sub_28498( iParam0 ))
        {
            CAMERA_PLAY_ANIMATED( iParam0->_fU100, iParam0->_fU104, 0, iParam0->_fU108, iParam0->_fU120, 0, 0 );
            iParam0->_fU1080 = 1;
        }
        SET_CAM_ACTIVE( iParam0->_fU124, 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        iParam0->_fU940 = 6;
        break;
        case 6:
        if (sub_5924( iParam0 + 1028 ))
        {
            if (sub_28498( iParam0 ))
            {
                ISEQ_UNREGISTER_ENTITY( iParam0->_fU1008, "Max" );
                ISEQ_TERMINATE( iParam0->_fU1008 );
            }
            iParam0->_fU0 = 1;
            DISPLAY_HUD( 1 );
            DESTROY_CAM( iParam0->_fU124 );
            STOP_MOVIE( 2 );
            AUDIO_ENABLE_TV_MOVIE( 0 );
            RELEASE_MOVIE( 2 );
            if (iParam0->_fU912 == 0)
            {
                sub_7590( iParam0->_fU40 );
            }
            sub_5668( ref l_U184, 750, 1, 0 );
            sub_5804( ref l_U184 );
            iParam0->_fU940 = 7;
        }
        break;
        case 7:
        if (sub_5924( ref l_U184 ))
        {
            if (iParam0->_fU1072 == 0)
            {
                sub_28076( iParam0 );
            }
            iParam0->_fU940 = 8;
        }
        break;
        case 8:
        if (sub_30770( iParam0 ))
        {
            DESTROY_CAM( iParam0->_fU124 );
            if (sub_28498( iParam0 ))
            {
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU1076, 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( 0, 1065353216, 0 );
            }
            if (NOT (IS_PED_DEAD( sub_660() )))
            {
                CLEAR_PED_PRIMARY_LOOKAT( sub_660() );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( sub_660(), 0 );
            }
            iParam0->_fU940 = 0;
        }
        else
        {
            sub_527( "rw", " waiting to reholster weapon ", 0 );
        }
        break;
        default: break;
    }
    if ((iParam0->_fU1080) AND ((CAMERA_ANIMATED_CURRENT_TIME() > ((CAMERA_ANIMATED_LENGTH( iParam0->_fU100, iParam0->_fU104 )) - sub_31037())) AND (IS_ANIMATED_CAMERA_PLAYING())))
    {
        iParam0->_fU1080 = 0;
        sub_31082();
    }
    return;
}

void sub_25000(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_19800( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_19800( iParam0, 0 );
        sub_25071( iParam0, 0 );
        if ((IS_PED_DEAD( sub_660() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_660() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_660(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_25071(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_25222( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_25222(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_25283( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_25283( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_25283(int iParam0)
{
    if (((IS_PED_DEAD( sub_660() )) == 0) AND ((IS_PLAYER_DEAD( sub_682() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_660() )) == 1) || (((IS_PED_GETTING_UP( sub_660() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_660() )) == 1) || (((IS_PED_IN_COVER( sub_660() )) == 1) || (((IS_PED_DUCKING( sub_660() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_660() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

int sub_25819()
{
    float fVar2;

    fVar2 = 50.00000000;
    fVar2 = 3.00000000;
    if (IS_PED_IN_SPHERE_AREA_OF_ANY_ENEMY_PEDS( sub_660(), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_660() ), fVar2, 0 ))
    {
        return 1;
    }
    return 0;
}

int sub_25938(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_660() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_660() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_9415( sub_660(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_9415( sub_660(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_25222( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_25283( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_26820() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_25000( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_19800( iParam0, 0 );
                            sub_25071( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_19800( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_660() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_660(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_19800( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_25071( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_660() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_660(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_660() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_660(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_660() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_660(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_19800( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_25071( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_660() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_660() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_660() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_660(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_25071( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_26820()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

int sub_27790(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_28076(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (NOT (IS_PED_DEAD( sub_660() )))
    {
        if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_660(), 0 ) ))
        {
            iParam0->_fU944 = GET_WEAPON_FROM_HOLSTER( sub_660(), 0 );
        }
        else if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_660(), 1 ) ))
        {
            iParam0->_fU944 = GET_WEAPON_FROM_HOLSTER( sub_660(), 1 );
        }
        SELECT_WEAPON_TO_HAND( sub_660(), iParam0->_fU944, 0, iVar3 );
    }
    return;
}

void sub_28237()
{
    if (NOT (IS_PED_DEAD( sub_660() )))
    {
        SELECT_WEAPON_TO_HAND( sub_660(), 0, 0, 0 );
        SELECT_WEAPON_TO_HAND( sub_660(), 0, 1, 0 );
    }
    return;
}

int sub_28408(int iParam0)
{
    if ((iParam0->_fU1072 == 1) || ((GET_WEAPON_FROM_HAND( sub_660(), 0, 0 )) != iParam0->_fU944))
    {
        return 1;
    }
    return 0;
}

int sub_28498(unknown uParam0)
{
    return 1;
    return 0;
}

int sub_28735()
{
    return 1;
    return 0;
}

int sub_30114(int iParam0)
{
    if (sub_28498( iParam0 ))
    {
        if ((GET_SCRIPT_MOVIE_FRAMES_REMAINING( 2 )) < ((iParam0->_fU1068 / 1000) * 30.00000000))
        {
            return 1;
        }
    }
    else if ((IS_PAUSE_MENU_ACTIVE() == 0) AND ((IS_SCRIPT_MOVIE_PLAYING( 2 )) == 0))
    {
        return 1;
    }
    return 0;
}

int sub_30770(int iParam0)
{
    if ((iParam0->_fU1072) || ((GET_WEAPON_FROM_HAND( sub_660(), 0, 0 )) == iParam0->_fU944))
    {
        return 1;
    }
    return 0;
}

int sub_31037()
{
    return 1500;
}

void sub_31082()
{
    int iVar2;

    iVar2 = 1500;
    iVar2 = 500;
    CAMERA_FREEZE_FRAME( 1, iVar2, 1500, 0 );
    if (NOT (IS_PED_DEAD( sub_660() )))
    {
        SET_PLAYER_CONTROL( sub_682(), 1, 0 );
    }
    return;
}

void sub_31561()
{
    sub_527( "SP", "FAVELA RAID: P_UNLOAD_ASSETS", 0 );
    sub_7951( 772685022 );
    sub_7951( -883391640 );
    return;
}


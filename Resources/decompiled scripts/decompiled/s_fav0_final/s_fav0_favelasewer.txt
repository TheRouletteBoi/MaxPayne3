void main()
{
    l_U0 = 1;
    l_U1 = 144;
    StrCopy( ref l_U2, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U10, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U442 = 1;
    l_U654 = 0;
    StrCopy( ref l_U833, "SFV1_FSB7A", 32 );
    StrCopy( ref l_U841, "SFV1_FSMLA", 32 );
    l_U858 = 0;
    l_U860 = {119.92000000, -233.11000000, -5.88000000};
    l_U863 = -67.30000000;
    l_U864 = {121.67000000, -230.91000000, -5.88000000};
    l_U867 = 175.40000000;
    l_U868 = {122.42000000, -234.56000000, -5.88000000};
    l_U871 = 59.13000000;
    l_U872 = {120.70000000, -232.00000000, -5.78000000};
    l_U875 = {0.00000000, 0.00000000, -180.00000000};
    l_U878 = 0;
    l_U879 = 0;
    l_U900 = 0;
    l_U901 = {126.14000000, -243.69000000, -4.43000000};
    l_U904 = {127.40000000, -239.80000000, -4.43000000};
    l_U907 = 90.00000000;
    l_U908 = 115.00000000;
    l_U976 = {116.12000000, -238.20000000, -2.92000000};
    l_U979 = -180.00000000;
    l_U980 = {113.03000000, -242.00000000, 0.02900000};
    l_U983 = -420.00000000;
    l_U984 = {112.92300000, -244.14400000, 0.02900000};
    l_U987 = 29.44500000;
    l_U988 = {0.19000000, 0.10000000, 0.16000000};
    l_U991 = {0.60000000, 0.00000000, 0.00000000};
    l_U995 = {101.07000000, -243.78000000, -2.92000000};
    l_U998 = 270.00000000;
    l_U999 = {102.62000000, -242.36000000, -2.92000000};
    l_U1002 = 45.00000000;
    l_U1003 = {101.62000000, -241.57000000, -2.92000000};
    l_U1006 = 200.23600000;
    l_U1007 = {100.48000000, -240.80000000, -2.92000000};
    l_U1010 = 270;
    l_U1011 = 0;
    l_U1022 = 0;
    l_U1037 = {123.42000000, -259.89000000, -8.61000000};
    l_U1040 = 9.10000000;
    sub_735( "SA", "Script fav1_favelaSewer.sc is starting...", "###" );
    if (g_U748 == 2)
    {
        DO_SCREEN_FADE_OUT( 0 );
        g_U653 = 1;
        g_U654 = 1;
    }
    l_U858 = 1;
    while (IS_EXITFLAG_SET() == 0)
    {
        sub_836();
        sub_6775();
        sub_28691();
        WAIT( 0 );
    }
    g_U651 = 0;
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_fav0_favelaSewer" );
    sub_735( "SA", "Script fav1_favelaSewer.sc is terminating...", "###" );
    return;
}

void sub_735(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_836()
{
    if (sub_846())
    {
        if (g_U748 == 2)
        {
            if ((IS_PLAYER_DEAD( sub_1140() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_1140(), 0, 0 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            sub_1392();
            sub_1472( g_U662 );
            sub_1472( g_U663 );
            sub_1472( g_U664 );
            sub_1472( g_U665 );
            sub_1472( g_U666 );
            ISEQ_UNREGISTER_ENTITY( -1989829375, "balcony1" );
            ISEQ_UNREGISTER_ENTITY( -1989829375, "balcony2" );
            ISEQ_UNREGISTER_ENTITY( -1989829375, "balcony3" );
            ISEQ_UNREGISTER_ENTITY( -1989829375, "balcony4" );
            ISEQ_UNREGISTER_ENTITY( -1989829375, "balcony5" );
            ISEQ_TERMINATE( -1989829375 );
            sub_1472( g_U658 );
            sub_1472( g_U659 );
            sub_1472( g_U660 );
            sub_1472( g_U661 );
            ISEQ_UNREGISTER_ENTITY( -1196735135, "dealer1" );
            ISEQ_UNREGISTER_ENTITY( -1196735135, "dealer2" );
            ISEQ_UNREGISTER_ENTITY( -1196735135, "talker1" );
            ISEQ_UNREGISTER_ENTITY( -1196735135, "talker2" );
            ISEQ_TERMINATE( -1196735135 );
            sub_1438( ref l_U462 );
            sub_1676( l_U859 );
            sub_1472( l_U712 );
            ISEQ_UNREGISTER_ENTITY( 142895691, "kid1" );
            ISEQ_UNREGISTER_ENTITY( 142895691, "kid2" );
            ISEQ_UNREGISTER_ENTITY( 142895691, "kid3" );
            ISEQ_UNREGISTER_ENTITY( 142895691, "ball" );
            ISEQ_TERMINATE( 142895691 );
            ISEQ_UNREGISTER_ENTITY( -442719108, "FLGE" );
            ISEQ_UNREGISTER_ENTITY( -442719108, "GMED" );
            ISEQ_UNREGISTER_ENTITY( -442719108, "GMED1" );
            ISEQ_UNREGISTER_ENTITY( -442719108, "GMED2" );
            ISEQ_TERMINATE( -442719108 );
            ISEQ_UNREGISTER_ENTITY( 868916918, "PED" );
            ISEQ_TERMINATE( 868916918 );
            ISEQ_UNREGISTER_ENTITY( 1836508187, "player" );
            ISEQ_TERMINATE( 1836508187 );
            if ((IS_PED_DEAD( sub_1118() )) == 0)
            {
                PED_ACTION_TREE_PLAY_NODE( sub_1118(), "/Global/S_FAV1_WALK/S_FAV1_WALK/S_FAV1_WALK" );
            }
            CLEAR_NAMED_CUTSCENE( "MID_01_FAV1_SEQ" );
            if (l_U18._fU0)
            {
                sub_2710( ref l_U18, sub_1118() );
            }
            l_U858 = 1;
        }
        else
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
    }
    return;
}

int sub_846()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1118() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1118(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1140(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1140(), 1 );
            if ((IS_PED_VISIBLE( sub_1118() )) == 0)
            {
                SET_PED_VISIBLE( sub_1118(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

int sub_1118()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1140() );
    }
    return 0;
}

void sub_1140()
{
    return GET_PLAYER_ID();
}

void sub_1392()
{
    sub_735( "SA", "P_CLEANUP_ALL", "###" );
    sub_1438( ref l_U462 );
    sub_1438( ref l_U520 );
    sub_1438( ref l_U607 );
    sub_1438( ref l_U650 );
    sub_1438( ref l_U575 );
    sub_1472( l_U712 );
    sub_1472( l_U656 );
    sub_1472( l_U657 );
    sub_1472( l_U658 );
    sub_1472( l_U659 );
    sub_1472( l_U994 );
    sub_1472( l_U1023 );
    sub_1676( l_U948 );
    sub_1676( l_U949 );
    sub_1676( l_U859 );
    sub_1676( l_U726 );
    RELEASE_SCRIPT_AUDIO_BANK();
    sub_1757( ref l_U767 );
    sub_1757( ref l_U776 );
    sub_1757( ref l_U785 );
    sub_1757( ref l_U794 );
    sub_1757( ref l_U803 );
    sub_1757( ref l_U369 );
    sub_1917( ref l_U461 );
    return;
}

void sub_1438(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_1472( (uParam0^)[I] );
    }
    return;
}

void sub_1472(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_1676(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_1757(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_1917(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_2710(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_735( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_2894( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_3971( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_4263( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_4623( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_4263( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_4623( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_4263( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_4623( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_4908( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_4623( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_4908( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_4623( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_5401( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_5562( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1118(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_735( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_2894(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_2926( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_2926(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_3971(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_4263(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_4579( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_4579(unknown uParam0)
{
    return;
}

void sub_4623(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_4908(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_4579( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_5401(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_5562(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_2926( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_5634( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_5634(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_6775()
{
    switch (l_U858)
    {
        case 0: break;
        case 1:
        sub_6866();
        sub_9493();
        l_U858 = 2;
        break;
        case 2:
        if (g_U654)
        {
            sub_9788();
            l_U858 = 3;
        }
        break;
        case 3:
        if (sub_10277() == 1)
        {
            l_U858 = 4;
        }
        break;
        case 4:
        if (g_U653)
        {
            sub_10462();
            sub_11432();
            l_U858 = 5;
            g_U748 = 2;
        }
        break;
        case 5:
        if ((l_U18._fU0 == 0) AND (HAS_CUTSCENE_FINISHED()))
        {
            sub_11876( ref l_U18, 2, sub_1118(), g_U749[2], g_U849[2], g_U883[2], g_U917[2], l_U442 );
        }
        sub_15490();
        sub_16852();
        sub_17216();
        sub_17756();
        sub_18449();
        sub_20016();
        sub_20223();
        sub_22651();
        sub_23700();
        if (sub_17002( ref l_U423 ))
        {
            sub_24683();
            l_U879 = 1;
        }
        if (sub_17002( ref l_U369 ))
        {
            sub_735( "ka", "TIMER DONE PLAY VIG09SPEECH", 0 );
        }
        if ((sub_17231( ref l_U138, 0 )) == 1)
        {
            sub_25052();
        }
        if ((sub_17231( ref l_U117, 0 )) == 1)
        {
            sub_1472( l_U1023 );
            if (NOT (IS_PED_DEAD( sub_1118() )))
            {
                PED_FINISH_ACTION_INTENTION( sub_1118(), 47 );
            }
            sub_25279( "MID_01_FAV1_SEQ", 0 );
            sub_25527();
        }
        if ((sub_17231( ref l_U243, 0 )) == 1)
        {
            AUDIO_MUSIC_FORCE_TRACK( "FAVELA_ONE_SONG", "FAV_ONE_1", "", 0.00000000, 10000, 0, -1082130432, 0 );
        }
        if ((sub_17231( ref l_U75, 0 )) == 1)
        {
            l_U1011 = 1;
        }
        if ((sub_17231( ref l_U54, 0 )) == 1)
        {
            sub_16386( ref l_U462[0] );
            sub_18892( ref l_U737 );
            sub_18974( 0, sub_1118(), "MAX", ref l_U737, 2, 0 );
            sub_18974( 1, sub_1118(), "MAX", ref l_U737, 2, 0 );
            sub_19205( ref l_U841, ref l_U737, 8, 1 );
            sub_10901( ref l_U785 );
        }
        if ((sub_26276()) || ((sub_17231( ref l_U159, 0 )) == 1))
        {
            sub_1757( ref l_U414 );
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref l_U159._fU0, 0 );
            sub_10901( ref l_U405 );
        }
        if (sub_17002( ref l_U405 ))
        {
            sub_26589( ref l_U737, 0 );
            ISEQ_UNREGISTER_ENTITY( -442719108, "FLGE" );
            ISEQ_UNREGISTER_ENTITY( -442719108, "GMED" );
            ISEQ_UNREGISTER_ENTITY( -442719108, "GMED1" );
            ISEQ_UNREGISTER_ENTITY( -442719108, "GMED2" );
            ISEQ_TERMINATE( -442719108 );
            sub_26831( 1, 0, 0, 1 );
            sub_1438( ref l_U575 );
            sub_26999();
            l_U858 = 6;
        }
        if (sub_17231( ref l_U201, 0 ))
        {
            sub_10901( ref l_U794 );
            sub_10901( ref l_U803 );
        }
        break;
        case 6:
        if (HAS_CUTSCENE_FINISHED())
        {
            DISPLAY_HUD( 0 );
            sub_17438( "kill_flash_double", 3, 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV1_CP_02", "B_OUT_MID_01_FAV1_FWD_CAM", 1, 104.77000000, -240.80000000, -1.34000000, -106.00000000, 0, 0 );
            sub_1472( l_U656 );
            sub_1472( l_U657 );
            sub_1472( l_U658 );
            sub_1472( l_U659 );
            sub_23408( -640021671 );
            if (NOT (IS_PED_DEAD( sub_1118() )))
            {
                SET_PLAYER_CONTROL( sub_1140(), 0, 0 );
                sub_10645( sub_1118(), g_U749[3], g_U849[3] );
                SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U883[3], 1065353216, 0 );
                SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U917[3], 1065353216, 0 );
            }
            l_U858 = 7;
        }
        else
        {
            sub_4579( "\n [rw][script] cutscene is running \n" );
            if ((NOT g_U655) AND (GET_CUTSCENE_TIME_MS() > 39000))
            {
                g_U655 = 1;
            }
            if ((NOT IS_ANIMATED_CAMERA_PLAYING()) AND (GET_CUTSCENE_TIME_MS() > 39700))
            {
                if (NOT (IS_PED_DEAD( sub_1118() )))
                {
                    SET_PLAYER_CONTROL( sub_1140(), 0, 0 );
                }
            }
        }
        break;
        case 7:
        g_U655 = 1;
        sub_28391( 0, 1, 0, -859915232, -859915232, 0 );
        sub_1438( ref l_U462 );
        sub_23408( -8479567 );
        sub_1392();
        sub_28512();
        l_U858 = 0;
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        break;
        default: break;
    }
    return;
}

void sub_6866()
{
    sub_735( "SA", "LOAD_ASSETS", "###" );
    sub_6945( ref l_U466[0], 134.82000000, -229.65000000, -5.65000000, 136.01000000, -654741543, 4, 1, 1, 0, 0 );
    sub_6945( ref l_U466[1], 133.32000000, -231.97000000, -5.65000000, 62.50000000, 1052296572, 4, 1, 1, 0, 0 );
    sub_6945( ref l_U466[2], 135.40000000, -232.30000000, -5.65000000, -64.56000000, 661423953, 4, 1, 1, 0, 0 );
    sub_6945( ref l_U713, 118.49000000, -228.57000000, -5.65000000, 0.00000000, 1656351018, 4, 1, 1, 0, 0 );
    sub_6945( ref l_U506[0], 123.60000000, -252.24000000, -8.36000000, 78.45000000, -1928333464, 4, 1, 1, 0, 0 );
    sub_6945( ref l_U522[0], 102.69000000, -247.81000000, -2.00000000, 37.04000000, -706707838, 4, 1, 1, 0, 0 );
    sub_6945( ref l_U522[1], 101.50000000, -248.08000000, -2.00000000, 20.15000000, -295777167, 4, 1, 1, 0, 0 );
    sub_6945( ref l_U522[2], 100.53000000, -247.07000000, -2.00000000, -113.00000000, -96417682, 4, 1, 1, 0, 0 );
    sub_6945( ref l_U522[3], 100.53000000, -247.07000000, -2.00000000, -113.00000000, 521768239, 4, 1, 1, 0, 0 );
    sub_6945( ref l_U580[0], 94.68000000, -239.88000000, -2.15000000, -114.24000000, 847022755, 4, 1, 1, 0, 0 );
    sub_6945( ref l_U580[1], 97.31000000, -241.65000000, -2.83000000, 9.32194300, -1833292740, 4, 1, 1, 0, 0 );
    sub_6945( ref l_U610[0], 49.05000000, -244.42000000, -0.09000000, -12.16000000, -1823102511, 4, 1, 1, 0, 0 );
    sub_6945( ref l_U610[1], 47.13000000, -241.66000000, -0.09000000, -118.75000000, 751117464, 4, 1, 1, 0, 0 );
    sub_6945( ref l_U610[2], 49.88000000, -239.29000000, -0.09000000, -173.75000000, -1208915897, 4, 1, 1, 0, 0 );
    sub_6945( ref l_U1024, l_U1037, l_U1040, -1928333464, 4, 1, 1, 0, 0 );
    sub_7731( ref l_U54, "FAV1_FOOTBALL_MONO", 118.11000000, -246.05000000, -6.00000000, 3.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7731( ref l_U75, "TRIG_CAFE_WALKER", 115.11000000, -241.55000000, -6.00000000, 18.00000000, 6.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7731( ref l_U96, "FAV1_FOOTBALL_LSA", 122.44000000, -250.66000000, -10.09000000, 4.00000000, 24.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7731( ref l_U117, "FAV1_LOAD_MID", 122.44000000, -249.66000000, -10.09000000, 3.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7731( ref l_U138, "FAV1_VIG_12_SPEECH", 111.22000000, -240.97000000, -4.38000000, 3.00000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7731( ref l_U159, "tbMID_01_F1", 102.51000000, -243.83000000, -3.08000000, 12.00000000, 7.00000000, 5.00000000, 0.00000000, 0.00000000, -89.99000000, 1 );
    sub_7731( ref l_U180, "FAV1_MIDSCENE_YOUTHS_LINGER", 110.12000000, -240.78000000, -6.38000000, 8.00000000, 7.00000000, 10.00000000, 0.00000000, 0.00000000, -0.36000600, 1 );
    sub_7731( ref l_U201, "FAV1_BAR_MONOLOGUE", 93.64000000, -246.45000000, -2.97000000, 5.00000000, 6.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7731( ref l_U222, "FAV1_BAR_WALKER", 67.00000000, -244.25000000, -2.97000000, 5.00000000, 6.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7731( ref l_U243, "tbFav0MusicSwitch", 120.29000000, -246.31000000, -7.41000000, 2.53000000, 3.72000000, 2.33000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7731( ref l_U264, "IMAGE_FX_1", 113.26000000, -241.20000000, -4.22000000, 2.53000000, 3.72000000, 2.33000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_7731( ref l_U285, "IMAGE_FX_2", 137.65600000, -256.15100000, -10.54540000, 4.00000000, 15.00000000, 4.00000000, 0.00000000, 0.00000000, -20.47090000, 1 );
    sub_7731( ref l_U327, "IMAGE_FX_4", 130.40900000, -256.32800000, -10.55000000, 4.00000000, 15.00000000, 4.00000000, 0.00000000, 0.00000000, 0.27000000, 1 );
    sub_7731( ref l_U306, "IMAGE_FX_3", 135.64100000, -256.36500000, -10.55000000, 4.00000000, 15.00000000, 4.00000000, 0.00000000, 0.00000000, -21.32000000, 1 );
    sub_7731( ref l_U348, "IMAGE_FX_5", 123.09800000, -255.83000000, -10.54540000, 4.00000000, 15.00000000, 4.00000000, 0.00000000, 0.00000000, 0.31848800, 1 );
    sub_8867( ref l_U767, 12000, 1, 0 );
    sub_8867( ref l_U776, 15000, 1, 0 );
    sub_8867( ref l_U785, 7000, 1, 0 );
    sub_8867( ref l_U405, 50, 1, 0 );
    sub_8867( ref l_U414, 15000, 1, 0 );
    sub_8867( ref l_U794, 4000, 1, 0 );
    sub_8867( ref l_U803, 6000, 1, 0 );
    sub_9124( ref l_U812, 596292157, 114.00110000, -244.06040000, -4.49155000, 0.00000000, 0.00000000, 0.00000000 );
    sub_9172( ref l_U812, 1 );
    sub_9124( ref l_U819, 596292157, 115.18850000, -235.55170000, -4.61929000, 0.00000000, 0.00000000, 0.00000000 );
    sub_9172( ref l_U819, 1 );
    sub_9124( ref l_U826, -119620944, 125.42960000, -248.76510000, -7.07274000, 0.00000000, 0.00000000, 0.00000000 );
    sub_9172( ref l_U826, 1 );
    return;
}

void sub_6945(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_7731(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_8867(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_9124(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_9172(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_9184( iParam0 )) == 0)
    {
        sub_9250( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_9184(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_9250(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_9493()
{
    sub_735( "SA", "INITIALIZE_SCRIPT_DATA", "###" );
    sub_9548( ref g_U1271 );
    l_U849 = {110.99000000, -241.62000000, -4.40000000};
    l_U852 = {85.65000000, -251.04000000, -1.19000000};
    l_U855 = {53.06000000, -249.98000000, -0.03000000};
    g_U667 = 1;
    l_U879 = 0;
    l_U655 = 0;
    l_U441 = 0;
    l_U442 = 1;
    return;
}

void sub_9548(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
    sub_9568();
    return;
}

void sub_9568()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

void sub_9788()
{
    sub_9804( 2045629272, 0 );
    sub_9804( -1745537260, 0 );
    sub_9804( 1977329440, 0 );
    sub_9804( 1422427243, 0 );
    sub_9804( 1899377337, 0 );
    sub_9804( 723970757, 0 );
    sub_10030( 868916918, 0 );
    sub_10030( -1989829375, 0 );
    sub_10030( -1196735135, 0 );
    sub_10030( 1836508187, 0 );
    return;
}

void sub_9804(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_4579( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_10030(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_10277()
{
    if ((ISEQ_IS_LOADED( 1836508187 )) AND ((ISEQ_IS_LOADED( -1196735135 )) AND ((ISEQ_IS_LOADED( -1989829375 )) AND ((ISEQ_IS_LOADED( 868916918 )) AND ((HAS_MODEL_LOADED( 723970757 )) AND ((HAS_MODEL_LOADED( 1899377337 )) AND ((HAS_MODEL_LOADED( 1422427243 )) AND ((HAS_MODEL_LOADED( -1745537260 )) AND ((HAS_MODEL_LOADED( 1977329440 )) AND (HAS_MODEL_LOADED( 2045629272 )))))))))))
    {
        return 1;
    }
    return 0;
}

void sub_10462()
{
    sub_735( "SA", "P_START_GAMEPLAY", "###" );
    BULLET_CAMERA_PRELOAD_TEXT_BINK( "07_02_FAV1_TXT_GUTTER", 1 );
    if (g_U748 == 2)
    {
        sub_10551();
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U883[2], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U917[2], 1065353216, 0 );
    if (NOT (IS_PED_DEAD( sub_1118() )))
    {
        PED_SET_ACTION_INTENTION( sub_1118(), 47, -1, 0.00000000, 0.00000000, 0.00000000 );
    }
    sub_1757( ref l_U423 );
    sub_8867( ref l_U423, 3000, 1, 0 );
    sub_10901( ref l_U423 );
    sub_9172( ref g_U979, 0 );
    sub_9172( ref g_U986, 0 );
    sub_9172( ref g_U993, 0 );
    sub_11047();
    sub_10901( ref l_U767 );
    sub_10901( ref l_U776 );
    sub_8867( ref l_U369, 8000, 1, 0 );
    sub_10901( ref l_U369 );
    l_U900 = 1;
    l_U878 = 1;
    if (g_U748 == 2)
    {
        l_U442 = 0;
    }
    ENABLE_STATIC_EMITTER( "S_FAV0_SE_INTRO_PARTY_MUSIC_CENTRE", 0 );
    ENABLE_STATIC_EMITTER( "S_FAV0_SE_INTRO_PARTY_MUSIC_02", 1 );
    CLEAR_NAMED_CUTSCENE( "MID_01_FAV1_SEQ" );
    return;
}

void sub_10551()
{
    sub_735( "rw", "P_SETUP_PLAYER", 0 );
    if (((IS_PED_DEAD( sub_1118() )) == 0) AND ((IS_PLAYER_DEAD( sub_1140() )) == 0))
    {
        sub_10645( sub_1118(), g_U749[2], g_U849[2] );
        SET_PLAYER_SPRINT( sub_1140(), 0 );
        SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1140(), 0 );
        SET_CAN_ROLL_DODGE( sub_1118(), 0 );
        SET_ADRENALINE_NOT_ALLOW( 1 );
        REMOVE_ALL_PED_WEAPONS( sub_1118() );
        SET_CAM_VIEW_MODE( 0 );
        l_U654 = 1;
    }
    return;
}

void sub_10645(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_10901(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

void sub_11047()
{
    sub_735( "SA", "P_LIMIT_PLAYER_ACTIONS", "###" );
    if (((IS_PED_DEAD( sub_1118() )) == 0) AND ((IS_PLAYER_DEAD( sub_1140() )) == 0))
    {
        SET_PLAYER_CONTROL( sub_1140(), 0, 0 );
        REENABLE_PLAYER_INPUT( 7 );
        REENABLE_PLAYER_INPUT( 10 );
        REENABLE_PLAYER_INPUT( 11 );
        REENABLE_PLAYER_INPUT( 12 );
        REENABLE_PLAYER_INPUT( 13 );
        REENABLE_PLAYER_INPUT( 14 );
        REENABLE_PLAYER_INPUT( 15 );
        REENABLE_PLAYER_INPUT( 16 );
        REENABLE_PLAYER_INPUT( 17 );
        REENABLE_PLAYER_INPUT( 19 );
        REENABLE_PLAYER_INPUT( 22 );
    }
    return;
}

void sub_11432()
{
    sub_9804( 1899377337, 0 );
    sub_9804( -1942652953, 0 );
    sub_9804( -8479567, 0 );
    sub_9804( -1745537260, 0 );
    sub_9804( -895916100, 0 );
    sub_9804( -640021671, 0 );
    sub_10030( 142895691, 0 );
    sub_10030( 1836508187, 0 );
    sub_10030( 1836508187, 0 );
    sub_10030( -1353661000, 0 );
    sub_11584( "SCRIPT_MISSION\S_FAV0_SOCCER", 0 );
    sub_11584( "SCRIPT_MISSION\S_FAV0_RUG_LADY", 0 );
    sub_11714( "LEVEL_S_FAV1_CP_02b", 0, 1 );
    return;
}

void sub_11584(unknown uParam0, int iParam1)
{
    LOAD_SCRIPT_AUDIO_BANK( uParam0 );
    if (iParam1 == 1)
    {
        while ((IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_11714(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_11876(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_735( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_735( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_5562( iParam1 );
        sub_12135( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_12586( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_12586( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_12818( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_12586( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_12818( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_12818( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_12586( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_12818( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_12818( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_12818( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_12586( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_12818( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_12818( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_12818( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_12818( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_14376( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_735( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_12135(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_2926( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_735( "TEH", "Ending context", 0 );
        sub_735( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_12586(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_12818(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_14376(int iParam0)
{
    sub_4579( "CHECKPOINT DATA" );
    sub_14415( iParam0->_fU4 );
    sub_14438( iParam0->_fU16 );
    sub_14438( iParam0->_fU20 );
    sub_14438( iParam0->_fU24 );
    sub_14481( iParam0->_fU28 );
    sub_14481( iParam0->_fU56 );
    sub_14481( iParam0->_fU60 );
    sub_14481( iParam0->_fU64 );
    sub_14481( iParam0->_fU68 );
    sub_14481( iParam0->_fU72 );
    sub_14481( iParam0->_fU76 );
    sub_14481( iParam0->_fU80 );
    sub_14481( iParam0->_fU84 );
    sub_14481( iParam0->_fU88 );
    sub_14481( iParam0->_fU92 );
    sub_14438( iParam0->_fU32 );
    sub_14481( iParam0->_fU36 );
    sub_14481( iParam0->_fU40 );
    sub_14481( iParam0->_fU44 );
    sub_14438( iParam0->_fU136 );
    sub_14686( iParam0->_fU140 );
    sub_14481( iParam0->_fU52 );
    sub_4579( "---nRightHolsterAttachmentEnabled: " );
    sub_14481( iParam0->_fU96 );
    sub_4579( "---nRightHolsterAttachmentToggled: " );
    sub_14481( iParam0->_fU100 );
    sub_4579( "---nLeftHolsterAttachmentEnabled: " );
    sub_14481( iParam0->_fU104 );
    sub_4579( "---nLeftHolsterAttachmentToggled: " );
    sub_14481( iParam0->_fU108 );
    sub_4579( "---nRifleHolsterAttachmentEnabled: " );
    sub_14481( iParam0->_fU112 );
    sub_4579( "---nRifleHolsterAttachmentToggled: " );
    sub_14481( iParam0->_fU116 );
    sub_4579( "---nRightHandAttachmentEnabled: " );
    sub_14481( iParam0->_fU120 );
    sub_4579( "---nRightHandAttachmentToggled: " );
    sub_14481( iParam0->_fU124 );
    sub_4579( "---nLeftHandAttachmentEnabled: " );
    sub_14481( iParam0->_fU128 );
    sub_4579( "---nLeftHandAttachmentToggled: " );
    sub_14481( iParam0->_fU132 );
    sub_14481( l_U1 );
    sub_14481( 144 );
    return;
}

void sub_14415(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_14438(unknown uParam0)
{
    return;
}

void sub_14481(unknown uParam0)
{
    return;
}

void sub_14686(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_15490()
{
    unknown uVar2;

    switch (l_U878)
    {
        case 0: break;
        case 1:
        sub_1472( l_U1023 );
        l_U1023 = sub_15563( ref l_U1024 );
        if (NOT (IS_PED_DEAD( l_U1023 )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U1023, 1 );
            SET_PED_AIM_LOCKONABLE( l_U1023, 0 );
            SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( l_U1023, 0 );
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U1023, 1 );
            if (NOT (IS_PED_DEAD( sub_1118() )))
            {
                SET_PED_DEFAULT_AIM_AT_PED( l_U1023, sub_1118() );
            }
        }
        sub_10645( l_U1023, l_U1037, l_U1040 );
        ISEQ_REGISTER_ENTITY( 868916918, "PED", l_U1023, 0 );
        ISEQ_START( 868916918 );
        sub_16386( ref l_U1023 );
        if (NOT (IS_PED_DEAD( l_U1023 )))
        {
            OPEN_SEQUENCE_TASK( ref uVar2 );
            if (l_U1022 == 1)
            {
                TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 105.70000000, -240.26000000, -2.93000000, 2, -1, 1048576000, 0, 0 );
            }
            else
            {
                TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 105.70000000, -240.26000000, -2.93000000, 3, -1, 1048576000, 0, 0 );
            }
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( l_U1023, uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        l_U878 = 2;
        break;
        case 2:
        if (((ISEQ_QUERY_ENTITY_STATE( 868916918, "PED", 6 )) == 1) || (((ISEQ_QUERY_STATE( 868916918, 3 )) == 0) || ((ISEQ_IS_LOADED( 868916918 )) == 0)))
        {
            l_U878 = 3;
        }
        break;
        case 3:
        sub_1472( l_U1023 );
        l_U878 = 0;
        break;
    }
    return;
}

void sub_15563(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_9804( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_16042( iParam0->_fU40 );
    sub_16122( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_16042(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_16122(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_16386(unknown uParam0)
{
    sub_735( "rw", "P_PLAYER_LOOK_AT_PED", 0 );
    if (NOT (IS_PED_DEAD( sub_1118() )))
    {
        CLEAR_PED_PRIMARY_LOOKAT( sub_1118() );
    }
    sub_16460();
    if ((NOT (IS_PED_DEAD( (uParam0^) ))) AND (NOT (IS_PED_DEAD( sub_1118() ))))
    {
        SET_PED_PRIMARY_LOOKAT( sub_1118(), (uParam0^) );
    }
    return;
}

void sub_16460()
{
    sub_735( "RW", "P_START_LOOK_TIME()", "###" );
    sub_1757( ref g_U738 );
    sub_8867( ref g_U738, 5500, 1, 0 );
    sub_10901( ref g_U738 );
    return;
}

void sub_16852()
{
    if (l_U654)
    {
        if (IS_ANIMATED_CAMERA_PLAYING() == 1)
        {
            if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_FAV1_CP_02", "B_OUT_07_02_FAV1_FWD_CAM" )) - 1500))
            {
                sub_8867( ref l_U443, 1500, 1, 0 );
                sub_10901( ref l_U443 );
                l_U654 = 0;
                CAMERA_ANIMATED_STOP( 1500, 1 );
            }
        }
    }
    if (sub_17002( ref l_U443 ))
    {
        if (NOT (IS_PED_DEAD( sub_1118() )))
        {
            SET_PLAYER_CONTROL( sub_1140(), 1, 0 );
            DISPLAY_HUD( 1 );
        }
    }
    return;
}

int sub_17002(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_17216()
{
    if ((sub_17231( ref l_U264, 0 )) == 1)
    {
        sub_735( "CO", "tbImageFx1", 0 );
        sub_17438( "DOUBLE_TINT_BLUE_FLASH_SHORT_F", 3, 0 );
    }
    if ((sub_17231( ref l_U285, 0 )) == 1)
    {
        sub_735( "CO", "tbImageFx2", 0 );
        sub_17438( "GAMMA_ZOOM_1", 4, 0 );
    }
    if ((sub_17231( ref l_U306, 0 )) == 1)
    {
        sub_735( "CO", "tbImageFx3", 0 );
    }
    if ((sub_17231( ref l_U327, 0 )) == 1)
    {
        sub_735( "CO", "tbImageFx4", 0 );
        sub_17438( "DISTORT_INTERLACE_MID_INVRT_01", 4, 0 );
        sub_17438( "TRIPLE_IMAGE_BLUR_DOWN_L_DOF", 4, 0 );
    }
    return;
}

void sub_17231(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_17273( sub_1118(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_17273(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_17438(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_735( "rw", "P_RUN_SPECIFIC_INTERLACE_FX", 0 );
    if (IS_SCRIPTEDFX_ENABLED() == 1)
    {
        PLAY_IMAGEFX( uParam0, uParam1, uParam2 );
    }
    return;
}

void sub_17756()
{
    if (g_U667)
    {
        sub_6945( ref g_U684, g_U668, g_U671, 1794331553, 4, 1, 1, 0, 0 );
        sub_6945( ref g_U697, g_U672, g_U675, -2124613950, 4, 1, 1, 0, 0 );
        sub_6945( ref g_U710, g_U676, g_U679, -296288220, 4, 1, 1, 0, 0 );
        sub_6945( ref g_U723, g_U680, g_U683, -2124613950, 4, 1, 1, 0, 0 );
        g_U658 = sub_15563( ref g_U684 );
        g_U659 = sub_15563( ref g_U697 );
        SET_PED_NAME_DEBUG( g_U658, "piVig09C_1__" );
        SET_PED_NAME_DEBUG( g_U659, "piVig09C_2__" );
        if (NOT (IS_PED_DEAD( g_U659 )))
        {
            FREEZE_PED_POSITION( g_U659, 1 );
        }
        g_U660 = sub_15563( ref g_U710 );
        g_U661 = sub_15563( ref g_U723 );
        ISEQ_REGISTER_ENTITY( -1196735135, "dealer1", g_U658, 0 );
        ISEQ_REGISTER_ENTITY( -1196735135, "dealer2", g_U659, 0 );
        ISEQ_REGISTER_ENTITY( -1196735135, "talker1", g_U660, 0 );
        ISEQ_REGISTER_ENTITY( -1196735135, "talker2", g_U661, 0 );
        SET_PED_NAME_DEBUG( g_U658, "piVig09C_1" );
        SET_PED_NAME_DEBUG( g_U659, "piVig09C_2" );
        SET_PED_NAME_DEBUG( g_U660, "piVig09C_3" );
        SET_PED_NAME_DEBUG( g_U661, "piVig09C_4" );
        ISEQ_START( -1196735135 );
        g_U667 = 0;
        sub_8867( ref l_U378, 6333, 1, 0 );
        sub_10901( ref l_U378 );
    }
    if (sub_17002( ref l_U378 ))
    {
        sub_8867( ref l_U387, 21000, 1, 0 );
        sub_10901( ref l_U387 );
        if (NOT (IS_PED_DEAD( g_U659 )))
        {
            PED_SET_ACTION_INTENTION( g_U659, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            FREEZE_PED_POSITION( g_U659, 0 );
        }
    }
    if (sub_17002( ref l_U387 ))
    {
        ISEQ_UNREGISTER_ENTITY( -1196735135, "dealer2" );
        sub_1472( g_U659 );
    }
    return;
}

void sub_18449()
{
    if (IS_MAGDEMO() == 0)
    {
        if (sub_17002( ref l_U452 ))
        {
            if (IS_SCRIPTEDFX_ENABLED())
            {
                sub_735( "SA", "Playing gutter bcam", 0 );
                l_U461 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
                SETUP_BULLET_CAMERA_SCENE( l_U461, "07_02_FAV1_TXT_GUTTER", 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
                RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
                l_U655 = 1;
            }
        }
        if ((l_U655 == 1) AND ((IS_BULLET_CAMERA_SCENE_ACTIVE( l_U461 )) == 0))
        {
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        }
    }
    if (HAS_CUTSCENE_UNLOADED())
    {
        if (sub_17002( ref l_U767 ))
        {
            sub_17438( "Triple_move_right_color_split1", 4, 0 );
            sub_735( "SA", "Playing monologue", "###" );
            if (NOT IS_MAGDEMO())
            {
                STOP_CURRENT_PLAYING_AMBIENT_SPEECH( sub_1118() );
                sub_18892( ref l_U727 );
                sub_18974( 0, sub_1118(), "MAX", ref l_U727, 2, 0 );
                sub_18974( 1, sub_1118(), "MAX", ref l_U727, 2, 0 );
                sub_19205( ref l_U833, ref l_U727, 8, 1 );
            }
            sub_8867( ref l_U452, 3400, 1, 0 );
            sub_10901( ref l_U452 );
        }
    }
    return;
}

void sub_18892(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_18974(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_19205(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_19229( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_19229(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_19284( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_19284(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_19319( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_19813( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_19319(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_19813(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_20016()
{
    if (NOT (IS_PED_DEAD( l_U650[1] )))
    {
        if ((sub_20061( l_U650[1], l_U855 )) < 2)
        {
            sub_1472( l_U650[1] );
        }
    }
    if (NOT (IS_PED_DEAD( l_U650[2] )))
    {
        if ((sub_20061( l_U650[2], l_U855 )) < 2)
        {
            sub_1472( l_U650[2] );
        }
    }
    return;
}

void sub_20061(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

void sub_20223()
{
    if (sub_17002( ref l_U432 ))
    {
        l_U441 = 1;
    }
    if (l_U441)
    {
        if (NOT (IS_PED_DEAD( g_U662 )))
        {
            PED_SET_ACTION_INTENTION( g_U662, 49, 1000, 0.00000000, 0.00000000, 0.00000000 );
        }
        if (NOT (IS_PED_DEAD( g_U663 )))
        {
            PED_SET_ACTION_INTENTION( g_U663, 49, 1000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
    if (NOT (IS_PED_DEAD( g_U664 )))
    {
        if ((PED_GET_ACTION_INTENTION_STATUS( g_U664, 47 )) == 3)
        {
            PED_FINISH_ACTION_INTENTION( g_U664, 47 );
        }
        if ((PED_GET_ACTION_INTENTION_STATUS( g_U664, 48 )) == 3)
        {
            START_PARTICLE_FX_NON_LOOPED_AT_COORD( "CS_Fav1_RugDust_S", 116.29000000, -239.08000000, -2.29000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            PLAY_AUDIO_EVENT_FROM_PED( "S_FAV0_RUG_BEATER", g_U664 );
            PED_FINISH_ACTION_INTENTION( g_U664, 48 );
        }
    }
    if (l_U900)
    {
        sub_6945( ref l_U909, l_U901, l_U907, 1109513046, 4, 1, 1, 0, 0 );
        sub_6945( ref l_U922, l_U904, l_U908, -1443423610, 4, 1, 1, 0, 0 );
        sub_6945( ref l_U935, l_U976, l_U979, 306411832, 4, 1, 1, 0, 0 );
        sub_6945( ref l_U950, l_U980, l_U983, 986555693, 4, 1, 1, 0, 0 );
        sub_6945( ref l_U963, l_U984, l_U987, 1558652918, 4, 1, 1, 0, 0 );
        sub_1472( g_U662 );
        sub_1472( g_U663 );
        sub_1472( g_U664 );
        sub_1472( g_U665 );
        sub_1472( g_U666 );
        g_U662 = sub_15563( ref l_U909 );
        g_U663 = sub_15563( ref l_U922 );
        g_U664 = sub_15563( ref l_U935 );
        g_U665 = sub_15563( ref l_U950 );
        g_U666 = sub_15563( ref l_U963 );
        ISEQ_REGISTER_ENTITY( -1989829375, "balcony1", g_U662, 0 );
        ISEQ_REGISTER_ENTITY( -1989829375, "balcony2", g_U663, 0 );
        ISEQ_REGISTER_ENTITY( -1989829375, "balcony3", g_U664, 0 );
        ISEQ_REGISTER_ENTITY( -1989829375, "balcony4", g_U665, 0 );
        ISEQ_REGISTER_ENTITY( -1989829375, "balcony5", g_U666, 0 );
        g_U736 = sub_21024( 1977329440, 126.25000000, -243.65000000, -4.57000000, 0.00000000, 0.00000000, 90.00000000, 0, 0, 0 );
        g_U737 = sub_21024( 1977329440, 125.76000000, -242.26000000, -4.45000000, 0.00000000, 0.00000000, 125.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( g_U736 ))
        {
            FREEZE_OBJECT_POSITION( g_U736, 1 );
            SET_OBJECT_COLLISION( g_U736, 0 );
        }
        if (DOES_OBJECT_EXIST( g_U737 ))
        {
            FREEZE_OBJECT_POSITION( g_U737, 1 );
            SET_OBJECT_COLLISION( g_U737, 0 );
        }
        l_U948 = sub_21402( 723970757, l_U988, l_U991, 0, 0, 0 );
        l_U949 = sub_21402( 723970757, l_U988, l_U991, 0, 0, 0 );
        if (NOT (IS_PED_DEAD( g_U665 )))
        {
            ATTACH_OBJECT_TO_PED( l_U948, g_U665, 55060, 0.07000000, 0.14000000, 0.09000000, 0.60000000, 0.00000000, 0.00000000, 0 );
        }
        if (NOT (IS_PED_DEAD( g_U666 )))
        {
            ATTACH_OBJECT_TO_PED( l_U949, g_U666, 54548, 0.04500000, 0.08500000, -0.05000000, -0.80000000, 0.20000000, 0.00000000, 0 );
        }
        sub_10645( g_U662, l_U901, l_U907 );
        sub_10645( g_U663, l_U904, l_U908 );
        sub_10645( g_U664, l_U976, l_U979 );
        sub_10645( g_U665, l_U980, l_U983 );
        sub_10645( g_U666, l_U984, l_U987 );
        SET_PED_NAME_DEBUG( g_U662, "piVIG09B_Bal_1" );
        SET_PED_NAME_DEBUG( g_U663, "piVIG09B_Bal_2" );
        SET_PED_NAME_DEBUG( g_U664, "piVIG09B_Bal_3" );
        SET_PED_NAME_DEBUG( g_U665, "piVIG09B_Bal_4" );
        SET_PED_NAME_DEBUG( g_U666, "piVIG09B_Bal_5" );
        sub_22048();
        ISEQ_START( -1989829375 );
        sub_8867( ref l_U432, 65000, 1, 0 );
        sub_10901( ref l_U432 );
        sub_18892( ref l_U757 );
        sub_22390( 1, g_U662, 847022755, ref l_U757, 2, 0 );
        sub_22390( 2, g_U663, -296288220, ref l_U757, 2, 0 );
        sub_19205( "SFV1_VIG09B", ref l_U757, 8, 1 );
        DO_SCREEN_FADE_IN( 0 );
        l_U900 = 0;
    }
    return;
}

void sub_21024(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_9804( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_21402(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_9804( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_22048()
{
    if (l_U654)
    {
        if (g_U748 == 2)
        {
            SET_PLAYER_CONTROL( sub_1140(), 0, 0 );
            DISPLAY_HUD( 0 );
            sub_17438( "DOUBLE_MASK_INTERLACE_TWITCH", 4, 0 );
            sub_17438( "DOUBLE_TINT_BLUE_FLASH", 4, 0 );
            CAMERA_PLAY_ANIMATED( "LEVEL_S_FAV1_CP_02", "B_OUT_07_02_FAV1_FWD_CAM", 1, 139.43000000, -260.54000000, -7.34000000, 0.96000000, 0, 0 );
            ISEQ_REGISTER_ENTITY( 1836508187, "player", sub_1118(), 0 );
            sub_10645( sub_1118(), g_U749[2], g_U849[2] );
            ISEQ_START( 1836508187 );
        }
    }
    return;
}

void sub_22390(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = uParam2;
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_22651()
{
    switch (l_U879)
    {
        case 0: break;
        case 1:
        sub_1676( l_U859 );
        l_U859 = sub_21024( -895916100, l_U872, l_U875, 0, 0, 0 );
        if (((IS_PED_DEAD( l_U462[0] )) == 0) AND ((DOES_PED_EXIST( l_U462[0] )) == 1))
        {
            ISEQ_REGISTER_ENTITY( 142895691, "kid1", l_U462[0], 0 );
        }
        if (((IS_PED_DEAD( l_U462[1] )) == 0) AND ((DOES_PED_EXIST( l_U462[1] )) == 1))
        {
            ISEQ_REGISTER_ENTITY( 142895691, "kid2", l_U462[1], 0 );
        }
        if (((IS_PED_DEAD( l_U462[2] )) == 0) AND ((DOES_PED_EXIST( l_U462[2] )) == 1))
        {
            ISEQ_REGISTER_ENTITY( 142895691, "kid3", l_U462[2], 0 );
        }
        if ((DOES_OBJECT_EXIST( l_U859 )) == 1)
        {
            ISEQ_REGISTER_ENTITY( 142895691, "ball", l_U859, 1 );
        }
        ISEQ_START( 142895691 );
        sub_16386( ref l_U656 );
        l_U879 = 2;
        break;
        case 2:
        if (((ISEQ_QUERY_ENTITY_STATE( 142895691, "kid1", 6 )) == 1) || (((ISEQ_QUERY_STATE( 142895691, 3 )) == 0) || ((ISEQ_IS_LOADED( 142895691 )) == 0)))
        {
            l_U879 = 3;
        }
        break;
        case 3:
        ISEQ_UNREGISTER_ENTITY( 142895691, "kid1" );
        ISEQ_UNREGISTER_ENTITY( 142895691, "kid2" );
        ISEQ_UNREGISTER_ENTITY( 142895691, "kid3" );
        ISEQ_UNREGISTER_ENTITY( 142895691, "ball" );
        sub_23185( 142895691, 1 );
        sub_1438( ref l_U462 );
        sub_1676( l_U859 );
        sub_23408( -8479567 );
        sub_23408( -895916100 );
        l_U879 = 0;
        break;
    }
    if (sub_17002( ref l_U396 ))
    {
        sub_23579();
    }
    return;
}

void sub_23185(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_23408(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
        sub_4579( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}

void sub_23579()
{
    sub_735( "rw", "P_VIG_10_SPEECH", 0 );
    sub_18892( ref l_U880 );
    sub_18974( 1, l_U712, "M7_WVOICE_01", ref l_U880, 2, 0 );
    sub_19205( "SFV1_VIG10", ref l_U880, 8, 1 );
    return;
}

void sub_23700()
{
    switch (l_U1011)
    {
        case 0: break;
        case 1:
        ISEQ_UNREGISTER_ENTITY( -442719108, "FLGE" );
        ISEQ_UNREGISTER_ENTITY( -442719108, "GMED" );
        ISEQ_UNREGISTER_ENTITY( -442719108, "GMED1" );
        ISEQ_UNREGISTER_ENTITY( -442719108, "GMED2" );
        ISEQ_TERMINATE( -442719108 );
        ISEQ_REQUEST( -442719108 );
        sub_6945( ref l_U660, l_U995, l_U998, 1656351018, 4, 1, 1, 0, 0 );
        sub_1472( l_U656 );
        l_U656 = sub_15563( ref l_U660 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U656, 1 );
        sub_10645( l_U656, l_U995, l_U998 );
        ISEQ_REGISTER_ENTITY( -442719108, "FLGE", l_U656, 0 );
        sub_6945( ref l_U673, l_U999, l_U1002, -295777167, 4, 1, 1, 0, 0 );
        sub_1472( l_U657 );
        l_U657 = sub_15563( ref l_U673 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U657, 1 );
        sub_10645( l_U657, l_U999, l_U1002 );
        ISEQ_REGISTER_ENTITY( -442719108, "GMED", l_U657, 0 );
        sub_6945( ref l_U686, l_U1003, l_U1006, -96417682, 4, 1, 1, 0, 0 );
        sub_1472( l_U658 );
        l_U658 = sub_15563( ref l_U686 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U658, 1 );
        sub_10645( l_U658, l_U1003, l_U1006 );
        ISEQ_REGISTER_ENTITY( -442719108, "GMED1", l_U658, 0 );
        sub_6945( ref l_U699, l_U1007, l_U1010, 521768239, 4, 1, 1, 0, 0 );
        sub_1472( l_U659 );
        l_U659 = sub_15563( ref l_U699 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U659, 1 );
        sub_10645( l_U659, l_U1007, l_U1010 );
        ISEQ_REGISTER_ENTITY( -442719108, "GMED2", l_U659, 0 );
        l_U726 = sub_21024( 1977329440, 100.91000000, -241.50000000, -2.92000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
        if (DOES_OBJECT_EXIST( l_U726 ))
        {
            SET_OBJECT_HEADING( l_U726, 180 );
        }
        ISEQ_START( -442719108 );
        SET_PED_NAME_DEBUG( l_U657, "piGMED_" );
        SET_PED_NAME_DEBUG( l_U656, "piFLGE_" );
        SET_PED_NAME_DEBUG( l_U658, "piGMED1_" );
        SET_PED_NAME_DEBUG( l_U659, "piGMED2_" );
        l_U1011 = 2;
        break;
        case 2: break;
        case 3:
        ISEQ_UNREGISTER_ENTITY( -442719108, "FLGE" );
        ISEQ_UNREGISTER_ENTITY( -442719108, "GMED" );
        ISEQ_UNREGISTER_ENTITY( -442719108, "GMED1" );
        ISEQ_UNREGISTER_ENTITY( -442719108, "GMED2" );
        ISEQ_TERMINATE( -442719108 );
        sub_1472( l_U656 );
        sub_1472( l_U657 );
        sub_1472( l_U658 );
        sub_1472( l_U659 );
        l_U1011 = 0;
        break;
    }
    return;
}

void sub_24683()
{
    int I;

    sub_735( "SA", "P_SETUP_CIVS", "###" );
    for ( I = 0; I < 3; I++ )
    {
        l_U462[I] = sub_15563( ref l_U466[I] );
        if (NOT (IS_PED_DEAD( l_U462[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U462[I], 1 );
        }
    }
    l_U712 = sub_15563( ref l_U713 );
    if (NOT (IS_PED_DEAD( l_U712 )))
    {
        SET_PED_VISIBLE( l_U712, 0 );
    }
    sub_24872( ref l_U462, "Footballers_" );
    return;
}

void sub_24872(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_25052()
{
    sub_735( "rw", "P_VIG_12_TALK()", 0 );
    sub_18892( ref l_U1012 );
    sub_22390( 1, l_U656, -706707838, ref l_U1012, 2, 0 );
    sub_22390( 3, l_U658, -96417682, ref l_U1012, 2, 0 );
    sub_22390( 2, l_U657, -295777167, ref l_U1012, 2, 0 );
    sub_19205( "SFV1_VIG12D", ref l_U1012, 8, 1 );
    return;
}

void sub_25279(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_25527()
{
    sub_735( "rw", "P_RUN_VIG_10", 0 );
    if (NOT (IS_PED_DEAD( l_U712 )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U712, 1 );
        FREEZE_PED_POSITION( l_U712, 1 );
        SET_PED_VISIBLE( l_U712, 0 );
    }
    sub_25620();
    sub_1757( ref l_U396 );
    sub_8867( ref l_U396, 27000, 1, 0 );
    sub_10901( ref l_U396 );
    sub_10645( l_U462[0], l_U860, l_U863 );
    sub_10645( l_U462[1], l_U864, l_U867 );
    sub_10645( l_U462[2], l_U868, l_U871 );
    if (NOT (IS_PED_DEAD( l_U462[0] )))
    {
        PED_SET_ACTION_INTENTION( l_U462[0], 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U462[1] )))
    {
        PED_SET_ACTION_INTENTION( l_U462[1], 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    if (NOT (IS_PED_DEAD( l_U462[2] )))
    {
        PED_SET_ACTION_INTENTION( l_U462[2], 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
    }
    return;
}

void sub_25620()
{
    sub_735( "rw", "P_VIG_10_SPEECH", 0 );
    sub_18892( ref l_U890 );
    sub_22390( 1, l_U462[0], -654741543, ref l_U890, 2, 0 );
    sub_22390( 2, l_U462[1], 1052296572, ref l_U890, 2, 0 );
    sub_22390( 3, l_U462[2], 661423953, ref l_U890, 2, 0 );
    sub_19205( "SFV1_VIG10A", ref l_U890, 8, 1 );
    return;
}

int sub_26276()
{
    if (sub_26292( l_U180 ))
    {
        if (NOT (sub_26332( ref l_U414 )))
        {
            sub_10901( ref l_U414 );
        }
        if (sub_17002( ref l_U414 ))
        {
            l_U1041 = 1;
        }
        if ((IS_SPHERE_VISIBLE( 99.79000000, -243.51000000, -1.57000000, 0.25000000, 0 )) AND (l_U1041))
        {
            l_U1041 = 0;
            return 1;
        }
    }
    else if (l_U1041 == 0)
    {
        if (sub_26332( ref l_U414 ))
        {
            sub_1757( ref l_U414 );
            sub_8867( ref l_U414, 15000, 1, 0 );
        }
    }
    return 0;
}

void sub_26292(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_17273( sub_1118(), uParam0 );
}

int sub_26332(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_26589(int iParam0, unknown uParam1)
{
    if (NOT (sub_26603( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

boolean sub_26603(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_26831(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1118() )))
        {
            SET_PLAYER_CONTROL( sub_1140(), 0, uParam2 );
            SET_PED_DUCKING( sub_1118(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1118() );
            }
            SET_PED_INVINCIBLE( sub_1118(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_26999()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    sub_735( "rw", "P_MID_01_FAV1", 0 );
    if (NOT (IS_PED_DEAD( l_U656 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U656, "C_F1_OS_ANOS", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U657 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U657, "M_F1_MISC_B2", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U658 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U658, "M_F1_MISC_B2^2", 0 );
    }
    if (NOT (IS_PED_DEAD( l_U659 )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U659, "M_F1_MISC_B2^1", 0 );
    }
    if (DOES_OBJECT_EXIST( l_U726 ))
    {
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( l_U726, "cs_ChaPlsWht_N2_Aa_H", 1 );
    }
    ISEQ_REGISTER_ENTITY( -1353661000, "player", sub_1118(), 0 );
    CUTSCENE_REGISTER_ISEQ( -1353661000 );
    CUTSCENE_REGISTER_PED_TELEPORT( sub_1118(), g_U749[3], g_U849[3] );
    DO_SCREEN_FADE_IN( 0 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U1217._fU0, g_U1217._fU4 );
    sub_26589( ref l_U1012, 0 );
    sub_26589( ref l_U747, 0 );
    sub_26589( ref l_U757, 0 );
    ISEQ_UNREGISTER_ENTITY( -442719108, "FLGE" );
    ISEQ_UNREGISTER_ENTITY( -442719108, "GMED" );
    ISEQ_UNREGISTER_ENTITY( -442719108, "GMED1" );
    ISEQ_UNREGISTER_ENTITY( -442719108, "GMED2" );
    ISEQ_TERMINATE( -442719108 );
    ISEQ_UNREGISTER_ENTITY( -1989829375, "balcony1" );
    ISEQ_UNREGISTER_ENTITY( -1989829375, "balcony2" );
    ISEQ_UNREGISTER_ENTITY( -1989829375, "balcony3" );
    ISEQ_UNREGISTER_ENTITY( -1989829375, "balcony4" );
    ISEQ_UNREGISTER_ENTITY( -1989829375, "balcony5" );
    ISEQ_TERMINATE( -1989829375 );
    ISEQ_UNREGISTER_ENTITY( -1196735135, "dealer1" );
    ISEQ_UNREGISTER_ENTITY( -1196735135, "dealer2" );
    ISEQ_UNREGISTER_ENTITY( -1196735135, "talker1" );
    ISEQ_UNREGISTER_ENTITY( -1196735135, "talker2" );
    ISEQ_TERMINATE( -1196735135 );
    ISEQ_UNREGISTER_ENTITY( 142895691, "kid1" );
    ISEQ_UNREGISTER_ENTITY( 142895691, "kid2" );
    ISEQ_UNREGISTER_ENTITY( 142895691, "kid3" );
    ISEQ_UNREGISTER_ENTITY( 142895691, "ball" );
    ISEQ_TERMINATE( 142895691 );
    ISEQ_UNREGISTER_ENTITY( 868916918, "PED" );
    ISEQ_TERMINATE( 868916918 );
    ISEQ_UNREGISTER_ENTITY( 1836508187, "player" );
    ISEQ_TERMINATE( 1836508187 );
    CUTSCENE_ENABLE_SKIP( 0 );
    START_SEAMLESS_CUTSCENE();
    return;
}

void sub_28391(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_28512()
{
    sub_735( "SA", "P_UNLOAD_ASSETS", "###" );
    sub_28578( "LEVEL_S_FAV1_CP_02b" );
    sub_23185( 868916918, 1 );
    sub_23408( 1977329440 );
    sub_23185( -1196735135, 1 );
    RELEASE_SCRIPT_AUDIO_BANK();
    return;
}

void sub_28578(unknown uParam0)
{
    REMOVE_ANIM_DICT( uParam0, 0 );
    return;
}

void sub_28691()
{
    if (sub_17002( ref g_U738 ))
    {
        if (NOT (IS_PED_DEAD( sub_1118() )))
        {
            CLEAR_PED_PRIMARY_LOOKAT( sub_1118() );
        }
    }
    return;
}


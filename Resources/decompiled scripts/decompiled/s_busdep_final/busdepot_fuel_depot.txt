void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    StrCopy( ref l_U52, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U60, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U68 = 0;
    l_U69 = 0;
    l_U70 = 0;
    l_U71 = 0;
    l_U73 = 0;
    l_U93 = 0;
    l_U147 = 0;
    l_U148 = 0;
    l_U149 = 0;
    l_U150 = 0;
    l_U151 = 0;
    l_U152 = 0;
    l_U153 = 0;
    l_U154 = 0;
    l_U155 = 0;
    l_U156 = 0;
    l_U193 = 0;
    l_U629 = {-47.03218000, -41.53672000, 13.38758000};
    l_U632 = 0;
    l_U633 = 0;
    l_U634 = 0;
    l_U635 = 0;
    l_U636 = 0;
    l_U637 = 0;
    l_U638 = 0;
    l_U639 = 0;
    l_U640 = 0;
    l_U641 = 0;
    l_U642 = 0;
    l_U643 = 0;
    l_U644 = {-38.16000000, -62.40000000, 0.00000000};
    l_U647 = {-39.18000000, -64.58500000, 0.00400000};
    l_U650 = 80.00000000;
    l_U651 = {-38.02500000, -61.44700000, 0.02000000};
    l_U654 = 180.00000000;
    l_U655 = -5.80532600;
    l_U656 = -2.14253100;
    l_U657 = 0;
    l_U835 = 0;
    l_U836 = 0;
    l_U837 = 0;
    l_U954 = 5500;
    l_U955 = 4000;
    l_U1116 = 0;
    l_U1117 = 0;
    l_U1118 = 0;
    l_U1202 = 0;
    l_U1203 = {-84.25000000, -65.70000000, 2.05000000};
    l_U1206 = 0.00000000;
    sub_743( "SP", "Script busdepot_fuel_depot.sc has started...", 0 );
    l_U151 = 1;
    while (IS_EXITFLAG_SET() == 0)
    {
        sub_812();
        if (l_U152 == 0)
        {
            sub_11871();
        }
        WAIT( 0 );
    }
    sub_4224();
    sub_64148();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "busdepot_fuel_depot" );
    SET_EXITFLAG_RESPONSE();
    sub_743( "SP", "Script busdepot_fuel_depot.sc has terminated...", 0 );
    return;
}

void sub_743(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_812()
{
    switch (l_U152)
    {
        case 0:
        if (g_U764 == 3)
        {
            if (sub_902())
            {
                l_U152 = 4;
                DO_SCREEN_FADE_OUT( 0 );
            }
            if (((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
            {
                sub_743( "SP", "Mission Failed: Giovanna died.", 0 );
                l_U155 = 1;
                l_U152 = 1;
                sub_743( "SP", "eFailState = FAIL_HANDLE_GIO_DEATH_CAM", 0 );
            }
            if ((IS_PED_DEAD( sub_1174() )) == 1)
            {
                sub_743( "SP", "Mission Failed: Player died.", 0 );
                l_U152 = 2;
                sub_743( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
        }
        else if ((sub_1717() == 1) || ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((IS_PED_DEAD( sub_1174() )) == 1)))
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "mid_03_bus" )) == 1) || ((CUTSCENE_IS_LOADED( "mid_03_bus" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "mid_03_bus" );
            }
            sub_1825( ref g_U765[3] );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        break;
        case 1:
        sub_743( "SP", "eFailState = FAIL_HANDLE_GIO_DEATH_CAM", 0 );
        if (sub_1930() == 1)
        {
            l_U152 = 2;
            sub_743( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        }
        break;
        case 2:
        if ((sub_2592( NOT (IS_PED_DEAD( sub_1174() )) )) == 1)
        {
            l_U152 = 3;
            sub_743( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        }
        break;
        case 3:
        sub_743( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_PED_DEAD( sub_1174() )) == 0))
        {
            if ((IS_PLAYER_DEAD( sub_1196() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_1196(), 0, 0 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            l_U152 = 4;
            sub_743( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        break;
        case 4:
        sub_743( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        sub_4224();
        sub_6916( g_U2595 );
        l_U152 = 5;
        sub_743( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        break;
        case 5:
        sub_743( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        sub_7506( ref l_U157, sub_1174() );
        sub_11538();
        l_U152 = 6;
        sub_743( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        break;
        case 6:
        sub_743( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        l_U151 = 1;
        l_U152 = 0;
        sub_743( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        break;
    }
    return;
}

int sub_902()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1174() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1174(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1196(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1196(), 1 );
            if ((IS_PED_VISIBLE( sub_1174() )) == 0)
            {
                SET_PED_VISIBLE( sub_1174(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

int sub_1174()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1196() );
    }
    return 0;
}

void sub_1196()
{
    return GET_PLAYER_ID();
}

void sub_1717()
{
    return g_U648;
}

void sub_1825(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_1930()
{
    switch (l_U155)
    {
        case 0: break;
        case 1:
        sub_743( "SP", "eGioDeathCamState = DEATHCAM_SETUP", 0 );
        sub_2041( 1, 0, 0, 1 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
        l_U155 = 2;
        sub_743( "SP", "eGioDeathCamState = DEATHCAM_WAITING_FOR_BULLETCAM", 0 );
        case 2:
        if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
        {
            DO_SCREEN_FADE_OUT( 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
            l_U155 = 3;
            sub_743( "SP", "eGioDeathCamState = DEATHCAM_FINISHED", 0 );
        }
        break;
        case 3:
        sub_743( "SP", "eGioDeathCamState = DEATHCAM_FINISHED", 0 );
        l_U155 = 0;
        sub_743( "SP", "eGioDeathCamState = DEATHCAM_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

void sub_2041(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1174() )))
        {
            SET_PLAYER_CONTROL( sub_1196(), 0, uParam2 );
            SET_PED_DUCKING( sub_1174(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1174() );
            }
            SET_PED_INVINCIBLE( sub_1174(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

int sub_2592(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT (sub_2653( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1174() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_2763( ref l_U43, l_U42, 1, 1 );
            sub_2899( ref l_U43 );
        }
        if (sub_3019( ref l_U43 ))
        {
            sub_743( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1174() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1196() )))
            {
                SET_PLAYER_CONTROL( sub_1196(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
        sub_743( "NS", "Player will QUIT", 0 );
        sub_3506();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_743( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_3506();
        return 1;
        break;
    }
    return 0;
}

int sub_2653(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_2763(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2899(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_3019(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_3506()
{
    sub_743( "NS", "P_PostFailRetryCleanup", 0 );
    sub_3556( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1196() )))
    {
        SET_PLAYER_CONTROL( sub_1196(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

void sub_3556(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_4224()
{
    sub_743( "SP", "P_CLEANUP_ALL", 0 );
    sub_4263( 0, 0 );
    sub_5090( 1 );
    sub_5410( 1 );
    sub_5946( 1 );
    ISEQ_UNREGISTER_ENTITY( -1381237590, "player" );
    ISEQ_TERMINATE( -1381237590 );
    sub_6321( -1381237590, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( 1149970660, "gio" );
    ISEQ_TERMINATE( 1149970660 );
    sub_6321( 1149970660, ref g_U1272 );
    if (g_U764 >= 3)
    {
        sub_6750( g_U2603 );
    }
    sub_6750( g_U2605 );
    sub_6750( g_U2604 );
    sub_6750( g_U2607 );
    sub_6750( g_U2606 );
    sub_6835( l_U667 );
    sub_6882( ref l_U603 );
    sub_6750( g_U2608 );
    sub_6750( g_U2609 );
    sub_6916( l_U839 );
    sub_7044( l_U838 );
    sub_6916( l_U628 );
    sub_6750( g_U2610 );
    sub_6750( g_U2611 );
    sub_6750( g_U2612 );
    sub_6750( g_U2613 );
    sub_6750( g_U2614 );
    sub_6750( l_U944 );
    sub_7172( ref l_U1120 );
    sub_7234();
    return;
}

void sub_4263(int iParam0, int iParam1)
{
    sub_743( "AT", "P_ENABLE_BUS_GRABSPLINES", 0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "UnDamaged01" ), 0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "UnDamaged02" ), 0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "UnDamaged03" ), 0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "UnDamaged04" ), 0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "Damaged01" ), 0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "Damaged02" ), 0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "Damaged03" ), 0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "Damaged04" ), 0 );
    if (iParam0 == 1)
    {
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "UnDamaged01" ), 1 );
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "UnDamaged02" ), 1 );
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "UnDamaged03" ), 1 );
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "UnDamaged04" ), 1 );
    }
    if (iParam1 == 1)
    {
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "Damaged01" ), 1 );
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "Damaged02" ), 1 );
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "Damaged03" ), 1 );
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "Damaged04" ), 1 );
    }
    return;
}

void sub_5090(int iParam0)
{
    if (iParam0 == 1)
    {
        sub_743( "AT", "P_ENABLE_FUELPUMP_COVER_NEAR = ENABLE", 0 );
    }
    else
    {
        sub_743( "AT", "P_ENABLE_FUELPUMP_COVER_NEAR = DISABLE", 0 );
    }
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "RightSide" ), iParam0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "LeftSide" ), iParam0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "FarSide" ), iParam0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "NearSide" ), iParam0 );
    return;
}

void sub_5410(int iParam0)
{
    if (iParam0 == 1)
    {
        sub_743( "AT", "P_ENABLE_FUELPUMP_COVER_MIDDLE = ENABLE", 0 );
    }
    else
    {
        sub_743( "AT", "P_ENABLE_FUELPUMP_COVER_MIDDLE = DISABLE", 0 );
    }
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "GrabSpline41" ), 1 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "GrabSpline42" ), 1 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "GrabSpline55" ), 1 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "GrabSpline56" ), 1 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "GrabSpline41" ), iParam0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "GrabSpline42" ), iParam0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "GrabSpline55" ), iParam0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "GrabSpline56" ), iParam0 );
    return;
}

void sub_5946(int iParam0)
{
    if (iParam0 == 1)
    {
        sub_743( "AT", "P_ENABLE_FUELPUMP_COVER_FAR = ENABLE", 0 );
    }
    else
    {
        sub_743( "AT", "P_ENABLE_FUELPUMP_COVER_FAR = DISABLE", 0 );
    }
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "GrabSpline43" ), iParam0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "GrabSpline44" ), iParam0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "GrabSpline57" ), iParam0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "FuelDepot" ), GET_HASH_KEY( "GrabSpline58" ), iParam0 );
    return;
}

void sub_6321(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_6433( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_6433(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_6750(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_6835(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_6882(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_6916( (uParam0^)[I] );
    }
    return;
}

void sub_6916(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_7044(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_7172(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        STOP_IMAGEFX( (uParam0^)[I]._fU0, 0 );
    }
    return;
}

void sub_7234()
{
    sub_743( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_743( "CCB", "Stopping the Bus_Depot_Fuel_Depot context...", 0 );
    END_CONTEXT( "Bus_Depot_Fuel_Depot" );
    return;
}

void sub_7506(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_743( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_7690( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_8767( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_9059( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_9419( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_9059( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_9419( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_9059( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_9419( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_9704( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_9419( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_9704( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_9419( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_10197( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_10358( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1174(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_743( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_7690(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_7722( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_7722(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_8767(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_9059(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_9375( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_9375(unknown uParam0)
{
    return;
}

void sub_9419(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_9704(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_9375( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_10197(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_10358(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_7722( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_10430( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_10430(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_11538()
{
    sub_743( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", 0 );
    if ((IS_PED_DEAD( sub_1174() )) == 0)
    {
        SET_PED_RELATIONSHIP( sub_1174(), 0, 1 );
        SET_PED_RELATIONSHIP( sub_1174(), 0, 2 );
        SET_PED_RELATIONSHIP( sub_1174(), 0, 6 );
        SET_PED_RELATIONSHIP( sub_1174(), 0, 7 );
    }
    return;
}

void sub_11871()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;
    unknown uVar51;
    unknown uVar52;
    unknown uVar53;
    unknown uVar54;
    unknown uVar55;
    unknown uVar56;
    unknown uVar57;
    unknown uVar58;
    unknown uVar59;
    unknown uVar60;
    unknown uVar61;
    unknown uVar62;
    unknown uVar63;
    unknown uVar64;
    unknown uVar65;
    unknown uVar66;
    float fVar67;
    int I;

    switch (l_U151)
    {
        case 0: break;
        case 1:
        sub_743( "SP", "eCheckpointState = CP_INIT_SCRIPT_DATA", 0 );
        sub_12110();
        sub_12550();
        sub_16019();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        SET_PLAYER_GLOBAL_COMBAT_TIMER_STATE( 1 );
        l_U151 = 2;
        sub_743( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_743( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_16590( -1204387800, ref g_U910 );
        sub_16590( g_U2101, ref g_U910 );
        sub_16590( g_U2127, ref g_U910 );
        sub_16590( g_U2109, ref g_U910 );
        sub_16590( g_U2128, ref g_U910 );
        sub_16590( g_U2143, ref g_U910 );
        sub_16590( g_U2144, ref g_U910 );
        sub_16590( g_U2145, ref g_U910 );
        sub_16590( g_U2146, ref g_U910 );
        sub_16590( g_U2108, ref g_U910 );
        sub_16590( g_U2147, ref g_U910 );
        sub_16590( g_U2107, ref g_U910 );
        sub_16590( -1248117174, ref g_U910 );
        sub_16590( -552056859, ref g_U910 );
        sub_16590( -1409914275, ref g_U910 );
        sub_18141( g_U2858, ref g_U1211 );
        sub_18141( g_U2854, ref g_U1211 );
        sub_18141( g_U2856, ref g_U1211 );
        sub_18141( g_U2855, ref g_U1211 );
        sub_18141( g_U2857, ref g_U1211 );
        sub_18141( g_U2859, ref g_U1211 );
        sub_19157( ref g_U1912, ref g_U1369 );
        sub_19157( ref g_U1984, ref g_U1369 );
        sub_19157( ref g_U1992, ref g_U1369 );
        sub_19157( ref g_U2000, ref g_U1369 );
        sub_20180( 1149970660, ref g_U1272 );
        sub_20180( -1381237590, ref g_U1272 );
        sub_22123( 243, ref g_U1474 );
        sub_22123( 244, ref g_U1474 );
        sub_23151( "SCRIPT_MISSION\S_BUSDEP_RS_STANDOFF", ref g_U1757 );
        l_U151 = 3;
        sub_743( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (sub_24239( ref g_U910, ref g_U1211, ref g_U1272, ref g_U1369, ref g_U1474, ref g_U1535, ref g_U1704, ref g_U1757 ))
        {
            if ((l_U193 == 0) AND (g_U763 == 3))
            {
                l_U193 = 1;
                g_U2865 = 1;
                l_U151 = 4;
                sub_743( "SP", "eCheckpointState = CP_DEBUG_GIVE_PLAYER_WEAPON", 0 );
            }
            else
            {
                l_U151 = 6;
                sub_743( "SP", "eCheckpointState = CP_HANDLE_ENEMY_SPAWN_01", 0 );
            }
        }
        break;
        case 4:
        sub_743( "SP", "eCheckpointState = CP_DEBUG_GIVE_PLAYER_WEAPON", 0 );
        if ((sub_25580( ref l_U157 )) == 0)
        {
            sub_9704( sub_1174(), g_U2854, 200, 0, 0 );
        }
        l_U151 = 5;
        sub_743( "SP", "eCheckpointState = CP_DEBUG_WAIT_FOR_PLAYER_WEAPON", 0 );
        break;
        case 5:
        if ((IS_PED_DEAD( sub_1174() )) == 0)
        {
            uVar66 = GET_WEAPON_FROM_HAND( sub_1174(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar66 )) == 1)
            {
                l_U151 = 6;
                sub_743( "SP", "eCheckpointState = CP_HANDLE_ENEMY_SPAWN_01", 0 );
            }
        }
        break;
        case 6:
        if (sub_25983() == 1)
        {
            l_U151 = 7;
            sub_743( "SP", "eCheckpointState = CP_HANDLE_ENEMY_SPAWN_02", 0 );
        }
        break;
        case 7:
        sub_743( "SP", "eCheckpointState = CP_HANDLE_ENEMY_SPAWN_02", 0 );
        sub_28537();
        l_U151 = 8;
        sub_743( "SP", "eCheckpointState = CP_WAIT_FOR_GAMEPLAY_TO_BEGIN", 0 );
        break;
        case 8:
        if (g_U2865 == 1)
        {
            l_U151 = 9;
            sub_743( "SP", "eCheckpointState = CP_SETUP_GIOVANNA", 0 );
            break;
        }
        return;
        case 9:
        sub_743( "SP", "eCheckpointState = CP_SETUP_GIOVANNA", 0 );
        sub_29060();
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            SET_BULLET_CAM_PREF( g_U2595, "MID_CUSTOM_GIO_FUEL_01", "MID_CUSTOM_GIO_FUEL_01", "MID_CUSTOM_GIO_FUEL_01", "MID_CUSTOM_GIO_FUEL_01", 1, 0, 0, 0, 0, 0, 0, 0 );
        }
        l_U151 = 10;
        sub_743( "SP", "eCheckpointState = CP_CREATE_FUEL_DEPOT_OBJECTS", 0 );
        break;
        case 10:
        sub_743( "SP", "eCheckpointState = CP_CREATE_FUEL_DEPOT_OBJECTS", 0 );
        sub_29876();
        sub_30418( 1 );
        sub_4263( 1, 0 );
        l_U151 = 11;
        sub_743( "SP", "eCheckpointState = CP_SETUP_FUEL_DEPOT_GAMEPLAY", 0 );
        break;
        case 11:
        sub_743( "SP", "eCheckpointState = CP_SETUP_FUEL_DEPOT_GAMEPLAY", 0 );
        if (g_U764 < 3)
        {
            l_U153 = 1;
            l_U151 = 12;
            sub_743( "SP", "eCheckpointState = CP_HANDLE_FENCE_CUTSCENE", 0 );
        }
        else
        {
            sub_31895();
            l_U154 = 1;
            l_U151 = 13;
            sub_743( "SP", "eCheckpointState = CP_HANDLE_FENCE_BLEND_OUT", 0 );
        }
        break;
        case 12:
        if (sub_32571() == 1)
        {
            sub_31895();
            sub_35157( ref g_U2197, 287474157, -78.99416000, -66.80674000, 1.18382000, 0.00000000, 0.00000000, 0.00000000 );
            sub_35215( ref g_U2197, -140.00000000, 90.00000000 );
            sub_35157( ref g_U2204, 1903946840, -78.99467000, -64.40671000, 1.18382000, 0.00000000, 0.00000000, 0.00000000 );
            sub_35215( ref g_U2204, -90.00000000, 155.00000000 );
            l_U154 = 1;
            l_U151 = 13;
            sub_743( "SP", "eCheckpointState = CP_HANDLE_FENCE_BLEND_OUT", 0 );
            break;
        }
        return;
        case 13:
        sub_35457( ref l_U858 );
        if (sub_37653() == 1)
        {
            l_U151 = 14;
            sub_743( "SP", "eCheckpointState = CP_HANDLE_START_FIGHT", 0 );
            break;
        }
        return;
        case 14:
        sub_743( "SP", "eCheckpointState = CP_HANDLE_START_FIGHT", 0 );
        sub_35457( ref l_U858 );
        ISEQ_UNREGISTER_ENTITY( -1381237590, "player" );
        ISEQ_TERMINATE( -1381237590 );
        sub_6321( -1381237590, ref g_U1272 );
        if ((IS_PED_DEAD( sub_1174() )) == 0)
        {
            SET_PED_NUM_CHARGERS_OVERRIDE( sub_1174(), 2 );
        }
        SET_PED_MODEL_LOD_DISTANCES( g_U2101, 25.00000000, 100.00000000 );
        sub_44561();
        sub_44739();
        sub_2763( ref l_U840, 2000, 1, 0 );
        sub_2899( ref l_U840 );
        sub_2763( ref l_U704, 2000, 1, 0 );
        sub_2899( ref l_U704 );
        sub_2763( ref l_U713, 3000, 1, 0 );
        sub_2899( ref l_U713 );
        sub_2763( ref l_U677, 4000, 1, 0 );
        sub_2899( ref l_U677 );
        sub_2763( ref l_U686, 4000, 1, 0 );
        sub_2899( ref l_U686 );
        sub_2763( ref l_U722, 5000, 1, 0 );
        sub_2899( ref l_U722 );
        l_U151 = 15;
        sub_743( "SP", "eCheckpointState = CP_HANDLE_FIGHT", 0 );
        break;
        case 15:
        sub_45079();
        sub_45578();
        sub_47265();
        sub_48637();
        sub_49461();
        sub_35457( ref l_U858 );
        if ((sub_50032( ref l_U858 )) == 1)
        {
            sub_42536( ref l_U1106 );
            sub_42618( 0, sub_1174(), "MAX", ref l_U1106, 2, 0 );
            sub_42618( 1, sub_1174(), "MAX", ref l_U1106, 2, 0 );
            sub_42857( "EXPLORE_ITEM", ref l_U1106, 8, 1 );
        }
        sub_50343( l_U628, 11.00000000, 1, 0 );
        sub_50445( ref l_U603, 0.00000000, 1, 1 );
        if (l_U633 == 0)
        {
            if (sub_50518() == 1)
            {
                if (((IS_PED_DEAD( sub_1174() )) == 0) AND ((IS_PLAYER_DEAD( sub_1196() )) == 0))
                {
                    SET_PLAYER_GLOBAL_COMBAT_TIMER_STATE( 1 );
                    l_U633 = 1;
                }
            }
        }
        if (l_U634 == 0)
        {
            if (sub_50694() == 1)
            {
                sub_2763( ref l_U731, 500, 1, 0 );
                sub_2899( ref l_U731 );
                sub_2763( ref l_U740, 2750, 1, 0 );
                sub_2899( ref l_U740 );
                sub_2763( ref l_U749, 3000, 1, 0 );
                sub_2899( ref l_U749 );
                sub_2763( ref l_U785, 3000, 1, 0 );
                sub_2899( ref l_U785 );
                sub_2763( ref l_U794, 6000, 1, 0 );
                sub_2899( ref l_U794 );
                sub_2763( ref l_U695, 6000, 1, 0 );
                sub_2899( ref l_U695 );
                l_U634 = 1;
            }
        }
        if ((sub_3019( ref l_U731 )) == 1)
        {
            sub_51035();
            sub_42536( ref l_U1076 );
            sub_42618( 0, sub_1174(), "MAX", ref l_U1076, 2, 0 );
            sub_42618( 1, l_U628, "M10_CP_17_MUS", ref l_U1076, 2, 0 );
            sub_42857( "SBUS_FDSPMA", ref l_U1076, 7, 1 );
            AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2_3_4", "", 0.00000000, 5000, 10000, -1082130432, 0 );
        }
        if ((sub_3019( ref l_U740 )) == 1)
        {
            sub_51508();
        }
        if ((sub_3019( ref l_U749 )) == 1)
        {
            sub_51675();
        }
        if (l_U635 == 0)
        {
            if ((((IS_PED_DEAD( l_U628 )) == 1) AND ((DOES_PED_EXIST( l_U628 )) == 1)) || (((sub_51930( l_U254 )) == 1) || ((sub_3019( ref l_U785 )) == 1)))
            {
                sub_51999();
                sub_2763( ref l_U794, 4000, 1, 0 );
                sub_2899( ref l_U794 );
                l_U635 = 1;
            }
        }
        if (l_U636 == 0)
        {
            if (((sub_51930( l_U296 )) == 1) || (((sub_51930( l_U275 )) == 1) || ((sub_3019( ref l_U794 )) == 1)))
            {
                if (l_U635 == 0)
                {
                    sub_51999();
                    l_U635 = 1;
                }
                sub_52882();
                sub_53800();
                l_U636 = 1;
            }
        }
        if ((l_U635 == 0) AND ((l_U637 == 0) AND (l_U634 == 0)))
        {
            if ((sub_3019( ref l_U704 )) == 1)
            {
                if (((IS_PED_DEAD( l_U603[3] )) == 0) AND (((DOES_PED_EXIST( l_U603[3] )) == 1) AND (((IS_PED_DEAD( l_U603[2] )) == 0) AND ((DOES_PED_EXIST( l_U603[2] )) == 1))))
                {
                    sub_42536( ref l_U956 );
                    sub_42618( 2, l_U603[2], "M10_CP_13_AVG", ref l_U956, 2, 0 );
                    sub_42618( 3, l_U603[3], "M10_CP_14_AVG", ref l_U956, 2, 0 );
                    sub_42857( "SBUS_FDCA", ref l_U956, 4, 1 );
                }
            }
            if ((sub_3019( ref l_U713 )) == 1)
            {
                if (((IS_PED_DEAD( l_U603[5] )) == 0) AND (((DOES_PED_EXIST( l_U603[5] )) == 1) AND (((IS_PED_DEAD( l_U603[4] )) == 0) AND ((DOES_PED_EXIST( l_U603[4] )) == 1))))
                {
                    sub_42536( ref l_U966 );
                    sub_42618( 4, l_U603[4], "M10_CP_15_AVG", ref l_U966, 2, 0 );
                    sub_42618( 5, l_U603[5], "M10_CP_16_AVG", ref l_U966, 2, 0 );
                    sub_42857( "SBUS_FDCB", ref l_U966, 4, 1 );
                }
            }
        }
        if (l_U637 == 0)
        {
            if (((IS_PED_DEAD( l_U603[5] )) == 0) AND (((DOES_PED_EXIST( l_U603[5] )) == 1) AND (((IS_PED_DEAD( l_U603[4] )) == 0) AND (((DOES_PED_EXIST( l_U603[4] )) == 1) AND (((IS_PED_DEAD( l_U603[3] )) == 0) AND (((DOES_PED_EXIST( l_U603[3] )) == 1) AND (((IS_PED_DEAD( l_U603[2] )) == 0) AND ((DOES_PED_EXIST( l_U603[2] )) == 1))))))))
            {
                if ((((IS_PED_LOS_CLEAR_TO_TARGET_PED( l_U603[5], sub_1174() )) || (IS_PED_LOS_CLEAR_TO_TARGET_PED( l_U603[4], sub_1174() ))) == 1) || (((IS_PED_LOS_CLEAR_TO_TARGET_PED( l_U603[3], sub_1174() )) || (IS_PED_LOS_CLEAR_TO_TARGET_PED( l_U603[2], sub_1174() ))) == 1))
                {
                    l_U637 = 1;
                }
            }
        }
        if ((sub_54949( ref l_U317, 0 )) == 1)
        {
            if (((IS_PED_DEAD( l_U603[3] )) == 0) AND (((DOES_PED_EXIST( l_U603[3] )) == 1) AND (((IS_PED_DEAD( l_U603[2] )) == 0) AND (((DOES_PED_EXIST( l_U603[2] )) == 1) AND ((IS_PED_DEAD( sub_1174() )) == 0)))))
            {
                if (((IS_PED_ON_SCREEN( l_U603[3], 1 )) == 0) AND (((IS_PED_ON_SCREEN( l_U603[2], 1 )) == 0) AND (((HAS_PED_BEEN_DAMAGED_BY_PED( l_U603[3], sub_1174(), 0 )) == 0) AND (((HAS_PED_BEEN_DAMAGED_BY_PED( l_U603[2], sub_1174(), 0 )) == 0) AND (((sub_35543( l_U603[3], l_U380 )) == 1) AND ((sub_35543( l_U603[2], l_U380 )) == 1))))))
                {
                    CLEAR_PED_TASKS_IMMEDIATELY( l_U603[2] );
                    CLEAR_PED_TASKS_IMMEDIATELY( l_U603[3] );
                    sub_2763( ref l_U758, 30, 1, 0 );
                    sub_2899( ref l_U758 );
                }
            }
        }
        if ((sub_3019( ref l_U758 )) == 1)
        {
            if (((IS_PED_DEAD( l_U603[3] )) == 0) AND (((DOES_PED_EXIST( l_U603[3] )) == 1) AND (((IS_PED_DEAD( l_U603[2] )) == 0) AND ((DOES_PED_EXIST( l_U603[2] )) == 1))))
            {
                TASK_COMBAT_SNAP_TO_COVER_TACTICAL( l_U603[2], "GenCover", "32DD0D45_D9BED6FE_Corner1", 0, sub_1174() );
                TASK_COMBAT_SNAP_TO_COVER_TACTICAL( l_U603[3], "GenCover", "32DD0D45_D9BED6FE_Corner1", 1, sub_1174() );
            }
        }
        if (l_U639 == 0)
        {
            if ((sub_55556( ref l_U603 )) < 5)
            {
                sub_55668( ref g_U765[4] );
                l_U639 = 1;
            }
        }
        if (IS_ROBO_TESTING() == 1)
        {
            if ((sub_54949( ref l_U443, 0 )) == 1)
            {
                sub_55735( ref l_U603 );
                sub_55766( l_U628 );
                sub_743( "MRB", "RoboTester is killing your JY Enemies", 0 );
            }
        }
        if (l_U641 == 0)
        {
            if (((IS_PED_DEAD( l_U628 )) == 1) AND (((DOES_PED_EXIST( l_U628 )) == 1) AND ((sub_45151( ref l_U603 )) == 0)))
            {
                if (((IS_PED_DEAD( sub_1174() )) == 0) AND ((IS_PLAYER_DEAD( sub_1196() )) == 0))
                {
                    SET_PLAYER_CONTROL( sub_1196(), 0, 0 );
                    REENABLE_PLAYER_INPUT( 4 );
                }
                AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_1", "", 0.00000000, 10000, 10000, -1082130432, 0 );
                l_U641 = 1;
            }
        }
        if (l_U641 == 1)
        {
            if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
            {
                if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND (((IS_PED_DEAD( sub_1174() )) == 0) AND ((IS_PLAYER_DEAD( sub_1196() )) == 0))))
                {
                    SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 3 );
                    SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 0 );
                    SET_PLAYER_CONTROL( sub_1196(), 1, 0 );
                    sub_56232();
                    sub_15605( ref l_U858, 1 );
                    sub_56693();
                    sub_2763( ref l_U803, 2000, 1, 0 );
                    sub_2899( ref l_U803 );
                    sub_2763( ref l_U767, 20000, 1, 0 );
                    sub_2899( ref l_U767 );
                    l_U151 = 16;
                    sub_743( "SP", "eCheckpointState = CP_HANDLE_GET_BACK_TO_GIO", 0 );
                }
            }
        }
        break;
        case 16:
        sub_45578();
        sub_47265();
        sub_56919();
        sub_48637();
        sub_50343( l_U628, 11.00000000, 1, 0 );
        sub_50445( ref l_U603, 0.00000000, 1, 1 );
        if ((sub_51930( l_U422 )) AND (HAS_PED_CLEAR_LOS_TO_SPHERE( sub_1174(), -38.20000000, -64.38000000, 1.04000000, 1.00000000 )))
        {
            sub_58380( ref l_U1120 );
        }
        if ((TIME_SINCE_LAST_MONOLOGUE() > 1500) AND ((IS_MONOLOGUE_PLAYING() == 0) AND (sub_58080() == 0)))
        {
            if ((sub_54949( ref l_U401, 0 )) == 1)
            {
                sub_42536( ref l_U1046 );
                sub_42618( 0, sub_1174(), "MAX", ref l_U1046, 2, 0 );
                sub_42618( 1, sub_1174(), "MAX", ref l_U1046, 2, 0 );
                sub_42857( "SBUS_AEFFDDC", ref l_U1046, 8, 1 );
            }
        }
        if ((sub_3019( ref l_U803 )) == 1)
        {
            if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (((IS_PED_DEAD( sub_1174() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))))
            {
                sub_743( "SP", "Playing End Fuel Depot Monologue", 0 );
                sub_42536( ref l_U1026 );
                sub_42618( 0, sub_1174(), "MAX", ref l_U1026, 2, 0 );
                sub_42618( 1, sub_1174(), "MAX", ref l_U1026, 2, 0 );
                sub_42857( "SBUS_AEFFDDA", ref l_U1026, 8, 1 );
            }
        }
        if ((l_U767._fU16 == 1) || ((sub_3019( ref l_U767 )) == 1))
        {
            if ((sub_59507( sub_1174(), g_U2595, 0 )) > 15.00000000)
            {
                if (((IS_PED_DEAD( sub_1174() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
                {
                    if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                        sub_42536( ref l_U976 );
                        sub_42618( 0, sub_1174(), "MAX", ref l_U976, 2, 0 );
                        sub_42618( 1, g_U2595, "GIOVANNA", ref l_U976, 2, 0 );
                        sub_42857( "SBUS_GVAED", ref l_U976, 7, 1 );
                        sub_2763( ref l_U767, 20000, 1, 0 );
                        sub_2899( ref l_U767 );
                        if (l_U837 == 0)
                        {
                            sub_2763( ref l_U776, 3500, 1, 0 );
                            sub_2899( ref l_U776 );
                            l_U837 = 1;
                        }
                    }
                }
            }
        }
        if ((TIME_SINCE_LAST_MONOLOGUE() > 2000) AND ((IS_MONOLOGUE_PLAYING() == 0) AND (sub_58080() == 0)))
        {
            if ((l_U776._fU16 == 1) || ((sub_3019( ref l_U776 )) == 1))
            {
                if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (((IS_PED_DEAD( sub_1174() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))))
                {
                    fVar67 = GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1174() ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 1 );
                    if (((fVar67 > 5.00000000) AND (fVar67 < 25.00000000)) AND ((IS_SPHERE_VISIBLE( -39.91600000, -62.42300000, 2.73200000, 3.00000000, 1 )) == 1))
                    {
                        sub_42536( ref l_U1036 );
                        sub_42618( 0, sub_1174(), "MAX", ref l_U1036, 2, 0 );
                        sub_42618( 1, sub_1174(), "MAX", ref l_U1036, 2, 0 );
                        sub_42857( "SBUS_AEFFDDB", ref l_U1036, 8, 1 );
                        sub_3556( ref l_U776 );
                    }
                }
            }
        }
        if ((sub_35457( ref l_U858 )) == 1)
        {
            l_U156 = 1;
            l_U151 = 17;
            sub_743( "SP", "eCheckpointState = CP_HANDLE_NEWSPAPER_NIS", 0 );
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD( sub_1174() )) == 0)))
        {
            if ((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1174() ), -39.42300000, -64.84600000, 0.00000000, 1 )) <= 5.80000000)
            {
                if ((GET_IS_PED_FORCED_TO_WALK( sub_1174() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_1174(), 1 );
                    sub_2763( ref l_U812, 1500, 1, 0 );
                    sub_2899( ref l_U812 );
                    l_U642 = 1;
                }
            }
            else if ((GET_IS_PED_FORCED_TO_WALK( sub_1174() )) == 1)
            {
                SET_PED_FORCED_TO_WALK( sub_1174(), 0 );
                sub_3556( ref l_U812 );
                l_U642 = 0;
            }
        }
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD( sub_1174() )) == 0)))))
        {
            if (((sub_3019( ref l_U812 )) == 1) || ((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1174() ), -37.92300000, -65.11700000, 0.00000000, 1 )) <= 4.50000000))
            {
                if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
                {
                    SET_BULLET_CAM_PREF( g_U2595, "", "", "", "", 1, 0, 0, 0, 0, 0, 0, 0 );
                }
                sub_36461( ref l_U858, 0 );
                sub_6916( l_U839 );
                sub_7044( l_U838 );
                sub_60747( -1248117174, ref g_U910 );
                ISEQ_UNREGISTER_ENTITY( 1149970660, "gio" );
                ISEQ_TERMINATE( 1149970660 );
                sub_6321( 1149970660, ref g_U1272 );
                sub_61015( ref g_U1912, ref g_U1369 );
                sub_61015( ref g_U1984, ref g_U1369 );
                sub_61015( ref g_U1992, ref g_U1369 );
                sub_61015( ref g_U2000, ref g_U1369 );
                sub_61230( 243, ref g_U1474 );
                sub_61230( 244, ref g_U1474 );
                sub_61438( "SCRIPT_MISSION\S_BUSDEP_RS_STANDOFF", ref g_U1757 );
                RESET_PED_MODEL_LOD_DISTANCES( g_U2101 );
                AUDIO_MUSIC_SUSPEND( 6000 );
                g_U2866 = 1;
                l_U151 = 18;
                sub_743( "SP", "eCheckpointState = CP_HANDLE_SCRIPT_CLEANUP", 0 );
            }
        }
        break;
        case 17:
        if (sub_61703() == 1)
        {
            sub_36461( ref l_U858, 1 );
            l_U151 = 16;
            sub_743( "SP", "eCheckpointState = CP_HANDLE_GET_BACK_TO_GIO", 0 );
        }
        else
        {
            return;
        }
        break;
        case 18:
        sub_58380( ref l_U1120 );
        if ((CUTSCENE_IS_LOADED( "10_02_BUS_concat" )) == 1)
        {
            if (HAS_CUTSCENE_FINISHED() == 0)
            {
                if ((GET_CUTSCENE_TIME_MS() > 0) AND (l_U1116 == 0))
                {
                    for ( I = 0; I < l_U603; I++ )
                    {
                        if ((((IS_PED_DEAD( l_U603[I] )) == 0) || ((IS_PED_DEAD( l_U603[I] )) == 1)) AND ((DOES_PED_EXIST( l_U603[I] )) == 1))
                        {
                            if ((IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U603[I], ref l_U359._fU0 )) || (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U603[I], ref l_U338._fU0 )))
                            {
                                sub_6916( l_U603[I] );
                            }
                        }
                    }
                    l_U1116 = 1;
                }
                if ((GET_CUTSCENE_TIME_MS() > 58000) AND (l_U1117 == 0))
                {
                    sub_63168();
                    l_U1117 = 1;
                }
                if ((GET_CUTSCENE_TIME_MS() > 80600) AND (l_U1118 == 0))
                {
                    sub_63632();
                    l_U1118 = 1;
                }
                if (GET_CUTSCENE_TIME_MS() > 81000)
                {
                    l_U151 = 19;
                    sub_743( "SP", "eCheckpointState = CP_FINISHED", 0 );
                }
            }
        }
        if (g_U764 >= 4)
        {
            l_U151 = 19;
            sub_743( "SP", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 19:
        sub_743( "SP", "eCheckpointState = CP_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U151 = 0;
        sub_743( "SP", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    return;
}

void sub_12110()
{
    sub_743( "SP", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U613 = 0;
    l_U830 = 2.00000000;
    l_U831 = 8.00000000;
    l_U832 = 1.00000000;
    l_U833 = 5.00000000;
    l_U834 = 2;
    l_U632 = 0;
    l_U657 = 0;
    l_U633 = 0;
    l_U634 = 0;
    l_U635 = 0;
    l_U636 = 0;
    l_U637 = 0;
    l_U638 = 0;
    l_U639 = 0;
    l_U640 = 0;
    l_U641 = 0;
    l_U643 = 0;
    l_U642 = 0;
    l_U836 = 0;
    l_U835 = 0;
    l_U837 = 0;
    l_U1116 = 0;
    l_U1117 = 0;
    l_U1118 = 0;
    sub_3556( ref l_U658 );
    sub_3556( ref l_U668 );
    sub_3556( ref l_U677 );
    sub_3556( ref l_U686 );
    sub_3556( ref l_U695 );
    sub_3556( ref l_U704 );
    sub_3556( ref l_U713 );
    sub_3556( ref l_U722 );
    sub_3556( ref l_U731 );
    sub_3556( ref l_U740 );
    sub_3556( ref l_U749 );
    sub_3556( ref l_U758 );
    sub_3556( ref l_U767 );
    sub_3556( ref l_U776 );
    sub_3556( ref l_U785 );
    sub_3556( ref l_U794 );
    sub_3556( ref l_U803 );
    sub_3556( ref l_U840 );
    sub_3556( ref l_U849 );
    sub_3556( ref l_U812 );
    sub_3556( ref l_U945 );
    l_U153 = 0;
    l_U154 = 0;
    l_U155 = 0;
    l_U154 = 0;
    l_U156 = 0;
    return;
}

void sub_12550()
{
    sub_743( "SP", "P_INIT_GAMEPLAY_STRUCTS", 0 );
    sub_12630( ref l_U466, -38.07700000, -62.17300000, 0, 180.00000000, -1257669444, 26, 6, 0, 0, 1 );
    sub_12630( ref l_U485[0], -80.70000000, -62.46000000, 0.15000000, -125.36000000, -779842028, 7, 3, 2, 0, 0 );
    sub_12630( ref l_U485[1], -85.31000000, -68.23000000, 0.15000000, -64.44000000, -771784984, 7, 3, 2, 0, 0 );
    sub_12630( ref l_U485[2], -72.11000000, -45.71000000, 0.00000000, -167.00000000, -563478033, 7, 3, 2, 0, 0 );
    sub_12630( ref l_U485[3], -71.29000000, -46.94000000, 0.00000000, -126.30000000, -214778089, 7, 3, 2, 0, 0 );
    sub_12630( ref l_U485[4], -62.38000000, -45.89000000, 0.00000000, -108.53000000, -1288221433, 7, 3, 2, 0, 0 );
    sub_12630( ref l_U485[5], -73.62000000, -44.86000000, 0.00000000, 179.89000000, -1093014823, 7, 3, 2, 0, 0 );
    sub_12630( ref l_U485[6], -65.83000000, -46.45000000, 0.00000000, -90.80000000, 1386687348, 7, 3, 2, 0, 0 );
    sub_12630( ref l_U485[7], -83.40000000, -40.91000000, 0.20000000, 224.00000000, 105095685, 7, 3, 2, 0, 0 );
    sub_12630( ref l_U485[8], -81.91000000, -67.66000000, 0.15000000, -64.44000000, 1994880680, 7, 3, 2, 0, 0 );
    sub_12630( ref l_U615, -40.86967000, -39.91708000, 13.39419000, 189.00000000, -388337765, 7, 3, 2, 0, 0 );
    sub_13257( ref l_U212, "TRIG_INSIDE_GATEHOUSE", -79.42000000, -65.60000000, 0.00000000, 0.87000000, 2.38000000, 2.26000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13257( ref l_U233, "TRIG_GIO_TALKS_TO_MAX", -37.43000000, -65.07000000, 0.00000000, 3.62000000, 6.93000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13257( ref l_U254, "TRIG_START_GATEHOUSE_ATTACK", -52.01000000, -60.51000000, -0.20000000, 3.00000000, 20.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13257( ref l_U275, "TRIG_START_DEPOT_ATTACK_01", -45.28000000, -54.97000000, -0.20000000, 6.00000000, 20.00000000, 4.00000000, 0.00000000, 0.00000000, 90.00000000, 1 );
    sub_13257( ref l_U296, "TRIG_START_DEPOT_ATTACK_02", -66.75000000, -60.38000000, -0.20000000, 6.00000000, 20.00000000, 4.00000000, 0.00000000, 0.00000000, 26.35000000, 1 );
    sub_13257( ref l_U380, "TRIG_TACTICAL_CORNER_AREA", -71.13000000, -48.01000000, 0.00000000, 8.00000000, 10.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13257( ref l_U317, "TRIG_TACTICAL_BUS_SWITCH", -45.78000000, -49.10000000, -0.20000000, 20.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13257( ref l_U338, "TRIG_10_02_REMOVE_BODIES_01", -41.51000000, -56.94000000, -0.20000000, 8.00000000, 25.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13257( ref l_U359, "TRIG_10_02_REMOVE_BODIES_02", -53.62000000, -43.37000000, -0.20000000, 20.00000000, 8.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13257( ref l_U401, "TRIG_FIND_ANOTHER_WAY", -61.36000000, -40.08000000, -0.52000000, 2.60000000, 1.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13257( ref l_U422, "tbImageGOIFX", -50.10430000, -63.70630000, -0.52429200, 3.00000000, 20.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13257( ref l_U443, "KILLING ALL YOUR PEDS, FOR THE ADVANCEMENT OF ROBOGAMETESTER", -79.06000000, -50.92000000, 0.00000000, 6.00000000, 6.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14370( ref l_U464, "TETH_FUEL_01", -67.32000000, -54.86000000, -1.14000000, 42.00000000, 30.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14370( ref l_U465, "TETH_FUEL_02", -41.44000000, -47.36000000, -1.14000000, 10.00000000, 15.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14565( ref l_U858, 2, -84.31000000, -64.88000000, 1.21000000, -84.31000000, -64.89000000, 1.31000000, -84.31000000, -64.89000000, 1.31000000, 1.19500000, 1.66000000, 1, 0 );
    sub_15412( ref l_U858, 30, "POI_BUSNEWS" );
    sub_15573( ref l_U858, 1 );
    sub_15605( ref l_U858, 0 );
    sub_15984( ref l_U858, 0 );
    return;
}

void sub_12630(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_13257(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_14370(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_14565(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_14580( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_14948( iParam0 );
    return;
}

void sub_14580(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_14948(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_15027( iParam0 );
    return;
}

void sub_15027(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_15086( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_15086( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_15086( iParam0, 1 );
            }
            else
            {
                sub_15086( iParam0, 0 );
            };;;
        }
        else
        {
            sub_15086( iParam0, 0 );
        }
    }
    else
    {
        sub_15086( iParam0, 0 );
    }
    return;
}

void sub_15086(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_15412(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_15443( iParam0 );
    return;
}

void sub_15443(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_15573(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_15605(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_15647( iParam0 );
    return;
}

void sub_15647(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_15708( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_15708( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_15708(int iParam0)
{
    if (((IS_PED_DEAD( sub_1174() )) == 0) AND ((IS_PLAYER_DEAD( sub_1196() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_1174() )) == 1) || (((IS_PED_GETTING_UP( sub_1174() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_1174() )) == 1) || (((IS_PED_IN_COVER( sub_1174() )) == 1) || (((IS_PED_DUCKING( sub_1174() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_1174() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_15984(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_16019()
{
    sub_743( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    l_U1119 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( 160123824 )))
    {
        sub_743( "CCB", "Creating the FirstThingsFirst script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( 160123824 );
        if (SCRIPT_VAR_HASH_EXISTS( 160123824 ))
        {
            sub_743( "CCB", "The FirstThingsFirst script variable was successfully created...", 0 );
        }
        else
        {
            sub_743( "CCB", "The FirstThingsFirst script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_743( "CCB", "The FirstThingsFirst script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( 160123824, 0 );
    }
    return;
}

void sub_16590(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_16625( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_16756( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_16625(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_16756( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_16756( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_16756( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_17404( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_16756( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_16756( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16756(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16776( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_16776(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_17404(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_18141(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_18162( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_18294( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_18162(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_18294( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_18294( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_18294( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_17404( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_18294( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_18294( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18294(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16776( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_19157(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_19178( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_19315( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_19178(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_19315( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_19315( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_19315( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_17404( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_19315( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_19315( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19315(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16776( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_20180(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_20215( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_20367( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_20215(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_20367( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_20367( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_20367( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_20367( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_17404( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_17404( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_20367( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_20367( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20367(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16776( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_22123(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_22144( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_22282( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_22144(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being requested!!!", 0 );
                sub_22282( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is already loading!!!", 0 );
                sub_22282( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
                {
                    sub_22282( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The VEHICLE_RECORDING asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = -1;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_17404( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The VEHICLE_RECORDING asset is currently being removed!!!", 0 );
                sub_22282( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_VEHICLE_RECORDING_BEEN_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_22282( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The VEHICLE_RECORDING - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22282(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16776( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The VEHICLE_RECORDING asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_23151(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_23172( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_23310( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_23172(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_23310( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_23310( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_23310( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_17404( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_23310( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_23310( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_23310(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16776( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_24239(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (sub_24251( uParam0 ))
    {
        if (sub_24374( uParam1 ))
        {
            if (sub_24497( uParam2 ))
            {
                if (sub_24690( uParam3 ))
                {
                    if (sub_24819( uParam4 ))
                    {
                        if (sub_24942( uParam5 ))
                        {
                            if (sub_25071( uParam6 ))
                            {
                                if (sub_25200( uParam7 ))
                                {
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return 0;
}

int sub_24251(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_24374(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_24497(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_24690(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_24819(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_24942(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25071(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25200(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25580(unknown uParam0)
{
    sub_743( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_7506( uParam0, sub_1174() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_25983()
{
    int iVar2;

    sub_743( "SP", "F_HANDLE_CREATE_FUEL_DEPOT_ENEMIES", 0 );
    iVar2 = l_U613;
    sub_6916( l_U603[iVar2] );
    l_U603[iVar2] = sub_26070( ref l_U485[iVar2] );
    if (((IS_PED_DEAD( l_U603[iVar2] )) == 0) AND ((DOES_PED_EXIST( l_U603[iVar2] )) == 1))
    {
        SET_PED_VISIBLE( l_U603[iVar2], 0 );
        SET_PED_ALERTNESS( l_U603[iVar2], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U603[iVar2], 1 );
        SET_BLOCKING_OF_PED_TARGETTING( l_U603[iVar2], 1 );
        SET_PED_AI_TEMPLATE( l_U603[iVar2], ref g_U2088 );
        SET_PED_CHANCE_TO_SHOOT_AT_DESTRUCTIBLES( l_U603[iVar2], 25 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U603[iVar2], 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U603[iVar2], 0 );
        SET_PED_NO_RAGDOLL_TO_EXPLOSION_UNLESS_DEAD( l_U603[iVar2], 0 );
        SET_PED_COMBAT_ATTRIBUTES( l_U603[iVar2], 512, 1 );
        SET_PED_CAN_INITIATE_BULLET_CAM( l_U603[iVar2], 1 );
        sub_27138( l_U603[iVar2], ref l_U479 );
        SET_PED_TO_INFORM_RESPECTED_FRIENDS( l_U603[iVar2], 25.00000000, 10 );
        sub_27602( ref l_U464, l_U603[iVar2], 1 );
        sub_27602( ref l_U465, l_U603[iVar2], 1 );
        if (iVar2 == 0)
        {
            SET_PED_FREEZE_PROCESSING( l_U603[iVar2], 1 );
            sub_9704( l_U603[iVar2], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 1)
        {
            SET_PED_FREEZE_PROCESSING( l_U603[iVar2], 1 );
            sub_9704( l_U603[iVar2], g_U2854, 25000, 0, 0 );
            sub_9059( l_U603[iVar2], g_U2859, 5, 25000, 0 );
        }
        else if (iVar2 == 2)
        {
            SET_PED_FREEZE_PROCESSING( l_U603[iVar2], 1 );
            sub_9704( l_U603[iVar2], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 3)
        {
            SET_PED_FREEZE_PROCESSING( l_U603[iVar2], 1 );
            sub_9704( l_U603[iVar2], g_U2855, 25000, 0, 0 );
        }
        else if (iVar2 == 4)
        {
            SET_PED_FREEZE_PROCESSING( l_U603[iVar2], 1 );
            sub_9704( l_U603[iVar2], g_U2856, 25000, 0, 0 );
        }
        else if (iVar2 == 5)
        {
            SET_PED_FREEZE_PROCESSING( l_U603[iVar2], 1 );
            sub_9704( l_U603[iVar2], g_U2855, 25000, 0, 0 );
            sub_9059( l_U603[iVar2], g_U2859, 5, 25000, 0 );
        }
        else if (iVar2 == 6)
        {
            SET_PED_FREEZE_PROCESSING( l_U603[iVar2], 1 );
            sub_9704( l_U603[iVar2], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 7)
        {
            sub_9704( l_U603[iVar2], g_U2856, 25000, 0, 0 );
        }
        else if (iVar2 == 8)
        {
            SET_PED_FREEZE_PROCESSING( l_U603[iVar2], 1 );
            sub_9704( l_U603[iVar2], g_U2855, 25000, 0, 0 );
            sub_9059( l_U603[iVar2], g_U2859, 5, 25000, 0 );
        };;;;;;;;;
        l_U613++;
    }
    if (l_U613 == 9)
    {
        sub_28298( ref l_U603, "piFuelDepotEnemies" );
        return 1;
    }
    return 0;
}

void sub_26070(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_26240( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_26709( iParam0->_fU40 );
    sub_26789( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_26240(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_9375( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_26709(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_26789(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_27138(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_9375( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_27281( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_27281( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_27281(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_27602(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_28298(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_28537()
{
    sub_743( "SP", "P_CREATE_SNIPER", 0 );
    sub_6916( l_U628 );
    l_U628 = sub_26070( ref l_U615 );
    sub_9704( l_U628, g_U2858, 25000, 0, 0 );
    if (((IS_PED_DEAD( l_U628 )) == 0) AND ((DOES_PED_EXIST( l_U628 )) == 1))
    {
        SET_PED_NAME_DEBUG( l_U628, "piSniperEnemy" );
        SET_PED_FREEZE_PROCESSING( l_U628, 1 );
        SET_PED_VISIBLE( l_U628, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U628, 1 );
        SET_PED_AI_TEMPLATE( l_U628, ref g_U2088 );
        SET_PED_COMBAT_MOVEMENT( l_U628, 0 );
        SET_PED_HEALTH( l_U628, 150, 0 );
        SET_PED_COMBAT_RANGE_MIN( l_U628, 10.00000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U628, 10.00000000 );
        SET_PED_ALERTNESS( l_U628, 2 );
        SET_PED_EMOTION_STATE( l_U628, 1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U628, 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U628, 0 );
    }
    return;
}

void sub_29060()
{
    sub_743( "SP", "P_SETUP_GIOVANNA", 0 );
    if ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((DOES_PED_EXIST( g_U2595 )) == 0))
    {
        sub_6916( g_U2595 );
        g_U2595 = sub_26070( ref l_U466 );
        sub_29173();
    }
    return;
}

void sub_29173()
{
    sub_743( "SP", "P_SETUP_GIO_ATTRIBUTES", 0 );
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        SET_PED_NAME_DEBUG( g_U2595, "piGiovanna" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2595, 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U2595, 0 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2595, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U2595, 1 );
        SET_PED_CAN_PUSH_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_NPC( g_U2595, 0 );
        SET_PED_CAN_BE_TARGETTED( g_U2595, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U2595, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2595, 1 );
        SET_BULLET_CAM_PREF( g_U2595, "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", 1, 0, 0, 0, 0, 0, 0, 0 );
        if ((IS_PED_DEAD( sub_1174() )) == 0)
        {
            SET_PED_PRIMARY_LOOKAT( g_U2595, sub_1174() );
            SET_PED_DEFAULT_AIM_AT_PED( g_U2595, sub_1174() );
        }
    }
    return;
}

void sub_29876()
{
    sub_743( "SP", "P_CREATE_PLACEMENTS", 0 );
    sub_6835( l_U667 );
    l_U667 = sub_29974( -4072149, -85.04000000, -65.99000000, 1.21000000, 0.00000000, 0.00000000, 21.00000000, 1, 1, 0, 1119092736 );
    if ((DOES_PLACEMENT_EXIST( l_U667 )) == 1)
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U667, ref g_U1800 );
    }
    sub_6750( l_U944 );
    l_U944 = sub_30152( -552056859, -84.31000000, -64.88000000, 1.21000000, 0.00000000, 0.00000000, 4.35000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U944 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U944, ref g_U1800 );
    }
    return;
}

void sub_29974(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_30152(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_26240( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_30418(int iParam0)
{
    sub_743( "SP", "P_GLOBAL_CREATE_FUEL_DEPOT_OBJECTS", 0 );
    sub_6750( g_U2608 );
    g_U2608 = sub_30152( g_U2143, g_U2615, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2608 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2608, 1 );
    }
    sub_6750( g_U2609 );
    g_U2609 = sub_30152( g_U2145, g_U2615, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2609 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2609, 1 );
    }
    if (iParam0 == 1)
    {
        sub_6750( g_U2606 );
        g_U2606 = sub_30697( g_U2128, -60.43800000, -53.14500000, 0.31200000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
        if ((DOES_OBJECT_EXIST( g_U2606 )) == 1)
        {
            FREEZE_OBJECT_POSITION( g_U2606, 1 );
            SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2606, 1 );
            SET_OBJECT_TARGETTABLE( g_U2606, 1 );
        }
        sub_6750( g_U2607 );
        g_U2607 = sub_30697( g_U2128, -51.09500000, -53.14500000, 0.31200000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
        if ((DOES_OBJECT_EXIST( g_U2607 )) == 1)
        {
            FREEZE_OBJECT_POSITION( g_U2607, 1 );
            SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2607, 1 );
            SET_OBJECT_TARGETTABLE( g_U2607, 1 );
        }
    }
    sub_6750( g_U2605 );
    g_U2605 = sub_30152( g_U2107, -62.13600000, -49.23100000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2605 )) == 1)
    {
        ;
    }
    sub_6750( g_U2610 );
    g_U2610 = sub_30152( g_U2147, -52.94637000, -54.22243000, 4.61777400, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2610 )) == 1)
    {
        ;
    }
    sub_6750( g_U2611 );
    g_U2611 = sub_30152( g_U2147, -49.18108000, -53.25327000, 4.61777400, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2611 )) == 1)
    {
        ;
    }
    sub_6750( g_U2612 );
    g_U2612 = sub_30152( g_U2147, -56.07308000, -51.93821000, 4.61777400, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2612 )) == 1)
    {
        ;
    }
    sub_6750( g_U2613 );
    g_U2613 = sub_30152( g_U2147, -58.59797000, -54.28381000, 4.61777400, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2613 )) == 1)
    {
        ;
    }
    sub_6750( g_U2614 );
    g_U2614 = sub_30152( g_U2147, -62.33971000, -53.26115000, 4.61777400, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2614 )) == 1)
    {
        ;
    }
    sub_6750( g_U2604 );
    g_U2604 = sub_30697( g_U2109, -56.58300000, -41.78900000, 3.28000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2604 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2604, 1 );
    }
    return;
}

void sub_30697(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_26240( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_31895()
{
    int I;

    sub_743( "SP", "P_SETUP_FUEL_DEPOT_GAMEPLAY", 0 );
    sub_31951( ref g_U2197, 1 );
    sub_31951( ref g_U2204, 1 );
    sub_31951( ref g_U2176, 1 );
    sub_31951( ref g_U2169, 1 );
    sub_32184( ref g_U2176, 1 );
    sub_32184( ref g_U2169, 1 );
    for ( I = 0; I < l_U603; I++ )
    {
        if (((IS_PED_DEAD( l_U603[I] )) == 0) AND ((DOES_PED_EXIST( l_U603[I] )) == 1))
        {
            SET_PED_FREEZE_PROCESSING( l_U603[I], 0 );
        }
    }
    if (((IS_PED_DEAD( sub_1174() )) == 0) AND ((IS_PLAYER_DEAD( sub_1196() )) == 0))
    {
        SET_PLAYER_CONTROL( sub_1196(), 1, 0 );
        if ((GET_IS_PED_FORCED_TO_WALK( sub_1174() )) == 1)
        {
            SET_PED_FORCED_TO_WALK( sub_1174(), 0 );
        }
    }
    return;
}

void sub_31951(int iParam0, int iParam1)
{
    if ((sub_31963( iParam0 )) == 0)
    {
        sub_32029( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_31963(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_32029(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_32184(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_31963( iParam0 )) == 0)
    {
        sub_32029( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_32571()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    switch (l_U153)
    {
        case 0: break;
        case 1:
        sub_743( "SP", "eFenceCutsceneState = CUTSCENE_SETUP", 0 );
        if (((CUTSCENE_NAMED_IS_LOADING( "mid_02_bus_v2_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "mid_02_bus_v2_concat" )) == 1))
        {
            CLEAR_NAMED_CUTSCENE( "mid_02_bus_v2_concat" );
        }
        if (((CUTSCENE_NAMED_IS_LOADING( "mid_03_bus" )) == 0) AND ((CUTSCENE_IS_LOADED( "mid_03_bus" )) == 0))
        {
            PRE_STREAM_SEAMLESS_CUTSCENE( "mid_03_bus" );
        }
        l_U153 = 2;
        sub_743( "SP", "eFenceCutsceneState = CUTSCENE_LOADING", 0 );
        case 2:
        if (((sub_24497( ref g_U1272 )) == 1) AND ((CUTSCENE_IS_LOADED( "mid_03_bus" )) == 1))
        {
            l_U153 = 3;
            sub_743( "SP", "eFenceCutsceneState = CUTSCENE_START", 0 );
            break;
        }
        return 0;
        case 3:
        sub_743( "SP", "eFenceCutsceneState = CUTSCENE_START", 0 );
        sub_2041( 1, 0, 0, 1 );
        if ((IS_PED_DEAD( sub_1174() )) == 0)
        {
            CUTSCENE_REGISTER_PED_TELEPORT( sub_1174(), l_U647, l_U650 );
            CUTSCENE_REGISTER_PED_ACTION_INTENTION( sub_1174(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2595, "Giov_Bus", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( g_U2595, l_U651, l_U654 );
        }
        ISEQ_REGISTER_ENTITY( -1381237590, "player", sub_1174(), 0 );
        CUTSCENE_REGISTER_ISEQ( -1381237590 );
        ISEQ_REGISTER_ENTITY( 1149970660, "gio", g_U2595, 0 );
        CUTSCENE_REGISTER_ISEQ( 1149970660 );
        START_SEAMLESS_CUTSCENE();
        l_U153 = 4;
        sub_743( "SP", "eFenceCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 4:
        sub_743( "SP", "eFenceCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        sub_6882( ref g_U2596 );
        sub_33465( ref l_U194, 0, 1 );
        l_U153 = 5;
        sub_743( "SP", "eFenceCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 5:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "mid_03_bus" )) == 1) || ((CUTSCENE_IS_LOADED( "mid_03_bus" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "mid_03_bus" );
            }
            if ((DOES_OBJECT_EXIST( g_U2603 )) == 1)
            {
                sub_743( "GA", "Making Junkyard Gate Visible.", 0 );
                SET_OBJECT_VISIBLE( g_U2603, 1 );
            }
            if (((IS_PED_DEAD( sub_1174() )) == 0) AND ((IS_PLAYER_DEAD( sub_1196() )) == 0))
            {
                SET_PED_FORCED_TO_WALK( sub_1174(), 0 );
            }
            l_U632 = 1;
            l_U153 = 0;
            sub_743( "SP", "eFenceCutsceneState = CUTSCENE_IDLE", 0 );
            return 1;
        }
        else
        {
            uVar3 = GET_CUTSCENE_SECTION_PLAYING();
            uVar4 = GET_CUTSCENE_TIME();
            uVar5 = GET_CUTSCENE_TIME_MS();
        }
        break;
    }
    return 0;
}

void sub_33465(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_33477( iParam0 );
    if ((IS_PED_DEAD( sub_1174() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_1174(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_33656( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_33884( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_1174(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_1174(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_1174(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_1174(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_1174() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_1174(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1174(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_1174(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1174(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_1174() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_1174(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_33884( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_1174(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_1174(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1174(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_33477(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_33656(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_33884(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_35157(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_35215(int iParam0, float fParam1, float fParam2)
{
    if ((sub_31963( iParam0 )) == 0)
    {
        sub_32029( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

int sub_35457(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_1174() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1174() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_35543( sub_1174(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_35543( sub_1174(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_15647( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_15708( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_36384() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_36461( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_15086( iParam0, 0 );
                            sub_36532( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_15086( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_1174() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_1174(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_15086( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_36532( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_1174() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_1174(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_1174() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_1174(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_1174() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_1174(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_15086( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_36532( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_1174() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_1174() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_1174() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_1174(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_36532( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_35543(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

int sub_36384()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_36461(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_15086( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_15086( iParam0, 0 );
        sub_36532( iParam0, 0 );
        if ((IS_PED_DEAD( sub_1174() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_1174() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_1174(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_36532(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_15647( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

int sub_37653()
{
    int I;
    unknown uVar3;
    unknown uVar4;
    vector vVar5;
    int iVar8;
    int iVar9;

    vVar5 = {-0.96200000, 0.27000000, -0.02200000};
    iVar8 = 1800;
    iVar9 = 800;
    switch (l_U154)
    {
        case 0: break;
        case 1:
        sub_743( "SP", "eFenceBlendoutState = BLENDOUT_SETUP", 0 );
        sub_2041( 1, 0, 0, 1 );
        sub_37803();
        DISPLAY_HUD( 0 );
        SET_CAM_VIEW_MODE( 1 );
        if ((ISEQ_QUERY_STATE( -1381237590, 3 )) == 0)
        {
            PED_SET_ACTION_INTENTION( sub_1174(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
            sub_38042( sub_1174(), l_U647, l_U650 );
            ISEQ_REGISTER_ENTITY( -1381237590, "player", sub_1174(), 0 );
            ISEQ_START( -1381237590 );
        }
        if ((ISEQ_QUERY_STATE( 1149970660, 3 )) == 0)
        {
            sub_38042( g_U2595, l_U651, l_U654 );
            ISEQ_REGISTER_ENTITY( 1149970660, "gio", g_U2595, 0 );
            ISEQ_START( 1149970660 );
        }
        for ( I = 0; I < l_U603; I++ )
        {
            sub_38042( l_U603[I], l_U485[I]._fU0, l_U485[I]._fU12 );
        }
        SET_FORCED_AIM_INTENTION_DIRECTION( vVar5 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_BUS_CP_02", "MID_03_BUS_BLEND_OUT_PSTL_FWD_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2_3", "", 0.00000000, 5000, 5000, -1082130432, 0 );
        l_U154 = 2;
        sub_743( "SP", "eFenceBlendoutState = BLENDOUT_FIRST_FRAME", 0 );
        break;
        case 2:
        sub_743( "SP", "eFenceBlendoutState = BLENDOUT_FIRST_FRAME", 0 );
        if ((IS_PED_DEAD( sub_1174() )) == 0)
        {
            uVar4 = sub_38590();
            if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1174(), uVar4, 0, 1 );
            }
        }
        if ((l_U157._fU0 == 0) || (g_U764 < 3))
        {
            g_U764 = 3;
            sub_38898( ref l_U157, g_U764, sub_1174(), g_U2339[3], g_U2466[3], g_U2509[3], g_U2552[3], 1 );
        }
        DO_SCREEN_FADE_IN( 0 );
        if (l_U632 == 0)
        {
            sub_42536( ref l_U1016 );
            sub_42618( 0, sub_1174(), "MAX", ref l_U1016, 2, 0 );
            sub_42618( 1, sub_1174(), "MAX", ref l_U1016, 2, 0 );
            sub_42857( "SBUS_FDMA", ref l_U1016, 8, 1 );
        }
        l_U154 = 3;
        sub_743( "SP", "eFenceBlendoutState = BLENDOUT_PLAYING", 0 );
        break;
        case 3:
        if (l_U657 == 0)
        {
            if (IS_ANIMATED_CAMERA_PLAYING() == 1)
            {
                if (CAMERA_ANIMATED_CURRENT_TIME() >= iVar8)
                {
                    SET_PLAYER_GLOBAL_COMBAT_TIMER_STATE( 0 );
                    SET_CAM_VIEW_MODE( 1 );
                    SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U655, 1065353216, 0 );
                    SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U656, 1065353216, 0 );
                    CAMERA_ANIMATED_STOP( iVar9, 1 );
                    sub_2763( ref l_U668, 100, 1, 0 );
                    sub_2899( ref l_U668 );
                    sub_2763( ref l_U658, iVar9, 1, 0 );
                    sub_2899( ref l_U658 );
                    l_U657 = 1;
                }
            }
        }
        if ((sub_3019( ref l_U668 )) == 1)
        {
            sub_42536( ref l_U1056 );
            sub_42618( 0, sub_1174(), "MAX", ref l_U1056, 2, 0 );
            sub_42618( 1, g_U2595, "GIOVANNA", ref l_U1056, 2, 0 );
            sub_42857( "SBUS_VIG02B", ref l_U1056, 8, 1 );
        }
        if ((sub_3019( ref l_U658 )) == 1)
        {
            sub_43977( 1, 1 );
            RESET_FORCED_AIM_INTENTION_DIRECTION();
            l_U154 = 0;
            sub_743( "SP", "eFenceBlendoutState = BLENDOUT_IDLE", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

void sub_37803()
{
    sub_743( "SP", "P_GLOBAL_CREATE_JUNKYARD_FENCE", 0 );
    sub_6750( g_U2603 );
    g_U2603 = sub_30152( g_U2127, -36.65540000, -63.29410000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U2603 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2603, 1 );
    }
    return;
}

void sub_38042(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

int sub_38590()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1174() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_1174(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_33656( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1174(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_1174(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_1174(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_38898(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_743( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_743( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_10358( iParam1 );
        sub_39157( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_39608( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_39608( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_39840( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_39608( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_39840( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_39840( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_39608( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_39840( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_39840( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_39840( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_39608( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_39840( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_39840( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_39840( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_39840( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_41398( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_743( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_39157(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_7722( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_743( "TEH", "Ending context", 0 );
        sub_743( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_39608(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_39840(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_41398(int iParam0)
{
    sub_9375( "CHECKPOINT DATA" );
    sub_41437( iParam0->_fU4 );
    sub_41460( iParam0->_fU16 );
    sub_41460( iParam0->_fU20 );
    sub_41460( iParam0->_fU24 );
    sub_41503( iParam0->_fU28 );
    sub_41503( iParam0->_fU56 );
    sub_41503( iParam0->_fU60 );
    sub_41503( iParam0->_fU64 );
    sub_41503( iParam0->_fU68 );
    sub_41503( iParam0->_fU72 );
    sub_41503( iParam0->_fU76 );
    sub_41503( iParam0->_fU80 );
    sub_41503( iParam0->_fU84 );
    sub_41503( iParam0->_fU88 );
    sub_41503( iParam0->_fU92 );
    sub_41460( iParam0->_fU32 );
    sub_41503( iParam0->_fU36 );
    sub_41503( iParam0->_fU40 );
    sub_41503( iParam0->_fU44 );
    sub_41460( iParam0->_fU136 );
    sub_41708( iParam0->_fU140 );
    sub_41503( iParam0->_fU52 );
    sub_9375( "---nRightHolsterAttachmentEnabled: " );
    sub_41503( iParam0->_fU96 );
    sub_9375( "---nRightHolsterAttachmentToggled: " );
    sub_41503( iParam0->_fU100 );
    sub_9375( "---nLeftHolsterAttachmentEnabled: " );
    sub_41503( iParam0->_fU104 );
    sub_9375( "---nLeftHolsterAttachmentToggled: " );
    sub_41503( iParam0->_fU108 );
    sub_9375( "---nRifleHolsterAttachmentEnabled: " );
    sub_41503( iParam0->_fU112 );
    sub_9375( "---nRifleHolsterAttachmentToggled: " );
    sub_41503( iParam0->_fU116 );
    sub_9375( "---nRightHandAttachmentEnabled: " );
    sub_41503( iParam0->_fU120 );
    sub_9375( "---nRightHandAttachmentToggled: " );
    sub_41503( iParam0->_fU124 );
    sub_9375( "---nLeftHandAttachmentEnabled: " );
    sub_41503( iParam0->_fU128 );
    sub_9375( "---nLeftHandAttachmentToggled: " );
    sub_41503( iParam0->_fU132 );
    sub_41503( l_U1 );
    sub_41503( 144 );
    return;
}

void sub_41437(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_41460(unknown uParam0)
{
    return;
}

void sub_41503(unknown uParam0)
{
    return;
}

void sub_41708(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_42536(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_42618(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_42857(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_42881( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_42881(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_42936( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_42936(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_42971( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_43465( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_42971(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_43465(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_43977(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1174() )))
    {
        SET_PLAYER_CONTROL( sub_1196(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1174(), 0 );
        if (bParam0)
        {
            sub_44058();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_44058()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1174() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1174(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1174(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1174(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1174(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_44561()
{
    sub_743( "SP", "P_START_SNIPER_PATROL", 0 );
    if (((IS_PED_DEAD( l_U628 )) == 0) AND ((DOES_PED_EXIST( l_U628 )) == 1))
    {
        SET_PED_VISIBLE( l_U628, 1 );
        SET_PED_FREEZE_PROCESSING( l_U628, 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U628, 1 );
        SET_BLOCKING_OF_PED_TARGETTING( l_U628, 1 );
        CLEAR_PED_TASKS( l_U628 );
        TASK_FOLLOW_NAV_MESH_TO_COORD( l_U628, l_U629, 2, -1, 0.25000000, 0, 0 );
    }
    return;
}

void sub_44739()
{
    sub_743( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_743( "CCB", "Starting the Bus_Depot_Fuel_Depot context...", 0 );
    START_CONTEXT( "Bus_Depot_Fuel_Depot" );
    return;
}

void sub_45079()
{
    unknown uVar2;

    if (l_U640 == 0)
    {
        if (((IS_PED_DEAD( l_U628 )) == 1) AND ((DOES_PED_EXIST( l_U628 )) == 1))
        {
            uVar2 = sub_45139( ref l_U603 );
            if (((IS_PED_DEAD( uVar2 )) == 0) AND ((DOES_PED_EXIST( uVar2 )) == 1))
            {
                RESET_PED_TETHERING( uVar2 );
                l_U640 = 1;
            }
        }
        if (((IS_PED_DEAD( l_U628 )) == 0) AND ((DOES_PED_EXIST( l_U628 )) == 1))
        {
            if ((sub_45151( ref l_U603 )) == 0)
            {
                SET_PED_CAN_TRIGGER_BULLET_CAM( l_U628, 1 );
                SET_BULLET_CAM_PREF( l_U628, "PIST_CUSTOM_04_BUS_FUEL", "PIST_CUSTOM_04_BUS_FUEL", "PIST_CUSTOM_04_BUS_FUEL", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                FORCE_PED_TO_USE_DEATH_SUGGESTION_WHEN_SHOT( l_U628, 1, 0, 1, 1, 1 );
                l_U640 = 1;
            }
        }
    }
    return;
}

void sub_45139(unknown uParam0)
{
    int I;

    if ((sub_45151( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_45151(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_45578()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    float fVar5;

    fVar5 = 3.00000000;
    if ((IS_PED_DEAD( sub_1174() )) == 0)
    {
        uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1174() )};
    }
    if ((DOES_OBJECT_EXIST( g_U2606 )) == 1)
    {
        if (((GET_OBJECT_HEALTH( g_U2606 )) == 1000.00000000) AND ((GET_DISTANCE_BETWEEN_COORDS( uVar2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( g_U2606 ), 1 )) <= fVar5))
        {
            SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2606, 0 );
        }
        else
        {
            SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2606, 1 );
        }
    }
    if ((DOES_OBJECT_EXIST( g_U2607 )) == 1)
    {
        if (((GET_OBJECT_HEALTH( g_U2607 )) == 1000.00000000) AND ((GET_DISTANCE_BETWEEN_COORDS( uVar2, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( g_U2607 ), 1 )) <= fVar5))
        {
            SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2607, 0 );
        }
        else
        {
            SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2607, 1 );
        }
    }
    if (l_U835 == 0)
    {
        if ((HAS_SOMETHING_EXPLODED_IN_AREA( g_U2618, 3.00000000 )) == 1)
        {
            sub_45866();
            sub_46445();
            sub_5946( 0 );
            if (l_U836 == 0)
            {
                sub_5410( 0 );
            }
            sub_46595();
            l_U835 = 1;
        }
    }
    if (l_U836 == 0)
    {
        if ((HAS_SOMETHING_EXPLODED_IN_AREA( g_U2621, 3.00000000 )) == 1)
        {
            sub_46903();
            sub_47097();
            sub_5090( 0 );
            if (l_U835 == 0)
            {
                sub_5410( 0 );
            }
            sub_46595();
            l_U836 = 1;
        }
    }
    return;
}

void sub_45866()
{
    float fVar2;
    float fVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    sub_743( "SP", "P_FUEL_PUMP_FAR_EXPLODE", 0 );
    sub_4263( 0, 1 );
    fVar2 = 40.00000000;
    fVar3 = 100.00000000;
    if ((DOES_OBJECT_EXIST( g_U2605 )) == 1)
    {
        uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( g_U2605 )};
        SMASH_GLASS_ON_OBJECT( uVar4, fVar2, g_U2107, fVar3 );
    }
    sub_6750( g_U2605 );
    g_U2605 = sub_30152( g_U2108, -62.13600000, -49.23100000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U2605 )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2605, "P_BD_BusPmp_Ab_Dmgd", "bd_veh", 0.00000000, 0, 1 );
        SMASH_GLASS_ON_OBJECT( uVar4, fVar2, g_U2108, fVar3 );
    }
    DAMAGE_GLASS_IN_RADIUS( uVar4, fVar2, fVar3 );
    SMASH_GLASS_IN_RADIUS( uVar4, fVar2, fVar3 );
    PLAY_SOUND_FROM_COORD( -1, "SBUS_FUEL_DEPOT_BUS_JOLT", uVar4 );
    SET_PAD_SHAKE( 0, 500, 256 );
    SHAKE_GAMEPLAY_CAM( "SMALL_EXPLOSION_SHAKE", 0.20000000 );
    SHAKE_GAMEPLAY_CAM( "VIBRATE_SHAKE", 0.40000000 );
    if ((DOES_OBJECT_EXIST( g_U2610 )) == 1)
    {
        DAMAGE_ALL_GROUPS_ON_OBJECT( g_U2610 );
    }
    if ((DOES_OBJECT_EXIST( g_U2611 )) == 1)
    {
        DAMAGE_ALL_GROUPS_ON_OBJECT( g_U2611 );
    }
    if ((DOES_OBJECT_EXIST( g_U2612 )) == 1)
    {
        DAMAGE_ALL_GROUPS_ON_OBJECT( g_U2612 );
    }
    if ((DOES_OBJECT_EXIST( g_U2613 )) == 1)
    {
        DAMAGE_ALL_GROUPS_ON_OBJECT( g_U2613 );
    }
    if ((DOES_OBJECT_EXIST( g_U2614 )) == 1)
    {
        DAMAGE_ALL_GROUPS_ON_OBJECT( g_U2614 );
    }
    return;
}

void sub_46445()
{
    sub_743( "SP", "P_SWAP_FUEL_PUMP_ISLAND2", 0 );
    sub_6750( g_U2609 );
    g_U2609 = sub_30152( g_U2146, g_U2615, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U2609 ))
    {
        FREEZE_OBJECT_POSITION( g_U2609, 1 );
    }
    return;
}

void sub_46595()
{
    sub_743( "SP", "P_DIAL_GIOVANNA_SCREAM", 0 );
    if (((IS_PED_DEAD( sub_1174() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( 1149970660, "gio", 3 )) == 1)
        {
            if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
            {
                PED_SET_ACTION_INTENTION( g_U2595, 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
                sub_42536( ref l_U1006 );
                sub_42618( 0, sub_1174(), "MAX", ref l_U1006, 2, 0 );
                sub_42618( 1, g_U2595, "GIOVANNA", ref l_U1006, 2, 0 );
                sub_42857( "SBUS_FDGD", ref l_U1006, 7, 1 );
            }
        }
    }
    return;
}

void sub_46903()
{
    sub_743( "SP", "P_FUEL_PUMP_NEAR_EXPLODE", 0 );
    SET_PAD_SHAKE( 0, 500, 256 );
    SHAKE_GAMEPLAY_CAM( "SMALL_EXPLOSION_SHAKE", 0.20000000 );
    SHAKE_GAMEPLAY_CAM( "VIBRATE_SHAKE", 0.40000000 );
    DAMAGE_ALL_GROUPS_ON_OBJECT( g_U2610 );
    DAMAGE_ALL_GROUPS_ON_OBJECT( g_U2611 );
    DAMAGE_ALL_GROUPS_ON_OBJECT( g_U2612 );
    DAMAGE_ALL_GROUPS_ON_OBJECT( g_U2613 );
    DAMAGE_ALL_GROUPS_ON_OBJECT( g_U2614 );
    return;
}

void sub_47097()
{
    sub_743( "SP", "P_SWAP_FUEL_PUMP_ISLAND", 0 );
    sub_6750( g_U2608 );
    g_U2608 = sub_30152( g_U2144, g_U2615, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U2608 ))
    {
        FREEZE_OBJECT_POSITION( g_U2608, 1 );
    }
    return;
}

void sub_47265()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    int iVar5;

    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        uVar2 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 )};
        if (uVar2._fU8 < -1.00000000)
        {
            sub_743( "GA", "Giovanna fell through the floor, resetting back up on the ground.", 0 );
            uVar2._fU8 = l_U466._fU0._fU8;
            SET_PED_COORDS( g_U2595, uVar2, 1 );
        }
    }
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        if ((ISEQ_QUERY_ENTITY_STATE( 1149970660, "gio", 3 )) == 1)
        {
            if ((l_U677._fU16 == 1) || ((sub_3019( ref l_U677 )) == 1))
            {
                if (sub_47534() == 1)
                {
                    PED_SET_ACTION_INTENTION( g_U2595, 49, 500, 0.00000000, 0.00000000, 0.00000000 );
                    if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                    {
                        sub_42536( ref l_U1066 );
                        sub_42618( 1, g_U2595, "GIOVANNA", ref l_U1066, 2, 0 );
                        sub_42618( 0, sub_1174(), "MAX", ref l_U1066, 2, 0 );
                        sub_42857( "SBUS_VIG03P2", ref l_U1066, 8, 1 );
                        sub_2763( ref l_U677, 3000, 1, 0 );
                        sub_2899( ref l_U677 );
                    }
                }
                else if ((HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 6.00000000, ref iVar5 )) == 1)
                {
                    if (iVar5 != sub_1174())
                    {
                        sub_46595();
                        sub_2763( ref l_U677, 3000, 1, 0 );
                        sub_2899( ref l_U677 );
                    }
                }
            }
            if (((l_U677._fU16 == 1) || ((sub_3019( ref l_U677 )) == 1)) AND ((l_U686._fU16 == 1) || ((sub_3019( ref l_U686 )) == 1)))
            {
                if (((IS_PLAYER_FREE_AIMING_AT_PED( sub_1196(), g_U2595 )) == 1) AND ((IS_PLAYER_GUN_RAISED( sub_1196() )) == 1))
                {
                    if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 50, 500, 0.00000000, 0.00000000, 0.00000000 );
                        sub_42536( ref l_U1086 );
                        sub_42618( 0, sub_1174(), "MAX", ref l_U1086, 2, 0 );
                        sub_42618( 1, g_U2595, "GIOVANNA", ref l_U1086, 2, 0 );
                        sub_42857( "SBUS_GVPATH", ref l_U1086, 8, 1 );
                        sub_2763( ref l_U686, 6000, 1, 0 );
                        sub_2899( ref l_U686 );
                    }
                }
            }
        }
    }
    if ((l_U641 == 0) AND (l_U634 == 1))
    {
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            if ((ISEQ_QUERY_ENTITY_STATE( 1149970660, "gio", 3 )) == 1)
            {
                if (((l_U695._fU16 == 1) || ((sub_3019( ref l_U695 )) == 1)) AND ((sub_35543( sub_1174(), l_U233 )) == 1))
                {
                    if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 47, 500, 0.00000000, 0.00000000, 0.00000000 );
                        sub_42536( ref l_U996 );
                        sub_42618( 0, sub_1174(), "MAX", ref l_U996, 2, 0 );
                        sub_42618( 1, g_U2595, "GIOVANNA", ref l_U996, 2, 0 );
                        sub_42857( "SBUS_FDGC", ref l_U996, 7, 1 );
                        sub_2763( ref l_U695, GET_RANDOM_INT_IN_RANGE( 10000, 15000 ), 1, 0 );
                        sub_2899( ref l_U695 );
                    }
                }
            }
        }
    }
    if (l_U643 == 0)
    {
        if ((sub_45151( ref l_U603 )) == 0)
        {
            if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND (((IS_PED_DEAD( l_U628 )) == 1) AND ((DOES_PED_EXIST( l_U628 )) == 1))))
            {
                if ((IS_PED_ON_SCREEN( g_U2595, 0 )) == 0)
                {
                    sub_743( "SP", "Teleporing Giovana so player can see her when she talks", 0 );
                    SET_PED_COORDS( g_U2595, l_U644, 1 );
                    l_U643 = 1;
                }
            }
        }
    }
    return;
}

int sub_47534()
{
    int iVar2;

    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 4.00000000, ref iVar2 ))
        {
            if (iVar2 == sub_1174())
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_48637()
{
    if ((sub_3019( ref l_U849 )) == 1)
    {
        sub_6916( l_U839 );
        sub_7044( l_U838 );
        sub_2763( ref l_U840, GET_RANDOM_INT_IN_RANGE( 6000, 10000 ), 1, 0 );
        sub_2899( ref l_U840 );
    }
    if ((sub_3019( ref l_U840 )) == 1)
    {
        sub_48732();
        sub_2763( ref l_U849, 11000, 1, 0 );
        sub_2899( ref l_U849 );
    }
    return;
}

void sub_48732()
{
    int iVar2;

    sub_743( "SP", "P_FUEL_SPAWN_AMBIENT_DRIVING_CAR", 0 );
    iVar2 = GET_RANDOM_INT_IN_RANGE( 1, 3 );
    if (iVar2 == 1)
    {
        sub_6916( l_U839 );
        sub_7044( l_U838 );
        l_U838 = sub_48856( -1248117174, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( 243, 0.00000000 ), 0.00000000, 0, 0, 0 );
        if (((IS_VEHICLE_DEAD( l_U838 )) == 0) AND ((DOES_VEHICLE_EXIST( l_U838 )) == 1))
        {
            START_PLAYBACK_RECORDED_VEHICLE( l_U838, 243 );
        }
    }
    else
    {
        sub_6916( l_U839 );
        sub_7044( l_U838 );
        l_U838 = sub_48856( -1248117174, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME( 244, 0.00000000 ), 0.00000000, 0, 0, 0 );
        if (((IS_VEHICLE_DEAD( l_U838 )) == 0) AND ((DOES_VEHICLE_EXIST( l_U838 )) == 1))
        {
            START_PLAYBACK_RECORDED_VEHICLE( l_U838, 244 );
        }
    }
    if (((IS_VEHICLE_DEAD( l_U838 )) == 0) AND ((DOES_VEHICLE_EXIST( l_U838 )) == 1))
    {
        sub_6916( l_U839 );
        l_U839 = CREATE_PED_INSIDE_VEHICLE( l_U838, 7, g_U2101, -1, 0, 0 );
        if (((IS_PED_DEAD( l_U839 )) == 0) AND ((DOES_PED_EXIST( l_U839 )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U839, 1 );
            SET_PED_INVINCIBLE( l_U839, 1 );
        }
        SET_VEHICLE_ENGINE_ON( l_U838, 1, 1 );
        SET_VEHICLE_INTERIORLIGHT( l_U838, 0 );
        SET_VEHICLE_LIGHTS( l_U838, 1 );
        SET_VEHICLE_STRONG( l_U838, 1 );
    }
    return;
}

void sub_48856(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_26240( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_49461()
{
    switch (l_U1119)
    {
        case 0:
        sub_743( "CCB", "eFirstThingsFirst - STATE_CHALLENGE_IDLE", 0 );
        l_U1119 = 1;
        break;
        case 1:
        if (NOT (IS_PED_DEAD( l_U628 )))
        {
            if ((sub_49595( ref l_U603 )) >= 1)
            {
                sub_743( "CCB", "The player shot one of the piFuelDepotEnemies peds before killing the piSniperEnemy ped...", 0 );
                sub_743( "CCB", "eFirstThingsFirst - STATE_CHALLENGE_COMPLETE", 0 );
                l_U1119 = 2;
            }
        }
        else
        {
            sub_743( "CCB", "The piSniperEnemy ped is dead...", 0 );
            SCRIPT_VAR_HASH_SET_INT( 160123824, 1 );
            sub_743( "CCB", "eFirstThingsFirst - STATE_CHALLENGE_COMPLETE", 0 );
            l_U1119 = 2;
        }
        break;
        case 2: break;
    }
    return;
}

void sub_49595(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

int sub_50032(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_50044( iParam0 )) == 0)))
    {
        if ((sub_36384() == 1) AND (((IS_PED_RELOADING( sub_1174() )) == 0) AND (((IS_PED_GETTING_UP( sub_1174() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_1174() )) == 0) AND (((IS_PED_IN_COVER( sub_1174() )) == 0) AND (((IS_PED_DUCKING( sub_1174() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_50044(int iParam0)
{
    return iParam0->_fU56;
}

void sub_50343(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_6916( uParam0 );
            }
        }
    }
    return;
}

void sub_50445(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_50343( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

int sub_50518()
{
    if (((IS_PED_DEAD( sub_1174() )) == 0) AND ((IS_PLAYER_DEAD( sub_1196() )) == 0))
    {
        if ((((IS_CONTROL_JUST_PRESSED( 0, 6 )) == 1) || ((IS_CONTROL_PRESSED( 0, 6 )) == 1)) || ((l_U636 == 1) || ((l_U635 == 1) || (l_U634 == 1))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_50694()
{
    unknown uVar2;

    if (((IS_PED_DEAD( sub_1174() )) == 0) AND (((IS_PED_DEAD( l_U628 )) == 0) AND ((DOES_PED_EXIST( l_U628 )) == 1)))
    {
        if (((sub_3019( ref l_U722 )) == 1) || ((HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1174() ), 10.00000000, 0, ref uVar2 )) || (((VDIST( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1174() ), -37.10000000, -63.31000000, 0.00000000 )) > 7.00000000) || ((IS_PED_ON_SCREEN( l_U628, 0 )) == 1))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_51035()
{
    unknown uVar2;

    sub_743( "SP", "P_SNIPER_REACT_TO_MAX", 0 );
    if (((IS_PED_DEAD( sub_1174() )) == 0) AND (((IS_PED_DEAD( l_U628 )) == 0) AND ((DOES_PED_EXIST( l_U628 )) == 1)))
    {
        sub_51139( l_U628, sub_1174() );
        CLEAR_PED_TASKS( l_U628 );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_REACT_INITIAL( 0, sub_1174() );
        TASK_AIM_GUN_AT_PED( 0, sub_1174(), -1, 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U628, uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    return;
}

void sub_51139(unknown uParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND (((DOES_PED_EXIST( uParam0 )) == 1) AND (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))))
    {
        CLEAR_LOCKED_TARGET( uParam0 );
        REGISTER_TARGET( uParam0, uParam1 );
        SET_LOCKED_TARGET( uParam0, uParam1 );
    }
    return;
}

void sub_51508()
{
    unknown uVar2;

    sub_743( "SP", "P_SNIPER_LASER_ON", 0 );
    if (((IS_PED_DEAD( l_U628 )) == 0) AND ((DOES_PED_EXIST( l_U628 )) == 1))
    {
        uVar2 = GET_WEAPON_FROM_HAND( l_U628, 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            ENABLE_WEAPON_ATTACHMENT( uVar2, 13, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uVar2, 13, 1 );
            SET_LASER_SIGHT_ATTACHMENT( uVar2, -938171172 );
        }
    }
    return;
}

void sub_51675()
{
    sub_743( "SP", "P_SNIPER_SHOOT_AT_MAX", 0 );
    if (((IS_PED_DEAD( sub_1174() )) == 0) AND (((IS_PED_DEAD( l_U628 )) == 0) AND ((DOES_PED_EXIST( l_U628 )) == 1)))
    {
        SET_PED_COMBAT_RANGE_MIN( l_U628, 3.00000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U628, 120.00000000 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U628, 0 );
        SET_BLOCKING_OF_PED_TARGETTING( l_U628, 0 );
        sub_51139( l_U628, sub_1174() );
        CLEAR_PED_TASKS( l_U628 );
        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( l_U628, l_U629, sub_1174(), 1, 50.00000000, 50.00000000, -1, 2 );
    }
    return;
}

void sub_51930(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_35543( sub_1174(), uParam0 );
}

void sub_51999()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    sub_743( "SP", "P_ACTIVATE_GATEHOUSE_ENEMIES", 0 );
    if ((IS_PED_DEAD( sub_1174() )) == 0)
    {
        if (((IS_PED_DEAD( l_U603[0] )) == 0) AND ((DOES_PED_EXIST( l_U603[0] )) == 1))
        {
            SET_PED_VISIBLE( l_U603[0], 1 );
            SET_PED_FREEZE_PROCESSING( l_U603[0], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U603[0], 0 );
            SET_BLOCKING_OF_PED_TARGETTING( l_U603[0], 0 );
            SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U603[0], 0 );
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_ATTACK_MOVE( 0, -76.26000000, -60.74000000, 0.10000000, 1092616192, 1101004800, -1082130432, 3 );
            TASK_COMBAT_PED( 0, sub_1174() );
            CLOSE_SEQUENCE_TASK( uVar2 );
            CLEAR_PED_TASKS( l_U603[0] );
            TASK_PERFORM_SEQUENCE( l_U603[0], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        if (((IS_PED_DEAD( l_U603[1] )) == 0) AND ((DOES_PED_EXIST( l_U603[1] )) == 1))
        {
            SET_PED_VISIBLE( l_U603[1], 1 );
            SET_PED_FREEZE_PROCESSING( l_U603[1], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U603[1], 0 );
            SET_BLOCKING_OF_PED_TARGETTING( l_U603[1], 0 );
            SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U603[1], 0 );
            OPEN_SEQUENCE_TASK( ref uVar3 );
            TASK_ATTACK_MOVE( 0, -73.02000000, -62.71000000, 0.10000000, 1092616192, 1101004800, -1082130432, 3 );
            TASK_COMBAT_PED( 0, sub_1174() );
            CLOSE_SEQUENCE_TASK( uVar3 );
            CLEAR_PED_TASKS( l_U603[1] );
            TASK_PERFORM_SEQUENCE( l_U603[1], uVar3 );
            CLEAR_SEQUENCE_TASK( uVar3 );
        }
        if (((IS_PED_DEAD( l_U603[8] )) == 0) AND ((DOES_PED_EXIST( l_U603[8] )) == 1))
        {
            SET_PED_VISIBLE( l_U603[8], 1 );
            SET_PED_FREEZE_PROCESSING( l_U603[8], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U603[8], 0 );
            SET_BLOCKING_OF_PED_TARGETTING( l_U603[8], 0 );
            SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U603[8], 0 );
            OPEN_SEQUENCE_TASK( ref uVar4 );
            TASK_ATTACK_MOVE( 0, -73.22000000, -64.33000000, 0.10000000, 1092616192, 1101004800, -1082130432, 3 );
            TASK_COMBAT_PED( 0, sub_1174() );
            CLOSE_SEQUENCE_TASK( uVar4 );
            CLEAR_PED_TASKS( l_U603[8] );
            TASK_PERFORM_SEQUENCE( l_U603[8], uVar4 );
            CLEAR_SEQUENCE_TASK( uVar4 );
        }
    }
    return;
}

void sub_52882()
{
    sub_743( "SP", "P_DEPOT_ENEMIES_ATTACK", 0 );
    if (((IS_PED_DEAD( l_U603[4] )) == 0) AND ((DOES_PED_EXIST( l_U603[4] )) == 1))
    {
        SET_PED_VISIBLE( l_U603[4], 1 );
        SET_PED_FREEZE_PROCESSING( l_U603[4], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U603[4], 0 );
        SET_BLOCKING_OF_PED_TARGETTING( l_U603[4], 0 );
        CLEAR_PED_TASKS( l_U603[4] );
        TASK_GO_STRAIGHT_TO_COORD( l_U603[4], -61.56000000, -42.96000000, 0.00000000, 3, 20000 );
    }
    if (((IS_PED_DEAD( l_U603[6] )) == 0) AND ((DOES_PED_EXIST( l_U603[6] )) == 1))
    {
        SET_PED_VISIBLE( l_U603[6], 1 );
        SET_PED_FREEZE_PROCESSING( l_U603[6], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U603[6], 0 );
        SET_BLOCKING_OF_PED_TARGETTING( l_U603[6], 0 );
        CLEAR_PED_TASKS( l_U603[6] );
        TASK_GO_STRAIGHT_TO_COORD( l_U603[6], -62.31000000, -43.92000000, 0.00000000, 3, 20000 );
    }
    if (l_U638 == 0)
    {
        if (((IS_PED_DEAD( l_U603[2] )) == 0) AND ((DOES_PED_EXIST( l_U603[2] )) == 1))
        {
            SET_PED_VISIBLE( l_U603[2], 1 );
            SET_PED_FREEZE_PROCESSING( l_U603[2], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U603[2], 0 );
            SET_BLOCKING_OF_PED_TARGETTING( l_U603[2], 0 );
            TASK_COMBAT_MOVE_TO_COVER_TACTICAL( l_U603[2], "GenCover", "32DD0D45_D9BED6FE_Corner2", 1, sub_1174() );
        }
        if (((IS_PED_DEAD( l_U603[3] )) == 0) AND ((DOES_PED_EXIST( l_U603[3] )) == 1))
        {
            SET_PED_VISIBLE( l_U603[3], 1 );
            SET_PED_FREEZE_PROCESSING( l_U603[3], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U603[3], 0 );
            SET_BLOCKING_OF_PED_TARGETTING( l_U603[3], 0 );
            TASK_COMBAT_MOVE_TO_COVER_TACTICAL( l_U603[3], "GenCover", "32DD0D45_D9BED6FE_Corner2", 0, sub_1174() );
        }
        l_U638 = 1;
    }
    if (((IS_PED_DEAD( l_U603[5] )) == 0) AND ((DOES_PED_EXIST( l_U603[5] )) == 1))
    {
        SET_PED_VISIBLE( l_U603[5], 1 );
        SET_PED_FREEZE_PROCESSING( l_U603[5], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U603[5], 0 );
        SET_BLOCKING_OF_PED_TARGETTING( l_U603[5], 0 );
    }
    if (((IS_PED_DEAD( l_U603[7] )) == 0) AND ((DOES_PED_EXIST( l_U603[7] )) == 1))
    {
        SET_PED_VISIBLE( l_U603[7], 1 );
        SET_PED_FREEZE_PROCESSING( l_U603[7], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U603[7], 0 );
        SET_BLOCKING_OF_PED_TARGETTING( l_U603[7], 0 );
    }
    return;
}

void sub_53800()
{
    int I;

    sub_743( "SP", "P_START_FUEL_ENEMIES_GROUP_ADVANCE", 0 );
    l_U614 = PEDGROUPTASK_ADVANCE_CREATE( l_U479._fU0 );
    for ( I = 0; I < l_U603; I++ )
    {
        if ((I != 7) AND ((I != 5) AND ((I != 3) AND (I != 2))))
        {
            if (((IS_PED_DEAD( sub_1174() )) == 0) AND (((IS_PED_DEAD( l_U603[I] )) == 0) AND ((DOES_PED_EXIST( l_U603[I] )) == 1)))
            {
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U603[I], 0 );
                SET_BLOCKING_OF_PED_TARGETTING( l_U603[I], 0 );
                REGISTER_TARGET( l_U603[I], sub_1174() );
                PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U479._fU0, l_U614, l_U603[I] );
            }
        }
    }
    if ((IS_PED_DEAD( sub_1174() )) == 0)
    {
        PEDGROUPTASK_ADVANCE_SETTARGET_PED( l_U479._fU0, l_U614, sub_1174() );
    }
    PEDGROUPTASK_ADVANCE_SETTIMETOHIDE( l_U479._fU0, l_U614, l_U830 );
    PEDGROUPTASK_ADVANCE_SETTIMETOIDLE( l_U479._fU0, l_U614, l_U831 );
    PEDGROUPTASK_ADVANCE_SETTIMERANGEFORALLPEDSTOSTARTFIRING( l_U479._fU0, l_U614, l_U832 );
    PEDGROUPTASK_ADVANCE_SETADVANCEDISTANCE( l_U479._fU0, l_U614, l_U833 );
    PEDGROUPTASK_ADVANCE_SETNUMPEDSTOADVANCE( l_U479._fU0, l_U614, l_U834 );
    PEDGROUPTASK_ADVANCE_TRIGGER_MOVE( l_U479._fU0, l_U614 );
    return;
}

void sub_54949(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_35543( sub_1174(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_55556(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (((IS_PED_DEAD( (uParam0^)[I] )) == 0) AND ((DOES_PED_EXIST( (uParam0^)[I] )) == 1))
        {
            Result++;
        }
    }
    return Result;
}

void sub_55668(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_55735(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_55766( (uParam0^)[I] );
    }
    return;
}

void sub_55766(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_56232()
{
    sub_56246( ref l_U1120 );
    l_U1120[0]._fU4 = "DOUBLE_TINT_BLUE_FLASH_LONG";
    l_U1120[0]._fU12 = 0;
    l_U1120[0]._fU24 = 1;
    l_U1120[0]._fU28 = 0;
    l_U1120[0]._fU16 = 400;
    l_U1120[0]._fU8 = 4;
    l_U1120[0]._fU32 = 0;
    l_U1120[1]._fU4 = "INTERLACE_LIGHT";
    l_U1120[1]._fU12 = 100;
    l_U1120[1]._fU28 = 1;
    l_U1120[1]._fU8 = 4;
    l_U1120[1]._fU32 = 0;
    l_U1120[2]._fU4 = "DOUBLE_STATIC_UP_R_FAST_SCALE";
    l_U1120[2]._fU12 = 300;
    l_U1120[2]._fU28 = 1;
    l_U1120[2]._fU8 = 4;
    l_U1120[2]._fU32 = 0;
    l_U72 = 0;
    return;
}

void sub_56246(unknown uParam0)
{
    int I;

    sub_743( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

void sub_56693()
{
    sub_743( "SP", "P_RESET_CONTEXTUAL_DIALOGUE", 0 );
    l_U147 = 0;
    l_U148 = 0;
    l_U93 = 0;
    l_U149 = 0;
    sub_3556( ref l_U75 );
    sub_3556( ref l_U84 );
    return;
}

void sub_56919()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    float fVar6;
    float fVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (l_U147 == 0)
    {
        sub_2763( ref l_U75, 6000, 1, 0 );
        sub_2899( ref l_U75 );
        l_U147 = 1;
    }
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD( sub_1174() )) == 0)))
    {
        if (((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)))
        {
            if ((l_U75._fU16 == 1) || ((sub_3019( ref l_U75 )) == 1))
            {
                if ((IS_PLAYER_SHOOTDODGING() == 1) AND ((CAN_PED_SEE_OTHER_PED( g_U2595, sub_1174(), 110.00000000, 15.00000000 )) == 1))
                {
                    sub_42536( ref l_U94 );
                    sub_42618( 0, sub_1174(), "MAX", ref l_U94, 2, 0 );
                    sub_42618( 1, g_U2595, "GIOVANNA", ref l_U94, 2, 0 );
                    sub_42857( "SBUS_GVPMAR", ref l_U94, 7, 1 );
                    sub_2763( ref l_U75, 6000, 1, 0 );
                    sub_2899( ref l_U75 );
                }
                if ((HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 30.00000000, ref iVar2 )) == 1)
                {
                    if (iVar2 == sub_1174())
                    {
                        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_BULLET_IMPACT_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 30.00000000, ref iVar2 )};
                        fVar6 = VDIST( uVar3, 0.00000000, 0.00000000, 0.00000000 );
                        if (fVar6 > 0.00000000)
                        {
                            fVar7 = VDIST( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ) );
                            if (fVar7 > 8.00000000)
                            {
                                sub_42536( ref l_U104 );
                                sub_42618( 0, sub_1174(), "MAX", ref l_U104, 2, 0 );
                                sub_42618( 1, g_U2595, "GIOVANNA", ref l_U104, 2, 0 );
                                sub_42857( "SBUS_GVPSC", ref l_U104, 7, 1 );
                                sub_2763( ref l_U75, 6000, 1, 0 );
                                sub_2899( ref l_U75 );
                            }
                        }
                    }
                }
            }
        }
    }
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD( sub_1174() )) == 0)))
    {
        if (((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)))
        {
            uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1174() )};
            if ((VDIST( uVar8, l_U144 )) > 0.10000000)
            {
                sub_3556( ref l_U84 );
            }
            else if ((l_U84._fU16 == 0) AND (l_U84._fU20 == 0))
            {
                sub_2763( ref l_U84, 35000, 1, 0 );
                sub_2899( ref l_U84 );
            }
            if ((l_U84._fU16 == 1) || ((sub_3019( ref l_U84 )) == 1))
            {
                if (l_U93 < 6)
                {
                    if ((l_U150 == 0) AND (g_U764 == 6))
                    {
                        sub_42536( ref l_U124 );
                        sub_42618( 0, sub_1174(), "MAX", ref l_U124, 2, 0 );
                        sub_42618( 1, sub_1174(), "MAX", ref l_U124, 2, 0 );
                        sub_42857( "SBUS_MJDBPBB", ref l_U124, 7, 1 );
                        l_U150 = 1;
                    }
                    else
                    {
                        sub_42536( ref l_U114 );
                        sub_42618( 0, sub_1174(), "MAX", ref l_U114, 2, 0 );
                        sub_42618( 1, g_U2595, "GIOVANNA", ref l_U114, 2, 0 );
                        sub_42857( "SBUS_GVPSD", ref l_U114, 7, 1 );
                    }
                    sub_2763( ref l_U84, 35000, 1, 0 );
                    sub_2899( ref l_U84 );
                    l_U93++;
                }
            }
            l_U144 = {uVar8};
        }
    }
    if (l_U148 == 0)
    {
        l_U149 = GET_PAYNEKILLER_AMT();
        l_U148 = 1;
    }
    if (l_U149 < GET_PAYNEKILLER_AMT())
    {
        if ((sub_58080() == 0) AND ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND ((IS_PED_DEAD( sub_1174() )) == 0))))))
        {
            sub_743( "SP", "Playing Pills Monologue", 0 );
            sub_42536( ref l_U134 );
            sub_42618( 0, sub_1174(), "MAX", ref l_U134, 2, 0 );
            sub_42618( 1, sub_1174(), "MAX", ref l_U134, 2, 0 );
            sub_42857( "SBUS_MFSFPLS", ref l_U134, 7, 1 );
        }
    }
    l_U149 = GET_PAYNEKILLER_AMT();
    return;
}

void sub_58080()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_58380(unknown uParam0)
{
    int I;
    int J;

    switch (l_U72)
    {
        case 0:
        sub_743( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                sub_2763( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                sub_2899( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U72 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (sub_3019( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                    sub_2763( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                    sub_2899( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                            sub_2763( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                            sub_2899( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if (sub_3019( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

void sub_59507(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

void sub_60747(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_6433( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_61015(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_6433( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_61230(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_6433( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_61438(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_6433( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

int sub_61703()
{
    if (l_U1202 == 0)
    {
        START_WIDGET_GROUP( "Newspaper Helper" );
        START_WIDGET_GROUP( "Animated Camera" );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos X", ref l_U1203._fU0, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos Y", ref l_U1203._fU4, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos Z", ref l_U1203._fU8, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Heading", ref l_U1206, -360.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U1202 = 1;
    }
    switch (l_U156)
    {
        case 0: break;
        case 1:
        sub_743( "SP", "eNewspaperNISState = NIS_SETUP", 0 );
        sub_2041( 1, 0, 0, 1 );
        CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_25_F_CAM", 1, l_U1203, l_U1206, 0, 0 );
        if (((IS_PED_DEAD( sub_1174() )) == 0) AND ((IS_PLAYER_DEAD( sub_1196() )) == 0))
        {
            SET_PED_VISIBLE( sub_1174(), 0 );
        }
        l_U156 = 2;
        sub_743( "SP", "eNewspaperNISState = NIS_FIRST_FRAME", 0 );
        break;
        case 2:
        sub_743( "SP", "eNewspaperNISState = NIS_FIRST_FRAME", 0 );
        if ((HAS_EXPLORATION_ITEM_BEEN_FOUND( "sbus_Newspaper" )) == 0)
        {
            sub_62326( 0 );
            sub_42536( ref l_U1096 );
            sub_42618( 0, sub_1174(), "MAX", ref l_U1096, 2, 0 );
            sub_42618( 1, sub_1174(), "MAX", ref l_U1096, 2, 0 );
            sub_42857( "SBUS_MNSPNSP", ref l_U1096, 8, 1 );
            FOUND_EXPLORATION_ITEM( "sbus_Newspaper" );
            sub_2763( ref l_U945, l_U954, 1, 0 );
            sub_2899( ref l_U945 );
        }
        else
        {
            sub_2763( ref l_U945, l_U955, 1, 0 );
            sub_2899( ref l_U945 );
        }
        l_U156 = 3;
        sub_743( "SP", "eNewspaperNISState = NIS_PLAYING", 0 );
        break;
        case 3:
        if ((sub_3019( ref l_U945 )) == 1)
        {
            sub_43977( 1, 1 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            if (((IS_PED_DEAD( sub_1174() )) == 0) AND ((IS_PLAYER_DEAD( sub_1196() )) == 0))
            {
                SET_PED_VISIBLE( sub_1174(), 1 );
            }
            l_U156 = 0;
            sub_743( "SP", "eNewspaperNISState = NIS_IDLE", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

void sub_62326(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_63168()
{
    sub_743( "SP", "P_EARLY_MODEL_CLEAN", 0 );
    sub_6882( ref l_U603 );
    sub_6916( l_U628 );
    sub_6750( g_U2603 );
    sub_6750( g_U2607 );
    sub_6750( g_U2606 );
    sub_60747( g_U2127, ref g_U910 );
    sub_60747( g_U2128, ref g_U910 );
    sub_60747( g_U2143, ref g_U910 );
    sub_60747( g_U2144, ref g_U910 );
    sub_60747( g_U2145, ref g_U910 );
    sub_60747( g_U2146, ref g_U910 );
    sub_60747( g_U2107, ref g_U910 );
    sub_60747( g_U2108, ref g_U910 );
    sub_63381( g_U2858, ref g_U1211 );
    sub_61015( "LEVEL_S_BUS_PUMP", ref g_U1369 );
    sub_61015( "LEVEL_S_BUS_CP_02", ref g_U1369 );
    return;
}

void sub_63381(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_6433( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_63632()
{
    sub_743( "SP", "P_AGRESSIVE_MODEL_CLEAN", 0 );
    sub_6750( g_U2608 );
    sub_6750( g_U2609 );
    sub_6750( g_U2605 );
    sub_60747( g_U2107, ref g_U910 );
    sub_60747( g_U2143, ref g_U910 );
    sub_60747( g_U2145, ref g_U910 );
    sub_60747( g_U2144, ref g_U910 );
    sub_60747( g_U2146, ref g_U910 );
    sub_60747( g_U2108, ref g_U910 );
    sub_63381( g_U2858, ref g_U1211 );
    sub_61015( "LEVEL_S_BUS_PUMP", ref g_U1369 );
    sub_61015( "LEVEL_S_BUS_CP_02", ref g_U1369 );
    return;
}

void sub_64148()
{
    sub_743( "SP", "P_UNLOAD_ASSETS", 0 );
    sub_60747( g_U2127, ref g_U910 );
    sub_60747( g_U2109, ref g_U910 );
    sub_60747( g_U2128, ref g_U910 );
    sub_60747( g_U2143, ref g_U910 );
    sub_60747( g_U2144, ref g_U910 );
    sub_60747( g_U2145, ref g_U910 );
    sub_60747( g_U2146, ref g_U910 );
    sub_60747( g_U2108, ref g_U910 );
    sub_60747( g_U2147, ref g_U910 );
    sub_60747( g_U2107, ref g_U910 );
    sub_60747( -1248117174, ref g_U910 );
    sub_60747( -552056859, ref g_U910 );
    sub_60747( -1409914275, ref g_U910 );
    sub_63381( g_U2858, ref g_U1211 );
    sub_61015( ref g_U1912, ref g_U1369 );
    sub_61015( ref g_U1984, ref g_U1369 );
    sub_61015( ref g_U1992, ref g_U1369 );
    sub_61015( ref g_U2000, ref g_U1369 );
    sub_6321( -1381237590, ref g_U1272 );
    sub_6321( 1149970660, ref g_U1272 );
    sub_61230( 243, ref g_U1474 );
    sub_61230( 244, ref g_U1474 );
    sub_61438( "SCRIPT_MISSION\S_BUSDEP_RS_STANDOFF", ref g_U1757 );
    return;
}

